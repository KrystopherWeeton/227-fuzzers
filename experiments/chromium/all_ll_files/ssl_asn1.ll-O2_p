; ModuleID = '../../third_party/boringssl/src/ssl/ssl_asn1.cc'
source_filename = "../../third_party/boringssl/src/ssl/ssl_asn1.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array.40", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", i8, %"class.bssl::Array.40" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.14 }
%union.anon.14 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.stack_st_X509 = type opaque
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.crypto_buffer_st* }
%"class.bssl::Array.40" = type { i8*, i64 }
%struct.cbs_st = type { i8*, i64 }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.4", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15", i8, [32 x i8], %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.9", %struct.ssl_private_key_method_st* }
%"class.bssl::Array" = type { i16*, i64 }
%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.70", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.113", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.0", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array.40"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array.40"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_CONFIG"* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.35", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.0", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.4", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.9", %"class.bssl::Array.40", %"class.bssl::GrowableArray", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array", %"class.std::__1::unique_ptr.42", i8, i16, [5 x i8] }>
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.28", i8* }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.bssl::CERT"* }
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.stack_st_X509_NAME = type opaque
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.41" }
%"class.bssl::Array.41" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array.40", %"class.bssl::Array.40" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.80, i16, [2 x i8], %"class.std::__1::unique_ptr.81", [2 x %"class.std::__1::unique_ptr.86"], %"class.bssl::SSLTranscript", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.40", i16, [6 x i8], %"class.bssl::internal::StackAllocated.97", %"class.bssl::Array.40", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %struct.stack_st_X509_NAME*, %"class.bssl::Array.40", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.60", %struct.ssl_cipher_st*, %"class.bssl::Array.40", %"class.std::__1::unique_ptr.98", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%union.anon.80 = type { i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.91", %"class.bssl::internal::StackAllocated.96" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %struct.buf_mem_st* }
%"class.bssl::internal::StackAllocated.96" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::internal::StackAllocated.97" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray.63", i32, [4 x i8] }>
%"class.bssl::GrowableArray.63" = type { i64, %"class.bssl::Array.64" }
%"class.bssl::Array.64" = type { %"class.std::__1::unique_ptr.65"*, i64 }
%"class.std::__1::unique_ptr.65" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array.40", i16, [6 x i8], %"class.bssl::Array.40", %"class.bssl::Array.40", i16, [6 x i8], %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.bssl::Array.40", i8, [7 x i8] }>
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.81", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.103", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr", %"class.bssl::Array.40", %"class.bssl::Array.40", %"class.std::__1::unique_ptr.0", [64 x i8], %"class.bssl::Array.40", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr.47", [7 x %"class.std::__1::unique_ptr.108"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.25", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.4", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.35", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.0", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array.40", %"class.std::__1::unique_ptr.42", %"class.bssl::GrowableArray.58", %"class.bssl::Array", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.60", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array", i16, [6 x i8] }>
%struct.lhash_st_SSL_SESSION = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.bssl::GrowableArray.58" = type { i64, %"class.bssl::Array.59" }
%"class.bssl::Array.59" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.15", i16, %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %struct.evp_pkey_st* }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%struct.crypto_buffer_pool_st = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%"class.bssl::internal::StackAllocated.118" = type { %struct.cbb_st }

$_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_ = comdat any

@.str = private unnamed_addr constant [48 x i8] c"../../third_party/boringssl/src/ssl/ssl_asn1.cc\00", align 1
@_ZZ20SSL_SESSION_to_bytesE20kNotResumableSession = internal constant [14 x i8] c"NOT RESUMABLE\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/internal.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @_ZN4bssl17SSL_SESSION_parseEP6cbs_stPKNS_15SSL_X509_METHODEP21crypto_buffer_pool_st(%struct.cbs_st*, %"struct.bssl::SSL_X509_METHOD"*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %struct.cbs_st, align 8
  %15 = alloca %struct.cbs_st, align 8
  %16 = alloca %struct.cbs_st, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i16, align 2
  %20 = alloca %struct.cbs_st, align 8
  %21 = alloca i16, align 2
  %22 = alloca %struct.cbs_st, align 8
  %23 = alloca %struct.cbs_st, align 8
  %24 = alloca %struct.cbs_st, align 8
  %25 = alloca i64, align 8
  %26 = alloca %struct.cbs_st, align 8
  %27 = alloca i32, align 4
  %28 = alloca %struct.cbs_st, align 8
  %29 = alloca %struct.cbs_st, align 8
  %30 = alloca i32, align 4
  %31 = alloca %struct.cbs_st, align 8
  %32 = alloca i32, align 4
  %33 = alloca %struct.cbs_st, align 8
  %34 = alloca %struct.cbs_st, align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca %struct.cbs_st, align 8
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = tail call %struct.ssl_session_st* @_ZN4bssl15ssl_session_newEPKNS_15SSL_X509_METHODE(%"struct.bssl::SSL_X509_METHOD"* %1) #5
  %42 = ptrtoint %struct.ssl_session_st* %41 to i64
  %43 = icmp eq %struct.ssl_session_st* %41, null
  br i1 %43, label %613, label %44

44:                                               ; preds = %3
  %45 = bitcast %struct.cbs_st* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #5
  %46 = bitcast i64* %17 to i8*
  %47 = bitcast %struct.cbs_st* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #5
  store i64 -6148914691236517206, i64* %17, align 8
  %48 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #5
  store i64 -6148914691236517206, i64* %18, align 8
  %49 = bitcast i16* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %49) #5
  store i16 -21846, i16* %19, align 2
  %50 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %16, i32 536870928) #5
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %67, label %52

52:                                               ; preds = %44
  %53 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %16, i64* nonnull %17) #5
  %54 = icmp eq i32 %53, 0
  %55 = load i64, i64* %17, align 8
  %56 = icmp ne i64 %55, 1
  %57 = or i1 %54, %56
  br i1 %57, label %67, label %58

58:                                               ; preds = %52
  %59 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %16, i64* nonnull %18) #5
  %60 = icmp eq i32 %59, 0
  %61 = load i64, i64* %18, align 8
  %62 = icmp ugt i64 %61, 65535
  %63 = or i1 %60, %62
  br i1 %63, label %67, label %64

64:                                               ; preds = %58
  %65 = trunc i64 %61 to i16
  %66 = call zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16* nonnull %19, i16 zeroext %65) #5
  br i1 %66, label %68, label %67

67:                                               ; preds = %44, %58, %52, %64
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 576) #5
  br label %610

68:                                               ; preds = %64
  %69 = load i64, i64* %18, align 8
  %70 = trunc i64 %69 to i16
  %71 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 1
  store i16 %70, i16* %71, align 4
  %72 = bitcast %struct.cbs_st* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #5
  %73 = bitcast i16* %21 to i8*
  %74 = bitcast %struct.cbs_st* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %73) #5
  store i16 -21846, i16* %21, align 2
  %75 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %20, i32 4) #5
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %68
  %78 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %20, i16* nonnull %21) #5
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %77
  %81 = call i64 @CBS_len(%struct.cbs_st* nonnull %20) #5
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %80, %77, %68
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 586) #5
  br label %607

84:                                               ; preds = %80
  %85 = load i16, i16* %21, align 2
  %86 = call %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext %85) #5
  %87 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 20
  store %struct.ssl_cipher_st* %86, %struct.ssl_cipher_st** %87, align 8
  %88 = icmp eq %struct.ssl_cipher_st* %86, null
  br i1 %88, label %89, label %90

89:                                               ; preds = %84
  call void @ERR_put_error(i32 16, i32 0, i32 237, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 591) #5
  br label %607

90:                                               ; preds = %84
  %91 = bitcast %struct.cbs_st* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #5
  %92 = bitcast %struct.cbs_st* %23 to i8*
  %93 = bitcast %struct.cbs_st* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #5
  %94 = bitcast %struct.cbs_st* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 16, i1 false)
  %95 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %22, i32 4) #5
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %106, label %97

97:                                               ; preds = %90
  %98 = call i64 @CBS_len(%struct.cbs_st* nonnull %22) #5
  %99 = icmp ugt i64 %98, 32
  br i1 %99, label %106, label %100

100:                                              ; preds = %97
  %101 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %23, i32 4) #5
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = call i64 @CBS_len(%struct.cbs_st* nonnull %23) #5
  %105 = icmp ugt i64 %104, 48
  br i1 %105, label %106, label %107

106:                                              ; preds = %100, %90, %103, %97
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 600) #5
  br label %604

107:                                              ; preds = %103
  %108 = call i8* @CBS_data(%struct.cbs_st* nonnull %22) #5
  %109 = call i64 @CBS_len(%struct.cbs_st* nonnull %22) #5
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 7, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %112, i8* align 1 %108, i64 %109, i1 false) #5
  br label %113

113:                                              ; preds = %107, %111
  %114 = call i64 @CBS_len(%struct.cbs_st* nonnull %22) #5
  %115 = trunc i64 %114 to i32
  %116 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 6
  store i32 %115, i32* %116, align 8
  %117 = call i8* @CBS_data(%struct.cbs_st* nonnull %23) #5
  %118 = call i64 @CBS_len(%struct.cbs_st* nonnull %23) #5
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 5, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %121, i8* align 1 %117, i64 %118, i1 false) #5
  br label %122

122:                                              ; preds = %113, %120
  %123 = call i64 @CBS_len(%struct.cbs_st* nonnull %23) #5
  %124 = trunc i64 %123 to i32
  %125 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 4
  store i32 %124, i32* %125, align 4
  %126 = bitcast %struct.cbs_st* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #5
  %127 = bitcast i64* %25 to i8*
  %128 = bitcast %struct.cbs_st* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #5
  store i64 -6148914691236517206, i64* %25, align 8
  %129 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %24, i32 -1610612735) #5
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %144, label %131

131:                                              ; preds = %122
  %132 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 19
  %133 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %24, i64* %132) #5
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %144, label %135

135:                                              ; preds = %131
  %136 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %24, i32 -1610612734) #5
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %24, i64* nonnull %25) #5
  %140 = icmp eq i32 %139, 0
  %141 = load i64, i64* %25, align 8
  %142 = icmp ugt i64 %141, 4294967295
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145

144:                                              ; preds = %135, %131, %122, %138
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 615) #5
  br label %601

145:                                              ; preds = %138
  %146 = trunc i64 %141 to i32
  %147 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 17
  store i32 %146, i32* %147, align 8
  %148 = bitcast %struct.cbs_st* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #5
  %149 = bitcast i32* %27 to i8*
  %150 = bitcast %struct.cbs_st* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #5
  store i32 -1431655766, i32* %27, align 4
  %151 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %26, i32* nonnull %27, i32 -1610612733) #5
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %145
  %154 = load i32, i32* %27, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %160, label %156

156:                                              ; preds = %153
  %157 = call i64 @CBS_len(%struct.cbs_st* nonnull %26) #5
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %145, %156
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 625) #5
  br label %598

160:                                              ; preds = %153, %156
  %161 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 9, i64 0
  %162 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 8
  %163 = call fastcc i32 @_ZN4bsslL38SSL_SESSION_parse_bounded_octet_stringEP6cbs_stPhS2_hj(%struct.cbs_st* nonnull %16, i8* %161, i8* %162, i8 zeroext 32, i32 -1610612732)
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %598, label %165

165:                                              ; preds = %160
  %166 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #5
  store i64 -6148914691236517206, i64* %11, align 8
  %167 = call i32 @CBS_get_optional_asn1_uint64(%struct.cbs_st* nonnull %16, i64* nonnull %11, i32 -1610612731, i64 0) #5
  %168 = icmp eq i32 %167, 0
  %169 = load i64, i64* %11, align 8
  %170 = icmp slt i64 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173

172:                                              ; preds = %165
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 522) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #5
  br label %598

173:                                              ; preds = %165
  %174 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 16
  store i64 %169, i64* %174, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #5
  %175 = bitcast %struct.cbs_st* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #5
  %176 = bitcast %struct.cbs_st* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 -86, i64 16, i1 false)
  %177 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %28, i32* null, i32 -1610612730) #5
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %173
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 642) #5
  br label %595

180:                                              ; preds = %173
  %181 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 10
  %182 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #5
  %183 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 16, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %183) #5
  store i32 -1431655766, i32* %8, align 4
  %184 = call i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %7, i32* nonnull %8, i32 -1610612728) #5
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 445) #5
  br label %213

187:                                              ; preds = %180
  %188 = load i32, i32* %8, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %208, label %190

190:                                              ; preds = %187
  %191 = call i32 @CBS_contains_zero_byte(%struct.cbs_st* nonnull %7) #5
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %194, label %193

193:                                              ; preds = %190
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 450) #5
  br label %213

194:                                              ; preds = %190
  %195 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #5
  store i8* null, i8** %9, align 8
  %196 = call i32 @CBS_strdup(%struct.cbs_st* nonnull %7, i8** nonnull %9) #5
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %194
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 455) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #5
  br label %213

199:                                              ; preds = %194
  %200 = bitcast i8** %9 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %181, i64 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = bitcast %"class.std::__1::unique_ptr.0"* %181 to i64*
  store i64 %201, i64* %204, align 8
  %205 = icmp eq i8* %203, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %199
  call void @OPENSSL_free(i8* nonnull %203) #5
  br label %207

207:                                              ; preds = %206, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #5
  br label %214

208:                                              ; preds = %187
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %181, i64 0, i32 0, i32 0, i32 0
  %210 = load i8*, i8** %209, align 8
  store i8* null, i8** %209, align 8
  %211 = icmp eq i8* %210, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %208
  call void @OPENSSL_free(i8* nonnull %210) #5
  br label %214

213:                                              ; preds = %193, %198, %186
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %183) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #5
  br label %595

214:                                              ; preds = %212, %208, %207
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %183) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #5
  %215 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #5
  store i64 -6148914691236517206, i64* %6, align 8
  %216 = call i32 @CBS_get_optional_asn1_uint64(%struct.cbs_st* nonnull %16, i64* nonnull %6, i32 -1610612727, i64 0) #5
  %217 = icmp eq i32 %216, 0
  %218 = load i64, i64* %6, align 8
  %219 = icmp ugt i64 %218, 4294967295
  %220 = or i1 %217, %219
  br i1 %220, label %221, label %222

221:                                              ; preds = %214
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 535) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #5
  br label %595

222:                                              ; preds = %214
  %223 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 30
  %224 = trunc i64 %218 to i32
  store i32 %224, i32* %223, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #5
  %225 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 24
  %226 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %226) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 -86, i64 16, i1 false) #5
  %227 = call i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %5, i32* null, i32 -1610612726) #5
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %222
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 472) #5
  br label %245

230:                                              ; preds = %222
  %231 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 0
  %232 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  %233 = load i8*, i8** %231, align 8
  %234 = load i64, i64* %232, align 8
  %235 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %225, i64 0, i32 0
  %236 = load i8*, i8** %235, align 8
  call void @OPENSSL_free(i8* %236) #5
  %237 = bitcast %"class.bssl::Array.40"* %225 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 16, i1 false) #5
  %238 = icmp eq i64 %234, 0
  br i1 %238, label %246, label %239

239:                                              ; preds = %230
  %240 = call i8* @OPENSSL_malloc(i64 %234) #5
  store i8* %240, i8** %235, align 8
  %241 = icmp eq i8* %240, null
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #5
  br label %245

243:                                              ; preds = %239
  %244 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 24, i32 1
  store i64 %234, i64* %244, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %240, i8* align 1 %233, i64 %234, i1 false) #5
  br label %246

245:                                              ; preds = %242, %229
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #5
  br label %595

246:                                              ; preds = %243, %230
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #5
  %247 = call i32 @CBS_peek_asn1_tag(%struct.cbs_st* nonnull %16, i32 -1610612723) #5
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %270, label %249

249:                                              ; preds = %246
  %250 = bitcast %struct.cbs_st* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %250) #5
  %251 = bitcast %struct.cbs_st* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %251, i8 -86, i64 16, i1 false)
  %252 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %24, i32 -1610612723) #5
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %263, label %254

254:                                              ; preds = %249
  %255 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %24, %struct.cbs_st* nonnull %29, i32 4) #5
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %263, label %257

257:                                              ; preds = %254
  %258 = call i64 @CBS_len(%struct.cbs_st* nonnull %29) #5
  %259 = icmp eq i64 %258, 32
  br i1 %259, label %260, label %263

260:                                              ; preds = %257
  %261 = call i64 @CBS_len(%struct.cbs_st* nonnull %24) #5
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %264, label %263

263:                                              ; preds = %260, %257, %254, %249
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 660) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %250) #5
  br label %595

264:                                              ; preds = %260
  %265 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 27, i64 0
  %266 = call i8* @CBS_data(%struct.cbs_st* nonnull %29) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %265, i8* align 1 %266, i64 32, i1 false) #5
  %267 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 36
  %268 = load i8, i8* %267, align 8
  %269 = or i8 %268, 2
  store i8 %269, i8* %267, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %250) #5
  br label %274

270:                                              ; preds = %246
  %271 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 36
  %272 = load i8, i8* %271, align 8
  %273 = and i8 %272, -3
  store i8 %273, i8* %271, align 8
  br label %274

274:                                              ; preds = %264, %270
  %275 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 28, i64 0
  %276 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 29
  %277 = call fastcc i32 @_ZN4bsslL38SSL_SESSION_parse_bounded_octet_stringEP6cbs_stPhS2_hj(%struct.cbs_st* nonnull %16, i8* %275, i8* %276, i8 zeroext 64, i32 -1610612722)
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %595, label %279

279:                                              ; preds = %274
  %280 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 25
  %281 = call fastcc i32 @_ZN4bsslL31SSL_SESSION_parse_crypto_bufferEP6cbs_stPNSt3__110unique_ptrI16crypto_buffer_stNS_8internal7DeleterIS4_EEEEjP21crypto_buffer_pool_st(%struct.cbs_st* nonnull %16, %"class.std::__1::unique_ptr.15"* %280, i32 -1610612721, %struct.crypto_buffer_pool_st* %2)
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %595, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 26
  %285 = call fastcc i32 @_ZN4bsslL31SSL_SESSION_parse_crypto_bufferEP6cbs_stPNSt3__110unique_ptrI16crypto_buffer_stNS_8internal7DeleterIS4_EEEEjP21crypto_buffer_pool_st(%struct.cbs_st* nonnull %16, %"class.std::__1::unique_ptr.15"* %284, i32 -1610612720, %struct.crypto_buffer_pool_st* %2)
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %595, label %287

287:                                              ; preds = %283
  %288 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %288) #5
  store i32 -1431655766, i32* %30, align 4
  %289 = call i32 @CBS_get_optional_asn1_bool(%struct.cbs_st* nonnull %16, i32* nonnull %30, i32 -1610612719, i32 0) #5
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %287
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 686) #5
  br label %592

292:                                              ; preds = %287
  %293 = load i32, i32* %30, align 4
  %294 = icmp ne i32 %293, 0
  %295 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 36
  %296 = zext i1 %294 to i8
  %297 = load i8, i8* %295, align 8
  %298 = and i8 %297, -2
  %299 = or i8 %298, %296
  store i8 %299, i8* %295, align 8
  %300 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #5
  store i64 -6148914691236517206, i64* %4, align 8
  %301 = call i32 @CBS_get_optional_asn1_uint64(%struct.cbs_st* nonnull %16, i64* nonnull %4, i32 -1610612718, i64 0) #5
  %302 = icmp eq i32 %301, 0
  %303 = load i64, i64* %4, align 8
  %304 = icmp ugt i64 %303, 65535
  %305 = or i1 %302, %304
  br i1 %305, label %306, label %307

306:                                              ; preds = %292
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 548) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #5
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 692) #5
  br label %592

307:                                              ; preds = %292
  %308 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 2
  %309 = trunc i64 %303 to i16
  store i16 %309, i16* %308, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #5
  %310 = bitcast %struct.cbs_st* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %310) #5
  %311 = bitcast %struct.cbs_st* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %311, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %31, i8* null, i64 0) #5
  %312 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %312) #5
  store i32 -1431655766, i32* %32, align 4
  %313 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %31, i32* nonnull %32, i32 -1610612717) #5
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %323, label %315

315:                                              ; preds = %307
  %316 = load i32, i32* %32, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %315
  %319 = load i32, i32* %27, align 4
  br label %331

320:                                              ; preds = %315
  %321 = call i64 @CBS_len(%struct.cbs_st* nonnull %31) #5
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %307, %320
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 702) #5
  br label %589

324:                                              ; preds = %320
  %325 = load i32, i32* %32, align 4
  %326 = icmp eq i32 %325, 0
  %327 = load i32, i32* %27, align 4
  %328 = icmp ne i32 %327, 0
  %329 = or i1 %326, %328
  br i1 %329, label %331, label %330

330:                                              ; preds = %324
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 706) #5
  br label %589

331:                                              ; preds = %318, %324
  %332 = phi i32 [ %319, %318 ], [ %327, %324 ]
  %333 = phi i32 [ 0, %318 ], [ %325, %324 ]
  %334 = or i32 %332, %333
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %390, label %336

336:                                              ; preds = %331
  %337 = call %struct.stack_st* @sk_new_null() #5
  %338 = bitcast %struct.stack_st* %337 to %struct.stack_st_CRYPTO_BUFFER*
  %339 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 11, i32 0, i32 0, i32 0
  %340 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %339, align 8
  %341 = bitcast %struct.stack_st_CRYPTO_BUFFER** %339 to %struct.stack_st**
  store %struct.stack_st* %337, %struct.stack_st** %341, align 8
  %342 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %340, null
  br i1 %342, label %346, label %343

343:                                              ; preds = %336
  %344 = bitcast %struct.stack_st_CRYPTO_BUFFER* %340 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %344, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #5
  %345 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %339, align 8
  br label %346

346:                                              ; preds = %336, %343
  %347 = phi %struct.stack_st_CRYPTO_BUFFER* [ %338, %336 ], [ %345, %343 ]
  %348 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %347, null
  br i1 %348, label %349, label %350

349:                                              ; preds = %346
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 712) #5
  br label %589

350:                                              ; preds = %346
  %351 = load i32, i32* %27, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %363, label %353

353:                                              ; preds = %350
  %354 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st* nonnull %26, %struct.crypto_buffer_pool_st* %2) #5
  %355 = icmp eq %struct.crypto_buffer_st* %354, null
  br i1 %355, label %362, label %356

356:                                              ; preds = %353
  %357 = load %struct.stack_st*, %struct.stack_st** %341, align 8
  %358 = bitcast %struct.crypto_buffer_st* %354 to i8*
  %359 = call i64 @sk_push(%struct.stack_st* %357, i8* nonnull %358) #5
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %361, label %363

361:                                              ; preds = %356
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %354) #5
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 720) #5
  br label %589

362:                                              ; preds = %353
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 720) #5
  br label %589

363:                                              ; preds = %356, %350
  %364 = call i64 @CBS_len(%struct.cbs_st* nonnull %31) #5
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %390, label %366

366:                                              ; preds = %363
  %367 = bitcast %struct.cbs_st* %33 to i8*
  %368 = bitcast %struct.cbs_st* %33 to i8*
  br label %369

369:                                              ; preds = %366, %387
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %367) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %368, i8 -86, i64 16, i1 false)
  %370 = call i32 @CBS_get_any_asn1_element(%struct.cbs_st* nonnull %31, %struct.cbs_st* nonnull %33, i32* null, i64* null) #5
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %375, label %372

372:                                              ; preds = %369
  %373 = call i64 @CBS_len(%struct.cbs_st* nonnull %33) #5
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %369, %372
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 729) #5
  br label %386

376:                                              ; preds = %372
  %377 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st* nonnull %33, %struct.crypto_buffer_pool_st* %2) #5
  %378 = icmp eq %struct.crypto_buffer_st* %377, null
  br i1 %378, label %385, label %379

379:                                              ; preds = %376
  %380 = load %struct.stack_st*, %struct.stack_st** %341, align 8
  %381 = bitcast %struct.crypto_buffer_st* %377 to i8*
  %382 = call i64 @sk_push(%struct.stack_st* %380, i8* nonnull %381) #5
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %387

384:                                              ; preds = %379
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %377) #5
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 736) #5
  br label %386

385:                                              ; preds = %376
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 736) #5
  br label %386

386:                                              ; preds = %385, %375, %384
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %367) #5
  br label %589

387:                                              ; preds = %379
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %367) #5
  %388 = call i64 @CBS_len(%struct.cbs_st* nonnull %31) #5
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %390, label %369

390:                                              ; preds = %387, %363, %331
  %391 = bitcast %struct.cbs_st* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %391) #5
  %392 = bitcast i32* %35 to i8*
  %393 = bitcast %struct.cbs_st* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %393, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %392) #5
  store i32 -1431655766, i32* %35, align 4
  %394 = call i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %34, i32* nonnull %35, i32 -1610612715) #5
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %586, label %396

396:                                              ; preds = %390
  %397 = load i32, i32* %35, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %403, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 31
  %401 = call i32 @CBS_get_u32(%struct.cbs_st* nonnull %34, i32* %400) #5
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %586, label %403

403:                                              ; preds = %399, %396
  %404 = call i64 @CBS_len(%struct.cbs_st* nonnull %34) #5
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %406, label %586

406:                                              ; preds = %403
  %407 = load i32, i32* %35, align 4
  %408 = icmp ne i32 %407, 0
  %409 = zext i1 %408 to i8
  %410 = load i8, i8* %295, align 8
  %411 = shl nuw nsw i8 %409, 3
  %412 = and i8 %410, -9
  %413 = or i8 %411, %412
  store i8 %413, i8* %295, align 8
  %414 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %414) #5
  store i32 -1431655766, i32* %36, align 4
  %415 = call i32 @CBS_get_optional_asn1_bool(%struct.cbs_st* nonnull %16, i32* nonnull %36, i32 -1610612714, i32 1) #5
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %417, label %418

417:                                              ; preds = %406
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 756) #5
  br label %583

418:                                              ; preds = %406
  %419 = load i32, i32* %36, align 4
  %420 = icmp ne i32 %419, 0
  %421 = zext i1 %420 to i8
  %422 = load i8, i8* %295, align 8
  %423 = shl nuw nsw i8 %421, 4
  %424 = and i8 %422, -17
  %425 = or i8 %423, %424
  store i8 %425, i8* %295, align 8
  %426 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %426) #5
  store i32 -1431655766, i32* %37, align 4
  %427 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %427) #5
  store i64 -6148914691236517206, i64* %10, align 8
  %428 = call i32 @CBS_get_optional_asn1_uint64(%struct.cbs_st* nonnull %16, i64* nonnull %10, i32 -1610612713, i64 0) #5
  %429 = icmp eq i32 %428, 0
  %430 = load i64, i64* %10, align 8
  %431 = icmp ugt i64 %430, 65535
  %432 = or i1 %429, %431
  br i1 %432, label %433, label %434

433:                                              ; preds = %418
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 548) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %427) #5
  br label %505

434:                                              ; preds = %418
  %435 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 3
  %436 = trunc i64 %430 to i16
  store i16 %436, i16* %435, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %427) #5
  %437 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %437) #5
  store i64 -6148914691236517206, i64* %12, align 8
  %438 = call i32 @CBS_get_optional_asn1_uint64(%struct.cbs_st* nonnull %16, i64* nonnull %12, i32 -1610612712, i64 0) #5
  %439 = icmp eq i32 %438, 0
  %440 = load i64, i64* %12, align 8
  %441 = icmp ugt i64 %440, 4294967295
  %442 = or i1 %439, %441
  br i1 %442, label %443, label %444

443:                                              ; preds = %434
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 535) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %437) #5
  br label %505

444:                                              ; preds = %434
  %445 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 32
  %446 = trunc i64 %440 to i32
  store i32 %446, i32* %445, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %437) #5
  %447 = load i32, i32* %147, align 8
  %448 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %448) #5
  store i64 -6148914691236517206, i64* %13, align 8
  %449 = zext i32 %447 to i64
  %450 = call i32 @CBS_get_optional_asn1_uint64(%struct.cbs_st* nonnull %16, i64* nonnull %13, i32 -1610612711, i64 %449) #5
  %451 = icmp eq i32 %450, 0
  %452 = load i64, i64* %13, align 8
  %453 = icmp ugt i64 %452, 4294967295
  %454 = or i1 %451, %453
  br i1 %454, label %455, label %456

455:                                              ; preds = %444
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 535) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %448) #5
  br label %505

456:                                              ; preds = %444
  %457 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 18
  %458 = trunc i64 %452 to i32
  store i32 %458, i32* %457, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %448) #5
  %459 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 33
  %460 = bitcast %struct.cbs_st* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %460) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %460, i8 -86, i64 16, i1 false) #5
  %461 = call i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %14, i32* null, i32 -1610612710) #5
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %456
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 472) #5
  br label %479

464:                                              ; preds = %456
  %465 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %14, i64 0, i32 0
  %466 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %14, i64 0, i32 1
  %467 = load i8*, i8** %465, align 8
  %468 = load i64, i64* %466, align 8
  %469 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %459, i64 0, i32 0
  %470 = load i8*, i8** %469, align 8
  call void @OPENSSL_free(i8* %470) #5
  %471 = bitcast %"class.bssl::Array.40"* %459 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %471, i8 0, i64 16, i1 false) #5
  %472 = icmp eq i64 %468, 0
  br i1 %472, label %480, label %473

473:                                              ; preds = %464
  %474 = call i8* @OPENSSL_malloc(i64 %468) #5
  store i8* %474, i8** %469, align 8
  %475 = icmp eq i8* %474, null
  br i1 %475, label %476, label %477

476:                                              ; preds = %473
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #5
  br label %479

477:                                              ; preds = %473
  %478 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 33, i32 1
  store i64 %468, i64* %478, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %474, i8* align 1 %467, i64 %468, i1 false) #5
  br label %480

479:                                              ; preds = %476, %463
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %460) #5
  br label %505

480:                                              ; preds = %477, %464
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %460) #5
  %481 = call i32 @CBS_get_optional_asn1_bool(%struct.cbs_st* nonnull %16, i32* nonnull %37, i32 -1610612709, i32 0) #5
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %505, label %483

483:                                              ; preds = %480
  %484 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 37
  %485 = bitcast %struct.cbs_st* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %485) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %485, i8 -86, i64 16, i1 false) #5
  %486 = call i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %15, i32* null, i32 -1610612708) #5
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %489

488:                                              ; preds = %483
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 472) #5
  br label %504

489:                                              ; preds = %483
  %490 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %15, i64 0, i32 0
  %491 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %15, i64 0, i32 1
  %492 = load i8*, i8** %490, align 8
  %493 = load i64, i64* %491, align 8
  %494 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %484, i64 0, i32 0
  %495 = load i8*, i8** %494, align 8
  call void @OPENSSL_free(i8* %495) #5
  %496 = bitcast %"class.bssl::Array.40"* %484 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %496, i8 0, i64 16, i1 false) #5
  %497 = icmp eq i64 %493, 0
  br i1 %497, label %506, label %498

498:                                              ; preds = %489
  %499 = call i8* @OPENSSL_malloc(i64 %493) #5
  store i8* %499, i8** %494, align 8
  %500 = icmp eq i8* %499, null
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #5
  br label %504

502:                                              ; preds = %498
  %503 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 37, i32 1
  store i64 %493, i64* %503, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %499, i8* align 1 %492, i64 %493, i1 false) #5
  br label %506

504:                                              ; preds = %501, %488
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %485) #5
  br label %505

505:                                              ; preds = %504, %479, %455, %443, %433, %480
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 777) #5
  br label %580

506:                                              ; preds = %502, %489
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %485) #5
  %507 = bitcast %struct.cbs_st* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %507) #5
  %508 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %38, i64 0, i32 0
  %509 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %38, i64 0, i32 1
  %510 = bitcast i32* %39 to i8*
  %511 = bitcast %struct.cbs_st* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %511, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %510) #5
  store i32 -1431655766, i32* %39, align 4
  %512 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %512) #5
  store i32 -1431655766, i32* %40, align 4
  %513 = call i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %38, i32* nonnull %39, i32 -1610612707) #5
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %575, label %515

515:                                              ; preds = %506
  %516 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 34
  %517 = load i8*, i8** %508, align 8
  %518 = load i64, i64* %509, align 8
  %519 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %516, i64 0, i32 0
  %520 = load i8*, i8** %519, align 8
  call void @OPENSSL_free(i8* %520) #5
  %521 = bitcast %"class.bssl::Array.40"* %516 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %521, i8 0, i64 16, i1 false) #5
  %522 = icmp eq i64 %518, 0
  br i1 %522, label %529, label %523

523:                                              ; preds = %515
  %524 = call i8* @OPENSSL_malloc(i64 %518) #5
  store i8* %524, i8** %519, align 8
  %525 = icmp eq i8* %524, null
  br i1 %525, label %528, label %526

526:                                              ; preds = %523
  %527 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 34, i32 1
  store i64 %518, i64* %527, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %524, i8* align 1 %517, i64 %518, i1 false) #5
  br label %529

528:                                              ; preds = %523
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #5
  br label %575

529:                                              ; preds = %526, %515
  %530 = call i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st* nonnull %16, %struct.cbs_st* nonnull %38, i32* nonnull %40, i32 -1610612706) #5
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %575, label %532

532:                                              ; preds = %529
  %533 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 35
  %534 = load i8*, i8** %508, align 8
  %535 = load i64, i64* %509, align 8
  %536 = getelementptr inbounds %"class.bssl::Array.40", %"class.bssl::Array.40"* %533, i64 0, i32 0
  %537 = load i8*, i8** %536, align 8
  call void @OPENSSL_free(i8* %537) #5
  %538 = bitcast %"class.bssl::Array.40"* %533 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %538, i8 0, i64 16, i1 false) #5
  %539 = icmp eq i64 %535, 0
  br i1 %539, label %546, label %540

540:                                              ; preds = %532
  %541 = call i8* @OPENSSL_malloc(i64 %535) #5
  store i8* %541, i8** %536, align 8
  %542 = icmp eq i8* %541, null
  br i1 %542, label %545, label %543

543:                                              ; preds = %540
  %544 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 35, i32 1
  store i64 %535, i64* %544, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %541, i8* align 1 %534, i64 %535, i1 false) #5
  br label %546

545:                                              ; preds = %540
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 324) #5
  br label %575

546:                                              ; preds = %543, %532
  %547 = call i64 @CBS_len(%struct.cbs_st* nonnull %16) #5
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %549, label %575

549:                                              ; preds = %546
  %550 = load i32, i32* %37, align 4
  %551 = icmp ne i32 %550, 0
  %552 = zext i1 %551 to i8
  %553 = load i8, i8* %295, align 8
  %554 = shl nuw nsw i8 %552, 5
  %555 = and i8 %553, -33
  %556 = or i8 %554, %555
  store i8 %556, i8* %295, align 8
  %557 = load i32, i32* %39, align 4
  %558 = load i32, i32* %40, align 4
  %559 = icmp eq i32 %557, %558
  br i1 %559, label %560, label %575

560:                                              ; preds = %549
  %561 = icmp eq i32 %557, 0
  br i1 %561, label %566, label %562

562:                                              ; preds = %560
  %563 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %41, i64 0, i32 33, i32 1
  %564 = load i64, i64* %563, align 8
  %565 = icmp eq i64 %564, 0
  br i1 %565, label %575, label %566

566:                                              ; preds = %560, %562
  %567 = icmp ne i32 %557, 0
  %568 = zext i1 %567 to i8
  %569 = shl nuw nsw i8 %568, 6
  %570 = and i8 %556, -65
  %571 = or i8 %569, %570
  store i8 %571, i8* %295, align 8
  %572 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %1, i64 0, i32 6
  %573 = load i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*)** %572, align 8
  %574 = call zeroext i1 %573(%struct.ssl_session_st* %41) #5
  br i1 %574, label %577, label %575

575:                                              ; preds = %566, %562, %549, %506, %529, %546, %528, %545
  %576 = phi i32 [ 790, %545 ], [ 790, %528 ], [ 790, %546 ], [ 790, %529 ], [ 790, %506 ], [ 798, %549 ], [ 798, %562 ], [ 804, %566 ]
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 %576) #5
  br label %577

577:                                              ; preds = %575, %566
  %578 = phi i64 [ 0, %566 ], [ %42, %575 ]
  %579 = phi i64 [ %42, %566 ], [ 0, %575 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %512) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %510) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %507) #5
  br label %580

580:                                              ; preds = %577, %505
  %581 = phi i64 [ %42, %505 ], [ %578, %577 ]
  %582 = phi i64 [ 0, %505 ], [ %579, %577 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %426) #5
  br label %583

583:                                              ; preds = %580, %417
  %584 = phi i64 [ %42, %417 ], [ %581, %580 ]
  %585 = phi i64 [ 0, %417 ], [ %582, %580 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %414) #5
  br label %586

586:                                              ; preds = %390, %403, %399, %583
  %587 = phi i64 [ %584, %583 ], [ %42, %399 ], [ %42, %403 ], [ %42, %390 ]
  %588 = phi i64 [ %585, %583 ], [ 0, %399 ], [ 0, %403 ], [ 0, %390 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %392) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %391) #5
  br label %589

589:                                              ; preds = %362, %386, %361, %586, %349, %330, %323
  %590 = phi i64 [ %42, %323 ], [ %587, %586 ], [ %42, %349 ], [ %42, %330 ], [ %42, %361 ], [ %42, %362 ], [ %42, %386 ]
  %591 = phi i64 [ 0, %323 ], [ %588, %586 ], [ 0, %349 ], [ 0, %330 ], [ 0, %361 ], [ 0, %362 ], [ 0, %386 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %312) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %310) #5
  br label %592

592:                                              ; preds = %589, %306, %291
  %593 = phi i64 [ %42, %291 ], [ %42, %306 ], [ %590, %589 ]
  %594 = phi i64 [ 0, %291 ], [ 0, %306 ], [ %591, %589 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %288) #5
  br label %595

595:                                              ; preds = %274, %279, %283, %213, %221, %245, %263, %592, %179
  %596 = phi i64 [ %42, %179 ], [ %593, %592 ], [ %42, %263 ], [ %42, %245 ], [ %42, %221 ], [ %42, %213 ], [ %42, %283 ], [ %42, %279 ], [ %42, %274 ]
  %597 = phi i64 [ 0, %179 ], [ %594, %592 ], [ 0, %263 ], [ 0, %245 ], [ 0, %221 ], [ 0, %213 ], [ 0, %283 ], [ 0, %279 ], [ 0, %274 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #5
  br label %598

598:                                              ; preds = %160, %172, %595, %159
  %599 = phi i64 [ %42, %159 ], [ %596, %595 ], [ %42, %172 ], [ %42, %160 ]
  %600 = phi i64 [ 0, %159 ], [ %597, %595 ], [ 0, %172 ], [ 0, %160 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #5
  br label %601

601:                                              ; preds = %598, %144
  %602 = phi i64 [ %42, %144 ], [ %599, %598 ]
  %603 = phi i64 [ 0, %144 ], [ %600, %598 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #5
  br label %604

604:                                              ; preds = %601, %106
  %605 = phi i64 [ %42, %106 ], [ %602, %601 ]
  %606 = phi i64 [ 0, %106 ], [ %603, %601 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #5
  br label %607

607:                                              ; preds = %604, %89, %83
  %608 = phi i64 [ %42, %83 ], [ %42, %89 ], [ %605, %604 ]
  %609 = phi i64 [ 0, %83 ], [ 0, %89 ], [ %606, %604 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %73) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #5
  br label %610

610:                                              ; preds = %607, %67
  %611 = phi i64 [ %42, %67 ], [ %608, %607 ]
  %612 = phi i64 [ 0, %67 ], [ %609, %607 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %49) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #5
  br label %613

613:                                              ; preds = %3, %610
  %614 = phi i64 [ %611, %610 ], [ %42, %3 ]
  %615 = phi i64 [ %612, %610 ], [ 0, %3 ]
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %619, label %617

617:                                              ; preds = %613
  %618 = inttoptr i64 %614 to %struct.ssl_session_st*
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %618) #5
  br label %619

619:                                              ; preds = %613, %617
  %620 = inttoptr i64 %615 to %struct.ssl_session_st*
  ret %struct.ssl_session_st* %620
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.ssl_session_st* @_ZN4bssl15ssl_session_newEPKNS_15SSL_X509_METHODE(%"struct.bssl::SSL_X509_METHOD"*) local_unnamed_addr #2

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i32 @CBS_get_asn1_uint64(%struct.cbs_st*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl30ssl_protocol_version_from_wireEPtt(i16*, i16 zeroext) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i32 @CBS_get_u16(%struct.cbs_st*, i16*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_optional_asn1(%struct.cbs_st*, %struct.cbs_st*, i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN4bsslL38SSL_SESSION_parse_bounded_octet_stringEP6cbs_stPhS2_hj(%struct.cbs_st*, i8* nocapture, i8* nocapture, i8 zeroext, i32) unnamed_addr #0 {
  %6 = alloca %struct.cbs_st, align 8
  %7 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #5
  %8 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = call i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st* %0, %struct.cbs_st* nonnull %6, i32* null, i32 %4) #5
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %5
  %12 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #5
  %13 = zext i8 %3 to i64
  %14 = icmp ugt i64 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %5, %11
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 508) #5
  br label %24

16:                                               ; preds = %11
  %17 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #5
  %18 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #5
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %17, i64 %18, i1 false) #5
  br label %21

21:                                               ; preds = %16, %20
  %22 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #5
  %23 = trunc i64 %22 to i8
  store i8 %23, i8* %2, align 1
  br label %24

24:                                               ; preds = %21, %15
  %25 = phi i32 [ 0, %15 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  ret i32 %25
}

declare i32 @CBS_peek_asn1_tag(%struct.cbs_st*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN4bsslL31SSL_SESSION_parse_crypto_bufferEP6cbs_stPNSt3__110unique_ptrI16crypto_buffer_stNS_8internal7DeleterIS4_EEEEjP21crypto_buffer_pool_st(%struct.cbs_st*, %"class.std::__1::unique_ptr.15"* nocapture, i32, %struct.crypto_buffer_pool_st*) unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = tail call i32 @CBS_peek_asn1_tag(%struct.cbs_st* %0, i32 %2) #5
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %36, label %9

9:                                                ; preds = %4
  %10 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #5
  %11 = bitcast %struct.cbs_st* %6 to i8*
  %12 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %13 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %5, i32 %2) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %9
  %17 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %5, %struct.cbs_st* nonnull %6, i32 4) #5
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #5
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19, %16, %9
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 490) #5
  br label %34

23:                                               ; preds = %19
  %24 = call %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st* nonnull %6, %struct.crypto_buffer_pool_st* %3) #5
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %25, align 8
  store %struct.crypto_buffer_st* %24, %struct.crypto_buffer_st** %25, align 8
  %27 = icmp eq %struct.crypto_buffer_st* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %26) #5
  %29 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %25, align 8
  br label %30

30:                                               ; preds = %23, %28
  %31 = phi %struct.crypto_buffer_st* [ %24, %23 ], [ %29, %28 ]
  %32 = icmp eq %struct.crypto_buffer_st* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 495) #5
  br label %34

34:                                               ; preds = %30, %33, %22
  %35 = phi i32 [ 0, %22 ], [ 0, %33 ], [ 1, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #5
  br label %36

36:                                               ; preds = %4, %34
  %37 = phi i32 [ %35, %34 ], [ 1, %4 ]
  ret i32 %37
}

declare i32 @CBS_get_optional_asn1_bool(%struct.cbs_st*, i32*, i32, i32) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare %struct.crypto_buffer_st* @CRYPTO_BUFFER_new_from_CBS(%struct.cbs_st*, %struct.crypto_buffer_pool_st*) local_unnamed_addr #2

declare i32 @CBS_get_any_asn1_element(%struct.cbs_st*, %struct.cbs_st*, i32*, i64*) local_unnamed_addr #2

declare i32 @CBS_get_optional_asn1_octet_string(%struct.cbs_st*, %struct.cbs_st*, i32*, i32) local_unnamed_addr #2

declare i32 @CBS_get_u32(%struct.cbs_st*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl21ssl_session_serializeEPK14ssl_session_stP6cbb_st(%struct.ssl_session_st*, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = tail call fastcc i32 @_ZN4bsslL25SSL_SESSION_to_bytes_fullEPK14ssl_session_stP6cbb_sti(%struct.ssl_session_st* %0, %struct.cbb_st* %1, i32 0)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN4bsslL25SSL_SESSION_to_bytes_fullEPK14ssl_session_stP6cbb_sti(%struct.ssl_session_st*, %struct.cbb_st*, i32) unnamed_addr #0 {
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = icmp eq %struct.ssl_session_st* %0, null
  br i1 %7, label %412, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 20
  %10 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %9, align 8
  %11 = icmp eq %struct.ssl_cipher_st* %10, null
  br i1 %11, label %412, label %12

12:                                               ; preds = %8
  %13 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = call i32 @CBB_add_asn1(%struct.cbb_st* %1, %struct.cbb_st* nonnull %4, i32 536870928) #5
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %72, label %18

18:                                               ; preds = %12
  %19 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %4, i64 1) #5
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %72, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 1
  %23 = load i16, i16* %22, align 4
  %24 = zext i16 %23 to i64
  %25 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %4, i64 %24) #5
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %72, label %27

27:                                               ; preds = %21
  %28 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 4) #5
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %72, label %30

30:                                               ; preds = %27
  %31 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %9, align 8
  %32 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = trunc i32 %33 to i16
  %35 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %5, i16 zeroext %34) #5
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %72, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 7, i64 0
  %39 = icmp ne i32 %2, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  br label %43

43:                                               ; preds = %37, %40
  %44 = phi i32 [ %42, %40 ], [ 0, %37 ]
  %45 = zext i32 %44 to i64
  %46 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %4, i8* %38, i64 %45) #5
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %72, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 5, i64 0
  %50 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %4, i8* %49, i64 %52) #5
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %72, label %55

55:                                               ; preds = %48
  %56 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612735) #5
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %72, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 19
  %60 = load i64, i64* %59, align 8
  %61 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 %60) #5
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %58
  %64 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612734) #5
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 17
  %68 = load i32, i32* %67, align 8
  %69 = zext i32 %68 to i64
  %70 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 %69) #5
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %66, %63, %58, %55, %48, %43, %30, %27, %21, %18, %12
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 226) #5
  br label %410

73:                                               ; preds = %66
  %74 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %75 = bitcast %struct.stack_st_CRYPTO_BUFFER** %74 to %struct.stack_st**
  %76 = load %struct.stack_st*, %struct.stack_st** %75, align 8
  %77 = call i64 @sk_num(%struct.stack_st* %76) #5
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %96, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %81 = load i8, i8* %80, align 8
  %82 = and i8 %81, 2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %79
  %85 = load %struct.stack_st*, %struct.stack_st** %75, align 8
  %86 = call i8* @sk_value(%struct.stack_st* %85, i64 0) #5
  %87 = bitcast i8* %86 to %struct.crypto_buffer_st*
  %88 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612733) #5
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %84
  %91 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %87) #5
  %92 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %87) #5
  %93 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %91, i64 %92) #5
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %90, %84
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 237) #5
  br label %410

96:                                               ; preds = %90, %79, %73
  %97 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612732) #5
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 9, i64 0
  %101 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 8
  %102 = load i8, i8* %101, align 4
  %103 = zext i8 %102 to i64
  %104 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %100, i64 %103) #5
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %99, %96
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 246) #5
  br label %410

107:                                              ; preds = %99
  %108 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 16
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %107
  %112 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612731) #5
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %108, align 8
  %116 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 %115) #5
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %114, %111
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 253) #5
  br label %410

119:                                              ; preds = %114, %107
  %120 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %119
  %124 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612728) #5
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %123
  %127 = load i8*, i8** %120, align 8
  %128 = call i64 @strlen(i8* %127) #6
  %129 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %127, i64 %128) #5
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %126, %123
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 263) #5
  br label %410

132:                                              ; preds = %119, %126
  %133 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 30
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612727) #5
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %136
  %140 = load i32, i32* %133, align 4
  %141 = zext i32 %140 to i64
  %142 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 %141) #5
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %139, %136
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 271) #5
  br label %410

145:                                              ; preds = %139, %132
  %146 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24, i32 1
  %147 = load i64, i64* %146, align 8
  %148 = icmp eq i64 %147, 0
  %149 = or i1 %39, %148
  br i1 %149, label %160, label %150

150:                                              ; preds = %145
  %151 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612726) #5
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 24, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = load i64, i64* %146, align 8
  %157 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %155, i64 %156) #5
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %153, %150
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 280) #5
  br label %410

160:                                              ; preds = %153, %145
  %161 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %162 = load i8, i8* %161, align 8
  %163 = and i8 %162, 2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %173, label %165

165:                                              ; preds = %160
  %166 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612723) #5
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %172, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 27, i64 0
  %170 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %169, i64 32) #5
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %168, %165
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 289) #5
  br label %410

173:                                              ; preds = %168, %160
  %174 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 29
  %175 = load i8, i8* %174, align 8
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %187, label %177

177:                                              ; preds = %173
  %178 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612722) #5
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %186, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 28, i64 0
  %182 = load i8, i8* %174, align 8
  %183 = zext i8 %182 to i64
  %184 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %181, i64 %183) #5
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180, %177
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 298) #5
  br label %410

187:                                              ; preds = %180, %173
  %188 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %189 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %188, align 8
  %190 = icmp eq %struct.crypto_buffer_st* %189, null
  br i1 %190, label %202, label %191

191:                                              ; preds = %187
  %192 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612721) #5
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %201, label %194

194:                                              ; preds = %191
  %195 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %188, align 8
  %196 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %195) #5
  %197 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %188, align 8
  %198 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %197) #5
  %199 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %196, i64 %198) #5
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %194, %191
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 308) #5
  br label %410

202:                                              ; preds = %187, %194
  %203 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %204 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %203, align 8
  %205 = icmp eq %struct.crypto_buffer_st* %204, null
  br i1 %205, label %217, label %206

206:                                              ; preds = %202
  %207 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612720) #5
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %216, label %209

209:                                              ; preds = %206
  %210 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %203, align 8
  %211 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %210) #5
  %212 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %203, align 8
  %213 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %212) #5
  %214 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %211, i64 %213) #5
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %209, %206
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 318) #5
  br label %410

217:                                              ; preds = %202, %209
  %218 = load i8, i8* %161, align 8
  %219 = and i8 %218, 1
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %228, label %221

221:                                              ; preds = %217
  %222 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612719) #5
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %227, label %224

224:                                              ; preds = %221
  %225 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %5, i32 1) #5
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224, %221
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 326) #5
  br label %410

228:                                              ; preds = %224, %217
  %229 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 2
  %230 = load i16, i16* %229, align 2
  %231 = icmp eq i16 %230, 0
  br i1 %231, label %241, label %232

232:                                              ; preds = %228
  %233 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612718) #5
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %240, label %235

235:                                              ; preds = %232
  %236 = load i16, i16* %229, align 2
  %237 = zext i16 %236 to i64
  %238 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 %237) #5
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %235, %232
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 334) #5
  br label %410

241:                                              ; preds = %235, %228
  %242 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %74, align 8
  %243 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %242, null
  br i1 %243, label %275, label %244

244:                                              ; preds = %241
  %245 = load i8, i8* %161, align 8
  %246 = and i8 %245, 2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %248, label %275

248:                                              ; preds = %244
  %249 = bitcast %struct.stack_st_CRYPTO_BUFFER* %242 to %struct.stack_st*
  %250 = call i64 @sk_num(%struct.stack_st* nonnull %249) #5
  %251 = icmp ugt i64 %250, 1
  br i1 %251, label %252, label %275

252:                                              ; preds = %248
  %253 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612717) #5
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %259, label %255

255:                                              ; preds = %252
  %256 = load %struct.stack_st*, %struct.stack_st** %75, align 8
  %257 = call i64 @sk_num(%struct.stack_st* %256) #5
  %258 = icmp ugt i64 %257, 1
  br i1 %258, label %264, label %275

259:                                              ; preds = %252
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 344) #5
  br label %410

260:                                              ; preds = %264
  %261 = load %struct.stack_st*, %struct.stack_st** %75, align 8
  %262 = call i64 @sk_num(%struct.stack_st* %261) #5
  %263 = icmp ult i64 %273, %262
  br i1 %263, label %264, label %275

264:                                              ; preds = %255, %260
  %265 = phi i64 [ %273, %260 ], [ 1, %255 ]
  %266 = load %struct.stack_st*, %struct.stack_st** %75, align 8
  %267 = call i8* @sk_value(%struct.stack_st* %266, i64 %265) #5
  %268 = bitcast i8* %267 to %struct.crypto_buffer_st*
  %269 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %268) #5
  %270 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %268) #5
  %271 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* %269, i64 %270) #5
  %272 = icmp eq i32 %271, 0
  %273 = add nuw i64 %265, 1
  br i1 %272, label %274, label %260

274:                                              ; preds = %264
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 351) #5
  br label %410

275:                                              ; preds = %260, %255, %241, %244, %248
  %276 = load i8, i8* %161, align 8
  %277 = and i8 %276, 8
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %293, label %279

279:                                              ; preds = %275
  %280 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612715) #5
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %292, label %282

282:                                              ; preds = %279
  %283 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %5, %struct.cbb_st* nonnull %6, i32 4) #5
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %292, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 31
  %287 = load i32, i32* %286, align 8
  %288 = call i32 @CBB_add_u32(%struct.cbb_st* nonnull %6, i32 %287) #5
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %292, label %290

290:                                              ; preds = %285
  %291 = load i8, i8* %161, align 8
  br label %293

292:                                              ; preds = %285, %282, %279
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 361) #5
  br label %410

293:                                              ; preds = %290, %275
  %294 = phi i8 [ %291, %290 ], [ %276, %275 ]
  %295 = and i8 %294, 16
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %297, label %304

297:                                              ; preds = %293
  %298 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612714) #5
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %303, label %300

300:                                              ; preds = %297
  %301 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %5, i32 0) #5
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300, %297
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 369) #5
  br label %410

304:                                              ; preds = %300, %293
  %305 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 3
  %306 = load i16, i16* %305, align 8
  %307 = icmp eq i16 %306, 0
  br i1 %307, label %317, label %308

308:                                              ; preds = %304
  %309 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612713) #5
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %316, label %311

311:                                              ; preds = %308
  %312 = load i16, i16* %305, align 8
  %313 = zext i16 %312 to i64
  %314 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 %313) #5
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %311, %308
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 377) #5
  br label %410

317:                                              ; preds = %311, %304
  %318 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 32
  %319 = load i32, i32* %318, align 4
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %330, label %321

321:                                              ; preds = %317
  %322 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612712) #5
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %329, label %324

324:                                              ; preds = %321
  %325 = load i32, i32* %318, align 4
  %326 = zext i32 %325 to i64
  %327 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 %326) #5
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %324, %321
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 384) #5
  br label %410

330:                                              ; preds = %324, %317
  %331 = load i32, i32* %67, align 8
  %332 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 18
  %333 = load i32, i32* %332, align 4
  %334 = icmp eq i32 %331, %333
  br i1 %334, label %344, label %335

335:                                              ; preds = %330
  %336 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612711) #5
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %343, label %338

338:                                              ; preds = %335
  %339 = load i32, i32* %332, align 4
  %340 = zext i32 %339 to i64
  %341 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %5, i64 %340) #5
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %338, %335
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 391) #5
  br label %410

344:                                              ; preds = %338, %330
  %345 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 33, i32 1
  %346 = load i64, i64* %345, align 8
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %358, label %348

348:                                              ; preds = %344
  %349 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612710) #5
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %357, label %351

351:                                              ; preds = %348
  %352 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 33, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = load i64, i64* %345, align 8
  %355 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %353, i64 %354) #5
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %351, %348
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 399) #5
  br label %410

358:                                              ; preds = %351, %344
  %359 = load i8, i8* %161, align 8
  %360 = and i8 %359, 32
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %369, label %362

362:                                              ; preds = %358
  %363 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612709) #5
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %368, label %365

365:                                              ; preds = %362
  %366 = call i32 @CBB_add_asn1_bool(%struct.cbb_st* nonnull %5, i32 1) #5
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %369

368:                                              ; preds = %365, %362
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 407) #5
  br label %410

369:                                              ; preds = %365, %358
  %370 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 37, i32 1
  %371 = load i64, i64* %370, align 8
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %383, label %373

373:                                              ; preds = %369
  %374 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612708) #5
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %382, label %376

376:                                              ; preds = %373
  %377 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 37, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = load i64, i64* %370, align 8
  %380 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %378, i64 %379) #5
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %376, %373
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 416) #5
  br label %410

383:                                              ; preds = %376, %369
  %384 = load i8, i8* %161, align 8
  %385 = and i8 %384, 64
  %386 = icmp eq i8 %385, 0
  br i1 %386, label %408, label %387

387:                                              ; preds = %383
  %388 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612707) #5
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %407, label %390

390:                                              ; preds = %387
  %391 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 34, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 34, i32 1
  %394 = load i64, i64* %393, align 8
  %395 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %392, i64 %394) #5
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %407, label %397

397:                                              ; preds = %390
  %398 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 -1610612706) #5
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %407, label %400

400:                                              ; preds = %397
  %401 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 35, i32 0
  %402 = load i8*, i8** %401, align 8
  %403 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 35, i32 1
  %404 = load i64, i64* %403, align 8
  %405 = call i32 @CBB_add_asn1_octet_string(%struct.cbb_st* nonnull %5, i8* %402, i64 %404) #5
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %400, %397, %390, %387
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 429) #5
  br label %410

408:                                              ; preds = %400, %383
  %409 = call i32 @CBB_flush(%struct.cbb_st* %1) #5
  br label %410

410:                                              ; preds = %274, %95, %408, %407, %382, %368, %357, %343, %329, %316, %303, %292, %259, %240, %227, %216, %201, %186, %172, %159, %144, %131, %118, %106, %72
  %411 = phi i32 [ %409, %408 ], [ 0, %407 ], [ 0, %382 ], [ 0, %368 ], [ 0, %357 ], [ 0, %343 ], [ 0, %329 ], [ 0, %316 ], [ 0, %303 ], [ 0, %292 ], [ 0, %274 ], [ 0, %259 ], [ 0, %240 ], [ 0, %227 ], [ 0, %216 ], [ 0, %201 ], [ 0, %186 ], [ 0, %172 ], [ 0, %159 ], [ 0, %144 ], [ 0, %131 ], [ 0, %118 ], [ 0, %106 ], [ 0, %72 ], [ 0, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #5
  br label %412

412:                                              ; preds = %3, %8, %410
  %413 = phi i32 [ %411, %410 ], [ 0, %8 ], [ 0, %3 ]
  ret i32 %413
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_to_bytes(%struct.ssl_session_st*, i8**, i64*) local_unnamed_addr #0 {
  %4 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 36
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  store i64 13, i64* %2, align 8
  %10 = tail call i8* @OPENSSL_memdup(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZZ20SSL_SESSION_to_bytesE20kNotResumableSession, i64 0, i64 0), i64 13) #5
  store i8* %10, i8** %1, align 8
  %11 = icmp ne i8* %10, null
  %12 = zext i1 %11 to i32
  br label %27

13:                                               ; preds = %3
  %14 = bitcast %"class.bssl::internal::StackAllocated.118"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %4, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %15) #5
  %16 = call i32 @CBB_init(%struct.cbb_st* nonnull %15, i64 256) #5
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = call fastcc i32 @_ZN4bsslL25SSL_SESSION_to_bytes_fullEPK14ssl_session_stP6cbb_sti(%struct.ssl_session_st* %0, %struct.cbb_st* nonnull %15, i32 0)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = call i32 @CBB_finish(%struct.cbb_st* nonnull %15, i8** %1, i64* %2) #5
  %23 = icmp ne i32 %22, 0
  %24 = zext i1 %23 to i32
  br label %25

25:                                               ; preds = %21, %13, %18
  %26 = phi i32 [ 0, %18 ], [ 0, %13 ], [ %24, %21 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #5
  br label %27

27:                                               ; preds = %9, %25
  %28 = phi i32 [ %26, %25 ], [ %12, %9 ]
  ret i32 %28
}

declare i8* @OPENSSL_memdup(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_SESSION_to_bytes_for_ticket(%struct.ssl_session_st*, i8**, i64*) local_unnamed_addr #0 {
  %4 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %5 = bitcast %"class.bssl::internal::StackAllocated.118"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  %6 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %4, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %6) #5
  %7 = call i32 @CBB_init(%struct.cbb_st* nonnull %6, i64 256) #5
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = call fastcc i32 @_ZN4bsslL25SSL_SESSION_to_bytes_fullEPK14ssl_session_stP6cbb_sti(%struct.ssl_session_st* %0, %struct.cbb_st* nonnull %6, i32 1)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = call i32 @CBB_finish(%struct.cbb_st* nonnull %6, i8** %1, i64* %2) #5
  %14 = icmp ne i32 %13, 0
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %12, %3, %9
  %17 = phi i32 [ 0, %9 ], [ 0, %3 ], [ %15, %12 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_SSL_SESSION(%struct.ssl_session_st*, i8**) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  store i64 -6148914691236517206, i64* %4, align 8
  %7 = call i32 @SSL_SESSION_to_bytes(%struct.ssl_session_st* %0, i8** nonnull %3, i64* nonnull %4)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %2
  %10 = load i64, i64* %4, align 8
  %11 = icmp ugt i64 %10, 2147483647
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %13) #5
  call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 869) #5
  br label %30

14:                                               ; preds = %9
  %15 = icmp eq i8** %1, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = icmp eq i64 %10, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %16
  %19 = load i8*, i8** %3, align 8
  %20 = load i8*, i8** %1, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %19, i64 %10, i1 false) #5
  %21 = load i64, i64* %4, align 8
  br label %22

22:                                               ; preds = %16, %18
  %23 = phi i64 [ 0, %16 ], [ %21, %18 ]
  %24 = load i8*, i8** %1, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %23
  store i8* %25, i8** %1, align 8
  br label %26

26:                                               ; preds = %14, %22
  %27 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %27) #5
  %28 = load i64, i64* %4, align 8
  %29 = trunc i64 %28 to i32
  br label %30

30:                                               ; preds = %2, %26, %12
  %31 = phi i32 [ -1, %12 ], [ %29, %26 ], [ -1, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  ret i32 %31
}

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @SSL_SESSION_from_bytes(i8*, i64, %struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #5
  %6 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %0, i64 %1) #5
  %7 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %2, i64 0, i32 1
  %8 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %7, align 8
  %9 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %2, i64 0, i32 72
  %10 = load %struct.crypto_buffer_pool_st*, %struct.crypto_buffer_pool_st** %9, align 8
  %11 = call %struct.ssl_session_st* @_ZN4bssl17SSL_SESSION_parseEP6cbs_stPKNS_15SSL_X509_METHODEP21crypto_buffer_pool_st(%struct.cbs_st* nonnull %4, %"struct.bssl::SSL_X509_METHOD"* %8, %struct.crypto_buffer_pool_st* %10)
  %12 = icmp eq %struct.ssl_session_st* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #5
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  call void @ERR_put_error(i32 16, i32 0, i32 160, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 892) #5
  call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %11) #5
  br label %17

17:                                               ; preds = %3, %13, %16
  %18 = phi %struct.ssl_session_st* [ null, %16 ], [ %11, %13 ], [ null, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #5
  ret %struct.ssl_session_st* %18
}

declare i32 @CBS_get_optional_asn1_uint64(%struct.cbs_st*, i64*, i32, i64) local_unnamed_addr #2

declare i32 @CBS_contains_zero_byte(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_strdup(%struct.cbs_st*, i8**) local_unnamed_addr #2

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_asn1_uint64(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @CBB_add_u16(%struct.cbb_st*, i16 zeroext) local_unnamed_addr #2

declare i32 @CBB_add_asn1_octet_string(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i32 @CBB_add_asn1_bool(%struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_u32(%struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @SSL_SESSION_free(%struct.ssl_session_st*) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_(void (i8*)*, i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to %struct.crypto_buffer_st*
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %3) #5
  ret void
}

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
