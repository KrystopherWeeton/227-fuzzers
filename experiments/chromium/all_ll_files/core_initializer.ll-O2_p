; ModuleID = '../../third_party/blink/renderer/core/core_initializer.cc'
source_filename = "../../third_party/blink/renderer/core/core_initializer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CoreInitializer" = type { i32 (...)** }
%"class.WTF::ThreadSpecific" = type { %"class.WTF::Threading"*, %"class.base::ThreadLocalStorage::Slot" }
%"class.WTF::Threading" = type <{ %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.WTF::AtomicStringTable"* }
%"class.WTF::AtomicStringTable" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.7" }
%"class.WTF::HashTable.7" = type <{ %"class.WTF::StringImpl"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.WTF::ICUConverterWrapper"* }
%"struct.WTF::ICUConverterWrapper" = type opaque
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::EventFactoryBase" = type { i32 (...)** }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque

$_ZN5blink15CoreInitializerD2Ev = comdat any

$_ZN5blink15CoreInitializerD0Ev = comdat any

@_ZN5blink15CoreInitializer9instance_E = hidden local_unnamed_addr global %"class.blink::CoreInitializer"* null, align 8
@_ZZN5blink15CoreInitializer20RegisterEventFactoryEvE13is_registered = internal unnamed_addr global i1 false, align 1
@_ZTVN5blink15CoreInitializerE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CoreInitializer"*)* @_ZN5blink15CoreInitializerD2Ev to i8*), i8* bitcast (void (%"class.blink::CoreInitializer"*)* @_ZN5blink15CoreInitializerD0Ev to i8*), i8* bitcast (void (%"class.blink::CoreInitializer"*)* @_ZN5blink15CoreInitializer10InitializeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink12EventFactoryE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN3WTF9Threading12static_data_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Threading]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink42ForceNextWebGLContextCreationToFailForTestEv() local_unnamed_addr #0 {
  %1 = load %"class.blink::CoreInitializer"*, %"class.blink::CoreInitializer"** @_ZN5blink15CoreInitializer9instance_E, align 8
  %2 = bitcast %"class.blink::CoreInitializer"* %1 to void (%"class.blink::CoreInitializer"*)***
  %3 = load void (%"class.blink::CoreInitializer"*)**, void (%"class.blink::CoreInitializer"*)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.blink::CoreInitializer"*)*, void (%"class.blink::CoreInitializer"*)** %3, i64 13
  %5 = load void (%"class.blink::CoreInitializer"*)*, void (%"class.blink::CoreInitializer"*)** %4, align 8
  tail call void %5(%"class.blink::CoreInitializer"* %1) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15CoreInitializer20RegisterEventFactoryEv(%"class.blink::CoreInitializer"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = load i1, i1* @_ZZN5blink15CoreInitializer20RegisterEventFactoryEvE13is_registered, align 1
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  store i1 true, i1* @_ZZN5blink15CoreInitializer20RegisterEventFactoryEvE13is_registered, align 1
  %4 = tail call noalias i8* @malloc(i64 8) #4
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12EventFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast i8* %4 to %"class.blink::EventFactoryBase"*
  tail call void @_ZN5blink8Document20RegisterEventFactoryENSt3__110unique_ptrINS_16EventFactoryBaseENS1_14default_deleteIS3_EEEE(%"class.blink::EventFactoryBase"* %6) #4
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

declare void @_ZN5blink8Document20RegisterEventFactoryENSt3__110unique_ptrINS_16EventFactoryBaseENS1_14default_deleteIS3_EEEE(%"class.blink::EventFactoryBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15CoreInitializer10InitializeEv(%"class.blink::CoreInitializer"*) unnamed_addr #0 align 2 {
  store %"class.blink::CoreInitializer"* %0, %"class.blink::CoreInitializer"** @_ZN5blink15CoreInitializer9instance_E, align 8
  %2 = tail call dereferenceable(24) %"class.WTF::HashMap"* @_ZN3WTF10StringImpl16AllStaticStringsEv() #4
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1579
  tail call void @_ZN3WTF10StringImpl35ReserveStaticStringsCapacityForSizeEj(i32 %5) #4
  tail call void @_ZN5blink13QualifiedName29InitAndReserveCapacityForSizeEj(i32 859) #4
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN3WTF9Threading12static_data_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #4
  %9 = bitcast i8* %8 to %"class.WTF::Threading"*
  %10 = icmp eq i8* %8, null
  br i1 %10, label %11, label %14, !prof !2

11:                                               ; preds = %1
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_9ThreadingEEEPKcv, i64 0, i64 0)) #4
  %13 = bitcast i8* %12 to %"class.WTF::Threading"*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %12) #4
  tail call void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"* %13) #4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi %"class.WTF::Threading"* [ %13, %11 ], [ %9, %1 ]
  %16 = getelementptr inbounds %"class.WTF::Threading", %"class.WTF::Threading"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::AtomicStringTable"*, %"class.WTF::AtomicStringTable"** %16, align 8
  tail call void @_ZN3WTF17AtomicStringTable15ReserveCapacityEj(%"class.WTF::AtomicStringTable"* %17, i32 1579) #4
  tail call void @_ZN5blink10html_names4InitEv() #4
  tail call void @_ZN5blink12mathml_names4InitEv() #4
  tail call void @_ZN5blink9svg_names4InitEv() #4
  tail call void @_ZN5blink11xlink_names4InitEv() #4
  tail call void @_ZN5blink9xml_names4InitEv() #4
  tail call void @_ZN5blink11xmlns_names4InitEv() #4
  tail call void @_ZN5blink21event_interface_names4InitEv() #4
  tail call void @_ZN5blink18event_target_names4InitEv() #4
  tail call void @_ZN5blink16event_type_names4InitEv() #4
  tail call void @_ZN5blink26fetch_initiator_type_names4InitEv() #4
  tail call void @_ZN5blink17font_family_names4InitEv() #4
  tail call void @_ZN5blink20html_tokenizer_names4InitEv() #4
  tail call void @_ZN5blink10http_names4InitEv() #4
  tail call void @_ZN5blink16input_type_names4InitEv() #4
  tail call void @_ZN5blink8keywords4InitEv() #4
  tail call void @_ZN5blink19media_feature_names4InitEv() #4
  tail call void @_ZN5blink16media_type_names4InitEv() #4
  tail call void @_ZN5blink23performance_entry_names4InitEv() #4
  tail call void @_ZN5blink20shadow_element_names4InitEv() #4
  tail call void @_ZN5blink41securitypolicyviolation_disposition_names4InitEv() #4
  tail call void @_ZN5blink19MediaQueryEvaluator4InitEv() #4
  tail call void @_ZN5blink19CSSParserTokenRange18InitStaticEOFTokenEv() #4
  tail call void @_ZN5blink23style_change_extra_data4InitEv() #4
  %18 = load i1, i1* @_ZZN5blink15CoreInitializer20RegisterEventFactoryEvE13is_registered, align 1
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  store i1 true, i1* @_ZZN5blink15CoreInitializer20RegisterEventFactoryEvE13is_registered, align 1
  %20 = tail call noalias i8* @malloc(i64 8) #4
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12EventFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = bitcast i8* %20 to %"class.blink::EventFactoryBase"*
  tail call void @_ZN5blink8Document20RegisterEventFactoryENSt3__110unique_ptrINS_16EventFactoryBaseENS1_14default_deleteIS3_EEEE(%"class.blink::EventFactoryBase"* %22) #4
  br label %23

23:                                               ; preds = %14, %19
  tail call void @_ZN3WTF10StringImpl19FreezeStaticStringsEv() #4
  tail call void @_ZN5blink19V8ThrowDOMException4InitEv() #4
  tail call void @_ZN5blink15BindingSecurity4InitEv() #4
  tail call void @_ZN5blink18TimeZoneController4InitEv() #4
  ret void
}

declare void @_ZN3WTF10StringImpl35ReserveStaticStringsCapacityForSizeEj(i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.WTF::HashMap"* @_ZN3WTF10StringImpl16AllStaticStringsEv() local_unnamed_addr #1

declare void @_ZN5blink13QualifiedName29InitAndReserveCapacityForSizeEj(i32) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicStringTable15ReserveCapacityEj(%"class.WTF::AtomicStringTable"*, i32) local_unnamed_addr #1

declare void @_ZN5blink10html_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink12mathml_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink9svg_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink11xlink_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink9xml_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink11xmlns_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink21event_interface_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink18event_target_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink16event_type_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink26fetch_initiator_type_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink17font_family_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink20html_tokenizer_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink10http_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink16input_type_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink8keywords4InitEv() local_unnamed_addr #1

declare void @_ZN5blink19media_feature_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink16media_type_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink23performance_entry_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink20shadow_element_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink41securitypolicyviolation_disposition_names4InitEv() local_unnamed_addr #1

declare void @_ZN5blink19MediaQueryEvaluator4InitEv() local_unnamed_addr #1

declare void @_ZN5blink19CSSParserTokenRange18InitStaticEOFTokenEv() local_unnamed_addr #1

declare void @_ZN5blink23style_change_extra_data4InitEv() local_unnamed_addr #1

declare void @_ZN3WTF10StringImpl19FreezeStaticStringsEv() local_unnamed_addr #1

declare void @_ZN5blink19V8ThrowDOMException4InitEv() local_unnamed_addr #1

declare void @_ZN5blink15BindingSecurity4InitEv() local_unnamed_addr #1

declare void @_ZN5blink18TimeZoneController4InitEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CoreInitializerD2Ev(%"class.blink::CoreInitializer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CoreInitializerD0Ev(%"class.blink::CoreInitializer"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #5
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF9ThreadingC1Ev(%"class.WTF::Threading"*) unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
