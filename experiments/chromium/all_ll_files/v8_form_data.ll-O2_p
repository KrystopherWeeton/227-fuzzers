; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_form_data.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_form_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::MemorySpan" = type { %"class.v8::CFunction"*, i64 }
%"class.v8::CFunction" = type { i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::CFunctionInfo" = type { %"class.v8::CTypeInfo", i32, %"class.v8::CTypeInfo"* }
%"class.v8::CTypeInfo" = type { i8, i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.305" }
%"struct.std::__1::atomic.305" = type { %"struct.std::__1::__atomic_base.306" }
%"struct.std::__1::__atomic_base.306" = type { %"struct.std::__1::__atomic_base.307" }
%"struct.std::__1::__atomic_base.307" = type { %"struct.std::__1::__cxx_atomic_impl.308" }
%"struct.std::__1::__cxx_atomic_impl.308" = type { %"struct.std::__1::__cxx_atomic_base_impl.309" }
%"struct.std::__1::__cxx_atomic_base_impl.309" = type { i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.186" }
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Symbol" = type { i8 }
%"class.v8::Name" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.191" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.185 }
%class.scoped_refptr.185 = type { %"class.WTF::StringImpl"* }
%"class.blink::TraceWrapperV8Reference.191" = type { %"class.v8::TracedReference.192" }
%"class.v8::TracedReference.192" = type { %"class.v8::BasicTracedReference.193" }
%"class.v8::BasicTracedReference.193" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.669", %"class.WTF::HashMap.669", %"class.WTF::HashMap.674", %"class.std::__1::unique_ptr.679", %"class.std::__1::unique_ptr.726", %"class.blink::Persistent.737", i8, i8, i8, %"class.WTF::Vector.301", %"class.std::__1::unique_ptr.739", %"class.blink::Persistent.745", %"class.blink::Persistent.749", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.651", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.657", %"class.std::__1::unique_ptr.663", i32, i32 }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.669" = type { %"class.WTF::HashTable.670" }
%"class.WTF::HashTable.670" = type <{ %"struct.WTF::KeyValuePair.673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.673" = type opaque
%"class.WTF::HashMap.674" = type { %"class.WTF::HashTable.675" }
%"class.WTF::HashTable.675" = type <{ %"struct.WTF::KeyValuePair.678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.678" = type opaque
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.687", %class.scoped_refptr.185 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.682", i8* }
%"class.WTF::HashMap.682" = type { %"class.WTF::HashTable.683" }
%"class.WTF::HashTable.683" = type <{ %"struct.WTF::KeyValuePair.686"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.686" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.687" = type { %"class.v8::PersistentValueMapBase.688" }
%"class.v8::PersistentValueMapBase.688" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.689", i8* }
%"class.WTF::HashMap.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.694", %"class.WTF::String", %"class.std::__1::unique_ptr.696" }
%"class.WTF::RefCounted.694" = type { %"class.base::RefCounted.695" }
%"class.base::RefCounted.695" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.710", %"class.WTF::Vector.716", i8, i32 }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.WTF::Vector.702"* }
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.703" }
%"class.WTF::VectorBuffer.703" = type { %"class.WTF::VectorBufferBase.704" }
%"class.WTF::VectorBufferBase.704" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.704", [32 x i8] }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.729" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.729" = type { %"class.WTF::HashTable.730" }
%"class.WTF::HashTable.730" = type <{ %"struct.WTF::KeyValuePair.733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.733" = type opaque
%"class.blink::Persistent.737" = type { %"class.blink::PersistentBase.738" }
%"class.blink::PersistentBase.738" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.766", %class.scoped_refptr.769, %"class.blink::Member.770", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.766" = type { %"class.v8::Persistent.767" }
%"class.v8::Persistent.767" = type { %"class.v8::PersistentBase.768" }
%"class.v8::PersistentBase.768" = type { %"class.v8::Context"* }
%class.scoped_refptr.769 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.737" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.302" }
%"class.WTF::VectorBuffer.302" = type { %"class.WTF::VectorBufferBase.303" }
%"class.WTF::VectorBufferBase.303" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.304 }
%class.scoped_refptr.304 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.305" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.745" = type { %"class.blink::PersistentBase.746" }
%"class.blink::PersistentBase.746" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.749" = type { %"class.blink::PersistentBase.750" }
%"class.blink::PersistentBase.750" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.753", i64 }
%"class.blink::HeapVector.753" = type { %"class.WTF::Vector.756" }
%"class.WTF::Vector.756" = type { %"class.WTF::VectorBuffer.757" }
%"class.WTF::VectorBuffer.757" = type { %"class.WTF::VectorBufferBase.758" }
%"class.WTF::VectorBufferBase.758" = type { %"struct.std::__1::pair.759"*, i32, i32 }
%"struct.std::__1::pair.759" = type { %"class.blink::UntracedMember", %"class.blink::Member.761" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.196" }
%"class.WTF::Vector.196" = type { %"class.WTF::VectorBuffer.197" }
%"class.WTF::VectorBuffer.197" = type { %"class.WTF::VectorBufferBase.198" }
%"class.WTF::VectorBufferBase.198" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type opaque
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.227", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector.233", %"class.blink::HeapVector.241", i32, i8, i8, i8, i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.211" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.200", %"class.blink::Member.200" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.200", %"class.blink::Member.202", %"class.blink::Member.200", %"class.blink::Member.200", %"class.blink::Member.204" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.249", %"class.blink::Member.251", %"class.blink::Member.202", %"class.blink::Member.253", %"class.blink::Member.253", %"class.blink::Member.277", %"class.blink::Member.279", %"class.blink::Member.281", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.283", %"class.blink::HeapVector.285" }
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.301", %"class.WTF::Vector.301", i8, i32, %"class.blink::Member.312", %"class.blink::Member.314", %"class.blink::Member.316", %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.322", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.330", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.336", %"class.blink::Member.338", %"class.blink::Member.291", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.341", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.270", %"class.blink::Member.268", %"class.blink::Member.357", %"class.blink::Member.268", %"class.blink::Member.268", %"class.blink::Member.268", %"class.blink::UserActionElementSet", %"class.blink::Member.366", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.373", i16, i8, %"class.blink::Member.380", %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::Member.386", %"class.blink::TextLinkColors", %"class.blink::Member.388", i8, [7 x i8], %"class.blink::HeapHashMap.390", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.268", %"class.WTF::Vector.397", %"class.blink::Member.402", %"class.blink::Member.404", i8, %"class.blink::Member.268", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.406", %"class.blink::HeapVector.408", %"class.std::__1::unique_ptr.416", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.422", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.435", %"class.WTF::Vector.437", i8, i8, %"class.std::__1::unique_ptr.442", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.270", %"class.blink::HeapVector.448", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.456", i8, i32, %"class.blink::Member.458", %"class.blink::Member.460", %"class.blink::Member.462", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.464", %"class.WTF::HashMap.466", %"class.blink::Member.471", %"class.blink::Member.473", %"class.blink::Member.475", %"class.blink::Member.477", %"class.blink::Member.251", %"class.blink::Member.251", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.479", i8, i32, %"class.blink::Member.486", %"class.blink::Member.488", i32, %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member.494", %"class.std::__1::unique_ptr.496", i64, %"class.std::__1::unique_ptr.502", i32, i32, %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::Member.512", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.514", %"class.WTF::Vector.516", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.521", %"class.blink::Member.528", %"class.std::__1::unique_ptr.530", %"class.blink::Member.536", i8, i8, %"class.WTF::String", %"class.blink::Member.538", i8, [7 x i8], %"class.blink::HeapHashMap.540", %"class.blink::HeapObserverSet", %"class.blink::Member.554", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.556", i32, i8, i8, %"class.blink::WeakMember.558", %"class.blink::Member.559" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.294" }
%"class.blink::HeapHashMap.294" = type { %"class.WTF::HashMap.297" }
%"class.WTF::HashMap.297" = type { %"class.WTF::HashTable.298" }
%"class.WTF::HashTable.298" = type <{ %"struct.WTF::KeyValuePair.300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.300" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.572", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.620", i32, i8, [3 x i8], %"class.blink::HeapVector.622", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.630", %"class.blink::Member.632", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.641", %"class.blink::Member.647", %"class.blink::Member.649", i8, [7 x i8] }>
%"class.blink::Supplementable.572" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.573" }
%"class.blink::HeapHashMap.573" = type { %"class.WTF::HashMap.576" }
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.579"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.579" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.588" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.580" }
%"class.blink::HeapObserverSet.580" = type { i32, [4 x i8], %"class.blink::HeapHashSet.581" }
%"class.blink::HeapHashSet.581" = type { %"class.WTF::HashSet.584" }
%"class.WTF::HashSet.584" = type { %"class.WTF::HashTable.585" }
%"class.WTF::HashTable.585" = type <{ %"class.blink::WeakMember.587"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.587" = type opaque
%"class.blink::Supplementable.588" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.589" }
%"class.blink::HeapHashMap.589" = type { %"class.WTF::HashMap.592" }
%"class.WTF::HashMap.592" = type { %"class.WTF::HashTable.593" }
%"class.WTF::HashTable.593" = type <{ %"struct.WTF::KeyValuePair.595"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.595" = type { i8*, %"class.blink::Member.596" }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.598" }
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.600, %"class.std::__1::unique_ptr.604", %"class.std::__1::unique_ptr.604", %"class.std::__1::unique_ptr.610", %"class.std::__1::unique_ptr.610", %"class.blink::Member.314", i32, [4 x i8], %"class.WTF::HashSet.616", i32, i32 }
%class.scoped_refptr.600 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.601", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.603 }
%"class.WTF::RefCounted.601" = type { %"class.base::RefCounted.602" }
%"class.base::RefCounted.602" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.603 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.616" = type { %"class.WTF::HashTable.617" }
%"class.WTF::HashTable.617" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.622" = type { %"class.WTF::Vector.625" }
%"class.WTF::Vector.625" = type { %"class.WTF::VectorBuffer.626" }
%"class.WTF::VectorBuffer.626" = type { %"class.WTF::VectorBufferBase.627" }
%"class.WTF::VectorBufferBase.627" = type { %"class.blink::Member.628"*, i32, i32 }
%"class.blink::Member.628" = type opaque
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.634", i32, i32 }
%"class.blink::HeapHashMap.634" = type { %"class.WTF::HashMap.637" }
%"class.WTF::HashMap.637" = type { %"class.WTF::HashTable.638" }
%"class.WTF::HashTable.638" = type <{ %"struct.WTF::KeyValuePair.640"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.640" = type opaque
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.324" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::KURL"* }
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.343" }
%"class.WTF::VectorBufferBase.343" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.344 }
%class.scoped_refptr.344 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.359" }
%"class.blink::HeapHashMap.359" = type { %"class.WTF::HashMap.362" }
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.365" = type opaque
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"class.blink::WeakMember.372"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.372" = type opaque
%"class.blink::HeapHashSet.373" = type { %"class.WTF::HashSet.376" }
%"class.WTF::HashSet.376" = type { %"class.WTF::HashTable.377" }
%"class.WTF::HashTable.377" = type <{ %"class.blink::WeakMember.379"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.379" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.390" = type { %"class.WTF::HashMap.393" }
%"class.WTF::HashMap.393" = type { %"class.WTF::HashTable.394" }
%"class.WTF::HashTable.394" = type <{ %"struct.WTF::KeyValuePair.396"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.396" = type opaque
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399" }
%"class.WTF::VectorBufferBase.399" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.408" = type { %"class.WTF::Vector.411" }
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"class.blink::Member.414"*, i32, i32 }
%"class.blink::Member.414" = type opaque
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.422" = type { %"class.WTF::HashSet.425" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.blink::WeakMember.428"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.428" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.429", i32, [4 x i8] }>
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"struct.std::__1::pair.432"*, i32, i32 }
%"struct.std::__1::pair.432" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.270" = type { %"class.WTF::Vector.273" }
%"class.WTF::Vector.273" = type { %"class.WTF::VectorBuffer.274" }
%"class.WTF::VectorBuffer.274" = type { %"class.WTF::VectorBufferBase.275" }
%"class.WTF::VectorBufferBase.275" = type { %"class.blink::Member.268"*, i32, i32 }
%"class.blink::HeapVector.448" = type { %"class.WTF::Vector.451" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::Member.454"*, i32, i32 }
%"class.blink::Member.454" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.251" }
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"struct.WTF::KeyValuePair.470"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.470" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.356", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.347, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.347 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.348" }>
%"class.base::RefCountedThreadSafe.348" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.349 }
%class.scoped_refptr.349 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.350", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.350" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.351" }
%"struct.std::__1::atomic.351" = type { %"struct.std::__1::__atomic_base.352" }
%"struct.std::__1::__atomic_base.352" = type { %"struct.std::__1::__atomic_base.353" }
%"struct.std::__1::__atomic_base.353" = type { %"struct.std::__1::__cxx_atomic_impl.354" }
%"struct.std::__1::__cxx_atomic_impl.354" = type { %"struct.std::__1::__cxx_atomic_base_impl.355" }
%"struct.std::__1::__cxx_atomic_base_impl.355" = type { i8 }
%"class.blink::WeakMember.356" = type { %"class.blink::MemberBase.252" }
%"class.blink::HeapHashSet.479" = type { %"class.WTF::HashSet.482" }
%"class.WTF::HashSet.482" = type { %"class.WTF::HashTable.483" }
%"class.WTF::HashTable.483" = type <{ %"class.blink::Member.485"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.485" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.516" = type { %"class.WTF::VectorBuffer.517" }
%"class.WTF::VectorBuffer.517" = type { %"class.WTF::VectorBufferBase.518" }
%"class.WTF::VectorBufferBase.518" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.521" = type { %"class.WTF::HashMap.524" }
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.540" = type { %"class.WTF::HashMap.543" }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.546"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.546" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.547" }
%"class.blink::HeapHashSet.547" = type { %"class.WTF::HashSet.550" }
%"class.WTF::HashSet.550" = type { %"class.WTF::HashTable.551" }
%"class.WTF::HashTable.551" = type <{ %"class.blink::WeakMember.553"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.553" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.251", %"class.blink::HeapHashSet.563", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.570", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.563" = type { %"class.WTF::HashSet.566" }
%"class.WTF::HashSet.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"class.blink::Member.569"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.569" = type opaque
%"class.blink::HeapTaskRunnerTimer.570" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.571", { i64, i64 } }
%"class.blink::WeakMember.571" = type { %"class.blink::MemberBase.557" }
%"class.blink::WeakMember.558" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::Node"* }
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.257" }
%"class.blink::HeapHashMap.257" = type { %"class.WTF::HashMap.260" }
%"class.WTF::HashMap.260" = type { %"class.WTF::HashTable.261" }
%"class.WTF::HashTable.261" = type <{ %"struct.WTF::KeyValuePair.263"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.263" = type { %"class.WTF::AtomicString", %"class.blink::Member.264" }
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.268", i32, %"class.blink::HeapVector.270" }
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.285" = type { %"class.WTF::Vector.288" }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"class.blink::Member.291"*, i32, i32 }
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.208 }
%class.scoped_refptr.208 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.209", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.209" = type { %"class.base::RefCounted.210" }
%"class.base::RefCounted.210" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.215", %"class.blink::Member.217", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.215" = type { %"class.WTF::SingleThreadedBitField.216" }
%"class.WTF::SingleThreadedBitField.216" = type { i32 }
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.219 }
%class.scoped_refptr.219 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.220", %"class.WTF::AtomicString", %"class.WTF::Vector.222" }
%"class.WTF::RefCounted.220" = type { %"class.base::RefCounted.221" }
%"class.base::RefCounted.221" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224", [32 x i8] }
%"class.WTF::VectorBufferBase.224" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::HeapHashMap.229"* }
%"class.blink::HeapHashMap.229" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.230" }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::HeapHashMap.232"* }
%"class.blink::HeapHashMap.232" = type opaque
%"class.blink::HeapVector.233" = type { %"class.WTF::Vector.236" }
%"class.WTF::Vector.236" = type { %"class.WTF::VectorBuffer.237" }
%"class.WTF::VectorBuffer.237" = type { %"class.WTF::VectorBufferBase.238" }
%"class.WTF::VectorBufferBase.238" = type { %"class.blink::Member.239"*, i32, i32 }
%"class.blink::Member.239" = type opaque
%"class.blink::HeapVector.241" = type { %"class.WTF::Vector.244" }
%"class.WTF::Vector.244" = type { %"class.WTF::VectorBuffer.245" }
%"class.WTF::VectorBuffer.245" = type { %"class.WTF::VectorBufferBase.246" }
%"class.WTF::VectorBufferBase.246" = type { %"class.blink::Member.247"*, i32, i32 }
%"class.blink::Member.247" = type opaque
%"class.v8::internal::Isolate" = type opaque
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.182", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.182" = type { %"class.v8::String"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.794" }
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { i8* }
%"class.blink::scheduler::CooperativeSchedulingManager" = type <{ i32 (...)**, i32, i8, [3 x i8], %"class.base::TimeTicks", %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.blink::V8UnionFileOrUSVString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.804", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::File"* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional.806", %"class.absl::optional.811", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.798 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.798 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.799" }
%"class.base::RefCountedThreadSafe.799" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.absl::optional.806" = type { %"class.absl::optional_internal::optional_data.807" }
%"class.absl::optional_internal::optional_data.807" = type { %"class.absl::optional_internal::optional_data_base.808" }
%"class.absl::optional_internal::optional_data_base.808" = type { %"class.absl::optional_internal::optional_data_dtor_base.809" }
%"class.absl::optional_internal::optional_data_dtor_base.809" = type { i8, %union.anon.810 }
%union.anon.810 = type { i64 }
%"class.absl::optional.811" = type { %"class.absl::optional_internal::optional_data.812" }
%"class.absl::optional_internal::optional_data.812" = type { %"class.absl::optional_internal::optional_data_base.813" }
%"class.absl::optional_internal::optional_data_base.813" = type { %"class.absl::optional_internal::optional_data_dtor_base.814" }
%"class.absl::optional_internal::optional_data_dtor_base.814" = type { i8, %union.anon.815 }
%union.anon.815 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.816" }
%"class.base::time_internal::TimeBase.816" = type { i64 }
%"class.blink::HeapVector.817" = type { %"class.WTF::Vector.820" }
%"class.WTF::Vector.820" = type { %"class.WTF::VectorBuffer.821" }
%"class.WTF::VectorBuffer.821" = type { %"class.WTF::VectorBufferBase.822" }
%"class.WTF::VectorBufferBase.822" = type { %"class.blink::Member.823"*, i32, i32 }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::V8UnionFileOrUSVString"* }
%"class.blink::HeapVector.826" = type { %"class.WTF::Vector.829" }
%"class.WTF::Vector.829" = type { %"class.WTF::VectorBuffer.830" }
%"class.WTF::VectorBuffer.830" = type { %"class.WTF::VectorBufferBase.831" }
%"class.WTF::VectorBufferBase.831" = type { %"class.blink::Member.832"*, i32, i32 }
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::bindings::UnionBase"* }
%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource" = type { i32 (...)** }
%"class.blink::Iterator" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.191", %class.scoped_refptr.344 }
%"class.blink::V8ForEachIteratorCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.872", %"class.blink::Member.872" }
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::ScriptState"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.789 }
%union.anon.789 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.v8::Array" = type { i8 }
%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator" = type { %"class.blink::Iterator", %"class.blink::Member.838" }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* }
%"class.blink::HeapVector.844" = type { %"class.WTF::Vector.847" }
%"class.WTF::Vector.847" = type { %"class.WTF::VectorBuffer.848" }
%"class.WTF::VectorBuffer.848" = type { %"class.WTF::VectorBufferBase.849", [48 x i8] }
%"class.WTF::VectorBufferBase.849" = type { %"class.blink::ScriptValue"*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.absl::optional.856" = type { %"class.absl::optional_internal::optional_data.857" }
%"class.absl::optional_internal::optional_data.857" = type { %"class.absl::optional_internal::optional_data_base.858" }
%"class.absl::optional_internal::optional_data_base.858" = type { %"class.absl::optional_internal::optional_data_dtor_base.859" }
%"class.absl::optional_internal::optional_data_dtor_base.859" = type { i8, %union.anon.860 }
%union.anon.860 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876" = type { %"class.blink::Iterator", %"class.blink::Member.838" }
%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877" = type { %"class.blink::Iterator", %"class.blink::Member.838" }

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings18ToV8HelperSequenceINS0_9UnionBaseENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_ = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEED0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink8Iterator18GetWrapperTypeInfoEv = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE4nextEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE15IterationSourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE13EntrySelector6SelectEPNS_11ScriptStateERKS2_RKS5_ = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_11ScriptValueELj2EEEEEN2v85LocalINS4_5ArrayEEERKT_NS5_INS4_6ObjectEEEPNS4_7IsolateE = comdat any

$_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF12VectorBufferIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink17NativeValueTraitsINS_25V8ForEachIteratorCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE17forEachForBindingEPNS_11ScriptStateERKNS_11ScriptValueEPNS_25V8ForEachIteratorCallbackESB_RNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEED0Ev = comdat any

$_ZNK5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE4nextEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEED0Ev = comdat any

$_ZNK5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE = comdat any

$_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE4nextEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEEE = comdat any

$_ZTVN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEEE = comdat any

@.str = private unnamed_addr constant [9 x i8] c"FormData\00", align 1
@_ZN5blink10V8FormData18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink10V8FormData24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink10V8FormData33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink8FormData18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink10V8FormData18wrapper_type_info_E, align 8
@.ref.tmp = private constant %"class.v8::MemorySpan" zeroinitializer, align 8
@_ZZN5blink10V8FormData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [10 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data23AppendOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data23DeleteOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data20GetOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data23GetAllOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data20HasOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data20SetOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data24EntriesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data24ForEachOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data21KeysOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_form_data23ValuesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [7 x i8] c"append\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"getAll\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"has\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"entries\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"forEach\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"values\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink15HTMLFormElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.14 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink4Blob18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink6V8Blob18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZTVN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"*)* @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"*, %"class.blink::Visitor"*)* @_ZNK5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::Iterator"*)* @_ZNK5blink8Iterator18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"*)* @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE4nextEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE to i8*)] }, comdat, align 8
@_ZN5blink8Iterator18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.17 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.21 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.23 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.24 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [132 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::ScriptValue, WTF::VectorTraits<blink::ScriptValue> >]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.25 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CallbackFunctionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink25V8ForEachIteratorCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"*)* @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"*, %"class.blink::Visitor"*)* @_ZNK5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::Iterator"*)* @_ZNK5blink8Iterator18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"*)* @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE4nextEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE to i8*)] }, comdat, align 8
@_ZTVN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"*)* @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"*, %"class.blink::Visitor"*)* @_ZNK5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::Iterator"*)* @_ZNK5blink8Iterator18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::ScriptValue"*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"*)* @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE4nextEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10V8FormData24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %6 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %5) #8
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %5) #8
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink10V8FormData18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %6, %"class.v8::ObjectTemplate"* %7, %"class.v8::FunctionTemplate"* %5, %"class.v8::FunctionTemplate"* null) #8
  tail call void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"* %5, void (%"class.v8::FunctionCallbackInfo"*)* nonnull @_ZN5blink12_GLOBAL__N_112v8_form_data19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, %"class.v8::Value"* null, i32 0, %"class.v8::MemorySpan"* nonnull dereferenceable(16) @.ref.tmp) #8
  tail call void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"* %5, i32 0) #8
  %8 = bitcast %"class.v8::ObjectTemplate"* %6 to %"class.v8::Template"*
  %9 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %10 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %5) #8
  %12 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([10 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink10V8FormData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %8, %"class.v8::Template"* %9, %"class.v8::Template"* %2, %"class.v8::Signature"* %11, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10V8FormData33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* nocapture readnone dereferenceable(32), %"class.v8::Object"* nocapture readnone, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Template"* nocapture readnone, i64) #0 align 2 {
  %8 = trunc i64 %6 to i8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #8
  %12 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %11, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 7) #8
  %13 = icmp eq %"class.v8::String"* %12, null
  br i1 %13, label %14, label %15, !prof !2

14:                                               ; preds = %10
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %15

15:                                               ; preds = %10, %14
  %16 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %17 = tail call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %3, %"class.v8::Context"* %0, %"class.v8::Value"* %16) #8
  %18 = icmp eq %"class.v8::Value"* %17, null
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %15
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %20

20:                                               ; preds = %15, %19
  %21 = tail call %"class.v8::Symbol"* @_ZN2v86Symbol11GetIteratorEPNS_7IsolateE(%"class.v8::Isolate"* %11) #8
  %22 = bitcast %"class.v8::Symbol"* %21 to %"class.v8::Name"*
  %23 = tail call i16 @_ZN2v86Object17DefineOwnPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEENS_17PropertyAttributeE(%"class.v8::Object"* %3, %"class.v8::Context"* %0, %"class.v8::Name"* %22, %"class.v8::Value"* %17, i32 2) #8
  %24 = trunc i16 %23 to i8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %20
  tail call void @_ZN2v82V817FromJustIsNothingEv() #8
  br label %27

27:                                               ; preds = %7, %26, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN2v816FunctionTemplate14SetCallHandlerEPFvRKNS_20FunctionCallbackInfoINS_5ValueEEEENS_5LocalIS2_EENS_14SideEffectTypeERKNS_10MemorySpanIKNS_9CFunctionEEE(%"class.v8::FunctionTemplate"*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::Value"*, i32, %"class.v8::MemorySpan"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data19ConstructorCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 5, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 3
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %16 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #8
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #8
  %20 = getelementptr inbounds i64, i64* %5, i64 5
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 3
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %24, label %61

24:                                               ; preds = %1
  %25 = add i64 %21, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %21, -4294967296
  %29 = zext i32 %27 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 67
  br i1 %34, label %35, label %61

35:                                               ; preds = %24
  %36 = add i64 %21, 23
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, -2
  %40 = icmp eq i32 %39, 10
  br i1 %40, label %41, label %61

41:                                               ; preds = %35
  %42 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8
  %43 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() #8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %44, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #8
  br label %60

60:                                               ; preds = %41, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8
  br label %183

61:                                               ; preds = %35, %24, %1
  %62 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %63 = load i64*, i64** %62, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 -1
  %65 = bitcast i64* %64 to %"class.v8::Object"*
  %66 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %67 = add i64 %66, 8
  %68 = inttoptr i64 %67 to %"class.blink::V8PerIsolateData"**
  %69 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %69, i64 0, i32 8
  %71 = load i8, i8* %70, align 8, !range !3
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %61
  %74 = getelementptr inbounds i64, i64* %5, i64 3
  %75 = icmp eq i64* %64, null
  %76 = getelementptr inbounds i64, i64* %5, i64 2
  %77 = select i1 %75, i64* %76, i64* %64, !prof !2
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %74, align 8
  br label %183

79:                                               ; preds = %61
  %80 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 8
  %82 = sext i32 %81 to i64
  br label %83

83:                                               ; preds = %113, %79
  %84 = phi i64 [ %85, %113 ], [ %82, %79 ]
  %85 = add nsw i64 %84, -1
  %86 = icmp sgt i64 %84, 0
  br i1 %86, label %87, label %122

87:                                               ; preds = %83
  %88 = icmp sgt i64 %84, %82
  br i1 %88, label %89, label %93

89:                                               ; preds = %87
  %90 = load i64, i64* %6, align 8
  %91 = add i64 %90, 160
  %92 = inttoptr i64 %91 to %"class.v8::Value"*
  br label %96

93:                                               ; preds = %87
  %94 = getelementptr inbounds i64, i64* %63, i64 %85
  %95 = bitcast i64* %94 to %"class.v8::Value"*
  br label %96

96:                                               ; preds = %93, %89
  %97 = phi %"class.v8::Value"* [ %92, %89 ], [ %95, %93 ]
  %98 = bitcast %"class.v8::Value"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 3
  %101 = icmp eq i64 %100, 1
  br i1 %101, label %102, label %119

102:                                              ; preds = %96
  %103 = add i64 %99, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = and i64 %99, -4294967296
  %107 = zext i32 %105 to i64
  %108 = or i64 %106, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load i16, i16* %110, align 2
  %112 = icmp eq i16 %111, 67
  br i1 %112, label %113, label %119

113:                                              ; preds = %102
  %114 = add i64 %99, 23
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, -2
  %118 = icmp eq i32 %117, 10
  br i1 %118, label %83, label %119

119:                                              ; preds = %113, %96, %102
  %120 = trunc i64 %84 to i32
  %121 = icmp slt i32 %120, 1
  br i1 %121, label %122, label %129

122:                                              ; preds = %83, %119
  %123 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #8
  %124 = bitcast i8* %123 to %"class.blink::FormData"*
  tail call void @_ZN5blink8FormDataC1Ev(%"class.blink::FormData"* %124) #8
  %125 = getelementptr inbounds i8, i8* %123, i64 -4
  %126 = bitcast i8* %125 to i16*
  %127 = load atomic i16, i16* %126 monotonic, align 2
  %128 = or i16 %127, 1
  store atomic i16 %128, i16* %126 release, align 2
  br label %169

129:                                              ; preds = %119
  %130 = icmp sgt i32 %81, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %129
  %132 = load i64, i64* %6, align 8
  %133 = add i64 %132, 160
  %134 = inttoptr i64 %133 to %"class.v8::Value"*
  br label %137

135:                                              ; preds = %129
  %136 = bitcast i64* %63 to %"class.v8::Value"*
  br label %137

137:                                              ; preds = %131, %135
  %138 = phi %"class.v8::Value"* [ %134, %131 ], [ %136, %135 ]
  %139 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15HTMLFormElement18wrapper_type_info_E, align 8
  %140 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %69, %"struct.blink::WrapperTypeInfo"* %139, %"class.v8::Value"* %138) #8
  br i1 %140, label %141, label %163

141:                                              ; preds = %137
  %142 = bitcast %"class.v8::Value"* %138 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = add i64 %143, -1
  %145 = inttoptr i64 %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = and i64 %143, -4294967296
  %148 = zext i32 %146 to i64
  %149 = or i64 %147, %148
  %150 = add i64 %149, 7
  %151 = inttoptr i64 %150 to i16*
  %152 = load i16, i16* %151, align 2
  switch i16 %152, label %157 [
    i16 1057, label %153
    i16 1056, label %153
    i16 1040, label %153
  ]

153:                                              ; preds = %141, %141, %141
  %154 = add i64 %143, 19
  %155 = inttoptr i64 %154 to i8**
  %156 = load i8*, i8** %155, align 1
  br label %160

157:                                              ; preds = %141
  %158 = bitcast %"class.v8::Value"* %138 to %"class.v8::Object"*
  %159 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %158, i32 1) #8
  br label %160

160:                                              ; preds = %153, %157
  %161 = phi i8* [ %156, %153 ], [ %159, %157 ]
  %162 = bitcast i8* %161 to %"class.blink::HTMLFormElement"*
  br label %166

163:                                              ; preds = %137
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %139, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %164 = load i32, i32* %17, align 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %183

166:                                              ; preds = %160, %163
  %167 = phi %"class.blink::HTMLFormElement"* [ %162, %160 ], [ null, %163 ]
  %168 = call %"class.blink::FormData"* @_ZN5blink8FormData6CreateEPNS_15HTMLFormElementERNS_14ExceptionStateE(%"class.blink::HTMLFormElement"* %167, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  br label %169

169:                                              ; preds = %122, %166
  %170 = phi %"class.blink::FormData"* [ %168, %166 ], [ %124, %122 ]
  %171 = load i32, i32* %17, align 8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %183

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.blink::FormData", %"class.blink::FormData"* %170, i64 0, i32 0
  %175 = call %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"* %174, %"class.v8::Isolate"* %8, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink10V8FormData18wrapper_type_info_E, %"class.v8::Object"* %65) #8
  %176 = load i64*, i64** %4, align 8
  %177 = getelementptr inbounds i64, i64* %176, i64 3
  %178 = icmp eq %"class.v8::Object"* %175, null
  %179 = bitcast %"class.v8::Object"* %175 to i64*
  %180 = getelementptr inbounds i64, i64* %176, i64 2
  %181 = select i1 %178, i64* %180, i64* %179, !prof !2
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %177, align 8
  br label %183

183:                                              ; preds = %163, %169, %73, %173, %60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %184 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %185 = load i64*, i64** %184, align 8
  %186 = icmp eq i64* %185, null
  br i1 %186, label %196, label %187

187:                                              ; preds = %183
  %188 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %15, align 8
  %189 = bitcast %"class.v8::Isolate"* %188 to %"class.v8::internal::Isolate"*
  %190 = load i64, i64* %185, align 8
  %191 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %189, i64 %190) #8
  %192 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %188) #8
  br i1 %192, label %196, label %193

193:                                              ; preds = %187
  %194 = bitcast i64* %191 to %"class.v8::Value"*
  %195 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %188, %"class.v8::Value"* %194) #8
  br label %196

196:                                              ; preds = %193, %187, %183
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #8
  br label %212

212:                                              ; preds = %196, %208, %211
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #8
  ret void
}

declare void @_ZN2v816FunctionTemplate9SetLengthEi(%"class.v8::FunctionTemplate"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10V8FormData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #8
  %9 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 10, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([10 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink10V8FormData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %10, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %8, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data23AppendOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #8
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #8
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #8
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 2
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call fastcc void @_ZN5blink12_GLOBAL__N_112v8_form_data24AppendOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %375

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 1
  %35 = bitcast i64* %34 to %"class.v8::Isolate"**
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  %37 = icmp eq i32 %28, 2
  br i1 %37, label %38, label %315

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 1
  %42 = bitcast i64* %41 to %"class.v8::Value"*
  %43 = ptrtoint %"class.v8::Isolate"* %36 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to %"class.blink::V8PerIsolateData"**
  %46 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %46, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Blob18wrapper_type_info_E, %"class.v8::Value"* %42) #8
  br i1 %47, label %48, label %49

48:                                               ; preds = %38
  tail call fastcc void @_ZN5blink12_GLOBAL__N_112v8_form_data24AppendOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %375

49:                                               ; preds = %38
  %50 = load i64*, i64** %32, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 1
  %52 = bitcast i64* %51 to %"class.v8::Isolate"**
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %54) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 56, i1 false) #8
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %56, align 8
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %57, align 2
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %59 = bitcast i8** %58 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %53, %"class.v8::Isolate"** %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %64 = bitcast %"class.WTF::StringImpl"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #8
  %65 = load i32, i32* %27, align 8
  %66 = icmp slt i32 %65, 2
  br i1 %66, label %67, label %87, !prof !2

67:                                               ; preds = %49
  %68 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #8
  %69 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %65) #8
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #8
  br label %86

86:                                               ; preds = %85, %82, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #8
  br label %285

87:                                               ; preds = %49
  %88 = load i64*, i64** %39, align 8
  %89 = getelementptr inbounds i64, i64* %88, i64 -1
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i64 %90, -4294967296
  %95 = zext i32 %93 to i64
  %96 = or i64 %94, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load i16, i16* %98, align 2
  switch i16 %99, label %106 [
    i16 1057, label %100
    i16 1056, label %100
    i16 1040, label %100
  ]

100:                                              ; preds = %87, %87, %87
  %101 = bitcast i64* %88 to %"class.v8::Value"*
  %102 = add i64 %90, 19
  %103 = inttoptr i64 %102 to %"class.blink::FormData"**
  %104 = load %"class.blink::FormData"*, %"class.blink::FormData"** %103, align 1
  %105 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %105) #8
  br label %122

106:                                              ; preds = %87
  %107 = bitcast i64* %89 to %"class.v8::Object"*
  %108 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %107, i32 1) #8
  %109 = load i32, i32* %27, align 8
  %110 = bitcast i8* %108 to %"class.blink::FormData"*
  %111 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %111) #8
  %112 = icmp sgt i32 %109, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = bitcast i64** %39 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %106
  %117 = load i64*, i64** %32, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %100, %113, %116
  %123 = phi i8* [ %111, %116 ], [ %105, %100 ], [ %111, %113 ]
  %124 = phi %"class.blink::FormData"* [ %110, %116 ], [ %104, %100 ], [ %110, %113 ]
  %125 = phi %"class.v8::Value"* [ %121, %116 ], [ %101, %100 ], [ %115, %113 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %53, %"class.v8::Value"* %125, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %126 = load i32, i32* %62, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %262

128:                                              ; preds = %122
  %129 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %129) #8
  %130 = load i32, i32* %27, align 8
  %131 = icmp sgt i32 %130, 1
  br i1 %131, label %138, label %132

132:                                              ; preds = %128
  %133 = load i64*, i64** %32, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 1
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, 160
  %137 = inttoptr i64 %136 to %"class.v8::Value"*
  br label %142

138:                                              ; preds = %128
  %139 = load i64*, i64** %39, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = bitcast i64* %140 to %"class.v8::Value"*
  br label %142

142:                                              ; preds = %138, %132
  %143 = phi %"class.v8::Value"* [ %137, %132 ], [ %141, %138 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %53, %"class.v8::Value"* %143, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %144 = load i32, i32* %62, align 8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %239

146:                                              ; preds = %142
  %147 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #8
  %148 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %149 = load %"class.v8::String"*, %"class.v8::String"** %148, align 8
  %150 = icmp eq %"class.v8::String"* %149, null
  br i1 %150, label %153, label %151, !prof !2

151:                                              ; preds = %146
  %152 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %149, i32 0) #8
  br label %174

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %174, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %174

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i33
  %166 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %165, i33 1) #8
  %167 = extractvalue { i33, i1 } %166, 1
  %168 = extractvalue { i33, i1 } %166, 0
  %169 = icmp slt i33 %168, 0
  %170 = or i1 %167, %169
  br i1 %170, label %171, label %172, !prof !2

171:                                              ; preds = %162
  call void @llvm.trap() #8
  unreachable

172:                                              ; preds = %162
  %173 = trunc i33 %168 to i32
  store i32 %173, i32* %163, align 4
  br label %174

174:                                              ; preds = %172, %157, %153, %151
  %175 = phi %"class.WTF::StringImpl"* [ %152, %151 ], [ null, %153 ], [ %155, %157 ], [ %155, %172 ]
  %176 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %175, %"class.WTF::StringImpl"** %176, align 8
  %177 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #8
  %178 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %179 = load %"class.v8::String"*, %"class.v8::String"** %178, align 8
  %180 = icmp eq %"class.v8::String"* %179, null
  br i1 %180, label %183, label %181, !prof !2

181:                                              ; preds = %174
  %182 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %179, i32 0) #8
  br label %204

183:                                              ; preds = %174
  %184 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %204, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %204

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i33
  %196 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %195, i33 1) #8
  %197 = extractvalue { i33, i1 } %196, 1
  %198 = extractvalue { i33, i1 } %196, 0
  %199 = icmp slt i33 %198, 0
  %200 = or i1 %197, %199
  br i1 %200, label %201, label %202, !prof !2

201:                                              ; preds = %192
  call void @llvm.trap() #8
  unreachable

202:                                              ; preds = %192
  %203 = trunc i33 %198 to i32
  store i32 %203, i32* %193, align 4
  br label %204

204:                                              ; preds = %202, %187, %183, %181
  %205 = phi %"class.WTF::StringImpl"* [ %182, %181 ], [ null, %183 ], [ %185, %187 ], [ %185, %202 ]
  %206 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %206, align 8
  call void @_ZN5blink8FormData6appendERKN3WTF6StringES4_(%"class.blink::FormData"* %124, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #8
  br label %222

222:                                              ; preds = %221, %218, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #8
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #8
  br label %238

238:                                              ; preds = %237, %234, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #8
  br label %239

239:                                              ; preds = %238, %142
  %240 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  store i8* null, i8** %240, align 8
  %242 = icmp eq i8* %241, null
  br i1 %242, label %244, label %243

243:                                              ; preds = %239
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %241) #8
  br label %244

244:                                              ; preds = %243, %239
  %245 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #8
  br label %261

261:                                              ; preds = %260, %257, %244
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %129) #8
  br label %262

262:                                              ; preds = %261, %122
  %263 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %264 = load i8*, i8** %263, align 8
  store i8* null, i8** %263, align 8
  %265 = icmp eq i8* %264, null
  br i1 %265, label %267, label %266

266:                                              ; preds = %262
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %264) #8
  br label %267

267:                                              ; preds = %266, %262
  %268 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %267
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #8
  br label %284

284:                                              ; preds = %283, %280, %267
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %123) #8
  br label %285

285:                                              ; preds = %284, %86
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %286 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %287 = load i64*, i64** %286, align 8
  %288 = icmp eq i64* %287, null
  br i1 %288, label %298, label %289

289:                                              ; preds = %285
  %290 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %61, align 8
  %291 = bitcast %"class.v8::Isolate"* %290 to %"class.v8::internal::Isolate"*
  %292 = load i64, i64* %287, align 8
  %293 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %291, i64 %292) #8
  %294 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %290) #8
  br i1 %294, label %298, label %295

295:                                              ; preds = %289
  %296 = bitcast i64* %293 to %"class.v8::Value"*
  %297 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %290, %"class.v8::Value"* %296) #8
  br label %298

298:                                              ; preds = %295, %289, %285
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #8
  br label %314

314:                                              ; preds = %298, %310, %313
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %54) #8
  br label %375

315:                                              ; preds = %31
  %316 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %316) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %316, i8 -86, i64 56, i1 false)
  %317 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %317, align 8
  %318 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %318, align 8
  %319 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %319, align 2
  %320 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %321 = bitcast i8** %320 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %321, align 8
  %322 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %322, align 8
  %323 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %36, %"class.v8::Isolate"** %323, align 8
  %324 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %324, align 8
  %325 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %326 = bitcast %"class.WTF::StringImpl"** %325 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %326, i8 0, i64 16, i1 false) #8
  %327 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %327) #8
  %328 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %28) #8
  %329 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %328, %"class.WTF::StringImpl"** %329, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #8
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %345, label %332

332:                                              ; preds = %315
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  br i1 %336, label %339, label %341

339:                                              ; preds = %332
  %340 = add i32 %338, -1
  store i32 %340, i32* %337, align 4
  br label %341

341:                                              ; preds = %339, %332
  %342 = phi i32 [ %340, %339 ], [ %338, %332 ]
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %341
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %330) #8
  br label %345

345:                                              ; preds = %344, %341, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %327) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %317, align 8
  %346 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %347 = load i64*, i64** %346, align 8
  %348 = icmp eq i64* %347, null
  br i1 %348, label %358, label %349

349:                                              ; preds = %345
  %350 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %323, align 8
  %351 = bitcast %"class.v8::Isolate"* %350 to %"class.v8::internal::Isolate"*
  %352 = load i64, i64* %347, align 8
  %353 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %351, i64 %352) #8
  %354 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %350) #8
  br i1 %354, label %358, label %355

355:                                              ; preds = %349
  %356 = bitcast i64* %353 to %"class.v8::Value"*
  %357 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %350, %"class.v8::Value"* %356) #8
  br label %358

358:                                              ; preds = %355, %349, %345
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #8
  br label %374

374:                                              ; preds = %358, %370, %373
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %316) #8
  br label %375

375:                                              ; preds = %48, %314, %374, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data23DeleteOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #8
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %45, !prof !2

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %23) #8
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  br label %158

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %64 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::FormData"**
  %62 = load %"class.blink::FormData"*, %"class.blink::FormData"** %61, align 1
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #8
  br label %77

64:                                               ; preds = %45
  %65 = bitcast i64* %48 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #8
  %67 = load i32, i32* %22, align 8
  %68 = bitcast i8* %66 to %"class.blink::FormData"*
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %69) #8
  %70 = icmp sgt i32 %67, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %64
  %72 = load i64*, i64** %6, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %82

77:                                               ; preds = %59, %64
  %78 = phi i8* [ %63, %59 ], [ %69, %64 ]
  %79 = phi %"class.blink::FormData"* [ %62, %59 ], [ %68, %64 ]
  %80 = bitcast i64** %46 to %"class.v8::Value"**
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %80, align 8
  br label %82

82:                                               ; preds = %71, %77
  %83 = phi i8* [ %69, %71 ], [ %78, %77 ]
  %84 = phi %"class.blink::FormData"* [ %68, %71 ], [ %79, %77 ]
  %85 = phi %"class.v8::Value"* [ %76, %71 ], [ %81, %77 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %85, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %86 = load i32, i32* %19, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %135

88:                                               ; preds = %82
  %89 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #8
  %90 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %91 = load %"class.v8::String"*, %"class.v8::String"** %90, align 8
  %92 = icmp eq %"class.v8::String"* %91, null
  br i1 %92, label %95, label %93, !prof !2

93:                                               ; preds = %88
  %94 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %91, i32 0) #8
  br label %116

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %116, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #8
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !2

113:                                              ; preds = %104
  call void @llvm.trap() #8
  unreachable

114:                                              ; preds = %104
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %105, align 4
  br label %116

116:                                              ; preds = %93, %95, %99, %114
  %117 = phi %"class.WTF::StringImpl"* [ %94, %93 ], [ null, %95 ], [ %97, %99 ], [ %97, %114 ]
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  call void @_ZN5blink8FormData11deleteEntryERKN3WTF6StringE(%"class.blink::FormData"* %84, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #8
  br label %134

134:                                              ; preds = %116, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #8
  br label %135

135:                                              ; preds = %82, %134
  %136 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  store i8* null, i8** %136, align 8
  %138 = icmp eq i8* %137, null
  br i1 %138, label %140, label %139

139:                                              ; preds = %135
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %137) #8
  br label %140

140:                                              ; preds = %139, %135
  %141 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #8
  br label %157

157:                                              ; preds = %140, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %83) #8
  br label %158

158:                                              ; preds = %157, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %160 = load i64*, i64** %159, align 8
  %161 = icmp eq i64* %160, null
  br i1 %161, label %171, label %162

162:                                              ; preds = %158
  %163 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %164 = bitcast %"class.v8::Isolate"* %163 to %"class.v8::internal::Isolate"*
  %165 = load i64, i64* %160, align 8
  %166 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %164, i64 %165) #8
  %167 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %163) #8
  br i1 %167, label %171, label %168

168:                                              ; preds = %162
  %169 = bitcast i64* %166 to %"class.v8::Value"*
  %170 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %163, %"class.v8::Value"* %169) #8
  br label %171

171:                                              ; preds = %168, %162, %158
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #8
  br label %187

187:                                              ; preds = %171, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data20GetOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #8
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %45, !prof !2

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %23) #8
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  br label %174

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = bitcast i64* %48 to %"class.v8::Object"*
  %50 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %49) #8
  %51 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %50)
  %52 = load i64, i64* %48, align 8
  %53 = add i64 %52, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i64 %52, -4294967296
  %57 = zext i32 %55 to i64
  %58 = or i64 %56, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load i16, i16* %60, align 2
  switch i16 %61, label %66 [
    i16 1057, label %62
    i16 1056, label %62
    i16 1040, label %62
  ]

62:                                               ; preds = %45, %45, %45
  %63 = add i64 %52, 19
  %64 = inttoptr i64 %63 to i8**
  %65 = load i8*, i8** %64, align 1
  br label %68

66:                                               ; preds = %45
  %67 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %49, i32 1) #8
  br label %68

68:                                               ; preds = %62, %66
  %69 = phi i8* [ %65, %62 ], [ %67, %66 ]
  %70 = bitcast i8* %69 to %"class.blink::FormData"*
  %71 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %71) #8
  %72 = load i32, i32* %22, align 8
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %6, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 1
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 160
  %79 = inttoptr i64 %78 to %"class.v8::Value"*
  br label %83

80:                                               ; preds = %68
  %81 = bitcast i64** %46 to %"class.v8::Value"**
  %82 = load %"class.v8::Value"*, %"class.v8::Value"** %81, align 8
  br label %83

83:                                               ; preds = %74, %80
  %84 = phi %"class.v8::Value"* [ %79, %74 ], [ %82, %80 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %84, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %85 = load i32, i32* %19, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %151

87:                                               ; preds = %83
  %88 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #8
  %89 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %90 = load %"class.v8::String"*, %"class.v8::String"** %89, align 8
  %91 = icmp eq %"class.v8::String"* %90, null
  br i1 %91, label %94, label %92, !prof !2

92:                                               ; preds = %87
  %93 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %90, i32 0) #8
  br label %115

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %115, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %115

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i33
  %107 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %106, i33 1) #8
  %108 = extractvalue { i33, i1 } %107, 1
  %109 = extractvalue { i33, i1 } %107, 0
  %110 = icmp slt i33 %109, 0
  %111 = or i1 %108, %110
  br i1 %111, label %112, label %113, !prof !2

112:                                              ; preds = %103
  call void @llvm.trap() #8
  unreachable

113:                                              ; preds = %103
  %114 = trunc i33 %109 to i32
  store i32 %114, i32* %104, align 4
  br label %115

115:                                              ; preds = %92, %94, %98, %113
  %116 = phi %"class.WTF::StringImpl"* [ %93, %92 ], [ null, %94 ], [ %96, %98 ], [ %96, %113 ]
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %117, align 8
  %118 = call %"class.blink::V8UnionFileOrUSVString"* @_ZN5blink8FormData3getERKN3WTF6StringE(%"class.blink::FormData"* %70, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #8
  br label %134

134:                                              ; preds = %115, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #8
  %135 = icmp eq %"class.blink::V8UnionFileOrUSVString"* %118, null
  br i1 %135, label %136, label %141

136:                                              ; preds = %134
  %137 = bitcast %"class.blink::ScriptState"* %51 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 176
  %140 = inttoptr i64 %139 to %"class.v8::Value"*
  br label %143

141:                                              ; preds = %134
  %142 = call %"class.v8::Value"* @_ZNK5blink22V8UnionFileOrUSVString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionFileOrUSVString"* nonnull %118, %"class.blink::ScriptState"* %51) #8
  br label %143

143:                                              ; preds = %136, %141
  %144 = phi %"class.v8::Value"* [ %140, %136 ], [ %142, %141 ]
  %145 = icmp eq %"class.v8::Value"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %143
  %147 = load i64*, i64** %6, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 3
  %149 = bitcast %"class.v8::Value"* %144 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %148, align 8
  br label %151

151:                                              ; preds = %143, %83, %146
  %152 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  store i8* null, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %156, label %155

155:                                              ; preds = %151
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %153) #8
  br label %156

156:                                              ; preds = %155, %151
  %157 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #8
  br label %173

173:                                              ; preds = %156, %169, %172
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %71) #8
  br label %174

174:                                              ; preds = %173, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %175 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %176 = load i64*, i64** %175, align 8
  %177 = icmp eq i64* %176, null
  br i1 %177, label %187, label %178

178:                                              ; preds = %174
  %179 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %180 = bitcast %"class.v8::Isolate"* %179 to %"class.v8::internal::Isolate"*
  %181 = load i64, i64* %176, align 8
  %182 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %180, i64 %181) #8
  %183 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %179) #8
  br i1 %183, label %187, label %184

184:                                              ; preds = %178
  %185 = bitcast i64* %182 to %"class.v8::Value"*
  %186 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %179, %"class.v8::Value"* %185) #8
  br label %187

187:                                              ; preds = %184, %178, %174
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #8
  br label %203

203:                                              ; preds = %187, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data23GetAllOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.blink::HeapVector.817", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 1
  %10 = bitcast i64* %9 to %"class.v8::Isolate"**
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %17 = bitcast i8** %16 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %11, %"class.v8::Isolate"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %22 = bitcast %"class.WTF::StringImpl"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #8
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %26, label %46, !prof !2

26:                                               ; preds = %1
  %27 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %24) #8
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #8
  br label %45

45:                                               ; preds = %26, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %168

46:                                               ; preds = %1
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 -1
  %50 = bitcast i64* %49 to %"class.v8::Object"*
  %51 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %50) #8
  %52 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %51)
  %53 = load i64, i64* %49, align 8
  %54 = add i64 %53, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = and i64 %53, -4294967296
  %58 = zext i32 %56 to i64
  %59 = or i64 %57, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load i16, i16* %61, align 2
  switch i16 %62, label %67 [
    i16 1057, label %63
    i16 1056, label %63
    i16 1040, label %63
  ]

63:                                               ; preds = %46, %46, %46
  %64 = add i64 %53, 19
  %65 = inttoptr i64 %64 to i8**
  %66 = load i8*, i8** %65, align 1
  br label %69

67:                                               ; preds = %46
  %68 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %50, i32 1) #8
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i8* [ %66, %63 ], [ %68, %67 ]
  %71 = bitcast i8* %70 to %"class.blink::FormData"*
  %72 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %72) #8
  %73 = load i32, i32* %23, align 8
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %69
  %76 = load i64*, i64** %7, align 8
  %77 = getelementptr inbounds i64, i64* %76, i64 1
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 160
  %80 = inttoptr i64 %79 to %"class.v8::Value"*
  br label %84

81:                                               ; preds = %69
  %82 = bitcast i64** %47 to %"class.v8::Value"**
  %83 = load %"class.v8::Value"*, %"class.v8::Value"** %82, align 8
  br label %84

84:                                               ; preds = %75, %81
  %85 = phi %"class.v8::Value"* [ %80, %75 ], [ %83, %81 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %11, %"class.v8::Value"* %85, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %86 = load i32, i32* %20, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %145

88:                                               ; preds = %84
  %89 = bitcast %"class.blink::HeapVector.817"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #8
  %90 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #8
  %91 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %92 = load %"class.v8::String"*, %"class.v8::String"** %91, align 8
  %93 = icmp eq %"class.v8::String"* %92, null
  br i1 %93, label %96, label %94, !prof !2

94:                                               ; preds = %88
  %95 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %92, i32 0) #8
  br label %117

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %117, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %117

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i33
  %109 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #8
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !2

114:                                              ; preds = %105
  call void @llvm.trap() #8
  unreachable

115:                                              ; preds = %105
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %106, align 4
  br label %117

117:                                              ; preds = %94, %96, %100, %115
  %118 = phi %"class.WTF::StringImpl"* [ %95, %94 ], [ null, %96 ], [ %98, %100 ], [ %98, %115 ]
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %119, align 8
  call void @_ZN5blink8FormData6getAllERKN3WTF6StringE(%"class.blink::HeapVector.817"* nonnull sret %5, %"class.blink::FormData"* %71, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #8
  br label %135

135:                                              ; preds = %117, %131, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #8
  %136 = bitcast %"class.blink::HeapVector.817"* %5 to %"class.blink::HeapVector.826"*
  %137 = call %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS0_9UnionBaseENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"* %52, %"class.blink::HeapVector.826"* nonnull dereferenceable(16) %136) #8
  %138 = icmp eq %"class.v8::Value"* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = load i64*, i64** %7, align 8
  %141 = getelementptr inbounds i64, i64* %140, i64 3
  %142 = bitcast %"class.v8::Value"* %137 to i64*
  %143 = load i64, i64* %142, align 8
  store i64 %143, i64* %141, align 8
  br label %144

144:                                              ; preds = %135, %139
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #8
  br label %145

145:                                              ; preds = %84, %144
  %146 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  store i8* null, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %150, label %149

149:                                              ; preds = %145
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %147) #8
  br label %150

150:                                              ; preds = %149, %145
  %151 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #8
  br label %167

167:                                              ; preds = %150, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %72) #8
  br label %168

168:                                              ; preds = %167, %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %169 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = icmp eq i64* %170, null
  br i1 %171, label %181, label %172

172:                                              ; preds = %168
  %173 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  %174 = bitcast %"class.v8::Isolate"* %173 to %"class.v8::internal::Isolate"*
  %175 = load i64, i64* %170, align 8
  %176 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %174, i64 %175) #8
  %177 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %173) #8
  br i1 %177, label %181, label %178

178:                                              ; preds = %172
  %179 = bitcast i64* %176 to %"class.v8::Value"*
  %180 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %173, %"class.v8::Value"* %179) #8
  br label %181

181:                                              ; preds = %178, %172, %168
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #8
  br label %197

197:                                              ; preds = %181, %193, %196
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data20HasOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #8
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %45, !prof !2

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %23) #8
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  br label %167

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %64 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::FormData"**
  %62 = load %"class.blink::FormData"*, %"class.blink::FormData"** %61, align 1
  %63 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %63) #8
  br label %77

64:                                               ; preds = %45
  %65 = bitcast i64* %48 to %"class.v8::Object"*
  %66 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %65, i32 1) #8
  %67 = load i32, i32* %22, align 8
  %68 = bitcast i8* %66 to %"class.blink::FormData"*
  %69 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %69) #8
  %70 = icmp sgt i32 %67, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %64
  %72 = load i64*, i64** %6, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 160
  %76 = inttoptr i64 %75 to %"class.v8::Value"*
  br label %82

77:                                               ; preds = %59, %64
  %78 = phi i8* [ %63, %59 ], [ %69, %64 ]
  %79 = phi %"class.blink::FormData"* [ %62, %59 ], [ %68, %64 ]
  %80 = bitcast i64** %46 to %"class.v8::Value"**
  %81 = load %"class.v8::Value"*, %"class.v8::Value"** %80, align 8
  br label %82

82:                                               ; preds = %71, %77
  %83 = phi i8* [ %69, %71 ], [ %78, %77 ]
  %84 = phi %"class.blink::FormData"* [ %68, %71 ], [ %79, %77 ]
  %85 = phi %"class.v8::Value"* [ %76, %71 ], [ %81, %77 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %85, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %86 = load i32, i32* %19, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %144

88:                                               ; preds = %82
  %89 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #8
  %90 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %91 = load %"class.v8::String"*, %"class.v8::String"** %90, align 8
  %92 = icmp eq %"class.v8::String"* %91, null
  br i1 %92, label %95, label %93, !prof !2

93:                                               ; preds = %88
  %94 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %91, i32 0) #8
  br label %116

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %116, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #8
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !2

113:                                              ; preds = %104
  call void @llvm.trap() #8
  unreachable

114:                                              ; preds = %104
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %105, align 4
  br label %116

116:                                              ; preds = %93, %95, %99, %114
  %117 = phi %"class.WTF::StringImpl"* [ %94, %93 ], [ null, %95 ], [ %97, %99 ], [ %97, %114 ]
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = call zeroext i1 @_ZN5blink8FormData3hasERKN3WTF6StringE(%"class.blink::FormData"* %84, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #8
  br label %135

135:                                              ; preds = %116, %131, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #8
  %136 = load i64*, i64** %6, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 3
  %138 = getelementptr inbounds i64, i64* %136, i64 1
  %139 = load i64, i64* %138, align 8
  %140 = select i1 %119, i64 184, i64 192
  %141 = add i64 %139, %140
  %142 = inttoptr i64 %141 to i64*
  %143 = load i64, i64* %142, align 8
  store i64 %143, i64* %137, align 8
  br label %144

144:                                              ; preds = %82, %135
  %145 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  store i8* null, i8** %145, align 8
  %147 = icmp eq i8* %146, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %146) #8
  br label %149

149:                                              ; preds = %148, %144
  %150 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #8
  br label %166

166:                                              ; preds = %149, %162, %165
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %83) #8
  br label %167

167:                                              ; preds = %166, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %168 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %169 = load i64*, i64** %168, align 8
  %170 = icmp eq i64* %169, null
  br i1 %170, label %180, label %171

171:                                              ; preds = %167
  %172 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %173 = bitcast %"class.v8::Isolate"* %172 to %"class.v8::internal::Isolate"*
  %174 = load i64, i64* %169, align 8
  %175 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %173, i64 %174) #8
  %176 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %172) #8
  br i1 %176, label %180, label %177

177:                                              ; preds = %171
  %178 = bitcast i64* %175 to %"class.v8::Value"*
  %179 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %172, %"class.v8::Value"* %178) #8
  br label %180

180:                                              ; preds = %177, %171, %167
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #8
  br label %196

196:                                              ; preds = %180, %192, %195
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data20SetOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #8
  %11 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 5
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #8
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %10, i64 0, i32 4, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %14
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %10) #8
  br label %26

26:                                               ; preds = %1, %14, %25
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %28, 2
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call fastcc void @_ZN5blink12_GLOBAL__N_112v8_form_data21SetOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %375

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 1
  %35 = bitcast i64* %34 to %"class.v8::Isolate"**
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  %37 = icmp eq i32 %28, 2
  br i1 %37, label %38, label %315

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 1
  %42 = bitcast i64* %41 to %"class.v8::Value"*
  %43 = ptrtoint %"class.v8::Isolate"* %36 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to %"class.blink::V8PerIsolateData"**
  %46 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %46, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Blob18wrapper_type_info_E, %"class.v8::Value"* %42) #8
  br i1 %47, label %48, label %49

48:                                               ; preds = %38
  tail call fastcc void @_ZN5blink12_GLOBAL__N_112v8_form_data21SetOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0)
  br label %375

49:                                               ; preds = %38
  %50 = load i64*, i64** %32, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 1
  %52 = bitcast i64* %51 to %"class.v8::Isolate"**
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %54) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 56, i1 false) #8
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %56, align 8
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %57, align 2
  %58 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %59 = bitcast i8** %58 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %59, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %60, align 8
  %61 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %53, %"class.v8::Isolate"** %61, align 8
  %62 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %64 = bitcast %"class.WTF::StringImpl"** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #8
  %65 = load i32, i32* %27, align 8
  %66 = icmp slt i32 %65, 2
  br i1 %66, label %67, label %87, !prof !2

67:                                               ; preds = %49
  %68 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #8
  %69 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %65) #8
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #8
  br label %86

86:                                               ; preds = %85, %82, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #8
  br label %285

87:                                               ; preds = %49
  %88 = load i64*, i64** %39, align 8
  %89 = getelementptr inbounds i64, i64* %88, i64 -1
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = and i64 %90, -4294967296
  %95 = zext i32 %93 to i64
  %96 = or i64 %94, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load i16, i16* %98, align 2
  switch i16 %99, label %106 [
    i16 1057, label %100
    i16 1056, label %100
    i16 1040, label %100
  ]

100:                                              ; preds = %87, %87, %87
  %101 = bitcast i64* %88 to %"class.v8::Value"*
  %102 = add i64 %90, 19
  %103 = inttoptr i64 %102 to %"class.blink::FormData"**
  %104 = load %"class.blink::FormData"*, %"class.blink::FormData"** %103, align 1
  %105 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %105) #8
  br label %122

106:                                              ; preds = %87
  %107 = bitcast i64* %89 to %"class.v8::Object"*
  %108 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %107, i32 1) #8
  %109 = load i32, i32* %27, align 8
  %110 = bitcast i8* %108 to %"class.blink::FormData"*
  %111 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %111) #8
  %112 = icmp sgt i32 %109, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = bitcast i64** %39 to %"class.v8::Value"**
  %115 = load %"class.v8::Value"*, %"class.v8::Value"** %114, align 8
  br label %122

116:                                              ; preds = %106
  %117 = load i64*, i64** %32, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 1
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 160
  %121 = inttoptr i64 %120 to %"class.v8::Value"*
  br label %122

122:                                              ; preds = %100, %113, %116
  %123 = phi i8* [ %111, %116 ], [ %105, %100 ], [ %111, %113 ]
  %124 = phi %"class.blink::FormData"* [ %110, %116 ], [ %104, %100 ], [ %110, %113 ]
  %125 = phi %"class.v8::Value"* [ %121, %116 ], [ %101, %100 ], [ %115, %113 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %53, %"class.v8::Value"* %125, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %126 = load i32, i32* %62, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %262

128:                                              ; preds = %122
  %129 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %129) #8
  %130 = load i32, i32* %27, align 8
  %131 = icmp sgt i32 %130, 1
  br i1 %131, label %138, label %132

132:                                              ; preds = %128
  %133 = load i64*, i64** %32, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 1
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, 160
  %137 = inttoptr i64 %136 to %"class.v8::Value"*
  br label %142

138:                                              ; preds = %128
  %139 = load i64*, i64** %39, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = bitcast i64* %140 to %"class.v8::Value"*
  br label %142

142:                                              ; preds = %138, %132
  %143 = phi %"class.v8::Value"* [ %137, %132 ], [ %141, %138 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %53, %"class.v8::Value"* %143, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %144 = load i32, i32* %62, align 8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %239

146:                                              ; preds = %142
  %147 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #8
  %148 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %149 = load %"class.v8::String"*, %"class.v8::String"** %148, align 8
  %150 = icmp eq %"class.v8::String"* %149, null
  br i1 %150, label %153, label %151, !prof !2

151:                                              ; preds = %146
  %152 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %149, i32 0) #8
  br label %174

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %174, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %174

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i33
  %166 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %165, i33 1) #8
  %167 = extractvalue { i33, i1 } %166, 1
  %168 = extractvalue { i33, i1 } %166, 0
  %169 = icmp slt i33 %168, 0
  %170 = or i1 %167, %169
  br i1 %170, label %171, label %172, !prof !2

171:                                              ; preds = %162
  call void @llvm.trap() #8
  unreachable

172:                                              ; preds = %162
  %173 = trunc i33 %168 to i32
  store i32 %173, i32* %163, align 4
  br label %174

174:                                              ; preds = %172, %157, %153, %151
  %175 = phi %"class.WTF::StringImpl"* [ %152, %151 ], [ null, %153 ], [ %155, %157 ], [ %155, %172 ]
  %176 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %175, %"class.WTF::StringImpl"** %176, align 8
  %177 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #8
  %178 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %179 = load %"class.v8::String"*, %"class.v8::String"** %178, align 8
  %180 = icmp eq %"class.v8::String"* %179, null
  br i1 %180, label %183, label %181, !prof !2

181:                                              ; preds = %174
  %182 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %179, i32 0) #8
  br label %204

183:                                              ; preds = %174
  %184 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %204, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %204

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i33
  %196 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %195, i33 1) #8
  %197 = extractvalue { i33, i1 } %196, 1
  %198 = extractvalue { i33, i1 } %196, 0
  %199 = icmp slt i33 %198, 0
  %200 = or i1 %197, %199
  br i1 %200, label %201, label %202, !prof !2

201:                                              ; preds = %192
  call void @llvm.trap() #8
  unreachable

202:                                              ; preds = %192
  %203 = trunc i33 %198 to i32
  store i32 %203, i32* %193, align 4
  br label %204

204:                                              ; preds = %202, %187, %183, %181
  %205 = phi %"class.WTF::StringImpl"* [ %182, %181 ], [ null, %183 ], [ %185, %187 ], [ %185, %202 ]
  %206 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %206, align 8
  call void @_ZN5blink8FormData3setERKN3WTF6StringES4_(%"class.blink::FormData"* %124, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #8
  br label %222

222:                                              ; preds = %221, %218, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #8
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #8
  br label %238

238:                                              ; preds = %237, %234, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #8
  br label %239

239:                                              ; preds = %238, %142
  %240 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  store i8* null, i8** %240, align 8
  %242 = icmp eq i8* %241, null
  br i1 %242, label %244, label %243

243:                                              ; preds = %239
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %241) #8
  br label %244

244:                                              ; preds = %243, %239
  %245 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #8
  br label %261

261:                                              ; preds = %260, %257, %244
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %129) #8
  br label %262

262:                                              ; preds = %261, %122
  %263 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %264 = load i8*, i8** %263, align 8
  store i8* null, i8** %263, align 8
  %265 = icmp eq i8* %264, null
  br i1 %265, label %267, label %266

266:                                              ; preds = %262
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %264) #8
  br label %267

267:                                              ; preds = %266, %262
  %268 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %267
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #8
  br label %284

284:                                              ; preds = %283, %280, %267
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %123) #8
  br label %285

285:                                              ; preds = %284, %86
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %286 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %287 = load i64*, i64** %286, align 8
  %288 = icmp eq i64* %287, null
  br i1 %288, label %298, label %289

289:                                              ; preds = %285
  %290 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %61, align 8
  %291 = bitcast %"class.v8::Isolate"* %290 to %"class.v8::internal::Isolate"*
  %292 = load i64, i64* %287, align 8
  %293 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %291, i64 %292) #8
  %294 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %290) #8
  br i1 %294, label %298, label %295

295:                                              ; preds = %289
  %296 = bitcast i64* %293 to %"class.v8::Value"*
  %297 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %290, %"class.v8::Value"* %296) #8
  br label %298

298:                                              ; preds = %295, %289, %285
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #8
  br label %314

314:                                              ; preds = %298, %310, %313
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %54) #8
  br label %375

315:                                              ; preds = %31
  %316 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %316) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %316, i8 -86, i64 56, i1 false)
  %317 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %317, align 8
  %318 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %318, align 8
  %319 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %319, align 2
  %320 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %321 = bitcast i8** %320 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %321, align 8
  %322 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %322, align 8
  %323 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %36, %"class.v8::Isolate"** %323, align 8
  %324 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %324, align 8
  %325 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %326 = bitcast %"class.WTF::StringImpl"** %325 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %326, i8 0, i64 16, i1 false) #8
  %327 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %327) #8
  %328 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %28) #8
  %329 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %328, %"class.WTF::StringImpl"** %329, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #8
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %345, label %332

332:                                              ; preds = %315
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  br i1 %336, label %339, label %341

339:                                              ; preds = %332
  %340 = add i32 %338, -1
  store i32 %340, i32* %337, align 4
  br label %341

341:                                              ; preds = %339, %332
  %342 = phi i32 [ %340, %339 ], [ %338, %332 ]
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %341
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %330) #8
  br label %345

345:                                              ; preds = %344, %341, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %327) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %317, align 8
  %346 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %347 = load i64*, i64** %346, align 8
  %348 = icmp eq i64* %347, null
  br i1 %348, label %358, label %349

349:                                              ; preds = %345
  %350 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %323, align 8
  %351 = bitcast %"class.v8::Isolate"* %350 to %"class.v8::internal::Isolate"*
  %352 = load i64, i64* %347, align 8
  %353 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %351, i64 %352) #8
  %354 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %350) #8
  br i1 %354, label %358, label %355

355:                                              ; preds = %349
  %356 = bitcast i64* %353 to %"class.v8::Value"*
  %357 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %350, %"class.v8::Value"* %356) #8
  br label %358

358:                                              ; preds = %355, %349, %345
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #8
  br label %374

374:                                              ; preds = %358, %370, %373
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %316) #8
  br label %375

375:                                              ; preds = %48, %314, %374, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data24EntriesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = bitcast i64* %5 to %"class.v8::Object"*
  %7 = load i64, i64* %5, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %23

21:                                               ; preds = %1
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %6, i32 1) #8
  br label %23

23:                                               ; preds = %17, %21
  %24 = phi i8* [ %20, %17 ], [ %22, %21 ]
  %25 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %6) #8
  %26 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25)
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %36 = bitcast i8** %35 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %39 = bitcast %"class.v8::Isolate"** %38 to i64*
  store i64 %30, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringImpl"** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #8
  %43 = getelementptr inbounds i8, i8* %24, i64 16
  %44 = bitcast i8* %43 to %"class.blink::Iterable"*
  %45 = bitcast i8* %43 to %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)***
  %46 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)**, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*** %45, align 8
  %47 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)** %46, align 8
  %48 = call %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %47(%"class.blink::Iterable"* %44, %"class.blink::ScriptState"* %26, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %49 = icmp eq %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %23
  %51 = ptrtoint %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %48 to i64
  %52 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #8
  %53 = getelementptr inbounds i8, i8* %52, i64 8
  %54 = bitcast i8* %53 to i64**
  store i64* null, i64** %54, align 8
  %55 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %52, i64 16
  %57 = bitcast i8* %56 to i64*
  store i64 %51, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %52, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  %62 = bitcast i8* %52 to %"class.blink::Iterator"*
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi %"class.blink::Iterator"* [ %62, %50 ], [ null, %23 ]
  %65 = load i32, i32* %40, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %101

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::Iterator", %"class.blink::Iterator"* %64, i64 0, i32 0
  %69 = icmp eq %"class.blink::Iterator"* %64, null
  %70 = load i64*, i64** %27, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 3
  br i1 %69, label %72, label %78, !prof !2

72:                                               ; preds = %67
  %73 = getelementptr inbounds i64, i64* %70, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 176
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %71, align 8
  br label %101

78:                                               ; preds = %67
  %79 = bitcast i8* %24 to %"class.blink::ScriptWrappable"*
  %80 = load i64*, i64** %3, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 -1
  %82 = bitcast i64* %81 to %"class.v8::Object"*
  %83 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %71, %"class.blink::ScriptWrappable"* nonnull %68, %"class.v8::Object"* %82, %"class.blink::ScriptWrappable"* %79) #8
  br i1 %83, label %101, label %84

84:                                               ; preds = %78
  %85 = load i64*, i64** %3, align 8
  %86 = getelementptr inbounds i64, i64* %85, i64 -1
  %87 = bitcast i64* %86 to %"class.v8::Object"*
  %88 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %87) #8
  %89 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %88) #8
  %90 = bitcast %"class.blink::Iterator"* %64 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %91 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %91, i64 7
  %93 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %92, align 8
  %94 = call %"class.v8::Value"* %93(%"class.blink::ScriptWrappable"* nonnull %68, %"class.blink::ScriptState"* %89) #8
  %95 = icmp eq %"class.v8::Value"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %84
  %97 = load i64*, i64** %27, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 3
  %99 = bitcast %"class.v8::Value"* %94 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %98, align 8
  br label %101

101:                                              ; preds = %63, %96, %84, %78, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %102 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = icmp eq i64* %103, null
  br i1 %104, label %114, label %105

105:                                              ; preds = %101
  %106 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %107 = bitcast %"class.v8::Isolate"* %106 to %"class.v8::internal::Isolate"*
  %108 = load i64, i64* %103, align 8
  %109 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %107, i64 %108) #8
  %110 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %106) #8
  br i1 %110, label %114, label %111

111:                                              ; preds = %105
  %112 = bitcast i64* %109 to %"class.v8::Value"*
  %113 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %106, %"class.v8::Value"* %112) #8
  br label %114

114:                                              ; preds = %111, %105, %101
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #8
  br label %130

130:                                              ; preds = %114, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data24ForEachOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = alloca %"class.blink::ScriptValue", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %16, align 2
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %18 = bitcast i8** %17 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %23 = bitcast %"class.WTF::StringImpl"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #8
  %24 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %47, !prof !2

27:                                               ; preds = %1
  %28 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  %29 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %25) #8
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #8
  br label %46

46:                                               ; preds = %27, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %208

47:                                               ; preds = %1
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 -1
  %51 = bitcast i64* %50 to %"class.v8::Object"*
  %52 = load i64, i64* %50, align 8
  %53 = add i64 %52, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i64 %52, -4294967296
  %57 = zext i32 %55 to i64
  %58 = or i64 %56, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load i16, i16* %60, align 2
  switch i16 %61, label %66 [
    i16 1057, label %62
    i16 1056, label %62
    i16 1040, label %62
  ]

62:                                               ; preds = %47, %47, %47
  %63 = add i64 %52, 19
  %64 = inttoptr i64 %63 to i8**
  %65 = load i8*, i8** %64, align 1
  br label %68

66:                                               ; preds = %47
  %67 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %51, i32 1) #8
  br label %68

68:                                               ; preds = %62, %66
  %69 = phi i8* [ %65, %62 ], [ %67, %66 ]
  %70 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %51) #8
  %71 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %70)
  %72 = load i32, i32* %24, align 8
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = load i64*, i64** %8, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 1
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 160
  %79 = inttoptr i64 %78 to %"class.v8::Value"*
  br label %83

80:                                               ; preds = %68
  %81 = bitcast i64** %48 to %"class.v8::Value"**
  %82 = load %"class.v8::Value"*, %"class.v8::Value"** %81, align 8
  br label %83

83:                                               ; preds = %74, %80
  %84 = phi %"class.v8::Value"* [ %79, %74 ], [ %82, %80 ]
  %85 = call %"class.blink::V8ForEachIteratorCallback"* @_ZN5blink17NativeValueTraitsINS_25V8ForEachIteratorCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, i32 0, %"class.v8::Value"* %84, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %86 = load i32, i32* %21, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %208

88:                                               ; preds = %83
  %89 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #8
  %90 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 24, i1 false) #8
  %91 = load i32, i32* %24, align 8
  %92 = icmp sgt i32 %91, 1
  br i1 %92, label %99, label %93

93:                                               ; preds = %88
  %94 = load i64*, i64** %8, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, 160
  %98 = inttoptr i64 %97 to %"class.v8::Value"*
  br label %103

99:                                               ; preds = %88
  %100 = load i64*, i64** %48, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = bitcast i64* %101 to %"class.v8::Value"*
  br label %103

103:                                              ; preds = %93, %99
  %104 = phi %"class.v8::Value"* [ %98, %93 ], [ %102, %99 ]
  %105 = bitcast %"class.v8::Value"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, 3
  %108 = icmp eq i64 %107, 1
  br i1 %108, label %109, label %145

109:                                              ; preds = %103
  %110 = add i64 %106, -1
  %111 = inttoptr i64 %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = and i64 %106, -4294967296
  %114 = zext i32 %112 to i64
  %115 = or i64 %113, %114
  %116 = add i64 %115, 7
  %117 = inttoptr i64 %116 to i16*
  %118 = load i16, i16* %117, align 2
  %119 = icmp eq i16 %118, 67
  br i1 %119, label %120, label %145

120:                                              ; preds = %109
  %121 = add i64 %106, 23
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, -2
  %125 = icmp eq i32 %124, 10
  br i1 %125, label %126, label %145

126:                                              ; preds = %120
  %127 = bitcast %"class.blink::ScriptValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #8
  call void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* nonnull sret %5, %"class.v8::Isolate"* %12) #8
  %128 = bitcast %"class.blink::ScriptValue"* %5 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.blink::ScriptValue"* %4 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  %132 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1
  %133 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %131, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %132) #8
  %134 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  %135 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %134, align 8
  %136 = icmp eq %"class.blink::DOMWrapperWorld"* %135, null
  br i1 %136, label %144, label %137

137:                                              ; preds = %126
  %138 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %135, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %138) #8
  %139 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %135) #8
  %143 = bitcast %"class.blink::DOMWrapperWorld"* %135 to i8*
  call void @free(i8* %143) #8
  br label %144

144:                                              ; preds = %126, %137, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #8
  br label %179

145:                                              ; preds = %109, %103, %120
  %146 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #8
  br i1 %92, label %153, label %147

147:                                              ; preds = %145
  %148 = load i64*, i64** %8, align 8
  %149 = getelementptr inbounds i64, i64* %148, i64 1
  %150 = load i64, i64* %149, align 8
  %151 = add i64 %150, 160
  %152 = inttoptr i64 %151 to %"class.v8::Value"*
  br label %157

153:                                              ; preds = %145
  %154 = load i64*, i64** %48, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 1
  %156 = bitcast i64* %155 to %"class.v8::Value"*
  br label %157

157:                                              ; preds = %147, %153
  %158 = phi %"class.v8::Value"* [ %152, %147 ], [ %156, %153 ]
  %159 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 0
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %159, align 8, !alias.scope !4
  %160 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %160, %"class.v8::Isolate"* %12, %"class.v8::Value"* %158) #8
  %161 = bitcast %"class.blink::ScriptValue"* %6 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.blink::ScriptValue"* %4 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  %165 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %164, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %160) #8
  %166 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  %167 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %166, align 8
  %168 = icmp eq %"class.blink::DOMWrapperWorld"* %167, null
  br i1 %168, label %176, label %169

169:                                              ; preds = %157
  %170 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %167, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %170) #8
  %171 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %167, i64 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %169
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %167) #8
  %175 = bitcast %"class.blink::DOMWrapperWorld"* %167 to i8*
  call void @free(i8* %175) #8
  br label %176

176:                                              ; preds = %157, %169, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #8
  %177 = load i32, i32* %21, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %197

179:                                              ; preds = %176, %144
  %180 = getelementptr inbounds i8, i8* %69, i64 16
  %181 = bitcast i8* %180 to %"class.blink::Iterable"*
  %182 = bitcast %"class.blink::ScriptValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #8
  %183 = bitcast i64* %50 to %"class.v8::Value"*
  %184 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 0
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %184, align 8
  %185 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %185, %"class.v8::Isolate"* %12, %"class.v8::Value"* %183) #8
  call void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE17forEachForBindingEPNS_11ScriptStateERKNS_11ScriptValueEPNS_25V8ForEachIteratorCallbackESB_RNS_14ExceptionStateE(%"class.blink::Iterable"* %181, %"class.blink::ScriptState"* %71, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %7, %"class.blink::V8ForEachIteratorCallback"* %85, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %186 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  %187 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %186, align 8
  %188 = icmp eq %"class.blink::DOMWrapperWorld"* %187, null
  br i1 %188, label %196, label %189

189:                                              ; preds = %179
  %190 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %187, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %190) #8
  %191 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %187, i64 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %189
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %187) #8
  %195 = bitcast %"class.blink::DOMWrapperWorld"* %187 to i8*
  call void @free(i8* %195) #8
  br label %196

196:                                              ; preds = %179, %189, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #8
  br label %197

197:                                              ; preds = %176, %196
  %198 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %90, align 8
  %199 = icmp eq %"class.blink::DOMWrapperWorld"* %198, null
  br i1 %199, label %207, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %198, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %201) #8
  %202 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %198, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %198) #8
  %206 = bitcast %"class.blink::DOMWrapperWorld"* %198 to i8*
  call void @free(i8* %206) #8
  br label %207

207:                                              ; preds = %197, %200, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #8
  br label %208

208:                                              ; preds = %83, %207, %46
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %209 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %210 = load i64*, i64** %209, align 8
  %211 = icmp eq i64* %210, null
  br i1 %211, label %221, label %212

212:                                              ; preds = %208
  %213 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %214 = bitcast %"class.v8::Isolate"* %213 to %"class.v8::internal::Isolate"*
  %215 = load i64, i64* %210, align 8
  %216 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %214, i64 %215) #8
  %217 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %213) #8
  br i1 %217, label %221, label %218

218:                                              ; preds = %212
  %219 = bitcast i64* %216 to %"class.v8::Value"*
  %220 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %213, %"class.v8::Value"* %219) #8
  br label %221

221:                                              ; preds = %218, %212, %208
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %237, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  br i1 %228, label %231, label %233

231:                                              ; preds = %224
  %232 = add i32 %230, -1
  store i32 %232, i32* %229, align 4
  br label %233

233:                                              ; preds = %231, %224
  %234 = phi i32 [ %232, %231 ], [ %230, %224 ]
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %237

236:                                              ; preds = %233
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #8
  br label %237

237:                                              ; preds = %221, %233, %236
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data21KeysOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = bitcast i64* %5 to %"class.v8::Object"*
  %7 = load i64, i64* %5, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %23

21:                                               ; preds = %1
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %6, i32 1) #8
  br label %23

23:                                               ; preds = %17, %21
  %24 = phi i8* [ %20, %17 ], [ %22, %21 ]
  %25 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %6) #8
  %26 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25)
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %36 = bitcast i8** %35 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)>, <2 x i8*>* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %39 = bitcast %"class.v8::Isolate"** %38 to i64*
  store i64 %30, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringImpl"** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #8
  %43 = getelementptr inbounds i8, i8* %24, i64 16
  %44 = bitcast i8* %43 to %"class.blink::Iterable"*
  %45 = bitcast i8* %43 to %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)***
  %46 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)**, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*** %45, align 8
  %47 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)** %46, align 8
  %48 = call %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %47(%"class.blink::Iterable"* %44, %"class.blink::ScriptState"* %26, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %49 = icmp eq %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %23
  %51 = ptrtoint %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %48 to i64
  %52 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #8
  %53 = getelementptr inbounds i8, i8* %52, i64 8
  %54 = bitcast i8* %53 to i64**
  store i64* null, i64** %54, align 8
  %55 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %52, i64 16
  %57 = bitcast i8* %56 to i64*
  store i64 %51, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %52, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  %62 = bitcast i8* %52 to %"class.blink::Iterator"*
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi %"class.blink::Iterator"* [ %62, %50 ], [ null, %23 ]
  %65 = load i32, i32* %40, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %101

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::Iterator", %"class.blink::Iterator"* %64, i64 0, i32 0
  %69 = icmp eq %"class.blink::Iterator"* %64, null
  %70 = load i64*, i64** %27, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 3
  br i1 %69, label %72, label %78, !prof !2

72:                                               ; preds = %67
  %73 = getelementptr inbounds i64, i64* %70, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 176
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %71, align 8
  br label %101

78:                                               ; preds = %67
  %79 = bitcast i8* %24 to %"class.blink::ScriptWrappable"*
  %80 = load i64*, i64** %3, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 -1
  %82 = bitcast i64* %81 to %"class.v8::Object"*
  %83 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %71, %"class.blink::ScriptWrappable"* nonnull %68, %"class.v8::Object"* %82, %"class.blink::ScriptWrappable"* %79) #8
  br i1 %83, label %101, label %84

84:                                               ; preds = %78
  %85 = load i64*, i64** %3, align 8
  %86 = getelementptr inbounds i64, i64* %85, i64 -1
  %87 = bitcast i64* %86 to %"class.v8::Object"*
  %88 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %87) #8
  %89 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %88) #8
  %90 = bitcast %"class.blink::Iterator"* %64 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %91 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %91, i64 7
  %93 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %92, align 8
  %94 = call %"class.v8::Value"* %93(%"class.blink::ScriptWrappable"* nonnull %68, %"class.blink::ScriptState"* %89) #8
  %95 = icmp eq %"class.v8::Value"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %84
  %97 = load i64*, i64** %27, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 3
  %99 = bitcast %"class.v8::Value"* %94 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %98, align 8
  br label %101

101:                                              ; preds = %63, %96, %84, %78, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %102 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = icmp eq i64* %103, null
  br i1 %104, label %114, label %105

105:                                              ; preds = %101
  %106 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %107 = bitcast %"class.v8::Isolate"* %106 to %"class.v8::internal::Isolate"*
  %108 = load i64, i64* %103, align 8
  %109 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %107, i64 %108) #8
  %110 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %106) #8
  br i1 %110, label %114, label %111

111:                                              ; preds = %105
  %112 = bitcast i64* %109 to %"class.v8::Value"*
  %113 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %106, %"class.v8::Value"* %112) #8
  br label %114

114:                                              ; preds = %111, %105, %101
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #8
  br label %130

130:                                              ; preds = %114, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_form_data23ValuesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 -1
  %6 = bitcast i64* %5 to %"class.v8::Object"*
  %7 = load i64, i64* %5, align 8
  %8 = add i64 %7, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, -4294967296
  %12 = zext i32 %10 to i64
  %13 = or i64 %11, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load i16, i16* %15, align 2
  switch i16 %16, label %21 [
    i16 1057, label %17
    i16 1056, label %17
    i16 1040, label %17
  ]

17:                                               ; preds = %1, %1, %1
  %18 = add i64 %7, 19
  %19 = inttoptr i64 %18 to i8**
  %20 = load i8*, i8** %19, align 1
  br label %23

21:                                               ; preds = %1
  %22 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %6, i32 1) #8
  br label %23

23:                                               ; preds = %17, %21
  %24 = phi i8* [ %20, %17 ], [ %22, %21 ]
  %25 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %6) #8
  %26 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25)
  %27 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 1
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 56, i1 false)
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %36 = bitcast i8** %35 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)>, <2 x i8*>* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %39 = bitcast %"class.v8::Isolate"** %38 to i64*
  store i64 %30, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %42 = bitcast %"class.WTF::StringImpl"** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #8
  %43 = getelementptr inbounds i8, i8* %24, i64 16
  %44 = bitcast i8* %43 to %"class.blink::Iterable"*
  %45 = bitcast i8* %43 to %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)***
  %46 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)**, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*** %45, align 8
  %47 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)** %46, align 8
  %48 = call %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %47(%"class.blink::Iterable"* %44, %"class.blink::ScriptState"* %26, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #8
  %49 = icmp eq %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %23
  %51 = ptrtoint %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %48 to i64
  %52 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #8
  %53 = getelementptr inbounds i8, i8* %52, i64 8
  %54 = bitcast i8* %53 to i64**
  store i64* null, i64** %54, align 8
  %55 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %52, i64 16
  %57 = bitcast i8* %56 to i64*
  store i64 %51, i64* %57, align 8
  %58 = getelementptr inbounds i8, i8* %52, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  %62 = bitcast i8* %52 to %"class.blink::Iterator"*
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi %"class.blink::Iterator"* [ %62, %50 ], [ null, %23 ]
  %65 = load i32, i32* %40, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %101

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::Iterator", %"class.blink::Iterator"* %64, i64 0, i32 0
  %69 = icmp eq %"class.blink::Iterator"* %64, null
  %70 = load i64*, i64** %27, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 3
  br i1 %69, label %72, label %78, !prof !2

72:                                               ; preds = %67
  %73 = getelementptr inbounds i64, i64* %70, i64 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 176
  %76 = inttoptr i64 %75 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %71, align 8
  br label %101

78:                                               ; preds = %67
  %79 = bitcast i8* %24 to %"class.blink::ScriptWrappable"*
  %80 = load i64*, i64** %3, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 -1
  %82 = bitcast i64* %81 to %"class.v8::Object"*
  %83 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %71, %"class.blink::ScriptWrappable"* nonnull %68, %"class.v8::Object"* %82, %"class.blink::ScriptWrappable"* %79) #8
  br i1 %83, label %101, label %84

84:                                               ; preds = %78
  %85 = load i64*, i64** %3, align 8
  %86 = getelementptr inbounds i64, i64* %85, i64 -1
  %87 = bitcast i64* %86 to %"class.v8::Object"*
  %88 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %87) #8
  %89 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %88) #8
  %90 = bitcast %"class.blink::Iterator"* %64 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %91 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %91, i64 7
  %93 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %92, align 8
  %94 = call %"class.v8::Value"* %93(%"class.blink::ScriptWrappable"* nonnull %68, %"class.blink::ScriptState"* %89) #8
  %95 = icmp eq %"class.v8::Value"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %84
  %97 = load i64*, i64** %27, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 3
  %99 = bitcast %"class.v8::Value"* %94 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %98, align 8
  br label %101

101:                                              ; preds = %63, %96, %84, %78, %72
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %102 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = icmp eq i64* %103, null
  br i1 %104, label %114, label %105

105:                                              ; preds = %101
  %106 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %107 = bitcast %"class.v8::Isolate"* %106 to %"class.v8::internal::Isolate"*
  %108 = load i64, i64* %103, align 8
  %109 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %107, i64 %108) #8
  %110 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %106) #8
  br i1 %110, label %114, label %111

111:                                              ; preds = %105
  %112 = bitcast i64* %109 to %"class.v8::Value"*
  %113 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %106, %"class.v8::Value"* %112) #8
  br label %114

114:                                              ; preds = %111, %105, %101
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #8
  br label %130

130:                                              ; preds = %114, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #8
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object17DefineOwnPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEENS_17PropertyAttributeE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*, i32) local_unnamed_addr #2

declare %"class.v8::Symbol"* @_ZN2v86Symbol11GetIteratorEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages27ConstructorCalledAsFunctionEv() local_unnamed_addr #2

declare %"class.blink::FormData"* @_ZN5blink8FormData6CreateEPNS_15HTMLFormElementERNS_14ExceptionStateE(%"class.blink::HTMLFormElement"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink8FormDataC1Ev(%"class.blink::FormData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.186"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.186"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.186"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_112v8_form_data24AppendOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, 2
  br i1 %13, label %14, label %79, !prof !2

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 1
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false)
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %22, align 2
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %24 = bitcast i8** %23 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %27 = bitcast %"class.v8::Isolate"** %26 to i64*
  store i64 %18, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %30 = bitcast %"class.WTF::StringImpl"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #8
  %31 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %12) #8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %14
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %49

49:                                               ; preds = %14, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %51, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %49
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %26, align 8
  %55 = bitcast %"class.v8::Isolate"* %54 to %"class.v8::internal::Isolate"*
  %56 = load i64, i64* %51, align 8
  %57 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %55, i64 %56) #8
  %58 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %54) #8
  br i1 %58, label %62, label %59

59:                                               ; preds = %53
  %60 = bitcast i64* %57 to %"class.v8::Value"*
  %61 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %54, %"class.v8::Value"* %60) #8
  br label %62

62:                                               ; preds = %59, %53, %49
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #8
  br label %78

78:                                               ; preds = %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #8
  ret void

79:                                               ; preds = %1
  %80 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %81 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %82 = sext i32 %12 to i64
  br label %83

83:                                               ; preds = %116, %79
  %84 = phi i64 [ %85, %116 ], [ %82, %79 ]
  %85 = add nsw i64 %84, -1
  %86 = icmp sgt i64 %84, 0
  br i1 %86, label %87, label %128

87:                                               ; preds = %83
  %88 = icmp sgt i64 %84, %82
  br i1 %88, label %89, label %95

89:                                               ; preds = %87
  %90 = load i64*, i64** %81, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 1
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 160
  %94 = inttoptr i64 %93 to %"class.v8::Value"*
  br label %99

95:                                               ; preds = %87
  %96 = load i64*, i64** %80, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 %85
  %98 = bitcast i64* %97 to %"class.v8::Value"*
  br label %99

99:                                               ; preds = %95, %89
  %100 = phi %"class.v8::Value"* [ %94, %89 ], [ %98, %95 ]
  %101 = bitcast %"class.v8::Value"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = and i64 %102, 3
  %104 = icmp eq i64 %103, 1
  br i1 %104, label %105, label %124

105:                                              ; preds = %99
  %106 = add i64 %102, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = and i64 %102, -4294967296
  %110 = zext i32 %108 to i64
  %111 = or i64 %109, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load i16, i16* %113, align 2
  %115 = icmp eq i16 %114, 67
  br i1 %115, label %116, label %122

116:                                              ; preds = %105
  %117 = add i64 %102, 23
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, -2
  %121 = icmp eq i32 %120, 10
  br i1 %121, label %83, label %126

122:                                              ; preds = %105
  %123 = trunc i64 %84 to i32
  br label %128

124:                                              ; preds = %99
  %125 = trunc i64 %84 to i32
  br label %128

126:                                              ; preds = %116
  %127 = trunc i64 %84 to i32
  br label %128

128:                                              ; preds = %83, %122, %124, %126
  %129 = phi i32 [ %123, %122 ], [ %125, %124 ], [ %127, %126 ], [ 0, %83 ]
  %130 = load i64*, i64** %80, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 -1
  %132 = bitcast i64* %131 to %"class.v8::Object"*
  %133 = load i64, i64* %131, align 8
  %134 = add i64 %133, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %133, -4294967296
  %138 = zext i32 %136 to i64
  %139 = or i64 %137, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load i16, i16* %141, align 2
  switch i16 %142, label %147 [
    i16 1057, label %143
    i16 1056, label %143
    i16 1040, label %143
  ]

143:                                              ; preds = %128, %128, %128
  %144 = add i64 %133, 19
  %145 = inttoptr i64 %144 to i8**
  %146 = load i8*, i8** %145, align 1
  br label %149

147:                                              ; preds = %128
  %148 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %132, i32 1) #8
  br label %149

149:                                              ; preds = %143, %147
  %150 = phi i8* [ %146, %143 ], [ %148, %147 ]
  %151 = bitcast i8* %150 to %"class.blink::FormData"*
  %152 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %132) #8
  %153 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %152)
  %154 = load i64*, i64** %81, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 1
  %156 = bitcast i64* %155 to %"class.v8::Isolate"**
  %157 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %156, align 8
  %158 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %158) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 56, i1 false)
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %161, align 2
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %163 = bitcast i8** %162 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %164, align 8
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %157, %"class.v8::Isolate"** %165, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %168 = bitcast %"class.WTF::StringImpl"** %167 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 16, i1 false) #8
  %169 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %169) #8
  %170 = load i32, i32* %11, align 8
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %176, label %172

172:                                              ; preds = %149
  %173 = load i64, i64* %155, align 8
  %174 = add i64 %173, 160
  %175 = inttoptr i64 %174 to %"class.v8::Value"*
  br label %179

176:                                              ; preds = %149
  %177 = bitcast i64** %80 to %"class.v8::Value"**
  %178 = load %"class.v8::Value"*, %"class.v8::Value"** %177, align 8
  br label %179

179:                                              ; preds = %172, %176
  %180 = phi %"class.v8::Value"* [ %175, %172 ], [ %178, %176 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %157, %"class.v8::Value"* %180, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #8
  %181 = load i32, i32* %166, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %432

183:                                              ; preds = %179
  %184 = load i32, i32* %11, align 8
  %185 = icmp sgt i32 %184, 1
  br i1 %185, label %192, label %186

186:                                              ; preds = %183
  %187 = load i64*, i64** %81, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = load i64, i64* %188, align 8
  %190 = add i64 %189, 160
  %191 = inttoptr i64 %190 to %"class.v8::Value"*
  br label %196

192:                                              ; preds = %183
  %193 = load i64*, i64** %80, align 8
  %194 = getelementptr inbounds i64, i64* %193, i64 1
  %195 = bitcast i64* %194 to %"class.v8::Value"*
  br label %196

196:                                              ; preds = %186, %192
  %197 = phi %"class.v8::Value"* [ %191, %186 ], [ %195, %192 ]
  %198 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink4Blob18wrapper_type_info_E, align 8
  %199 = ptrtoint %"class.v8::Isolate"* %157 to i64
  %200 = add i64 %199, 8
  %201 = inttoptr i64 %200 to %"class.blink::V8PerIsolateData"**
  %202 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %201, align 8
  %203 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %202, %"struct.blink::WrapperTypeInfo"* %198, %"class.v8::Value"* %197) #8
  br i1 %203, label %204, label %226

204:                                              ; preds = %196
  %205 = bitcast %"class.v8::Value"* %197 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = add i64 %206, -1
  %208 = inttoptr i64 %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = and i64 %206, -4294967296
  %211 = zext i32 %209 to i64
  %212 = or i64 %210, %211
  %213 = add i64 %212, 7
  %214 = inttoptr i64 %213 to i16*
  %215 = load i16, i16* %214, align 2
  switch i16 %215, label %220 [
    i16 1057, label %216
    i16 1056, label %216
    i16 1040, label %216
  ]

216:                                              ; preds = %204, %204, %204
  %217 = add i64 %206, 19
  %218 = inttoptr i64 %217 to i8**
  %219 = load i8*, i8** %218, align 1
  br label %223

220:                                              ; preds = %204
  %221 = bitcast %"class.v8::Value"* %197 to %"class.v8::Object"*
  %222 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %221, i32 1) #8
  br label %223

223:                                              ; preds = %220, %216
  %224 = phi i8* [ %219, %216 ], [ %222, %220 ]
  %225 = bitcast i8* %224 to %"class.blink::Blob"*
  br label %227

226:                                              ; preds = %196
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %198, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #8
  br label %227

227:                                              ; preds = %223, %226
  %228 = phi %"class.blink::Blob"* [ %225, %223 ], [ null, %226 ]
  %229 = load i32, i32* %166, align 8
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %432

231:                                              ; preds = %227
  %232 = icmp slt i32 %129, 3
  br i1 %232, label %233, label %298

233:                                              ; preds = %231
  %234 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #8
  %235 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %236 = load %"class.v8::String"*, %"class.v8::String"** %235, align 8
  %237 = icmp eq %"class.v8::String"* %236, null
  br i1 %237, label %240, label %238, !prof !2

238:                                              ; preds = %233
  %239 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %236, i32 0) #8
  br label %261

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %261, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %261

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = zext i32 %251 to i33
  %253 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %252, i33 1) #8
  %254 = extractvalue { i33, i1 } %253, 1
  %255 = extractvalue { i33, i1 } %253, 0
  %256 = icmp slt i33 %255, 0
  %257 = or i1 %254, %256
  br i1 %257, label %258, label %259, !prof !2

258:                                              ; preds = %249
  call void @llvm.trap() #8
  unreachable

259:                                              ; preds = %249
  %260 = trunc i33 %255 to i32
  store i32 %260, i32* %250, align 4
  br label %261

261:                                              ; preds = %238, %240, %244, %259
  %262 = phi %"class.WTF::StringImpl"* [ %239, %238 ], [ null, %240 ], [ %242, %244 ], [ %242, %259 ]
  %263 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %262, %"class.WTF::StringImpl"** %263, align 8
  %264 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #8
  %265 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %265, align 8
  call void @_ZN5blink8FormData6appendEPNS_11ScriptStateERKN3WTF6StringEPNS_4BlobES6_(%"class.blink::FormData"* %151, %"class.blink::ScriptState"* %153, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::Blob"* %228, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %267, label %281, label %268

268:                                              ; preds = %261
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  br i1 %272, label %275, label %277

275:                                              ; preds = %268
  %276 = add i32 %274, -1
  store i32 %276, i32* %273, align 4
  br label %277

277:                                              ; preds = %275, %268
  %278 = phi i32 [ %276, %275 ], [ %274, %268 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %277
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %266) #8
  br label %281

281:                                              ; preds = %261, %277, %280
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #8
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %263, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %297, label %284

284:                                              ; preds = %281
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %293

291:                                              ; preds = %284
  %292 = add i32 %290, -1
  store i32 %292, i32* %289, align 4
  br label %293

293:                                              ; preds = %291, %284
  %294 = phi i32 [ %292, %291 ], [ %290, %284 ]
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #8
  br label %297

297:                                              ; preds = %281, %293, %296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #8
  br label %432

298:                                              ; preds = %231
  %299 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %299) #8
  %300 = load i32, i32* %11, align 8
  %301 = icmp sgt i32 %300, 2
  br i1 %301, label %308, label %302

302:                                              ; preds = %298
  %303 = load i64*, i64** %81, align 8
  %304 = getelementptr inbounds i64, i64* %303, i64 1
  %305 = load i64, i64* %304, align 8
  %306 = add i64 %305, 160
  %307 = inttoptr i64 %306 to %"class.v8::Value"*
  br label %312

308:                                              ; preds = %298
  %309 = load i64*, i64** %80, align 8
  %310 = getelementptr inbounds i64, i64* %309, i64 2
  %311 = bitcast i64* %310 to %"class.v8::Value"*
  br label %312

312:                                              ; preds = %302, %308
  %313 = phi %"class.v8::Value"* [ %307, %302 ], [ %311, %308 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %8, %"class.v8::Isolate"* %157, %"class.v8::Value"* %313, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #8
  %314 = load i32, i32* %166, align 8
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %409

316:                                              ; preds = %312
  %317 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %317) #8
  %318 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %319 = load %"class.v8::String"*, %"class.v8::String"** %318, align 8
  %320 = icmp eq %"class.v8::String"* %319, null
  br i1 %320, label %323, label %321, !prof !2

321:                                              ; preds = %316
  %322 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %319, i32 0) #8
  br label %344

323:                                              ; preds = %316
  %324 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %344, label %327

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %344

332:                                              ; preds = %327
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  %335 = zext i32 %334 to i33
  %336 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %335, i33 1) #8
  %337 = extractvalue { i33, i1 } %336, 1
  %338 = extractvalue { i33, i1 } %336, 0
  %339 = icmp slt i33 %338, 0
  %340 = or i1 %337, %339
  br i1 %340, label %341, label %342, !prof !2

341:                                              ; preds = %332
  call void @llvm.trap() #8
  unreachable

342:                                              ; preds = %332
  %343 = trunc i33 %338 to i32
  store i32 %343, i32* %333, align 4
  br label %344

344:                                              ; preds = %321, %323, %327, %342
  %345 = phi %"class.WTF::StringImpl"* [ %322, %321 ], [ null, %323 ], [ %325, %327 ], [ %325, %342 ]
  %346 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %345, %"class.WTF::StringImpl"** %346, align 8
  %347 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347) #8
  %348 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 0, i32 0
  %349 = load %"class.v8::String"*, %"class.v8::String"** %348, align 8
  %350 = icmp eq %"class.v8::String"* %349, null
  br i1 %350, label %353, label %351, !prof !2

351:                                              ; preds = %344
  %352 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %349, i32 0) #8
  br label %374

353:                                              ; preds = %344
  %354 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %354, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %374, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %374

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %364 = load i32, i32* %363, align 4
  %365 = zext i32 %364 to i33
  %366 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %365, i33 1) #8
  %367 = extractvalue { i33, i1 } %366, 1
  %368 = extractvalue { i33, i1 } %366, 0
  %369 = icmp slt i33 %368, 0
  %370 = or i1 %367, %369
  br i1 %370, label %371, label %372, !prof !2

371:                                              ; preds = %362
  call void @llvm.trap() #8
  unreachable

372:                                              ; preds = %362
  %373 = trunc i33 %368 to i32
  store i32 %373, i32* %363, align 4
  br label %374

374:                                              ; preds = %351, %353, %357, %372
  %375 = phi %"class.WTF::StringImpl"* [ %352, %351 ], [ null, %353 ], [ %355, %357 ], [ %355, %372 ]
  %376 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %375, %"class.WTF::StringImpl"** %376, align 8
  call void @_ZN5blink8FormData6appendEPNS_11ScriptStateERKN3WTF6StringEPNS_4BlobES6_(%"class.blink::FormData"* %151, %"class.blink::ScriptState"* %153, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::Blob"* %228, %"class.WTF::String"* nonnull dereferenceable(8) %10) #8
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %376, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %377, null
  br i1 %378, label %392, label %379

379:                                              ; preds = %374
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load atomic i32, i32* %380 monotonic, align 4
  %382 = and i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  br i1 %383, label %386, label %388

386:                                              ; preds = %379
  %387 = add i32 %385, -1
  store i32 %387, i32* %384, align 4
  br label %388

388:                                              ; preds = %386, %379
  %389 = phi i32 [ %387, %386 ], [ %385, %379 ]
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %392

391:                                              ; preds = %388
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %377) #8
  br label %392

392:                                              ; preds = %374, %388, %391
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %347) #8
  %393 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  %394 = icmp eq %"class.WTF::StringImpl"* %393, null
  br i1 %394, label %408, label %395

395:                                              ; preds = %392
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load atomic i32, i32* %396 monotonic, align 4
  %398 = and i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %393, i64 0, i32 0
  %401 = load i32, i32* %400, align 4
  br i1 %399, label %402, label %404

402:                                              ; preds = %395
  %403 = add i32 %401, -1
  store i32 %403, i32* %400, align 4
  br label %404

404:                                              ; preds = %402, %395
  %405 = phi i32 [ %403, %402 ], [ %401, %395 ]
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %404
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %393) #8
  br label %408

408:                                              ; preds = %392, %404, %407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %317) #8
  br label %409

409:                                              ; preds = %312, %408
  %410 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %411 = load i8*, i8** %410, align 8
  store i8* null, i8** %410, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %409
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %411) #8
  br label %414

414:                                              ; preds = %413, %409
  %415 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %416 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %415, align 8
  %417 = icmp eq %"class.WTF::StringImpl"* %416, null
  br i1 %417, label %431, label %418

418:                                              ; preds = %414
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %420 = load atomic i32, i32* %419 monotonic, align 4
  %421 = and i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 0
  %424 = load i32, i32* %423, align 4
  br i1 %422, label %425, label %427

425:                                              ; preds = %418
  %426 = add i32 %424, -1
  store i32 %426, i32* %423, align 4
  br label %427

427:                                              ; preds = %425, %418
  %428 = phi i32 [ %426, %425 ], [ %424, %418 ]
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %431

430:                                              ; preds = %427
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %416) #8
  br label %431

431:                                              ; preds = %414, %427, %430
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %299) #8
  br label %432

432:                                              ; preds = %227, %179, %297, %431
  %433 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %434 = load i8*, i8** %433, align 8
  store i8* null, i8** %433, align 8
  %435 = icmp eq i8* %434, null
  br i1 %435, label %437, label %436

436:                                              ; preds = %432
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %434) #8
  br label %437

437:                                              ; preds = %436, %432
  %438 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %439 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %438, align 8
  %440 = icmp eq %"class.WTF::StringImpl"* %439, null
  br i1 %440, label %454, label %441

441:                                              ; preds = %437
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %439, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %443 = load atomic i32, i32* %442 monotonic, align 4
  %444 = and i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %439, i64 0, i32 0
  %447 = load i32, i32* %446, align 4
  br i1 %445, label %448, label %450

448:                                              ; preds = %441
  %449 = add i32 %447, -1
  store i32 %449, i32* %446, align 4
  br label %450

450:                                              ; preds = %448, %441
  %451 = phi i32 [ %449, %448 ], [ %447, %441 ]
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %454

453:                                              ; preds = %450
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %439) #8
  br label %454

454:                                              ; preds = %437, %450, %453
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %169) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %455 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %456 = load i64*, i64** %455, align 8
  %457 = icmp eq i64* %456, null
  br i1 %457, label %467, label %458

458:                                              ; preds = %454
  %459 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %165, align 8
  %460 = bitcast %"class.v8::Isolate"* %459 to %"class.v8::internal::Isolate"*
  %461 = load i64, i64* %456, align 8
  %462 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %460, i64 %461) #8
  %463 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %459) #8
  br i1 %463, label %467, label %464

464:                                              ; preds = %458
  %465 = bitcast i64* %462 to %"class.v8::Value"*
  %466 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %459, %"class.v8::Value"* %465) #8
  br label %467

467:                                              ; preds = %464, %458, %454
  %468 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %469 = icmp eq %"class.WTF::StringImpl"* %468, null
  br i1 %469, label %483, label %470

470:                                              ; preds = %467
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %472 = load atomic i32, i32* %471 monotonic, align 4
  %473 = and i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %468, i64 0, i32 0
  %476 = load i32, i32* %475, align 4
  br i1 %474, label %477, label %479

477:                                              ; preds = %470
  %478 = add i32 %476, -1
  store i32 %478, i32* %475, align 4
  br label %479

479:                                              ; preds = %477, %470
  %480 = phi i32 [ %478, %477 ], [ %476, %470 ]
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %483

482:                                              ; preds = %479
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %468) #8
  br label %483

483:                                              ; preds = %467, %479, %482
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %158) #8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0)) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0)) #8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN5blink8FormData6appendEPNS_11ScriptStateERKN3WTF6StringEPNS_4BlobES6_(%"class.blink::FormData"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Blob"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %6) #8
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %7 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.v8::String"*, %"class.v8::String"** %7, align 8
  %9 = icmp eq %"class.v8::String"* %8, null
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %4
  %11 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %8, i32 0) #8
  br label %33

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #8
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %21
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %10, %12, %16, %31
  %34 = phi %"class.WTF::StringImpl"* [ %11, %10 ], [ null, %12 ], [ %14, %16 ], [ %14, %31 ]
  %35 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  store i8* null, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %36) #8
  br label %39

39:                                               ; preds = %38, %33
  %40 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #8
  br label %56

56:                                               ; preds = %39, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %6) #8
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 152, i1 false)
  br label %120

62:                                               ; preds = %56
  %63 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #8
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %69
  call void @llvm.trap() #8
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %62, %64, %79
  %82 = call %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"* %34) #8
  %83 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %83, align 8
  %84 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %106

93:                                               ; preds = %86
  %94 = zext i32 %92 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #8
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !2

100:                                              ; preds = %93
  call void @llvm.trap() #8
  unreachable

101:                                              ; preds = %93
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %91, align 4
  br label %106

103:                                              ; preds = %81
  %104 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %105 = bitcast %"class.std::__1::unique_ptr.794"* %104 to i64*
  store i64 0, i64* %105, align 8
  br label %120

106:                                              ; preds = %86, %101
  %107 = phi i32 [ %102, %101 ], [ %92, %86 ]
  %108 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %109 = bitcast %"class.std::__1::unique_ptr.794"* %108 to i64*
  store i64 0, i64* %109, align 8
  %110 = load atomic i32, i32* %87 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %115 = add i32 %107, -1
  store i32 %115, i32* %114, align 4
  br label %116

116:                                              ; preds = %113, %106
  %117 = phi i32 [ %115, %113 ], [ %107, %106 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #8
  br label %120

120:                                              ; preds = %119, %116, %103, %60
  %121 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %135

135:                                              ; preds = %120, %131, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.794"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #8
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #8
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #8
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.794"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #8
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #8
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #8
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.794"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #8
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink8FormData6appendERKN3WTF6StringES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink8FormData11deleteEntryERKN3WTF6StringE(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::V8UnionFileOrUSVString"* @_ZN5blink8FormData3getERKN3WTF6StringE(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink22V8UnionFileOrUSVString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionFileOrUSVString"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare void @_ZN5blink8FormData6getAllERKN3WTF6StringE(%"class.blink::HeapVector.817"* sret, %"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink8bindings18ToV8HelperSequenceINS0_9UnionBaseENS_10HeapVectorINS_6MemberIS2_EELj0EEEEEN2v810MaybeLocalINS7_5ValueEEEPNS_11ScriptStateERKT0_(%"class.blink::ScriptState"*, %"class.blink::HeapVector.826"* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %7 = icmp eq %"class.v8::Context"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8::Isolate"* %4 to %"class.v8::internal::Isolate"*
  %10 = bitcast %"class.v8::Context"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %9, i64 %11) #8
  %13 = bitcast i64* %12 to %"class.v8::Context"*
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi %"class.v8::Context"* [ %13, %8 ], [ null, %2 ]
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %15) #8
  %16 = getelementptr inbounds %"class.blink::HeapVector.826", %"class.blink::HeapVector.826"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %20, label %19, !prof !9

19:                                               ; preds = %14
  tail call void @llvm.trap() #8
  unreachable

20:                                               ; preds = %14
  %21 = tail call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %4, i32 %17) #8
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %15) #8
  %22 = load %"class.v8::Context"*, %"class.v8::Context"** %5, align 8
  %23 = icmp eq %"class.v8::Context"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %25, align 8
  %27 = bitcast %"class.v8::Context"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %26, i64 %28) #8
  %30 = bitcast i64* %29 to %"class.v8::Context"*
  br label %31

31:                                               ; preds = %20, %24
  %32 = phi %"class.v8::Context"* [ %30, %24 ], [ null, %20 ]
  %33 = getelementptr inbounds %"class.blink::HeapVector.826", %"class.blink::HeapVector.826"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::Member.832"*, %"class.blink::Member.832"** %33, align 8
  %35 = load i32, i32* %16, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::Member.832", %"class.blink::Member.832"* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %71, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::ScriptState"* %0 to i64*
  %41 = bitcast %"class.v8::Array"* %21 to %"class.v8::Object"*
  br label %42

42:                                               ; preds = %39, %67
  %43 = phi i32 [ 0, %39 ], [ %68, %67 ]
  %44 = phi %"class.blink::Member.832"* [ %34, %39 ], [ %69, %67 ]
  %45 = getelementptr inbounds %"class.blink::Member.832", %"class.blink::Member.832"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::bindings::UnionBase"*, %"class.blink::bindings::UnionBase"** %45, align 8
  %47 = icmp eq %"class.blink::bindings::UnionBase"* %46, null
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = load i64, i64* %40, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to %"class.v8::Value"*
  br label %58

52:                                               ; preds = %42
  %53 = bitcast %"class.blink::bindings::UnionBase"* %46 to %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)***
  %54 = load %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)** %54, i64 2
  %56 = load %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)** %55, align 8
  %57 = tail call %"class.v8::Value"* %56(%"class.blink::bindings::UnionBase"* nonnull %46, %"class.blink::ScriptState"* %0) #8
  br label %58

58:                                               ; preds = %48, %52
  %59 = phi %"class.v8::Value"* [ %51, %48 ], [ %57, %52 ]
  %60 = icmp eq %"class.v8::Value"* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %58
  %62 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %41, %"class.v8::Context"* %32, i32 %43, %"class.v8::Value"* nonnull %59) #8
  %63 = trunc i16 %62 to i8
  %64 = icmp eq i8 %63, 0
  %65 = icmp ult i16 %62, 256
  %66 = or i1 %65, %64
  br i1 %66, label %73, label %67, !prof !10

67:                                               ; preds = %61
  %68 = add i32 %43, 1
  %69 = getelementptr inbounds %"class.blink::Member.832", %"class.blink::Member.832"* %44, i64 1
  %70 = icmp eq %"class.blink::Member.832"* %69, %37
  br i1 %70, label %71, label %42

71:                                               ; preds = %67, %31
  %72 = bitcast %"class.v8::Array"* %21 to %"class.v8::Value"*
  br label %73

73:                                               ; preds = %58, %61, %71
  %74 = phi %"class.v8::Value"* [ %72, %71 ], [ null, %61 ], [ null, %58 ]
  ret %"class.v8::Value"* %74
}

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink8FormData3hasERKN3WTF6StringE(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_112v8_form_data21SetOperationOverload2ERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, 2
  br i1 %13, label %14, label %79, !prof !2

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 1
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false)
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %22, align 2
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %24 = bitcast i8** %23 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %27 = bitcast %"class.v8::Isolate"** %26 to i64*
  store i64 %18, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %30 = bitcast %"class.WTF::StringImpl"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #8
  %31 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %12) #8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %14
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %49

49:                                               ; preds = %14, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %51, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %49
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %26, align 8
  %55 = bitcast %"class.v8::Isolate"* %54 to %"class.v8::internal::Isolate"*
  %56 = load i64, i64* %51, align 8
  %57 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %55, i64 %56) #8
  %58 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %54) #8
  br i1 %58, label %62, label %59

59:                                               ; preds = %53
  %60 = bitcast i64* %57 to %"class.v8::Value"*
  %61 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %54, %"class.v8::Value"* %60) #8
  br label %62

62:                                               ; preds = %59, %53, %49
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #8
  br label %78

78:                                               ; preds = %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #8
  ret void

79:                                               ; preds = %1
  %80 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %81 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %82 = sext i32 %12 to i64
  br label %83

83:                                               ; preds = %116, %79
  %84 = phi i64 [ %85, %116 ], [ %82, %79 ]
  %85 = add nsw i64 %84, -1
  %86 = icmp sgt i64 %84, 0
  br i1 %86, label %87, label %128

87:                                               ; preds = %83
  %88 = icmp sgt i64 %84, %82
  br i1 %88, label %89, label %95

89:                                               ; preds = %87
  %90 = load i64*, i64** %81, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 1
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 160
  %94 = inttoptr i64 %93 to %"class.v8::Value"*
  br label %99

95:                                               ; preds = %87
  %96 = load i64*, i64** %80, align 8
  %97 = getelementptr inbounds i64, i64* %96, i64 %85
  %98 = bitcast i64* %97 to %"class.v8::Value"*
  br label %99

99:                                               ; preds = %95, %89
  %100 = phi %"class.v8::Value"* [ %94, %89 ], [ %98, %95 ]
  %101 = bitcast %"class.v8::Value"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = and i64 %102, 3
  %104 = icmp eq i64 %103, 1
  br i1 %104, label %105, label %124

105:                                              ; preds = %99
  %106 = add i64 %102, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = and i64 %102, -4294967296
  %110 = zext i32 %108 to i64
  %111 = or i64 %109, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load i16, i16* %113, align 2
  %115 = icmp eq i16 %114, 67
  br i1 %115, label %116, label %122

116:                                              ; preds = %105
  %117 = add i64 %102, 23
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, -2
  %121 = icmp eq i32 %120, 10
  br i1 %121, label %83, label %126

122:                                              ; preds = %105
  %123 = trunc i64 %84 to i32
  br label %128

124:                                              ; preds = %99
  %125 = trunc i64 %84 to i32
  br label %128

126:                                              ; preds = %116
  %127 = trunc i64 %84 to i32
  br label %128

128:                                              ; preds = %83, %122, %124, %126
  %129 = phi i32 [ %123, %122 ], [ %125, %124 ], [ %127, %126 ], [ 0, %83 ]
  %130 = load i64*, i64** %80, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 -1
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %132, -1
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = and i64 %132, -4294967296
  %137 = zext i32 %135 to i64
  %138 = or i64 %136, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load i16, i16* %140, align 2
  switch i16 %141, label %146 [
    i16 1057, label %142
    i16 1056, label %142
    i16 1040, label %142
  ]

142:                                              ; preds = %128, %128, %128
  %143 = add i64 %132, 19
  %144 = inttoptr i64 %143 to i8**
  %145 = load i8*, i8** %144, align 1
  br label %150

146:                                              ; preds = %128
  %147 = bitcast i64* %131 to %"class.v8::Object"*
  %148 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %147, i32 1) #8
  %149 = load i32, i32* %11, align 8
  br label %150

150:                                              ; preds = %142, %146
  %151 = phi i32 [ %12, %142 ], [ %149, %146 ]
  %152 = phi i8* [ %145, %142 ], [ %148, %146 ]
  %153 = bitcast i8* %152 to %"class.blink::FormData"*
  %154 = load i64*, i64** %81, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 1
  %156 = bitcast i64* %155 to %"class.v8::Isolate"**
  %157 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %156, align 8
  %158 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %158) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 56, i1 false)
  %159 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %160 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %160, align 8
  %161 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %161, align 2
  %162 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %163 = bitcast i8** %162 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %163, align 8
  %164 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %164, align 8
  %165 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %157, %"class.v8::Isolate"** %165, align 8
  %166 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %166, align 8
  %167 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %168 = bitcast %"class.WTF::StringImpl"** %167 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 16, i1 false) #8
  %169 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %169) #8
  %170 = icmp sgt i32 %151, 0
  br i1 %170, label %175, label %171

171:                                              ; preds = %150
  %172 = load i64, i64* %155, align 8
  %173 = add i64 %172, 160
  %174 = inttoptr i64 %173 to %"class.v8::Value"*
  br label %178

175:                                              ; preds = %150
  %176 = bitcast i64** %80 to %"class.v8::Value"**
  %177 = load %"class.v8::Value"*, %"class.v8::Value"** %176, align 8
  br label %178

178:                                              ; preds = %171, %175
  %179 = phi %"class.v8::Value"* [ %174, %171 ], [ %177, %175 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %157, %"class.v8::Value"* %179, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #8
  %180 = load i32, i32* %166, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %431

182:                                              ; preds = %178
  %183 = load i32, i32* %11, align 8
  %184 = icmp sgt i32 %183, 1
  br i1 %184, label %191, label %185

185:                                              ; preds = %182
  %186 = load i64*, i64** %81, align 8
  %187 = getelementptr inbounds i64, i64* %186, i64 1
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 160
  %190 = inttoptr i64 %189 to %"class.v8::Value"*
  br label %195

191:                                              ; preds = %182
  %192 = load i64*, i64** %80, align 8
  %193 = getelementptr inbounds i64, i64* %192, i64 1
  %194 = bitcast i64* %193 to %"class.v8::Value"*
  br label %195

195:                                              ; preds = %185, %191
  %196 = phi %"class.v8::Value"* [ %190, %185 ], [ %194, %191 ]
  %197 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink4Blob18wrapper_type_info_E, align 8
  %198 = ptrtoint %"class.v8::Isolate"* %157 to i64
  %199 = add i64 %198, 8
  %200 = inttoptr i64 %199 to %"class.blink::V8PerIsolateData"**
  %201 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %200, align 8
  %202 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %201, %"struct.blink::WrapperTypeInfo"* %197, %"class.v8::Value"* %196) #8
  br i1 %202, label %203, label %225

203:                                              ; preds = %195
  %204 = bitcast %"class.v8::Value"* %196 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = add i64 %205, -1
  %207 = inttoptr i64 %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = and i64 %205, -4294967296
  %210 = zext i32 %208 to i64
  %211 = or i64 %209, %210
  %212 = add i64 %211, 7
  %213 = inttoptr i64 %212 to i16*
  %214 = load i16, i16* %213, align 2
  switch i16 %214, label %219 [
    i16 1057, label %215
    i16 1056, label %215
    i16 1040, label %215
  ]

215:                                              ; preds = %203, %203, %203
  %216 = add i64 %205, 19
  %217 = inttoptr i64 %216 to i8**
  %218 = load i8*, i8** %217, align 1
  br label %222

219:                                              ; preds = %203
  %220 = bitcast %"class.v8::Value"* %196 to %"class.v8::Object"*
  %221 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %220, i32 1) #8
  br label %222

222:                                              ; preds = %219, %215
  %223 = phi i8* [ %218, %215 ], [ %221, %219 ]
  %224 = bitcast i8* %223 to %"class.blink::Blob"*
  br label %226

225:                                              ; preds = %195
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %197, i32 1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #8
  br label %226

226:                                              ; preds = %222, %225
  %227 = phi %"class.blink::Blob"* [ %224, %222 ], [ null, %225 ]
  %228 = load i32, i32* %166, align 8
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %431

230:                                              ; preds = %226
  %231 = icmp slt i32 %129, 3
  br i1 %231, label %232, label %297

232:                                              ; preds = %230
  %233 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #8
  %234 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %235 = load %"class.v8::String"*, %"class.v8::String"** %234, align 8
  %236 = icmp eq %"class.v8::String"* %235, null
  br i1 %236, label %239, label %237, !prof !2

237:                                              ; preds = %232
  %238 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %235, i32 0) #8
  br label %260

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %241 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %242 = icmp eq %"class.WTF::StringImpl"* %241, null
  br i1 %242, label %260, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %260

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %241, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i33
  %252 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %251, i33 1) #8
  %253 = extractvalue { i33, i1 } %252, 1
  %254 = extractvalue { i33, i1 } %252, 0
  %255 = icmp slt i33 %254, 0
  %256 = or i1 %253, %255
  br i1 %256, label %257, label %258, !prof !2

257:                                              ; preds = %248
  call void @llvm.trap() #8
  unreachable

258:                                              ; preds = %248
  %259 = trunc i33 %254 to i32
  store i32 %259, i32* %249, align 4
  br label %260

260:                                              ; preds = %237, %239, %243, %258
  %261 = phi %"class.WTF::StringImpl"* [ %238, %237 ], [ null, %239 ], [ %241, %243 ], [ %241, %258 ]
  %262 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %262, align 8
  %263 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #8
  %264 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %264, align 8
  call void @_ZN5blink8FormData3setERKN3WTF6StringEPNS_4BlobES4_(%"class.blink::FormData"* %153, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::Blob"* %227, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %260
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #8
  br label %280

280:                                              ; preds = %260, %276, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #8
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %280
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #8
  br label %296

296:                                              ; preds = %280, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #8
  br label %431

297:                                              ; preds = %230
  %298 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %298) #8
  %299 = load i32, i32* %11, align 8
  %300 = icmp sgt i32 %299, 2
  br i1 %300, label %307, label %301

301:                                              ; preds = %297
  %302 = load i64*, i64** %81, align 8
  %303 = getelementptr inbounds i64, i64* %302, i64 1
  %304 = load i64, i64* %303, align 8
  %305 = add i64 %304, 160
  %306 = inttoptr i64 %305 to %"class.v8::Value"*
  br label %311

307:                                              ; preds = %297
  %308 = load i64*, i64** %80, align 8
  %309 = getelementptr inbounds i64, i64* %308, i64 2
  %310 = bitcast i64* %309 to %"class.v8::Value"*
  br label %311

311:                                              ; preds = %301, %307
  %312 = phi %"class.v8::Value"* [ %306, %301 ], [ %310, %307 ]
  call void @_ZN5blink17NativeValueTraitsINS_18IDLUSVStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %8, %"class.v8::Isolate"* %157, %"class.v8::Value"* %312, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #8
  %313 = load i32, i32* %166, align 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %408

315:                                              ; preds = %311
  %316 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %316) #8
  %317 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %318 = load %"class.v8::String"*, %"class.v8::String"** %317, align 8
  %319 = icmp eq %"class.v8::String"* %318, null
  br i1 %319, label %322, label %320, !prof !2

320:                                              ; preds = %315
  %321 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %318, i32 0) #8
  br label %343

322:                                              ; preds = %315
  %323 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %324 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %323, align 8
  %325 = icmp eq %"class.WTF::StringImpl"* %324, null
  br i1 %325, label %343, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load atomic i32, i32* %327 monotonic, align 4
  %329 = and i32 %328, 2
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %343

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %324, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  %334 = zext i32 %333 to i33
  %335 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %334, i33 1) #8
  %336 = extractvalue { i33, i1 } %335, 1
  %337 = extractvalue { i33, i1 } %335, 0
  %338 = icmp slt i33 %337, 0
  %339 = or i1 %336, %338
  br i1 %339, label %340, label %341, !prof !2

340:                                              ; preds = %331
  call void @llvm.trap() #8
  unreachable

341:                                              ; preds = %331
  %342 = trunc i33 %337 to i32
  store i32 %342, i32* %332, align 4
  br label %343

343:                                              ; preds = %320, %322, %326, %341
  %344 = phi %"class.WTF::StringImpl"* [ %321, %320 ], [ null, %322 ], [ %324, %326 ], [ %324, %341 ]
  %345 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %344, %"class.WTF::StringImpl"** %345, align 8
  %346 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %346) #8
  %347 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 0, i32 0
  %348 = load %"class.v8::String"*, %"class.v8::String"** %347, align 8
  %349 = icmp eq %"class.v8::String"* %348, null
  br i1 %349, label %352, label %350, !prof !2

350:                                              ; preds = %343
  %351 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %348, i32 0) #8
  br label %373

352:                                              ; preds = %343
  %353 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %354, null
  br i1 %355, label %373, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load atomic i32, i32* %357 monotonic, align 4
  %359 = and i32 %358, 2
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %373

361:                                              ; preds = %356
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 0
  %363 = load i32, i32* %362, align 4
  %364 = zext i32 %363 to i33
  %365 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %364, i33 1) #8
  %366 = extractvalue { i33, i1 } %365, 1
  %367 = extractvalue { i33, i1 } %365, 0
  %368 = icmp slt i33 %367, 0
  %369 = or i1 %366, %368
  br i1 %369, label %370, label %371, !prof !2

370:                                              ; preds = %361
  call void @llvm.trap() #8
  unreachable

371:                                              ; preds = %361
  %372 = trunc i33 %367 to i32
  store i32 %372, i32* %362, align 4
  br label %373

373:                                              ; preds = %350, %352, %356, %371
  %374 = phi %"class.WTF::StringImpl"* [ %351, %350 ], [ null, %352 ], [ %354, %356 ], [ %354, %371 ]
  %375 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %374, %"class.WTF::StringImpl"** %375, align 8
  call void @_ZN5blink8FormData3setERKN3WTF6StringEPNS_4BlobES4_(%"class.blink::FormData"* %153, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::Blob"* %227, %"class.WTF::String"* nonnull dereferenceable(8) %10) #8
  %376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %377 = icmp eq %"class.WTF::StringImpl"* %376, null
  br i1 %377, label %391, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load atomic i32, i32* %379 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 0
  %384 = load i32, i32* %383, align 4
  br i1 %382, label %385, label %387

385:                                              ; preds = %378
  %386 = add i32 %384, -1
  store i32 %386, i32* %383, align 4
  br label %387

387:                                              ; preds = %385, %378
  %388 = phi i32 [ %386, %385 ], [ %384, %378 ]
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %391

390:                                              ; preds = %387
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %376) #8
  br label %391

391:                                              ; preds = %373, %387, %390
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %346) #8
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %345, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %392, null
  br i1 %393, label %407, label %394

394:                                              ; preds = %391
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  br i1 %398, label %401, label %403

401:                                              ; preds = %394
  %402 = add i32 %400, -1
  store i32 %402, i32* %399, align 4
  br label %403

403:                                              ; preds = %401, %394
  %404 = phi i32 [ %402, %401 ], [ %400, %394 ]
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %407

406:                                              ; preds = %403
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %392) #8
  br label %407

407:                                              ; preds = %391, %403, %406
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %316) #8
  br label %408

408:                                              ; preds = %311, %407
  %409 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %410 = load i8*, i8** %409, align 8
  store i8* null, i8** %409, align 8
  %411 = icmp eq i8* %410, null
  br i1 %411, label %413, label %412

412:                                              ; preds = %408
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %410) #8
  br label %413

413:                                              ; preds = %412, %408
  %414 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %8, i64 0, i32 1, i32 0, i32 0
  %415 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %414, align 8
  %416 = icmp eq %"class.WTF::StringImpl"* %415, null
  br i1 %416, label %430, label %417

417:                                              ; preds = %413
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  br i1 %421, label %424, label %426

424:                                              ; preds = %417
  %425 = add i32 %423, -1
  store i32 %425, i32* %422, align 4
  br label %426

426:                                              ; preds = %424, %417
  %427 = phi i32 [ %425, %424 ], [ %423, %417 ]
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %426
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %415) #8
  br label %430

430:                                              ; preds = %413, %426, %429
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %298) #8
  br label %431

431:                                              ; preds = %226, %178, %296, %430
  %432 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %433 = load i8*, i8** %432, align 8
  store i8* null, i8** %432, align 8
  %434 = icmp eq i8* %433, null
  br i1 %434, label %436, label %435

435:                                              ; preds = %431
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %433) #8
  br label %436

436:                                              ; preds = %435, %431
  %437 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %436
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %438) #8
  br label %453

453:                                              ; preds = %436, %449, %452
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %169) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %454 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %455 = load i64*, i64** %454, align 8
  %456 = icmp eq i64* %455, null
  br i1 %456, label %466, label %457

457:                                              ; preds = %453
  %458 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %165, align 8
  %459 = bitcast %"class.v8::Isolate"* %458 to %"class.v8::internal::Isolate"*
  %460 = load i64, i64* %455, align 8
  %461 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %459, i64 %460) #8
  %462 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %458) #8
  br i1 %462, label %466, label %463

463:                                              ; preds = %457
  %464 = bitcast i64* %461 to %"class.v8::Value"*
  %465 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %458, %"class.v8::Value"* %464) #8
  br label %466

466:                                              ; preds = %463, %457, %453
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %468 = icmp eq %"class.WTF::StringImpl"* %467, null
  br i1 %468, label %482, label %469

469:                                              ; preds = %466
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = load atomic i32, i32* %470 monotonic, align 4
  %472 = and i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 0
  %475 = load i32, i32* %474, align 4
  br i1 %473, label %476, label %478

476:                                              ; preds = %469
  %477 = add i32 %475, -1
  store i32 %477, i32* %474, align 4
  br label %478

478:                                              ; preds = %476, %469
  %479 = phi i32 [ %477, %476 ], [ %475, %469 ]
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %482

481:                                              ; preds = %478
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %467) #8
  br label %482

482:                                              ; preds = %466, %478, %481
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %158) #8
  ret void
}

declare void @_ZN5blink8FormData3setERKN3WTF6StringEPNS_4BlobES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Blob"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink8FormData3setERKN3WTF6StringES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEED0Ev(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE5TraceEPNS_7VisitorE(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator", %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.838"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE15IterationSourceEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator", %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink8Iterator18GetWrapperTypeInfoEv(%"class.blink::Iterator"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink8Iterator18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::Member.823", align 8
  %7 = alloca %"class.blink::HeapVector.844", align 8
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = bitcast %"class.blink::Member.823"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.blink::Member.823", %"class.blink::Member.823"* %6, i64 0, i32 0, i32 0
  store %"class.blink::V8UnionFileOrUSVString"* null, %"class.blink::V8UnionFileOrUSVString"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator", %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"* %1, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"** %12, align 8
  %14 = bitcast %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %13 to i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)***
  %15 = load i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)** %15, i64 2
  %17 = load i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)** %16, align 8
  %18 = call zeroext i1 %17(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %13, %"class.blink::ScriptState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::Member.823"* nonnull dereferenceable(8) %6, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br i1 %18, label %29, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8, !noalias !11
  %22 = ptrtoint %"class.v8::Isolate"* %21 to i64
  %23 = add i64 %22, 160
  %24 = inttoptr i64 %23 to %"class.v8::Value"*
  %25 = call %"class.v8::Object"* @_ZN5blink21V8IteratorResultValueEPNS_11ScriptStateEbN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %2, i1 zeroext true, %"class.v8::Value"* %24) #8, !noalias !11
  %26 = bitcast %"class.v8::Object"* %25 to %"class.v8::Value"*
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %21, %"class.v8::Isolate"** %27, align 8, !alias.scope !11
  %28 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %28, %"class.v8::Isolate"* %21, %"class.v8::Value"* %26) #8
  br label %90

29:                                               ; preds = %4
  %30 = bitcast %"class.blink::HeapVector.844"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #8
  call void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE13EntrySelector6SelectEPNS_11ScriptStateERKS2_RKS5_(%"class.blink::HeapVector.844"* nonnull sret %7, %"class.blink::ScriptState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::Member.823"* nonnull dereferenceable(8) %6)
  %31 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %32 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %31, align 8, !noalias !14
  %33 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.v8::Context"*, %"class.v8::Context"** %33, align 8, !noalias !14
  %35 = icmp eq %"class.v8::Context"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.v8::Isolate"* %32 to %"class.v8::internal::Isolate"*
  %38 = bitcast %"class.v8::Context"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %37, i64 %39) #8
  %41 = bitcast i64* %40 to %"class.v8::Context"*
  br label %42

42:                                               ; preds = %29, %36
  %43 = phi %"class.v8::Context"* [ %41, %36 ], [ null, %29 ]
  %44 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %43) #8, !noalias !14
  %45 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %31, align 8, !noalias !14
  %46 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_11ScriptValueELj2EEEEEN2v85LocalINS4_5ArrayEEERKT_NS5_INS4_6ObjectEEEPNS4_7IsolateE(%"class.blink::HeapVector.844"* nonnull dereferenceable(64) %7, %"class.v8::Object"* %44, %"class.v8::Isolate"* %45) #8, !noalias !14
  %47 = bitcast %"class.v8::Array"* %46 to %"class.v8::Value"*
  %48 = call %"class.v8::Object"* @_ZN5blink21V8IteratorResultValueEPNS_11ScriptStateEbN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %2, i1 zeroext false, %"class.v8::Value"* %47) #8, !noalias !14
  %49 = bitcast %"class.v8::Object"* %48 to %"class.v8::Value"*
  %50 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %32, %"class.v8::Isolate"** %50, align 8, !alias.scope !14
  %51 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %51, %"class.v8::Isolate"* %32, %"class.v8::Value"* %49) #8
  %52 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %54, label %82, label %56, !prof !2

56:                                               ; preds = %42
  %57 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %55, align 8
  %58 = icmp ne %"class.blink::ScriptValue"* %57, null
  %59 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %60 = bitcast i8* %59 to %"class.blink::ScriptValue"*
  %61 = icmp ne %"class.blink::ScriptValue"* %57, %60
  %62 = and i1 %58, %61
  br i1 %62, label %82, label %63

63:                                               ; preds = %56
  %64 = zext i32 %53 to i64
  %65 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %57, i64 %64
  br label %66

66:                                               ; preds = %78, %63
  %67 = phi %"class.blink::ScriptValue"* [ %79, %78 ], [ %57, %63 ]
  %68 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %67, i64 0, i32 1, i32 1, i32 0
  %69 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %68, align 8
  %70 = icmp eq %"class.blink::DOMWrapperWorld"* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %69, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %72) #8
  %73 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %71
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %69) #8
  %77 = bitcast %"class.blink::DOMWrapperWorld"* %69 to i8*
  call void @free(i8* %77) #8
  br label %78

78:                                               ; preds = %76, %71, %66
  %79 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %67, i64 1
  %80 = icmp eq %"class.blink::ScriptValue"* %79, %65
  br i1 %80, label %81, label %66

81:                                               ; preds = %78
  store i32 0, i32* %52, align 4
  br label %82

82:                                               ; preds = %42, %81, %56
  %83 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %55, align 8
  %84 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %85 = bitcast i8* %84 to %"class.blink::ScriptValue"*
  %86 = icmp eq %"class.blink::ScriptValue"* %83, %85
  br i1 %86, label %89, label %87, !prof !9

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.848"* nonnull %88, %"class.blink::ScriptValue"* %83) #8
  br label %89

89:                                               ; preds = %82, %87
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #8
  br label %90

90:                                               ; preds = %89, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #8
  br label %106

106:                                              ; preds = %90, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE4nextEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13EntrySelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptValue"* sret %0, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator"* %1, %"class.blink::ScriptState"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE15IterationSourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*
  %4 = bitcast i8* %1 to void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Visitor"*)**, void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE13EntrySelector6SelectEPNS_11ScriptStateERKS2_RKS5_(%"class.blink::HeapVector.844"* noalias sret, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Member.823"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = alloca %"class.blink::ScriptValue", align 8
  %8 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.v8::Context"*, %"class.v8::Context"** %8, align 8
  %10 = icmp eq %"class.v8::Context"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.blink::ScriptState"* %1 to %"class.v8::internal::Isolate"**
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  %14 = bitcast %"class.v8::Context"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %15) #8
  %17 = bitcast i64* %16 to %"class.v8::Context"*
  br label %18

18:                                               ; preds = %4, %11
  %19 = phi %"class.v8::Context"* [ %17, %11 ], [ null, %4 ]
  %20 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %19) #8
  %21 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %22 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %24 = bitcast %"class.blink::HeapVector.844"* %0 to i8**
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 2, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 52, i1 false) #8
  %28 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %0, i64 0, i32 0
  %29 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  %30 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %35, align 8
  %36 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %37 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %36, i64* %37, align 8
  br label %45

38:                                               ; preds = %18
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %44, align 8
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i32 [ %41, %38 ], [ 0, %34 ]
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %46, i32* %47, align 8
  %48 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %22, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #8
  %49 = bitcast %"class.v8::String"* %48 to %"class.v8::Value"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  %50 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 0
  store %"class.v8::Isolate"* %22, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %51, %"class.v8::Isolate"* %22, %"class.v8::Value"* %49) #8
  %52 = load i32, i32* %26, align 4
  %53 = load i32, i32* %25, align 8
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %64, label %55, !prof !2

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %56, align 8
  %58 = zext i32 %52 to i64
  %59 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %57, i64 %58
  %60 = bitcast %"class.blink::ScriptValue"* %59 to i8*
  %61 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %60, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %6) #8
  %62 = load i32, i32* %26, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %26, align 4
  br label %65

64:                                               ; preds = %45
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.847"* %28, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %6) #8
  br label %65

65:                                               ; preds = %55, %64
  %66 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  %67 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %66, align 8
  %68 = icmp eq %"class.blink::DOMWrapperWorld"* %67, null
  br i1 %68, label %76, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %67, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %70) #8
  %71 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %67) #8
  %75 = bitcast %"class.blink::DOMWrapperWorld"* %67 to i8*
  call void @free(i8* %75) #8
  br label %76

76:                                               ; preds = %65, %69, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  %77 = bitcast %"class.blink::ScriptValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #8
  %78 = getelementptr inbounds %"class.blink::Member.823", %"class.blink::Member.823"* %3, i64 0, i32 0, i32 0
  %79 = load %"class.blink::V8UnionFileOrUSVString"*, %"class.blink::V8UnionFileOrUSVString"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::V8UnionFileOrUSVString", %"class.blink::V8UnionFileOrUSVString"* %79, i64 0, i32 0
  %81 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %20) #8
  %82 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %81) #8
  %83 = bitcast %"class.blink::V8UnionFileOrUSVString"* %79 to %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)***
  %84 = load %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)** %84, i64 2
  %86 = load %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)** %85, align 8
  %87 = call %"class.v8::Value"* %86(%"class.blink::bindings::UnionBase"* %80, %"class.blink::ScriptState"* %82) #8
  %88 = icmp eq %"class.v8::Value"* %87, null
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %76
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %90

90:                                               ; preds = %76, %89
  %91 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 0
  store %"class.v8::Isolate"* %22, %"class.v8::Isolate"** %91, align 8
  %92 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %92, %"class.v8::Isolate"* %22, %"class.v8::Value"* %87) #8
  %93 = load i32, i32* %26, align 4
  %94 = load i32, i32* %25, align 8
  %95 = icmp eq i32 %93, %94
  br i1 %95, label %105, label %96, !prof !2

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %97, align 8
  %99 = zext i32 %93 to i64
  %100 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %98, i64 %99
  %101 = bitcast %"class.blink::ScriptValue"* %100 to i8*
  %102 = call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %101, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %7) #8
  %103 = load i32, i32* %26, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %26, align 4
  br label %106

105:                                              ; preds = %90
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.847"* %28, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %7) #8
  br label %106

106:                                              ; preds = %96, %105
  %107 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  %108 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %107, align 8
  %109 = icmp eq %"class.blink::DOMWrapperWorld"* %108, null
  br i1 %109, label %117, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %108, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %111) #8
  %112 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %110
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %108) #8
  %116 = bitcast %"class.blink::DOMWrapperWorld"* %108 to i8*
  call void @free(i8* %116) #8
  br label %117

117:                                              ; preds = %106, %110, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #8
  ret void
}

declare %"class.v8::Object"* @_ZN5blink21V8IteratorResultValueEPNS_11ScriptStateEbN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"*, i1 zeroext, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.344, %class.scoped_refptr.344* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #8
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.191"* dereferenceable(8) %9) #8
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #8
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #8
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #8
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.344* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #8
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #8
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #8
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #8
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #8
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #8
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #8
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.344* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #8
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #8
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #8
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.191"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_11ScriptValueELj2EEEEEN2v85LocalINS4_5ArrayEEERKT_NS5_INS4_6ObjectEEEPNS4_7IsolateE(%"class.blink::HeapVector.844"* dereferenceable(64), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #3 comdat {
  %4 = alloca %"class.absl::optional.856", align 8
  %5 = getelementptr inbounds %"class.absl::optional.856", %"class.absl::optional.856"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional.856"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional.856", %"class.absl::optional.856"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.860* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !9

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional.856", %"class.absl::optional.856"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional.856", %"class.absl::optional.856"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional.856", %"class.absl::optional.856"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.856", %"class.absl::optional.856"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !9

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %69, label %41

41:                                               ; preds = %31
  %42 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %43 = add i64 %42, 160
  %44 = inttoptr i64 %43 to %"class.v8::Value"*
  %45 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  br label %46

46:                                               ; preds = %41, %65
  %47 = phi i32 [ 0, %41 ], [ %66, %65 ]
  %48 = phi %"class.blink::ScriptValue"* [ %36, %41 ], [ %67, %65 ]
  %49 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %48, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = icmp eq i64* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %48) #8
  br label %54

54:                                               ; preds = %46, %52
  %55 = phi %"class.v8::Value"* [ %53, %52 ], [ %44, %46 ]
  %56 = ptrtoint %"class.v8::Value"* %55 to i64
  %57 = icmp eq %"class.v8::Value"* %55, null
  %58 = select i1 %57, i64 %43, i64 %56
  %59 = inttoptr i64 %58 to %"class.v8::Value"*
  %60 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %45, %"class.v8::Context"* %34, i32 %47, %"class.v8::Value"* %59) #8
  %61 = trunc i16 %60 to i8
  %62 = icmp eq i8 %61, 0
  %63 = icmp ult i16 %60, 256
  %64 = or i1 %63, %62
  br i1 %64, label %69, label %65, !prof !10

65:                                               ; preds = %54
  %66 = add i32 %47, 1
  %67 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %48, i64 1
  %68 = icmp eq %"class.blink::ScriptValue"* %67, %39
  br i1 %68, label %69, label %46

69:                                               ; preds = %65, %54, %31
  %70 = phi i64 [ %33, %31 ], [ 0, %54 ], [ %33, %65 ]
  %71 = load i8, i8* %5, align 8, !range !3
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.absl::optional.856", %"class.absl::optional.856"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %75 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %74, align 8
  %76 = getelementptr inbounds %"class.absl::optional.856", %"class.absl::optional.856"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %77 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %76) #8
  %78 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %75, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %77, %"class.blink::RuntimeCallTimer"** %78, align 8
  store i8 0, i8* %5, align 8
  br label %79

79:                                               ; preds = %69, %73
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %80 = inttoptr i64 %70 to %"class.v8::Array"*
  ret %"class.v8::Array"* %80
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %4 = bitcast %"class.blink::ScriptValue"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to %"class.blink::TraceWrapperV8Reference.191"*
  %9 = bitcast i8* %7 to i64**
  store i64* null, i64** %9, align 8
  %10 = icmp eq %"class.blink::ScriptValue"* %3, %1
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %9) #8
  br label %16

16:                                               ; preds = %15, %11, %2
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.191"* dereferenceable(8) %8) #8
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %1, i64 0, i32 1, i32 1, i32 0
  %18 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %17, align 8
  %19 = getelementptr inbounds i8, i8* %0, i64 16
  %20 = bitcast i8* %19 to %"class.blink::DOMWrapperWorld"**
  store %"class.blink::DOMWrapperWorld"* %18, %"class.blink::DOMWrapperWorld"** %20, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %18, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #8
  br label %24

24:                                               ; preds = %16, %22
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %54, label %27

27:                                               ; preds = %24
  %28 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %29 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %28, i64 0, i32 1
  %30 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %29) #8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %27
  %33 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* %33) #8
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi i8* [ %33, %32 ], [ %30, %27 ]
  %36 = bitcast i8* %35 to %"class.blink::ThreadState"**
  %37 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 1, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 13
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::MarkingVisitor"* %46 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)***
  %49 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)** %49, i64 7
  %51 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %47, %"class.blink::TraceWrapperV8Reference.191"* dereferenceable(8) %8) #8
  %52 = load i64, i64* %42, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %42, align 8
  br label %54

54:                                               ; preds = %24, %34, %41
  ret %"class.blink::ScriptValue"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.847"*, %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %6, align 8
  %8 = icmp ugt %"class.blink::ScriptValue"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 %10
  %12 = icmp ugt %"class.blink::ScriptValue"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.847"* %0, i32 %5) #8
  %14 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::ScriptValue"* %1 to i64
  %17 = ptrtoint %"class.blink::ScriptValue"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.847"* %0, i32 %5) #8
  %20 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::ScriptValue"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::ScriptValue"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %23, i64 %26
  %28 = bitcast %"class.blink::ScriptValue"* %27 to i8*
  %29 = tail call %"class.blink::ScriptValue"* @_ZN3WTF15ConstructTraitsIN5blink11ScriptValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %28, %"class.blink::ScriptValue"* dereferenceable(24) %24)
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.847"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.847"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.847"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %8, align 8
  %10 = icmp eq %"class.blink::ScriptValue"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 2
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %14) #8
  %16 = udiv i64 %15, 24
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #8
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 2, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::ScriptValue"*
  %33 = icmp eq %"class.blink::ScriptValue"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 3
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %37) #8
  %39 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %8, align 8
  %40 = icmp eq %"class.blink::ScriptValue"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 48, %34 ]
  %43 = phi %"class.blink::ScriptValue"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::ScriptValue"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #8
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = udiv i64 %42, 24
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #8
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #8
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #8
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.847"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.847"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 3
  br i1 %3, label %4, label %27

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %5, align 8
  %7 = icmp eq %"class.blink::ScriptValue"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::ScriptValue"*
  %10 = icmp eq %"class.blink::ScriptValue"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 2, i32* %15, align 8
  br label %63

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 %19
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 2, i32* %23, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"* nonnull %6, %"class.blink::ScriptValue"* %20, %"class.blink::ScriptValue"* %9, i1 zeroext true) #8
  %24 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  %25 = mul nuw nsw i64 %19, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %24, i64 %25) #8
  %26 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.848"* %26, %"class.blink::ScriptValue"* nonnull %6) #8
  br label %63

27:                                               ; preds = %2
  %28 = zext i32 %1 to i64
  %29 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64 %28) #8
  %30 = udiv i64 %29, 24
  %31 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %30) #8
  %32 = bitcast %"class.blink::HeapVectorBacking"* %31 to %"class.blink::ScriptValue"*
  %33 = ptrtoint %"class.blink::HeapVectorBacking"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %35, i64 %38
  %40 = icmp eq %"class.blink::ScriptValue"* %35, null
  %41 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 1, i64 0
  %42 = bitcast i8* %41 to %"class.blink::ScriptValue"*
  %43 = icmp eq %"class.blink::ScriptValue"* %35, %42
  %44 = or i1 %43, %40
  tail call void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"* %35, %"class.blink::ScriptValue"* %39, %"class.blink::ScriptValue"* %32, i1 zeroext %44) #8
  %45 = bitcast %"class.WTF::Vector.847"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = load i32, i32* %36, align 4
  %48 = zext i32 %47 to i64
  %49 = mul nuw nsw i64 %48, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %46, i64 %49) #8
  %50 = load %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"** %34, align 8
  %51 = icmp eq %"class.blink::ScriptValue"* %50, %42
  br i1 %51, label %54, label %52, !prof !9

52:                                               ; preds = %27
  %53 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.848"* %53, %"class.blink::ScriptValue"* %50) #8
  br label %54

54:                                               ; preds = %27, %52
  %55 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %33, i64* %55 monotonic, align 8
  %56 = trunc i64 %30 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %31, i64 0, i32 0
  %62 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #8
  br label %63

63:                                               ; preds = %60, %54, %16, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_11ScriptValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.186"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.186"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_11ScriptValueENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %62, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::ScriptValue"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)***
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %60, %54 ]
  %56 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %30, i64 %55, i32 1, i32 0
  %57 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)*** %53, align 8
  %58 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)** %57, i64 7
  %59 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)** %58, align 8
  tail call void %59(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference.191"* dereferenceable(8) %56) #8
  %60 = add nuw nsw i64 %55, 1
  %61 = icmp ult i64 %60, %50
  br i1 %61, label %54, label %62

62:                                               ; preds = %54, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"class.blink::ScriptValue"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %41

24:                                               ; preds = %18, %37
  %25 = phi i64 [ %39, %37 ], [ 0, %18 ]
  %26 = phi i32 [ %38, %37 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %22, i64 %25, i32 1, i32 1, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = icmp eq %"class.blink::DOMWrapperWorld"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #8
  %32 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %28) #8
  %36 = bitcast %"class.blink::DOMWrapperWorld"* %28 to i8*
  tail call void @free(i8* %36) #8
  br label %37

37:                                               ; preds = %35, %30, %24
  %38 = add i32 %26, 1
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %21, %39
  br i1 %40, label %24, label %41

41:                                               ; preds = %37, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_11ScriptValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink11ScriptValueENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::ScriptValue"*, %"class.blink::ScriptValue"*, %"class.blink::ScriptValue"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::ScriptValue"* %0, %1
  br i1 %5, label %74, label %6

6:                                                ; preds = %4, %70
  %7 = phi %"class.blink::ScriptValue"* [ %72, %70 ], [ %0, %4 ]
  %8 = phi %"class.blink::ScriptValue"* [ %71, %70 ], [ %2, %4 ]
  %9 = bitcast %"class.blink::ScriptValue"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::ScriptValue"* %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %14, align 8
  %15 = icmp eq %"class.blink::ScriptValue"* %8, %7
  br i1 %15, label %21, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %17, i64** %14) #8
  br label %21

21:                                               ; preds = %20, %16, %6
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.191"* dereferenceable(8) %13) #8
  %22 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  %23 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %23, %"class.blink::DOMWrapperWorld"** %24, align 8
  %25 = icmp eq %"class.blink::DOMWrapperWorld"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %23, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #8
  br label %28

28:                                               ; preds = %21, %26
  br i1 %3, label %29, label %60

29:                                               ; preds = %28
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %29
  %33 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %34 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %33, i64 0, i32 1
  %35 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %34) #8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %32
  %38 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %34, i8* %38) #8
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i8* [ %38, %37 ], [ %35, %32 ]
  %41 = bitcast i8* %40 to %"class.blink::ThreadState"**
  %42 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 9
  %44 = load i8, i8* %43, align 1, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 13
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %47, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %42, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %51, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 0, i32 1, i32 0
  %54 = bitcast %"class.blink::MarkingVisitor"* %51 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)***
  %55 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)** %55, i64 7
  %57 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.191"*)** %56, align 8
  tail call void %57(%"class.blink::Visitor"* %52, %"class.blink::TraceWrapperV8Reference.191"* dereferenceable(8) %53) #8
  %58 = load i64, i64* %47, align 8
  %59 = add i64 %58, -1
  store i64 %59, i64* %47, align 8
  br label %60

60:                                               ; preds = %46, %39, %29, %28
  %61 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %22, align 8
  %62 = icmp eq %"class.blink::DOMWrapperWorld"* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #8
  %65 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %61) #8
  %69 = bitcast %"class.blink::DOMWrapperWorld"* %61 to i8*
  tail call void @free(i8* %69) #8
  br label %70

70:                                               ; preds = %60, %63, %68
  %71 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %8, i64 1
  %72 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 1
  %73 = icmp eq %"class.blink::ScriptValue"* %72, %1
  br i1 %73, label %74, label %6

74:                                               ; preds = %70, %4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink11ScriptValueELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.848"*, %"class.blink::ScriptValue"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::ScriptValue"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #8
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #8
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #8
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !2
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #8
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #8
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !3
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !2
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #8
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !2

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::V8ForEachIteratorCallback"* @_ZN5blink17NativeValueTraitsINS_25V8ForEachIteratorCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %17

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #8
  %10 = bitcast i8* %9 to %"class.blink::V8ForEachIteratorCallback"*
  %11 = bitcast i8* %9 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %11, %"class.v8::Object"* %8) #8
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink25V8ForEachIteratorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  br label %41

17:                                               ; preds = %4
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)) #8
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %22 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %22, i64 3
  %24 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %23, align 8
  call void %24(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #8
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #8
  br label %40

40:                                               ; preds = %17, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %41

41:                                               ; preds = %40, %7
  %42 = phi %"class.blink::V8ForEachIteratorCallback"* [ %10, %7 ], [ null, %40 ]
  ret %"class.blink::V8ForEachIteratorCallback"* %42
}

declare void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* sret, %"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE17forEachForBindingEPNS_11ScriptStateERKNS_11ScriptValueEPNS_25V8ForEachIteratorCallbackESB_RNS_14ExceptionStateE(%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::V8ForEachIteratorCallback"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.v8::TryCatch", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::Member.823", align 8
  %11 = alloca %"class.blink::ScriptValue", align 8
  %12 = alloca %"class.blink::ScriptValue", align 8
  %13 = bitcast %"class.blink::Iterable"* %0 to %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)***
  %14 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)**, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*** %13, align 8
  %15 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* (%"class.blink::Iterable"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)** %14, align 8
  %16 = tail call %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %15(%"class.blink::Iterable"* %0, %"class.blink::ScriptState"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %5) #8
  %17 = bitcast %"class.v8::TryCatch"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 0
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %8, %"class.v8::Isolate"* %19) #8
  %20 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %4) #8
  %21 = bitcast %"class.WTF::String"* %9 to i8*
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::Member.823"* %10 to i8*
  %24 = getelementptr inbounds %"class.blink::Member.823", %"class.blink::Member.823"* %10, i64 0, i32 0, i32 0
  %25 = bitcast %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %16 to i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)***
  %26 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = bitcast %"class.blink::ScriptState"* %1 to %"class.v8::internal::Isolate"**
  %28 = bitcast %"class.WTF::StringView"* %7 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  %32 = bitcast %"class.WTF::StringView"* %7 to i64*
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %34 = bitcast %"class.blink::ScriptValue"* %11 to i8*
  %35 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %11, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %11, i64 0, i32 1
  %37 = bitcast %"class.blink::ScriptValue"* %12 to i8*
  %38 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 0, i32 1
  %40 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %12, i64 0, i32 1, i32 1, i32 0
  %41 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %11, i64 0, i32 1, i32 1, i32 0
  %42 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  br label %43

43:                                               ; preds = %149, %6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  store %"class.blink::V8UnionFileOrUSVString"* null, %"class.blink::V8UnionFileOrUSVString"** %24, align 8
  %44 = load i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*** %25, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)** %44, i64 2
  %46 = load i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)** %45, align 8
  %47 = call zeroext i1 %46(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %16, %"class.blink::ScriptState"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::Member.823"* nonnull dereferenceable(8) %10, %"class.blink::ExceptionState"* dereferenceable(72) %5) #8
  br i1 %47, label %48, label %132

48:                                               ; preds = %43
  %49 = load %"class.blink::V8UnionFileOrUSVString"*, %"class.blink::V8UnionFileOrUSVString"** %24, align 8
  %50 = getelementptr inbounds %"class.blink::V8UnionFileOrUSVString", %"class.blink::V8UnionFileOrUSVString"* %49, i64 0, i32 0
  %51 = load %"class.v8::Context"*, %"class.v8::Context"** %26, align 8
  %52 = icmp eq %"class.v8::Context"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %48
  %54 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %27, align 8
  %55 = bitcast %"class.v8::Context"* %51 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %54, i64 %56) #8
  %58 = bitcast i64* %57 to %"class.v8::Context"*
  br label %59

59:                                               ; preds = %53, %48
  %60 = phi %"class.v8::Context"* [ %58, %53 ], [ null, %48 ]
  %61 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %60) #8
  %62 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %61) #8
  %63 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %62) #8
  %64 = bitcast %"class.blink::V8UnionFileOrUSVString"* %49 to %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)***
  %65 = load %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)** %65, i64 2
  %67 = load %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)** %66, align 8
  %68 = call %"class.v8::Value"* %67(%"class.blink::bindings::UnionBase"* %50, %"class.blink::ScriptState"* %63) #8
  %69 = icmp eq %"class.v8::Value"* %68, null
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %59
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %71

71:                                               ; preds = %59, %70
  %72 = load %"class.v8::Context"*, %"class.v8::Context"** %26, align 8
  %73 = icmp eq %"class.v8::Context"* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %71
  %75 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %27, align 8
  %76 = bitcast %"class.v8::Context"* %72 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %75, i64 %77) #8
  %79 = bitcast i64* %78 to %"class.v8::Context"*
  br label %80

80:                                               ; preds = %74, %71
  %81 = phi %"class.v8::Context"* [ %79, %74 ], [ null, %71 ]
  %82 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %81) #8
  %83 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %80
  store i8* null, i8** %30, align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %87, i64* %32, align 8
  br label %92

88:                                               ; preds = %80
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %29, align 8
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 1
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %31, align 8
  br label %92

92:                                               ; preds = %86, %88
  %93 = phi i32 [ %90, %88 ], [ 0, %86 ]
  store i32 %93, i32* %33, align 8
  %94 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %83, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8
  %95 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* nonnull %8) #8
  br i1 %95, label %96, label %101

96:                                               ; preds = %92
  %97 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %8) #8
  %98 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %42, align 8
  %99 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %98, i64 5
  %100 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %99, align 8
  call void %100(%"class.blink::ExceptionState"* %5, %"class.v8::Value"* %97) #8
  br label %132

101:                                              ; preds = %92
  %102 = bitcast %"class.v8::String"* %94 to %"class.v8::Value"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #8
  %103 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  store %"class.v8::Isolate"* %103, %"class.v8::Isolate"** %35, align 8
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %36, %"class.v8::Isolate"* %103, %"class.v8::Value"* %68) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  %104 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  store %"class.v8::Isolate"* %104, %"class.v8::Isolate"** %38, align 8
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %39, %"class.v8::Isolate"* %104, %"class.v8::Value"* %102) #8
  %105 = call i8 @_ZN5blink25V8ForEachIteratorCallback6InvokeENS_8bindings31V8ValueOrScriptWrappableAdapterERKNS_11ScriptValueES5_S5_(%"class.blink::V8ForEachIteratorCallback"* %3, %"class.v8::Value"* %20, %"class.blink::ScriptWrappable"* null, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %11, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %12, %"class.blink::ScriptValue"* dereferenceable(24) %2) #8
  %106 = icmp eq i8 %105, 0
  %107 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %40, align 8
  %108 = icmp eq %"class.blink::DOMWrapperWorld"* %107, null
  br i1 %108, label %116, label %109

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %107, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %110) #8
  %111 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %107, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %109
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %107) #8
  %115 = bitcast %"class.blink::DOMWrapperWorld"* %107 to i8*
  call void @free(i8* %115) #8
  br label %116

116:                                              ; preds = %101, %109, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  %117 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %41, align 8
  %118 = icmp eq %"class.blink::DOMWrapperWorld"* %117, null
  br i1 %118, label %126, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %117, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %120) #8
  %121 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %117) #8
  %125 = bitcast %"class.blink::DOMWrapperWorld"* %117 to i8*
  call void @free(i8* %125) #8
  br label %126

126:                                              ; preds = %116, %119, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  br i1 %106, label %127, label %132

127:                                              ; preds = %126
  %128 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %8) #8
  %129 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %42, align 8
  %130 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %129, i64 5
  %131 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %130, align 8
  call void %131(%"class.blink::ExceptionState"* %5, %"class.v8::Value"* %128) #8
  br label %132

132:                                              ; preds = %126, %43, %127, %96
  %133 = phi i32 [ 1, %96 ], [ 1, %127 ], [ 1, %43 ], [ 0, %126 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #8
  br label %149

149:                                              ; preds = %132, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  %150 = icmp eq i32 %133, 0
  br i1 %150, label %43, label %151

151:                                              ; preds = %149
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #8
  ret void
}

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.186"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.186"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackFunctionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackFunctionBase"*)***
  %4 = load void (%"class.blink::CallbackFunctionBase"*)**, void (%"class.blink::CallbackFunctionBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackFunctionBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #8
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #8
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.191"* dereferenceable(8) %3) #8
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #8
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.344* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.344, %class.scoped_refptr.344* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #8
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #8
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #8
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare i8 @_ZN5blink25V8ForEachIteratorCallback6InvokeENS_8bindings31V8ValueOrScriptWrappableAdapterERKNS_11ScriptValueES5_S5_(%"class.blink::V8ForEachIteratorCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ScriptValue"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEED0Ev(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE5TraceEPNS_7VisitorE(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876", %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.838"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE15IterationSourceEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876", %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::Member.823", align 8
  %8 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = bitcast %"class.blink::Member.823"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.blink::Member.823", %"class.blink::Member.823"* %7, i64 0, i32 0, i32 0
  store %"class.blink::V8UnionFileOrUSVString"* null, %"class.blink::V8UnionFileOrUSVString"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876", %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"* %1, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"** %12, align 8
  %14 = bitcast %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %13 to i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)***
  %15 = load i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)** %15, i64 2
  %17 = load i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)** %16, align 8
  %18 = call zeroext i1 %17(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %13, %"class.blink::ScriptState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::Member.823"* nonnull dereferenceable(8) %7, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %20 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8
  br i1 %18, label %26, label %21

21:                                               ; preds = %4
  %22 = ptrtoint %"class.v8::Isolate"* %20 to i64
  %23 = add i64 %22, 160
  %24 = inttoptr i64 %23 to %"class.v8::Value"*
  %25 = call %"class.v8::Object"* @_ZN5blink21V8IteratorResultValueEPNS_11ScriptStateEbN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %2, i1 zeroext true, %"class.v8::Value"* %24) #8, !noalias !17
  br label %60

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.v8::Context"*, %"class.v8::Context"** %27, align 8, !noalias !20
  %29 = icmp eq %"class.v8::Context"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.v8::Isolate"* %20 to %"class.v8::internal::Isolate"*
  %32 = bitcast %"class.v8::Context"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %31, i64 %33) #8
  %35 = bitcast i64* %34 to %"class.v8::Context"*
  br label %36

36:                                               ; preds = %30, %26
  %37 = phi %"class.v8::Context"* [ %35, %30 ], [ null, %26 ]
  %38 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %37) #8, !noalias !20
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %19, align 8, !noalias !20
  %40 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8, !noalias !20
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8, !noalias !20
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %44, align 8, !noalias !20
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %45, i64* %46, align 8, !noalias !20
  br label %54

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %48, align 8, !noalias !20
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8, !noalias !20
  br label %54

54:                                               ; preds = %43, %47
  %55 = phi i32 [ %50, %47 ], [ 0, %43 ]
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %55, i32* %56, align 8, !noalias !20
  %57 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %39, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #8, !noalias !20
  %58 = bitcast %"class.v8::String"* %57 to %"class.v8::Value"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8, !noalias !20
  %59 = call %"class.v8::Object"* @_ZN5blink21V8IteratorResultValueEPNS_11ScriptStateEbN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %2, i1 zeroext false, %"class.v8::Value"* %58) #8, !noalias !20
  br label %60

60:                                               ; preds = %54, %21
  %61 = phi %"class.v8::Object"* [ %59, %54 ], [ %25, %21 ]
  %62 = bitcast %"class.v8::Object"* %61 to %"class.v8::Value"*
  %63 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %20, %"class.v8::Isolate"** %63, align 8, !alias.scope !23
  %64 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %64, %"class.v8::Isolate"* %20, %"class.v8::Value"* %62) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #8
  br label %80

80:                                               ; preds = %60, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE4nextEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_11KeySelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptValue"* sret %0, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.876"* %1, %"class.blink::ScriptState"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEED0Ev(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE5TraceEPNS_7VisitorE(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877", %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.838"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE15IterationSourceEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877", %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::Member.823", align 8
  %7 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = bitcast %"class.blink::Member.823"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::Member.823", %"class.blink::Member.823"* %6, i64 0, i32 0, i32 0
  store %"class.blink::V8UnionFileOrUSVString"* null, %"class.blink::V8UnionFileOrUSVString"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877", %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"** %11, align 8
  %13 = bitcast %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %12 to i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)***
  %14 = load i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)** %14, i64 2
  %16 = load i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"*, %"class.blink::ScriptState"*, %"class.WTF::String"*, %"class.blink::Member.823"*, %"class.blink::ExceptionState"*)** %15, align 8
  %17 = call zeroext i1 %16(%"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterationSource"* %12, %"class.blink::ScriptState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::Member.823"* nonnull dereferenceable(8) %6, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %18 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  br i1 %17, label %25, label %20

20:                                               ; preds = %4
  %21 = ptrtoint %"class.v8::Isolate"* %19 to i64
  %22 = add i64 %21, 160
  %23 = inttoptr i64 %22 to %"class.v8::Value"*
  %24 = call %"class.v8::Object"* @_ZN5blink21V8IteratorResultValueEPNS_11ScriptStateEbN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %2, i1 zeroext true, %"class.v8::Value"* %23) #8, !noalias !24
  br label %51

25:                                               ; preds = %4
  %26 = load %"class.blink::V8UnionFileOrUSVString"*, %"class.blink::V8UnionFileOrUSVString"** %10, align 8, !noalias !27
  %27 = getelementptr inbounds %"class.blink::V8UnionFileOrUSVString", %"class.blink::V8UnionFileOrUSVString"* %26, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.v8::Context"*, %"class.v8::Context"** %28, align 8, !noalias !27
  %30 = icmp eq %"class.v8::Context"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.v8::Isolate"* %19 to %"class.v8::internal::Isolate"*
  %33 = bitcast %"class.v8::Context"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %32, i64 %34) #8
  %36 = bitcast i64* %35 to %"class.v8::Context"*
  br label %37

37:                                               ; preds = %31, %25
  %38 = phi %"class.v8::Context"* [ %36, %31 ], [ null, %25 ]
  %39 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %38) #8, !noalias !27
  %40 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %39) #8, !noalias !27
  %41 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %40) #8, !noalias !27
  %42 = bitcast %"class.blink::V8UnionFileOrUSVString"* %26 to %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)***
  %43 = load %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*** %42, align 8, !noalias !27
  %44 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)** %43, i64 2
  %45 = load %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::bindings::UnionBase"*, %"class.blink::ScriptState"*)** %44, align 8, !noalias !27
  %46 = call %"class.v8::Value"* %45(%"class.blink::bindings::UnionBase"* %27, %"class.blink::ScriptState"* %41) #8, !noalias !27
  %47 = icmp eq %"class.v8::Value"* %46, null
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %37
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %49

49:                                               ; preds = %37, %48
  %50 = call %"class.v8::Object"* @_ZN5blink21V8IteratorResultValueEPNS_11ScriptStateEbN2v85LocalINS2_5ValueEEE(%"class.blink::ScriptState"* %2, i1 zeroext false, %"class.v8::Value"* %46) #8, !noalias !27
  br label %51

51:                                               ; preds = %49, %20
  %52 = phi %"class.v8::Object"* [ %50, %49 ], [ %24, %20 ]
  %53 = bitcast %"class.v8::Object"* %52 to %"class.v8::Value"*
  %54 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %19, %"class.v8::Isolate"** %54, align 8, !alias.scope !30
  %55 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %55, %"class.v8::Isolate"* %19, %"class.v8::Value"* %53) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #8
  br label %71

71:                                               ; preds = %51, %67, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE4nextEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink8IterableIN3WTF6StringENS_6MemberINS_22V8UnionFileOrUSVStringEEEE16IterableIteratorINS6_13ValueSelectorEE4nextEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptValue"* sret %0, %"class.blink::Iterable<WTF::String, blink::Member<blink::V8UnionFileOrUSVString> >::IterableIterator.877"* %1, %"class.blink::ScriptState"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  ret void
}

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!6 = distinct !{!6, !"_ZN5blink17NativeValueTraitsINS_6IDLAnyEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!7 = distinct !{!7, !8, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink21NativeValueTraitsBaseINS_6IDLAnyEvE13ArgumentValueIJEEEDcPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateEDpT_"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!"branch_weights", i32 2002, i32 2000}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink20V8IteratorResultDoneEPNS_11ScriptStateE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink20V8IteratorResultDoneEPNS_11ScriptStateE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink16V8IteratorResultINS_10HeapVectorINS_11ScriptValueELj2EEEEES2_PNS_11ScriptStateERKT_: argument 0"}
!16 = distinct !{!16, !"_ZN5blink16V8IteratorResultINS_10HeapVectorINS_11ScriptValueELj2EEEEES2_PNS_11ScriptStateERKT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink20V8IteratorResultDoneEPNS_11ScriptStateE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink20V8IteratorResultDoneEPNS_11ScriptStateE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink16V8IteratorResultIN3WTF6StringEEENS_11ScriptValueEPNS_11ScriptStateERKT_: argument 0"}
!22 = distinct !{!22, !"_ZN5blink16V8IteratorResultIN3WTF6StringEEENS_11ScriptValueEPNS_11ScriptStateERKT_"}
!23 = !{!18, !21}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN5blink20V8IteratorResultDoneEPNS_11ScriptStateE: argument 0"}
!26 = distinct !{!26, !"_ZN5blink20V8IteratorResultDoneEPNS_11ScriptStateE"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN5blink16V8IteratorResultINS_6MemberINS_22V8UnionFileOrUSVStringEEEEENS_11ScriptValueEPNS_11ScriptStateERKT_: argument 0"}
!29 = distinct !{!29, !"_ZN5blink16V8IteratorResultINS_6MemberINS_22V8UnionFileOrUSVStringEEEEENS_11ScriptValueEPNS_11ScriptStateERKT_"}
!30 = !{!25, !28}
