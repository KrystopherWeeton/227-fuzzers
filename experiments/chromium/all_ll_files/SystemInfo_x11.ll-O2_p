; ModuleID = '../../third_party/angle/src/gpu_info_util/SystemInfo_x11.cpp'
source_filename = "../../third_party/angle/src/gpu_info_util/SystemInfo_x11.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct._XDisplay = type opaque
%struct.anon.1 = type { %struct._XExtData*, %struct._XPrivate*, i32, i32, i32, i32, i8*, i64, i64, i64, i32, i64 (%struct._XDisplay*)*, i32, i32, i32, i32, i32, %struct.ScreenFormat*, i32, i32, %struct._XPrivate*, %struct._XPrivate*, i32, i64, i64, i8*, i8*, i8*, i8*, i32, %struct._XrmHashBucketRec*, i32 (%struct._XDisplay*)*, i8*, i32, i32, %struct.Screen*, i64, i64, i32, i32, i8*, i8*, i32, i8* }
%struct._XExtData = type { i32, %struct._XExtData*, i32 (%struct._XExtData*)*, i8* }
%struct.ScreenFormat = type { %struct._XExtData*, i32, i32, i32 }
%struct._XPrivate = type opaque
%struct._XrmHashBucketRec = type opaque
%struct.Screen = type { %struct._XExtData*, %struct._XDisplay*, i64, i32, i32, i32, i32, i32, %struct.Depth*, i32, %struct.Visual*, %struct._XGC*, i64, i64, i64, i32, i32, i32, i32, i64 }
%struct.Depth = type { i32, i32, %struct.Visual* }
%struct.Visual = type { %struct._XExtData*, i64, i32, i64, i64, i64, i32, i32 }
%struct._XGC = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5angle33GetNvidiaDriverVersionWithXNVCtrlEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  br label %15

13:                                               ; preds = %1
  store i8 0, i8* %6, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi i8* [ %12, %9 ], [ %14, %13 ]
  store i8 0, i8* %16, align 1
  %17 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #5
  store i32 0, i32* %2, align 4
  %18 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #5
  store i32 0, i32* %3, align 4
  %19 = tail call %struct._XDisplay* @XOpenDisplay(i8* null) #5
  %20 = icmp eq %struct._XDisplay* %19, null
  br i1 %20, label %71, label %21

21:                                               ; preds = %15
  %22 = call i32 @XNVCTRLQueryExtension(%struct._XDisplay* nonnull %19, i32* nonnull %2, i32* nonnull %3) #5
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %71, label %24

24:                                               ; preds = %21
  %25 = bitcast %struct._XDisplay* %19 to %struct.anon.1*
  %26 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %25, i64 0, i32 34
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %71

29:                                               ; preds = %24
  %30 = bitcast i8** %4 to i8*
  br label %31

31:                                               ; preds = %65, %29
  %32 = phi i32 [ 0, %29 ], [ %66, %65 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #5
  store i8* null, i8** %4, align 8
  %33 = call i32 @XNVCTRLIsNvScreen(%struct._XDisplay* nonnull %19, i32 %32) #5
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %65, label %35

35:                                               ; preds = %31
  %36 = call i32 @XNVCTRLQueryStringAttribute(%struct._XDisplay* nonnull %19, i32 %32, i32 0, i32 3, i8** nonnull %4) #5
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %65, label %38

38:                                               ; preds = %35
  %39 = load i8*, i8** %4, align 8
  %40 = load i8, i8* %39, align 1
  %41 = call i1 @llvm.is.constant.i8(i8 %40) #5
  br i1 %41, label %42, label %63

42:                                               ; preds = %38
  %43 = call i64 @strlen(i8* %39) #5
  %44 = icmp ult i64 %43, 23
  br i1 %44, label %45, label %61

45:                                               ; preds = %42
  %46 = load i8, i8* %6, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  br label %55

52:                                               ; preds = %45
  %53 = trunc i64 %43 to i8
  store i8 %53, i8* %6, align 1
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %55

55:                                               ; preds = %52, %48
  %56 = phi i8* [ %51, %48 ], [ %54, %52 ]
  %57 = icmp eq i64 %43, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %39, i64 %43, i1 false) #5
  br label %59

59:                                               ; preds = %58, %55
  %60 = getelementptr inbounds i8, i8* %56, i64 %43
  store i8 0, i8* %60, align 1
  br label %68

61:                                               ; preds = %42
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %39, i64 %43) #5
  br label %68

63:                                               ; preds = %38
  %64 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %0, i8* %39) #5
  br label %68

65:                                               ; preds = %35, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #5
  %66 = add nuw nsw i32 %32, 1
  %67 = icmp eq i32 %66, %27
  br i1 %67, label %71, label %31

68:                                               ; preds = %63, %61, %59
  %69 = load i8*, i8** %4, align 8
  %70 = call i32 @XFree(i8* %69) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #5
  br label %71

71:                                               ; preds = %65, %24, %15, %21, %68
  %72 = phi i1 [ true, %68 ], [ false, %21 ], [ false, %15 ], [ false, %24 ], [ false, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #5
  ret i1 %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct._XDisplay* @XOpenDisplay(i8*) local_unnamed_addr #2

declare i32 @XNVCTRLQueryExtension(%struct._XDisplay*, i32*, i32*) local_unnamed_addr #2

declare i32 @XNVCTRLIsNvScreen(%struct._XDisplay*, i32) local_unnamed_addr #2

declare i32 @XNVCTRLQueryStringAttribute(%struct._XDisplay*, i32, i32, i32, i8**) local_unnamed_addr #2

declare i32 @XFree(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
