; ModuleID = '../../components/safe_browsing/content/browser/client_side_phishing_model.cc'
source_filename = "../../components/safe_browsing/content/browser/client_side_phishing_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.safe_browsing::ClientSideModel" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField.35", %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField.36", %"class.google::protobuf::RepeatedPtrField.37", %"class.safe_browsing::VisionModel"*, %"class.safe_browsing::TfLiteModelMetadata"*, i32, i32, i32, float, i32, i32 }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.30", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::RepeatedPtrField.35" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"class.google::protobuf::RepeatedField.36" = type { i32, i32, i8* }
%"class.google::protobuf::RepeatedPtrField.37" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.safe_browsing::VisionModel" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::RepeatedPtrField.38", %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.38" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.safe_browsing::TfLiteModelMetadata" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField.39", i32, i32, i32, [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.39" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.safe_browsing::ClientSidePhishingModel" = type { i32 (...)**, %"class.base::RepeatingCallbackList", %"class.std::__1::basic_string", %"class.base::File", i32, %"struct.base::MappedReadOnlyRegion", %"class.base::Lock" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.3", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"struct.base::MappedReadOnlyRegion" = type { %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.40" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.41" = type { %"class.base::internal::CallbackBase" }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.66 }
%class.scoped_refptr.66 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.flatbuffers::Verifier" = type <{ i8*, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%"struct.safe_browsing::flat::ClientSideModel" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.base::RepeatingCallback" }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { i8*, i8*, %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.safe_browsing::flat::Hash" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::ClientSideModel_::Rule" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::ClientSideModel_::IPSubnet" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::VisionModel" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::TfLiteModelMetadata" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::VisualTarget" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::VisualFeatures_::ColorHistogramBin" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::MatchConfig" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::MatchRule" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Vector.53" = type { i32 }
%"class.flatbuffers::Vector.54" = type { i32 }
%"struct.safe_browsing::flat::MatchRule_::ColorRange" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::MatchRule_::FloatColorRange" = type { %"class.flatbuffers::Table" }
%"struct.safe_browsing::flat::ClientSideModel_::Threshold" = type { %"class.flatbuffers::Table" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.15" }

$_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEED2Ev = comdat any

$_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEE3AddENS_17RepeatingCallbackIS3_EE = comdat any

$_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEE6NotifyIJEEEvDpOT_ = comdat any

$_ZNK13safe_browsing4flat15ClientSideModel6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK13safe_browsing4flat4Hash6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK13safe_browsing4flat16ClientSideModel_4Rule6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK13safe_browsing4flat16ClientSideModel_8IPSubnet6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK13safe_browsing4flat11VisionModel6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK13safe_browsing4flat12VisualTarget6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK13safe_browsing4flat15VisualFeatures_17ColorHistogramBin6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK13safe_browsing4flat11MatchConfig6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK13safe_browsing4flat9MatchRule6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZN11flatbuffers8Verifier20VerifyVectorOfTablesIN13safe_browsing4flat10MatchRule_10ColorRangeEEEbPKNS_6VectorINS_6OffsetIT_EEEE = comdat any

$_ZN11flatbuffers8Verifier20VerifyVectorOfTablesIN13safe_browsing4flat10MatchRule_15FloatColorRangeEEEbPKNS_6VectorINS_6OffsetIT_EEEE = comdat any

$_ZNK13safe_browsing4flat19TfLiteModelMetadata6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK13safe_browsing4flat16ClientSideModel_9Threshold6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E6OnExitEPv = comdat any

$_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEE14CancelCallbackERKNSt3__115__list_iteratorINS_17RepeatingCallbackIS3_EEPvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS5_EEPvEEEJNS_7WeakPtrIS7_EESD_EEES5_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS4_EEPvEEEJNS_7WeakPtrIS6_EESC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS5_EEPvEEEJNS_7WeakPtrIS7_EESD_EEEEEbPKNS0_13BindStateBaseENSL_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__14listIN4base17RepeatingCallbackIFvvEEENS_9allocatorIS4_EEE9remove_ifIZNS1_8internal16CallbackListBaseINS1_21RepeatingCallbackListIS3_EEE6NotifyIJEEEvDpOT_EUlTyRKT_E_EEvSI_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_8FilePathEEJSA_EEEFS9_vEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8FilePathEEJS9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvNS3_12CSDModelTypeERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EES5_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_ = comdat any

$_ZN4base8internal9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvNS2_12CSDModelTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal20ReturnAsParamAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvNS_12OnceCallbackIFT_vEEEPNS2_10unique_ptrISA_NS2_14default_deleteISA_EEEE = comdat any

$_ZN4base8internal12ReplyAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKS8_EEvNS_12OnceCallbackIFvT0_EEEPNS2_10unique_ptrIT_NS2_14default_deleteISG_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEvEEEPNS4_10unique_ptrISA_NS4_14default_deleteISA_EEEEEJSC_SH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEvEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSB_SG_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEEPNS4_10unique_ptrISA_NS4_14default_deleteISA_EEEEEJSE_NS0_12OwnedWrapperISI_NSG_ISI_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSD_NS0_12OwnedWrapperISH_NSF_ISH_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E9instance_E = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@_ZTVN13safe_browsing23ClientSidePhishingModelE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.safe_browsing::ClientSidePhishingModel"*)* @_ZN13safe_browsing23ClientSidePhishingModelD2Ev to i8*), i8* bitcast (void (%"class.safe_browsing::ClientSidePhishingModel"*)* @_ZN13safe_browsing23ClientSidePhishingModelD0Ev to i8*)] }, align 8
@_ZN13safe_browsing12_GLOBAL__N_121kOverrideCsdModelFlagE = internal constant [24 x i8] c"csd-model-override-path\00", align 16
@_ZN13safe_browsing37kClientSideDetectionModelIsFlatBufferE = external global %"struct.base::Feature", align 8
@.str.1 = private unnamed_addr constant [45 x i8] c"SBClientPhishing.FlatBufferMappedRegionValid\00", align 1
@__const._ZN13safe_browsing23ClientSidePhishingModel25PopulateFromDynamicUpdateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base4FileE.model_proto = private unnamed_addr constant %"class.safe_browsing::ClientSideModel" { %"class.google::protobuf::MessageLite" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.google::protobuf::internal::InternalMetadata" { i8* inttoptr (i64 -6148914691236517206 to i8*) } }, %"class.google::protobuf::internal::HasBits" { [1 x i32] [i32 -1431655766] }, %"class.google::protobuf::internal::CachedSize" { %"struct.std::__1::atomic" { %"struct.std::__1::__atomic_base" { %"struct.std::__1::__atomic_base.1" { %"struct.std::__1::__cxx_atomic_impl" { %"struct.std::__1::__cxx_atomic_base_impl" { i32 -1431655766 } } } } } }, %"class.google::protobuf::RepeatedPtrField" { %"class.google::protobuf::internal::RepeatedPtrFieldBase" { %"class.google::protobuf::Arena"* inttoptr (i64 -6148914691236517206 to %"class.google::protobuf::Arena"*), i32 -1431655766, i32 -1431655766, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* inttoptr (i64 -6148914691236517206 to %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*) } }, %"class.google::protobuf::RepeatedPtrField.35" { %"class.google::protobuf::internal::RepeatedPtrFieldBase" { %"class.google::protobuf::Arena"* inttoptr (i64 -6148914691236517206 to %"class.google::protobuf::Arena"*), i32 -1431655766, i32 -1431655766, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* inttoptr (i64 -6148914691236517206 to %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*) } }, %"class.google::protobuf::RepeatedField" { i32 -1431655766, i32 -1431655766, i8* inttoptr (i64 -6148914691236517206 to i8*) }, %"class.google::protobuf::RepeatedField.36" { i32 -1431655766, i32 -1431655766, i8* inttoptr (i64 -6148914691236517206 to i8*) }, %"class.google::protobuf::RepeatedPtrField.37" { %"class.google::protobuf::internal::RepeatedPtrFieldBase" { %"class.google::protobuf::Arena"* inttoptr (i64 -6148914691236517206 to %"class.google::protobuf::Arena"*), i32 -1431655766, i32 -1431655766, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* inttoptr (i64 -6148914691236517206 to %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*) } }, %"class.safe_browsing::VisionModel"* inttoptr (i64 -6148914691236517206 to %"class.safe_browsing::VisionModel"*), %"class.safe_browsing::TfLiteModelMetadata"* inttoptr (i64 -6148914691236517206 to %"class.safe_browsing::TfLiteModelMetadata"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766 }, align 8
@.str.2 = private unnamed_addr constant [43 x i8] c"SBClientPhishing.ModelDynamicUpdateSuccess\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"SBClientPhishing.ModelDynamicUpdateVersion\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"PopulateFromDynamicUpdate\00", align 1
@.str.5 = private unnamed_addr constant [77 x i8] c"../../components/safe_browsing/content/browser/client_side_phishing_model.cc\00", align 1
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" { i8 1, %"struct.std::__1::array" { [8 x i8] c"\00\00\01\00\00\00\00\00" } }, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"MaybeOverrideModel\00", align 1
@.ref.tmp.7 = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 1, i8 0, i8 0 }, align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"Overriden model data is empty\00", align 1
@.str.9 = private unnamed_addr constant [58 x i8] c"Overriden model data is not a valid ClientSideModel proto\00", align 1
@.str.10 = private unnamed_addr constant [63 x i8] c"Overriden model data is not a valid ClientSideModel flatbuffer\00", align 1
@.str.11 = private unnamed_addr constant [53 x i8] c"Could not create shared memory region for flatbuffer\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"Model type should have been either proto or flatbuffer\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"Model overriden successfully\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"OnGetOverridenModelData\00", align 1
@.ref.tmp.15 = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" { i8 1, %"struct.std::__1::array" { [8 x i8] c"\00\00\01\00\00\00\00\00" } }, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"../../base/callback_list.h\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"!iterating_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8
@.str.21 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN13safe_browsing23ClientSidePhishingModelC1Ev = hidden unnamed_addr alias void (%"class.safe_browsing::ClientSidePhishingModel"*), void (%"class.safe_browsing::ClientSidePhishingModel"*)* @_ZN13safe_browsing23ClientSidePhishingModelC2Ev
@_ZN13safe_browsing23ClientSidePhishingModelD1Ev = hidden unnamed_addr alias void (%"class.safe_browsing::ClientSidePhishingModel"*), void (%"class.safe_browsing::ClientSidePhishingModel"*)* @_ZN13safe_browsing23ClientSidePhishingModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.safe_browsing::ClientSidePhishingModel"* @_ZN13safe_browsing23ClientSidePhishingModel11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E9instance_E acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %35, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E9instance_E) #9
  br i1 %4, label %5, label %33

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 304) #10
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN13safe_browsing23ClientSidePhishingModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to i8**
  store i8* %8, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 24
  %13 = bitcast i8* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 32
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 40
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"**
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %6, i64 48
  %18 = bitcast i8* %17 to %"class.base::internal::WeakPtrFactoryBase"*
  %19 = ptrtoint i8* %8 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %18, i64 %19) #9
  %20 = getelementptr inbounds i8, i8* %6, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  %21 = bitcast i8* %6 to %"class.safe_browsing::ClientSidePhishingModel"*
  %22 = getelementptr inbounds i8, i8* %6, i64 88
  %23 = bitcast i8* %22 to %"class.base::File"*
  tail call void @_ZN4base4FileC1Ev(%"class.base::File"* %23) #9
  %24 = getelementptr inbounds i8, i8* %6, i64 144
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %6, i64 152
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 112, i1 false) #9
  %27 = bitcast i8* %26 to %"class.base::ReadOnlySharedMemoryRegion"*
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %27) #9
  %28 = getelementptr inbounds i8, i8* %6, i64 216
  %29 = bitcast i8* %28 to %"class.base::WritableSharedMemoryMapping"*
  tail call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* %29) #9
  %30 = getelementptr inbounds i8, i8* %6, i64 264
  %31 = bitcast i8* %30 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %31) #9
  tail call void @_ZN13safe_browsing23ClientSidePhishingModel18MaybeOverrideModelEv(%"class.safe_browsing::ClientSidePhishingModel"* nonnull %21) #9
  %32 = ptrtoint i8* %6 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E9instance_E, i64 %32, void (i8*)* nonnull @_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E6OnExitEPv, i8* null) #9
  br label %35

33:                                               ; preds = %3
  %34 = load atomic i64, i64* @_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E9instance_E acquire, align 8
  br label %35

35:                                               ; preds = %0, %5, %33
  %36 = phi i64 [ %1, %0 ], [ %32, %5 ], [ %34, %33 ]
  %37 = inttoptr i64 %36 to %"class.safe_browsing::ClientSidePhishingModel"*
  ret %"class.safe_browsing::ClientSidePhishingModel"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModelC2Ev(%"class.safe_browsing::ClientSidePhishingModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN13safe_browsing23ClientSidePhishingModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::RepeatingCallbackList", %"class.base::RepeatingCallbackList"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::RepeatingCallbackList", %"class.base::RepeatingCallbackList"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %4, %"struct.std::__1::__list_node_base"** %5, align 8
  %6 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %4, %"struct.std::__1::__list_node_base"** %6, align 8
  %7 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %10 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 1, i32 0, i32 3, i32 0
  %11 = ptrtoint %"class.base::RepeatingCallbackList"* %3 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %10, i64 %11) #9
  %12 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #9
  %14 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 3
  tail call void @_ZN4base4FileC1Ev(%"class.base::File"* %14) #9
  %15 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 4
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5
  %17 = bitcast %"struct.base::MappedReadOnlyRegion"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 112, i1 false)
  %18 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %16, i64 0, i32 0
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %18) #9
  %19 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1
  tail call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* %19) #9
  %20 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %20) #9
  tail call void @_ZN13safe_browsing23ClientSidePhishingModel18MaybeOverrideModelEv(%"class.safe_browsing::ClientSidePhishingModel"* %0)
  ret void
}

declare void @_ZN4base4FileC1Ev(%"class.base::File"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModel18MaybeOverrideModelEv(%"class.safe_browsing::ClientSidePhishingModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::FilePath", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback.40", align 8
  %7 = alloca %"class.base::OnceCallback.41", align 8
  %8 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #9
  %9 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN13safe_browsing12_GLOBAL__N_121kOverrideCsdModelFlagE, i64 0, i64 0)) #9
  br i1 %9, label %10, label %64

10:                                               ; preds = %1
  %11 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = bitcast %"class.base::FilePath"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #9
  call void @_ZNK4base11CommandLine18GetSwitchValuePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %4, %"class.base::CommandLine"* %13, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN13safe_browsing12_GLOBAL__N_121kOverrideCsdModelFlagE, i64 0, i64 0), i64 23) #9
  %14 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN13safe_browsing37kClientSideDetectionModelIsFlatBufferE) #9
  %15 = select i1 %14, i32 2, i32 1
  %16 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i32 220) #9
  %17 = call i8* @_Znwm(i64 64) #10, !noalias !2
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_8FilePathEEJSA_EEEFS9_vEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8FilePathEEJS9_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to i64*
  store i64 ptrtoint (void (%"class.std::__1::basic_string"*, %"class.base::FilePath"*)* @_ZN13safe_browsing12_GLOBAL__N_118ReadFileIntoStringEN4base8FilePathE to i64), i64* %20, align 8, !noalias !2
  %21 = getelementptr inbounds i8, i8* %17, i64 40
  %22 = bitcast i8* %21 to %"class.base::FilePath"*
  call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %22, %"class.base::FilePath"* nonnull dereferenceable(24) %4) #9, !noalias !2
  %23 = ptrtoint %"class.safe_browsing::ClientSidePhishingModel"* %0 to i64
  %24 = call i8* @_Znwm(i64 64) #10, !noalias !7
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvNS3_12CSDModelTypeERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EES5_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvNS2_12CSDModelTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !7
  %26 = getelementptr inbounds i8, i8* %24, i64 32
  %27 = bitcast i8* %26 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.safe_browsing::ClientSidePhishingModel"*, i32, %"class.std::__1::basic_string"*)* @_ZN13safe_browsing23ClientSidePhishingModel23OnGetOverridenModelDataENS_12CSDModelTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i64), i64 0>, <2 x i64>* %27, align 8, !noalias !7
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %23, i64* %29, align 8, !noalias !7
  %30 = getelementptr inbounds i8, i8* %24, i64 56
  %31 = bitcast i8* %30 to i32*
  store i32 %15, i32* %31, align 4, !noalias !7
  %32 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = call i8* @_Znwm(i64 8) #10
  %35 = bitcast i8* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = ptrtoint i8* %34 to i64
  %37 = call i8* @_Znwm(i64 56) #10, !noalias !12
  %38 = bitcast i8* %37 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %38, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEvEEEPNS4_10unique_ptrISA_NS4_14default_deleteISA_EEEEEJSC_SH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEvEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSB_SG_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !12
  %39 = getelementptr inbounds i8, i8* %37, i64 32
  %40 = bitcast i8* %39 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.40"*, %"class.std::__1::unique_ptr.101"*)* @_ZN4base8internal20ReturnAsParamAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvNS_12OnceCallbackIFT_vEEEPNS2_10unique_ptrISA_NS2_14default_deleteISA_EEEE to i64), i64* %40, align 8, !noalias !12
  %41 = getelementptr inbounds i8, i8* %37, i64 40
  %42 = getelementptr inbounds %"class.base::OnceCallback.40", %"class.base::OnceCallback.40"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = ptrtoint i8* %17 to i64
  %44 = bitcast i8* %41 to i64*
  store i64 %43, i64* %44, align 8, !noalias !12
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8, !noalias !12
  %45 = getelementptr inbounds i8, i8* %37, i64 48
  %46 = bitcast i8* %45 to i64*
  store i64 %36, i64* %46, align 8, !noalias !12
  %47 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %37, i8** %47, align 8, !alias.scope !12
  %48 = call i8* @_Znwm(i64 56) #10, !noalias !17
  %49 = bitcast i8* %48 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %49, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEEPNS4_10unique_ptrISA_NS4_14default_deleteISA_EEEEEJSE_NS0_12OwnedWrapperISI_NSG_ISI_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSD_NS0_12OwnedWrapperISH_NSF_ISH_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !17
  %50 = getelementptr inbounds i8, i8* %48, i64 32
  %51 = bitcast i8* %50 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.41"*, %"class.std::__1::unique_ptr.101"*)* @_ZN4base8internal12ReplyAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKS8_EEvNS_12OnceCallbackIFvT0_EEEPNS2_10unique_ptrIT_NS2_14default_deleteISG_EEEE to i64), i64* %51, align 8, !noalias !17
  %52 = getelementptr inbounds i8, i8* %48, i64 40
  %53 = getelementptr inbounds %"class.base::OnceCallback.41", %"class.base::OnceCallback.41"* %7, i64 0, i32 0, i32 0, i32 0
  %54 = ptrtoint i8* %24 to i64
  %55 = bitcast i8* %52 to i64*
  store i64 %54, i64* %55, align 8, !noalias !17
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8, !noalias !17
  %56 = getelementptr inbounds i8, i8* %48, i64 48
  %57 = bitcast i8* %56 to i64*
  store i64 %36, i64* %57, align 8, !noalias !17
  %58 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %48, i8** %58, align 8, !alias.scope !17
  %59 = call zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp.7, %"class.base::OnceCallback"* nonnull %2, %"class.base::OnceCallback"* nonnull %3) #9
  %60 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #9
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  %62 = getelementptr inbounds %"class.base::OnceCallback.41", %"class.base::OnceCallback.41"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #9
  %63 = getelementptr inbounds %"class.base::OnceCallback.40", %"class.base::OnceCallback.40"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  br label %64

64:                                               ; preds = %10, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModelD2Ev(%"class.safe_browsing::ClientSidePhishingModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN13safe_browsing23ClientSidePhishingModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !22

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #9
  br label %9

9:                                                ; preds = %1, %7
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #9
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %11) #9
  %12 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %12) #9
  %13 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %13) #9
  %14 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 3
  tail call void @_ZN4base4FileD1Ev(%"class.base::File"* %14) #9
  %15 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %9, %20
  %24 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEED2Ev(%"class.base::internal::CallbackListBase"* %24) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEED2Ev(%"class.base::internal::CallbackListBase"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !23
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i32 148, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #9
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 3, i32 0
  call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %10) #9
  %11 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %11) #9
  %12 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %41, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 0
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  store i64 %23, i64* %27, align 8
  %28 = bitcast %"struct.std::__1::__list_node_base"* %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64**
  %31 = load i64*, i64** %30, align 8
  store i64 %29, i64* %31, align 8
  store i64 0, i64* %12, align 8
  %32 = icmp eq %"struct.std::__1::__list_node_base"* %17, %18
  br i1 %32, label %41, label %33

33:                                               ; preds = %15, %33
  %34 = phi %"struct.std::__1::__list_node_base"* [ %36, %33 ], [ %17, %15 ]
  %35 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 0, i32 1
  %36 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__list_node_base"* %37 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %38) #9
  %39 = bitcast %"struct.std::__1::__list_node_base"* %34 to i8*
  call void @_ZdlPv(i8* %39) #10
  %40 = icmp eq %"struct.std::__1::__list_node_base"* %36, %18
  br i1 %40, label %41, label %33

41:                                               ; preds = %33, %9, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModelD0Ev(%"class.safe_browsing::ClientSidePhishingModel"*) unnamed_addr #0 align 2 {
  tail call void @_ZN13safe_browsing23ClientSidePhishingModelD2Ev(%"class.safe_browsing::ClientSidePhishingModel"* %0) #9
  %2 = bitcast %"class.safe_browsing::ClientSidePhishingModel"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModel16RegisterCallbackEN4base17RepeatingCallbackIFvvEEE(%"class.base::CallbackListSubscription"* noalias sret, %"class.safe_browsing::ClientSidePhishingModel"*, %"class.base::RepeatingCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %1, i64 0, i32 6
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !22

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #9
  br label %11

11:                                               ; preds = %3, %9
  %12 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %1, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::RepeatingCallback"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::RepeatingCallback"* %4 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  call void @_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEE3AddENS_17RepeatingCallbackIS3_EE(%"class.base::CallbackListSubscription"* sret %0, %"class.base::internal::CallbackListBase"* %12, %"class.base::RepeatingCallback"* nonnull %4)
  %17 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #9
  %18 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEE3AddENS_17RepeatingCallbackIS3_EE(%"class.base::CallbackListSubscription"* noalias sret, %"class.base::internal::CallbackListBase"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #9
  %8 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9, !noalias !24
  %9 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %1, i64 0, i32 3, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %9) #9, !noalias !24
  %10 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %1, i64 0, i32 3, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !24
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %12, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %11) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9, !noalias !24
  %13 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = call i8* @_Znwm(i64 24) #10, !noalias !27
  %15 = getelementptr inbounds i8, i8* %14, i64 16
  %16 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::RepeatingCallback"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i8* %15 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %21, i64 0, i32 1
  %23 = bitcast %"struct.std::__1::__list_node_base"** %22 to i8**
  store i8* %14, i8** %23, align 8
  %24 = bitcast %"class.base::internal::CallbackListBase"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast i8* %14 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast %"class.base::internal::CallbackListBase"* %1 to i8**
  store i8* %14, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %14, i64 8
  %29 = bitcast i8* %28 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %13, %"struct.std::__1::__list_node_base"** %29, align 8
  %30 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  %33 = ptrtoint i8* %14 to i64
  %34 = call i8* @_Znwm(i64 72) #10, !noalias !30
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS5_EEPvEEEJNS_7WeakPtrIS7_EESD_EEES5_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS4_EEPvEEEJNS_7WeakPtrIS6_EESC_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS5_EEPvEEEJNS_7WeakPtrIS7_EESD_EEEEEbPKNS0_13BindStateBaseENSL_21CancellationQueryModeE) #9, !noalias !30
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::CallbackListBase"*, %"class.std::__1::__list_iterator"*)* @_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEE14CancelCallbackERKNSt3__115__list_iteratorINS_17RepeatingCallbackIS3_EEPvEE to i64), i64 0>, <2 x i64>* %37, align 8, !noalias !30
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = bitcast i8* %38 to %"class.base::internal::WeakReference"*
  %40 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %39, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %40) #9, !noalias !30
  %41 = getelementptr inbounds i8, i8* %34, i64 56
  %42 = bitcast i8* %41 to i64*
  %43 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8, !noalias !30
  store i64 %44, i64* %42, align 8, !noalias !30
  %45 = getelementptr inbounds i8, i8* %34, i64 64
  %46 = bitcast i8* %45 to i64*
  store i64 %33, i64* %46, align 8, !noalias !30
  %47 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %34, i8** %47, align 8, !alias.scope !30
  call void @_ZN4base24CallbackListSubscriptionC1ENS_12OnceCallbackIFvvEEE(%"class.base::CallbackListSubscription"* %0, %"class.base::OnceCallback"* nonnull %5) #9
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13safe_browsing23ClientSidePhishingModel9IsEnabledEv(%"class.safe_browsing::ClientSidePhishingModel"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 0
  %7 = tail call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* %6) #9
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %34

12:                                               ; preds = %8, %5
  %13 = load i32, i32* %2, align 8
  br label %14

14:                                               ; preds = %12, %1
  %15 = phi i32 [ %13, %12 ], [ %3, %1 ]
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %31

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %28

26:                                               ; preds = %17
  %27 = zext i8 %21 to i64
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i64 [ %25, %23 ], [ %27, %26 ]
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %28, %14
  %32 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 3
  %33 = tail call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* %32) #9
  br label %34

34:                                               ; preds = %8, %31, %28
  %35 = phi i1 [ true, %28 ], [ true, %8 ], [ %33, %31 ]
  ret i1 %35
}

declare zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13safe_browsing23ClientSidePhishingModel11GetModelStrEv(%"class.std::__1::basic_string"* noalias sret, %"class.safe_browsing::ClientSidePhishingModel"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %1, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #9
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #9
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(56) %"class.base::File"* @_ZNK13safe_browsing23ClientSidePhishingModel20GetVisualTfLiteModelEv(%"class.safe_browsing::ClientSidePhishingModel"* readnone) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 3
  ret %"class.base::File"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK13safe_browsing23ClientSidePhishingModel12GetModelTypeEv(%"class.safe_browsing::ClientSidePhishingModel"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13safe_browsing23ClientSidePhishingModel26GetModelSharedMemoryRegionEv(%"class.base::ReadOnlySharedMemoryRegion"* noalias sret, %"class.safe_browsing::ClientSidePhishingModel"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %1, i64 0, i32 5, i32 0
  tail call void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* sret %0, %"class.base::ReadOnlySharedMemoryRegion"* %3) #9
  ret void
}

declare void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* sret, %"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModel25PopulateFromDynamicUpdateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base4FileE(%"class.safe_browsing::ClientSidePhishingModel"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::File"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.flatbuffers::Verifier", align 8
  %5 = alloca %"struct.base::MappedReadOnlyRegion", align 8
  %6 = alloca %"class.safe_browsing::ClientSideModel", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %10) #9
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13, !prof !22

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %14) #9
  br label %15

15:                                               ; preds = %3, %13
  %16 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 4
  store i32 0, i32* %16, align 8
  %17 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #9
  %18 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %17, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN13safe_browsing12_GLOBAL__N_121kOverrideCsdModelFlagE, i64 0, i64 0)) #9
  br i1 %18, label %169, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %169, label %29

29:                                               ; preds = %19
  %30 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN13safe_browsing37kClientSideDetectionModelIsFlatBufferE) #9
  br i1 %30, label %31, label %126

31:                                               ; preds = %29
  %32 = bitcast %"class.flatbuffers::Verifier"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 48, i1 false)
  %33 = load i8, i8* %21, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %39 = zext i8 %33 to i64
  %40 = select i1 %34, i8* %36, i8* %38
  %41 = select i1 %34, i64 %37, i64 %39
  %42 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 0
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 1
  store i64 %41, i64* %43, align 8
  %44 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 2
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 0, i32 64, i32 0, i32 1000000>, <4 x i32>* %45, align 8
  %46 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 6
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 7
  store i8 1, i8* %47, align 8
  %48 = icmp ugt i64 %41, 4
  br i1 %48, label %49, label %123

49:                                               ; preds = %31
  %50 = bitcast i8* %40 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %123

53:                                               ; preds = %49
  %54 = zext i32 %51 to i64
  %55 = add i64 %41, -1
  %56 = icmp ult i64 %55, %54
  br i1 %56, label %123, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds i8, i8* %40, i64 %54
  %59 = bitcast i8* %58 to %"struct.safe_browsing::flat::ClientSideModel"*
  %60 = call zeroext i1 @_ZNK13safe_browsing4flat15ClientSideModel6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::ClientSideModel"* %59, %"class.flatbuffers::Verifier"* nonnull dereferenceable(48) %4) #9
  br i1 %60, label %61, label %123

61:                                               ; preds = %57
  %62 = bitcast %"struct.base::MappedReadOnlyRegion"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %62) #9
  %63 = load i8, i8* %21, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i64, i64* %24, align 8
  %66 = zext i8 %63 to i64
  %67 = select i1 %64, i64 %65, i64 %66
  call void @_ZN4base26ReadOnlySharedMemoryRegion6CreateEm(%"struct.base::MappedReadOnlyRegion"* nonnull sret %5, i64 %67) #9
  %68 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 0
  %69 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %5, i64 0, i32 0
  %70 = call dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"* %68, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %69) #9
  %71 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1
  %72 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %5, i64 0, i32 1
  %73 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %71, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48) %72) #9
  %74 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %5, i64 0, i32 1, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %74) #9
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %69) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %62) #9
  %75 = call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* %68) #9
  br i1 %75, label %76, label %113

76:                                               ; preds = %61
  %77 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %113, label %80

80:                                               ; preds = %76
  store i32 2, i32* %16, align 8
  %81 = load i8, i8* %21, align 1
  %82 = icmp slt i8 %81, 0
  %83 = load i8*, i8** %35, align 8
  %84 = select i1 %82, i8* %83, i8* %38
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = bitcast i8* %88 to %"struct.safe_browsing::flat::ClientSideModel"*
  %90 = bitcast i8* %88 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %91 to i64
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %89, i64 0, i32 0, i32 0, i64 %93
  %95 = bitcast i8* %94 to i16*
  %96 = load i16, i16* %95, align 2
  %97 = icmp ugt i16 %96, 14
  br i1 %97, label %98, label %108

98:                                               ; preds = %80
  %99 = getelementptr inbounds i8, i8* %94, i64 14
  %100 = bitcast i8* %99 to i16*
  %101 = load i16, i16* %100, align 2
  %102 = icmp eq i16 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %98
  %104 = zext i16 %101 to i64
  %105 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %89, i64 0, i32 0, i32 0, i64 %104
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %106, align 4
  br label %108

108:                                              ; preds = %80, %98, %103
  %109 = phi i32 [ %107, %103 ], [ 0, %98 ], [ 0, %80 ]
  %110 = load i64, i64* %24, align 8
  %111 = zext i8 %81 to i64
  %112 = select i1 %82, i64 %110, i64 %111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %78, i8* align 1 %84, i64 %112, i1 false)
  br label %113

113:                                              ; preds = %76, %61, %108
  %114 = phi i32 [ %109, %108 ], [ 0, %76 ], [ 0, %61 ]
  %115 = phi i8 [ 1, %108 ], [ 0, %76 ], [ 0, %61 ]
  %116 = call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* %68) #9
  br i1 %116, label %117, label %121

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %119 = load i8*, i8** %118, align 8
  %120 = icmp ne i8* %119, null
  br label %121

121:                                              ; preds = %113, %117
  %122 = phi i1 [ false, %113 ], [ %120, %117 ]
  call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i1 zeroext %122) #9
  br label %123

123:                                              ; preds = %53, %49, %31, %121, %57
  %124 = phi i32 [ %114, %121 ], [ 0, %57 ], [ 0, %31 ], [ 0, %49 ], [ 0, %53 ]
  %125 = phi i8 [ %115, %121 ], [ 0, %57 ], [ 0, %31 ], [ 0, %49 ], [ 0, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #9
  br label %163

126:                                              ; preds = %29
  %127 = bitcast %"class.safe_browsing::ClientSideModel"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %127) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %127, i8* align 8 bitcast (%"class.safe_browsing::ClientSideModel"* @__const._ZN13safe_browsing23ClientSidePhishingModel25PopulateFromDynamicUpdateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base4FileE.model_proto to i8*), i64 168, i1 false)
  call void @_ZN13safe_browsing15ClientSideModelC2EPN6google8protobuf5ArenaE(%"class.safe_browsing::ClientSideModel"* nonnull %6, %"class.google::protobuf::Arena"* null) #9
  %128 = getelementptr inbounds %"class.safe_browsing::ClientSideModel", %"class.safe_browsing::ClientSideModel"* %6, i64 0, i32 0
  %129 = call zeroext i1 @_ZN6google8protobuf11MessageLite15ParseFromStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"* nonnull %128, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  %130 = zext i1 %129 to i8
  br i1 %129, label %131, label %161

131:                                              ; preds = %126
  store i32 1, i32* %16, align 8
  %132 = getelementptr inbounds %"class.safe_browsing::ClientSideModel", %"class.safe_browsing::ClientSideModel"* %6, i64 0, i32 11
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 2
  %135 = icmp eq %"class.std::__1::basic_string"* %134, %1
  br i1 %135, label %161, label %136

136:                                              ; preds = %131
  %137 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  %141 = load i8, i8* %21, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %140, label %152, label %143

143:                                              ; preds = %136
  br i1 %142, label %147, label %144

144:                                              ; preds = %143
  %145 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  %146 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %146, i64 24, i1 false) #9
  br label %161

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = load i64, i64* %24, align 8
  %151 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %134, i8* %149, i64 %150) #9
  br label %161

152:                                              ; preds = %136
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = load i64, i64* %24, align 8
  %156 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %157 = zext i8 %141 to i64
  %158 = select i1 %142, i8* %154, i8* %156
  %159 = select i1 %142, i64 %155, i64 %157
  %160 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %134, i8* %158, i64 %159) #9
  br label %161

161:                                              ; preds = %152, %147, %144, %131, %126
  %162 = phi i32 [ 0, %126 ], [ %133, %131 ], [ %133, %144 ], [ %133, %147 ], [ %133, %152 ]
  call void @_ZN13safe_browsing15ClientSideModelD1Ev(%"class.safe_browsing::ClientSideModel"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %127) #9
  br label %163

163:                                              ; preds = %161, %123
  %164 = phi i32 [ %124, %123 ], [ %162, %161 ]
  %165 = phi i8 [ %125, %123 ], [ %130, %161 ]
  %166 = and i8 %165, 1
  %167 = icmp ne i8 %166, 0
  call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i1 zeroext %167) #9
  br i1 %167, label %168, label %169

168:                                              ; preds = %163
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 %164, i32 101) #9
  br label %169

169:                                              ; preds = %163, %168, %19, %15
  %170 = phi i8 [ 0, %15 ], [ 0, %19 ], [ %165, %168 ], [ %165, %163 ]
  %171 = call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* %2) #9
  br i1 %171, label %172, label %175

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 3
  %174 = call dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"* %173, %"class.base::File"* dereferenceable(56) %2) #9
  br label %178

175:                                              ; preds = %169
  %176 = and i8 %170, 1
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %190, label %178

178:                                              ; preds = %175, %172
  %179 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %179) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i32 172) #9
  %180 = ptrtoint %"class.safe_browsing::ClientSidePhishingModel"* %0 to i64
  %181 = call i8* @_Znwm(i64 56) #10, !noalias !35
  %182 = bitcast i8* %181 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %182, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !35
  %183 = getelementptr inbounds i8, i8* %181, i64 32
  %184 = bitcast i8* %183 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.safe_browsing::ClientSidePhishingModel"*)* @_ZN13safe_browsing23ClientSidePhishingModel19NotifyCallbacksOnUIEv to i64), i64 0>, <2 x i64>* %184, align 8, !noalias !35
  %185 = getelementptr inbounds i8, i8* %181, i64 48
  %186 = bitcast i8* %185 to i64*
  store i64 %180, i64* %186, align 8, !noalias !35
  %187 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %181, i8** %187, align 8, !alias.scope !35
  %188 = call zeroext i1 @_ZN4base8PostTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp, %"class.base::OnceCallback"* nonnull %8) #9
  %189 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %189) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %179) #9
  br label %190

190:                                              ; preds = %175, %178
  %191 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #9
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN4base26ReadOnlySharedMemoryRegion6CreateEm(%"struct.base::MappedReadOnlyRegion"* sret, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base19UmaHistogramBooleanEPKcb(i8*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN6google8protobuf11MessageLite15ParseFromStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13safe_browsing15ClientSideModelD1Ev(%"class.safe_browsing::ClientSideModel"*) unnamed_addr #3

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #1

declare dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8PostTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEE(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModel19NotifyCallbacksOnUIEv(%"class.safe_browsing::ClientSidePhishingModel"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEE6NotifyIJEEEvDpOT_(%"class.base::internal::CallbackListBase"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEE6NotifyIJEEEvDpOT_(%"class.base::internal::CallbackListBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = icmp eq %"struct.std::__1::__list_node_base"* %3, %4
  br i1 %5, label %89, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.std::__1::__list_node_base"* %3 to i64
  br label %8

8:                                                ; preds = %15, %6
  %9 = phi %"struct.std::__1::__list_node_base"* [ %19, %15 ], [ %3, %6 ]
  %10 = phi i64 [ %18, %15 ], [ %7, %6 ]
  %11 = inttoptr i64 %10 to %"struct.std::__1::__list_node"*
  %12 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = icmp eq %"class.base::internal::BindStateBase"* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %18 to %"struct.std::__1::__list_node_base"*
  %20 = icmp eq %"struct.std::__1::__list_node_base"* %4, %19
  br i1 %20, label %89, label %8

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 1
  %23 = load i8, i8* %22, align 1, !range !23
  store i8 1, i8* %22, align 1
  %24 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 0
  br label %25

25:                                               ; preds = %32, %21
  %26 = phi %"struct.std::__1::__list_node_base"* [ %36, %32 ], [ %3, %21 ]
  %27 = phi i64 [ %35, %32 ], [ %7, %21 ]
  %28 = inttoptr i64 %27 to %"struct.std::__1::__list_node"*
  %29 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %29, align 8
  %31 = icmp eq %"class.base::internal::BindStateBase"* %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %34 = bitcast %"struct.std::__1::__list_node_base"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = inttoptr i64 %35 to %"struct.std::__1::__list_node_base"*
  %37 = icmp eq %"struct.std::__1::__list_node_base"* %4, %36
  br i1 %37, label %40, label %25

38:                                               ; preds = %25
  %39 = icmp eq %"struct.std::__1::__list_node_base"* %26, %4
  br i1 %39, label %40, label %48

40:                                               ; preds = %32, %48, %74, %68, %38
  %41 = icmp eq i8* %22, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %40
  store i8 %23, i8* %22, align 1
  br label %45

43:                                               ; preds = %40
  %44 = load i8, i8* null, align 536870912
  br label %45

45:                                               ; preds = %43, %42
  %46 = phi i8 [ %44, %43 ], [ %23, %42 ]
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %76, label %89

48:                                               ; preds = %38, %74
  %49 = phi %"struct.std::__1::__list_node_base"* [ %62, %74 ], [ %26, %38 ]
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 0, i32 1
  %51 = bitcast %"struct.std::__1::__list_node_base"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %49, i64 1
  %54 = bitcast %"struct.std::__1::__list_node_base"* %53 to %"class.base::internal::BindStateBase"**
  %55 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %54, align 8
  %56 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %55, i64 0, i32 1
  %57 = bitcast void ()** %56 to void (%"class.base::internal::BindStateBase"*)**
  %58 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %57, align 8
  tail call void %58(%"class.base::internal::BindStateBase"* %55) #9
  %59 = inttoptr i64 %52 to %"struct.std::__1::__list_node_base"*
  %60 = icmp eq %"struct.std::__1::__list_node_base"* %4, %59
  br i1 %60, label %40, label %61

61:                                               ; preds = %48, %68
  %62 = phi %"struct.std::__1::__list_node_base"* [ %72, %68 ], [ %59, %48 ]
  %63 = phi i64 [ %71, %68 ], [ %52, %48 ]
  %64 = inttoptr i64 %63 to %"struct.std::__1::__list_node"*
  %65 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %64, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %65, align 8
  %67 = icmp eq %"class.base::internal::BindStateBase"* %66, null
  br i1 %67, label %68, label %74

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 0, i32 1
  %70 = bitcast %"struct.std::__1::__list_node_base"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = inttoptr i64 %71 to %"struct.std::__1::__list_node_base"*
  %73 = icmp eq %"struct.std::__1::__list_node_base"* %4, %72
  br i1 %73, label %40, label %61

74:                                               ; preds = %61
  %75 = icmp eq %"struct.std::__1::__list_node_base"* %62, %4
  br i1 %75, label %40, label %48

76:                                               ; preds = %45
  %77 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  tail call void @_ZNSt3__14listIN4base17RepeatingCallbackIFvvEEENS_9allocatorIS4_EEE9remove_ifIZNS1_8internal16CallbackListBaseINS1_21RepeatingCallbackListIS3_EEE6NotifyIJEEEvDpOT_EUlTyRKT_E_EEvSI_(%"class.std::__1::list"* %24) #9
  %79 = load i64, i64* %77, align 8
  %80 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %80, align 8
  %82 = icmp ne %"class.base::internal::BindStateBase"* %81, null
  %83 = icmp ne i64 %78, %79
  %84 = and i1 %83, %82
  br i1 %84, label %85, label %89

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %81, i64 0, i32 1
  %87 = bitcast void ()** %86 to void (%"class.base::internal::BindStateBase"*)**
  %88 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %87, align 8
  tail call void %88(%"class.base::internal::BindStateBase"* nonnull %81) #9
  br label %89

89:                                               ; preds = %15, %1, %76, %85, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModel21SetModelStrForTestingERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.safe_browsing::ClientSidePhishingModel"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !22

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #9
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 2
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %1
  br i1 %11, label %41, label %12

12:                                               ; preds = %9
  %13 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %16, label %31, label %21

21:                                               ; preds = %12
  br i1 %20, label %25, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #9
  br label %41

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %10, i8* %27, i64 %29) #9
  br label %41

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %37 = zext i8 %19 to i64
  %38 = select i1 %20, i8* %33, i8* %36
  %39 = select i1 %20, i64 %35, i64 %37
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %10, i8* %38, i64 %39) #9
  br label %41

41:                                               ; preds = %9, %22, %25, %31
  %42 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModel30SetVisualTfLiteModelForTestingEN4base4FileE(%"class.safe_browsing::ClientSidePhishingModel"*, %"class.base::File"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !22

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #9
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 3
  %11 = tail call dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"* %10, %"class.base::File"* dereferenceable(56) %1) #9
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModel22SetModelTypeForTestingENS_12CSDModelTypeE(%"class.safe_browsing::ClientSidePhishingModel"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !22

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #9
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 4
  store i32 %1, i32* %10, align 8
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModel27ClearMappedRegionForTestingEv(%"class.safe_browsing::ClientSidePhishingModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %3 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %4 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !22

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #9
  br label %10

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.base::WritableSharedMemoryMapping"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #9
  call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* nonnull %2) #9
  %12 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1
  %13 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %12, %"class.base::WritableSharedMemoryMapping"* nonnull dereferenceable(48) %2) #9
  %14 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %2, i64 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #9
  %15 = bitcast %"class.base::ReadOnlySharedMemoryRegion"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #9
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %3) #9
  %16 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 0
  %17 = call dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"* %16, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %3) #9
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #9
  %18 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #9
  ret void
}

declare void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #3

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #1

declare dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN13safe_browsing23ClientSidePhishingModel36GetFlatBufferMemoryAddressForTestingEv(%"class.safe_browsing::ClientSidePhishingModel"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

declare void @_ZNK4base11CommandLine18GetSwitchValuePathENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN13safe_browsing12_GLOBAL__N_118ReadFileIntoStringEN4base8FilePathE(%"class.std::__1::basic_string"* noalias sret, %"class.base::FilePath"*) #0 {
  %3 = alloca %"class.base::File", align 8
  %4 = alloca %"class.std::__1::vector.57", align 8
  %5 = bitcast %"class.base::FilePath"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %2
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #9
  br label %196

19:                                               ; preds = %14
  %20 = bitcast %"class.base::File"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %3, %"class.base::FilePath"* dereferenceable(24) %1, i32 33) #9
  %21 = call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* nonnull %3) #9
  br i1 %21, label %24, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #9
  br label %195

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::vector.57"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %4, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %4, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.57", %"class.std::__1::vector.57"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"class.std::__1::vector.57"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = call i64 @_ZN4base4File9GetLengthEv(%"class.base::File"* nonnull %3) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #9
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = bitcast i8** %27 to i64*
  br label %47

34:                                               ; preds = %24
  %35 = icmp slt i64 %30, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.57"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %37) #11
  unreachable

38:                                               ; preds = %34
  %39 = call i8* @_Znwm(i64 %30) #10
  store i8* %39, i8** %26, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %30
  store i8* %40, i8** %28, align 8
  %41 = bitcast i8** %27 to i64*
  %42 = ptrtoint i8* %39 to i64
  %43 = sub i64 %30, %42
  %44 = getelementptr i8, i8* %39, i64 %43
  %45 = ptrtoint i8* %44 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %39, i8 0, i64 %45, i1 false) #9
  %46 = ptrtoint i8* %40 to i64
  store i64 %46, i64* %41, align 8
  br label %47

47:                                               ; preds = %32, %38
  %48 = phi i64* [ %33, %32 ], [ %41, %38 ]
  %49 = phi i64 [ 0, %32 ], [ %46, %38 ]
  %50 = phi i8* [ null, %32 ], [ %39, %38 ]
  %51 = ptrtoint i8* %50 to i64
  %52 = sub i64 %49, %51
  %53 = trunc i64 %52 to i32
  %54 = call i32 @_ZN4base4File16ReadAtCurrentPosEPci(%"class.base::File"* nonnull %3, i8* %50, i32 %53) #9
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %56, label %58

56:                                               ; preds = %47
  %57 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #9
  br label %189

58:                                               ; preds = %47
  %59 = load i8*, i8** %26, align 8
  %60 = ptrtoint i8* %59 to i64
  %61 = load i8*, i8** %27, align 8
  %62 = ptrtoint i8* %61 to i64
  %63 = sub i64 %62, %60
  %64 = icmp ugt i64 %63, -17
  br i1 %64, label %65, label %67

65:                                               ; preds = %58
  %66 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %66) #11
  unreachable

67:                                               ; preds = %58
  %68 = icmp ult i64 %63, 23
  br i1 %68, label %69, label %74

69:                                               ; preds = %67
  %70 = trunc i64 %63 to i8
  %71 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  store i8 %70, i8* %72, align 1
  %73 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %82

74:                                               ; preds = %67
  %75 = add nuw i64 %63, 16
  %76 = and i64 %75, -16
  %77 = call i8* @_Znwm(i64 %76) #10
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %77, i8** %78, align 8
  %79 = or i64 %76, -9223372036854775808
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %63, i64* %81, align 8
  br label %82

82:                                               ; preds = %74, %69
  %83 = phi i8* [ %73, %69 ], [ %77, %74 ]
  %84 = icmp eq i8* %59, %61
  br i1 %84, label %187, label %85

85:                                               ; preds = %82
  %86 = ptrtoint i8* %61 to i64
  %87 = sub i64 %86, %60
  %88 = icmp ult i64 %87, 32
  br i1 %88, label %177, label %89

89:                                               ; preds = %85
  %90 = ptrtoint i8* %61 to i64
  %91 = sub i64 %90, %60
  %92 = getelementptr i8, i8* %83, i64 %91
  %93 = icmp ult i8* %83, %61
  %94 = icmp ult i8* %59, %92
  %95 = and i1 %93, %94
  br i1 %95, label %177, label %96

96:                                               ; preds = %89
  %97 = and i64 %87, -32
  %98 = getelementptr i8, i8* %83, i64 %97
  %99 = getelementptr i8, i8* %59, i64 %97
  %100 = add i64 %97, -32
  %101 = lshr exact i64 %100, 5
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 3
  %104 = icmp ult i64 %100, 96
  br i1 %104, label %156, label %105

105:                                              ; preds = %96
  %106 = sub nsw i64 %102, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %153, %107 ]
  %109 = phi i64 [ %106, %105 ], [ %154, %107 ]
  %110 = getelementptr i8, i8* %83, i64 %108
  %111 = getelementptr i8, i8* %59, i64 %108
  %112 = bitcast i8* %111 to <16 x i8>*
  %113 = load <16 x i8>, <16 x i8>* %112, align 1, !alias.scope !40
  %114 = getelementptr i8, i8* %111, i64 16
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1, !alias.scope !40
  %117 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %113, <16 x i8>* %117, align 1, !alias.scope !43, !noalias !40
  %118 = getelementptr i8, i8* %110, i64 16
  %119 = bitcast i8* %118 to <16 x i8>*
  store <16 x i8> %116, <16 x i8>* %119, align 1, !alias.scope !43, !noalias !40
  %120 = or i64 %108, 32
  %121 = getelementptr i8, i8* %83, i64 %120
  %122 = getelementptr i8, i8* %59, i64 %120
  %123 = bitcast i8* %122 to <16 x i8>*
  %124 = load <16 x i8>, <16 x i8>* %123, align 1, !alias.scope !40
  %125 = getelementptr i8, i8* %122, i64 16
  %126 = bitcast i8* %125 to <16 x i8>*
  %127 = load <16 x i8>, <16 x i8>* %126, align 1, !alias.scope !40
  %128 = bitcast i8* %121 to <16 x i8>*
  store <16 x i8> %124, <16 x i8>* %128, align 1, !alias.scope !43, !noalias !40
  %129 = getelementptr i8, i8* %121, i64 16
  %130 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %127, <16 x i8>* %130, align 1, !alias.scope !43, !noalias !40
  %131 = or i64 %108, 64
  %132 = getelementptr i8, i8* %83, i64 %131
  %133 = getelementptr i8, i8* %59, i64 %131
  %134 = bitcast i8* %133 to <16 x i8>*
  %135 = load <16 x i8>, <16 x i8>* %134, align 1, !alias.scope !40
  %136 = getelementptr i8, i8* %133, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  %138 = load <16 x i8>, <16 x i8>* %137, align 1, !alias.scope !40
  %139 = bitcast i8* %132 to <16 x i8>*
  store <16 x i8> %135, <16 x i8>* %139, align 1, !alias.scope !43, !noalias !40
  %140 = getelementptr i8, i8* %132, i64 16
  %141 = bitcast i8* %140 to <16 x i8>*
  store <16 x i8> %138, <16 x i8>* %141, align 1, !alias.scope !43, !noalias !40
  %142 = or i64 %108, 96
  %143 = getelementptr i8, i8* %83, i64 %142
  %144 = getelementptr i8, i8* %59, i64 %142
  %145 = bitcast i8* %144 to <16 x i8>*
  %146 = load <16 x i8>, <16 x i8>* %145, align 1, !alias.scope !40
  %147 = getelementptr i8, i8* %144, i64 16
  %148 = bitcast i8* %147 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1, !alias.scope !40
  %150 = bitcast i8* %143 to <16 x i8>*
  store <16 x i8> %146, <16 x i8>* %150, align 1, !alias.scope !43, !noalias !40
  %151 = getelementptr i8, i8* %143, i64 16
  %152 = bitcast i8* %151 to <16 x i8>*
  store <16 x i8> %149, <16 x i8>* %152, align 1, !alias.scope !43, !noalias !40
  %153 = add i64 %108, 128
  %154 = add i64 %109, -4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %107, !llvm.loop !45

156:                                              ; preds = %107, %96
  %157 = phi i64 [ 0, %96 ], [ %153, %107 ]
  %158 = icmp eq i64 %103, 0
  br i1 %158, label %175, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %172, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %173, %159 ], [ %103, %156 ]
  %162 = getelementptr i8, i8* %83, i64 %160
  %163 = getelementptr i8, i8* %59, i64 %160
  %164 = bitcast i8* %163 to <16 x i8>*
  %165 = load <16 x i8>, <16 x i8>* %164, align 1, !alias.scope !40
  %166 = getelementptr i8, i8* %163, i64 16
  %167 = bitcast i8* %166 to <16 x i8>*
  %168 = load <16 x i8>, <16 x i8>* %167, align 1, !alias.scope !40
  %169 = bitcast i8* %162 to <16 x i8>*
  store <16 x i8> %165, <16 x i8>* %169, align 1, !alias.scope !43, !noalias !40
  %170 = getelementptr i8, i8* %162, i64 16
  %171 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %168, <16 x i8>* %171, align 1, !alias.scope !43, !noalias !40
  %172 = add i64 %160, 32
  %173 = add i64 %161, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %159, !llvm.loop !47

175:                                              ; preds = %159, %156
  %176 = icmp eq i64 %87, %97
  br i1 %176, label %187, label %177

177:                                              ; preds = %175, %89, %85
  %178 = phi i8* [ %83, %89 ], [ %83, %85 ], [ %98, %175 ]
  %179 = phi i8* [ %59, %89 ], [ %59, %85 ], [ %99, %175 ]
  br label %180

180:                                              ; preds = %177, %180
  %181 = phi i8* [ %185, %180 ], [ %178, %177 ]
  %182 = phi i8* [ %184, %180 ], [ %179, %177 ]
  %183 = load i8, i8* %182, align 1
  store i8 %183, i8* %181, align 1
  %184 = getelementptr inbounds i8, i8* %182, i64 1
  %185 = getelementptr inbounds i8, i8* %181, i64 1
  %186 = icmp eq i8* %184, %61
  br i1 %186, label %187, label %180, !llvm.loop !49

187:                                              ; preds = %180, %175, %82
  %188 = phi i8* [ %83, %82 ], [ %98, %175 ], [ %185, %180 ]
  store i8 0, i8* %188, align 1
  br label %189

189:                                              ; preds = %187, %56
  %190 = load i8*, i8** %26, align 8
  %191 = icmp eq i8* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = ptrtoint i8* %190 to i64
  store i64 %193, i64* %48, align 8
  call void @_ZdlPv(i8* nonnull %190) #10
  br label %194

194:                                              ; preds = %189, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #9
  br label %195

195:                                              ; preds = %194, %22
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20) #9
  br label %196

196:                                              ; preds = %195, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13safe_browsing23ClientSidePhishingModel23OnGetOverridenModelDataENS_12CSDModelTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.safe_browsing::ClientSidePhishingModel"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.flatbuffers::Verifier", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"struct.base::MappedReadOnlyRegion", align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.base::OnceCallback", align 8
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %3
  %24 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i64 77) #9
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %188

26:                                               ; preds = %23
  %27 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %27) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i32 232, i32 -2) #9
  %28 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %29 = bitcast %"class.std::__1::basic_ostringstream"* %28 to %"class.std::__1::basic_ostream"*
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0), i64 29) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %27) #9
  br label %188

31:                                               ; preds = %3
  switch i32 %1, label %168 [
    i32 1, label %32
    i32 2, label %90
    i32 0, label %160
  ]

32:                                               ; preds = %31
  %33 = tail call i8* @_Znwm(i64 168) #10
  %34 = bitcast i8* %33 to %"class.safe_browsing::ClientSideModel"*
  tail call void @_ZN13safe_browsing15ClientSideModelC2EPN6google8protobuf5ArenaE(%"class.safe_browsing::ClientSideModel"* nonnull %34, %"class.google::protobuf::Arena"* null) #9
  %35 = bitcast i8* %33 to %"class.google::protobuf::MessageLite"*
  %36 = load i8, i8* %15, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = load i64, i64* %18, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %42 = zext i8 %36 to i64
  %43 = select i1 %37, i8* %39, i8* %41
  %44 = select i1 %37, i64 %40, i64 %42
  %45 = trunc i64 %44 to i32
  %46 = tail call zeroext i1 @_ZN6google8protobuf11MessageLite14ParseFromArrayEPKvi(%"class.google::protobuf::MessageLite"* nonnull %35, i8* %43, i32 %45) #9
  br i1 %46, label %60, label %47

47:                                               ; preds = %32
  %48 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i64 77) #9
  %49 = icmp sgt i32 %48, 1
  br i1 %49, label %50, label %55

50:                                               ; preds = %47
  %51 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %51) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i32 241, i32 -2) #9
  %52 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %53 = bitcast %"class.std::__1::basic_ostringstream"* %52 to %"class.std::__1::basic_ostream"*
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.9, i64 0, i64 0), i64 57) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %51) #9
  br label %55

55:                                               ; preds = %47, %50
  %56 = bitcast i8* %33 to void (%"class.safe_browsing::ClientSideModel"*)***
  %57 = load void (%"class.safe_browsing::ClientSideModel"*)**, void (%"class.safe_browsing::ClientSideModel"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.safe_browsing::ClientSideModel"*)*, void (%"class.safe_browsing::ClientSideModel"*)** %57, i64 1
  %59 = load void (%"class.safe_browsing::ClientSideModel"*)*, void (%"class.safe_browsing::ClientSideModel"*)** %58, align 8
  call void %59(%"class.safe_browsing::ClientSideModel"* nonnull %34) #9
  br label %188

60:                                               ; preds = %32
  %61 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 4
  store i32 1, i32* %61, align 8
  %62 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 2
  %63 = icmp eq %"class.std::__1::basic_string"* %62, %2
  br i1 %63, label %85, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i8, i8* %15, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %68, label %78, label %71

71:                                               ; preds = %64
  br i1 %70, label %74, label %72

72:                                               ; preds = %71
  %73 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %41, i64 24, i1 false) #9
  br label %85

74:                                               ; preds = %71
  %75 = load i8*, i8** %38, align 8
  %76 = load i64, i64* %18, align 8
  %77 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %62, i8* %75, i64 %76) #9
  br label %85

78:                                               ; preds = %64
  %79 = load i8*, i8** %38, align 8
  %80 = load i64, i64* %18, align 8
  %81 = zext i8 %69 to i64
  %82 = select i1 %70, i8* %79, i8* %41
  %83 = select i1 %70, i64 %80, i64 %81
  %84 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %62, i8* %82, i64 %83) #9
  br label %85

85:                                               ; preds = %60, %72, %74, %78
  %86 = bitcast i8* %33 to void (%"class.safe_browsing::ClientSideModel"*)***
  %87 = load void (%"class.safe_browsing::ClientSideModel"*)**, void (%"class.safe_browsing::ClientSideModel"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.safe_browsing::ClientSideModel"*)*, void (%"class.safe_browsing::ClientSideModel"*)** %87, i64 1
  %89 = load void (%"class.safe_browsing::ClientSideModel"*)*, void (%"class.safe_browsing::ClientSideModel"*)** %88, align 8
  tail call void %89(%"class.safe_browsing::ClientSideModel"* nonnull %34) #9
  br label %168

90:                                               ; preds = %31
  %91 = bitcast %"class.flatbuffers::Verifier"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %91) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 48, i1 false)
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %95 = select i1 %17, i8* %93, i8* %94
  %96 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %6, i64 0, i32 0
  store i8* %95, i8** %96, align 8
  %97 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %6, i64 0, i32 1
  store i64 %21, i64* %97, align 8
  %98 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %6, i64 0, i32 2
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> <i32 0, i32 64, i32 0, i32 1000000>, <4 x i32>* %99, align 8
  %100 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %6, i64 0, i32 6
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %6, i64 0, i32 7
  store i8 1, i8* %101, align 8
  %102 = icmp ugt i64 %21, 4
  br i1 %102, label %103, label %115

103:                                              ; preds = %90
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %115

107:                                              ; preds = %103
  %108 = zext i32 %105 to i64
  %109 = add i64 %21, -1
  %110 = icmp ult i64 %109, %108
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds i8, i8* %95, i64 %108
  %113 = bitcast i8* %112 to %"struct.safe_browsing::flat::ClientSideModel"*
  %114 = call zeroext i1 @_ZNK13safe_browsing4flat15ClientSideModel6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::ClientSideModel"* %113, %"class.flatbuffers::Verifier"* nonnull dereferenceable(48) %6) #9
  br i1 %114, label %123, label %115

115:                                              ; preds = %107, %103, %90, %111
  %116 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i64 77) #9
  %117 = icmp sgt i32 %116, 1
  br i1 %117, label %118, label %159

118:                                              ; preds = %115
  %119 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %119) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i32 253, i32 -2) #9
  %120 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::basic_ostringstream"* %120 to %"class.std::__1::basic_ostream"*
  %122 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %121, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.10, i64 0, i64 0), i64 62) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %119) #9
  br label %159

123:                                              ; preds = %111
  %124 = bitcast %"struct.base::MappedReadOnlyRegion"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %124) #9
  %125 = load i8, i8* %15, align 1
  %126 = icmp slt i8 %125, 0
  %127 = load i64, i64* %18, align 8
  %128 = zext i8 %125 to i64
  %129 = select i1 %126, i64 %127, i64 %128
  call void @_ZN4base26ReadOnlySharedMemoryRegion6CreateEm(%"struct.base::MappedReadOnlyRegion"* nonnull sret %8, i64 %129) #9
  %130 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 0
  %131 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %8, i64 0, i32 0
  %132 = call dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"* %130, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %131) #9
  %133 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1
  %134 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %8, i64 0, i32 1
  %135 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %133, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48) %134) #9
  %136 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %8, i64 0, i32 1, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %136) #9
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %131) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %124) #9
  %137 = call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* %130) #9
  br i1 %137, label %138, label %142

138:                                              ; preds = %123
  %139 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 5, i32 1, i32 0, i32 1
  %140 = load i8*, i8** %139, align 8
  %141 = icmp eq i8* %140, null
  br i1 %141, label %142, label %150

142:                                              ; preds = %138, %123
  %143 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i64 77) #9
  %144 = icmp sgt i32 %143, 1
  br i1 %144, label %145, label %159

145:                                              ; preds = %142
  %146 = bitcast %"class.logging::LogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %146) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i32 260, i32 -2) #9
  %147 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %148 = bitcast %"class.std::__1::basic_ostringstream"* %147 to %"class.std::__1::basic_ostream"*
  %149 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %148, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11, i64 0, i64 0), i64 52) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %146) #9
  br label %159

150:                                              ; preds = %138
  %151 = load i8, i8* %15, align 1
  %152 = icmp slt i8 %151, 0
  %153 = load i8*, i8** %92, align 8
  %154 = load i64, i64* %18, align 8
  %155 = zext i8 %151 to i64
  %156 = select i1 %152, i8* %153, i8* %94
  %157 = select i1 %152, i64 %154, i64 %155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %140, i8* align 1 %156, i64 %157, i1 false)
  %158 = getelementptr inbounds %"class.safe_browsing::ClientSidePhishingModel", %"class.safe_browsing::ClientSidePhishingModel"* %0, i64 0, i32 4
  store i32 2, i32* %158, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %91) #9
  br label %168

159:                                              ; preds = %145, %142, %118, %115
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %91) #9
  br label %188

160:                                              ; preds = %31
  %161 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i64 77) #9
  %162 = icmp sgt i32 %161, 1
  br i1 %162, label %163, label %188

163:                                              ; preds = %160
  %164 = bitcast %"class.logging::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %164) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i32 269, i32 -2) #9
  %165 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %166 = bitcast %"class.std::__1::basic_ostringstream"* %165 to %"class.std::__1::basic_ostream"*
  %167 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %166, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i64 54) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %164) #9
  br label %188

168:                                              ; preds = %150, %85, %31
  %169 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i64 77) #9
  %170 = icmp sgt i32 %169, 1
  br i1 %170, label %171, label %176

171:                                              ; preds = %168
  %172 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %172) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i32 273, i32 -2) #9
  %173 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %174 = bitcast %"class.std::__1::basic_ostringstream"* %173 to %"class.std::__1::basic_ostream"*
  %175 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %174, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i64 28) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %172) #9
  br label %176

176:                                              ; preds = %168, %171
  %177 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %177) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5, i64 0, i64 0), i32 276) #9
  %178 = ptrtoint %"class.safe_browsing::ClientSidePhishingModel"* %0 to i64
  %179 = call i8* @_Znwm(i64 56) #10, !noalias !50
  %180 = bitcast i8* %179 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %180, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !50
  %181 = getelementptr inbounds i8, i8* %179, i64 32
  %182 = bitcast i8* %181 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.safe_browsing::ClientSidePhishingModel"*)* @_ZN13safe_browsing23ClientSidePhishingModel19NotifyCallbacksOnUIEv to i64), i64 0>, <2 x i64>* %182, align 8, !noalias !50
  %183 = getelementptr inbounds i8, i8* %179, i64 48
  %184 = bitcast i8* %183 to i64*
  store i64 %178, i64* %184, align 8, !noalias !50
  %185 = bitcast %"class.base::OnceCallback"* %13 to i8**
  store i8* %179, i8** %185, align 8, !alias.scope !50
  %186 = call zeroext i1 @_ZN4base8PostTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %12, %"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp.15, %"class.base::OnceCallback"* nonnull %13) #9
  %187 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %187) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %177) #9
  br label %188

188:                                              ; preds = %163, %160, %26, %23, %159, %55, %176
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare zeroext i1 @_ZN6google8protobuf11MessageLite14ParseFromArrayEPKvi(%"class.google::protobuf::MessageLite"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat15ClientSideModel6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::ClientSideModel"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::ClientSideModel"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %763

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %763

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::ClientSideModel"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %763, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %763, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %763

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %763, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %763

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %763

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %170

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !23
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %763, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %763, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %763

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %763, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %170, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !23
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %763, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %763, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %763

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %763

139:                                              ; preds = %131, %108
  %140 = bitcast i8* %106 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %106, i64 %142
  %144 = icmp eq i8* %143, null
  br i1 %144, label %170, label %145

145:                                              ; preds = %139
  %146 = bitcast i8* %143 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %170, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds i8, i8* %143, i64 4
  %151 = bitcast i8* %150 to i32*
  br label %156

152:                                              ; preds = %156
  %153 = load i32, i32* %146, align 4
  %154 = zext i32 %153 to i64
  %155 = icmp ult i64 %165, %154
  br i1 %155, label %156, label %166

156:                                              ; preds = %152, %149
  %157 = phi i64 [ 0, %149 ], [ %165, %152 ]
  %158 = getelementptr inbounds i32, i32* %151, i64 %157
  %159 = bitcast i32* %158 to i8*
  %160 = load i32, i32* %158, align 4
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %159, i64 %161
  %163 = bitcast i8* %162 to %"struct.safe_browsing::flat::Hash"*
  %164 = tail call zeroext i1 @_ZNK13safe_browsing4flat4Hash6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::Hash"* %163, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  %165 = add nuw nsw i64 %157, 1
  br i1 %164, label %152, label %763

166:                                              ; preds = %152
  %167 = load i32, i32* %22, align 4
  %168 = sext i32 %167 to i64
  %169 = sub nsw i64 0, %168
  br label %170

170:                                              ; preds = %101, %65, %166, %139, %145
  %171 = phi i64 [ %169, %166 ], [ %68, %139 ], [ %68, %145 ], [ %68, %65 ], [ %68, %101 ]
  %172 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %171
  %173 = bitcast i8* %172 to i16*
  %174 = load i16, i16* %173, align 2
  %175 = icmp ugt i16 %174, 6
  br i1 %175, label %176, label %281

176:                                              ; preds = %170
  %177 = getelementptr inbounds i8, i8* %172, i64 6
  %178 = bitcast i8* %177 to i16*
  %179 = load i16, i16* %178, align 2
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %209, label %181

181:                                              ; preds = %176
  %182 = load i64, i64* %3, align 8
  %183 = sub i64 %5, %182
  %184 = zext i16 %179 to i64
  %185 = add i64 %183, %184
  %186 = and i64 %185, 3
  %187 = icmp eq i64 %186, 0
  %188 = inttoptr i64 %182 to i8*
  br i1 %187, label %193, label %189

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %191 = load i8, i8* %190, align 8, !range !23
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %763

193:                                              ; preds = %189, %181
  %194 = load i64, i64* %15, align 8
  %195 = icmp ugt i64 %194, 4
  %196 = add i64 %194, -4
  %197 = icmp uge i64 %196, %185
  %198 = and i1 %195, %197
  br i1 %198, label %199, label %763

199:                                              ; preds = %193
  %200 = getelementptr inbounds i8, i8* %188, i64 %185
  %201 = bitcast i8* %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = icmp sgt i32 %202, 0
  br i1 %203, label %204, label %763

204:                                              ; preds = %199
  %205 = zext i32 %202 to i64
  %206 = add i64 %185, %205
  %207 = add i64 %194, -1
  %208 = icmp ult i64 %207, %206
  br i1 %208, label %763, label %209

209:                                              ; preds = %204, %176
  %210 = getelementptr inbounds i8, i8* %172, i64 6
  %211 = bitcast i8* %210 to i16*
  %212 = load i16, i16* %211, align 2
  %213 = zext i16 %212 to i64
  %214 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %213
  %215 = icmp eq i16 %212, 0
  br i1 %215, label %281, label %216

216:                                              ; preds = %209
  %217 = bitcast i8* %214 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %214, i64 %219
  %221 = icmp eq i8* %220, null
  br i1 %221, label %250, label %222

222:                                              ; preds = %216
  %223 = load i64, i64* %3, align 8
  %224 = ptrtoint i8* %220 to i64
  %225 = sub i64 %224, %223
  %226 = and i64 %225, 3
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %232, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %230 = load i8, i8* %229, align 8, !range !23
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %763

232:                                              ; preds = %228, %222
  %233 = load i64, i64* %15, align 8
  %234 = icmp ugt i64 %233, 4
  %235 = add i64 %233, -4
  %236 = icmp uge i64 %235, %225
  %237 = and i1 %234, %236
  br i1 %237, label %238, label %763

238:                                              ; preds = %232
  %239 = bitcast i8* %220 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = icmp ult i32 %240, 536870911
  br i1 %241, label %242, label %763

242:                                              ; preds = %238
  %243 = zext i32 %240 to i64
  %244 = shl nuw nsw i64 %243, 2
  %245 = add nuw nsw i64 %244, 4
  %246 = icmp ugt i64 %233, %245
  %247 = sub i64 %233, %245
  %248 = icmp uge i64 %247, %225
  %249 = and i1 %246, %248
  br i1 %249, label %250, label %763

250:                                              ; preds = %242, %216
  %251 = bitcast i8* %214 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i64
  %254 = getelementptr inbounds i8, i8* %214, i64 %253
  %255 = icmp eq i8* %254, null
  br i1 %255, label %281, label %256

256:                                              ; preds = %250
  %257 = bitcast i8* %254 to i32*
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %281, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds i8, i8* %254, i64 4
  %262 = bitcast i8* %261 to i32*
  br label %267

263:                                              ; preds = %267
  %264 = load i32, i32* %257, align 4
  %265 = zext i32 %264 to i64
  %266 = icmp ult i64 %276, %265
  br i1 %266, label %267, label %277

267:                                              ; preds = %263, %260
  %268 = phi i64 [ 0, %260 ], [ %276, %263 ]
  %269 = getelementptr inbounds i32, i32* %262, i64 %268
  %270 = bitcast i32* %269 to i8*
  %271 = load i32, i32* %269, align 4
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds i8, i8* %270, i64 %272
  %274 = bitcast i8* %273 to %"struct.safe_browsing::flat::ClientSideModel_::Rule"*
  %275 = tail call zeroext i1 @_ZNK13safe_browsing4flat16ClientSideModel_4Rule6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::ClientSideModel_::Rule"* %274, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  %276 = add nuw nsw i64 %268, 1
  br i1 %275, label %263, label %763

277:                                              ; preds = %263
  %278 = load i32, i32* %22, align 4
  %279 = sext i32 %278 to i64
  %280 = sub nsw i64 0, %279
  br label %281

281:                                              ; preds = %209, %170, %277, %250, %256
  %282 = phi i64 [ %280, %277 ], [ %171, %250 ], [ %171, %256 ], [ %171, %170 ], [ %171, %209 ]
  %283 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %282
  %284 = bitcast i8* %283 to i16*
  %285 = load i16, i16* %284, align 2
  %286 = icmp ugt i16 %285, 8
  br i1 %286, label %287, label %578

287:                                              ; preds = %281
  %288 = getelementptr inbounds i8, i8* %283, i64 8
  %289 = bitcast i8* %288 to i16*
  %290 = load i16, i16* %289, align 2
  %291 = icmp eq i16 %290, 0
  br i1 %291, label %320, label %292

292:                                              ; preds = %287
  %293 = load i64, i64* %3, align 8
  %294 = sub i64 %5, %293
  %295 = zext i16 %290 to i64
  %296 = add i64 %294, %295
  %297 = and i64 %296, 3
  %298 = icmp eq i64 %297, 0
  %299 = inttoptr i64 %293 to i8*
  br i1 %298, label %304, label %300

300:                                              ; preds = %292
  %301 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %302 = load i8, i8* %301, align 8, !range !23
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %304, label %763

304:                                              ; preds = %300, %292
  %305 = load i64, i64* %15, align 8
  %306 = icmp ugt i64 %305, 4
  %307 = add i64 %305, -4
  %308 = icmp uge i64 %307, %296
  %309 = and i1 %306, %308
  br i1 %309, label %310, label %763

310:                                              ; preds = %304
  %311 = getelementptr inbounds i8, i8* %299, i64 %296
  %312 = bitcast i8* %311 to i32*
  %313 = load i32, i32* %312, align 4
  %314 = icmp sgt i32 %313, 0
  br i1 %314, label %315, label %763

315:                                              ; preds = %310
  %316 = zext i32 %313 to i64
  %317 = add i64 %296, %316
  %318 = add i64 %305, -1
  %319 = icmp ult i64 %318, %317
  br i1 %319, label %763, label %320

320:                                              ; preds = %315, %287
  %321 = getelementptr inbounds i8, i8* %283, i64 8
  %322 = bitcast i8* %321 to i16*
  %323 = load i16, i16* %322, align 2
  %324 = zext i16 %323 to i64
  %325 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %324
  %326 = icmp eq i16 %323, 0
  br i1 %326, label %361, label %327

327:                                              ; preds = %320
  %328 = bitcast i8* %325 to i32*
  %329 = load i32, i32* %328, align 4
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds i8, i8* %325, i64 %330
  %332 = icmp eq i8* %331, null
  br i1 %332, label %361, label %333

333:                                              ; preds = %327
  %334 = load i64, i64* %3, align 8
  %335 = ptrtoint i8* %331 to i64
  %336 = sub i64 %335, %334
  %337 = and i64 %336, 3
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %343, label %339

339:                                              ; preds = %333
  %340 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %341 = load i8, i8* %340, align 8, !range !23
  %342 = icmp eq i8 %341, 0
  br i1 %342, label %343, label %763

343:                                              ; preds = %339, %333
  %344 = load i64, i64* %15, align 8
  %345 = icmp ugt i64 %344, 4
  %346 = add i64 %344, -4
  %347 = icmp uge i64 %346, %336
  %348 = and i1 %345, %347
  br i1 %348, label %349, label %763

349:                                              ; preds = %343
  %350 = bitcast i8* %331 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = icmp ult i32 %351, 536870911
  br i1 %352, label %353, label %763

353:                                              ; preds = %349
  %354 = zext i32 %351 to i64
  %355 = shl nuw nsw i64 %354, 2
  %356 = add nuw nsw i64 %355, 4
  %357 = icmp ugt i64 %344, %356
  %358 = sub i64 %344, %356
  %359 = icmp uge i64 %358, %336
  %360 = and i1 %357, %359
  br i1 %360, label %361, label %763

361:                                              ; preds = %320, %327, %353
  %362 = icmp ugt i16 %285, 10
  br i1 %362, label %363, label %578

363:                                              ; preds = %361
  %364 = getelementptr inbounds i8, i8* %283, i64 10
  %365 = bitcast i8* %364 to i16*
  %366 = load i16, i16* %365, align 2
  %367 = icmp eq i16 %366, 0
  br i1 %367, label %396, label %368

368:                                              ; preds = %363
  %369 = load i64, i64* %3, align 8
  %370 = sub i64 %5, %369
  %371 = zext i16 %366 to i64
  %372 = add i64 %370, %371
  %373 = and i64 %372, 3
  %374 = icmp eq i64 %373, 0
  %375 = inttoptr i64 %369 to i8*
  br i1 %374, label %380, label %376

376:                                              ; preds = %368
  %377 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %378 = load i8, i8* %377, align 8, !range !23
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %380, label %763

380:                                              ; preds = %376, %368
  %381 = load i64, i64* %15, align 8
  %382 = icmp ugt i64 %381, 4
  %383 = add i64 %381, -4
  %384 = icmp uge i64 %383, %372
  %385 = and i1 %382, %384
  br i1 %385, label %386, label %763

386:                                              ; preds = %380
  %387 = getelementptr inbounds i8, i8* %375, i64 %372
  %388 = bitcast i8* %387 to i32*
  %389 = load i32, i32* %388, align 4
  %390 = icmp sgt i32 %389, 0
  br i1 %390, label %391, label %763

391:                                              ; preds = %386
  %392 = zext i32 %389 to i64
  %393 = add i64 %372, %392
  %394 = add i64 %381, -1
  %395 = icmp ult i64 %394, %393
  br i1 %395, label %763, label %396

396:                                              ; preds = %391, %363
  %397 = getelementptr inbounds i8, i8* %283, i64 10
  %398 = bitcast i8* %397 to i16*
  %399 = load i16, i16* %398, align 2
  %400 = zext i16 %399 to i64
  %401 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %400
  %402 = icmp eq i16 %399, 0
  br i1 %402, label %437, label %403

403:                                              ; preds = %396
  %404 = bitcast i8* %401 to i32*
  %405 = load i32, i32* %404, align 4
  %406 = zext i32 %405 to i64
  %407 = getelementptr inbounds i8, i8* %401, i64 %406
  %408 = icmp eq i8* %407, null
  br i1 %408, label %437, label %409

409:                                              ; preds = %403
  %410 = load i64, i64* %3, align 8
  %411 = ptrtoint i8* %407 to i64
  %412 = sub i64 %411, %410
  %413 = and i64 %412, 3
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %419, label %415

415:                                              ; preds = %409
  %416 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %417 = load i8, i8* %416, align 8, !range !23
  %418 = icmp eq i8 %417, 0
  br i1 %418, label %419, label %763

419:                                              ; preds = %415, %409
  %420 = load i64, i64* %15, align 8
  %421 = icmp ugt i64 %420, 4
  %422 = add i64 %420, -4
  %423 = icmp uge i64 %422, %412
  %424 = and i1 %421, %423
  br i1 %424, label %425, label %763

425:                                              ; preds = %419
  %426 = bitcast i8* %407 to i32*
  %427 = load i32, i32* %426, align 4
  %428 = icmp ult i32 %427, 536870911
  br i1 %428, label %429, label %763

429:                                              ; preds = %425
  %430 = zext i32 %427 to i64
  %431 = shl nuw nsw i64 %430, 2
  %432 = add nuw nsw i64 %431, 4
  %433 = icmp ugt i64 %420, %432
  %434 = sub i64 %420, %432
  %435 = icmp uge i64 %434, %412
  %436 = and i1 %433, %435
  br i1 %436, label %437, label %763

437:                                              ; preds = %396, %403, %429
  %438 = icmp ugt i16 %285, 12
  br i1 %438, label %439, label %578

439:                                              ; preds = %437
  %440 = getelementptr inbounds i8, i8* %283, i64 12
  %441 = bitcast i8* %440 to i16*
  %442 = load i16, i16* %441, align 2
  %443 = icmp eq i16 %442, 0
  br i1 %443, label %454, label %444

444:                                              ; preds = %439
  %445 = load i64, i64* %3, align 8
  %446 = zext i16 %442 to i64
  %447 = add i64 %446, %5
  %448 = sub i64 %447, %445
  %449 = load i64, i64* %15, align 8
  %450 = icmp ugt i64 %449, 4
  %451 = add i64 %449, -4
  %452 = icmp uge i64 %451, %448
  %453 = and i1 %450, %452
  br i1 %453, label %454, label %763

454:                                              ; preds = %439, %444
  %455 = icmp ugt i16 %285, 14
  br i1 %455, label %456, label %578

456:                                              ; preds = %454
  %457 = getelementptr inbounds i8, i8* %283, i64 14
  %458 = bitcast i8* %457 to i16*
  %459 = load i16, i16* %458, align 2
  %460 = icmp eq i16 %459, 0
  br i1 %460, label %471, label %461

461:                                              ; preds = %456
  %462 = load i64, i64* %3, align 8
  %463 = zext i16 %459 to i64
  %464 = add i64 %463, %5
  %465 = sub i64 %464, %462
  %466 = load i64, i64* %15, align 8
  %467 = icmp ugt i64 %466, 4
  %468 = add i64 %466, -4
  %469 = icmp uge i64 %468, %465
  %470 = and i1 %467, %469
  br i1 %470, label %471, label %763

471:                                              ; preds = %456, %461
  %472 = icmp ugt i16 %285, 16
  br i1 %472, label %473, label %578

473:                                              ; preds = %471
  %474 = getelementptr inbounds i8, i8* %283, i64 16
  %475 = bitcast i8* %474 to i16*
  %476 = load i16, i16* %475, align 2
  %477 = icmp eq i16 %476, 0
  br i1 %477, label %506, label %478

478:                                              ; preds = %473
  %479 = load i64, i64* %3, align 8
  %480 = sub i64 %5, %479
  %481 = zext i16 %476 to i64
  %482 = add i64 %480, %481
  %483 = and i64 %482, 3
  %484 = icmp eq i64 %483, 0
  %485 = inttoptr i64 %479 to i8*
  br i1 %484, label %490, label %486

486:                                              ; preds = %478
  %487 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %488 = load i8, i8* %487, align 8, !range !23
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %490, label %763

490:                                              ; preds = %486, %478
  %491 = load i64, i64* %15, align 8
  %492 = icmp ugt i64 %491, 4
  %493 = add i64 %491, -4
  %494 = icmp uge i64 %493, %482
  %495 = and i1 %492, %494
  br i1 %495, label %496, label %763

496:                                              ; preds = %490
  %497 = getelementptr inbounds i8, i8* %485, i64 %482
  %498 = bitcast i8* %497 to i32*
  %499 = load i32, i32* %498, align 4
  %500 = icmp sgt i32 %499, 0
  br i1 %500, label %501, label %763

501:                                              ; preds = %496
  %502 = zext i32 %499 to i64
  %503 = add i64 %482, %502
  %504 = add i64 %491, -1
  %505 = icmp ult i64 %504, %503
  br i1 %505, label %763, label %506

506:                                              ; preds = %473, %501
  %507 = getelementptr inbounds i8, i8* %283, i64 16
  %508 = bitcast i8* %507 to i16*
  %509 = load i16, i16* %508, align 2
  %510 = zext i16 %509 to i64
  %511 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %510
  %512 = icmp eq i16 %509, 0
  br i1 %512, label %578, label %513

513:                                              ; preds = %506
  %514 = bitcast i8* %511 to i32*
  %515 = load i32, i32* %514, align 4
  %516 = zext i32 %515 to i64
  %517 = getelementptr inbounds i8, i8* %511, i64 %516
  %518 = icmp eq i8* %517, null
  br i1 %518, label %547, label %519

519:                                              ; preds = %513
  %520 = load i64, i64* %3, align 8
  %521 = ptrtoint i8* %517 to i64
  %522 = sub i64 %521, %520
  %523 = and i64 %522, 3
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %529, label %525

525:                                              ; preds = %519
  %526 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %527 = load i8, i8* %526, align 8, !range !23
  %528 = icmp eq i8 %527, 0
  br i1 %528, label %529, label %763

529:                                              ; preds = %525, %519
  %530 = load i64, i64* %15, align 8
  %531 = icmp ugt i64 %530, 4
  %532 = add i64 %530, -4
  %533 = icmp uge i64 %532, %522
  %534 = and i1 %531, %533
  br i1 %534, label %535, label %763

535:                                              ; preds = %529
  %536 = bitcast i8* %517 to i32*
  %537 = load i32, i32* %536, align 4
  %538 = icmp ult i32 %537, 536870911
  br i1 %538, label %539, label %763

539:                                              ; preds = %535
  %540 = zext i32 %537 to i64
  %541 = shl nuw nsw i64 %540, 2
  %542 = add nuw nsw i64 %541, 4
  %543 = icmp ugt i64 %530, %542
  %544 = sub i64 %530, %542
  %545 = icmp uge i64 %544, %522
  %546 = and i1 %543, %545
  br i1 %546, label %547, label %763

547:                                              ; preds = %539, %513
  %548 = bitcast i8* %511 to i32*
  %549 = load i32, i32* %548, align 4
  %550 = zext i32 %549 to i64
  %551 = getelementptr inbounds i8, i8* %511, i64 %550
  %552 = icmp eq i8* %551, null
  br i1 %552, label %578, label %553

553:                                              ; preds = %547
  %554 = bitcast i8* %551 to i32*
  %555 = load i32, i32* %554, align 4
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %578, label %557

557:                                              ; preds = %553
  %558 = getelementptr inbounds i8, i8* %551, i64 4
  %559 = bitcast i8* %558 to i32*
  br label %564

560:                                              ; preds = %564
  %561 = load i32, i32* %554, align 4
  %562 = zext i32 %561 to i64
  %563 = icmp ult i64 %573, %562
  br i1 %563, label %564, label %574

564:                                              ; preds = %560, %557
  %565 = phi i64 [ 0, %557 ], [ %573, %560 ]
  %566 = getelementptr inbounds i32, i32* %559, i64 %565
  %567 = bitcast i32* %566 to i8*
  %568 = load i32, i32* %566, align 4
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds i8, i8* %567, i64 %569
  %571 = bitcast i8* %570 to %"struct.safe_browsing::flat::ClientSideModel_::IPSubnet"*
  %572 = tail call zeroext i1 @_ZNK13safe_browsing4flat16ClientSideModel_8IPSubnet6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::ClientSideModel_::IPSubnet"* %571, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  %573 = add nuw nsw i64 %565, 1
  br i1 %572, label %560, label %763

574:                                              ; preds = %560
  %575 = load i32, i32* %22, align 4
  %576 = sext i32 %575 to i64
  %577 = sub nsw i64 0, %576
  br label %578

578:                                              ; preds = %361, %281, %471, %454, %437, %506, %574, %547, %553
  %579 = phi i64 [ %577, %574 ], [ %282, %547 ], [ %282, %553 ], [ %282, %506 ], [ %282, %437 ], [ %282, %454 ], [ %282, %471 ], [ %282, %281 ], [ %282, %361 ]
  %580 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %579
  %581 = bitcast i8* %580 to i16*
  %582 = load i16, i16* %581, align 2
  %583 = icmp ugt i16 %582, 18
  br i1 %583, label %584, label %705

584:                                              ; preds = %578
  %585 = getelementptr inbounds i8, i8* %580, i64 18
  %586 = bitcast i8* %585 to i16*
  %587 = load i16, i16* %586, align 2
  %588 = icmp eq i16 %587, 0
  br i1 %588, label %599, label %589

589:                                              ; preds = %584
  %590 = load i64, i64* %3, align 8
  %591 = zext i16 %587 to i64
  %592 = add i64 %591, %5
  %593 = sub i64 %592, %590
  %594 = load i64, i64* %15, align 8
  %595 = icmp ugt i64 %594, 4
  %596 = add i64 %594, -4
  %597 = icmp uge i64 %596, %593
  %598 = and i1 %595, %597
  br i1 %598, label %599, label %763

599:                                              ; preds = %584, %589
  %600 = icmp ugt i16 %582, 20
  br i1 %600, label %601, label %705

601:                                              ; preds = %599
  %602 = getelementptr inbounds i8, i8* %580, i64 20
  %603 = bitcast i8* %602 to i16*
  %604 = load i16, i16* %603, align 2
  %605 = icmp eq i16 %604, 0
  br i1 %605, label %616, label %606

606:                                              ; preds = %601
  %607 = load i64, i64* %3, align 8
  %608 = zext i16 %604 to i64
  %609 = add i64 %608, %5
  %610 = sub i64 %609, %607
  %611 = load i64, i64* %15, align 8
  %612 = icmp ugt i64 %611, 4
  %613 = add i64 %611, -4
  %614 = icmp uge i64 %613, %610
  %615 = and i1 %612, %614
  br i1 %615, label %616, label %763

616:                                              ; preds = %601, %606
  %617 = icmp ugt i16 %582, 22
  br i1 %617, label %618, label %705

618:                                              ; preds = %616
  %619 = getelementptr inbounds i8, i8* %580, i64 22
  %620 = bitcast i8* %619 to i16*
  %621 = load i16, i16* %620, align 2
  %622 = icmp eq i16 %621, 0
  br i1 %622, label %633, label %623

623:                                              ; preds = %618
  %624 = load i64, i64* %3, align 8
  %625 = zext i16 %621 to i64
  %626 = add i64 %625, %5
  %627 = sub i64 %626, %624
  %628 = load i64, i64* %15, align 8
  %629 = icmp ugt i64 %628, 4
  %630 = add i64 %628, -4
  %631 = icmp uge i64 %630, %627
  %632 = and i1 %629, %631
  br i1 %632, label %633, label %763

633:                                              ; preds = %618, %623
  %634 = icmp ugt i16 %582, 24
  br i1 %634, label %635, label %705

635:                                              ; preds = %633
  %636 = getelementptr inbounds i8, i8* %580, i64 24
  %637 = bitcast i8* %636 to i16*
  %638 = load i16, i16* %637, align 2
  %639 = icmp eq i16 %638, 0
  br i1 %639, label %650, label %640

640:                                              ; preds = %635
  %641 = load i64, i64* %3, align 8
  %642 = zext i16 %638 to i64
  %643 = add i64 %642, %5
  %644 = sub i64 %643, %641
  %645 = load i64, i64* %15, align 8
  %646 = icmp ugt i64 %645, 4
  %647 = add i64 %645, -4
  %648 = icmp uge i64 %647, %644
  %649 = and i1 %646, %648
  br i1 %649, label %650, label %763

650:                                              ; preds = %635, %640
  %651 = icmp ugt i16 %582, 26
  br i1 %651, label %652, label %705

652:                                              ; preds = %650
  %653 = getelementptr inbounds i8, i8* %580, i64 26
  %654 = bitcast i8* %653 to i16*
  %655 = load i16, i16* %654, align 2
  %656 = icmp eq i16 %655, 0
  br i1 %656, label %685, label %657

657:                                              ; preds = %652
  %658 = load i64, i64* %3, align 8
  %659 = sub i64 %5, %658
  %660 = zext i16 %655 to i64
  %661 = add i64 %659, %660
  %662 = and i64 %661, 3
  %663 = icmp eq i64 %662, 0
  %664 = inttoptr i64 %658 to i8*
  br i1 %663, label %669, label %665

665:                                              ; preds = %657
  %666 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %667 = load i8, i8* %666, align 8, !range !23
  %668 = icmp eq i8 %667, 0
  br i1 %668, label %669, label %763

669:                                              ; preds = %665, %657
  %670 = load i64, i64* %15, align 8
  %671 = icmp ugt i64 %670, 4
  %672 = add i64 %670, -4
  %673 = icmp uge i64 %672, %661
  %674 = and i1 %671, %673
  br i1 %674, label %675, label %763

675:                                              ; preds = %669
  %676 = getelementptr inbounds i8, i8* %664, i64 %661
  %677 = bitcast i8* %676 to i32*
  %678 = load i32, i32* %677, align 4
  %679 = icmp sgt i32 %678, 0
  br i1 %679, label %680, label %763

680:                                              ; preds = %675
  %681 = zext i32 %678 to i64
  %682 = add i64 %661, %681
  %683 = add i64 %670, -1
  %684 = icmp ult i64 %683, %682
  br i1 %684, label %763, label %685

685:                                              ; preds = %652, %680
  %686 = getelementptr inbounds i8, i8* %580, i64 26
  %687 = bitcast i8* %686 to i16*
  %688 = load i16, i16* %687, align 2
  %689 = zext i16 %688 to i64
  %690 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %689
  %691 = icmp eq i16 %688, 0
  br i1 %691, label %705, label %692

692:                                              ; preds = %685
  %693 = bitcast i8* %690 to i32*
  %694 = load i32, i32* %693, align 4
  %695 = zext i32 %694 to i64
  %696 = getelementptr inbounds i8, i8* %690, i64 %695
  %697 = icmp eq i8* %696, null
  br i1 %697, label %705, label %698

698:                                              ; preds = %692
  %699 = bitcast i8* %696 to %"struct.safe_browsing::flat::VisionModel"*
  %700 = tail call zeroext i1 @_ZNK13safe_browsing4flat11VisionModel6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::VisionModel"* nonnull %699, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  br i1 %700, label %701, label %763

701:                                              ; preds = %698
  %702 = load i32, i32* %22, align 4
  %703 = sext i32 %702 to i64
  %704 = sub nsw i64 0, %703
  br label %705

705:                                              ; preds = %650, %633, %616, %599, %578, %701, %685, %692
  %706 = phi i64 [ %704, %701 ], [ %579, %685 ], [ %579, %692 ], [ %579, %578 ], [ %579, %599 ], [ %579, %616 ], [ %579, %633 ], [ %579, %650 ]
  %707 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %706
  %708 = bitcast i8* %707 to i16*
  %709 = load i16, i16* %708, align 2
  %710 = icmp ugt i16 %709, 36
  br i1 %710, label %711, label %760

711:                                              ; preds = %705
  %712 = getelementptr inbounds i8, i8* %707, i64 36
  %713 = bitcast i8* %712 to i16*
  %714 = load i16, i16* %713, align 2
  %715 = icmp eq i16 %714, 0
  br i1 %715, label %744, label %716

716:                                              ; preds = %711
  %717 = load i64, i64* %3, align 8
  %718 = sub i64 %5, %717
  %719 = zext i16 %714 to i64
  %720 = add i64 %718, %719
  %721 = and i64 %720, 3
  %722 = icmp eq i64 %721, 0
  %723 = inttoptr i64 %717 to i8*
  br i1 %722, label %728, label %724

724:                                              ; preds = %716
  %725 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %726 = load i8, i8* %725, align 8, !range !23
  %727 = icmp eq i8 %726, 0
  br i1 %727, label %728, label %763

728:                                              ; preds = %724, %716
  %729 = load i64, i64* %15, align 8
  %730 = icmp ugt i64 %729, 4
  %731 = add i64 %729, -4
  %732 = icmp uge i64 %731, %720
  %733 = and i1 %730, %732
  br i1 %733, label %734, label %763

734:                                              ; preds = %728
  %735 = getelementptr inbounds i8, i8* %723, i64 %720
  %736 = bitcast i8* %735 to i32*
  %737 = load i32, i32* %736, align 4
  %738 = icmp sgt i32 %737, 0
  br i1 %738, label %739, label %763

739:                                              ; preds = %734
  %740 = zext i32 %737 to i64
  %741 = add i64 %720, %740
  %742 = add i64 %729, -1
  %743 = icmp ult i64 %742, %741
  br i1 %743, label %763, label %744

744:                                              ; preds = %739, %711
  %745 = getelementptr inbounds i8, i8* %707, i64 36
  %746 = bitcast i8* %745 to i16*
  %747 = load i16, i16* %746, align 2
  %748 = zext i16 %747 to i64
  %749 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel", %"struct.safe_browsing::flat::ClientSideModel"* %0, i64 0, i32 0, i32 0, i64 %748
  %750 = icmp eq i16 %747, 0
  br i1 %750, label %760, label %751

751:                                              ; preds = %744
  %752 = bitcast i8* %749 to i32*
  %753 = load i32, i32* %752, align 4
  %754 = zext i32 %753 to i64
  %755 = getelementptr inbounds i8, i8* %749, i64 %754
  %756 = icmp eq i8* %755, null
  br i1 %756, label %760, label %757

757:                                              ; preds = %751
  %758 = bitcast i8* %755 to %"struct.safe_browsing::flat::TfLiteModelMetadata"*
  %759 = tail call zeroext i1 @_ZNK13safe_browsing4flat19TfLiteModelMetadata6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::TfLiteModelMetadata"* nonnull %758, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  br i1 %759, label %760, label %763

760:                                              ; preds = %705, %744, %751, %757
  %761 = load i32, i32* %26, align 8
  %762 = add i32 %761, -1
  store i32 %762, i32* %26, align 8
  br label %763

763:                                              ; preds = %156, %267, %564, %119, %83, %89, %125, %96, %204, %315, %391, %501, %680, %739, %724, %734, %728, %665, %675, %669, %525, %535, %529, %486, %496, %490, %415, %425, %419, %376, %386, %380, %339, %349, %343, %300, %310, %304, %228, %238, %232, %189, %199, %193, %127, %91, %42, %21, %10, %35, %46, %56, %14, %760, %757, %698, %640, %623, %606, %589, %539, %461, %444, %429, %353, %242, %131, %60
  %764 = phi i1 [ false, %757 ], [ false, %739 ], [ false, %698 ], [ false, %680 ], [ false, %640 ], [ false, %623 ], [ false, %606 ], [ false, %589 ], [ false, %539 ], [ false, %501 ], [ false, %461 ], [ false, %444 ], [ false, %429 ], [ false, %391 ], [ false, %353 ], [ false, %315 ], [ false, %242 ], [ false, %204 ], [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %760 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ], [ false, %193 ], [ false, %199 ], [ false, %189 ], [ false, %232 ], [ false, %238 ], [ false, %228 ], [ false, %304 ], [ false, %310 ], [ false, %300 ], [ false, %343 ], [ false, %349 ], [ false, %339 ], [ false, %380 ], [ false, %386 ], [ false, %376 ], [ false, %419 ], [ false, %425 ], [ false, %415 ], [ false, %490 ], [ false, %496 ], [ false, %486 ], [ false, %529 ], [ false, %535 ], [ false, %525 ], [ false, %669 ], [ false, %675 ], [ false, %665 ], [ false, %728 ], [ false, %734 ], [ false, %724 ], [ false, %564 ], [ false, %267 ], [ false, %156 ]
  ret i1 %764
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat4Hash6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::Hash"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::Hash"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %139

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %139

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::Hash"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %139, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %139, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %139

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %139, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %139

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %139

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::Hash", %"struct.safe_browsing::flat::Hash"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %138

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !23
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %139, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %139, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %139

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %139, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.safe_browsing::flat::Hash", %"struct.safe_browsing::flat::Hash"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %138, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %138, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !23
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %139, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %139, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 2147483647
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = add nuw nsw i64 %132, 4
  %134 = icmp ugt i64 %16, %133
  %135 = sub i64 %16, %133
  %136 = icmp uge i64 %135, %116
  %137 = and i1 %134, %136
  br i1 %137, label %138, label %139

138:                                              ; preds = %65, %101, %108, %131
  store i32 %27, i32* %26, align 8
  br label %139

139:                                              ; preds = %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %138, %131, %60
  %140 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %138 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat16ClientSideModel_4Rule6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::ClientSideModel_::Rule"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::ClientSideModel_::Rule"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %151

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %151

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::ClientSideModel_::Rule"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %151, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %151, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %151

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %151, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %151

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %151

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel_::Rule", %"struct.safe_browsing::flat::ClientSideModel_::Rule"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %150

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !23
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %151, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %151, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %151

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %151, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel_::Rule", %"struct.safe_browsing::flat::ClientSideModel_::Rule"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %139, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !23
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %151, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %151, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %151

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %151

139:                                              ; preds = %101, %108, %131
  %140 = icmp ugt i16 %71, 6
  br i1 %140, label %141, label %150

141:                                              ; preds = %139
  %142 = getelementptr inbounds i8, i8* %69, i64 6
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 2
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %141
  %147 = zext i16 %144 to i64
  %148 = add i64 %6, %147
  %149 = icmp ult i64 %18, %148
  br i1 %149, label %151, label %150

150:                                              ; preds = %65, %146, %139, %141
  store i32 %27, i32* %26, align 8
  br label %151

151:                                              ; preds = %119, %83, %89, %125, %146, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %150, %131, %60
  %152 = phi i1 [ false, %146 ], [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %150 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %152
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat16ClientSideModel_8IPSubnet6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::ClientSideModel_::IPSubnet"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::ClientSideModel_::IPSubnet"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %144

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %144

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::ClientSideModel_::IPSubnet"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %144, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %144, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %144

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %144, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %144

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %144

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel_::IPSubnet", %"struct.safe_browsing::flat::ClientSideModel_::IPSubnet"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %144

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %144, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !23
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %144, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %144, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %144

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %144, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel_::IPSubnet", %"struct.safe_browsing::flat::ClientSideModel_::IPSubnet"* %0, i64 0, i32 0, i32 0, i64 %79
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %102, i64 %105
  %107 = icmp eq i8* %106, null
  br i1 %107, label %132, label %108

108:                                              ; preds = %101
  %109 = ptrtoint i8* %106 to i64
  %110 = sub i64 %109, %4
  %111 = and i64 %110, 3
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %119, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %115 = load i8, i8* %114, align 8, !range !23
  %116 = icmp ne i8 %115, 0
  %117 = icmp ult i64 %18, %110
  %118 = or i1 %116, %117
  br i1 %118, label %144, label %121

119:                                              ; preds = %108
  %120 = icmp ult i64 %18, %110
  br i1 %120, label %144, label %121

121:                                              ; preds = %113, %119
  %122 = bitcast i8* %106 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = icmp ult i32 %123, 2147483647
  br i1 %124, label %125, label %144

125:                                              ; preds = %121
  %126 = zext i32 %123 to i64
  %127 = add nuw nsw i64 %126, 4
  %128 = icmp ugt i64 %16, %127
  %129 = sub i64 %16, %127
  %130 = icmp uge i64 %129, %110
  %131 = and i1 %128, %130
  br i1 %131, label %132, label %144

132:                                              ; preds = %101, %125
  %133 = icmp ugt i16 %71, 6
  br i1 %133, label %134, label %143

134:                                              ; preds = %132
  %135 = getelementptr inbounds i8, i8* %69, i64 6
  %136 = bitcast i8* %135 to i16*
  %137 = load i16, i16* %136, align 2
  %138 = icmp eq i16 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %134
  %140 = zext i16 %137 to i64
  %141 = add i64 %6, %140
  %142 = icmp ult i64 %18, %141
  br i1 %142, label %144, label %143

143:                                              ; preds = %139, %132, %134
  store i32 %27, i32* %26, align 8
  br label %144

144:                                              ; preds = %113, %83, %139, %119, %89, %96, %121, %91, %65, %73, %42, %21, %10, %35, %46, %56, %14, %143, %125, %60
  %145 = phi i1 [ false, %139 ], [ false, %125 ], [ false, %96 ], [ false, %60 ], [ true, %143 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %73 ], [ false, %65 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %119 ], [ false, %121 ], [ false, %113 ]
  ret i1 %145
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat11VisionModel6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::VisionModel"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::VisionModel"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %171

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %171

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::VisionModel"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %171, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %171, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %171

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %171, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %171

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %171

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::VisionModel", %"struct.safe_browsing::flat::VisionModel"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %168

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !23
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %171, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %171, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %171

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %171, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.safe_browsing::flat::VisionModel", %"struct.safe_browsing::flat::VisionModel"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %168, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !23
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %171, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %171, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %171

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %171

139:                                              ; preds = %131, %108
  %140 = bitcast i8* %106 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %106, i64 %142
  %144 = icmp eq i8* %143, null
  br i1 %144, label %168, label %145

145:                                              ; preds = %139
  %146 = bitcast i8* %143 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %168, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds i8, i8* %143, i64 4
  %151 = bitcast i8* %150 to i32*
  br label %156

152:                                              ; preds = %156
  %153 = load i32, i32* %146, align 4
  %154 = zext i32 %153 to i64
  %155 = icmp ult i64 %165, %154
  br i1 %155, label %156, label %166

156:                                              ; preds = %152, %149
  %157 = phi i64 [ 0, %149 ], [ %165, %152 ]
  %158 = getelementptr inbounds i32, i32* %151, i64 %157
  %159 = bitcast i32* %158 to i8*
  %160 = load i32, i32* %158, align 4
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %159, i64 %161
  %163 = bitcast i8* %162 to %"struct.safe_browsing::flat::VisualTarget"*
  %164 = tail call zeroext i1 @_ZNK13safe_browsing4flat12VisualTarget6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::VisualTarget"* %163, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  %165 = add nuw nsw i64 %157, 1
  br i1 %164, label %152, label %171

166:                                              ; preds = %152
  %167 = load i32, i32* %26, align 8
  br label %168

168:                                              ; preds = %101, %65, %166, %139, %145
  %169 = phi i32 [ %167, %166 ], [ %28, %139 ], [ %28, %145 ], [ %28, %65 ], [ %28, %101 ]
  %170 = add i32 %169, -1
  store i32 %170, i32* %26, align 8
  br label %171

171:                                              ; preds = %156, %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %168, %131, %60
  %172 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %168 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ], [ false, %156 ]
  ret i1 %172
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat12VisualTarget6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::VisualTarget"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::VisualTarget"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %387

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %387

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::VisualTarget"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %387, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %387, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %387

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %387, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %387

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %387

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::VisualTarget", %"struct.safe_browsing::flat::VisualTarget"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %329

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !23
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %387, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %387, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %387

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %387, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.safe_browsing::flat::VisualTarget", %"struct.safe_browsing::flat::VisualTarget"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %138, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %138, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !23
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %387, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %387, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 2147483647
  br i1 %130, label %131, label %387

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = add nuw nsw i64 %132, 4
  %134 = icmp ugt i64 %16, %133
  %135 = sub i64 %16, %133
  %136 = icmp uge i64 %135, %116
  %137 = and i1 %134, %136
  br i1 %137, label %138, label %387

138:                                              ; preds = %101, %108, %131
  %139 = icmp ugt i16 %71, 6
  br i1 %139, label %140, label %329

140:                                              ; preds = %138
  %141 = getelementptr inbounds i8, i8* %69, i64 6
  %142 = bitcast i8* %141 to i16*
  %143 = load i16, i16* %142, align 2
  %144 = icmp eq i16 %143, 0
  br i1 %144, label %152, label %145

145:                                              ; preds = %140
  %146 = zext i16 %143 to i64
  %147 = add i64 %6, %146
  %148 = icmp ugt i64 %16, 8
  %149 = add i64 %16, -8
  %150 = icmp uge i64 %149, %147
  %151 = and i1 %148, %150
  br i1 %151, label %152, label %387

152:                                              ; preds = %140, %145
  %153 = icmp ugt i16 %71, 8
  br i1 %153, label %154, label %329

154:                                              ; preds = %152
  %155 = getelementptr inbounds i8, i8* %69, i64 8
  %156 = bitcast i8* %155 to i16*
  %157 = load i16, i16* %156, align 2
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %182, label %159

159:                                              ; preds = %154
  %160 = zext i16 %157 to i64
  %161 = add i64 %6, %160
  %162 = and i64 %161, 3
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %170, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %166 = load i8, i8* %165, align 8, !range !23
  %167 = icmp ne i8 %166, 0
  %168 = icmp ult i64 %18, %161
  %169 = or i1 %167, %168
  br i1 %169, label %387, label %172

170:                                              ; preds = %159
  %171 = icmp ult i64 %18, %161
  br i1 %171, label %387, label %172

172:                                              ; preds = %164, %170
  %173 = getelementptr inbounds i8, i8* %9, i64 %161
  %174 = bitcast i8* %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = icmp sgt i32 %175, 0
  br i1 %176, label %177, label %387

177:                                              ; preds = %172
  %178 = zext i32 %175 to i64
  %179 = add i64 %161, %178
  %180 = add i64 %16, -1
  %181 = icmp ult i64 %180, %179
  br i1 %181, label %387, label %182

182:                                              ; preds = %154, %177
  %183 = getelementptr inbounds i8, i8* %69, i64 8
  %184 = bitcast i8* %183 to i16*
  %185 = load i16, i16* %184, align 2
  %186 = zext i16 %185 to i64
  %187 = getelementptr inbounds %"struct.safe_browsing::flat::VisualTarget", %"struct.safe_browsing::flat::VisualTarget"* %0, i64 0, i32 0, i32 0, i64 %186
  %188 = icmp eq i16 %185, 0
  br i1 %188, label %219, label %189

189:                                              ; preds = %182
  %190 = bitcast i8* %187 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds i8, i8* %187, i64 %192
  %194 = icmp eq i8* %193, null
  br i1 %194, label %219, label %195

195:                                              ; preds = %189
  %196 = ptrtoint i8* %193 to i64
  %197 = sub i64 %196, %4
  %198 = and i64 %197, 3
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %206, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %202 = load i8, i8* %201, align 8, !range !23
  %203 = icmp ne i8 %202, 0
  %204 = icmp ult i64 %18, %197
  %205 = or i1 %203, %204
  br i1 %205, label %387, label %208

206:                                              ; preds = %195
  %207 = icmp ult i64 %18, %197
  br i1 %207, label %387, label %208

208:                                              ; preds = %200, %206
  %209 = bitcast i8* %193 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = icmp ult i32 %210, 2147483647
  br i1 %211, label %212, label %387

212:                                              ; preds = %208
  %213 = zext i32 %210 to i64
  %214 = add nuw nsw i64 %213, 4
  %215 = icmp ugt i64 %16, %214
  %216 = sub i64 %16, %214
  %217 = icmp uge i64 %216, %197
  %218 = and i1 %215, %217
  br i1 %218, label %219, label %387

219:                                              ; preds = %182, %189, %212
  %220 = icmp ugt i16 %71, 10
  br i1 %220, label %221, label %329

221:                                              ; preds = %219
  %222 = getelementptr inbounds i8, i8* %69, i64 10
  %223 = bitcast i8* %222 to i16*
  %224 = load i16, i16* %223, align 2
  %225 = icmp eq i16 %224, 0
  br i1 %225, label %230, label %226

226:                                              ; preds = %221
  %227 = zext i16 %224 to i64
  %228 = add i64 %6, %227
  %229 = icmp ult i64 %18, %228
  br i1 %229, label %387, label %230

230:                                              ; preds = %226, %221
  %231 = icmp ugt i16 %71, 12
  br i1 %231, label %232, label %329

232:                                              ; preds = %230
  %233 = getelementptr inbounds i8, i8* %69, i64 12
  %234 = bitcast i8* %233 to i16*
  %235 = load i16, i16* %234, align 2
  %236 = icmp eq i16 %235, 0
  br i1 %236, label %260, label %237

237:                                              ; preds = %232
  %238 = zext i16 %235 to i64
  %239 = add i64 %6, %238
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %248, label %242

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %244 = load i8, i8* %243, align 8, !range !23
  %245 = icmp ne i8 %244, 0
  %246 = icmp ult i64 %18, %239
  %247 = or i1 %245, %246
  br i1 %247, label %387, label %250

248:                                              ; preds = %237
  %249 = icmp ult i64 %18, %239
  br i1 %249, label %387, label %250

250:                                              ; preds = %242, %248
  %251 = getelementptr inbounds i8, i8* %9, i64 %239
  %252 = bitcast i8* %251 to i32*
  %253 = load i32, i32* %252, align 4
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %255, label %387

255:                                              ; preds = %250
  %256 = zext i32 %253 to i64
  %257 = add i64 %239, %256
  %258 = add i64 %16, -1
  %259 = icmp ult i64 %258, %257
  br i1 %259, label %387, label %260

260:                                              ; preds = %232, %255
  %261 = getelementptr inbounds i8, i8* %69, i64 12
  %262 = bitcast i8* %261 to i16*
  %263 = load i16, i16* %262, align 2
  %264 = zext i16 %263 to i64
  %265 = getelementptr inbounds %"struct.safe_browsing::flat::VisualTarget", %"struct.safe_browsing::flat::VisualTarget"* %0, i64 0, i32 0, i32 0, i64 %264
  %266 = icmp eq i16 %263, 0
  br i1 %266, label %329, label %267

267:                                              ; preds = %260
  %268 = bitcast i8* %265 to i32*
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds i8, i8* %265, i64 %270
  %272 = icmp eq i8* %271, null
  br i1 %272, label %298, label %273

273:                                              ; preds = %267
  %274 = ptrtoint i8* %271 to i64
  %275 = sub i64 %274, %4
  %276 = and i64 %275, 3
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %284, label %278

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %280 = load i8, i8* %279, align 8, !range !23
  %281 = icmp ne i8 %280, 0
  %282 = icmp ult i64 %18, %275
  %283 = or i1 %281, %282
  br i1 %283, label %387, label %286

284:                                              ; preds = %273
  %285 = icmp ult i64 %18, %275
  br i1 %285, label %387, label %286

286:                                              ; preds = %278, %284
  %287 = bitcast i8* %271 to i32*
  %288 = load i32, i32* %287, align 4
  %289 = icmp ult i32 %288, 536870911
  br i1 %289, label %290, label %387

290:                                              ; preds = %286
  %291 = zext i32 %288 to i64
  %292 = shl nuw nsw i64 %291, 2
  %293 = add nuw nsw i64 %292, 4
  %294 = icmp ugt i64 %16, %293
  %295 = sub i64 %16, %293
  %296 = icmp uge i64 %295, %275
  %297 = and i1 %294, %296
  br i1 %297, label %298, label %387

298:                                              ; preds = %290, %267
  %299 = bitcast i8* %265 to i32*
  %300 = load i32, i32* %299, align 4
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds i8, i8* %265, i64 %301
  %303 = icmp eq i8* %302, null
  br i1 %303, label %329, label %304

304:                                              ; preds = %298
  %305 = bitcast i8* %302 to i32*
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %329, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds i8, i8* %302, i64 4
  %310 = bitcast i8* %309 to i32*
  br label %315

311:                                              ; preds = %315
  %312 = load i32, i32* %305, align 4
  %313 = zext i32 %312 to i64
  %314 = icmp ult i64 %324, %313
  br i1 %314, label %315, label %325

315:                                              ; preds = %311, %308
  %316 = phi i64 [ 0, %308 ], [ %324, %311 ]
  %317 = getelementptr inbounds i32, i32* %310, i64 %316
  %318 = bitcast i32* %317 to i8*
  %319 = load i32, i32* %317, align 4
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds i8, i8* %318, i64 %320
  %322 = bitcast i8* %321 to %"struct.safe_browsing::flat::VisualFeatures_::ColorHistogramBin"*
  %323 = tail call zeroext i1 @_ZNK13safe_browsing4flat15VisualFeatures_17ColorHistogramBin6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::VisualFeatures_::ColorHistogramBin"* %322, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  %324 = add nuw nsw i64 %316, 1
  br i1 %323, label %311, label %387

325:                                              ; preds = %311
  %326 = load i32, i32* %22, align 4
  %327 = sext i32 %326 to i64
  %328 = sub nsw i64 0, %327
  br label %329

329:                                              ; preds = %138, %152, %65, %230, %219, %260, %325, %298, %304
  %330 = phi i64 [ %328, %325 ], [ %68, %298 ], [ %68, %304 ], [ %68, %260 ], [ %68, %219 ], [ %68, %230 ], [ %68, %65 ], [ %68, %152 ], [ %68, %138 ]
  %331 = getelementptr inbounds %"struct.safe_browsing::flat::VisualTarget", %"struct.safe_browsing::flat::VisualTarget"* %0, i64 0, i32 0, i32 0, i64 %330
  %332 = bitcast i8* %331 to i16*
  %333 = load i16, i16* %332, align 2
  %334 = icmp ugt i16 %333, 14
  br i1 %334, label %335, label %384

335:                                              ; preds = %329
  %336 = getelementptr inbounds i8, i8* %331, i64 14
  %337 = bitcast i8* %336 to i16*
  %338 = load i16, i16* %337, align 2
  %339 = icmp eq i16 %338, 0
  br i1 %339, label %368, label %340

340:                                              ; preds = %335
  %341 = load i64, i64* %3, align 8
  %342 = sub i64 %5, %341
  %343 = zext i16 %338 to i64
  %344 = add i64 %342, %343
  %345 = and i64 %344, 3
  %346 = icmp eq i64 %345, 0
  %347 = inttoptr i64 %341 to i8*
  br i1 %346, label %352, label %348

348:                                              ; preds = %340
  %349 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %350 = load i8, i8* %349, align 8, !range !23
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %352, label %387

352:                                              ; preds = %348, %340
  %353 = load i64, i64* %15, align 8
  %354 = icmp ugt i64 %353, 4
  %355 = add i64 %353, -4
  %356 = icmp uge i64 %355, %344
  %357 = and i1 %354, %356
  br i1 %357, label %358, label %387

358:                                              ; preds = %352
  %359 = getelementptr inbounds i8, i8* %347, i64 %344
  %360 = bitcast i8* %359 to i32*
  %361 = load i32, i32* %360, align 4
  %362 = icmp sgt i32 %361, 0
  br i1 %362, label %363, label %387

363:                                              ; preds = %358
  %364 = zext i32 %361 to i64
  %365 = add i64 %344, %364
  %366 = add i64 %353, -1
  %367 = icmp ult i64 %366, %365
  br i1 %367, label %387, label %368

368:                                              ; preds = %363, %335
  %369 = getelementptr inbounds i8, i8* %331, i64 14
  %370 = bitcast i8* %369 to i16*
  %371 = load i16, i16* %370, align 2
  %372 = zext i16 %371 to i64
  %373 = getelementptr inbounds %"struct.safe_browsing::flat::VisualTarget", %"struct.safe_browsing::flat::VisualTarget"* %0, i64 0, i32 0, i32 0, i64 %372
  %374 = icmp eq i16 %371, 0
  br i1 %374, label %384, label %375

375:                                              ; preds = %368
  %376 = bitcast i8* %373 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = zext i32 %377 to i64
  %379 = getelementptr inbounds i8, i8* %373, i64 %378
  %380 = icmp eq i8* %379, null
  br i1 %380, label %384, label %381

381:                                              ; preds = %375
  %382 = bitcast i8* %379 to %"struct.safe_browsing::flat::MatchConfig"*
  %383 = tail call zeroext i1 @_ZNK13safe_browsing4flat11MatchConfig6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::MatchConfig"* nonnull %382, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  br i1 %383, label %384, label %387

384:                                              ; preds = %329, %368, %375, %381
  %385 = load i32, i32* %26, align 8
  %386 = add i32 %385, -1
  store i32 %386, i32* %26, align 8
  br label %387

387:                                              ; preds = %315, %278, %242, %200, %164, %119, %83, %89, %125, %170, %206, %248, %226, %284, %96, %177, %255, %363, %348, %358, %352, %286, %250, %208, %172, %127, %91, %42, %21, %10, %35, %46, %56, %14, %384, %381, %290, %212, %145, %131, %60
  %388 = phi i1 [ false, %381 ], [ false, %363 ], [ false, %290 ], [ false, %255 ], [ false, %226 ], [ false, %212 ], [ false, %177 ], [ false, %145 ], [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %384 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ], [ false, %170 ], [ false, %172 ], [ false, %164 ], [ false, %206 ], [ false, %208 ], [ false, %200 ], [ false, %248 ], [ false, %250 ], [ false, %242 ], [ false, %284 ], [ false, %286 ], [ false, %278 ], [ false, %352 ], [ false, %358 ], [ false, %348 ], [ false, %315 ]
  ret i1 %388
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat15VisualFeatures_17ColorHistogramBin6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::VisualFeatures_::ColorHistogramBin"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::VisualFeatures_::ColorHistogramBin"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %138

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %138

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::VisualFeatures_::ColorHistogramBin"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %138, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %138, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %138

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %138, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %138

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %138

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::VisualFeatures_::ColorHistogramBin", %"struct.safe_browsing::flat::VisualFeatures_::ColorHistogramBin"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %137

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %138, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %137

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = icmp ult i64 %18, %91
  br i1 %92, label %138, label %93

93:                                               ; preds = %89, %84
  %94 = icmp ugt i16 %71, 8
  br i1 %94, label %95, label %137

95:                                               ; preds = %93
  %96 = getelementptr inbounds i8, i8* %69, i64 8
  %97 = bitcast i8* %96 to i16*
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %95
  %101 = zext i16 %98 to i64
  %102 = add i64 %6, %101
  %103 = icmp ult i64 %18, %102
  br i1 %103, label %138, label %104

104:                                              ; preds = %100, %95
  %105 = icmp ugt i16 %71, 10
  br i1 %105, label %106, label %137

106:                                              ; preds = %104
  %107 = getelementptr inbounds i8, i8* %69, i64 10
  %108 = bitcast i8* %107 to i16*
  %109 = load i16, i16* %108, align 2
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %106
  %112 = zext i16 %109 to i64
  %113 = add i64 %6, %112
  %114 = icmp ult i64 %18, %113
  br i1 %114, label %138, label %115

115:                                              ; preds = %111, %106
  %116 = icmp ugt i16 %71, 12
  br i1 %116, label %117, label %137

117:                                              ; preds = %115
  %118 = getelementptr inbounds i8, i8* %69, i64 12
  %119 = bitcast i8* %118 to i16*
  %120 = load i16, i16* %119, align 2
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %117
  %123 = zext i16 %120 to i64
  %124 = add i64 %6, %123
  %125 = icmp ult i64 %18, %124
  br i1 %125, label %138, label %126

126:                                              ; preds = %122, %117
  %127 = icmp ugt i16 %71, 14
  br i1 %127, label %128, label %137

128:                                              ; preds = %126
  %129 = getelementptr inbounds i8, i8* %69, i64 14
  %130 = bitcast i8* %129 to i16*
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %131, 0
  br i1 %132, label %137, label %133

133:                                              ; preds = %128
  %134 = zext i16 %131 to i64
  %135 = add i64 %6, %134
  %136 = icmp ult i64 %18, %135
  br i1 %136, label %138, label %137

137:                                              ; preds = %133, %65, %82, %93, %104, %115, %126, %128
  store i32 %27, i32* %26, align 8
  br label %138

138:                                              ; preds = %133, %122, %111, %100, %89, %78, %42, %21, %10, %35, %46, %56, %14, %137, %60
  %139 = phi i1 [ false, %133 ], [ false, %122 ], [ false, %111 ], [ false, %100 ], [ false, %89 ], [ false, %78 ], [ false, %60 ], [ true, %137 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat11MatchConfig6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::MatchConfig"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::MatchConfig"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %171

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %171

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::MatchConfig"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %171, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %171, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %171

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %171, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %171

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %171

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::MatchConfig", %"struct.safe_browsing::flat::MatchConfig"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %168

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !23
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %171, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %171, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %171

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %171, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.safe_browsing::flat::MatchConfig", %"struct.safe_browsing::flat::MatchConfig"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %168, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !23
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %171, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %171, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %171

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %171

139:                                              ; preds = %131, %108
  %140 = bitcast i8* %106 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %106, i64 %142
  %144 = icmp eq i8* %143, null
  br i1 %144, label %168, label %145

145:                                              ; preds = %139
  %146 = bitcast i8* %143 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %168, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds i8, i8* %143, i64 4
  %151 = bitcast i8* %150 to i32*
  br label %156

152:                                              ; preds = %156
  %153 = load i32, i32* %146, align 4
  %154 = zext i32 %153 to i64
  %155 = icmp ult i64 %165, %154
  br i1 %155, label %156, label %166

156:                                              ; preds = %152, %149
  %157 = phi i64 [ 0, %149 ], [ %165, %152 ]
  %158 = getelementptr inbounds i32, i32* %151, i64 %157
  %159 = bitcast i32* %158 to i8*
  %160 = load i32, i32* %158, align 4
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %159, i64 %161
  %163 = bitcast i8* %162 to %"struct.safe_browsing::flat::MatchRule"*
  %164 = tail call zeroext i1 @_ZNK13safe_browsing4flat9MatchRule6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::MatchRule"* %163, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  %165 = add nuw nsw i64 %157, 1
  br i1 %164, label %152, label %171

166:                                              ; preds = %152
  %167 = load i32, i32* %26, align 8
  br label %168

168:                                              ; preds = %101, %65, %166, %139, %145
  %169 = phi i32 [ %167, %166 ], [ %28, %139 ], [ %28, %145 ], [ %28, %65 ], [ %28, %101 ]
  %170 = add i32 %169, -1
  store i32 %170, i32* %26, align 8
  br label %171

171:                                              ; preds = %156, %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %168, %131, %60
  %172 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %168 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ], [ false, %156 ]
  ret i1 %172
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat9MatchRule6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::MatchRule"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::MatchRule"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %270

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %270

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::MatchRule"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %270, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %270, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %270

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %270, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %270

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %270

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::MatchRule", %"struct.safe_browsing::flat::MatchRule"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %173

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ugt i64 %16, 8
  %82 = add i64 %16, -8
  %83 = icmp uge i64 %82, %80
  %84 = and i1 %81, %83
  br i1 %84, label %85, label %270

85:                                               ; preds = %73, %78
  %86 = icmp ugt i16 %71, 6
  br i1 %86, label %87, label %173

87:                                               ; preds = %85
  %88 = getelementptr inbounds i8, i8* %69, i64 6
  %89 = bitcast i8* %88 to i16*
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %90, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %87
  %93 = zext i16 %90 to i64
  %94 = add i64 %6, %93
  %95 = icmp ugt i64 %16, 8
  %96 = add i64 %16, -8
  %97 = icmp uge i64 %96, %94
  %98 = and i1 %95, %97
  br i1 %98, label %99, label %270

99:                                               ; preds = %87, %92
  %100 = icmp ugt i16 %71, 8
  br i1 %100, label %101, label %173

101:                                              ; preds = %99
  %102 = getelementptr inbounds i8, i8* %69, i64 8
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %129, label %106

106:                                              ; preds = %101
  %107 = zext i16 %104 to i64
  %108 = add i64 %6, %107
  %109 = and i64 %108, 3
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %113 = load i8, i8* %112, align 8, !range !23
  %114 = icmp ne i8 %113, 0
  %115 = icmp ult i64 %18, %108
  %116 = or i1 %114, %115
  br i1 %116, label %270, label %119

117:                                              ; preds = %106
  %118 = icmp ult i64 %18, %108
  br i1 %118, label %270, label %119

119:                                              ; preds = %111, %117
  %120 = getelementptr inbounds i8, i8* %9, i64 %108
  %121 = bitcast i8* %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %124, label %270

124:                                              ; preds = %119
  %125 = zext i32 %122 to i64
  %126 = add i64 %108, %125
  %127 = add i64 %16, -1
  %128 = icmp ult i64 %127, %126
  br i1 %128, label %270, label %129

129:                                              ; preds = %101, %124
  %130 = getelementptr inbounds i8, i8* %69, i64 8
  %131 = bitcast i8* %130 to i16*
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i64
  %134 = getelementptr inbounds %"struct.safe_browsing::flat::MatchRule", %"struct.safe_browsing::flat::MatchRule"* %0, i64 0, i32 0, i32 0, i64 %133
  %135 = icmp eq i16 %132, 0
  br i1 %135, label %173, label %136

136:                                              ; preds = %129
  %137 = bitcast i8* %134 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %134, i64 %139
  %141 = icmp eq i8* %140, null
  br i1 %141, label %167, label %142

142:                                              ; preds = %136
  %143 = ptrtoint i8* %140 to i64
  %144 = sub i64 %143, %4
  %145 = and i64 %144, 3
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %153, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %149 = load i8, i8* %148, align 8, !range !23
  %150 = icmp ne i8 %149, 0
  %151 = icmp ult i64 %18, %144
  %152 = or i1 %150, %151
  br i1 %152, label %270, label %155

153:                                              ; preds = %142
  %154 = icmp ult i64 %18, %144
  br i1 %154, label %270, label %155

155:                                              ; preds = %147, %153
  %156 = bitcast i8* %140 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = icmp ult i32 %157, 536870911
  br i1 %158, label %159, label %270

159:                                              ; preds = %155
  %160 = zext i32 %157 to i64
  %161 = shl nuw nsw i64 %160, 2
  %162 = add nuw nsw i64 %161, 4
  %163 = icmp ugt i64 %16, %162
  %164 = sub i64 %16, %162
  %165 = icmp uge i64 %164, %144
  %166 = and i1 %163, %165
  br i1 %166, label %167, label %270

167:                                              ; preds = %159, %136
  %168 = bitcast i8* %134 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %134, i64 %170
  %172 = bitcast i8* %171 to %"class.flatbuffers::Vector.53"*
  br label %173

173:                                              ; preds = %99, %85, %65, %129, %167
  %174 = phi %"class.flatbuffers::Vector.53"* [ %172, %167 ], [ null, %129 ], [ null, %65 ], [ null, %85 ], [ null, %99 ]
  %175 = tail call zeroext i1 @_ZN11flatbuffers8Verifier20VerifyVectorOfTablesIN13safe_browsing4flat10MatchRule_10ColorRangeEEEbPKNS_6VectorINS_6OffsetIT_EEEE(%"class.flatbuffers::Verifier"* %1, %"class.flatbuffers::Vector.53"* %174)
  br i1 %175, label %176, label %270

176:                                              ; preds = %173
  %177 = load i32, i32* %22, align 4
  %178 = sext i32 %177 to i64
  %179 = sub nsw i64 0, %178
  %180 = getelementptr inbounds %"struct.safe_browsing::flat::MatchRule", %"struct.safe_browsing::flat::MatchRule"* %0, i64 0, i32 0, i32 0, i64 %179
  %181 = bitcast i8* %180 to i16*
  %182 = load i16, i16* %181, align 2
  %183 = icmp ugt i16 %182, 10
  br i1 %183, label %184, label %264

184:                                              ; preds = %176
  %185 = getelementptr inbounds i8, i8* %180, i64 10
  %186 = bitcast i8* %185 to i16*
  %187 = load i16, i16* %186, align 2
  %188 = icmp eq i16 %187, 0
  br i1 %188, label %217, label %189

189:                                              ; preds = %184
  %190 = load i64, i64* %3, align 8
  %191 = sub i64 %5, %190
  %192 = zext i16 %187 to i64
  %193 = add i64 %191, %192
  %194 = and i64 %193, 3
  %195 = icmp eq i64 %194, 0
  %196 = inttoptr i64 %190 to i8*
  br i1 %195, label %201, label %197

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %199 = load i8, i8* %198, align 8, !range !23
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %270

201:                                              ; preds = %197, %189
  %202 = load i64, i64* %15, align 8
  %203 = icmp ugt i64 %202, 4
  %204 = add i64 %202, -4
  %205 = icmp uge i64 %204, %193
  %206 = and i1 %203, %205
  br i1 %206, label %207, label %270

207:                                              ; preds = %201
  %208 = getelementptr inbounds i8, i8* %196, i64 %193
  %209 = bitcast i8* %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = icmp sgt i32 %210, 0
  br i1 %211, label %212, label %270

212:                                              ; preds = %207
  %213 = zext i32 %210 to i64
  %214 = add i64 %193, %213
  %215 = add i64 %202, -1
  %216 = icmp ult i64 %215, %214
  br i1 %216, label %270, label %217

217:                                              ; preds = %212, %184
  %218 = getelementptr inbounds i8, i8* %180, i64 10
  %219 = bitcast i8* %218 to i16*
  %220 = load i16, i16* %219, align 2
  %221 = zext i16 %220 to i64
  %222 = getelementptr inbounds %"struct.safe_browsing::flat::MatchRule", %"struct.safe_browsing::flat::MatchRule"* %0, i64 0, i32 0, i32 0, i64 %221
  %223 = icmp eq i16 %220, 0
  br i1 %223, label %264, label %224

224:                                              ; preds = %217
  %225 = bitcast i8* %222 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %222, i64 %227
  %229 = icmp eq i8* %228, null
  br i1 %229, label %258, label %230

230:                                              ; preds = %224
  %231 = load i64, i64* %3, align 8
  %232 = ptrtoint i8* %228 to i64
  %233 = sub i64 %232, %231
  %234 = and i64 %233, 3
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %240, label %236

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %238 = load i8, i8* %237, align 8, !range !23
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %270

240:                                              ; preds = %236, %230
  %241 = load i64, i64* %15, align 8
  %242 = icmp ugt i64 %241, 4
  %243 = add i64 %241, -4
  %244 = icmp uge i64 %243, %233
  %245 = and i1 %242, %244
  br i1 %245, label %246, label %270

246:                                              ; preds = %240
  %247 = bitcast i8* %228 to i32*
  %248 = load i32, i32* %247, align 4
  %249 = icmp ult i32 %248, 536870911
  br i1 %249, label %250, label %270

250:                                              ; preds = %246
  %251 = zext i32 %248 to i64
  %252 = shl nuw nsw i64 %251, 2
  %253 = add nuw nsw i64 %252, 4
  %254 = icmp ugt i64 %241, %253
  %255 = sub i64 %241, %253
  %256 = icmp uge i64 %255, %233
  %257 = and i1 %254, %256
  br i1 %257, label %258, label %270

258:                                              ; preds = %250, %224
  %259 = bitcast i8* %222 to i32*
  %260 = load i32, i32* %259, align 4
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds i8, i8* %222, i64 %261
  %263 = bitcast i8* %262 to %"class.flatbuffers::Vector.54"*
  br label %264

264:                                              ; preds = %217, %176, %258
  %265 = phi %"class.flatbuffers::Vector.54"* [ %263, %258 ], [ null, %176 ], [ null, %217 ]
  %266 = tail call zeroext i1 @_ZN11flatbuffers8Verifier20VerifyVectorOfTablesIN13safe_browsing4flat10MatchRule_15FloatColorRangeEEEbPKNS_6VectorINS_6OffsetIT_EEEE(%"class.flatbuffers::Verifier"* %1, %"class.flatbuffers::Vector.54"* %265)
  br i1 %266, label %267, label %270

267:                                              ; preds = %264
  %268 = load i32, i32* %26, align 8
  %269 = add i32 %268, -1
  store i32 %269, i32* %26, align 8
  br label %270

270:                                              ; preds = %147, %111, %117, %153, %124, %212, %236, %246, %240, %197, %207, %201, %155, %119, %42, %21, %10, %35, %46, %56, %14, %267, %264, %250, %173, %159, %92, %78, %60
  %271 = phi i1 [ false, %264 ], [ false, %250 ], [ false, %212 ], [ false, %173 ], [ false, %159 ], [ false, %124 ], [ false, %92 ], [ false, %78 ], [ false, %60 ], [ true, %267 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %117 ], [ false, %119 ], [ false, %111 ], [ false, %153 ], [ false, %155 ], [ false, %147 ], [ false, %201 ], [ false, %207 ], [ false, %197 ], [ false, %240 ], [ false, %246 ], [ false, %236 ]
  ret i1 %271
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11flatbuffers8Verifier20VerifyVectorOfTablesIN13safe_browsing4flat10MatchRule_10ColorRangeEEEbPKNS_6VectorINS_6OffsetIT_EEEE(%"class.flatbuffers::Verifier"*, %"class.flatbuffers::Vector.53"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.flatbuffers::Vector.53"* %1, null
  br i1 %3, label %111, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"class.flatbuffers::Vector.53", %"class.flatbuffers::Vector.53"* %1, i64 1, i32 0
  %7 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.flatbuffers::Vector.53", %"class.flatbuffers::Vector.53"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %111, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %13 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %17 = load i64, i64* %12, align 8
  %18 = inttoptr i64 %17 to i8*
  br label %19

19:                                               ; preds = %11, %106
  %20 = phi i64 [ 0, %11 ], [ %107, %106 ]
  %21 = getelementptr inbounds i32, i32* %6, i64 %20
  %22 = bitcast i32* %21 to i8*
  %23 = load i32, i32* %21, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %22, i64 %24
  %26 = bitcast i8* %25 to %"struct.safe_browsing::flat::MatchRule_::ColorRange"*
  %27 = ptrtoint i8* %25 to i64
  %28 = sub i64 %27, %17
  %29 = and i64 %28, 3
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %19
  %32 = load i8, i8* %5, align 8, !range !23
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %111

34:                                               ; preds = %31, %19
  %35 = load i64, i64* %13, align 8
  %36 = icmp ugt i64 %35, 4
  %37 = add i64 %35, -4
  %38 = icmp uge i64 %37, %28
  %39 = and i1 %36, %38
  br i1 %39, label %40, label %111

40:                                               ; preds = %34
  %41 = bitcast i8* %25 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = sub i64 %28, %43
  %45 = load i32, i32* %14, align 8
  %46 = add i32 %45, 1
  store i32 %46, i32* %14, align 8
  %47 = load i32, i32* %15, align 8
  %48 = add i32 %47, 1
  store i32 %48, i32* %15, align 8
  %49 = load i32, i32* %16, align 4
  %50 = icmp ugt i32 %46, %49
  br i1 %50, label %111, label %51

51:                                               ; preds = %40
  %52 = load i32, i32* %7, align 4
  %53 = icmp ugt i32 %48, %52
  br i1 %53, label %111, label %54

54:                                               ; preds = %51
  %55 = and i64 %44, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i8, i8* %5, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %111

60:                                               ; preds = %57, %54
  %61 = add i64 %35, -2
  %62 = icmp ult i64 %61, %44
  br i1 %62, label %111, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds i8, i8* %18, i64 %44
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i64
  %68 = and i64 %67, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  %71 = load i8, i8* %5, align 8, !range !23
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %111

73:                                               ; preds = %63, %70
  %74 = icmp ugt i64 %35, %67
  %75 = sub i64 %35, %67
  %76 = icmp uge i64 %75, %44
  %77 = and i1 %74, %76
  br i1 %77, label %78, label %111

78:                                               ; preds = %73
  %79 = load i32, i32* %41, align 4
  %80 = sext i32 %79 to i64
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds %"struct.safe_browsing::flat::MatchRule_::ColorRange", %"struct.safe_browsing::flat::MatchRule_::ColorRange"* %26, i64 0, i32 0, i32 0, i64 %81
  %83 = bitcast i8* %82 to i16*
  %84 = load i16, i16* %83, align 2
  %85 = icmp ugt i16 %84, 4
  br i1 %85, label %86, label %106

86:                                               ; preds = %78
  %87 = getelementptr inbounds i8, i8* %82, i64 4
  %88 = bitcast i8* %87 to i16*
  %89 = load i16, i16* %88, align 2
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %86
  %92 = zext i16 %89 to i64
  %93 = add i64 %28, %92
  %94 = icmp ult i64 %37, %93
  br i1 %94, label %111, label %95

95:                                               ; preds = %91, %86
  %96 = icmp ugt i16 %84, 6
  br i1 %96, label %97, label %106

97:                                               ; preds = %95
  %98 = getelementptr inbounds i8, i8* %82, i64 6
  %99 = bitcast i8* %98 to i16*
  %100 = load i16, i16* %99, align 2
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %97
  %103 = zext i16 %100 to i64
  %104 = add i64 %28, %103
  %105 = icmp ult i64 %37, %104
  br i1 %105, label %111, label %106

106:                                              ; preds = %102, %97, %95, %78
  store i32 %45, i32* %14, align 8
  %107 = add nuw nsw i64 %20, 1
  %108 = load i32, i32* %8, align 4
  %109 = zext i32 %108 to i64
  %110 = icmp ult i64 %107, %109
  br i1 %110, label %19, label %111

111:                                              ; preds = %106, %73, %34, %70, %60, %51, %31, %40, %57, %91, %102, %4, %2
  %112 = phi i1 [ true, %2 ], [ true, %4 ], [ true, %106 ], [ false, %102 ], [ false, %91 ], [ false, %73 ], [ false, %34 ], [ false, %70 ], [ false, %60 ], [ false, %51 ], [ false, %31 ], [ false, %40 ], [ false, %57 ]
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11flatbuffers8Verifier20VerifyVectorOfTablesIN13safe_browsing4flat10MatchRule_15FloatColorRangeEEEbPKNS_6VectorINS_6OffsetIT_EEEE(%"class.flatbuffers::Verifier"*, %"class.flatbuffers::Vector.54"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.flatbuffers::Vector.54"* %1, null
  br i1 %3, label %111, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"class.flatbuffers::Vector.54", %"class.flatbuffers::Vector.54"* %1, i64 1, i32 0
  %7 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.flatbuffers::Vector.54", %"class.flatbuffers::Vector.54"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %111, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %13 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %17 = load i64, i64* %12, align 8
  %18 = inttoptr i64 %17 to i8*
  br label %19

19:                                               ; preds = %11, %106
  %20 = phi i64 [ 0, %11 ], [ %107, %106 ]
  %21 = getelementptr inbounds i32, i32* %6, i64 %20
  %22 = bitcast i32* %21 to i8*
  %23 = load i32, i32* %21, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %22, i64 %24
  %26 = bitcast i8* %25 to %"struct.safe_browsing::flat::MatchRule_::FloatColorRange"*
  %27 = ptrtoint i8* %25 to i64
  %28 = sub i64 %27, %17
  %29 = and i64 %28, 3
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %19
  %32 = load i8, i8* %5, align 8, !range !23
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %111

34:                                               ; preds = %31, %19
  %35 = load i64, i64* %13, align 8
  %36 = icmp ugt i64 %35, 4
  %37 = add i64 %35, -4
  %38 = icmp uge i64 %37, %28
  %39 = and i1 %36, %38
  br i1 %39, label %40, label %111

40:                                               ; preds = %34
  %41 = bitcast i8* %25 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = sub i64 %28, %43
  %45 = load i32, i32* %14, align 8
  %46 = add i32 %45, 1
  store i32 %46, i32* %14, align 8
  %47 = load i32, i32* %15, align 8
  %48 = add i32 %47, 1
  store i32 %48, i32* %15, align 8
  %49 = load i32, i32* %16, align 4
  %50 = icmp ugt i32 %46, %49
  br i1 %50, label %111, label %51

51:                                               ; preds = %40
  %52 = load i32, i32* %7, align 4
  %53 = icmp ugt i32 %48, %52
  br i1 %53, label %111, label %54

54:                                               ; preds = %51
  %55 = and i64 %44, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i8, i8* %5, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %111

60:                                               ; preds = %57, %54
  %61 = add i64 %35, -2
  %62 = icmp ult i64 %61, %44
  br i1 %62, label %111, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds i8, i8* %18, i64 %44
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i64
  %68 = and i64 %67, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  %71 = load i8, i8* %5, align 8, !range !23
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %111

73:                                               ; preds = %63, %70
  %74 = icmp ugt i64 %35, %67
  %75 = sub i64 %35, %67
  %76 = icmp uge i64 %75, %44
  %77 = and i1 %74, %76
  br i1 %77, label %78, label %111

78:                                               ; preds = %73
  %79 = load i32, i32* %41, align 4
  %80 = sext i32 %79 to i64
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds %"struct.safe_browsing::flat::MatchRule_::FloatColorRange", %"struct.safe_browsing::flat::MatchRule_::FloatColorRange"* %26, i64 0, i32 0, i32 0, i64 %81
  %83 = bitcast i8* %82 to i16*
  %84 = load i16, i16* %83, align 2
  %85 = icmp ugt i16 %84, 4
  br i1 %85, label %86, label %106

86:                                               ; preds = %78
  %87 = getelementptr inbounds i8, i8* %82, i64 4
  %88 = bitcast i8* %87 to i16*
  %89 = load i16, i16* %88, align 2
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %86
  %92 = zext i16 %89 to i64
  %93 = add i64 %28, %92
  %94 = icmp ult i64 %37, %93
  br i1 %94, label %111, label %95

95:                                               ; preds = %91, %86
  %96 = icmp ugt i16 %84, 6
  br i1 %96, label %97, label %106

97:                                               ; preds = %95
  %98 = getelementptr inbounds i8, i8* %82, i64 6
  %99 = bitcast i8* %98 to i16*
  %100 = load i16, i16* %99, align 2
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %97
  %103 = zext i16 %100 to i64
  %104 = add i64 %28, %103
  %105 = icmp ult i64 %37, %104
  br i1 %105, label %111, label %106

106:                                              ; preds = %102, %97, %95, %78
  store i32 %45, i32* %14, align 8
  %107 = add nuw nsw i64 %20, 1
  %108 = load i32, i32* %8, align 4
  %109 = zext i32 %108 to i64
  %110 = icmp ult i64 %107, %109
  br i1 %110, label %19, label %111

111:                                              ; preds = %106, %73, %34, %70, %60, %51, %31, %40, %57, %91, %102, %4, %2
  %112 = phi i1 [ true, %2 ], [ true, %4 ], [ true, %106 ], [ false, %102 ], [ false, %91 ], [ false, %73 ], [ false, %34 ], [ false, %70 ], [ false, %60 ], [ false, %51 ], [ false, %31 ], [ false, %40 ], [ false, %57 ]
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat19TfLiteModelMetadata6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::TfLiteModelMetadata"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::TfLiteModelMetadata"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %222

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %222

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::TfLiteModelMetadata"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %222, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %222, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %222

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %222, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %222

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %222

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::TfLiteModelMetadata", %"struct.safe_browsing::flat::TfLiteModelMetadata"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %181

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %222, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %181

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = and i64 %91, 3
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %96 = load i8, i8* %95, align 8, !range !23
  %97 = icmp ne i8 %96, 0
  %98 = icmp ult i64 %18, %91
  %99 = or i1 %97, %98
  br i1 %99, label %222, label %102

100:                                              ; preds = %89
  %101 = icmp ult i64 %18, %91
  br i1 %101, label %222, label %102

102:                                              ; preds = %94, %100
  %103 = getelementptr inbounds i8, i8* %9, i64 %91
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %222

107:                                              ; preds = %102
  %108 = zext i32 %105 to i64
  %109 = add i64 %91, %108
  %110 = add i64 %16, -1
  %111 = icmp ult i64 %110, %109
  br i1 %111, label %222, label %112

112:                                              ; preds = %107, %84
  %113 = getelementptr inbounds i8, i8* %69, i64 6
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds %"struct.safe_browsing::flat::TfLiteModelMetadata", %"struct.safe_browsing::flat::TfLiteModelMetadata"* %0, i64 0, i32 0, i32 0, i64 %116
  %118 = icmp eq i16 %115, 0
  br i1 %118, label %181, label %119

119:                                              ; preds = %112
  %120 = bitcast i8* %117 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %117, i64 %122
  %124 = icmp eq i8* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %119
  %126 = ptrtoint i8* %123 to i64
  %127 = sub i64 %126, %4
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %132 = load i8, i8* %131, align 8, !range !23
  %133 = icmp ne i8 %132, 0
  %134 = icmp ult i64 %18, %127
  %135 = or i1 %133, %134
  br i1 %135, label %222, label %138

136:                                              ; preds = %125
  %137 = icmp ult i64 %18, %127
  br i1 %137, label %222, label %138

138:                                              ; preds = %130, %136
  %139 = bitcast i8* %123 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp ult i32 %140, 536870911
  br i1 %141, label %142, label %222

142:                                              ; preds = %138
  %143 = zext i32 %140 to i64
  %144 = shl nuw nsw i64 %143, 2
  %145 = add nuw nsw i64 %144, 4
  %146 = icmp ugt i64 %16, %145
  %147 = sub i64 %16, %145
  %148 = icmp uge i64 %147, %127
  %149 = and i1 %146, %148
  br i1 %149, label %150, label %222

150:                                              ; preds = %142, %119
  %151 = bitcast i8* %117 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %117, i64 %153
  %155 = icmp eq i8* %154, null
  br i1 %155, label %181, label %156

156:                                              ; preds = %150
  %157 = bitcast i8* %154 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %181, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds i8, i8* %154, i64 4
  %162 = bitcast i8* %161 to i32*
  br label %167

163:                                              ; preds = %167
  %164 = load i32, i32* %157, align 4
  %165 = zext i32 %164 to i64
  %166 = icmp ult i64 %176, %165
  br i1 %166, label %167, label %177

167:                                              ; preds = %163, %160
  %168 = phi i64 [ 0, %160 ], [ %176, %163 ]
  %169 = getelementptr inbounds i32, i32* %162, i64 %168
  %170 = bitcast i32* %169 to i8*
  %171 = load i32, i32* %169, align 4
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds i8, i8* %170, i64 %172
  %174 = bitcast i8* %173 to %"struct.safe_browsing::flat::ClientSideModel_::Threshold"*
  %175 = tail call zeroext i1 @_ZNK13safe_browsing4flat16ClientSideModel_9Threshold6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::ClientSideModel_::Threshold"* %174, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #9
  %176 = add nuw nsw i64 %168, 1
  br i1 %175, label %163, label %222

177:                                              ; preds = %163
  %178 = load i32, i32* %22, align 4
  %179 = sext i32 %178 to i64
  %180 = sub nsw i64 0, %179
  br label %181

181:                                              ; preds = %112, %82, %65, %177, %150, %156
  %182 = phi i64 [ %180, %177 ], [ %68, %150 ], [ %68, %156 ], [ %68, %65 ], [ %68, %82 ], [ %68, %112 ]
  %183 = getelementptr inbounds %"struct.safe_browsing::flat::TfLiteModelMetadata", %"struct.safe_browsing::flat::TfLiteModelMetadata"* %0, i64 0, i32 0, i32 0, i64 %182
  %184 = bitcast i8* %183 to i16*
  %185 = load i16, i16* %184, align 2
  %186 = icmp ugt i16 %185, 8
  br i1 %186, label %187, label %219

187:                                              ; preds = %181
  %188 = getelementptr inbounds i8, i8* %183, i64 8
  %189 = bitcast i8* %188 to i16*
  %190 = load i16, i16* %189, align 2
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %202, label %192

192:                                              ; preds = %187
  %193 = load i64, i64* %3, align 8
  %194 = zext i16 %190 to i64
  %195 = add i64 %194, %5
  %196 = sub i64 %195, %193
  %197 = load i64, i64* %15, align 8
  %198 = icmp ugt i64 %197, 4
  %199 = add i64 %197, -4
  %200 = icmp uge i64 %199, %196
  %201 = and i1 %198, %200
  br i1 %201, label %202, label %222

202:                                              ; preds = %187, %192
  %203 = icmp ugt i16 %185, 10
  br i1 %203, label %204, label %219

204:                                              ; preds = %202
  %205 = getelementptr inbounds i8, i8* %183, i64 10
  %206 = bitcast i8* %205 to i16*
  %207 = load i16, i16* %206, align 2
  %208 = icmp eq i16 %207, 0
  br i1 %208, label %219, label %209

209:                                              ; preds = %204
  %210 = load i64, i64* %3, align 8
  %211 = zext i16 %207 to i64
  %212 = add i64 %211, %5
  %213 = sub i64 %212, %210
  %214 = load i64, i64* %15, align 8
  %215 = icmp ugt i64 %214, 4
  %216 = add i64 %214, -4
  %217 = icmp uge i64 %216, %213
  %218 = and i1 %215, %217
  br i1 %218, label %219, label %222

219:                                              ; preds = %181, %202, %204, %209
  %220 = load i32, i32* %26, align 8
  %221 = add i32 %220, -1
  store i32 %221, i32* %26, align 8
  br label %222

222:                                              ; preds = %167, %130, %94, %100, %78, %136, %107, %138, %102, %42, %21, %10, %35, %46, %56, %14, %219, %209, %192, %142, %60
  %223 = phi i1 [ false, %209 ], [ false, %192 ], [ false, %142 ], [ false, %107 ], [ false, %78 ], [ false, %60 ], [ true, %219 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %100 ], [ false, %102 ], [ false, %94 ], [ false, %136 ], [ false, %138 ], [ false, %130 ], [ false, %167 ]
  ret i1 %223
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK13safe_browsing4flat16ClientSideModel_9Threshold6VerifyERN11flatbuffers8VerifierE(%"struct.safe_browsing::flat::ClientSideModel_::Threshold"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.safe_browsing::flat::ClientSideModel_::Threshold"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %158

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %158

21:                                               ; preds = %14
  %22 = bitcast %"struct.safe_browsing::flat::ClientSideModel_::Threshold"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %158, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %158, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !23
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %158

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %158, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !23
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %158

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %158

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel_::Threshold", %"struct.safe_browsing::flat::ClientSideModel_::Threshold"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %157

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !23
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %158, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %158, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %158

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %158, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.safe_browsing::flat::ClientSideModel_::Threshold", %"struct.safe_browsing::flat::ClientSideModel_::Threshold"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %146, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %146, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !23
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %158, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %158, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 2147483647
  br i1 %130, label %131, label %158

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = add nuw nsw i64 %132, 4
  %134 = add i64 %133, %116
  %135 = icmp ule i64 %16, %133
  %136 = sub i64 %16, %133
  %137 = icmp ult i64 %136, %116
  %138 = or i1 %135, %137
  %139 = add i64 %16, -1
  %140 = icmp ult i64 %139, %134
  %141 = or i1 %140, %138
  br i1 %141, label %158, label %142

142:                                              ; preds = %131
  %143 = getelementptr inbounds i8, i8* %9, i64 %134
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %158

146:                                              ; preds = %101, %108, %142
  %147 = icmp ugt i16 %71, 6
  br i1 %147, label %148, label %157

148:                                              ; preds = %146
  %149 = getelementptr inbounds i8, i8* %69, i64 6
  %150 = bitcast i8* %149 to i16*
  %151 = load i16, i16* %150, align 2
  %152 = icmp eq i16 %151, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %148
  %154 = zext i16 %151 to i64
  %155 = add i64 %6, %154
  %156 = icmp ult i64 %18, %155
  br i1 %156, label %158, label %157

157:                                              ; preds = %65, %153, %146, %148
  store i32 %27, i32* %26, align 8
  br label %158

158:                                              ; preds = %119, %83, %89, %125, %153, %96, %131, %127, %91, %42, %21, %10, %35, %46, %56, %14, %157, %142, %60
  %159 = phi i1 [ false, %153 ], [ false, %142 ], [ false, %96 ], [ false, %60 ], [ true, %157 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %131 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %159
}

declare void @_ZN13safe_browsing15ClientSideModelC2EPN6google8protobuf5ArenaE(%"class.safe_browsing::ClientSideModel"*, %"class.google::protobuf::Arena"*) unnamed_addr #1

declare void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"*, %"class.base::FilePath"* dereferenceable(24), i32) unnamed_addr #1

declare i64 @_ZN4base4File9GetLengthEv(%"class.base::File"*) local_unnamed_addr #1

declare i32 @_ZN4base4File16ReadAtCurrentPosEPci(%"class.base::File"*, i8*, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !23
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E9instance_E monotonic, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %2 to %"class.safe_browsing::ClientSidePhishingModel"*
  %6 = inttoptr i64 %2 to void (%"class.safe_browsing::ClientSidePhishingModel"*)***
  %7 = load void (%"class.safe_browsing::ClientSidePhishingModel"*)**, void (%"class.safe_browsing::ClientSidePhishingModel"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.safe_browsing::ClientSidePhishingModel"*)*, void (%"class.safe_browsing::ClientSidePhishingModel"*)** %7, i64 1
  %9 = load void (%"class.safe_browsing::ClientSidePhishingModel"*)*, void (%"class.safe_browsing::ClientSidePhishingModel"*)** %8, align 8
  tail call void %9(%"class.safe_browsing::ClientSidePhishingModel"* nonnull %5) #9
  br label %10

10:                                               ; preds = %1, %4
  store i64 0, i64* @_ZN4base9SingletonIN13safe_browsing23ClientSidePhishingModelENS1_37ClientSidePhishingModelSingletonTraitES2_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEE14CancelCallbackERKNSt3__115__list_iteratorINS_17RepeatingCallbackIS3_EEPvEE(%"class.base::internal::CallbackListBase"*, %"class.std::__1::__list_iterator"* dereferenceable(8)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !23
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__list_iterator"* %1 to %"struct.std::__1::__list_node"**
  %8 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %8, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %9) #9
  br label %37

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %1, i64 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"* %12 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64**
  %23 = load i64*, i64** %22, align 8
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 1
  %28 = bitcast %"struct.std::__1::__list_node_base"* %27 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %28) #9
  %29 = bitcast %"struct.std::__1::__list_node_base"* %12 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  %30 = getelementptr inbounds %"class.base::internal::CallbackListBase", %"class.base::internal::CallbackListBase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %30, align 8
  %32 = icmp eq %"class.base::internal::BindStateBase"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %10
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %31, i64 0, i32 1
  %35 = bitcast void ()** %34 to void (%"class.base::internal::BindStateBase"*)**
  %36 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %35, align 8
  tail call void %36(%"class.base::internal::BindStateBase"* nonnull %31) #9
  br label %37

37:                                               ; preds = %10, %33, %6
  ret void
}

declare void @_ZN4base24CallbackListSubscriptionC1ENS_12OnceCallbackIFvvEEE(%"class.base::CallbackListSubscription"*, %"class.base::OnceCallback"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS5_EEPvEEEJNS_7WeakPtrIS7_EESD_EEES5_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.std::__1::__list_iterator"*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #9
  br i1 %8, label %9, label %44

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.base::internal::CallbackListBase"**
  %12 = load %"class.base::internal::CallbackListBase"*, %"class.base::internal::CallbackListBase"** %11, align 8
  %13 = icmp eq %"class.base::internal::CallbackListBase"* %12, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #9
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #9
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.base::internal::CallbackListBase"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.base::internal::CallbackListBase"*, %"class.std::__1::__list_iterator"*)**
  %39 = load void (%"class.base::internal::CallbackListBase"*, %"class.std::__1::__list_iterator"*)*, void (%"class.base::internal::CallbackListBase"*, %"class.std::__1::__list_iterator"*)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.base::internal::CallbackListBase"*, %"class.std::__1::__list_iterator"*)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.base::internal::CallbackListBase"*, %"class.std::__1::__list_iterator"*)* [ %39, %33 ], [ %41, %40 ]
  call void %43(%"class.base::internal::CallbackListBase"* %30, %"class.std::__1::__list_iterator"* dereferenceable(8) %6) #9
  br label %44

44:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS4_EEPvEEEJNS_7WeakPtrIS6_EESC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS5_EEPvEEEJNS_7WeakPtrIS7_EESD_EEEEEbPKNS0_13BindStateBaseENSL_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::CallbackListBase"**
  %9 = load %"class.base::internal::CallbackListBase"*, %"class.base::internal::CallbackListBase"** %8, align 8
  %10 = icmp ne %"class.base::internal::CallbackListBase"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.safe_browsing::ClientSidePhishingModel"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.safe_browsing::ClientSidePhishingModel"*)**
  %21 = load void (%"class.safe_browsing::ClientSidePhishingModel"*)*, void (%"class.safe_browsing::ClientSidePhishingModel"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.safe_browsing::ClientSidePhishingModel"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.safe_browsing::ClientSidePhishingModel"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.safe_browsing::ClientSidePhishingModel"* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN4base17RepeatingCallbackIFvvEEENS_9allocatorIS4_EEE9remove_ifIZNS1_8internal16CallbackListBaseINS1_21RepeatingCallbackListIS3_EEE6NotifyIJEEEvDpOT_EUlTyRKT_E_EEvSI_(%"class.std::__1::list"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::list", align 8
  %3 = bitcast %"class.std::__1::list"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %4, align 8
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %5, align 8
  store i64 0, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::__list_node_base"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %12 = inttoptr i64 %10 to %"struct.std::__1::__list_node_base"*
  %13 = icmp eq %"struct.std::__1::__list_node_base"* %11, %12
  br i1 %13, label %42, label %14

14:                                               ; preds = %1
  %15 = icmp eq %"class.std::__1::list"* %2, %0
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %43

17:                                               ; preds = %119
  %18 = load i64, i64* %6, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %42, label %20

20:                                               ; preds = %17
  %21 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %5, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %120, i64 0, i32 1
  %23 = bitcast %"struct.std::__1::__list_node_base"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %21, i64 0, i32 0
  %26 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %28 = bitcast %"struct.std::__1::__list_node_base"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"struct.std::__1::__list_node_base"* %21 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"struct.std::__1::__list_node_base"** %22 to i64**
  %32 = load i64*, i64** %31, align 8
  store i64 %30, i64* %32, align 8
  store i64 0, i64* %6, align 8
  %33 = icmp eq %"struct.std::__1::__list_node_base"* %21, %7
  br i1 %33, label %42, label %34

34:                                               ; preds = %20, %34
  %35 = phi %"struct.std::__1::__list_node_base"* [ %37, %34 ], [ %21, %20 ]
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 0, i32 1
  %37 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__list_node_base"* %38 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %39) #9
  %40 = bitcast %"struct.std::__1::__list_node_base"* %35 to i8*
  call void @_ZdlPv(i8* %40) #10
  %41 = icmp eq %"struct.std::__1::__list_node_base"* %37, %7
  br i1 %41, label %42, label %34

42:                                               ; preds = %34, %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #9
  ret void

43:                                               ; preds = %14, %119
  %44 = phi %"struct.std::__1::__list_node_base"* [ %7, %14 ], [ %120, %119 ]
  %45 = phi %"struct.std::__1::__list_node_base"* [ %12, %14 ], [ %122, %119 ]
  %46 = phi i64 [ %10, %14 ], [ %121, %119 ]
  %47 = inttoptr i64 %46 to %"struct.std::__1::__list_node"*
  %48 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %47, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %48, align 8
  %50 = icmp eq %"class.base::internal::BindStateBase"* %49, null
  %51 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %45, i64 0, i32 1
  %52 = bitcast %"struct.std::__1::__list_node_base"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  br i1 %50, label %54, label %119

54:                                               ; preds = %43
  %55 = inttoptr i64 %53 to %"struct.std::__1::__list_node_base"*
  %56 = icmp eq %"struct.std::__1::__list_node_base"* %11, %55
  br i1 %56, label %70, label %57

57:                                               ; preds = %54, %64
  %58 = phi %"struct.std::__1::__list_node_base"* [ %68, %64 ], [ %55, %54 ]
  %59 = phi i64 [ %67, %64 ], [ %53, %54 ]
  %60 = inttoptr i64 %59 to %"struct.std::__1::__list_node"*
  %61 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %60, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %61, align 8
  %63 = icmp eq %"class.base::internal::BindStateBase"* %62, null
  br i1 %63, label %64, label %70

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %58, i64 0, i32 1
  %66 = bitcast %"struct.std::__1::__list_node_base"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = inttoptr i64 %67 to %"struct.std::__1::__list_node_base"*
  %69 = icmp eq %"struct.std::__1::__list_node_base"* %11, %68
  br i1 %69, label %70, label %57

70:                                               ; preds = %57, %64, %54
  %71 = phi i64 [ %53, %54 ], [ %59, %57 ], [ %67, %64 ]
  %72 = phi %"struct.std::__1::__list_node_base"* [ %11, %54 ], [ %58, %57 ], [ %11, %64 ]
  %73 = phi i1 [ false, %54 ], [ true, %57 ], [ false, %64 ]
  %74 = icmp eq %"struct.std::__1::__list_node_base"* %45, %72
  br i1 %74, label %113, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 0, i32 0
  %77 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %76, align 8
  br i1 %15, label %98, label %78

78:                                               ; preds = %75
  %79 = icmp eq %"struct.std::__1::__list_node_base"* %77, %45
  br i1 %79, label %92, label %80

80:                                               ; preds = %78
  %81 = icmp eq %"struct.std::__1::__list_node_base"* %77, %55
  br i1 %81, label %89, label %82

82:                                               ; preds = %80, %82
  %83 = phi i64 [ %85, %82 ], [ 0, %80 ]
  %84 = phi %"struct.std::__1::__list_node_base"* [ %87, %82 ], [ %55, %80 ]
  %85 = add nuw nsw i64 %83, 1
  %86 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %84, i64 0, i32 1
  %87 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %86, align 8
  %88 = icmp eq %"struct.std::__1::__list_node_base"* %87, %77
  br i1 %88, label %89, label %82

89:                                               ; preds = %82, %80
  %90 = phi i64 [ 0, %80 ], [ %85, %82 ]
  %91 = add nuw i64 %90, 2
  br label %92

92:                                               ; preds = %89, %78
  %93 = phi i64 [ 1, %78 ], [ %91, %89 ]
  %94 = load i64, i64* %16, align 8
  %95 = sub i64 %94, %93
  store i64 %95, i64* %16, align 8
  %96 = load i64, i64* %6, align 8
  %97 = add i64 %96, %93
  store i64 %97, i64* %6, align 8
  br label %98

98:                                               ; preds = %92, %75
  %99 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %77, i64 0, i32 1
  %100 = bitcast %"struct.std::__1::__list_node_base"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %45, i64 0, i32 0
  %103 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %103, i64 0, i32 1
  %105 = bitcast %"struct.std::__1::__list_node_base"** %104 to i64*
  store i64 %101, i64* %105, align 8
  %106 = inttoptr i64 %46 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"struct.std::__1::__list_node_base"** %99 to i64**
  %109 = load i64*, i64** %108, align 8
  store i64 %107, i64* %109, align 8
  %110 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %4, align 8
  %111 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %110, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %45, %"struct.std::__1::__list_node_base"** %111, align 8
  %112 = ptrtoint %"struct.std::__1::__list_node_base"* %110 to i64
  store i64 %112, i64* %106, align 8
  store %"struct.std::__1::__list_node_base"* %77, %"struct.std::__1::__list_node_base"** %4, align 8
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %99, align 8
  br label %113

113:                                              ; preds = %70, %98
  %114 = phi %"struct.std::__1::__list_node_base"* [ %44, %70 ], [ %77, %98 ]
  br i1 %73, label %115, label %119

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 0, i32 1
  %117 = bitcast %"struct.std::__1::__list_node_base"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  br label %119

119:                                              ; preds = %43, %113, %115
  %120 = phi %"struct.std::__1::__list_node_base"* [ %114, %115 ], [ %114, %113 ], [ %44, %43 ]
  %121 = phi i64 [ %118, %115 ], [ %71, %113 ], [ %53, %43 ]
  %122 = inttoptr i64 %121 to %"struct.std::__1::__list_node_base"*
  %123 = icmp eq %"struct.std::__1::__list_node_base"* %11, %122
  br i1 %123, label %17, label %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_8FilePathEEJSA_EEEFS9_vEE7RunOnceEPNS0_13BindStateBaseE(%"class.std::__1::basic_string"* noalias sret, %"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %3 = alloca %"class.base::FilePath", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.std::__1::basic_string"*, %"class.base::FilePath"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::FilePath"*
  %8 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9, !noalias !55
  %9 = load void (%"class.std::__1::basic_string"*, %"class.base::FilePath"*)*, void (%"class.std::__1::basic_string"*, %"class.base::FilePath"*)** %5, align 8, !noalias !60
  call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* nonnull %3, %"class.base::FilePath"* dereferenceable(24) %7) #9, !noalias !60
  call void %9(%"class.std::__1::basic_string"* sret %0, %"class.base::FilePath"* nonnull %3) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9, !noalias !55
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8FilePathEEJS9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::FilePath"*
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvNS3_12CSDModelTypeERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EES5_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_(%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i32*
  %9 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 %13
  %15 = bitcast i8* %14 to %"class.safe_browsing::ClientSidePhishingModel"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.safe_browsing::ClientSidePhishingModel"*, i32, %"class.std::__1::basic_string"*)**
  %24 = load void (%"class.safe_browsing::ClientSidePhishingModel"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.safe_browsing::ClientSidePhishingModel"*, i32, %"class.std::__1::basic_string"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %10 to void (%"class.safe_browsing::ClientSidePhishingModel"*, i32, %"class.std::__1::basic_string"*)*
  br label %27

27:                                               ; preds = %18, %25
  %28 = phi void (%"class.safe_browsing::ClientSidePhishingModel"*, i32, %"class.std::__1::basic_string"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = load i32, i32* %8, align 4
  tail call void %28(%"class.safe_browsing::ClientSidePhishingModel"* %15, i32 %29, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN13safe_browsing23ClientSidePhishingModelEFvNS2_12CSDModelTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN4base10ThreadPool16PostTaskAndReplyERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEES9_(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20ReturnAsParamAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvNS_12OnceCallbackIFT_vEEEPNS2_10unique_ptrISA_NS2_14default_deleteISA_EEEE(%"class.base::OnceCallback.40"*, %"class.std::__1::unique_ptr.101"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.40", align 8
  %4 = tail call i8* @_Znwm(i64 24) #10
  %5 = bitcast i8* %4 to %"class.std::__1::basic_string"*
  %6 = bitcast %"class.base::OnceCallback.40"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9, !noalias !63
  %7 = getelementptr inbounds %"class.base::OnceCallback.40", %"class.base::OnceCallback.40"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.40"* %0 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !63
  %10 = bitcast %"class.base::OnceCallback.40"* %3 to i64*
  store i64 %9, i64* %10, align 8, !noalias !63
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8, !noalias !63
  %11 = getelementptr inbounds %"class.base::OnceCallback.40", %"class.base::OnceCallback.40"* %3, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*)*, void (%"class.std::__1::basic_string"*, %"class.base::internal::BindStateBase"*)** %14, align 8, !noalias !63
  tail call void %15(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::internal::BindStateBase"* %12) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9, !noalias !63
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.101"* %1 to i8**
  store i8* %4, i8** %18, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %25, %20
  %29 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12ReplyAdapterINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKS8_EEvNS_12OnceCallbackIFvT0_EEEPNS2_10unique_ptrIT_NS2_14default_deleteISG_EEEE(%"class.base::OnceCallback.41"*, %"class.std::__1::unique_ptr.101"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.41", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = bitcast %"class.base::OnceCallback.41"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.base::OnceCallback.41", %"class.base::OnceCallback.41"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.41"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.41"* %3 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.41", %"class.base::OnceCallback.41"* %3, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %5) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEvEEEPNS4_10unique_ptrISA_NS4_14default_deleteISA_EEEEEJSC_SH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.40", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.40"*, %"class.std::__1::unique_ptr.101"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.101"**
  %8 = bitcast %"class.base::OnceCallback.40"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = load void (%"class.base::OnceCallback.40"*, %"class.std::__1::unique_ptr.101"*)*, void (%"class.base::OnceCallback.40"*, %"class.std::__1::unique_ptr.101"*)** %4, align 8
  %10 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %11 = bitcast void ()** %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.40"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = load %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"** %7, align 8
  call void %9(%"class.base::OnceCallback.40"* nonnull %2, %"class.std::__1::unique_ptr.101"* %14) #9
  %15 = getelementptr inbounds %"class.base::OnceCallback.40", %"class.base::OnceCallback.40"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEvEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSB_SG_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEEPNS4_10unique_ptrISA_NS4_14default_deleteISA_EEEEEJSE_NS0_12OwnedWrapperISI_NSG_ISI_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.41", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.41"*, %"class.std::__1::unique_ptr.101"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.101"**
  %8 = load %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"** %7, align 8
  %9 = bitcast %"class.base::OnceCallback.41"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = load void (%"class.base::OnceCallback.41"*, %"class.std::__1::unique_ptr.101"*)*, void (%"class.base::OnceCallback.41"*, %"class.std::__1::unique_ptr.101"*)** %4, align 8
  %11 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.41"* %2 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void %10(%"class.base::OnceCallback.41"* nonnull %2, %"class.std::__1::unique_ptr.101"* %8) #9
  %15 = getelementptr inbounds %"class.base::OnceCallback.41", %"class.base::OnceCallback.41"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSD_NS0_12OwnedWrapperISH_NSF_ISH_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %28, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::unique_ptr.101"**
  %6 = load %"class.std::__1::unique_ptr.101"*, %"class.std::__1::unique_ptr.101"** %5, align 8
  store %"class.std::__1::unique_ptr.101"* null, %"class.std::__1::unique_ptr.101"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.101"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %17, %12
  %21 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %20, %8
  %23 = bitcast %"class.std::__1::unique_ptr.101"* %6 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %3, %22
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %26 = bitcast void ()** %25 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %26) #9
  %27 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %24, %1
  ret void
}

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_8FilePathEEJRSA_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_8FilePathEEJRSA_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_8FilePathEEJRS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_8FilePathEEJRS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13safe_browsing23ClientSidePhishingModelEFvNS3_12CSDModelTypeERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EERS5_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13safe_browsing23ClientSidePhishingModelEFvNS3_12CSDModelTypeERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EERS5_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN13safe_browsing23ClientSidePhishingModelEFvNS1_12CSDModelTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEJNS_8internal17UnretainedWrapperIS2_EERS3_EEENS_12OnceCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN13safe_browsing23ClientSidePhishingModelEFvNS1_12CSDModelTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEJNS_8internal17UnretainedWrapperIS2_EERS3_EEENS_12OnceCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEvEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSB_RSG_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEvEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSB_RSG_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEvEEEPNS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEEEJSA_RSF_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEvEEEPNS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEEEJSA_RSF_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSD_NS0_12OwnedWrapperISH_NSF_ISH_EEEEEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPNS3_10unique_ptrIS9_NS3_14default_deleteIS9_EEEEEJSD_NS0_12OwnedWrapperISH_NSF_ISH_EEEEEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEPNS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEEEJSC_NS_8internal12OwnedWrapperISG_NSE_ISG_EEEEEEENS1_INSK_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEPNS2_10unique_ptrIS8_NS2_14default_deleteIS8_EEEEEJSC_NS_8internal12OwnedWrapperISG_NSE_ISG_EEEEEEENS1_INSK_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!22 = !{!"branch_weights", i32 2000, i32 1}
!23 = !{i8 0, i8 2}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base14WeakPtrFactoryINS_8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEE10GetWeakPtrEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base14WeakPtrFactoryINS_8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEE10GetWeakPtrEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__14listIN4base17RepeatingCallbackIFvvEEENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__14listIN4base17RepeatingCallbackIFvvEEENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS5_EEPvEEEJNS_7WeakPtrIS7_EESD_EEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS0_16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS5_EEPvEEEJNS_7WeakPtrIS7_EESD_EEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base8BindOnceIMNS_8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS4_EEPvEEEJNS_7WeakPtrIS6_EESC_EEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8BindOnceIMNS_8internal16CallbackListBaseINS_21RepeatingCallbackListIFvvEEEEEFvRKNSt3__115__list_iteratorINS_17RepeatingCallbackIS4_EEPvEEEJNS_7WeakPtrIS6_EESC_EEENS_12OnceCallbackINS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!38 = distinct !{!38, !39, !"_ZN4base8BindOnceIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8BindOnceIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !46}
!46 = !{!"llvm.loop.isvectorized", i32 1}
!47 = distinct !{!47, !48}
!48 = !{!"llvm.loop.unroll.disable"}
!49 = distinct !{!49, !46}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!52 = distinct !{!52, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN13safe_browsing23ClientSidePhishingModelEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!53 = distinct !{!53, !54, !"_ZN4base8BindOnceIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!54 = distinct !{!54, !"_ZN4base8BindOnceIMN13safe_browsing23ClientSidePhishingModelEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!55 = !{!56, !58}
!56 = distinct !{!56, !57, !"_ZN4base8internal12InvokeHelperILb0ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE8MakeItSoIPFS8_NS_8FilePathEEJSB_EEES8_OT_DpOT0_: argument 0"}
!57 = distinct !{!57, !"_ZN4base8internal12InvokeHelperILb0ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE8MakeItSoIPFS8_NS_8FilePathEEJSB_EEES8_OT_DpOT0_"}
!58 = distinct !{!58, !59, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_8FilePathEEJSA_EEEFS9_vEE7RunImplISC_NS3_5tupleIJSA_EEEJLm0EEEES9_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEE: argument 0"}
!59 = distinct !{!59, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_8FilePathEEJSA_EEEFS9_vEE7RunImplISC_NS3_5tupleIJSA_EEEJLm0EEEES9_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEE"}
!60 = !{!61, !56, !58}
!61 = distinct !{!61, !62, !"_ZN4base8internal13FunctorTraitsIPFNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8FilePathEEvE6InvokeISB_JS9_EEES8_OT_DpOT0_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8internal13FunctorTraitsIPFNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8FilePathEEvE6InvokeISB_JS9_EEES8_OT_DpOT0_"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNO4base12OnceCallbackIFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEvEE3RunEv: argument 0"}
!65 = distinct !{!65, !"_ZNO4base12OnceCallbackIFNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEvEE3RunEv"}
