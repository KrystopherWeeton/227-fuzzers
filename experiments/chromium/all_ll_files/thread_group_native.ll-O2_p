; ModuleID = '../../base/task/thread_pool/thread_group_native.cc'
source_filename = "../../base/task/thread_pool/thread_group_native.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::internal::ThreadGroupNative" = type { %"class.base::internal::ThreadGroup", i32, i8, i64 }
%"class.base::internal::ThreadGroup" = type { i32 (...)**, %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef.0", %"class.base::internal::CheckedLock", i8, [7 x i8], %"class.base::internal::PriorityQueue", %"struct.std::__1::atomic", %"class.base::internal::ThreadGroup"* }
%"class.base::internal::TrackedRef" = type { %"class.base::internal::TaskTracker"*, %"class.base::internal::TrackedRefFactory"* }
%"class.base::internal::TaskTracker" = type { i32 (...)**, %"class.base::TaskAnnotator", %"class.std::__1::basic_string", i8, %"class.std::__1::unique_ptr", %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.29", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.33", %"class.base::OnceCallback", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.45", %"class.base::internal::TrackedRefFactory" }
%"class.base::TaskAnnotator" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.22 }
%union.anon.22 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::internal::TaskTracker::State"* }
%"class.base::internal::TaskTracker::State" = type opaque
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.base::ConditionVariable"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.36, %union.anon.38, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.36 = type { i64 }
%union.anon.38 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.44", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.3" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.base::WaitableEvent"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.base::internal::TrackedRefFactory" = type { %"class.base::internal::TaskTracker"*, %"class.base::AtomicRefCount", [4 x i8], %"class.absl::optional", %"class.absl::optional.13" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"class.base::WaitableEvent" }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.base::internal::TrackedRef" }
%"class.base::internal::TrackedRef.0" = type { %"class.base::internal::ThreadGroup::Delegate"*, %"class.base::internal::TrackedRefFactory.1"* }
%"class.base::internal::ThreadGroup::Delegate" = type { i32 (...)** }
%"class.base::internal::TrackedRefFactory.1" = type { %"class.base::internal::ThreadGroup::Delegate"*, %"class.base::AtomicRefCount", [4 x i8], %"class.absl::optional", %"class.absl::optional.73" }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"class.base::internal::TrackedRef.0" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::internal::PriorityQueue" = type <{ %"class.base::internal::IntrusiveHeap", %"struct.std::__1::array", i8, [7 x i8] }>
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey, base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::Impl" }
%"struct.base::IntrusiveHeap<base::internal::PriorityQueue::TaskSourceAndSortKey, base::internal::IntrusiveHeapImpl<base::internal::PriorityQueue::TaskSourceAndSortKey>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::internal::PriorityQueue::TaskSourceAndSortKey> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::PriorityQueue::TaskSourceAndSortKey"*, %"class.base::internal::PriorityQueue::TaskSourceAndSortKey"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::PriorityQueue::TaskSourceAndSortKey" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::PriorityQueue::TaskSourceAndSortKey"* }
%"struct.std::__1::array" = type { [3 x i64] }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"struct.base::internal::ThreadGroup::YieldSortKey" }
%"struct.base::internal::ThreadGroup::YieldSortKey" = type { i8, i8 }
%"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor" = type { %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative"*, i64 }
%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor" = type { %"class.std::__1::vector.51" }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"*, %"class.std::__1::__compressed_pair.61" }
%"class.base::internal::RegisteredTaskSource" = type { %class.scoped_refptr.53, %"class.base::internal::TaskTracker"* }
%class.scoped_refptr.53 = type { %"class.base::internal::TaskSource"* }
%"class.base::internal::TaskSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.54", %"class.base::TaskTraits", %"struct.std::__1::atomic.56", [4 x i8], %"class.base::internal::CheckedLock", %"class.base::HeapHandle", %"class.base::TaskRunner"*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array.55" }
%"struct.std::__1::array.55" = type { [8 x i8] }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.base::HeapHandle" = type { i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.60", [4 x i8] }>
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.base::internal::RegisteredTaskSource"* }
%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor" = type { %"class.absl::optional.66", %"class.base::internal::ThreadGroup"* }
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, %union.anon.70 }
%union.anon.70 = type { %"struct.base::internal::TransactionWithRegisteredTaskSource" }
%"struct.base::internal::TransactionWithRegisteredTaskSource" = type { %"class.base::internal::RegisteredTaskSource", %"class.base::internal::TaskSource::Transaction" }
%"class.base::internal::TaskSource::Transaction" = type { %"class.base::internal::TaskSource"* }
%"class.base::internal::TaskSourceSortKey" = type { i8, i8, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

@_ZTVN4base8internal17ThreadGroupNativeE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::ThreadGroupNative"*)* @_ZN4base8internal17ThreadGroupNativeD2Ev to i8*), i8* bitcast (void (%"class.base::internal::ThreadGroupNative"*)* @_ZN4base8internal17ThreadGroupNativeD0Ev to i8*), i8* bitcast (void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::TaskSource::Transaction"*)* @_ZN4base8internal17ThreadGroupNative13UpdateSortKeyENS0_10TaskSource11TransactionE to i8*), i8* bitcast (void (%"class.base::internal::ThreadGroupNative"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*)* @_ZN4base8internal17ThreadGroupNative30PushTaskSourceAndWakeUpWorkersENS0_35TransactionWithRegisteredTaskSourceE to i8*), i8* bitcast (void (%"class.base::internal::ThreadGroupNative"*)* @_ZN4base8internal17ThreadGroupNative14JoinForTestingEv to i8*), i8* bitcast (i64 (%"class.base::internal::ThreadGroupNative"*)* @_ZNK4base8internal17ThreadGroupNative41GetMaxConcurrentNonBlockedTasksDeprecatedEv to i8*), i8* bitcast (void (%"class.base::internal::ThreadGroupNative"*)* @_ZN4base8internal17ThreadGroupNative21DidUpdateCanRunPolicyEv to i8*), i8* bitcast (void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)* @_ZN4base8internal17ThreadGroupNative31EnsureEnoughWorkersLockRequiredEPNS0_11ThreadGroup26BaseScopedCommandsExecutorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN4base8internal17ThreadGroupNativeD1Ev = hidden unnamed_addr alias void (%"class.base::internal::ThreadGroupNative"*), void (%"class.base::internal::ThreadGroupNative"*)* @_ZN4base8internal17ThreadGroupNativeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNativeC2ENS0_10TrackedRefINS0_11TaskTrackerEEENS2_INS0_11ThreadGroup8DelegateEEEPS5_(%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::TrackedRef"* nocapture, %"class.base::internal::TrackedRef.0"* nocapture, %"class.base::internal::ThreadGroup"*) unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.base::internal::TrackedRef"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.base::internal::TrackedRef.0"*
  %9 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef"* %6, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::internal::TrackedRef", %"class.base::internal::TrackedRef"* %1, i64 0, i32 1
  %12 = bitcast %"class.base::internal::TrackedRef"* %1 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  store <2 x i64> %13, <2 x i64>* %5, align 16
  store %"class.base::internal::TrackedRefFactory"* null, %"class.base::internal::TrackedRefFactory"** %11, align 8
  %14 = getelementptr inbounds %"class.base::internal::TrackedRef.0", %"class.base::internal::TrackedRef.0"* %8, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::internal::TrackedRef.0", %"class.base::internal::TrackedRef.0"* %2, i64 0, i32 1
  %16 = bitcast %"class.base::internal::TrackedRef.0"* %2 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  store <2 x i64> %17, <2 x i64>* %7, align 16
  store %"class.base::internal::TrackedRefFactory.1"* null, %"class.base::internal::TrackedRefFactory.1"** %15, align 8
  call void @_ZN4base8internal11ThreadGroupC2ENS0_10TrackedRefINS0_11TaskTrackerEEENS2_INS1_8DelegateEEEPS1_(%"class.base::internal::ThreadGroup"* %9, %"class.base::internal::TrackedRef"* nonnull %6, %"class.base::internal::TrackedRef.0"* nonnull %8, %"class.base::internal::ThreadGroup"* %3) #6
  %18 = load %"class.base::internal::TrackedRefFactory.1"*, %"class.base::internal::TrackedRefFactory.1"** %14, align 8
  %19 = icmp eq %"class.base::internal::TrackedRefFactory.1"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.1", %"class.base::internal::TrackedRefFactory.1"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = load %"class.base::internal::TrackedRefFactory.1"*, %"class.base::internal::TrackedRefFactory.1"** %14, align 8
  %26 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.1", %"class.base::internal::TrackedRefFactory.1"* %25, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %24
  call void @llvm.trap() #6
  unreachable

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::internal::TrackedRefFactory.1", %"class.base::internal::TrackedRefFactory.1"* %25, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %31) #6
  br label %32

32:                                               ; preds = %4, %20, %30
  %33 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %10, align 8
  %34 = icmp eq %"class.base::internal::TrackedRefFactory"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %33, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %47

39:                                               ; preds = %35
  %40 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %10, align 8
  %41 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %40, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %39
  call void @llvm.trap() #6
  unreachable

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %40, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %46) #6
  br label %47

47:                                               ; preds = %32, %35, %45
  %48 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4base8internal17ThreadGroupNativeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 1
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 2
  store i8 0, i8* %50, align 4
  %51 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 3
  store i64 0, i64* %51, align 8
  ret void
}

declare void @_ZN4base8internal11ThreadGroupC2ENS0_10TrackedRefINS0_11TaskTrackerEEENS2_INS1_8DelegateEEEPS1_(%"class.base::internal::ThreadGroup"*, %"class.base::internal::TrackedRef"*, %"class.base::internal::TrackedRef.0"*, %"class.base::internal::ThreadGroup"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11ThreadGroupD2Ev(%"class.base::internal::ThreadGroup"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNativeD2Ev(%"class.base::internal::ThreadGroupNative"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal11ThreadGroupD2Ev(%"class.base::internal::ThreadGroup"* %2) #6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNativeD0Ev(%"class.base::internal::ThreadGroupNative"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNative5StartENS0_11ThreadGroup17WorkerEnvironmentE(%"class.base::internal::ThreadGroupNative"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", align 8
  %4 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal11ThreadGroup5StartEv(%"class.base::internal::ThreadGroup"* %4) #6
  %5 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = bitcast %"class.base::internal::ThreadGroupNative"* %0 to void (%"class.base::internal::ThreadGroupNative"*)***
  %7 = load void (%"class.base::internal::ThreadGroupNative"*)**, void (%"class.base::internal::ThreadGroupNative"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %7, i64 9
  %9 = load void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %8, align 8
  tail call void %9(%"class.base::internal::ThreadGroupNative"* %0) #6
  %10 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 2
  %13 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 0
  %14 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %13) #6
  store %"class.base::internal::ThreadGroupNative"* %0, %"class.base::internal::ThreadGroupNative"** %11, align 8
  store i64 0, i64* %12, align 8
  %15 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 3
  %16 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %16) #6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19, !prof !4

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %15, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %20) #6
  br label %21

21:                                               ; preds = %2, %19
  %22 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 2
  store i8 1, i8* %22, align 4
  %23 = bitcast %"class.base::internal::ThreadGroupNative"* %0 to void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)***
  %24 = load void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)**, void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %24, i64 7
  %26 = load void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %25, align 8
  call void %26(%"class.base::internal::ThreadGroupNative"* %0, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %13) #6
  %27 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %16) #6
  %28 = load i64, i64* %12, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %21, %30
  %31 = phi i64 [ %37, %30 ], [ 0, %21 ]
  %32 = load %"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroupNative"** %11, align 8
  %33 = bitcast %"class.base::internal::ThreadGroupNative"* %32 to void (%"class.base::internal::ThreadGroupNative"*)***
  %34 = load void (%"class.base::internal::ThreadGroupNative"*)**, void (%"class.base::internal::ThreadGroupNative"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %34, i64 10
  %36 = load void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %35, align 8
  call void %36(%"class.base::internal::ThreadGroupNative"* %32) #6
  %37 = add nuw i64 %31, 1
  %38 = load i64, i64* %12, align 8
  %39 = icmp ult i64 %37, %38
  br i1 %39, label %30, label %40

40:                                               ; preds = %30, %21
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #6
  ret void
}

declare void @_ZN4base8internal11ThreadGroup5StartEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNative14JoinForTestingEv(%"class.base::internal::ThreadGroupNative"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 3
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 6
  tail call void @_ZN4base8internal13PriorityQueue41EnableFlushTaskSourcesOnDestroyForTestingEv(%"class.base::internal::PriorityQueue"* %9) #6
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #6
  %11 = bitcast %"class.base::internal::ThreadGroupNative"* %0 to void (%"class.base::internal::ThreadGroupNative"*)***
  %12 = load void (%"class.base::internal::ThreadGroupNative"*)**, void (%"class.base::internal::ThreadGroupNative"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %12, i64 8
  %14 = load void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %13, align 8
  tail call void %14(%"class.base::internal::ThreadGroupNative"* %0) #6
  ret void
}

declare void @_ZN4base8internal13PriorityQueue41EnableFlushTaskSourcesOnDestroyForTestingEv(%"class.base::internal::PriorityQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNative21RunNextTaskSourceImplEv(%"class.base::internal::ThreadGroupNative"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %3 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %4 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %5 = alloca %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", align 8
  %6 = alloca %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", align 8
  %7 = alloca %"struct.base::internal::TransactionWithRegisteredTaskSource", align 8
  %8 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %9 = alloca %"struct.base::internal::TransactionWithRegisteredTaskSource", align 8
  %10 = bitcast %"class.base::internal::RegisteredTaskSource"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %2, i64 0, i32 0, i32 0
  %12 = bitcast %"class.base::internal::RegisteredTaskSource"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @_ZN4base8internal17ThreadGroupNative7GetWorkEv(%"class.base::internal::RegisteredTaskSource"* nonnull sret %2, %"class.base::internal::ThreadGroupNative"* %0)
  %13 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %11, align 8
  %14 = icmp eq %"class.base::internal::TaskSource"* %13, null
  br i1 %14, label %57, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0
  call void @_ZN4base8internal11ThreadGroup19BindToCurrentThreadEv(%"class.base::internal::ThreadGroup"* %16) #6
  %17 = bitcast %"class.base::internal::RegisteredTaskSource"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #6
  %18 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 1, i32 0
  %19 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %18, align 8
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %4, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %2) #6
  call void @_ZN4base8internal11TaskTracker17RunAndPopNextTaskENS0_20RegisteredTaskSourceE(%"class.base::internal::RegisteredTaskSource"* nonnull sret %3, %"class.base::internal::TaskTracker"* %19, %"class.base::internal::RegisteredTaskSource"* nonnull %4) #6
  %20 = call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %2, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %3) #6
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %3) #6
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #6
  call void @_ZN4base8internal11ThreadGroup23UnbindFromCurrentThreadEv(%"class.base::internal::ThreadGroup"* %16) #6
  %21 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %11, align 8
  %22 = icmp eq %"class.base::internal::TaskSource"* %21, null
  br i1 %22, label %57, label %23

23:                                               ; preds = %15
  %24 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #6
  %25 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %5, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %5, i64 0, i32 2
  %27 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %5, i64 0, i32 0
  %28 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %27) #6
  store %"class.base::internal::ThreadGroupNative"* %0, %"class.base::internal::ThreadGroupNative"** %25, align 8
  store i64 0, i64* %26, align 8
  %29 = getelementptr inbounds %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor", %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorC1Ev(%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* nonnull %6) #6
  %30 = bitcast %"struct.base::internal::TransactionWithRegisteredTaskSource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #6
  %31 = bitcast %"struct.base::internal::TransactionWithRegisteredTaskSource"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %8, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %2) #6
  call void @_ZN4base8internal35TransactionWithRegisteredTaskSource14FromTaskSourceENS0_20RegisteredTaskSourceE(%"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull sret %7, %"class.base::internal::RegisteredTaskSource"* nonnull %8) #6
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %8) #6
  %32 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 3
  %33 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %33) #6
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36, !prof !4

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %32, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %37) #6
  br label %38

38:                                               ; preds = %23, %36
  %39 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %9, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %7, i64 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %39, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %40) #6
  %41 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %9, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %7, i64 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* %41, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8) %42) #6
  call void @_ZN4base8internal11ThreadGroup31ReEnqueueTaskSourceLockRequiredEPNS1_26BaseScopedCommandsExecutorEPNS1_23ScopedReenqueueExecutorENS0_35TransactionWithRegisteredTaskSourceE(%"class.base::internal::ThreadGroup"* %16, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %27, %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* nonnull %6, %"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull %9) #6
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %41) #6
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %39) #6
  %43 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %33) #6
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %42) #6
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %40) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #6
  call void @_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorD1Ev(%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #6
  %44 = load i64, i64* %26, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %38, %46
  %47 = phi i64 [ %53, %46 ], [ 0, %38 ]
  %48 = load %"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroupNative"** %25, align 8
  %49 = bitcast %"class.base::internal::ThreadGroupNative"* %48 to void (%"class.base::internal::ThreadGroupNative"*)***
  %50 = load void (%"class.base::internal::ThreadGroupNative"*)**, void (%"class.base::internal::ThreadGroupNative"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %50, i64 10
  %52 = load void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %51, align 8
  call void %52(%"class.base::internal::ThreadGroupNative"* %48) #6
  %53 = add nuw i64 %47, 1
  %54 = load i64, i64* %26, align 8
  %55 = icmp ult i64 %53, %54
  br i1 %55, label %46, label %56

56:                                               ; preds = %46, %38
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #6
  br label %57

57:                                               ; preds = %15, %1, %56
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNative7GetWorkEv(%"class.base::internal::RegisteredTaskSource"* noalias sret, %"class.base::internal::ThreadGroupNative"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", align 8
  %4 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %5 = alloca %"class.base::internal::RegisteredTaskSource", align 8
  %6 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 0
  %10 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %9) #6
  store %"class.base::internal::ThreadGroupNative"* %1, %"class.base::internal::ThreadGroupNative"** %7, align 8
  store i64 0, i64* %8, align 8
  %11 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %1, i64 0, i32 0, i32 3
  %13 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %13) #6
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16, !prof !4

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %17) #6
  br label %18

18:                                               ; preds = %2, %16
  %19 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %1, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = bitcast %"class.base::internal::RegisteredTaskSource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #6
  %23 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %4, i64 0, i32 0, i32 0
  %24 = bitcast %"class.base::internal::RegisteredTaskSource"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  call void @_ZN4base8internal20RegisteredTaskSourceC1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %4) #6
  %25 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %23, align 8
  %26 = icmp eq %"class.base::internal::TaskSource"* %25, null
  br i1 %26, label %27, label %44

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %1, i64 0, i32 0, i32 6
  %29 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %1, i64 0, i32 0, i32 1, i32 0
  %30 = bitcast %"class.base::internal::RegisteredTaskSource"* %5 to i8*
  br label %31

31:                                               ; preds = %27, %40
  %32 = call zeroext i1 @_ZNK4base8internal13PriorityQueue7IsEmptyEv(%"class.base::internal::PriorityQueue"* %28) #6
  br i1 %32, label %44, label %33

33:                                               ; preds = %31
  %34 = call dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"* %28) #6
  %35 = getelementptr inbounds %"class.base::internal::TaskSourceSortKey", %"class.base::internal::TaskSourceSortKey"* %34, i64 0, i32 0
  %36 = load i8, i8* %35, align 8
  %37 = load %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskTracker"** %29, align 8
  %38 = call zeroext i1 @_ZNK4base8internal11TaskTracker14CanRunPriorityENS_12TaskPriorityE(%"class.base::internal::TaskTracker"* %37, i8 zeroext %36) #6
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @_ZN4base8internal20RegisteredTaskSourceC1EDn(%"class.base::internal::RegisteredTaskSource"* %0, i8* null) #6
  br label %62

40:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #6
  call void @_ZN4base8internal11ThreadGroup24TakeRegisteredTaskSourceEPNS1_26BaseScopedCommandsExecutorE(%"class.base::internal::RegisteredTaskSource"* nonnull sret %5, %"class.base::internal::ThreadGroup"* %11, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %9) #6
  %41 = call dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %4, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %5) #6
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #6
  %42 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %23, align 8
  %43 = icmp eq %"class.base::internal::TaskSource"* %42, null
  br i1 %43, label %31, label %44

44:                                               ; preds = %31, %40, %18
  %45 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %1, i64 0, i32 0, i32 6
  %46 = call zeroext i1 @_ZNK4base8internal13PriorityQueue7IsEmptyEv(%"class.base::internal::PriorityQueue"* %45) #6
  %47 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %1, i64 0, i32 0, i32 7, i32 0
  br i1 %46, label %59, label %48

48:                                               ; preds = %44
  %49 = call dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"* %45) #6
  %50 = getelementptr inbounds %"class.base::internal::TaskSourceSortKey", %"class.base::internal::TaskSourceSortKey"* %49, i64 0, i32 0
  %51 = load i8, i8* %50, align 8
  %52 = call dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"* %45) #6
  %53 = getelementptr inbounds %"class.base::internal::TaskSourceSortKey", %"class.base::internal::TaskSourceSortKey"* %52, i64 0, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = shl nuw i16 %55, 8
  %57 = zext i8 %51 to i16
  %58 = or i16 %56, %57
  br label %59

59:                                               ; preds = %44, %48
  %60 = phi i16 [ %58, %48 ], [ 0, %44 ]
  %61 = bitcast %"struct.std::__1::__atomic_base"* %47 to i16*
  store atomic i16 %60, i16* %61 monotonic, align 2
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %0, %"class.base::internal::RegisteredTaskSource"* nonnull dereferenceable(16) %4) #6
  br label %62

62:                                               ; preds = %59, %39
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #6
  %63 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #6
  %64 = load i64, i64* %8, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %62, %66
  %67 = phi i64 [ %73, %66 ], [ 0, %62 ]
  %68 = load %"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroupNative"** %7, align 8
  %69 = bitcast %"class.base::internal::ThreadGroupNative"* %68 to void (%"class.base::internal::ThreadGroupNative"*)***
  %70 = load void (%"class.base::internal::ThreadGroupNative"*)**, void (%"class.base::internal::ThreadGroupNative"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %70, i64 10
  %72 = load void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %71, align 8
  call void %72(%"class.base::internal::ThreadGroupNative"* %68) #6
  %73 = add nuw i64 %67, 1
  %74 = load i64, i64* %8, align 8
  %75 = icmp ult i64 %73, %74
  br i1 %75, label %66, label %76

76:                                               ; preds = %66, %62
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #6
  ret void
}

declare void @_ZN4base8internal11ThreadGroup19BindToCurrentThreadEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #1

declare void @_ZN4base8internal11TaskTracker17RunAndPopNextTaskENS0_20RegisteredTaskSourceE(%"class.base::internal::RegisteredTaskSource"* sret, %"class.base::internal::TaskTracker"*, %"class.base::internal::RegisteredTaskSource"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) unnamed_addr #2

declare dereferenceable(16) %"class.base::internal::RegisteredTaskSource"* @_ZN4base8internal20RegisteredTaskSourceaSEOS1_(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"*) unnamed_addr #2

declare void @_ZN4base8internal11ThreadGroup23UnbindFromCurrentThreadEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #1

declare void @_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorC1Ev(%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*) unnamed_addr #1

declare void @_ZN4base8internal35TransactionWithRegisteredTaskSource14FromTaskSourceENS0_20RegisteredTaskSourceE(%"struct.base::internal::TransactionWithRegisteredTaskSource"* sret, %"class.base::internal::RegisteredTaskSource"*) local_unnamed_addr #1

declare void @_ZN4base8internal11ThreadGroup31ReEnqueueTaskSourceLockRequiredEPNS1_26BaseScopedCommandsExecutorEPNS1_23ScopedReenqueueExecutorENS0_35TransactionWithRegisteredTaskSourceE(%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*, %"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11ThreadGroup23ScopedReenqueueExecutorD1Ev(%"class.base::internal::ThreadGroup::ScopedReenqueueExecutor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNative36UpdateMinAllowedPriorityLockRequiredEv(%"class.base::internal::ThreadGroupNative"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 6
  %3 = tail call zeroext i1 @_ZNK4base8internal13PriorityQueue7IsEmptyEv(%"class.base::internal::PriorityQueue"* %2) #6
  %4 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 7, i32 0
  br i1 %3, label %16, label %5

5:                                                ; preds = %1
  %6 = tail call dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"* %2) #6
  %7 = getelementptr inbounds %"class.base::internal::TaskSourceSortKey", %"class.base::internal::TaskSourceSortKey"* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = tail call dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"* %2) #6
  %10 = getelementptr inbounds %"class.base::internal::TaskSourceSortKey", %"class.base::internal::TaskSourceSortKey"* %9, i64 0, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i16
  %13 = shl nuw i16 %12, 8
  %14 = zext i8 %8 to i16
  %15 = or i16 %13, %14
  br label %16

16:                                               ; preds = %1, %5
  %17 = phi i16 [ %15, %5 ], [ 0, %1 ]
  %18 = bitcast %"struct.std::__1::__atomic_base"* %4 to i16*
  store atomic i16 %17, i16* %18 monotonic, align 2
  ret void
}

declare zeroext i1 @_ZNK4base8internal13PriorityQueue7IsEmptyEv(%"class.base::internal::PriorityQueue"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"*) local_unnamed_addr #1

declare void @_ZN4base8internal20RegisteredTaskSourceC1Ev(%"class.base::internal::RegisteredTaskSource"*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal11TaskTracker14CanRunPriorityENS_12TaskPriorityE(%"class.base::internal::TaskTracker"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN4base8internal20RegisteredTaskSourceC1EDn(%"class.base::internal::RegisteredTaskSource"*, i8*) unnamed_addr #1

declare void @_ZN4base8internal11ThreadGroup24TakeRegisteredTaskSourceEPNS1_26BaseScopedCommandsExecutorE(%"class.base::internal::RegisteredTaskSource"* sret, %"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNative13UpdateSortKeyENS0_10TaskSource11TransactionE(%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::TaskSource::Transaction"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", align 8
  %4 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %5 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 0
  %9 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %8) #6
  store %"class.base::internal::ThreadGroupNative"* %0, %"class.base::internal::ThreadGroupNative"** %6, align 8
  store i64 0, i64* %7, align 8
  %10 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* nonnull %4, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8) %1) #6
  call void @_ZN4base8internal11ThreadGroup17UpdateSortKeyImplEPNS1_26BaseScopedCommandsExecutorENS0_10TaskSource11TransactionE(%"class.base::internal::ThreadGroup"* %10, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %8, %"class.base::internal::TaskSource::Transaction"* nonnull %4) #6
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %4) #6
  %11 = load i64, i64* %7, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %2, %13
  %14 = phi i64 [ %20, %13 ], [ 0, %2 ]
  %15 = load %"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroupNative"** %6, align 8
  %16 = bitcast %"class.base::internal::ThreadGroupNative"* %15 to void (%"class.base::internal::ThreadGroupNative"*)***
  %17 = load void (%"class.base::internal::ThreadGroupNative"*)**, void (%"class.base::internal::ThreadGroupNative"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %17, i64 10
  %19 = load void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %18, align 8
  call void %19(%"class.base::internal::ThreadGroupNative"* %15) #6
  %20 = add nuw i64 %14, 1
  %21 = load i64, i64* %7, align 8
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %13, label %23

23:                                               ; preds = %13, %2
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #6
  ret void
}

declare void @_ZN4base8internal11ThreadGroup17UpdateSortKeyImplEPNS1_26BaseScopedCommandsExecutorENS0_10TaskSource11TransactionE(%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*, %"class.base::internal::TaskSource::Transaction"*) local_unnamed_addr #1

declare void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"*, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNative30PushTaskSourceAndWakeUpWorkersENS0_35TransactionWithRegisteredTaskSourceE(%"class.base::internal::ThreadGroupNative"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", align 8
  %4 = alloca %"struct.base::internal::TransactionWithRegisteredTaskSource", align 8
  %5 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3, i64 0, i32 0
  %9 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %8) #6
  store %"class.base::internal::ThreadGroupNative"* %0, %"class.base::internal::ThreadGroupNative"** %6, align 8
  store i64 0, i64* %7, align 8
  %10 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %1, i64 0, i32 0
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* nonnull %11, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %12) #6
  %13 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %4, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.base::internal::TransactionWithRegisteredTaskSource", %"struct.base::internal::TransactionWithRegisteredTaskSource"* %1, i64 0, i32 1
  call void @_ZN4base8internal10TaskSource11TransactionC1EOS2_(%"class.base::internal::TaskSource::Transaction"* %13, %"class.base::internal::TaskSource::Transaction"* dereferenceable(8) %14) #6
  call void @_ZN4base8internal11ThreadGroup34PushTaskSourceAndWakeUpWorkersImplEPNS1_26BaseScopedCommandsExecutorENS0_35TransactionWithRegisteredTaskSourceE(%"class.base::internal::ThreadGroup"* %10, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %8, %"struct.base::internal::TransactionWithRegisteredTaskSource"* nonnull %4) #6
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* %13) #6
  call void @_ZN4base8internal20RegisteredTaskSourceD1Ev(%"class.base::internal::RegisteredTaskSource"* nonnull %11) #6
  %15 = load i64, i64* %7, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %2, %17
  %18 = phi i64 [ %24, %17 ], [ 0, %2 ]
  %19 = load %"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroupNative"** %6, align 8
  %20 = bitcast %"class.base::internal::ThreadGroupNative"* %19 to void (%"class.base::internal::ThreadGroupNative"*)***
  %21 = load void (%"class.base::internal::ThreadGroupNative"*)**, void (%"class.base::internal::ThreadGroupNative"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %21, i64 10
  %23 = load void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %22, align 8
  call void %23(%"class.base::internal::ThreadGroupNative"* %19) #6
  %24 = add nuw i64 %18, 1
  %25 = load i64, i64* %7, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %17, label %27

27:                                               ; preds = %17, %2
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #6
  ret void
}

declare void @_ZN4base8internal11ThreadGroup34PushTaskSourceAndWakeUpWorkersImplEPNS1_26BaseScopedCommandsExecutorENS0_35TransactionWithRegisteredTaskSourceE(%"class.base::internal::ThreadGroup"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*, %"struct.base::internal::TransactionWithRegisteredTaskSource"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNative31EnsureEnoughWorkersLockRequiredEPNS0_11ThreadGroup26BaseScopedCommandsExecutorE(%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0
  %8 = tail call i64 @_ZNK4base8internal11ThreadGroup59GetNumAdditionalWorkersForBestEffortTaskSourcesLockRequiredEv(%"class.base::internal::ThreadGroup"* %7) #6
  %9 = tail call i64 @_ZNK4base8internal11ThreadGroup59GetNumAdditionalWorkersForForegroundTaskSourcesLockRequiredEv(%"class.base::internal::ThreadGroup"* %7) #6
  %10 = add i64 %9, %8
  %11 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = sub i64 %10, %12
  %16 = getelementptr inbounds %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor", %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* %1, i64 1, i32 0, i32 0, i32 1
  %17 = bitcast %"class.base::internal::RegisteredTaskSource"** %16 to i64*
  store i64 %15, i64* %17, align 8
  store i64 %10, i64* %11, align 8
  br label %18

18:                                               ; preds = %14, %6
  %19 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 6
  %20 = tail call zeroext i1 @_ZNK4base8internal13PriorityQueue7IsEmptyEv(%"class.base::internal::PriorityQueue"* %19) #6
  %21 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 7, i32 0
  br i1 %20, label %33, label %22

22:                                               ; preds = %18
  %23 = tail call dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"* %19) #6
  %24 = getelementptr inbounds %"class.base::internal::TaskSourceSortKey", %"class.base::internal::TaskSourceSortKey"* %23, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = tail call dereferenceable(16) %"class.base::internal::TaskSourceSortKey"* @_ZNK4base8internal13PriorityQueue11PeekSortKeyEv(%"class.base::internal::PriorityQueue"* %19) #6
  %27 = getelementptr inbounds %"class.base::internal::TaskSourceSortKey", %"class.base::internal::TaskSourceSortKey"* %26, i64 0, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw i16 %29, 8
  %31 = zext i8 %25 to i16
  %32 = or i16 %30, %31
  br label %33

33:                                               ; preds = %18, %22
  %34 = phi i16 [ %32, %22 ], [ 0, %18 ]
  %35 = bitcast %"struct.std::__1::__atomic_base"* %21 to i16*
  store atomic i16 %34, i16* %35 monotonic, align 2
  br label %36

36:                                               ; preds = %33, %2
  ret void
}

declare i64 @_ZNK4base8internal11ThreadGroup59GetNumAdditionalWorkersForBestEffortTaskSourcesLockRequiredEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #1

declare i64 @_ZNK4base8internal11ThreadGroup59GetNumAdditionalWorkersForForegroundTaskSourcesLockRequiredEv(%"class.base::internal::ThreadGroup"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base8internal17ThreadGroupNative41GetMaxConcurrentNonBlockedTasksDeprecatedEv(%"class.base::internal::ThreadGroupNative"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() #6
  %3 = icmp sgt i32 %2, 4
  %4 = select i1 %3, i32 %2, i32 4
  %5 = add nsw i32 %4, -1
  %6 = sext i32 %5 to i64
  ret i64 %6
}

declare i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17ThreadGroupNative21DidUpdateCanRunPolicyEv(%"class.base::internal::ThreadGroupNative"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", align 8
  %3 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #6
  %4 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %2, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %2, i64 0, i32 2
  %6 = getelementptr inbounds %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor", %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %2, i64 0, i32 0
  %7 = bitcast %"class.base::internal::ThreadGroupNative::ScopedCommandsExecutor"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %6) #6
  store %"class.base::internal::ThreadGroupNative"* %0, %"class.base::internal::ThreadGroupNative"** %4, align 8
  store i64 0, i64* %5, align 8
  %8 = getelementptr inbounds %"class.base::internal::ThreadGroupNative", %"class.base::internal::ThreadGroupNative"* %0, i64 0, i32 0, i32 3
  %9 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !4

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #6
  br label %14

14:                                               ; preds = %1, %12
  %15 = bitcast %"class.base::internal::ThreadGroupNative"* %0 to void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)***
  %16 = load void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)**, void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %16, i64 7
  %18 = load void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)*, void (%"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*)** %17, align 8
  call void %18(%"class.base::internal::ThreadGroupNative"* %0, %"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %6) #6
  %19 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #6
  %20 = load i64, i64* %5, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %14, %22
  %23 = phi i64 [ %29, %22 ], [ 0, %14 ]
  %24 = load %"class.base::internal::ThreadGroupNative"*, %"class.base::internal::ThreadGroupNative"** %4, align 8
  %25 = bitcast %"class.base::internal::ThreadGroupNative"* %24 to void (%"class.base::internal::ThreadGroupNative"*)***
  %26 = load void (%"class.base::internal::ThreadGroupNative"*)**, void (%"class.base::internal::ThreadGroupNative"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %26, i64 10
  %28 = load void (%"class.base::internal::ThreadGroupNative"*)*, void (%"class.base::internal::ThreadGroupNative"*)** %27, align 8
  call void %28(%"class.base::internal::ThreadGroupNative"* %24) #6
  %29 = add nuw i64 %23, 1
  %30 = load i64, i64* %5, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %22, label %32

32:                                               ; preds = %22, %14
  call void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #6
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorC2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11ThreadGroup26BaseScopedCommandsExecutorD2Ev(%"class.base::internal::ThreadGroup::BaseScopedCommandsExecutor"*) unnamed_addr #2

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
