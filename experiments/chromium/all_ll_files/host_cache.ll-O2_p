; ModuleID = '../../net/dns/host_cache.cc'
source_filename = "../../net/dns/host_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::HostCache::EntryStaleness" = type { %"class.base::TimeDelta", i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.std::nothrow_t" = type { i8 }
%"struct.net::HostCache::Key" = type <{ %"class.std::__1::basic_string", i32, i32, i32, [4 x i8], %"class.net::NetworkIsolationKey", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.2" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::HostCache::Entry" = type <{ i32, [4 x i8], %"class.absl::optional.7", %"class.absl::optional.24", %"class.absl::optional.29", %"class.absl::optional.41", i32, i8, [3 x i8], %"class.base::TimeDelta", %"class.base::TimeTicks", i32, %"class.base::internal::ClampedNumeric", %"class.base::internal::ClampedNumeric", [4 x i8] }>
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"class.net::AddressList" }
%"class.net::AddressList" = type { %"class.std::__1::vector", %"class.std::__1::vector.17" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.12" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { %"class.std::__1::vector.17" }
%"class.absl::optional.29" = type { %"class.absl::optional_internal::optional_data.30" }
%"class.absl::optional_internal::optional_data.30" = type { %"class.absl::optional_internal::optional_data_base.31" }
%"class.absl::optional_internal::optional_data_base.31" = type { %"class.absl::optional_internal::optional_data_dtor_base.32" }
%"class.absl::optional_internal::optional_data_dtor_base.32" = type { i8, %union.anon.33 }
%union.anon.33 = type { %"class.std::__1::vector.34" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"class.net::HostPortPair"*, %"class.net::HostPortPair"*, %"class.std::__1::__compressed_pair.36" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.net::HostPortPair"* }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.std::__1::vector.46" }
%"class.std::__1::vector.46" = type { i64*, i64, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::internal::ClampedNumeric" = type { i32 }
%"class.net::HostCache" = type { %"class.std::__1::map", i64, i32, i64, %"class.net::HostCache::PersistenceDelegate"*, %"class.base::TickClock"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.net::HostCache::PersistenceDelegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__bit_iterator.156" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%class.anon.90 = type { i8 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.106", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { float }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.60" }
%"union.absl::variant_internal::DestructibleUnionImpl.60" = type { %"union.absl::variant_internal::DestructibleUnionImpl.61" }
%"union.absl::variant_internal::DestructibleUnionImpl.61" = type { %"union.absl::variant_internal::DestructibleUnionImpl.62" }
%"union.absl::variant_internal::DestructibleUnionImpl.62" = type { %"union.absl::variant_internal::DestructibleUnionImpl.63" }
%"union.absl::variant_internal::DestructibleUnionImpl.63" = type { %"class.std::__1::basic_string" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.120" }
%"struct.std::__1::pair.120" = type { %"struct.net::HostCache::Key", %"class.net::HostCache::Entry" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.base::Value"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"struct.std::__1::__tuple_less.226" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.220", %"class.std::__1::__tuple_leaf.221", %"class.std::__1::__tuple_leaf.222", %"class.std::__1::__tuple_leaf.223", %"class.std::__1::__tuple_leaf.224" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::__tuple_leaf.220" = type { i32* }
%"class.std::__1::__tuple_leaf.221" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__tuple_leaf.222" = type { i32* }
%"class.std::__1::__tuple_leaf.223" = type { %"class.net::NetworkIsolationKey"* }
%"class.std::__1::__tuple_leaf.224" = type { i8* }
%"struct.std::__1::__tuple_less.227" = type { i8 }
%"class.std::__1::tuple.230" = type { %"struct.std::__1::__tuple_impl.231" }
%"struct.std::__1::__tuple_impl.231" = type { %"class.std::__1::__tuple_leaf.232", %"class.std::__1::__tuple_leaf.233", %"class.std::__1::__tuple_leaf.234" }
%"class.std::__1::__tuple_leaf.232" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.233" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.234" = type { i8* }

$_ZN4absl8optionalINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEEEaSEOS8_ = comdat any

$_ZN4absleqINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESA_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSD_IT0_EE = comdat any

$_ZN4absleqINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEES7_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSA_IT0_EE = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEEC2ERKS3_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN4absl17optional_internal13optional_dataINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEELb0EEaSERKSC_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net12HostPortPairENS2_9allocatorIS5_EEEELb0EEaSERKS9_ = comdat any

$_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEEaSERKS3_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS6_EEE4typeESD_SF_SF_ = comdat any

$_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE6insertINS_14__bit_iteratorIS3_Lb1ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueENS5_IS3_Lb0ELm0EEEE4typeES6_S8_S8_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__125__copy_backward_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_ = comdat any

$_ZNSt3__112__rotate_gcdINS_11__wrap_iterIPN3net10IPEndPointEEEEET_S6_S6_S6_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

$_ZNSt3__112__tuple_lessILm4EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_18HostResolverSourceERKNS4_19NetworkIsolationKeyERKbEEESQ_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRKS4_S5_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3net12_GLOBAL__N_114kExpirationKeyE = internal constant [11 x i8] c"expiration\00", align 1
@_ZN3net12_GLOBAL__N_17kTtlKeyE = internal constant [4 x i8] c"ttl\00", align 1
@_ZN3net12_GLOBAL__N_118kNetworkChangesKeyE = internal constant [16 x i8] c"network_changes\00", align 16
@_ZN3net12_GLOBAL__N_110kPinnedKeyE = internal constant [7 x i8] c"pinned\00", align 1
@_ZN3net12_GLOBAL__N_112kNetErrorKeyE = internal constant [10 x i8] c"net_error\00", align 1
@_ZN3net12_GLOBAL__N_113kAddressesKeyE = internal constant [10 x i8] c"addresses\00", align 1
@_ZN3net12_GLOBAL__N_115kTextRecordsKeyE = internal constant [13 x i8] c"text_records\00", align 1
@_ZN3net12_GLOBAL__N_119kHostnameResultsKeyE = internal constant [17 x i8] c"hostname_results\00", align 16
@_ZN3net12_GLOBAL__N_113kHostPortsKeyE = internal constant [11 x i8] c"host_ports\00", align 1
@_ZN3net9HostCache9kNotStaleE = hidden local_unnamed_addr constant %"struct.net::HostCache::EntryStaleness" { %"class.base::TimeDelta" { i64 -1000000 }, i32 0, i32 0 }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.1 = private unnamed_addr constant [15 x i8] c"HostCache::Set\00", align 1
@_ZN3net12_GLOBAL__N_112kHostnameKeyE = internal constant [9 x i8] c"hostname\00", align 1
@_ZN3net12_GLOBAL__N_116kDnsQueryTypeKeyE = internal constant [15 x i8] c"dns_query_type\00", align 1
@_ZN3net12_GLOBAL__N_19kFlagsKeyE = internal constant [6 x i8] c"flags\00", align 1
@_ZN3net12_GLOBAL__N_122kHostResolverSourceKeyE = internal constant [21 x i8] c"host_resolver_source\00", align 16
@_ZN3net12_GLOBAL__N_123kNetworkIsolationKeyKeyE = internal constant [22 x i8] c"network_isolation_key\00", align 16
@_ZN3net12_GLOBAL__N_110kSecureKeyE = internal constant [7 x i8] c"secure\00", align 1
@_ZN3net12_GLOBAL__N_117kAddressFamilyKeyE = internal constant [15 x i8] c"address_family\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"rhs <= end_ - current_\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"-rhs <= current_ - start_\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN3net9HostCache3KeyC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_12DnsQueryTypeEiNS_18HostResolverSourceERKNS_19NetworkIsolationKeyE = hidden unnamed_addr alias void (%"struct.net::HostCache::Key"*, %"class.std::__1::basic_string"*, i32, i32, i32, %"class.net::NetworkIsolationKey"*), void (%"struct.net::HostCache::Key"*, %"class.std::__1::basic_string"*, i32, i32, i32, %"class.net::NetworkIsolationKey"*)* @_ZN3net9HostCache3KeyC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_12DnsQueryTypeEiNS_18HostResolverSourceERKNS_19NetworkIsolationKeyE
@_ZN3net9HostCache3KeyC1Ev = hidden unnamed_addr alias void (%"struct.net::HostCache::Key"*), void (%"struct.net::HostCache::Key"*)* @_ZN3net9HostCache3KeyC2Ev
@_ZN3net9HostCache3KeyC1ERKS1_ = hidden unnamed_addr alias void (%"struct.net::HostCache::Key"*, %"struct.net::HostCache::Key"*), void (%"struct.net::HostCache::Key"*, %"struct.net::HostCache::Key"*)* @_ZN3net9HostCache3KeyC2ERKS1_
@_ZN3net9HostCache3KeyC1EOS1_ = hidden unnamed_addr alias void (%"struct.net::HostCache::Key"*, %"struct.net::HostCache::Key"*), void (%"struct.net::HostCache::Key"*, %"struct.net::HostCache::Key"*)* @_ZN3net9HostCache3KeyC2EOS1_
@_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE = hidden unnamed_addr alias void (%"class.net::HostCache::Entry"*, i32, i32, i8, i64), void (%"class.net::HostCache::Entry"*, i32, i32, i8, i64)* @_ZN3net9HostCache5EntryC2EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE
@_ZN3net9HostCache5EntryC1ERKS1_ = hidden unnamed_addr alias void (%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"*), void (%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"*)* @_ZN3net9HostCache5EntryC2ERKS1_
@_ZN3net9HostCache5EntryC1EOS1_ = hidden unnamed_addr alias void (%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"*), void (%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"*)* @_ZN3net9HostCache5EntryC2EOS1_
@_ZN3net9HostCache5EntryD1Ev = hidden unnamed_addr alias void (%"class.net::HostCache::Entry"*), void (%"class.net::HostCache::Entry"*)* @_ZN3net9HostCache5EntryD2Ev
@_ZN3net9HostCache5EntryC1ERKS1_N4base9TimeTicksENS4_9TimeDeltaEi = hidden unnamed_addr alias void (%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"*, i64, i64, i32), void (%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"*, i64, i64, i32)* @_ZN3net9HostCache5EntryC2ERKS1_N4base9TimeTicksENS4_9TimeDeltaEi
@_ZN3net9HostCache5EntryC1EiRKN4absl8optionalINS_11AddressListEEEONS3_INSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEEEEONS3_INS9_INS_12HostPortPairENSD_ISK_EEEEEEONS3_INS9_IbNSD_IbEEEEEENS1_6SourceEN4base9TimeTicksEi = hidden unnamed_addr alias void (%"class.net::HostCache::Entry"*, i32, %"class.absl::optional.7"*, %"class.absl::optional.24"*, %"class.absl::optional.29"*, %"class.absl::optional.41"*, i32, i64, i32), void (%"class.net::HostCache::Entry"*, i32, %"class.absl::optional.7"*, %"class.absl::optional.24"*, %"class.absl::optional.29"*, %"class.absl::optional.41"*, i32, i64, i32)* @_ZN3net9HostCache5EntryC2EiRKN4absl8optionalINS_11AddressListEEEONS3_INSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEEEEONS3_INS9_INS_12HostPortPairENSD_ISK_EEEEEEONS3_INS9_IbNSD_IbEEEEEENS1_6SourceEN4base9TimeTicksEi
@_ZN3net9HostCacheC1Em = hidden unnamed_addr alias void (%"class.net::HostCache"*, i64), void (%"class.net::HostCache"*, i64)* @_ZN3net9HostCacheC2Em
@_ZN3net9HostCacheD1Ev = hidden unnamed_addr alias void (%"class.net::HostCache"*), void (%"class.net::HostCache"*)* @_ZN3net9HostCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache3KeyC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_12DnsQueryTypeEiNS_18HostResolverSourceERKNS_19NetworkIsolationKeyE(%"struct.net::HostCache::Key"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, i32, i32, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = bitcast %"struct.net::HostCache::Key"* %0 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #19
  br label %20

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %15, i8* %17, i64 %19) #19
  br label %20

20:                                               ; preds = %11, %14
  %21 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 1
  store i32 %2, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 2
  store i32 %3, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 3
  store i32 %4, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 5
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %24, %"class.net::NetworkIsolationKey"* dereferenceable(184) %5) #19
  %25 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 6
  store i8 0, i8* %25, align 8
  ret void
}

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache3KeyC2Ev(%"struct.net::HostCache::Key"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 5
  %3 = bitcast %"struct.net::HostCache::Key"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 36, i1 false)
  tail call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %2) #19
  %4 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 6
  store i8 0, i8* %4, align 8
  ret void
}

declare void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache3KeyC2ERKS1_(%"struct.net::HostCache::Key"*, %"struct.net::HostCache::Key"* dereferenceable(232)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::HostCache::Key"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.net::HostCache::Key"* %0 to i8*
  %9 = bitcast %"struct.net::HostCache::Key"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #19
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #19
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 1
  %19 = bitcast i32* %17 to i8*
  %20 = bitcast i32* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 12, i1 false)
  %21 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 5
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %21, %"class.net::NetworkIsolationKey"* dereferenceable(184) %22) #19
  %23 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 6
  %25 = load i8, i8* %24, align 8, !range !2
  store i8 %25, i8* %23, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache3KeyC2EOS1_(%"struct.net::HostCache::Key"*, %"struct.net::HostCache::Key"* dereferenceable(232)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::HostCache::Key"* %0 to i8*
  %4 = bitcast %"struct.net::HostCache::Key"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #19
  %5 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 1
  %7 = bitcast i32* %5 to i8*
  %8 = bitcast i32* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 12, i1 false)
  %9 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 5
  tail call void @_ZN3net19NetworkIsolationKeyC1EOS0_(%"class.net::NetworkIsolationKey"* %9, %"class.net::NetworkIsolationKey"* dereferenceable(184) %10) #19
  %11 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 6
  %13 = load i8, i8* %12, align 8, !range !2
  store i8 %13, i8* %11, align 8
  ret void
}

declare void @_ZN3net19NetworkIsolationKeyC1EOS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5EntryC2EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nocapture, i32, i32, i8, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %union.anon.45* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #19
  %13 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 6
  %14 = bitcast %union.anon.11* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 49, i1 false)
  %15 = bitcast %union.anon.28* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 25, i1 false)
  %16 = bitcast %union.anon.33* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false)
  store i32 %2, i32* %13, align 8
  %17 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 7
  store i8 0, i8* %17, align 4
  %18 = icmp eq i8 %3, 0
  %19 = select i1 %18, i64 -1000000, i64 %4
  %20 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 9, i32 0
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  store i32 -1, i32* %22, align 8
  %23 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %24, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5EntryC2ERKS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false) #19
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %12, %"class.net::AddressList"* dereferenceable(48) %11) #19
  store i8 1, i8* %6, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #19
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %72, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::vector.17"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #19
  %22 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.17"* %19 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = sdiv exact i64 %27, 24
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %71, label %30

30:                                               ; preds = %18
  %31 = icmp ugt i64 %28, 768614336404564650
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.17"* %20 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #20
  unreachable

34:                                               ; preds = %30
  %35 = tail call i8* @_Znwm(i64 %27) #21
  %36 = bitcast i8* %35 to %"class.std::__1::basic_string"*
  %37 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"** %37 to i8**
  store i8* %35, i8** %38, align 8
  %39 = bitcast %"class.std::__1::vector.17"* %20 to i8**
  store i8* %35, i8** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 %28
  %41 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %40, %"class.std::__1::basic_string"** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %19, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %45 = bitcast %"class.std::__1::basic_string"** %37 to i64*
  %46 = ptrtoint i8* %35 to i64
  %47 = icmp eq %"class.std::__1::basic_string"* %43, %44
  br i1 %47, label %69, label %48

48:                                               ; preds = %34, %63
  %49 = phi %"class.std::__1::basic_string"* [ %65, %63 ], [ %36, %34 ]
  %50 = phi %"class.std::__1::basic_string"* [ %64, %63 ], [ %43, %34 ]
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #19
  br label %63

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %49, i8* %60, i64 %62) #19
  br label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 1
  %66 = icmp eq %"class.std::__1::basic_string"* %64, %44
  br i1 %66, label %67, label %48

67:                                               ; preds = %63
  %68 = ptrtoint %"class.std::__1::basic_string"* %65 to i64
  br label %69

69:                                               ; preds = %67, %34
  %70 = phi i64 [ %46, %34 ], [ %68, %67 ]
  store i64 %70, i64* %45, align 8
  br label %71

71:                                               ; preds = %18, %69
  store i8 1, i8* %14, align 8
  br label %72

72:                                               ; preds = %13, %71
  %73 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 32, i1 false) #19
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %135, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = bitcast %"class.std::__1::vector.34"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #19
  %81 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %82 = bitcast %"class.net::HostPortPair"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.34"* %78 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 5
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %134, label %89

89:                                               ; preds = %77
  %90 = icmp ugt i64 %87, 576460752303423487
  br i1 %90, label %91, label %93

91:                                               ; preds = %89
  %92 = bitcast %"class.std::__1::vector.34"* %79 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %92) #20
  unreachable

93:                                               ; preds = %89
  %94 = tail call i8* @_Znwm(i64 %86) #21
  %95 = bitcast i8* %94 to %"class.net::HostPortPair"*
  %96 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %97 = bitcast %"class.net::HostPortPair"** %96 to i8**
  store i8* %94, i8** %97, align 8
  %98 = bitcast %"class.std::__1::vector.34"* %79 to i8**
  store i8* %94, i8** %98, align 8
  %99 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %95, i64 %87
  %100 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::HostPortPair"* %99, %"class.net::HostPortPair"** %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %78, i64 0, i32 0, i32 0
  %102 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %101, align 8
  %103 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %81, align 8
  %104 = bitcast %"class.net::HostPortPair"** %96 to i64*
  %105 = ptrtoint i8* %94 to i64
  %106 = icmp eq %"class.net::HostPortPair"* %102, %103
  br i1 %106, label %132, label %107

107:                                              ; preds = %93, %123
  %108 = phi %"class.net::HostPortPair"* [ %128, %123 ], [ %95, %93 ]
  %109 = phi %"class.net::HostPortPair"* [ %127, %123 ], [ %102, %93 ]
  %110 = bitcast %"class.net::HostPortPair"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %117, label %114

114:                                              ; preds = %107
  %115 = bitcast %"class.net::HostPortPair"* %108 to i8*
  %116 = bitcast %"class.net::HostPortPair"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #19
  br label %123

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %108, i64 0, i32 0
  %119 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %118, i8* %120, i64 %122) #19
  br label %123

123:                                              ; preds = %117, %114
  %124 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %108, i64 0, i32 1
  %125 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %109, i64 0, i32 1
  %126 = load i16, i16* %125, align 8
  store i16 %126, i16* %124, align 8
  %127 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %109, i64 1
  %128 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %108, i64 1
  %129 = icmp eq %"class.net::HostPortPair"* %127, %103
  br i1 %129, label %130, label %107

130:                                              ; preds = %123
  %131 = ptrtoint %"class.net::HostPortPair"* %128 to i64
  br label %132

132:                                              ; preds = %130, %93
  %133 = phi i64 [ %105, %93 ], [ %131, %130 ]
  store i64 %133, i64* %104, align 8
  br label %134

134:                                              ; preds = %77, %132
  store i8 1, i8* %73, align 8
  br label %135

135:                                              ; preds = %72, %134
  %136 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 32, i1 false) #19
  %138 = load i8, i8* %137, align 8, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %142 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__16vectorIbNS_9allocatorIbEEEC2ERKS3_(%"class.std::__1::vector.46"* %142, %"class.std::__1::vector.46"* dereferenceable(24) %141) #19
  store i8 1, i8* %136, align 8
  br label %143

143:                                              ; preds = %135, %140
  %144 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 6
  %145 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 6
  %146 = bitcast i32* %144 to i8*
  %147 = bitcast i32* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5EntryC2EOS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false) #19
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* %12, %"class.net::AddressList"* dereferenceable(48) %11) #19
  store i8 1, i8* %6, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #19
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %36, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::vector.17"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #19
  %22 = bitcast %"class.std::__1::vector.17"* %19 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.17"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.std::__1::basic_string"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"class.std::__1::vector.17"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %14, align 8
  br label %36

36:                                               ; preds = %13, %18
  %37 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #19
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %59, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = bitcast %"class.std::__1::vector.34"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #19
  %45 = bitcast %"class.std::__1::vector.34"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.34"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %49 = bitcast %"class.net::HostPortPair"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %52 = bitcast %"class.net::HostPortPair"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.net::HostPortPair"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"class.net::HostPortPair"** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast %"class.std::__1::vector.34"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %37, align 8
  br label %59

59:                                               ; preds = %36, %41
  %60 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #19
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = bitcast %"class.std::__1::vector.46"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::vector.46"* %66 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %74 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %73, align 8
  store i64 %75, i64* %74, align 8
  %76 = bitcast %"class.std::__1::vector.46"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %60, align 8
  br label %77

77:                                               ; preds = %59, %64
  %78 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 6
  %79 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 6
  %80 = bitcast i32* %78 to i8*
  %81 = bitcast i32* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5EntryD2Ev(%"class.net::HostCache::Entry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast i64* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  br label %11

11:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %44, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %18, align 8
  %20 = icmp eq %"class.net::HostPortPair"* %19, null
  br i1 %20, label %43, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.net::HostPortPair"* %19 to i8*
  %23 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %24 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %23, align 8
  %25 = icmp eq %"class.net::HostPortPair"* %24, %19
  br i1 %25, label %41, label %26

26:                                               ; preds = %21, %36
  %27 = phi %"class.net::HostPortPair"* [ %28, %36 ], [ %24, %21 ]
  %28 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %27, i64 -1
  %29 = bitcast %"class.net::HostPortPair"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #21
  br label %36

36:                                               ; preds = %33, %26
  %37 = icmp eq %"class.net::HostPortPair"* %28, %19
  br i1 %37, label %38, label %26

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector.34"* %17 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %21
  %42 = phi i8* [ %40, %38 ], [ %22, %21 ]
  store %"class.net::HostPortPair"* %19, %"class.net::HostPortPair"** %23, align 8
  tail call void @_ZdlPv(i8* %42) #21
  br label %43

43:                                               ; preds = %41, %16
  store i8 0, i8* %13, align 8
  br label %44

44:                                               ; preds = %12, %43
  %45 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %76, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %50, align 8
  %52 = icmp eq %"class.std::__1::basic_string"* %51, null
  br i1 %52, label %75, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %55 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %55, align 8
  %57 = icmp eq %"class.std::__1::basic_string"* %56, %51
  br i1 %57, label %73, label %58

58:                                               ; preds = %53, %68
  %59 = phi %"class.std::__1::basic_string"* [ %60, %68 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #21
  br label %68

68:                                               ; preds = %65, %58
  %69 = icmp eq %"class.std::__1::basic_string"* %60, %51
  br i1 %69, label %70, label %58

70:                                               ; preds = %68
  %71 = bitcast %"class.std::__1::vector.17"* %49 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %53
  %74 = phi i8* [ %72, %70 ], [ %54, %53 ]
  store %"class.std::__1::basic_string"* %51, %"class.std::__1::basic_string"** %55, align 8
  tail call void @_ZdlPv(i8* %74) #21
  br label %75

75:                                               ; preds = %73, %48
  store i8 0, i8* %45, align 8
  br label %76

76:                                               ; preds = %44, %75
  %77 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %81) #19
  store i8 0, i8* %77, align 8
  br label %82

82:                                               ; preds = %76, %80
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i8, i64 } @_ZNK3net9HostCache5Entry14GetOptionalTtlEv(%"class.net::HostCache::Entry"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 9, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = lshr i64 %3, 63
  %5 = trunc i64 %4 to i8
  %6 = xor i8 %5, 1
  %7 = insertvalue { i8, i64 } undef, i8 %6, 0
  %8 = insertvalue { i8, i64 } %7, i64 %3, 1
  ret { i8, i64 } %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5Entry12MergeEntriesES1_S1_(%"class.net::HostCache::Entry"* noalias sret, %"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"*) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64*, i32 }, align 8
  %5 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %6 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, i32 0, i32 -105
  br label %14

14:                                               ; preds = %9, %3
  %15 = phi i32 [ 0, %3 ], [ %13, %9 ]
  store i32 %15, i32* %6, align 8
  tail call void @_ZN3net9HostCache5Entry18MergeAddressesFromERKS1_(%"class.net::HostCache::Entry"* %1, %"class.net::HostCache::Entry"* dereferenceable(200) %2)
  %16 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3
  %17 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 3
  %18 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %20, label %34, label %24

24:                                               ; preds = %14
  br i1 %23, label %39, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = tail call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS6_EEE4typeESD_SF_SF_(%"class.std::__1::vector.17"* %26, %"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* %32) #19
  br label %39

34:                                               ; preds = %14
  br i1 %23, label %39, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %16, i64 0, i32 0
  %37 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %17, i64 0, i32 0
  %38 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data.25"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEELb0EEaSERKSC_(%"class.absl::optional_internal::optional_data.25"* %36, %"class.absl::optional_internal::optional_data.25"* dereferenceable(32) %37) #19
  br label %39

39:                                               ; preds = %24, %25, %34, %35
  %40 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4
  %41 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 4
  %42 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %44, label %58, label %48

48:                                               ; preds = %39
  br i1 %47, label %63, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %52 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %51, align 8
  %53 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %53, align 8
  %55 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %56 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %55, align 8
  %57 = tail call %"class.net::HostPortPair"* @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_(%"class.std::__1::vector.34"* %50, %"class.net::HostPortPair"* %52, %"class.net::HostPortPair"* %54, %"class.net::HostPortPair"* %56) #19
  br label %63

58:                                               ; preds = %39
  br i1 %47, label %63, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %40, i64 0, i32 0
  %61 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %41, i64 0, i32 0
  %62 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data.30"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net12HostPortPairENS2_9allocatorIS5_EEEELb0EEaSERKS9_(%"class.absl::optional_internal::optional_data.30"* %60, %"class.absl::optional_internal::optional_data.30"* dereferenceable(32) %61) #19
  br label %63

63:                                               ; preds = %48, %49, %58, %59
  %64 = bitcast { i64*, i32 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64)
  %65 = bitcast { i64*, i32 }* %4 to %"class.std::__1::__bit_iterator"*
  %66 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %68, label %94, label %72

72:                                               ; preds = %63
  br i1 %71, label %98, label %73

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %76 = load i64, i64* %75, align 8, !noalias !3
  %77 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %74, i64 0, i32 0
  %78 = load i64*, i64** %77, align 8, !noalias !6
  %79 = lshr i64 %76, 6
  %80 = getelementptr inbounds i64, i64* %78, i64 %79
  %81 = trunc i64 %76 to i32
  %82 = and i32 %81, 63
  %83 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = lshr i64 %86, 6
  %88 = getelementptr inbounds i64, i64* %84, i64 %87
  %89 = trunc i64 %86 to i32
  %90 = and i32 %89, 63
  %91 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %4, i64 0, i32 0
  store i64* %88, i64** %91, align 8
  %92 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %4, i64 0, i32 1
  store i32 %90, i32* %92, align 8
  %93 = bitcast %"class.std::__1::__bit_iterator.156"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #19
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6insertINS_14__bit_iteratorIS3_Lb1ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueENS5_IS3_Lb0ELm0EEEE4typeES6_S8_S8_(%"class.std::__1::__bit_iterator.156"* nonnull sret %5, %"class.std::__1::vector.46"* %74, i64* %80, i32 %82, i64* %84, i32 0, %"class.std::__1::__bit_iterator"* nonnull byval(%"class.std::__1::__bit_iterator") align 8 %65) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #19
  br label %98

94:                                               ; preds = %63
  br i1 %71, label %98, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %97 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__16vectorIbNS_9allocatorIbEEEC2ERKS3_(%"class.std::__1::vector.46"* %97, %"class.std::__1::vector.46"* dereferenceable(24) %96) #19
  store i8 1, i8* %66, align 8
  br label %98

98:                                               ; preds = %72, %73, %94, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64)
  call void @_ZN3net9HostCache5Entry19MergeDnsAliasesFromERKS1_(%"class.net::HostCache::Entry"* %1, %"class.net::HostCache::Entry"* dereferenceable(200) %2)
  %99 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 9, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp sgt i64 %100, -1
  %102 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 9, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = icmp sgt i64 %103, -1
  br i1 %101, label %105, label %109

105:                                              ; preds = %98
  br i1 %104, label %106, label %111

106:                                              ; preds = %105
  %107 = icmp slt i64 %103, %100
  %108 = select i1 %107, i64 %103, i64 %100
  store i64 %108, i64* %99, align 8
  br label %111

109:                                              ; preds = %98
  br i1 %104, label %110, label %111

110:                                              ; preds = %109
  store i64 %103, i64* %99, align 8
  br label %111

111:                                              ; preds = %105, %109, %110, %106
  %112 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 10, i32 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 10, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = icmp slt i64 %115, %113
  %117 = select i1 %116, i64 %115, i64 %113
  store i64 %117, i64* %112, align 8
  %118 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 11
  %119 = load i32, i32* %118, align 8
  %120 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 11
  %121 = load i32, i32* %120, align 8
  %122 = icmp slt i32 %119, %121
  %123 = select i1 %122, i32 %121, i32 %119
  store i32 %123, i32* %118, align 8
  %124 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 12, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 12, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp slt i32 %127, 0
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %125, i32 %127) #19
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !9
  store i32 %133, i32* %124, align 4
  %134 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 13, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 13, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp slt i32 %137, 0
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %137) #19
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !9
  store i32 %143, i32* %134, align 8
  call void @_ZN3net9HostCache5EntryC2EOS1_(%"class.net::HostCache::Entry"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5Entry18MergeAddressesFromERKS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.anon.90, align 1
  %4 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %6, label %11, label %10

10:                                               ; preds = %2
  br i1 %9, label %26, label %15

11:                                               ; preds = %2
  br i1 %9, label %65, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %14, %"class.net::AddressList"* dereferenceable(48) %13) #19
  store i8 1, i8* %4, align 8
  br label %26

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %16, align 8
  %18 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %18, align 8
  %20 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %20, align 8
  %22 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = tail call %"class.net::IPEndPoint"* @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_(%"class.std::__1::vector"* %22, %"class.net::IPEndPoint"* %17, %"class.net::IPEndPoint"* %19, %"class.net::IPEndPoint"* %21) #19
  %24 = load i8, i8* %4, align 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %65, label %26

26:                                               ; preds = %10, %15, %12
  %27 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.net::IPEndPoint"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.net::AddressList"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = sdiv exact i64 %33, 20
  %35 = icmp ult i64 %34, 2
  br i1 %35, label %65, label %36

36:                                               ; preds = %26
  tail call void @_ZN3net11AddressList11DeduplicateEv(%"class.net::AddressList"* %27) #19
  %37 = load i8, i8* %4, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40, !prof !9

39:                                               ; preds = %36
  tail call void @llvm.trap() #19
  unreachable

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %27, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %41, align 8
  %43 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %28, align 8
  %44 = getelementptr inbounds %class.anon.90, %class.anon.90* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44)
  %45 = ptrtoint %"class.net::IPEndPoint"* %42 to i64
  %46 = ptrtoint %"class.net::IPEndPoint"* %43 to i64
  %47 = sub i64 %46, %45
  %48 = sdiv exact i64 %47, 20
  %49 = icmp sgt i64 %47, 2560
  br i1 %49, label %50, label %61

50:                                               ; preds = %40
  %51 = icmp slt i64 %48, 461168601842738790
  %52 = select i1 %51, i64 %48, i64 461168601842738790
  br label %53

53:                                               ; preds = %58, %50
  %54 = phi i64 [ %59, %58 ], [ %52, %50 ]
  %55 = mul i64 %54, 20
  %56 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %55, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #19
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = lshr i64 %54, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %53

61:                                               ; preds = %58, %40
  call fastcc void @"_ZNSt3__113__stable_sortIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.net::IPEndPoint"* %42, %"class.net::IPEndPoint"* %43, %class.anon.90* nonnull dereferenceable(1) %3, i64 %48, %"class.net::IPEndPoint"* null, i64 0) #19
  br label %64

62:                                               ; preds = %53
  %63 = bitcast i8* %56 to %"class.net::IPEndPoint"*
  call fastcc void @"_ZNSt3__113__stable_sortIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.net::IPEndPoint"* %42, %"class.net::IPEndPoint"* %43, %class.anon.90* nonnull dereferenceable(1) %3, i64 %48, %"class.net::IPEndPoint"* nonnull %63, i64 %54) #19
  call void @_ZdlPv(i8* nonnull %56) #21
  br label %64

64:                                               ; preds = %61, %62
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44)
  br label %65

65:                                               ; preds = %11, %15, %26, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5Entry19MergeDnsAliasesFromERKS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* nocapture readonly dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.17", align 8
  %4 = alloca %"class.std::__1::unordered_set", align 8
  %5 = alloca %"class.std::__1::vector.17", align 16
  %6 = alloca %"class.std::__1::vector.17", align 16
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %247, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = icmp eq %"class.std::__1::basic_string"* %12, %14
  %16 = ptrtoint %"class.std::__1::basic_string"* %14 to i64
  %17 = ptrtoint %"class.std::__1::basic_string"* %12 to i64
  br i1 %15, label %247, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !9

22:                                               ; preds = %18
  tail call void @llvm.trap() #19
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %27 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = icmp eq %"class.std::__1::basic_string"* %26, %28
  br i1 %29, label %30, label %95

30:                                               ; preds = %23
  %31 = bitcast %"class.std::__1::vector.17"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #19
  %32 = sub i64 %16, %17
  %33 = sdiv exact i64 %32, 24
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %69, label %35

35:                                               ; preds = %30
  %36 = icmp ugt i64 %33, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector.17"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %38) #20
  unreachable

39:                                               ; preds = %35
  %40 = tail call i8* @_Znwm(i64 %32) #21
  %41 = bitcast i8* %40 to %"class.std::__1::basic_string"*
  %42 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string"** %42 to i8**
  store i8* %40, i8** %43, align 8
  %44 = bitcast %"class.std::__1::vector.17"* %3 to i8**
  store i8* %40, i8** %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 %33
  %46 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %45, %"class.std::__1::basic_string"** %46, align 8
  br label %47

47:                                               ; preds = %62, %39
  %48 = phi %"class.std::__1::basic_string"* [ %64, %62 ], [ %41, %39 ]
  %49 = phi %"class.std::__1::basic_string"* [ %63, %62 ], [ %12, %39 ]
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #19
  br label %62

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %48, i8* %59, i64 %61) #19
  br label %62

62:                                               ; preds = %57, %54
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 1
  %65 = icmp eq %"class.std::__1::basic_string"* %63, %14
  br i1 %65, label %66, label %47

66:                                               ; preds = %62
  %67 = bitcast %"class.std::__1::basic_string"** %42 to i64*
  %68 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  store i64 %68, i64* %67, align 8
  br label %69

69:                                               ; preds = %30, %66
  call void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"* %24, %"class.std::__1::vector.17"* nonnull %3) #19
  %70 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %70, align 8
  %72 = icmp eq %"class.std::__1::basic_string"* %71, null
  br i1 %72, label %247, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %75 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 1
  %76 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %75, align 8
  %77 = icmp eq %"class.std::__1::basic_string"* %76, %71
  br i1 %77, label %93, label %78

78:                                               ; preds = %73, %88
  %79 = phi %"class.std::__1::basic_string"* [ %80, %88 ], [ %76, %73 ]
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 -1
  %81 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #21
  br label %88

88:                                               ; preds = %85, %78
  %89 = icmp eq %"class.std::__1::basic_string"* %80, %71
  br i1 %89, label %90, label %78

90:                                               ; preds = %88
  %91 = bitcast %"class.std::__1::vector.17"* %3 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %73
  %94 = phi i8* [ %92, %90 ], [ %74, %73 ]
  store %"class.std::__1::basic_string"* %71, %"class.std::__1::basic_string"** %75, align 8
  call void @_ZdlPv(i8* %94) #21
  br label %247

95:                                               ; preds = %23
  %96 = bitcast %"class.std::__1::unordered_set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #19
  %97 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 4, i64 0
  %100 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 3
  %101 = bitcast %"class.std::__1::__compressed_pair.106"* %100 to i32*
  %102 = bitcast i8* %99 to i32*
  store i32 -1431655766, i32* %102, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 0, i64 32, i1 false) #19
  store i32 1065353216, i32* %101, align 8
  %103 = bitcast %"class.std::__1::vector.17"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #19
  %104 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 0, i64 24, i1 false) #19
  %107 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0
  br label %108

108:                                              ; preds = %108, %95
  %109 = phi %"class.std::__1::basic_string"* [ %26, %95 ], [ %111, %108 ]
  %110 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %107, %"class.std::__1::basic_string"* dereferenceable(24) %109, %"class.std::__1::basic_string"* dereferenceable(24) %109) #19
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 1
  %112 = icmp eq %"class.std::__1::basic_string"* %111, %28
  br i1 %112, label %113, label %108

113:                                              ; preds = %108
  %114 = load i8, i8* %7, align 8, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %117, !prof !9

116:                                              ; preds = %113
  call void @llvm.trap() #19
  unreachable

117:                                              ; preds = %113
  %118 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %119 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %120 = icmp eq %"class.std::__1::basic_string"* %118, %119
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = bitcast %"class.std::__1::basic_string"** %105 to i64*
  br label %208

123:                                              ; preds = %244, %117
  %124 = load i8, i8* %19, align 8, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %127, !prof !9

126:                                              ; preds = %123
  call void @llvm.trap() #19
  unreachable

127:                                              ; preds = %123
  %128 = bitcast %"class.std::__1::vector.17"* %5 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 16
  %130 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %6, i64 0, i32 0, i32 1
  %131 = bitcast %"class.std::__1::vector.17"* %6 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %131, align 16
  %132 = bitcast %"class.std::__1::basic_string"** %106 to i64*
  %133 = load i64, i64* %132, align 16
  %134 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast %"class.std::__1::basic_string"** %134 to i64*
  store i64 %133, i64* %135, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 0, i64 24, i1 false) #19
  call void @_ZN3net11AddressList16AppendDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"* %24, %"class.std::__1::vector.17"* nonnull %6) #19
  %136 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %6, i64 0, i32 0, i32 0
  %137 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %136, align 16
  %138 = icmp eq %"class.std::__1::basic_string"* %137, null
  br i1 %138, label %160, label %139

139:                                              ; preds = %127
  %140 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  %141 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %130, align 8
  %142 = icmp eq %"class.std::__1::basic_string"* %141, %137
  br i1 %142, label %158, label %143

143:                                              ; preds = %139, %153
  %144 = phi %"class.std::__1::basic_string"* [ %145, %153 ], [ %141, %139 ]
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %144, i64 -1
  %146 = bitcast %"class.std::__1::basic_string"* %145 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %152) #21
  br label %153

153:                                              ; preds = %150, %143
  %154 = icmp eq %"class.std::__1::basic_string"* %145, %137
  br i1 %154, label %155, label %143

155:                                              ; preds = %153
  %156 = bitcast %"class.std::__1::vector.17"* %6 to i8**
  %157 = load i8*, i8** %156, align 16
  br label %158

158:                                              ; preds = %155, %139
  %159 = phi i8* [ %157, %155 ], [ %140, %139 ]
  store %"class.std::__1::basic_string"* %137, %"class.std::__1::basic_string"** %130, align 8
  call void @_ZdlPv(i8* %159) #21
  br label %160

160:                                              ; preds = %127, %158
  %161 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %104, align 16
  %162 = icmp eq %"class.std::__1::basic_string"* %161, null
  br i1 %162, label %184, label %163

163:                                              ; preds = %160
  %164 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  %165 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %105, align 8
  %166 = icmp eq %"class.std::__1::basic_string"* %165, %161
  br i1 %166, label %182, label %167

167:                                              ; preds = %163, %177
  %168 = phi %"class.std::__1::basic_string"* [ %169, %177 ], [ %165, %163 ]
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 -1
  %170 = bitcast %"class.std::__1::basic_string"* %169 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  %172 = load i8, i8* %171, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  call void @_ZdlPv(i8* %176) #21
  br label %177

177:                                              ; preds = %174, %167
  %178 = icmp eq %"class.std::__1::basic_string"* %169, %161
  br i1 %178, label %179, label %167

179:                                              ; preds = %177
  %180 = bitcast %"class.std::__1::vector.17"* %5 to i8**
  %181 = load i8*, i8** %180, align 16
  br label %182

182:                                              ; preds = %179, %163
  %183 = phi i8* [ %181, %179 ], [ %164, %163 ]
  store %"class.std::__1::basic_string"* %161, %"class.std::__1::basic_string"** %105, align 8
  call void @_ZdlPv(i8* %183) #21
  br label %184

184:                                              ; preds = %160, %182
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #19
  %185 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %98, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base"* %185, null
  br i1 %186, label %202, label %187

187:                                              ; preds = %184, %199
  %188 = phi %"struct.std::__1::__hash_node_base"* [ %190, %199 ], [ %185, %184 ]
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %188, i64 0, i32 0
  %190 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %189, align 8
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %188, i64 2
  %192 = bitcast %"struct.std::__1::__hash_node_base"* %191 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %187
  %197 = bitcast %"struct.std::__1::__hash_node_base"* %191 to i8**
  %198 = load i8*, i8** %197, align 8
  call void @_ZdlPv(i8* %198) #21
  br label %199

199:                                              ; preds = %196, %187
  %200 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i8*
  call void @_ZdlPv(i8* %200) #21
  %201 = icmp eq %"struct.std::__1::__hash_node_base"* %190, null
  br i1 %201, label %202, label %187

202:                                              ; preds = %199, %184
  %203 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %97, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %97, align 8
  %204 = icmp eq %"struct.std::__1::__hash_node_base"** %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %202
  %206 = bitcast %"struct.std::__1::__hash_node_base"** %203 to i8*
  call void @_ZdlPv(i8* %206) #21
  br label %207

207:                                              ; preds = %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #19
  br label %247

208:                                              ; preds = %121, %244
  %209 = phi %"class.std::__1::basic_string"* [ %118, %121 ], [ %245, %244 ]
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = zext i8 %212 to i64
  %217 = select i1 %213, i64 %215, i64 %216
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %208
  %220 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %209, i64 0, i64 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #19
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %244, label %222

222:                                              ; preds = %219, %208
  %223 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"* nonnull %107, %"class.std::__1::basic_string"* dereferenceable(24) %209) #19
  %224 = icmp eq %"struct.std::__1::__hash_node_base"* %223, null
  br i1 %224, label %225, label %244

225:                                              ; preds = %222
  %226 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %107, %"class.std::__1::basic_string"* dereferenceable(24) %209, %"class.std::__1::basic_string"* dereferenceable(24) %209) #19
  %227 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %105, align 8
  %228 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %106, align 16
  %229 = icmp eq %"class.std::__1::basic_string"* %227, %228
  br i1 %229, label %243, label %230

230:                                              ; preds = %225
  %231 = load i8, i8* %211, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %230
  %234 = bitcast %"class.std::__1::basic_string"* %227 to i8*
  %235 = bitcast %"class.std::__1::basic_string"* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %235, i64 24, i1 false) #19
  br label %240

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  %239 = load i64, i64* %214, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %227, i8* %238, i64 %239) #19
  br label %240

240:                                              ; preds = %236, %233
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %227, i64 1
  %242 = ptrtoint %"class.std::__1::basic_string"* %241 to i64
  store i64 %242, i64* %122, align 8
  br label %244

243:                                              ; preds = %225
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.17"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %209) #19
  br label %244

244:                                              ; preds = %219, %243, %240, %222
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 1
  %246 = icmp eq %"class.std::__1::basic_string"* %245, %119
  br i1 %246, label %123, label %208

247:                                              ; preds = %2, %93, %69, %10, %207
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9HostCache5Entry19CopyWithDefaultPortEt(%"class.net::HostCache::Entry"* noalias sret, %"class.net::HostCache::Entry"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.net::AddressList", align 8
  %5 = alloca %"class.std::__1::vector.17", align 8
  %6 = alloca %"class.net::IPEndPoint", align 2
  %7 = alloca %"class.absl::optional.7", align 8
  %8 = alloca %"class.std::__1::vector.34", align 16
  %9 = alloca %"class.net::HostPortPair", align 8
  %10 = alloca %"class.absl::optional.29", align 8
  %11 = bitcast %"class.net::HostCache::Entry"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 200, i1 false)
  tail call void @_ZN3net9HostCache5EntryC2ERKS1_(%"class.net::HostCache::Entry"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %1)
  %12 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %173, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %16, align 8
  %18 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %19 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %18, align 8
  %20 = icmp eq %"class.net::IPEndPoint"* %17, %19
  br i1 %20, label %173, label %23

21:                                               ; preds = %23
  %22 = icmp eq %"class.net::IPEndPoint"* %28, %19
  br i1 %22, label %173, label %23

23:                                               ; preds = %15, %21
  %24 = phi %"class.net::IPEndPoint"* [ %28, %21 ], [ %17, %15 ]
  %25 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %24, i64 0, i32 1
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 0
  %28 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %24, i64 1
  br i1 %27, label %29, label %21

29:                                               ; preds = %23
  %30 = bitcast %"class.net::AddressList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #19
  %31 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.net::AddressList"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* nonnull %4) #19
  %34 = load i8, i8* %12, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %37, !prof !9

36:                                               ; preds = %29
  call void @llvm.trap() #19
  unreachable

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %39 = bitcast %"class.std::__1::vector.17"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #19
  %40 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.17"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = sdiv exact i64 %45, 24
  %47 = icmp eq i64 %45, 0
  %48 = inttoptr i64 %44 to %"class.std::__1::basic_string"*
  %49 = inttoptr i64 %42 to %"class.std::__1::basic_string"*
  br i1 %47, label %88, label %50

50:                                               ; preds = %37
  %51 = icmp ugt i64 %46, 768614336404564650
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector.17"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %53) #20
  unreachable

54:                                               ; preds = %50
  %55 = call i8* @_Znwm(i64 %45) #21
  %56 = bitcast i8* %55 to %"class.std::__1::basic_string"*
  %57 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string"** %57 to i8**
  store i8* %55, i8** %58, align 8
  %59 = bitcast %"class.std::__1::vector.17"* %5 to i8**
  store i8* %55, i8** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 %46
  %61 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %60, %"class.std::__1::basic_string"** %61, align 8
  %62 = bitcast %"class.std::__1::basic_string"** %57 to i64*
  %63 = ptrtoint i8* %55 to i64
  %64 = icmp eq %"class.std::__1::basic_string"* %48, %49
  br i1 %64, label %86, label %65

65:                                               ; preds = %54, %80
  %66 = phi %"class.std::__1::basic_string"* [ %82, %80 ], [ %56, %54 ]
  %67 = phi %"class.std::__1::basic_string"* [ %81, %80 ], [ %48, %54 ]
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #19
  br label %80

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %66, i8* %77, i64 %79) #19
  br label %80

80:                                               ; preds = %75, %72
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 1
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 1
  %83 = icmp eq %"class.std::__1::basic_string"* %81, %49
  br i1 %83, label %84, label %65

84:                                               ; preds = %80
  %85 = ptrtoint %"class.std::__1::basic_string"* %82 to i64
  br label %86

86:                                               ; preds = %84, %54
  %87 = phi i64 [ %63, %54 ], [ %85, %84 ]
  store i64 %87, i64* %62, align 8
  br label %88

88:                                               ; preds = %37, %86
  call void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"* nonnull %4, %"class.std::__1::vector.17"* nonnull %5) #19
  %89 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 0
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %89, align 8
  %91 = icmp eq %"class.std::__1::basic_string"* %90, null
  br i1 %91, label %114, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %94 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %5, i64 0, i32 0, i32 1
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %94, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %90
  br i1 %96, label %112, label %97

97:                                               ; preds = %92, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %92 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #21
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %90
  br i1 %108, label %109, label %97

109:                                              ; preds = %107
  %110 = bitcast %"class.std::__1::vector.17"* %5 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %109, %92
  %113 = phi i8* [ %111, %109 ], [ %93, %92 ]
  store %"class.std::__1::basic_string"* %90, %"class.std::__1::basic_string"** %94, align 8
  call void @_ZdlPv(i8* %113) #21
  br label %114

114:                                              ; preds = %88, %112
  %115 = load i8, i8* %12, align 8, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

118:                                              ; preds = %114
  %119 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %16, align 8
  %120 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %18, align 8
  %121 = icmp eq %"class.net::IPEndPoint"* %119, %120
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.net::IPEndPoint"** %31 to i64*
  %124 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %4, i64 0, i32 0
  %125 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  br label %147

126:                                              ; preds = %170, %118
  %127 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %127) #19
  store i8 1, i8* %127, align 8
  %128 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %128, %"class.net::AddressList"* nonnull dereferenceable(48) %4) #19
  %129 = load i8, i8* %127, align 8, !range !2
  %130 = icmp eq i8 %129, 0
  %131 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %130, label %139, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %133, label %138, label %136

136:                                              ; preds = %134
  %137 = call dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSERKS0_(%"class.net::AddressList"* %135, %"class.net::AddressList"* dereferenceable(48) %128) #19
  br label %142

138:                                              ; preds = %134
  call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %135, %"class.net::AddressList"* dereferenceable(48) %128) #19
  store i8 1, i8* %131, align 8
  br label %142

139:                                              ; preds = %126
  br i1 %133, label %142, label %140

140:                                              ; preds = %139
  %141 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %141) #19
  store i8 0, i8* %131, align 8
  br label %142

142:                                              ; preds = %136, %138, %139, %140
  %143 = load i8, i8* %127, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %128) #19
  store i8 0, i8* %127, align 8
  br label %146

146:                                              ; preds = %142, %145
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %127) #19
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #19
  br label %173

147:                                              ; preds = %122, %170
  %148 = phi %"class.net::IPEndPoint"* [ %119, %122 ], [ %171, %170 ]
  %149 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %148, i64 0, i32 1
  %150 = load i16, i16* %149, align 2
  %151 = icmp eq i16 %150, 0
  br i1 %151, label %152, label %162

152:                                              ; preds = %147
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %125) #19
  %153 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %148, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %6, %"class.net::IPAddress"* dereferenceable(17) %153, i16 zeroext %2) #19
  %154 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %31, align 8
  %155 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %32, align 8
  %156 = icmp eq %"class.net::IPEndPoint"* %154, %155
  br i1 %156, label %160, label %157

157:                                              ; preds = %152
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %154, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %6) #19
  %158 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %154, i64 1
  %159 = ptrtoint %"class.net::IPEndPoint"* %158 to i64
  store i64 %159, i64* %123, align 8
  br label %161

160:                                              ; preds = %152
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %124, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %6) #19
  br label %161

161:                                              ; preds = %157, %160
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %125) #19
  br label %170

162:                                              ; preds = %147
  %163 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %31, align 8
  %164 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %32, align 8
  %165 = icmp eq %"class.net::IPEndPoint"* %163, %164
  br i1 %165, label %169, label %166

166:                                              ; preds = %162
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %163, %"class.net::IPEndPoint"* dereferenceable(20) %148) #19
  %167 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %163, i64 1
  %168 = ptrtoint %"class.net::IPEndPoint"* %167 to i64
  store i64 %168, i64* %123, align 8
  br label %170

169:                                              ; preds = %162
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* nonnull %124, %"class.net::IPEndPoint"* dereferenceable(20) %148) #19
  br label %170

170:                                              ; preds = %169, %166, %161
  %171 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %148, i64 1
  %172 = icmp eq %"class.net::IPEndPoint"* %171, %120
  br i1 %172, label %126, label %147

173:                                              ; preds = %21, %3, %15, %146
  %174 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %175 = load i8, i8* %174, align 8, !range !2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %317, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %179 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %178, align 8
  %180 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %181 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %180, align 8
  %182 = icmp eq %"class.net::HostPortPair"* %179, %181
  br i1 %182, label %317, label %185

183:                                              ; preds = %185
  %184 = icmp eq %"class.net::HostPortPair"* %190, %181
  br i1 %184, label %317, label %185

185:                                              ; preds = %177, %183
  %186 = phi %"class.net::HostPortPair"* [ %190, %183 ], [ %179, %177 ]
  %187 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %186, i64 0, i32 1
  %188 = load i16, i16* %187, align 8
  %189 = icmp eq i16 %188, 0
  %190 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %186, i64 1
  br i1 %189, label %191, label %183

191:                                              ; preds = %185
  %192 = bitcast %"class.std::__1::vector.34"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #19
  %193 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %8, i64 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %8, i64 0, i32 0, i32 1
  %195 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %192, i8 0, i64 24, i1 false) #19
  %196 = bitcast %"class.net::HostPortPair"** %194 to i64*
  %197 = bitcast %"class.net::HostPortPair"* %9 to i8*
  %198 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %9, i64 0, i32 1
  %199 = bitcast %"class.net::HostPortPair"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %268

202:                                              ; preds = %314
  %203 = bitcast %"class.std::__1::vector.34"* %8 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 16
  %205 = bitcast %"class.net::HostPortPair"** %195 to i64*
  %206 = load i64, i64* %205, align 16
  %207 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %207, align 8
  %208 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %209 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %210 = bitcast %"class.std::__1::vector.34"* %208 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %210, align 8
  %211 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %212 = bitcast %"class.net::HostPortPair"** %211 to i64*
  store i64 %206, i64* %212, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %192, i8 0, i64 24, i1 false) #19
  %213 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4
  %214 = call dereferenceable(32) %"class.absl::optional.29"* @_ZN4absl8optionalINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEEEaSEOS8_(%"class.absl::optional.29"* %213, %"class.absl::optional.29"* nonnull dereferenceable(32) %10) #19
  %215 = load i8, i8* %207, align 8, !range !2
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %243, label %217

217:                                              ; preds = %202
  %218 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %208, i64 0, i32 0, i32 0
  %219 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %218, align 8
  %220 = icmp eq %"class.net::HostPortPair"* %219, null
  br i1 %220, label %242, label %221

221:                                              ; preds = %217
  %222 = bitcast %"class.net::HostPortPair"* %219 to i8*
  %223 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %209, align 8
  %224 = icmp eq %"class.net::HostPortPair"* %223, %219
  br i1 %224, label %240, label %225

225:                                              ; preds = %221, %235
  %226 = phi %"class.net::HostPortPair"* [ %227, %235 ], [ %223, %221 ]
  %227 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %226, i64 -1
  %228 = bitcast %"class.net::HostPortPair"* %227 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %228, i64 0, i32 1, i32 0
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %225
  %233 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  call void @_ZdlPv(i8* %234) #21
  br label %235

235:                                              ; preds = %232, %225
  %236 = icmp eq %"class.net::HostPortPair"* %227, %219
  br i1 %236, label %237, label %225

237:                                              ; preds = %235
  %238 = bitcast %"class.std::__1::vector.34"* %208 to i8**
  %239 = load i8*, i8** %238, align 8
  br label %240

240:                                              ; preds = %237, %221
  %241 = phi i8* [ %239, %237 ], [ %222, %221 ]
  store %"class.net::HostPortPair"* %219, %"class.net::HostPortPair"** %209, align 8
  call void @_ZdlPv(i8* %241) #21
  br label %242

242:                                              ; preds = %240, %217
  store i8 0, i8* %207, align 8
  br label %243

243:                                              ; preds = %202, %242
  %244 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %193, align 16
  %245 = icmp eq %"class.net::HostPortPair"* %244, null
  br i1 %245, label %267, label %246

246:                                              ; preds = %243
  %247 = bitcast %"class.net::HostPortPair"* %244 to i8*
  %248 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %194, align 8
  %249 = icmp eq %"class.net::HostPortPair"* %248, %244
  br i1 %249, label %265, label %250

250:                                              ; preds = %246, %260
  %251 = phi %"class.net::HostPortPair"* [ %252, %260 ], [ %248, %246 ]
  %252 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %251, i64 -1
  %253 = bitcast %"class.net::HostPortPair"* %252 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %254 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %253, i64 0, i32 1, i32 0
  %255 = load i8, i8* %254, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %250
  %258 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %252, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #21
  br label %260

260:                                              ; preds = %257, %250
  %261 = icmp eq %"class.net::HostPortPair"* %252, %244
  br i1 %261, label %262, label %250

262:                                              ; preds = %260
  %263 = bitcast %"class.std::__1::vector.34"* %8 to i8**
  %264 = load i8*, i8** %263, align 16
  br label %265

265:                                              ; preds = %262, %246
  %266 = phi i8* [ %264, %262 ], [ %247, %246 ]
  store %"class.net::HostPortPair"* %244, %"class.net::HostPortPair"** %194, align 8
  call void @_ZdlPv(i8* %266) #21
  br label %267

267:                                              ; preds = %243, %265
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #19
  br label %317

268:                                              ; preds = %191, %314
  %269 = phi %"class.net::HostPortPair"* [ %179, %191 ], [ %315, %314 ]
  %270 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %269, i64 0, i32 1
  %271 = load i16, i16* %270, align 8
  %272 = icmp eq i16 %271, 0
  br i1 %272, label %273, label %290

273:                                              ; preds = %268
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %197) #19
  %274 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %269, i64 0, i32 0
  call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %274, i16 zeroext %2) #19
  %275 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %194, align 8
  %276 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %195, align 16
  %277 = icmp ult %"class.net::HostPortPair"* %275, %276
  br i1 %277, label %278, label %284

278:                                              ; preds = %273
  %279 = bitcast %"class.net::HostPortPair"* %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* nonnull align 8 %197, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 0, i64 24, i1 false) #19
  %280 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %275, i64 0, i32 1
  %281 = load i16, i16* %198, align 8
  store i16 %281, i16* %280, align 8
  %282 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %275, i64 1
  %283 = ptrtoint %"class.net::HostPortPair"* %282 to i64
  store i64 %283, i64* %196, align 8
  br label %289

284:                                              ; preds = %273
  call void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.34"* nonnull %8, %"class.net::HostPortPair"* nonnull dereferenceable(32) %9) #19
  %285 = load i8, i8* %200, align 1
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %284
  %288 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %288) #21
  br label %289

289:                                              ; preds = %278, %284, %287
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %197) #19
  br label %314

290:                                              ; preds = %268
  %291 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %194, align 8
  %292 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %195, align 16
  %293 = icmp eq %"class.net::HostPortPair"* %291, %292
  br i1 %293, label %313, label %294

294:                                              ; preds = %290
  %295 = bitcast %"class.net::HostPortPair"* %269 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %296 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %295, i64 0, i32 1, i32 0
  %297 = load i8, i8* %296, align 1
  %298 = icmp slt i8 %297, 0
  br i1 %298, label %302, label %299

299:                                              ; preds = %294
  %300 = bitcast %"class.net::HostPortPair"* %291 to i8*
  %301 = bitcast %"class.net::HostPortPair"* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %301, i64 24, i1 false) #19
  br label %308

302:                                              ; preds = %294
  %303 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %291, i64 0, i32 0
  %304 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %269, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  %306 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %269, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %307 = load i64, i64* %306, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %303, i8* %305, i64 %307) #19
  br label %308

308:                                              ; preds = %302, %299
  %309 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %291, i64 0, i32 1
  %310 = load i16, i16* %270, align 8
  store i16 %310, i16* %309, align 8
  %311 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %291, i64 1
  %312 = ptrtoint %"class.net::HostPortPair"* %311 to i64
  store i64 %312, i64* %196, align 8
  br label %314

313:                                              ; preds = %290
  call void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.34"* nonnull %8, %"class.net::HostPortPair"* dereferenceable(32) %269) #19
  br label %314

314:                                              ; preds = %313, %308, %289
  %315 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %269, i64 1
  %316 = icmp eq %"class.net::HostPortPair"* %315, %181
  br i1 %316, label %202, label %268

317:                                              ; preds = %183, %173, %177, %267
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"*) unnamed_addr #1

declare void @_ZN3net11AddressList13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"*, %"class.std::__1::vector.17"*) local_unnamed_addr #1

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"*) unnamed_addr #4

declare void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"*, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSERKS1_(%"class.net::HostCache::Entry"* returned, %"class.net::HostCache::Entry"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %14, label %18, label %16

16:                                               ; preds = %10
  %17 = tail call dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSERKS0_(%"class.net::AddressList"* %15, %"class.net::AddressList"* dereferenceable(48) %11) #19
  br label %25

18:                                               ; preds = %10
  tail call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %15, %"class.net::AddressList"* dereferenceable(48) %11) #19
  store i8 1, i8* %12, align 8
  br label %25

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %24) #19
  store i8 0, i8* %20, align 8
  br label %25

25:                                               ; preds = %16, %18, %19, %23
  %26 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0
  %27 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0
  %28 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data.25"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEELb0EEaSERKSC_(%"class.absl::optional_internal::optional_data.25"* %26, %"class.absl::optional_internal::optional_data.25"* dereferenceable(32) %27) #19
  %29 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0
  %30 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0
  %31 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data.30"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net12HostPortPairENS2_9allocatorIS5_EEEELb0EEaSERKS9_(%"class.absl::optional_internal::optional_data.30"* %29, %"class.absl::optional_internal::optional_data.30"* dereferenceable(32) %30) #19
  %32 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %40, label %44, label %42

42:                                               ; preds = %36
  %43 = tail call dereferenceable(24) %"class.std::__1::vector.46"* @_ZNSt3__16vectorIbNS_9allocatorIbEEEaSERKS3_(%"class.std::__1::vector.46"* %41, %"class.std::__1::vector.46"* dereferenceable(24) %37) #19
  br label %56

44:                                               ; preds = %36
  tail call void @_ZNSt3__16vectorIbNS_9allocatorIbEEEC2ERKS3_(%"class.std::__1::vector.46"* %41, %"class.std::__1::vector.46"* dereferenceable(24) %37) #19
  store i8 1, i8* %38, align 8
  br label %56

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = bitcast i64* %51 to i8*
  tail call void @_ZdlPv(i8* %54) #21
  br label %55

55:                                               ; preds = %53, %49
  store i8 0, i8* %46, align 8
  br label %56

56:                                               ; preds = %42, %44, %45, %55
  %57 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 6
  %58 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 6
  %59 = bitcast i32* %57 to i8*
  %60 = bitcast i32* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 36, i1 false)
  ret %"class.net::HostCache::Entry"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* returned, %"class.net::HostCache::Entry"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %14, label %18, label %16

16:                                               ; preds = %10
  %17 = tail call dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSEOS0_(%"class.net::AddressList"* %15, %"class.net::AddressList"* dereferenceable(48) %11) #19
  br label %25

18:                                               ; preds = %10
  tail call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* %15, %"class.net::AddressList"* dereferenceable(48) %11) #19
  store i8 1, i8* %12, align 8
  br label %25

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %24) #19
  store i8 0, i8* %20, align 8
  br label %25

25:                                               ; preds = %16, %18, %19, %23
  %26 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %94, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %34, label %78, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %35, i64 0, i32 0, i32 0
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %42 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %38
  br i1 %44, label %60, label %45

45:                                               ; preds = %40, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #21
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %38
  br i1 %56, label %57, label %45

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector.17"* %35 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %40
  %61 = phi i8* [ %59, %57 ], [ %41, %40 ]
  store %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"** %42, align 8
  tail call void @_ZdlPv(i8* %61) #21
  %62 = bitcast %"class.std::__1::vector.17"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #19
  br label %63

63:                                               ; preds = %60, %36
  %64 = bitcast %"class.std::__1::vector.17"* %31 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::vector.17"* %35 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %68 = bitcast %"class.std::__1::basic_string"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %71 = bitcast %"class.std::__1::basic_string"** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"class.std::__1::basic_string"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast %"class.std::__1::basic_string"** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = bitcast %"class.std::__1::vector.17"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #19
  br label %126

78:                                               ; preds = %30
  %79 = bitcast %"class.std::__1::vector.17"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #19
  %80 = bitcast %"class.std::__1::vector.17"* %31 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::vector.17"* %35 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %84 = bitcast %"class.std::__1::basic_string"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %87 = bitcast %"class.std::__1::basic_string"** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast %"class.std::__1::basic_string"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast %"class.std::__1::basic_string"** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = bitcast %"class.std::__1::vector.17"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %32, align 8
  br label %126

94:                                               ; preds = %25
  %95 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %126, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %100, align 8
  %102 = icmp eq %"class.std::__1::basic_string"* %101, null
  br i1 %102, label %125, label %103

103:                                              ; preds = %98
  %104 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %105 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %106 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %105, align 8
  %107 = icmp eq %"class.std::__1::basic_string"* %106, %101
  br i1 %107, label %123, label %108

108:                                              ; preds = %103, %118
  %109 = phi %"class.std::__1::basic_string"* [ %110, %118 ], [ %106, %103 ]
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 -1
  %111 = bitcast %"class.std::__1::basic_string"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #21
  br label %118

118:                                              ; preds = %115, %108
  %119 = icmp eq %"class.std::__1::basic_string"* %110, %101
  br i1 %119, label %120, label %108

120:                                              ; preds = %118
  %121 = bitcast %"class.std::__1::vector.17"* %99 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %103
  %124 = phi i8* [ %122, %120 ], [ %104, %103 ]
  store %"class.std::__1::basic_string"* %101, %"class.std::__1::basic_string"** %105, align 8
  tail call void @_ZdlPv(i8* %124) #21
  br label %125

125:                                              ; preds = %123, %98
  store i8 0, i8* %95, align 8
  br label %126

126:                                              ; preds = %78, %63, %94, %125
  %127 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4
  %128 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4
  %129 = tail call dereferenceable(32) %"class.absl::optional.29"* @_ZN4absl8optionalINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEEEaSEOS8_(%"class.absl::optional.29"* %127, %"class.absl::optional.29"* dereferenceable(32) %128) #19
  %130 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5
  %131 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %169, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %136 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %130, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8, i8* %136, align 8, !range !2
  %138 = icmp eq i8 %137, 0
  %139 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %138, label %158, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %139, i64 0, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = icmp eq i64* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %140
  %145 = bitcast i64* %142 to i8*
  tail call void @_ZdlPv(i8* %145) #21
  %146 = bitcast %"class.std::__1::vector.46"* %139 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 24, i1 false) #19
  br label %147

147:                                              ; preds = %144, %140
  %148 = bitcast %"class.std::__1::vector.46"* %135 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.std::__1::vector.46"* %139 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i64 %155, i64* %156, align 8
  %157 = bitcast %"class.std::__1::vector.46"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 24, i1 false) #19
  br label %180

158:                                              ; preds = %134
  %159 = bitcast %"class.std::__1::vector.46"* %135 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.std::__1::vector.46"* %139 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %163 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  store i64 %164, i64* %162, align 8
  %165 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %166 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %167 = load i64, i64* %165, align 8
  store i64 %167, i64* %166, align 8
  %168 = bitcast %"class.std::__1::vector.46"* %135 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %136, align 8
  br label %180

169:                                              ; preds = %126
  %170 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %130, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8, i8* %170, align 8, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %180, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %173
  %178 = bitcast i64* %175 to i8*
  tail call void @_ZdlPv(i8* %178) #21
  br label %179

179:                                              ; preds = %177, %173
  store i8 0, i8* %170, align 8
  br label %180

180:                                              ; preds = %147, %158, %169, %179
  %181 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 6
  %182 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 6
  %183 = bitcast i32* %181 to i8*
  %184 = bitcast i32* %182 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 36, i1 false)
  ret %"class.net::HostCache::Entry"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.29"* @_ZN4absl8optionalINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEEEaSEOS8_(%"class.absl::optional.29"*, %"class.absl::optional.29"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %54, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %11, i64 0, i32 0, i32 0
  %14 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %13, align 8
  %15 = icmp eq %"class.net::HostPortPair"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.net::HostPortPair"* %14 to i8*
  %18 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %19 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %18, align 8
  %20 = icmp eq %"class.net::HostPortPair"* %19, %14
  br i1 %20, label %36, label %21

21:                                               ; preds = %16, %31
  %22 = phi %"class.net::HostPortPair"* [ %23, %31 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %22, i64 -1
  %24 = bitcast %"class.net::HostPortPair"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #21
  br label %31

31:                                               ; preds = %28, %21
  %32 = icmp eq %"class.net::HostPortPair"* %23, %14
  br i1 %32, label %33, label %21

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.34"* %11 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %16
  %37 = phi i8* [ %35, %33 ], [ %17, %16 ]
  store %"class.net::HostPortPair"* %14, %"class.net::HostPortPair"** %18, align 8
  tail call void @_ZdlPv(i8* %37) #21
  %38 = bitcast %"class.std::__1::vector.34"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #19
  br label %39

39:                                               ; preds = %36, %12
  %40 = bitcast %"class.std::__1::vector.34"* %7 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.34"* %11 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %44 = bitcast %"class.net::HostPortPair"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %47 = bitcast %"class.net::HostPortPair"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.net::HostPortPair"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"class.net::HostPortPair"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"class.std::__1::vector.34"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #19
  br label %102

54:                                               ; preds = %6
  %55 = bitcast %"class.std::__1::vector.34"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #19
  %56 = bitcast %"class.std::__1::vector.34"* %7 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.34"* %11 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %60 = bitcast %"class.net::HostPortPair"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %63 = bitcast %"class.net::HostPortPair"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.net::HostPortPair"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"class.net::HostPortPair"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.std::__1::vector.34"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %8, align 8
  br label %102

70:                                               ; preds = %2
  %71 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %102, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %76 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %76, align 8
  %78 = icmp eq %"class.net::HostPortPair"* %77, null
  br i1 %78, label %101, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.net::HostPortPair"* %77 to i8*
  %81 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %82 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %81, align 8
  %83 = icmp eq %"class.net::HostPortPair"* %82, %77
  br i1 %83, label %99, label %84

84:                                               ; preds = %79, %94
  %85 = phi %"class.net::HostPortPair"* [ %86, %94 ], [ %82, %79 ]
  %86 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %85, i64 -1
  %87 = bitcast %"class.net::HostPortPair"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  tail call void @_ZdlPv(i8* %93) #21
  br label %94

94:                                               ; preds = %91, %84
  %95 = icmp eq %"class.net::HostPortPair"* %86, %77
  br i1 %95, label %96, label %84

96:                                               ; preds = %94
  %97 = bitcast %"class.std::__1::vector.34"* %75 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %79
  %100 = phi i8* [ %98, %96 ], [ %80, %79 ]
  store %"class.net::HostPortPair"* %77, %"class.net::HostPortPair"** %81, align 8
  tail call void @_ZdlPv(i8* %100) #21
  br label %101

101:                                              ; preds = %99, %74
  store i8 0, i8* %71, align 8
  br label %102

102:                                              ; preds = %54, %39, %70, %101
  ret %"class.absl::optional.29"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5EntryC2ERKS1_N4base9TimeTicksENS4_9TimeDeltaEi(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200), i64, i64, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 56, i1 false) #19
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %16, %"class.net::AddressList"* dereferenceable(48) %15) #19
  store i8 1, i8* %10, align 8
  br label %17

17:                                               ; preds = %5, %14
  %18 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false) #19
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %76, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = bitcast %"class.std::__1::vector.17"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #19
  %26 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.17"* %23 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = sdiv exact i64 %31, 24
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %75, label %34

34:                                               ; preds = %22
  %35 = icmp ugt i64 %32, 768614336404564650
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.17"* %24 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #20
  unreachable

38:                                               ; preds = %34
  %39 = tail call i8* @_Znwm(i64 %31) #21
  %40 = bitcast i8* %39 to %"class.std::__1::basic_string"*
  %41 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"** %41 to i8**
  store i8* %39, i8** %42, align 8
  %43 = bitcast %"class.std::__1::vector.17"* %24 to i8**
  store i8* %39, i8** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 %32
  %45 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %44, %"class.std::__1::basic_string"** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %23, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %49 = bitcast %"class.std::__1::basic_string"** %41 to i64*
  %50 = ptrtoint i8* %39 to i64
  %51 = icmp eq %"class.std::__1::basic_string"* %47, %48
  br i1 %51, label %73, label %52

52:                                               ; preds = %38, %67
  %53 = phi %"class.std::__1::basic_string"* [ %69, %67 ], [ %40, %38 ]
  %54 = phi %"class.std::__1::basic_string"* [ %68, %67 ], [ %47, %38 ]
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #19
  br label %67

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %53, i8* %64, i64 %66) #19
  br label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 1
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 1
  %70 = icmp eq %"class.std::__1::basic_string"* %68, %48
  br i1 %70, label %71, label %52

71:                                               ; preds = %67
  %72 = ptrtoint %"class.std::__1::basic_string"* %69 to i64
  br label %73

73:                                               ; preds = %71, %38
  %74 = phi i64 [ %50, %38 ], [ %72, %71 ]
  store i64 %74, i64* %49, align 8
  br label %75

75:                                               ; preds = %22, %73
  store i8 1, i8* %18, align 8
  br label %76

76:                                               ; preds = %17, %75
  %77 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 32, i1 false) #19
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %139, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %84 = bitcast %"class.std::__1::vector.34"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #19
  %85 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %86 = bitcast %"class.net::HostPortPair"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector.34"* %82 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 5
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %138, label %93

93:                                               ; preds = %81
  %94 = icmp ugt i64 %91, 576460752303423487
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::vector.34"* %83 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %96) #20
  unreachable

97:                                               ; preds = %93
  %98 = tail call i8* @_Znwm(i64 %90) #21
  %99 = bitcast i8* %98 to %"class.net::HostPortPair"*
  %100 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %101 = bitcast %"class.net::HostPortPair"** %100 to i8**
  store i8* %98, i8** %101, align 8
  %102 = bitcast %"class.std::__1::vector.34"* %83 to i8**
  store i8* %98, i8** %102, align 8
  %103 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %99, i64 %91
  %104 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::HostPortPair"* %103, %"class.net::HostPortPair"** %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %82, i64 0, i32 0, i32 0
  %106 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %105, align 8
  %107 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %85, align 8
  %108 = bitcast %"class.net::HostPortPair"** %100 to i64*
  %109 = ptrtoint i8* %98 to i64
  %110 = icmp eq %"class.net::HostPortPair"* %106, %107
  br i1 %110, label %136, label %111

111:                                              ; preds = %97, %127
  %112 = phi %"class.net::HostPortPair"* [ %132, %127 ], [ %99, %97 ]
  %113 = phi %"class.net::HostPortPair"* [ %131, %127 ], [ %106, %97 ]
  %114 = bitcast %"class.net::HostPortPair"* %113 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %111
  %119 = bitcast %"class.net::HostPortPair"* %112 to i8*
  %120 = bitcast %"class.net::HostPortPair"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #19
  br label %127

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %112, i64 0, i32 0
  %123 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %122, i8* %124, i64 %126) #19
  br label %127

127:                                              ; preds = %121, %118
  %128 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %112, i64 0, i32 1
  %129 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %113, i64 0, i32 1
  %130 = load i16, i16* %129, align 8
  store i16 %130, i16* %128, align 8
  %131 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %113, i64 1
  %132 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %112, i64 1
  %133 = icmp eq %"class.net::HostPortPair"* %131, %107
  br i1 %133, label %134, label %111

134:                                              ; preds = %127
  %135 = ptrtoint %"class.net::HostPortPair"* %132 to i64
  br label %136

136:                                              ; preds = %134, %97
  %137 = phi i64 [ %109, %97 ], [ %135, %134 ]
  store i64 %137, i64* %108, align 8
  br label %138

138:                                              ; preds = %81, %136
  store i8 1, i8* %77, align 8
  br label %139

139:                                              ; preds = %76, %138
  %140 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 32, i1 false) #19
  %142 = load i8, i8* %141, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %147, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %146 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__16vectorIbNS_9allocatorIbEEEC2ERKS3_(%"class.std::__1::vector.46"* %146, %"class.std::__1::vector.46"* dereferenceable(24) %145) #19
  store i8 1, i8* %140, align 8
  br label %147

147:                                              ; preds = %139, %144
  %148 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 6
  %149 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 6
  %150 = load i32, i32* %149, align 8
  store i32 %150, i32* %148, align 8
  %151 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 7
  %152 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 7
  %153 = load i8, i8* %152, align 4, !range !2
  store i8 %153, i8* %151, align 4
  %154 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 9, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 9, i32 0
  store i64 %155, i64* %156, align 8
  %157 = add i64 %3, -9223372036854775807
  %158 = icmp ult i64 %157, 2
  br i1 %158, label %166, label %159

159:                                              ; preds = %147
  %160 = icmp slt i64 %3, 0
  %161 = select i1 %160, i64 -9223372036854775808, i64 9223372036854775807
  %162 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %2, i64 %3) #19
  %163 = extractvalue { i64, i1 } %162, 1
  %164 = extractvalue { i64, i1 } %162, 0
  %165 = select i1 %163, i64 %161, i64 %164, !prof !9
  br label %174

166:                                              ; preds = %147
  %167 = add i64 %2, -9223372036854775807
  %168 = icmp ugt i64 %167, 1
  %169 = icmp eq i64 %2, %3
  %170 = or i1 %169, %168
  br i1 %170, label %174, label %171

171:                                              ; preds = %166
  %172 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #19
  %173 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #19
  br label %174

174:                                              ; preds = %159, %166, %171
  %175 = phi i64 [ %165, %159 ], [ %3, %166 ], [ %3, %171 ]
  %176 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  store i32 %4, i32* %177, align 8
  %178 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %178, align 4
  %179 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %179, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5EntryC2EiRKN4absl8optionalINS_11AddressListEEEONS3_INSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEEEEONS3_INS9_INS_12HostPortPairENSD_ISK_EEEEEEONS3_INS9_IbNSD_IbEEEEEENS1_6SourceEN4base9TimeTicksEi(%"class.net::HostCache::Entry"*, i32, %"class.absl::optional.7"* dereferenceable(56), %"class.absl::optional.24"* nocapture dereferenceable(32), %"class.absl::optional.29"* nocapture dereferenceable(32), %"class.absl::optional.41"* nocapture dereferenceable(32), i32, i64, i32) unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 56, i1 false) #19
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %17, %"class.net::AddressList"* dereferenceable(48) %16) #19
  store i8 1, i8* %11, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #19
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %41, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::vector.17"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #19
  %27 = bitcast %"class.std::__1::vector.17"* %24 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.17"* %25 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.std::__1::basic_string"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.std::__1::vector.17"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %19, align 8
  br label %41

41:                                               ; preds = %18, %23
  %42 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #19
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %64, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = bitcast %"class.std::__1::vector.34"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #19
  %50 = bitcast %"class.std::__1::vector.34"* %47 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.34"* %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast %"class.net::HostPortPair"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %57 = bitcast %"class.net::HostPortPair"** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.net::HostPortPair"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.net::HostPortPair"** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"class.std::__1::vector.34"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %42, align 8
  br label %64

64:                                               ; preds = %41, %46
  %65 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 32, i1 false) #19
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %72 = bitcast %"class.std::__1::vector.46"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.46"* %71 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %76 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %75, align 8
  %78 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %79 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %80 = load i64, i64* %78, align 8
  store i64 %80, i64* %79, align 8
  %81 = bitcast %"class.std::__1::vector.46"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %65, align 8
  br label %82

82:                                               ; preds = %64, %69
  %83 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 6
  store i32 %6, i32* %83, align 8
  %84 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 7
  store i8 0, i8* %84, align 4
  %85 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 9, i32 0
  store i64 -1000000, i64* %85, align 8
  %86 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %7, i64* %86, align 8
  %87 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  store i32 %8, i32* %87, align 8
  %88 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %88, align 4
  %89 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %89, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5Entry24PrepareForCacheInsertionEv(%"class.net::HostCache::Entry"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast i64* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #21
  br label %11

11:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net9HostCache5Entry7IsStaleEN4base9TimeTicksEi(%"class.net::HostCache::Entry"* nocapture readonly, i64, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 10, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, %2
  %9 = icmp sle i64 %5, %1
  %10 = or i1 %9, %8
  ret i1 %10
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5Entry8CountHitEb(%"class.net::HostCache::Entry"* nocapture, i1 zeroext) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 12, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 1) #19
  %6 = extractvalue { i32, i1 } %5, 1
  %7 = extractvalue { i32, i1 } %5, 0
  %8 = select i1 %6, i32 2147483647, i32 %7, !prof !9
  store i32 %8, i32* %3, align 4
  br i1 %1, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 1) #19
  %13 = extractvalue { i32, i1 } %12, 1
  %14 = extractvalue { i32, i1 } %12, 0
  %15 = select i1 %13, i32 2147483647, i32 %14, !prof !9
  store i32 %15, i32* %10, align 4
  br label %16

16:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK3net9HostCache5Entry12GetStalenessEN4base9TimeTicksEiPNS0_14EntryStalenessE(%"class.net::HostCache::Entry"* nocapture readonly, i64, i32, %"struct.net::HostCache::EntryStaleness"* nocapture) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = sub nsw i64 %1, %6
  %8 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %3, i64 0, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = sub nsw i32 %2, %10
  %12 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %3, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %3, i64 0, i32 2
  store i32 %14, i32* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9HostCache5Entry12NetLogParamsEv(%"class.base::Value"* noalias sret, %"class.net::HostCache::Entry"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK3net9HostCache5Entry10GetAsValueEb(%"class.base::Value"* sret %0, %"class.net::HostCache::Entry"* %1, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9HostCache5Entry10GetAsValueEb(%"class.base::Value"* noalias sret, %"class.net::HostCache::Entry"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::ListValue", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.base::ListValue", align 8
  %12 = alloca %"class.base::ListValue", align 8
  %13 = alloca %"class.base::ListValue", align 8
  %14 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #19
  br i1 %2, label %15, label %44

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #19
  %17 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 10, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  call void @_ZN3net6NetLog17TickCountToStringERKN4base9TimeTicksE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6) #19
  %21 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN3net12_GLOBAL__N_114kExpirationKeyE, i64 0, i64 0), i64 10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #19
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #21
  br label %29

29:                                               ; preds = %15, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #19
  %30 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #19
  %31 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 9, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %32, i64* %33, align 8
  %34 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %7) #19
  %35 = trunc i64 %34 to i32
  %36 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN3net12_GLOBAL__N_17kTtlKeyE, i64 0, i64 0), i64 3, i32 %35) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #19
  %37 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  %39 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN3net12_GLOBAL__N_118kNetworkChangesKeyE, i64 0, i64 0), i64 15, i32 %38) #19
  %40 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 7
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp ne i8 %41, 0
  %43 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN3net12_GLOBAL__N_110kPinnedKeyE, i64 0, i64 0), i64 6, i1 zeroext %42) #19
  br label %63

44:                                               ; preds = %3
  %45 = tail call i64 @_ZN4base4Time3NowEv() #19
  %46 = tail call i64 @_ZN4base9TimeTicks3NowEv() #19
  %47 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 10, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = sub nsw i64 %46, %48
  %50 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #19
  %51 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %45, i64* %51, align 8
  %52 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %49) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #19
  %53 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #19
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %8, i64 %52) #19
  %54 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN3net12_GLOBAL__N_114kExpirationKeyE, i64 0, i64 0), i64 10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #19
  %55 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #21
  br label %62

62:                                               ; preds = %44, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #19
  br label %63

63:                                               ; preds = %62, %29
  %64 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN3net12_GLOBAL__N_112kNetErrorKeyE, i64 0, i64 0), i64 9, i32 %65) #19
  br label %181

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %71 = load i8, i8* %70, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %102, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.base::ListValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #19
  %75 = bitcast %"class.base::ListValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 32, i1 false)
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %9) #19
  %76 = load i8, i8* %70, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %80, align 8
  %82 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %83 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %82, align 8
  %84 = icmp eq %"class.net::IPEndPoint"* %81, %83
  %85 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %9, i64 0, i32 0
  br i1 %84, label %91, label %86

86:                                               ; preds = %79
  %87 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %93

91:                                               ; preds = %99, %79
  %92 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN3net12_GLOBAL__N_113kAddressesKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %85) #19
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %85) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #19
  br label %102

93:                                               ; preds = %86, %99
  %94 = phi %"class.net::IPEndPoint"* [ %81, %86 ], [ %100, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #19
  call void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.net::IPEndPoint"* %94) #19
  call void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %85, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #19
  %95 = load i8, i8* %89, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %98) #21
  br label %99

99:                                               ; preds = %93, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #19
  %100 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %94, i64 1
  %101 = icmp eq %"class.net::IPEndPoint"* %100, %83
  br i1 %101, label %91, label %93

102:                                              ; preds = %69, %91
  %103 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %137, label %106

106:                                              ; preds = %102
  %107 = bitcast %"class.base::ListValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #19
  %108 = bitcast %"class.base::ListValue"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false)
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %11) #19
  %109 = load i8, i8* %103, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %106
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %114 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %113, align 8
  %115 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %116 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %115, align 8
  %117 = icmp eq %"class.std::__1::basic_string"* %114, %116
  %118 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %11, i64 0, i32 0
  br i1 %117, label %119, label %121

119:                                              ; preds = %121, %112
  %120 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN3net12_GLOBAL__N_115kTextRecordsKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %118) #19
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %118) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #19
  br label %137

121:                                              ; preds = %112, %121
  %122 = phi %"class.std::__1::basic_string"* [ %135, %121 ], [ %114, %112 ]
  %123 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  %130 = select i1 %126, i8* %128, i8* %129
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = zext i8 %125 to i64
  %134 = select i1 %126, i64 %132, i64 %133
  call void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %118, i8* %130, i64 %134) #19
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 1
  %136 = icmp eq %"class.std::__1::basic_string"* %135, %116
  br i1 %136, label %119, label %121

137:                                              ; preds = %102, %119
  %138 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %139 = load i8, i8* %138, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %181, label %141

141:                                              ; preds = %137
  %142 = bitcast %"class.base::ListValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %142) #19
  %143 = bitcast %"class.base::ListValue"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 32, i1 false)
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %12) #19
  %144 = bitcast %"class.base::ListValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %144) #19
  %145 = bitcast %"class.base::ListValue"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 32, i1 false)
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %13) #19
  %146 = load i8, i8* %138, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %141
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %151 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %150, align 8
  %152 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %153 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %152, align 8
  %154 = icmp eq %"class.net::HostPortPair"* %151, %153
  %155 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %12, i64 0, i32 0
  br i1 %154, label %158, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %13, i64 0, i32 0
  br label %162

158:                                              ; preds = %162, %149
  %159 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN3net12_GLOBAL__N_119kHostnameResultsKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %155) #19
  %160 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %13, i64 0, i32 0
  %161 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN3net12_GLOBAL__N_113kHostPortsKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %160) #19
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %160) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %144) #19
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %155) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %142) #19
  br label %181

162:                                              ; preds = %156, %162
  %163 = phi %"class.net::HostPortPair"* [ %151, %156 ], [ %179, %162 ]
  %164 = bitcast %"class.net::HostPortPair"* %163 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  %168 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = bitcast %"class.net::HostPortPair"* %163 to i8*
  %171 = select i1 %167, i8* %169, i8* %170
  %172 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = zext i8 %166 to i64
  %175 = select i1 %167, i64 %173, i64 %174
  call void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %155, i8* %171, i64 %175) #19
  %176 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %163, i64 0, i32 1
  %177 = load i16, i16* %176, align 8
  %178 = zext i16 %177 to i32
  call void @_ZN4base5Value6AppendEi(%"class.base::Value"* nonnull %157, i32 %178) #19
  %179 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %163, i64 1
  %180 = icmp eq %"class.net::HostPortPair"* %179, %153
  br i1 %180, label %158, label %162

181:                                              ; preds = %137, %67, %158
  ret void
}

declare void @_ZN3net11AddressList11DeduplicateEv(%"class.net::AddressList"*) local_unnamed_addr #1

declare void @_ZN3net11AddressList16AppendDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::AddressList"*, %"class.std::__1::vector.17"*) local_unnamed_addr #1

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEONS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::Value"*, i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3net6NetLog17TickCountToStringERKN4base9TimeTicksE(%"class.std::__1::basic_string"* sret, %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #1

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #1

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #1

declare void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #4

declare void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base5Value6AppendEi(%"class.base::Value"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCacheC2Em(%"class.net::HostCache"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #19
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 5
  %11 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  %12 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #19
  %13 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %12, i64 0, i32 0
  store %"class.base::TickClock"* %13, %"class.base::TickClock"** %10, align 8
  ret void
}

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCacheD2Ev(%"class.net::HostCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.std::__1::pair.120"* @_ZN3net9HostCache6LookupERKNS0_3KeyEN4base9TimeTicksEb(%"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %4
  %9 = tail call %"struct.std::__1::pair.120"* @_ZN3net9HostCache28LookupInternalIgnoringFieldsERKNS0_3KeyEN4base9TimeTicksEb(%"class.net::HostCache"* %0, %"struct.net::HostCache::Key"* dereferenceable(232) %1, i64 %2, i1 zeroext %3)
  %10 = icmp eq %"struct.std::__1::pair.120"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %9, i64 0, i32 1, i32 10, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %9, i64 0, i32 1, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %17, %13
  %19 = icmp sle i64 %15, %2
  %20 = or i1 %19, %18
  br i1 %20, label %28, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %9, i64 0, i32 1, i32 12, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 1) #19
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 2147483647, i32 %26, !prof !9
  store i32 %27, i32* %22, align 4
  br label %28

28:                                               ; preds = %8, %11, %21, %4
  %29 = phi %"struct.std::__1::pair.120"* [ null, %4 ], [ null, %8 ], [ %9, %21 ], [ null, %11 ]
  ret %"struct.std::__1::pair.120"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.std::__1::pair.120"* @_ZN3net9HostCache28LookupInternalIgnoringFieldsERKNS0_3KeyEN4base9TimeTicksEb(%"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.net::HostCache::Key", align 8
  %6 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  %7 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %6, %"struct.net::HostCache::Key"* dereferenceable(232) %1) #19
  %8 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::pair.120"*
  %12 = select i1 %9, %"struct.std::__1::pair.120"* null, %"struct.std::__1::pair.120"* %11
  br i1 %3, label %13, label %88

13:                                               ; preds = %4
  %14 = bitcast %"struct.net::HostCache::Key"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %14) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 232, i1 false)
  %15 = bitcast %"struct.net::HostCache::Key"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"struct.net::HostCache::Key"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %20, i64 24, i1 false) #19
  br label %27

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %22, i8* %24, i64 %26) #19
  br label %27

27:                                               ; preds = %19, %21
  %28 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %5, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 1
  %30 = bitcast i32* %28 to i8*
  %31 = bitcast i32* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 12, i1 false) #19
  %32 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %5, i64 0, i32 5
  %33 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 5
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %32, %"class.net::NetworkIsolationKey"* dereferenceable(184) %33) #19
  %34 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %5, i64 0, i32 6
  %35 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = xor i8 %36, 1
  store i8 %37, i8* %34, align 8
  %38 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %6, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %5) #19
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %38, %8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 4
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"struct.std::__1::pair.120"*
  %42 = select i1 %39, %"struct.std::__1::pair.120"* null, %"struct.std::__1::pair.120"* %41
  %43 = icmp ne %"struct.std::__1::pair.120"* %12, null
  %44 = icmp ne %"struct.std::__1::pair.120"* %42, null
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %78

46:                                               ; preds = %27
  %47 = icmp eq %"struct.std::__1::pair.120"* %12, null
  %48 = or i1 %47, %44
  br i1 %48, label %49, label %78

49:                                               ; preds = %46
  %50 = and i1 %47, %44
  br i1 %50, label %78, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %12, i64 0, i32 1, i32 11
  %53 = load i32, i32* %52, align 8
  %54 = sub nsw i32 0, %53
  %55 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %42, i64 0, i32 1, i32 10, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = sub nsw i64 %2, %56
  %58 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %42, i64 0, i32 1, i32 11
  %59 = load i32, i32* %58, align 8
  %60 = sub nsw i32 0, %59
  %61 = icmp eq i32 %54, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %12, i64 0, i32 1, i32 10, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp sgt i64 %64, %2
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = icmp sgt i64 %57, -1
  br i1 %67, label %78, label %70

68:                                               ; preds = %62
  %69 = icmp slt i64 %57, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %68, %66
  %71 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %12, i64 0, i32 0, i32 6
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, %"struct.std::__1::pair.120"* %42, %"struct.std::__1::pair.120"* %12
  br label %78

75:                                               ; preds = %51
  %76 = icmp slt i32 %54, %60
  %77 = select i1 %76, %"struct.std::__1::pair.120"* %12, %"struct.std::__1::pair.120"* %42
  br label %78

78:                                               ; preds = %27, %46, %49, %66, %68, %70, %75
  %79 = phi %"struct.std::__1::pair.120"* [ null, %27 ], [ %12, %46 ], [ %42, %49 ], [ %74, %70 ], [ %77, %75 ], [ %12, %66 ], [ %42, %68 ]
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %32) #19
  %80 = bitcast %"struct.net::HostCache::Key"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #21
  br label %87

87:                                               ; preds = %78, %84
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %14) #19
  br label %88

88:                                               ; preds = %87, %4
  %89 = phi %"struct.std::__1::pair.120"* [ %79, %87 ], [ %12, %4 ]
  ret %"struct.std::__1::pair.120"* %89
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.std::__1::pair.120"* @_ZN3net9HostCache11LookupStaleERKNS0_3KeyEN4base9TimeTicksEPNS0_14EntryStalenessEb(%"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), i64, %"struct.net::HostCache::EntryStaleness"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %47, label %9

9:                                                ; preds = %5
  %10 = tail call %"struct.std::__1::pair.120"* @_ZN3net9HostCache28LookupInternalIgnoringFieldsERKNS0_3KeyEN4base9TimeTicksEb(%"class.net::HostCache"* %0, %"struct.net::HostCache::Key"* dereferenceable(232) %1, i64 %2, i1 zeroext %4)
  %11 = icmp eq %"struct.std::__1::pair.120"* %10, null
  br i1 %11, label %47, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %10, i64 0, i32 1, i32 10, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %10, i64 0, i32 1, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %18, %14
  %20 = icmp sle i64 %16, %2
  %21 = or i1 %20, %19
  %22 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %10, i64 0, i32 1, i32 12, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 1) #19
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 2147483647, i32 %26, !prof !9
  store i32 %27, i32* %22, align 4
  br i1 %21, label %28, label %35

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %10, i64 0, i32 1, i32 13, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 1) #19
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 2147483647, i32 %33, !prof !9
  store i32 %34, i32* %29, align 4
  br label %35

35:                                               ; preds = %12, %28
  %36 = icmp eq %"struct.net::HostCache::EntryStaleness"* %3, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %13, align 8
  %39 = sub nsw i64 %2, %16
  %40 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %3, i64 0, i32 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = load i32, i32* %17, align 8
  %42 = sub nsw i32 %38, %41
  %43 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %3, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %10, i64 0, i32 1, i32 13, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %3, i64 0, i32 2
  store i32 %45, i32* %46, align 4
  br label %47

47:                                               ; preds = %9, %35, %37, %5
  %48 = phi %"struct.std::__1::pair.120"* [ null, %5 ], [ null, %9 ], [ %10, %35 ], [ %10, %37 ]
  ret %"struct.std::__1::pair.120"* %48
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.std::__1::pair.120"* @_ZN3net9HostCache28GetLessStaleMoreSecureResultEN4base9TimeTicksEPNSt3__14pairIKNS0_3KeyENS0_5EntryEEES9_(i64, %"struct.std::__1::pair.120"* readonly, %"struct.std::__1::pair.120"* readonly) local_unnamed_addr #3 align 2 {
  %4 = icmp ne %"struct.std::__1::pair.120"* %1, null
  %5 = icmp ne %"struct.std::__1::pair.120"* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %7, label %39

7:                                                ; preds = %3
  %8 = icmp eq %"struct.std::__1::pair.120"* %1, null
  %9 = or i1 %8, %5
  br i1 %9, label %10, label %39

10:                                               ; preds = %7
  %11 = and i1 %8, %5
  br i1 %11, label %39, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %1, i64 0, i32 1, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = sub nsw i32 0, %14
  %16 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %2, i64 0, i32 1, i32 10, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = sub nsw i64 %0, %17
  %19 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %2, i64 0, i32 1, i32 11
  %20 = load i32, i32* %19, align 8
  %21 = sub nsw i32 0, %20
  %22 = icmp eq i32 %15, %21
  br i1 %22, label %23, label %36

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %1, i64 0, i32 1, i32 10, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp sgt i64 %25, %0
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = icmp sgt i64 %18, -1
  br i1 %28, label %39, label %31

29:                                               ; preds = %23
  %30 = icmp slt i64 %18, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %27, %29
  %32 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %1, i64 0, i32 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, %"struct.std::__1::pair.120"* %2, %"struct.std::__1::pair.120"* %1
  br label %39

36:                                               ; preds = %12
  %37 = icmp slt i32 %15, %21
  %38 = select i1 %37, %"struct.std::__1::pair.120"* %1, %"struct.std::__1::pair.120"* %2
  br label %39

39:                                               ; preds = %31, %36, %27, %29, %10, %7, %3
  %40 = phi %"struct.std::__1::pair.120"* [ null, %3 ], [ %1, %7 ], [ %2, %10 ], [ %35, %31 ], [ %38, %36 ], [ %1, %27 ], [ %2, %29 ]
  ret %"struct.std::__1::pair.120"* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.std::__1::pair.120"* @_ZN3net9HostCache14LookupInternalERKNS0_3KeyE(%"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  %4 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %3, %"struct.net::HostCache::Key"* dereferenceable(232) %1) #19
  %5 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  %7 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 4
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"struct.std::__1::pair.120"*
  %9 = select i1 %6, %"struct.std::__1::pair.120"* null, %"struct.std::__1::pair.120"* %8
  ret %"struct.std::__1::pair.120"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache3SetERKNS0_3KeyERKNS0_5EntryEN4base9TimeTicksENS7_9TimeDeltaE(%"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), %"class.net::HostCache::Entry"* dereferenceable(200), i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.net::HostCache::Entry", align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11, !prof !10

11:                                               ; preds = %5
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %13 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #19
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %15, i64* %14, align 8
  %16 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #19
  br label %17

17:                                               ; preds = %5, %11
  %18 = phi i8* [ null, %5 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 193, i32 0), %11 ]
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %5 ], [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), %11 ]
  %20 = phi i64 [ -6148914691236517206, %5 ], [ %16, %11 ]
  %21 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %163, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  %26 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %25, %"struct.net::HostCache::Key"* dereferenceable(232) %1) #19
  %27 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = icmp eq %"class.std::__1::__tree_end_node"* %26, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %126

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 33
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.net::HostCache::Entry"*
  %34 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 7
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 56
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br label %44

44:                                               ; preds = %31, %37
  %45 = phi i1 [ false, %31 ], [ %43, %37 ]
  %46 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 34
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to i8*
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp ne i8 %51, 0
  br i1 %48, label %53, label %54

53:                                               ; preds = %44
  br i1 %52, label %60, label %61

54:                                               ; preds = %44
  br i1 %52, label %55, label %60

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 35
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to %"class.net::AddressList"*
  %58 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = call i32 @_ZN3net24FindAddressListDeltaTypeERKNS_11AddressListES2_(%"class.net::AddressList"* dereferenceable(48) %57, %"class.net::AddressList"* dereferenceable(48) %58) #19
  br label %61

60:                                               ; preds = %53, %54
  br label %61

61:                                               ; preds = %55, %60, %53
  %62 = phi i8 [ 1, %55 ], [ 1, %60 ], [ 0, %53 ]
  %63 = phi i32 [ %59, %55 ], [ 3, %60 ], [ -1431655766, %53 ]
  %64 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 3
  %65 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %82

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 41
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to i8*
  %71 = load i8, i8* %70, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %82

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 45
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to i8*
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %99, label %82

82:                                               ; preds = %77, %73, %68, %61
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 41
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.absl::optional.24"*
  %85 = call zeroext i1 @_ZN4absleqINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESA_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSD_IT0_EE(%"class.absl::optional.24"* dereferenceable(32) %64, %"class.absl::optional.24"* dereferenceable(32) %84)
  br i1 %85, label %86, label %91

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 4
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 45
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.absl::optional.29"*
  %90 = call zeroext i1 @_ZN4absleqINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEES7_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSA_IT0_EE(%"class.absl::optional.29"* dereferenceable(32) %87, %"class.absl::optional.29"* dereferenceable(32) %89)
  br i1 %90, label %99, label %91

91:                                               ; preds = %86, %82
  %92 = call zeroext i1 @_ZN4absleqINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESA_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSD_IT0_EE(%"class.absl::optional.24"* dereferenceable(32) %64, %"class.absl::optional.24"* dereferenceable(32) %84)
  br i1 %92, label %99, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 4
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 45
  %96 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.absl::optional.29"*
  %97 = call zeroext i1 @_ZN4absleqINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEES7_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSA_IT0_EE(%"class.absl::optional.29"* dereferenceable(32) %94, %"class.absl::optional.29"* dereferenceable(32) %96)
  %98 = select i1 %97, i32 2, i32 3
  br label %99

99:                                               ; preds = %77, %93, %91, %86
  %100 = phi i1 [ false, %77 ], [ true, %86 ], [ true, %91 ], [ true, %93 ]
  %101 = phi i32 [ -1431655766, %77 ], [ 0, %86 ], [ 2, %91 ], [ %98, %93 ]
  %102 = icmp eq i8 %62, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = select i1 %100, i32 %101, i32 0
  br label %113

105:                                              ; preds = %99
  br i1 %100, label %106, label %113

106:                                              ; preds = %105
  %107 = icmp eq i32 %63, 3
  %108 = icmp eq i32 %101, 3
  %109 = or i1 %107, %108
  br i1 %109, label %113, label %110

110:                                              ; preds = %106
  %111 = icmp slt i32 %63, %101
  %112 = select i1 %111, i32 %101, i32 %63
  br label %113

113:                                              ; preds = %103, %106, %105, %110
  %114 = phi i32 [ %112, %110 ], [ %63, %105 ], [ %104, %103 ], [ 3, %106 ]
  %115 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %2, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %123

118:                                              ; preds = %113
  %119 = bitcast %"class.std::__1::__tree_end_node"* %32 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = or i32 %114, %120
  %122 = icmp ne i32 %121, 0
  br label %123

123:                                              ; preds = %118, %113
  %124 = phi i1 [ false, %113 ], [ %122, %118 ]
  %125 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEE(%"class.std::__1::__tree"* %25, %"class.std::__1::__tree_end_node"* %26) #19
  br label %132

126:                                              ; preds = %29, %130
  %127 = load i64, i64* %30, align 8
  %128 = load i64, i64* %21, align 8
  %129 = icmp ult i64 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = call zeroext i1 @_ZN3net9HostCache13EvictOneEntryEN4base9TimeTicksE(%"class.net::HostCache"* %0, i64 %3)
  br i1 %131, label %126, label %132

132:                                              ; preds = %126, %130, %123
  %133 = phi i1 [ %124, %123 ], [ true, %130 ], [ true, %126 ]
  %134 = phi i1 [ %45, %123 ], [ false, %130 ], [ false, %126 ]
  %135 = bitcast %"class.net::HostCache::Entry"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %135) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 200, i1 false)
  %136 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 8
  call void @_ZN3net9HostCache5EntryC2ERKS1_N4base9TimeTicksENS4_9TimeDeltaEi(%"class.net::HostCache::Entry"* nonnull %7, %"class.net::HostCache::Entry"* dereferenceable(200) %2, i64 %3, i64 %4, i32 %137)
  br i1 %134, label %138, label %140

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 7
  store i8 1, i8* %139, align 4
  br label %140

140:                                              ; preds = %138, %132
  %141 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %142 = load i8, i8* %141, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %151, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = icmp eq i64* %146, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %144
  %149 = bitcast i64* %146 to i8*
  call void @_ZdlPv(i8* %149) #21
  br label %150

150:                                              ; preds = %148, %144
  store i8 0, i8* %141, align 8
  br label %151

151:                                              ; preds = %140, %150
  %152 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRKS4_S5_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %25, %"struct.net::HostCache::Key"* dereferenceable(232) %1, %"struct.net::HostCache::Key"* dereferenceable(232) %1, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %7) #19
  %153 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 4
  %154 = load %"class.net::HostCache::PersistenceDelegate"*, %"class.net::HostCache::PersistenceDelegate"** %153, align 8
  %155 = icmp eq %"class.net::HostCache::PersistenceDelegate"* %154, null
  %156 = xor i1 %133, true
  %157 = or i1 %155, %156
  br i1 %157, label %162, label %158

158:                                              ; preds = %151
  %159 = bitcast %"class.net::HostCache::PersistenceDelegate"* %154 to void (%"class.net::HostCache::PersistenceDelegate"*)***
  %160 = load void (%"class.net::HostCache::PersistenceDelegate"*)**, void (%"class.net::HostCache::PersistenceDelegate"*)*** %159, align 8
  %161 = load void (%"class.net::HostCache::PersistenceDelegate"*)*, void (%"class.net::HostCache::PersistenceDelegate"*)** %160, align 8
  call void %161(%"class.net::HostCache::PersistenceDelegate"* nonnull %154) #19
  br label %162

162:                                              ; preds = %151, %158
  call void @_ZN3net9HostCache5EntryD2Ev(%"class.net::HostCache::Entry"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %135) #19
  br label %163

163:                                              ; preds = %17, %162
  %164 = icmp eq i8* %18, null
  br i1 %164, label %169, label %165

165:                                              ; preds = %163
  %166 = load i8, i8* %18, align 1
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %169, label %168

168:                                              ; preds = %165
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %19, i64 %20) #19
  br label %169

169:                                              ; preds = %163, %165, %168
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net9HostCache12HasActivePinERKNS0_5EntryE(%"class.net::HostCache"* nocapture readonly, %"class.net::HostCache::Entry"* nocapture readonly dereferenceable(200)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 7
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %1, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ false, %2 ], [ %11, %6 ]
  ret i1 %13
}

declare i32 @_ZN3net24FindAddressListDeltaTypeERKNS_11AddressListES2_(%"class.net::AddressList"* dereferenceable(48), %"class.net::AddressList"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4absleqINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESA_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSD_IT0_EE(%"class.absl::optional.24"* dereferenceable(32), %"class.absl::optional.24"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  %12 = xor i1 %9, true
  br i1 %11, label %94, label %13

13:                                               ; preds = %2
  %14 = icmp eq i8 %7, 0
  br i1 %14, label %15, label %16, !prof !9

15:                                               ; preds = %13
  tail call void @llvm.trap() #19
  unreachable

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.17"* %17 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.17"* %18 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = icmp eq i64 %24, %30
  %32 = inttoptr i64 %23 to %"class.std::__1::basic_string"*
  %33 = inttoptr i64 %21 to %"class.std::__1::basic_string"*
  br i1 %31, label %34, label %94

34:                                               ; preds = %16
  %35 = icmp eq %"class.std::__1::basic_string"* %32, %33
  br i1 %35, label %94, label %36

36:                                               ; preds = %34
  %37 = inttoptr i64 %29 to %"class.std::__1::basic_string"*
  br label %38

38:                                               ; preds = %36, %90
  %39 = phi %"class.std::__1::basic_string"* [ %92, %90 ], [ %37, %36 ]
  %40 = phi %"class.std::__1::basic_string"* [ %91, %90 ], [ %32, %36 ]
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %54, i64 %55
  %57 = icmp eq i64 %48, %56
  br i1 %57, label %58, label %94

58:                                               ; preds = %38
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %62 = select i1 %44, i8* %60, i8* %61
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %66 = select i1 %52, i8* %64, i8* %65
  %67 = icmp eq i64 %48, 0
  br i1 %44, label %74, label %68

68:                                               ; preds = %58
  br i1 %67, label %90, label %69

69:                                               ; preds = %68
  %70 = ptrtoint i8* %60 to i64
  %71 = trunc i64 %70 to i8
  %72 = load i8, i8* %66, align 1
  %73 = icmp eq i8 %72, %71
  br i1 %73, label %75, label %94

74:                                               ; preds = %58
  br i1 %67, label %90, label %87

75:                                               ; preds = %69, %82
  %76 = phi i64 [ %79, %82 ], [ %47, %69 ]
  %77 = phi i8* [ %80, %82 ], [ %61, %69 ]
  %78 = phi i8* [ %83, %82 ], [ %66, %69 ]
  %79 = add i64 %76, -1
  %80 = getelementptr inbounds i8, i8* %77, i64 1
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds i8, i8* %78, i64 1
  %84 = load i8, i8* %80, align 1
  %85 = load i8, i8* %83, align 1
  %86 = icmp eq i8 %84, %85
  br i1 %86, label %75, label %94

87:                                               ; preds = %74
  %88 = tail call i32 @bcmp(i8* %62, i8* %66, i64 %48) #19
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %75, %87, %74, %68
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 1
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 1
  %93 = icmp eq %"class.std::__1::basic_string"* %91, %33
  br i1 %93, label %94, label %38

94:                                               ; preds = %90, %87, %69, %38, %82, %2, %34, %16
  %95 = phi i1 [ %12, %2 ], [ false, %16 ], [ true, %34 ], [ false, %82 ], [ true, %90 ], [ false, %38 ], [ false, %87 ], [ false, %69 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4absleqINSt3__16vectorIN3net12HostPortPairENS1_9allocatorIS4_EEEES7_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSA_IT0_EE(%"class.absl::optional.29"* dereferenceable(32), %"class.absl::optional.29"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  %12 = xor i1 %9, true
  br i1 %11, label %100, label %13

13:                                               ; preds = %2
  %14 = icmp eq i8 %7, 0
  br i1 %14, label %15, label %16, !prof !9

15:                                               ; preds = %13
  tail call void @llvm.trap() #19
  unreachable

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %20 = bitcast %"class.net::HostPortPair"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.34"* %17 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.net::HostPortPair"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.34"* %18 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = icmp eq i64 %24, %30
  %32 = inttoptr i64 %23 to %"class.net::HostPortPair"*
  %33 = inttoptr i64 %21 to %"class.net::HostPortPair"*
  br i1 %31, label %34, label %100

34:                                               ; preds = %16
  %35 = icmp eq %"class.net::HostPortPair"* %32, %33
  br i1 %35, label %100, label %36

36:                                               ; preds = %34
  %37 = inttoptr i64 %29 to %"class.net::HostPortPair"*
  br label %38

38:                                               ; preds = %36, %96
  %39 = phi %"class.net::HostPortPair"* [ %98, %96 ], [ %37, %36 ]
  %40 = phi %"class.net::HostPortPair"* [ %97, %96 ], [ %32, %36 ]
  %41 = bitcast %"class.net::HostPortPair"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = bitcast %"class.net::HostPortPair"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %54, i64 %55
  %57 = icmp eq i64 %48, %56
  br i1 %57, label %58, label %100

58:                                               ; preds = %38
  %59 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.net::HostPortPair"* %40 to i8*
  %62 = select i1 %44, i8* %60, i8* %61
  %63 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.net::HostPortPair"* %39 to i8*
  %66 = select i1 %52, i8* %64, i8* %65
  %67 = icmp eq i64 %48, 0
  br i1 %44, label %74, label %68

68:                                               ; preds = %58
  br i1 %67, label %90, label %69

69:                                               ; preds = %68
  %70 = ptrtoint i8* %60 to i64
  %71 = trunc i64 %70 to i8
  %72 = load i8, i8* %66, align 1
  %73 = icmp eq i8 %72, %71
  br i1 %73, label %75, label %100

74:                                               ; preds = %58
  br i1 %67, label %90, label %87

75:                                               ; preds = %69, %82
  %76 = phi i64 [ %79, %82 ], [ %47, %69 ]
  %77 = phi i8* [ %80, %82 ], [ %61, %69 ]
  %78 = phi i8* [ %83, %82 ], [ %66, %69 ]
  %79 = add i64 %76, -1
  %80 = getelementptr inbounds i8, i8* %77, i64 1
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds i8, i8* %78, i64 1
  %84 = load i8, i8* %80, align 1
  %85 = load i8, i8* %83, align 1
  %86 = icmp eq i8 %84, %85
  br i1 %86, label %75, label %100

87:                                               ; preds = %74
  %88 = tail call i32 @bcmp(i8* %62, i8* %66, i64 %48) #19
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %100

90:                                               ; preds = %75, %87, %74, %68
  %91 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %40, i64 0, i32 1
  %92 = load i16, i16* %91, align 8
  %93 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %39, i64 0, i32 1
  %94 = load i16, i16* %93, align 8
  %95 = icmp eq i16 %92, %94
  br i1 %95, label %96, label %100

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %40, i64 1
  %98 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %39, i64 1
  %99 = icmp eq %"class.net::HostPortPair"* %97, %33
  br i1 %99, label %100, label %38

100:                                              ; preds = %96, %90, %87, %69, %38, %82, %2, %34, %16
  %101 = phi i1 [ %12, %2 ], [ false, %16 ], [ true, %34 ], [ false, %82 ], [ true, %96 ], [ false, %69 ], [ false, %38 ], [ false, %87 ], [ false, %90 ]
  ret i1 %101
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net9HostCache4sizeEv(%"class.net::HostCache"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9HostCache13EvictOneEntryEN4base9TimeTicksE(%"class.net::HostCache"*, i64) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::HostCache"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = inttoptr i64 %4 to %"class.std::__1::__tree_end_node"*
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %85, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  br label %12

10:                                               ; preds = %77
  %11 = icmp eq i8 %49, 0
  br i1 %11, label %85, label %81

12:                                               ; preds = %8, %77
  %13 = phi i64 [ -6148914691236517206, %8 ], [ %50, %77 ]
  %14 = phi i8 [ 0, %8 ], [ %49, %77 ]
  %15 = phi i64 [ %4, %8 ], [ %79, %77 ]
  %16 = inttoptr i64 %15 to %"class.std::__1::__tree_node"*
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 7
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 11
  %22 = load i32, i32* %21, align 8
  %23 = load i32, i32* %9, align 8
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %48, label %25

25:                                               ; preds = %12, %20
  %26 = icmp eq i8 %14, 0
  br i1 %26, label %48, label %27

27:                                               ; preds = %25
  %28 = inttoptr i64 %13 to %"class.std::__1::__tree_node"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 10, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %28, i64 0, i32 2, i32 0, i32 1, i32 10, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %30, %32
  br i1 %33, label %34, label %48

34:                                               ; preds = %27
  %35 = load i32, i32* %9, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 2, i32 0, i32 1, i32 11
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %37, %35
  %39 = icmp sle i64 %30, %1
  %40 = or i1 %39, %38
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %28, i64 0, i32 2, i32 0, i32 1, i32 11
  %43 = load i32, i32* %42, align 8
  %44 = icmp slt i32 %43, %35
  %45 = icmp sle i64 %32, %1
  %46 = or i1 %45, %44
  br i1 %46, label %48, label %47

47:                                               ; preds = %34, %41
  br label %48

48:                                               ; preds = %25, %27, %47, %41, %20
  %49 = phi i8 [ %14, %20 ], [ %14, %47 ], [ %14, %41 ], [ 1, %25 ], [ %14, %27 ]
  %50 = phi i64 [ %13, %20 ], [ %15, %47 ], [ %13, %41 ], [ %15, %25 ], [ %13, %27 ]
  %51 = inttoptr i64 %15 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 1
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %61

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 2
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, %51
  br i1 %60, label %77, label %68

61:                                               ; preds = %48, %61
  %62 = phi %"class.std::__1::__tree_node_base"* [ %64, %61 ], [ %53, %48 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %66, label %61

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  br label %77

68:                                               ; preds = %55, %68
  %69 = phi %"class.std::__1::__tree_end_node"** [ %72, %68 ], [ %56, %55 ]
  %70 = bitcast %"class.std::__1::__tree_end_node"** %69 to %"class.std::__1::__tree_node_base"**
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 2
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, %71
  br i1 %76, label %77, label %68

77:                                               ; preds = %68, %55, %66
  %78 = phi %"class.std::__1::__tree_end_node"* [ %67, %66 ], [ %57, %55 ], [ %73, %68 ]
  %79 = ptrtoint %"class.std::__1::__tree_end_node"* %78 to i64
  %80 = icmp eq %"class.std::__1::__tree_end_node"* %5, %78
  br i1 %80, label %10, label %12

81:                                               ; preds = %10
  %82 = inttoptr i64 %50 to %"class.std::__1::__tree_end_node"*
  %83 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  %84 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEE(%"class.std::__1::__tree"* %83, %"class.std::__1::__tree_end_node"* %82) #19
  br label %85

85:                                               ; preds = %2, %10, %81
  %86 = phi i1 [ true, %81 ], [ false, %10 ], [ false, %2 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache8AddEntryERKNS0_3KeyEONS0_5EntryE(%"class.net::HostCache"*, %"struct.net::HostCache::Key"* dereferenceable(232), %"class.net::HostCache::Entry"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  %5 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRKS4_S5_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %4, %"struct.net::HostCache::Key"* dereferenceable(232) %1, %"struct.net::HostCache::Key"* dereferenceable(232) %1, %"class.net::HostCache::Entry"* dereferenceable(200) %2) #19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net9HostCache10InvalidateEv(%"class.net::HostCache"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net9HostCache24set_persistence_delegateEPNS0_19PersistenceDelegateE(%"class.net::HostCache"* nocapture, %"class.net::HostCache::PersistenceDelegate"*) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 4
  store %"class.net::HostCache::PersistenceDelegate"* %1, %"class.net::HostCache::PersistenceDelegate"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache5clearEv(%"class.net::HostCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #19
  store i64 0, i64* %2, align 8
  %10 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 4
  %13 = load %"class.net::HostCache::PersistenceDelegate"*, %"class.net::HostCache::PersistenceDelegate"** %12, align 8
  %14 = icmp eq %"class.net::HostCache::PersistenceDelegate"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %5
  %16 = bitcast %"class.net::HostCache::PersistenceDelegate"* %13 to void (%"class.net::HostCache::PersistenceDelegate"*)***
  %17 = load void (%"class.net::HostCache::PersistenceDelegate"*)**, void (%"class.net::HostCache::PersistenceDelegate"*)*** %16, align 8
  %18 = load void (%"class.net::HostCache::PersistenceDelegate"*)*, void (%"class.net::HostCache::PersistenceDelegate"*)** %17, align 8
  tail call void %18(%"class.net::HostCache::PersistenceDelegate"* nonnull %13) #19
  br label %19

19:                                               ; preds = %5, %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9HostCache13ClearForHostsERKN4base17RepeatingCallbackIFbRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEE(%"class.net::HostCache"*, %"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %86, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %11, %"class.std::__1::__tree_node"* %14) #19
  store i64 0, i64* %7, align 8
  %15 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %16, align 8
  %17 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 4
  %18 = load %"class.net::HostCache::PersistenceDelegate"*, %"class.net::HostCache::PersistenceDelegate"** %17, align 8
  %19 = icmp eq %"class.net::HostCache::PersistenceDelegate"* %18, null
  br i1 %19, label %86, label %20

20:                                               ; preds = %10
  %21 = bitcast %"class.net::HostCache::PersistenceDelegate"* %18 to void (%"class.net::HostCache::PersistenceDelegate"*)***
  %22 = load void (%"class.net::HostCache::PersistenceDelegate"*)**, void (%"class.net::HostCache::PersistenceDelegate"*)*** %21, align 8
  %23 = load void (%"class.net::HostCache::PersistenceDelegate"*)*, void (%"class.net::HostCache::PersistenceDelegate"*)** %22, align 8
  tail call void %23(%"class.net::HostCache::PersistenceDelegate"* nonnull %18) #19
  br label %86

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = icmp eq %"class.std::__1::__tree_end_node"* %26, %27
  br i1 %28, label %86, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %29, %79
  %32 = phi i8 [ 0, %29 ], [ %80, %79 ]
  %33 = phi %"class.std::__1::__tree_end_node"* [ %26, %29 ], [ %69, %79 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 1, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %44, label %52

37:                                               ; preds = %79
  %38 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 4
  %39 = load %"class.net::HostCache::PersistenceDelegate"*, %"class.net::HostCache::PersistenceDelegate"** %38, align 8
  %40 = icmp eq %"class.net::HostCache::PersistenceDelegate"* %39, null
  %41 = and i8 %80, 1
  %42 = icmp eq i8 %41, 0
  %43 = or i1 %42, %40
  br i1 %43, label %86, label %82

44:                                               ; preds = %31
  %45 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 2
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_end_node"**
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, %45
  br i1 %51, label %68, label %59

52:                                               ; preds = %31, %52
  %53 = phi %"class.std::__1::__tree_node_base"* [ %55, %52 ], [ %35, %31 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %52

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 0
  br label %68

59:                                               ; preds = %44, %59
  %60 = phi %"class.std::__1::__tree_end_node"** [ %63, %59 ], [ %47, %44 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"** %60 to %"class.std::__1::__tree_node_base"**
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %62
  br i1 %67, label %68, label %59

68:                                               ; preds = %59, %57, %44
  %69 = phi %"class.std::__1::__tree_end_node"* [ %58, %57 ], [ %48, %44 ], [ %64, %59 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 4
  %71 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::basic_string"*
  %72 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %73 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %72, i64 0, i32 1
  %74 = bitcast void ()** %73 to i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %75 = load i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %74, align 8
  %76 = tail call zeroext i1 %75(%"class.base::internal::BindStateBase"* %72, %"class.std::__1::basic_string"* dereferenceable(24) %71) #19
  br i1 %76, label %77, label %79

77:                                               ; preds = %68
  %78 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEE(%"class.std::__1::__tree"* %30, %"class.std::__1::__tree_end_node"* %33) #19
  br label %79

79:                                               ; preds = %77, %68
  %80 = phi i8 [ 1, %77 ], [ %32, %68 ]
  %81 = icmp eq %"class.std::__1::__tree_end_node"* %69, %27
  br i1 %81, label %37, label %31

82:                                               ; preds = %37
  %83 = bitcast %"class.net::HostCache::PersistenceDelegate"* %39 to void (%"class.net::HostCache::PersistenceDelegate"*)***
  %84 = load void (%"class.net::HostCache::PersistenceDelegate"*)**, void (%"class.net::HostCache::PersistenceDelegate"*)*** %83, align 8
  %85 = load void (%"class.net::HostCache::PersistenceDelegate"*)*, void (%"class.net::HostCache::PersistenceDelegate"*)** %84, align 8
  tail call void %85(%"class.net::HostCache::PersistenceDelegate"* nonnull %39) #19
  br label %86

86:                                               ; preds = %24, %20, %10, %6, %82, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9HostCache14GetAsListValueEPN4base9ListValueEbNS0_17SerializationTypeE(%"class.net::HostCache"*, %"class.base::ListValue"*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::Value", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::Value", align 8
  tail call void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"* %1) #19
  %9 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %23, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.base::Value"* %5 to i8*
  %15 = icmp eq i32 %3, 0
  %16 = bitcast %"class.base::Value"* %6 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::Value"* %8 to i8*
  %22 = bitcast %"class.base::Value"* %5 to i8*
  br label %24

23:                                               ; preds = %105, %4
  ret void

24:                                               ; preds = %13, %105
  %25 = phi %"class.std::__1::__tree_end_node"* [ %10, %13 ], [ %106, %105 ]
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"struct.std::__1::pair.120"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 33
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.net::HostCache::Entry"*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %5) #19
  br i1 %15, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 9
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.net::NetworkIsolationKey"*
  %33 = call zeroext i1 @_ZNK3net19NetworkIsolationKey7ToValueEPN4base5ValueE(%"class.net::NetworkIsolationKey"* %32, %"class.base::Value"* nonnull %5) #19
  br i1 %33, label %43, label %77

34:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #19
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 9
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.net::NetworkIsolationKey"*
  call void @_ZNK3net19NetworkIsolationKey13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.net::NetworkIsolationKey"* %36) #19
  call void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #19
  %37 = call dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"* nonnull %5, %"class.base::Value"* nonnull dereferenceable(32) %6) #19
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #19
  %38 = load i8, i8* %19, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %41) #21
  br label %42

42:                                               ; preds = %34, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #19
  br label %43

43:                                               ; preds = %42, %30
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #19
  call void @_ZNK3net9HostCache5Entry10GetAsValueEb(%"class.base::Value"* nonnull sret %8, %"class.net::HostCache::Entry"* %29, i1 zeroext %2)
  %44 = call i8* @_Znwm(i64 32) #21
  %45 = bitcast i8* %44 to %"class.base::Value"*
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %45, %"class.base::Value"* nonnull dereferenceable(32) %8) #19
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #19
  %46 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = bitcast %"class.std::__1::__tree_end_node"* %26 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast %"class.std::__1::__tree_end_node"* %26 to i8*
  %53 = select i1 %49, i8* %51, i8* %52
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 5
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %48 to i64
  %58 = select i1 %49, i64 %56, i64 %57
  %59 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN3net12_GLOBAL__N_112kHostnameKeyE, i64 0, i64 0), i64 8, i8* %53, i64 %58) #19
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 7
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to i32*
  %62 = load i32, i32* %61, align 8
  %63 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %45, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN3net12_GLOBAL__N_116kDnsQueryTypeKeyE, i64 0, i64 0), i64 14, i32 %62) #19
  %64 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %27, i64 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %45, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN3net12_GLOBAL__N_19kFlagsKeyE, i64 0, i64 0), i64 5, i32 %65) #19
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 8
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to i32*
  %69 = load i32, i32* %68, align 8
  %70 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZN3net12_GLOBAL__N_122kHostResolverSourceKeyE, i64 0, i64 0), i64 20, i32 %69) #19
  %71 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN3net12_GLOBAL__N_123kNetworkIsolationKeyKeyE, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %5) #19
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 32
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to i8*
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp ne i8 %74, 0
  %76 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN3net12_GLOBAL__N_110kSecureKeyE, i64 0, i64 0), i64 6, i1 zeroext %75) #19
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* %1, %"class.base::Value"* nonnull %45) #19
  br label %77

77:                                               ; preds = %30, %43
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #19
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %81, label %89

81:                                               ; preds = %77
  %82 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node_base"*
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 2
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_end_node"**
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, %82
  br i1 %88, label %105, label %96

89:                                               ; preds = %77, %89
  %90 = phi %"class.std::__1::__tree_node_base"* [ %92, %89 ], [ %79, %77 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %89

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0
  br label %105

96:                                               ; preds = %81, %96
  %97 = phi %"class.std::__1::__tree_end_node"** [ %100, %96 ], [ %84, %81 ]
  %98 = bitcast %"class.std::__1::__tree_end_node"** %97 to %"class.std::__1::__tree_node_base"**
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  br i1 %104, label %105, label %96

105:                                              ; preds = %96, %81, %94
  %106 = phi %"class.std::__1::__tree_end_node"* [ %95, %94 ], [ %85, %81 ], [ %101, %96 ]
  %107 = icmp eq %"class.std::__1::__tree_end_node"* %106, %11
  br i1 %107, label %23, label %24
}

declare void @_ZN4base9ListValue5ClearEv(%"class.base::ListValue"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #4

declare zeroext i1 @_ZNK3net19NetworkIsolationKey7ToValueEPN4base5ValueE(%"class.net::NetworkIsolationKey"*, %"class.base::Value"*) local_unnamed_addr #1

declare void @_ZNK3net19NetworkIsolationKey13ToDebugStringEv(%"class.std::__1::basic_string"* sret, %"class.net::NetworkIsolationKey"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(32) %"class.base::Value"* @_ZN4base5ValueaSEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net9HostCache20RestoreFromListValueERKN4base9ListValueE(%"class.net::HostCache"*, %"class.base::ListValue"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = alloca %"class.base::CheckedContiguousIterator", align 8
  %14 = alloca %"class.base::CheckedContiguousIterator", align 8
  %15 = alloca %"class.net::IPAddress", align 1
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.base::BasicStringPiece", align 8
  %18 = alloca %"class.net::IPEndPoint", align 2
  %19 = alloca %"class.base::TimeDelta", align 8
  %20 = alloca %"class.base::CheckedContiguousIterator", align 8
  %21 = alloca %"class.base::CheckedContiguousIterator", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.net::NetworkIsolationKey", align 8
  %25 = alloca i64, align 8
  %26 = alloca %"class.absl::optional.7", align 8
  %27 = alloca %"class.absl::optional.24", align 8
  %28 = alloca %"class.base::CheckedContiguousIterator", align 8
  %29 = alloca %"class.base::CheckedContiguousIterator", align 8
  %30 = alloca %"class.absl::optional.29", align 8
  %31 = alloca %"class.net::HostPortPair", align 8
  %32 = alloca %"struct.net::HostCache::Key", align 8
  %33 = alloca %"class.net::HostCache::Entry", align 8
  %34 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 3
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %1, i64 0, i32 0
  %36 = tail call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %35) #19
  %37 = bitcast %"class.base::CheckedContiguousIterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #19
  %38 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %20, i64 0, i32 1
  %39 = icmp eq %"class.std::__1::vector.81"* %36, null
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  br i1 %39, label %50, label %41

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %36, i64 0, i32 0, i32 0
  %43 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %36, i64 0, i32 0, i32 1
  %45 = bitcast %"class.base::Value"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = ptrtoint %"class.base::Value"* %43 to i64
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 5
  br label %50

50:                                               ; preds = %2, %41
  %51 = phi %"class.base::Value"* [ %43, %41 ], [ null, %2 ]
  %52 = phi i64 [ %49, %41 ], [ 0, %2 ]
  %53 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %51, i64 %52
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %20, %"class.base::Value"* %51, %"class.base::Value"* %51, %"class.base::Value"* %53) #19
  %54 = bitcast %"class.base::CheckedContiguousIterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #19
  %55 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %21, i64 0, i32 1
  %56 = bitcast %"class.base::CheckedContiguousIterator"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  br i1 %39, label %67, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %36, i64 0, i32 0, i32 0
  %59 = load %"class.base::Value"*, %"class.base::Value"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %36, i64 0, i32 0, i32 1
  %61 = bitcast %"class.base::Value"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = ptrtoint %"class.base::Value"* %59 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 5
  %66 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 %65
  br label %67

67:                                               ; preds = %50, %57
  %68 = phi %"class.base::Value"* [ %59, %57 ], [ null, %50 ]
  %69 = phi %"class.base::Value"* [ %66, %57 ], [ null, %50 ]
  %70 = phi i64 [ %65, %57 ], [ 0, %50 ]
  %71 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %68, i64 %70
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %21, %"class.base::Value"* %68, %"class.base::Value"* %69, %"class.base::Value"* %71) #19
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %20, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %21) #19
  %72 = load %"class.base::Value"*, %"class.base::Value"** %38, align 8
  %73 = load %"class.base::Value"*, %"class.base::Value"** %55, align 8
  %74 = icmp eq %"class.base::Value"* %72, %73
  br i1 %74, label %799, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %77 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 1
  %78 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %24, i64 0, i32 0
  %85 = bitcast i64* %25 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 5
  %89 = bitcast %"class.base::TimeDelta"* %19 to i8*
  %90 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 0, i32 0
  %91 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %26, i64 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast %union.anon.11* %92 to i8*
  %94 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %95 = bitcast %"class.base::CheckedContiguousIterator"* %13 to i8*
  %96 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %13, i64 0, i32 1
  %97 = bitcast %"class.base::CheckedContiguousIterator"* %14 to i8*
  %98 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %14, i64 0, i32 1
  %99 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %15, i64 0, i32 0, i32 0, i32 0, i64 0
  %100 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  %104 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  %105 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  %108 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %109 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.absl::optional.7", %"class.absl::optional.7"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %"class.net::IPEndPoint"** %109 to i64*
  %112 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %94, i64 0, i32 0
  %113 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %27, i64 0, i32 0, i32 0, i32 0, i32 1
  %115 = bitcast %union.anon.28* %114 to i8*
  %116 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %117 = bitcast %"class.std::__1::vector.17"* %116 to i8*
  %118 = bitcast %"class.base::CheckedContiguousIterator"* %28 to i8*
  %119 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %28, i64 0, i32 1
  %120 = bitcast %"class.base::CheckedContiguousIterator"* %29 to i8*
  %121 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %29, i64 0, i32 1
  %122 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %124 = bitcast %"class.std::__1::basic_string"** %122 to i64*
  %125 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %30, i64 0, i32 0, i32 0, i32 0, i32 1
  %127 = bitcast %union.anon.33* %126 to i8*
  %128 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %129 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %128, i64 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %131 = bitcast %"class.std::__1::vector.34"* %128 to i8**
  %132 = bitcast %"class.std::__1::vector.34"* %128 to i8*
  %133 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  %134 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  %135 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  %136 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  %137 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  %138 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  %139 = bitcast %"class.net::HostPortPair"* %31 to i8*
  %140 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  %141 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  %142 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  %143 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  %144 = getelementptr inbounds %"class.absl::optional.29", %"class.absl::optional.29"* %30, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %145 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %31, i64 0, i32 1
  %146 = bitcast %"class.net::HostPortPair"** %130 to i64*
  %147 = bitcast %"class.net::HostPortPair"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = bitcast %"struct.net::HostCache::Key"* %32 to i8*
  %151 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %32, i64 0, i32 0
  %154 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %32, i64 0, i32 1
  %155 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %32, i64 0, i32 2
  %156 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %32, i64 0, i32 3
  %157 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %32, i64 0, i32 5
  %158 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %32, i64 0, i32 6
  %159 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %161 = bitcast %"class.net::HostCache::Entry"* %33 to i8*
  %162 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  %163 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 0
  %164 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %166 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %168 = bitcast %"class.std::__1::basic_string"** %123 to i64*
  %169 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %170 = bitcast %"class.std::__1::basic_string"** %169 to i64*
  %171 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %173 = bitcast %"class.net::HostPortPair"** %144 to i64*
  %174 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %175 = bitcast %"class.net::HostPortPair"** %174 to i64*
  %176 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 9, i32 0
  %178 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 10, i32 0, i32 0
  %179 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 11
  %180 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 12, i32 0
  %181 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %33, i64 0, i32 13, i32 0
  %182 = bitcast %"struct.net::HostCache::Key"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %116, i64 0, i32 0, i32 0
  %186 = bitcast %"class.std::__1::vector.17"* %116 to i8**
  %187 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %188 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %189 = bitcast %"class.base::CheckedContiguousIterator"* %28 to i8*
  %190 = bitcast %"class.base::CheckedContiguousIterator"* %29 to i8*
  %191 = bitcast %"class.base::CheckedContiguousIterator"* %29 to i8*
  %192 = bitcast %"class.absl::optional.7"* %26 to i64*
  %193 = bitcast %"class.absl::optional.24"* %27 to i64*
  %194 = bitcast %"class.absl::optional.29"* %30 to i64*
  %195 = bitcast %"class.std::__1::vector.17"* %116 to <2 x i64>*
  %196 = bitcast %"class.std::__1::vector.17"* %167 to <2 x i64>*
  %197 = bitcast %"class.std::__1::vector.34"* %128 to <2 x i64>*
  %198 = bitcast %"class.std::__1::vector.34"* %172 to <2 x i64>*
  br label %199

199:                                              ; preds = %75, %792
  %200 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %20)
  %201 = load i64, i64* %76, align 8
  %202 = load i64, i64* %77, align 8
  %203 = icmp eq i64 %201, %202
  br i1 %203, label %799, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %200, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = trunc i64 %206 to i8
  %208 = icmp eq i8 %207, 6
  br i1 %208, label %210, label %209

209:                                              ; preds = %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #19
  br label %801

210:                                              ; preds = %204
  %211 = call %"class.std::__1::basic_string"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN3net12_GLOBAL__N_112kHostnameKeyE, i64 0, i64 0), i64 8) #19
  %212 = call %"class.std::__1::basic_string"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN3net12_GLOBAL__N_114kExpirationKeyE, i64 0, i64 0), i64 10) #19
  %213 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN3net12_GLOBAL__N_19kFlagsKeyE, i64 0, i64 0), i64 5) #19
  %214 = trunc i64 %213 to i8
  %215 = lshr i64 %213, 32
  %216 = trunc i64 %215 to i32
  %217 = icmp ne %"class.std::__1::basic_string"* %211, null
  %218 = icmp ne %"class.std::__1::basic_string"* %212, null
  %219 = and i1 %217, %218
  %220 = icmp ne i8 %214, 0
  %221 = and i1 %219, %220
  br i1 %221, label %222, label %789

222:                                              ; preds = %210
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #19
  %223 = bitcast %"class.std::__1::basic_string"* %211 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 -86, i64 24, i1 false)
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %222
  %228 = bitcast %"class.std::__1::basic_string"* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* nonnull align 8 %228, i64 24, i1 false) #19
  br label %234

229:                                              ; preds = %222
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %233 = load i64, i64* %232, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %22, i8* %231, i64 %233) #19
  br label %234

234:                                              ; preds = %227, %229
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #19
  %235 = bitcast %"class.std::__1::basic_string"* %212 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 -86, i64 24, i1 false)
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %241, label %239

239:                                              ; preds = %234
  %240 = bitcast %"class.std::__1::basic_string"* %212 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %81, i8* nonnull align 8 %240, i64 24, i1 false) #19
  br label %246

241:                                              ; preds = %234
  %242 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %212, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load i8*, i8** %242, align 8
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %212, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %23, i8* %243, i64 %245) #19
  br label %246

246:                                              ; preds = %241, %239
  %247 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN3net12_GLOBAL__N_116kDnsQueryTypeKeyE, i64 0, i64 0), i64 14) #19
  %248 = trunc i64 %247 to i8
  %249 = lshr i64 %247, 32
  %250 = trunc i64 %249 to i32
  %251 = icmp eq i8 %248, 0
  br i1 %251, label %252, label %260

252:                                              ; preds = %246
  %253 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN3net12_GLOBAL__N_117kAddressFamilyKeyE, i64 0, i64 0), i64 14) #19
  %254 = trunc i64 %253 to i8
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %778, label %256

256:                                              ; preds = %252
  %257 = lshr i64 %253, 32
  %258 = trunc i64 %257 to i32
  %259 = call i32 @_ZN3net27AddressFamilyToDnsQueryTypeENS_13AddressFamilyE(i32 %258) #19
  br label %260

260:                                              ; preds = %246, %256
  %261 = phi i32 [ %250, %246 ], [ %259, %256 ]
  %262 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZN3net12_GLOBAL__N_122kHostResolverSourceKeyE, i64 0, i64 0), i64 20) #19
  %263 = trunc i64 %262 to i8
  %264 = lshr i64 %262, 32
  %265 = trunc i64 %264 to i32
  %266 = icmp eq i8 %263, 0
  %267 = select i1 %266, i32 0, i32 %265
  %268 = call %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN3net12_GLOBAL__N_123kNetworkIsolationKeyKeyE, i64 0, i64 0), i64 21) #19
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %84) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 184, i1 false)
  call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* nonnull %24) #19
  %269 = icmp eq %"class.base::Value"* %268, null
  br i1 %269, label %776, label %270

270:                                              ; preds = %260
  %271 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %268, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %272 = load i64, i64* %271, align 8
  %273 = trunc i64 %272 to i8
  %274 = icmp eq i8 %273, 4
  br i1 %274, label %776, label %275

275:                                              ; preds = %270
  %276 = call zeroext i1 @_ZN3net19NetworkIsolationKey9FromValueERKN4base5ValueEPS0_(%"class.base::Value"* nonnull dereferenceable(32) %268, %"class.net::NetworkIsolationKey"* nonnull %24) #19
  br i1 %276, label %277, label %776

277:                                              ; preds = %275
  %278 = call i16 @_ZNK4base5Value11FindBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN3net12_GLOBAL__N_110kSecureKeyE, i64 0, i64 0), i64 6) #19
  %279 = trunc i16 %278 to i8
  %280 = icmp ne i8 %279, 0
  %281 = icmp ugt i16 %278, 255
  %282 = and i1 %281, %280
  %283 = zext i1 %282 to i8
  %284 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN3net12_GLOBAL__N_112kNetErrorKeyE, i64 0, i64 0), i64 9) #19
  %285 = trunc i64 %284 to i8
  %286 = lshr i64 %284, 32
  %287 = trunc i64 %286 to i32
  %288 = icmp eq i8 %285, 0
  br i1 %288, label %289, label %301

289:                                              ; preds = %277
  %290 = call %"class.base::Value"* @_ZNK4base5Value11FindListKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN3net12_GLOBAL__N_113kAddressesKeyE, i64 0, i64 0), i64 9) #19
  %291 = call %"class.base::Value"* @_ZNK4base5Value11FindListKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN3net12_GLOBAL__N_115kTextRecordsKeyE, i64 0, i64 0), i64 12) #19
  %292 = call %"class.base::Value"* @_ZNK4base5Value11FindListKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN3net12_GLOBAL__N_119kHostnameResultsKeyE, i64 0, i64 0), i64 16) #19
  %293 = call %"class.base::Value"* @_ZNK4base5Value11FindListKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %200, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN3net12_GLOBAL__N_113kHostPortsKeyE, i64 0, i64 0), i64 10) #19
  %294 = icmp eq %"class.base::Value"* %292, null
  %295 = icmp ne %"class.base::Value"* %293, null
  %296 = and i1 %294, %295
  br i1 %296, label %776, label %297

297:                                              ; preds = %289
  %298 = icmp ne %"class.base::Value"* %292, null
  %299 = icmp eq %"class.base::Value"* %293, null
  %300 = and i1 %298, %299
  br i1 %300, label %776, label %301

301:                                              ; preds = %277, %297
  %302 = phi i32 [ 0, %297 ], [ %287, %277 ]
  %303 = phi %"class.base::Value"* [ %290, %297 ], [ null, %277 ]
  %304 = phi %"class.base::Value"* [ %291, %297 ], [ null, %277 ]
  %305 = phi %"class.base::Value"* [ %292, %297 ], [ null, %277 ]
  %306 = phi %"class.base::Value"* [ %293, %297 ], [ null, %277 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #19
  store i64 -6148914691236517206, i64* %25, align 8
  %307 = load i8, i8* %87, align 1
  %308 = icmp slt i8 %307, 0
  %309 = load i8*, i8** %82, align 8
  %310 = select i1 %308, i8* %309, i8* %81
  %311 = load i64, i64* %83, align 8
  %312 = zext i8 %307 to i64
  %313 = select i1 %308, i64 %311, i64 %312
  %314 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %310, i64 %313, i64* nonnull %25) #19
  br i1 %314, label %315, label %774

315:                                              ; preds = %301
  %316 = load %"class.base::TickClock"*, %"class.base::TickClock"** %88, align 8
  %317 = bitcast %"class.base::TickClock"* %316 to i64 (%"class.base::TickClock"*)***
  %318 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %317, align 8
  %319 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %318, i64 2
  %320 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %319, align 8
  %321 = call i64 %320(%"class.base::TickClock"* %316) #19
  %322 = call i64 @_ZN4base4Time3NowEv() #19
  %323 = load i64, i64* %25, align 8
  %324 = sub nsw i64 %322, %323
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #19
  store i64 %321, i64* %90, align 8
  %325 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %19, i64 %324) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #19
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %91) #19
  store i64 -6148914691236517206, i64* %192, align 8
  store i8 0, i8* %91, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 48, i1 false) #19
  %326 = icmp eq %"class.base::Value"* %303, null
  br i1 %326, label %396, label %327

327:                                              ; preds = %315
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* %94) #19
  store i8 1, i8* %91, align 8
  %328 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %303) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #19
  %329 = icmp eq %"class.std::__1::vector.81"* %328, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 24, i1 false) #19
  br i1 %329, label %346, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %328, i64 0, i32 0, i32 0
  %332 = load %"class.base::Value"*, %"class.base::Value"** %331, align 8
  %333 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %328, i64 0, i32 0, i32 1
  %334 = bitcast %"class.base::Value"** %333 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = ptrtoint %"class.base::Value"* %332 to i64
  %337 = sub i64 %335, %336
  %338 = ashr exact i64 %337, 5
  %339 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %332, i64 %338
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %13, %"class.base::Value"* %332, %"class.base::Value"* %332, %"class.base::Value"* %339) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 24, i1 false) #19
  %340 = load %"class.base::Value"*, %"class.base::Value"** %331, align 8
  %341 = load i64, i64* %334, align 8
  %342 = ptrtoint %"class.base::Value"* %340 to i64
  %343 = sub i64 %341, %342
  %344 = ashr exact i64 %343, 5
  %345 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %340, i64 %344
  br label %347

346:                                              ; preds = %327
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %13, %"class.base::Value"* null, %"class.base::Value"* null, %"class.base::Value"* null) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 24, i1 false) #19
  br label %347

347:                                              ; preds = %346, %330
  %348 = phi %"class.base::Value"* [ %340, %330 ], [ null, %346 ]
  %349 = phi %"class.base::Value"* [ %345, %330 ], [ null, %346 ]
  %350 = phi i64 [ %344, %330 ], [ 0, %346 ]
  %351 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %348, i64 %350
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %14, %"class.base::Value"* %348, %"class.base::Value"* %349, %"class.base::Value"* %351) #19
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %13, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %14) #19
  %352 = load %"class.base::Value"*, %"class.base::Value"** %96, align 8
  %353 = load %"class.base::Value"*, %"class.base::Value"** %98, align 8
  %354 = icmp eq %"class.base::Value"* %352, %353
  br i1 %354, label %394, label %355

355:                                              ; preds = %347, %389
  %356 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %13) #19
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %99) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %99, i8 -86, i64 17, i1 false) #19
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %15) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 24, i1 false) #19
  %357 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %356, %"class.std::__1::basic_string"* nonnull %16) #19
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #19
  br i1 %357, label %358, label %367

358:                                              ; preds = %355
  %359 = load i8, i8* %106, align 1
  %360 = icmp slt i8 %359, 0
  %361 = load i8*, i8** %101, align 8
  %362 = select i1 %360, i8* %361, i8* %100
  store i8* %362, i8** %104, align 8
  %363 = load i64, i64* %102, align 8
  %364 = zext i8 %359 to i64
  %365 = select i1 %360, i64 %363, i64 %364
  store i64 %365, i64* %107, align 8
  %366 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %15, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %17) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #19
  br i1 %366, label %368, label %381

367:                                              ; preds = %355
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #19
  br label %381

368:                                              ; preds = %358
  %369 = load i8, i8* %91, align 8, !range !2
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

372:                                              ; preds = %368
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %108) #19
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %18, %"class.net::IPAddress"* nonnull dereferenceable(17) %15, i16 zeroext 0) #19
  %373 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %109, align 8
  %374 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %110, align 8
  %375 = icmp eq %"class.net::IPEndPoint"* %373, %374
  br i1 %375, label %379, label %376

376:                                              ; preds = %372
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %373, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %18) #19
  %377 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %373, i64 1
  %378 = ptrtoint %"class.net::IPEndPoint"* %377 to i64
  store i64 %378, i64* %111, align 8
  br label %380

379:                                              ; preds = %372
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %112, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %18) #19
  br label %380

380:                                              ; preds = %379, %376
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %108) #19
  br label %381

381:                                              ; preds = %380, %367, %358
  %382 = phi i32 [ 0, %380 ], [ 1, %358 ], [ 1, %367 ]
  %383 = load i8, i8* %106, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %381
  %386 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %386) #21
  br label %387

387:                                              ; preds = %385, %381
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #19
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %15) #19
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %99) #19
  %388 = icmp eq i32 %382, 0
  br i1 %388, label %389, label %395

389:                                              ; preds = %387
  %390 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %13) #19
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %13, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %14) #19
  %391 = load %"class.base::Value"*, %"class.base::Value"** %96, align 8
  %392 = load %"class.base::Value"*, %"class.base::Value"** %98, align 8
  %393 = icmp eq %"class.base::Value"* %391, %392
  br i1 %393, label %394, label %355

394:                                              ; preds = %389, %347
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #19
  br label %396

395:                                              ; preds = %387
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #19
  br label %768

396:                                              ; preds = %394, %315
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %113) #19
  store i64 -6148914691236517206, i64* %193, align 8
  store i8 0, i8* %113, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #19
  %397 = icmp eq %"class.base::Value"* %304, null
  br i1 %397, label %465, label %398

398:                                              ; preds = %396
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %113, align 8
  %399 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %304) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #19
  %400 = icmp eq %"class.std::__1::vector.81"* %399, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 24, i1 false)
  br i1 %400, label %417, label %401

401:                                              ; preds = %398
  %402 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %399, i64 0, i32 0, i32 0
  %403 = load %"class.base::Value"*, %"class.base::Value"** %402, align 8
  %404 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %399, i64 0, i32 0, i32 1
  %405 = bitcast %"class.base::Value"** %404 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = ptrtoint %"class.base::Value"* %403 to i64
  %408 = sub i64 %406, %407
  %409 = ashr exact i64 %408, 5
  %410 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %403, i64 %409
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %28, %"class.base::Value"* %403, %"class.base::Value"* %403, %"class.base::Value"* %410) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %190, i8 -86, i64 24, i1 false)
  %411 = load %"class.base::Value"*, %"class.base::Value"** %402, align 8
  %412 = load i64, i64* %405, align 8
  %413 = ptrtoint %"class.base::Value"* %411 to i64
  %414 = sub i64 %412, %413
  %415 = ashr exact i64 %414, 5
  %416 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %411, i64 %415
  br label %418

417:                                              ; preds = %398
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %28, %"class.base::Value"* null, %"class.base::Value"* null, %"class.base::Value"* null) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %191, i8 -86, i64 24, i1 false)
  br label %418

418:                                              ; preds = %417, %401
  %419 = phi %"class.base::Value"* [ %411, %401 ], [ null, %417 ]
  %420 = phi %"class.base::Value"* [ %416, %401 ], [ null, %417 ]
  %421 = phi i64 [ %415, %401 ], [ 0, %417 ]
  %422 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %419, i64 %421
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %29, %"class.base::Value"* %419, %"class.base::Value"* %420, %"class.base::Value"* %422) #19
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %28, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %29) #19
  %423 = load %"class.base::Value"*, %"class.base::Value"** %119, align 8
  %424 = load %"class.base::Value"*, %"class.base::Value"** %121, align 8
  %425 = icmp eq %"class.base::Value"* %423, %424
  br i1 %425, label %426, label %427

426:                                              ; preds = %459, %418
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #19
  br label %465

427:                                              ; preds = %418, %459
  %428 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %28)
  %429 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %428, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %430 = load i64, i64* %429, align 8
  %431 = trunc i64 %430 to i8
  %432 = icmp eq i8 %431, 4
  br i1 %432, label %433, label %464

433:                                              ; preds = %427
  %434 = load i8, i8* %113, align 8, !range !2
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %436, label %437

436:                                              ; preds = %433
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

437:                                              ; preds = %433
  %438 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"* %428) #19
  %439 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %122, align 8
  %440 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %123, align 8
  %441 = icmp eq %"class.std::__1::basic_string"* %439, %440
  br i1 %441, label %458, label %442

442:                                              ; preds = %437
  %443 = bitcast %"class.std::__1::basic_string"* %438 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %444 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %443, i64 0, i32 1, i32 0
  %445 = load i8, i8* %444, align 1
  %446 = icmp slt i8 %445, 0
  br i1 %446, label %450, label %447

447:                                              ; preds = %442
  %448 = bitcast %"class.std::__1::basic_string"* %439 to i8*
  %449 = bitcast %"class.std::__1::basic_string"* %438 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %448, i8* align 8 %449, i64 24, i1 false) #19
  br label %455

450:                                              ; preds = %442
  %451 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %438, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = load i8*, i8** %451, align 8
  %453 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %438, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %454 = load i64, i64* %453, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %439, i8* %452, i64 %454) #19
  br label %455

455:                                              ; preds = %450, %447
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %439, i64 1
  %457 = ptrtoint %"class.std::__1::basic_string"* %456 to i64
  store i64 %457, i64* %124, align 8
  br label %459

458:                                              ; preds = %437
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.17"* %116, %"class.std::__1::basic_string"* dereferenceable(24) %438) #19
  br label %459

459:                                              ; preds = %455, %458
  %460 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %28)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %28, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %29) #19
  %461 = load %"class.base::Value"*, %"class.base::Value"** %119, align 8
  %462 = load %"class.base::Value"*, %"class.base::Value"** %121, align 8
  %463 = icmp eq %"class.base::Value"* %461, %462
  br i1 %463, label %426, label %427

464:                                              ; preds = %427
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #19
  br label %739

465:                                              ; preds = %426, %396
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #19
  store i64 -6148914691236517206, i64* %194, align 8
  store i8 0, i8* %125, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 24, i1 false) #19
  %466 = icmp eq %"class.base::Value"* %305, null
  br i1 %466, label %661, label %467

467:                                              ; preds = %465
  %468 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %305) #19
  %469 = icmp eq %"class.std::__1::vector.81"* %468, null
  br i1 %469, label %478, label %470

470:                                              ; preds = %467
  %471 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %468, i64 0, i32 0, i32 1
  %472 = bitcast %"class.base::Value"** %471 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = bitcast %"class.std::__1::vector.81"* %468 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = sub i64 %473, %475
  %477 = ashr exact i64 %476, 5
  br label %478

478:                                              ; preds = %467, %470
  %479 = phi i64 [ %477, %470 ], [ 0, %467 ]
  %480 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %306) #19
  %481 = icmp eq %"class.std::__1::vector.81"* %480, null
  br i1 %481, label %490, label %482

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %480, i64 0, i32 0, i32 1
  %484 = bitcast %"class.base::Value"** %483 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = bitcast %"class.std::__1::vector.81"* %480 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = sub i64 %485, %487
  %489 = ashr exact i64 %488, 5
  br label %490

490:                                              ; preds = %478, %482
  %491 = phi i64 [ %489, %482 ], [ 0, %478 ]
  %492 = icmp eq i64 %479, %491
  br i1 %492, label %493, label %710

493:                                              ; preds = %490
  %494 = load i8, i8* %125, align 8, !range !2
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %520, label %496

496:                                              ; preds = %493
  %497 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %129, align 8
  %498 = icmp eq %"class.net::HostPortPair"* %497, null
  br i1 %498, label %519, label %499

499:                                              ; preds = %496
  %500 = bitcast %"class.net::HostPortPair"* %497 to i8*
  %501 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %130, align 8
  %502 = icmp eq %"class.net::HostPortPair"* %501, %497
  br i1 %502, label %517, label %503

503:                                              ; preds = %499, %513
  %504 = phi %"class.net::HostPortPair"* [ %505, %513 ], [ %501, %499 ]
  %505 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %504, i64 -1
  %506 = bitcast %"class.net::HostPortPair"* %505 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %507 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %506, i64 0, i32 1, i32 0
  %508 = load i8, i8* %507, align 1
  %509 = icmp slt i8 %508, 0
  br i1 %509, label %510, label %513

510:                                              ; preds = %503
  %511 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %512 = load i8*, i8** %511, align 8
  call void @_ZdlPv(i8* %512) #21
  br label %513

513:                                              ; preds = %510, %503
  %514 = icmp eq %"class.net::HostPortPair"* %505, %497
  br i1 %514, label %515, label %503

515:                                              ; preds = %513
  %516 = load i8*, i8** %131, align 8
  br label %517

517:                                              ; preds = %515, %499
  %518 = phi i8* [ %516, %515 ], [ %500, %499 ]
  store %"class.net::HostPortPair"* %497, %"class.net::HostPortPair"** %130, align 8
  call void @_ZdlPv(i8* %518) #21
  br label %519

519:                                              ; preds = %517, %496
  store i8 0, i8* %125, align 8
  br label %520

520:                                              ; preds = %493, %519
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %125, align 8
  br label %521

521:                                              ; preds = %659, %520
  %522 = phi i64 [ 0, %520 ], [ %660, %659 ]
  %523 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %305) #19
  %524 = icmp eq %"class.std::__1::vector.81"* %523, null
  br i1 %524, label %533, label %525

525:                                              ; preds = %521
  %526 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %523, i64 0, i32 0, i32 1
  %527 = bitcast %"class.base::Value"** %526 to i64*
  %528 = load i64, i64* %527, align 8
  %529 = bitcast %"class.std::__1::vector.81"* %523 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = sub i64 %528, %530
  %532 = ashr exact i64 %531, 5
  br label %533

533:                                              ; preds = %521, %525
  %534 = phi i64 [ %532, %525 ], [ 0, %521 ]
  %535 = icmp ult i64 %522, %534
  br i1 %535, label %536, label %661

536:                                              ; preds = %533
  %537 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %305) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #19
  %538 = icmp eq %"class.std::__1::vector.81"* %537, null
  br i1 %538, label %548, label %539

539:                                              ; preds = %536
  %540 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %537, i64 0, i32 0, i32 0
  %541 = load %"class.base::Value"*, %"class.base::Value"** %540, align 8
  %542 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %537, i64 0, i32 0, i32 1
  %543 = bitcast %"class.base::Value"** %542 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = ptrtoint %"class.base::Value"* %541 to i64
  %546 = sub i64 %544, %545
  %547 = ashr exact i64 %546, 5
  br label %548

548:                                              ; preds = %536, %539
  %549 = phi %"class.base::Value"* [ %541, %539 ], [ null, %536 ]
  %550 = phi i64 [ %547, %539 ], [ 0, %536 ]
  %551 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %549, i64 %550
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %12, %"class.base::Value"* %549, %"class.base::Value"* %549, %"class.base::Value"* %551) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %133, i8* nonnull align 8 %134, i64 24, i1 false) #19
  %552 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %11, i64 %522) #19
  %553 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #19
  %554 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %553, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %555 = load i64, i64* %554, align 8
  %556 = trunc i64 %555 to i8
  %557 = icmp eq i8 %556, 4
  br i1 %557, label %558, label %710

558:                                              ; preds = %548
  %559 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %306) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #19
  %560 = icmp eq %"class.std::__1::vector.81"* %559, null
  br i1 %560, label %570, label %561

561:                                              ; preds = %558
  %562 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %559, i64 0, i32 0, i32 0
  %563 = load %"class.base::Value"*, %"class.base::Value"** %562, align 8
  %564 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %559, i64 0, i32 0, i32 1
  %565 = bitcast %"class.base::Value"** %564 to i64*
  %566 = load i64, i64* %565, align 8
  %567 = ptrtoint %"class.base::Value"* %563 to i64
  %568 = sub i64 %566, %567
  %569 = ashr exact i64 %568, 5
  br label %570

570:                                              ; preds = %558, %561
  %571 = phi %"class.base::Value"* [ %563, %561 ], [ null, %558 ]
  %572 = phi i64 [ %569, %561 ], [ 0, %558 ]
  %573 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %571, i64 %572
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::Value"* %571, %"class.base::Value"* %571, %"class.base::Value"* %573) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* nonnull align 8 %136, i64 24, i1 false) #19
  %574 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %9, i64 %522) #19
  %575 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #19
  %576 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %575, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %577 = load i64, i64* %576, align 8
  %578 = trunc i64 %577 to i8
  %579 = icmp eq i8 %578, 2
  br i1 %579, label %580, label %710

580:                                              ; preds = %570
  %581 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %306) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #19
  %582 = icmp eq %"class.std::__1::vector.81"* %581, null
  br i1 %582, label %592, label %583

583:                                              ; preds = %580
  %584 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %581, i64 0, i32 0, i32 0
  %585 = load %"class.base::Value"*, %"class.base::Value"** %584, align 8
  %586 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %581, i64 0, i32 0, i32 1
  %587 = bitcast %"class.base::Value"** %586 to i64*
  %588 = load i64, i64* %587, align 8
  %589 = ptrtoint %"class.base::Value"* %585 to i64
  %590 = sub i64 %588, %589
  %591 = ashr exact i64 %590, 5
  br label %592

592:                                              ; preds = %580, %583
  %593 = phi %"class.base::Value"* [ %585, %583 ], [ null, %580 ]
  %594 = phi i64 [ %591, %583 ], [ 0, %580 ]
  %595 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %593, i64 %594
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %8, %"class.base::Value"* %593, %"class.base::Value"* %593, %"class.base::Value"* %595) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %137, i8* nonnull align 8 %138, i64 24, i1 false) #19
  %596 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %7, i64 %522) #19
  %597 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #19
  %598 = call i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"* %597) #19
  %599 = icmp ult i32 %598, 65536
  br i1 %599, label %600, label %710

600:                                              ; preds = %592
  %601 = load i8, i8* %125, align 8, !range !2
  %602 = icmp eq i8 %601, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %600
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

604:                                              ; preds = %600
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %139) #19
  %605 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* nonnull %305) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #19
  %606 = icmp eq %"class.std::__1::vector.81"* %605, null
  br i1 %606, label %616, label %607

607:                                              ; preds = %604
  %608 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %605, i64 0, i32 0, i32 0
  %609 = load %"class.base::Value"*, %"class.base::Value"** %608, align 8
  %610 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %605, i64 0, i32 0, i32 1
  %611 = bitcast %"class.base::Value"** %610 to i64*
  %612 = load i64, i64* %611, align 8
  %613 = ptrtoint %"class.base::Value"* %609 to i64
  %614 = sub i64 %612, %613
  %615 = ashr exact i64 %614, 5
  br label %616

616:                                              ; preds = %604, %607
  %617 = phi %"class.base::Value"* [ %609, %607 ], [ null, %604 ]
  %618 = phi i64 [ %615, %607 ], [ 0, %604 ]
  %619 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %617, i64 %618
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::Value"* %617, %"class.base::Value"* %617, %"class.base::Value"* %619) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %141, i64 24, i1 false) #19
  %620 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %5, i64 %522) #19
  %621 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #19
  %622 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"* %621) #19
  %623 = call %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %306) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #19
  %624 = icmp eq %"class.std::__1::vector.81"* %623, null
  br i1 %624, label %634, label %625

625:                                              ; preds = %616
  %626 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %623, i64 0, i32 0, i32 0
  %627 = load %"class.base::Value"*, %"class.base::Value"** %626, align 8
  %628 = getelementptr inbounds %"class.std::__1::vector.81", %"class.std::__1::vector.81"* %623, i64 0, i32 0, i32 1
  %629 = bitcast %"class.base::Value"** %628 to i64*
  %630 = load i64, i64* %629, align 8
  %631 = ptrtoint %"class.base::Value"* %627 to i64
  %632 = sub i64 %630, %631
  %633 = ashr exact i64 %632, 5
  br label %634

634:                                              ; preds = %616, %625
  %635 = phi %"class.base::Value"* [ %627, %625 ], [ null, %616 ]
  %636 = phi i64 [ %633, %625 ], [ 0, %616 ]
  %637 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %635, i64 %636
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::Value"* %635, %"class.base::Value"* %635, %"class.base::Value"* %637) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* nonnull align 8 %143, i64 24, i1 false) #19
  %638 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"* nonnull %3, i64 %522) #19
  %639 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #19
  %640 = call i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"* %639) #19
  %641 = icmp ult i32 %640, 65536
  br i1 %641, label %643, label %642, !prof !10

642:                                              ; preds = %634
  call void @llvm.trap() #19
  unreachable

643:                                              ; preds = %634
  %644 = trunc i32 %640 to i16
  call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* nonnull %31, %"class.std::__1::basic_string"* dereferenceable(24) %622, i16 zeroext %644) #19
  %645 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %130, align 8
  %646 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %144, align 8
  %647 = icmp ult %"class.net::HostPortPair"* %645, %646
  br i1 %647, label %648, label %654

648:                                              ; preds = %643
  %649 = bitcast %"class.net::HostPortPair"* %645 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %649, i8* nonnull align 8 %139, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 24, i1 false) #19
  %650 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %645, i64 0, i32 1
  %651 = load i16, i16* %145, align 8
  store i16 %651, i16* %650, align 8
  %652 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %645, i64 1
  %653 = ptrtoint %"class.net::HostPortPair"* %652 to i64
  store i64 %653, i64* %146, align 8
  br label %659

654:                                              ; preds = %643
  call void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.34"* %128, %"class.net::HostPortPair"* nonnull dereferenceable(32) %31) #19
  %655 = load i8, i8* %148, align 1
  %656 = icmp slt i8 %655, 0
  br i1 %656, label %657, label %659

657:                                              ; preds = %654
  %658 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %658) #21
  br label %659

659:                                              ; preds = %648, %654, %657
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %139) #19
  %660 = add nuw i64 %522, 1
  br label %521

661:                                              ; preds = %533, %465
  %662 = call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %261) #19
  %663 = xor i1 %662, true
  %664 = load i8, i8* %91, align 8
  %665 = load i8, i8* %113, align 8
  %666 = or i8 %665, %664
  %667 = load i8, i8* %125, align 8
  %668 = or i8 %666, %667
  %669 = icmp ne i8 %668, 0
  %670 = or i1 %669, %663
  br i1 %670, label %672, label %671

671:                                              ; preds = %661
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* %94) #19
  store i8 1, i8* %91, align 8
  br label %672

672:                                              ; preds = %661, %671
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %150) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 232, i1 false)
  %673 = load i8, i8* %152, align 1
  %674 = icmp slt i8 %673, 0
  br i1 %674, label %676, label %675

675:                                              ; preds = %672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %150, i8* nonnull align 8 %78, i64 24, i1 false) #19
  br label %679

676:                                              ; preds = %672
  %677 = load i8*, i8** %79, align 8
  %678 = load i64, i64* %80, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %153, i8* %677, i64 %678) #19
  br label %679

679:                                              ; preds = %675, %676
  store i32 %261, i32* %154, align 8
  store i32 %216, i32* %155, align 4
  store i32 %267, i32* %156, align 8
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %157, %"class.net::NetworkIsolationKey"* nonnull dereferenceable(184) %24) #19
  store i8 %283, i8* %158, align 8
  %680 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %159, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %32) #19
  %681 = icmp eq %"class.std::__1::__tree_end_node"* %680, %160
  br i1 %681, label %682, label %704

682:                                              ; preds = %679
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %161) #19
  %683 = load i32, i32* %162, align 8
  %684 = add nsw i32 %683, -1
  store i32 %302, i32* %163, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 56, i1 false) #19
  %685 = load i8, i8* %91, align 8, !range !2
  %686 = icmp eq i8 %685, 0
  br i1 %686, label %688, label %687

687:                                              ; preds = %682
  call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %165, %"class.net::AddressList"* dereferenceable(48) %94) #19
  store i8 1, i8* %164, align 8
  br label %688

688:                                              ; preds = %687, %682
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 32, i1 false) #19
  %689 = load i8, i8* %113, align 8, !range !2
  %690 = icmp eq i8 %689, 0
  br i1 %690, label %694, label %691

691:                                              ; preds = %688
  %692 = load <2 x i64>, <2 x i64>* %195, align 8
  store <2 x i64> %692, <2 x i64>* %196, align 8
  %693 = load i64, i64* %168, align 8
  store i64 %693, i64* %170, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %166, align 8
  br label %694

694:                                              ; preds = %691, %688
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 32, i1 false) #19
  %695 = load i8, i8* %125, align 8, !range !2
  %696 = icmp eq i8 %695, 0
  br i1 %696, label %700, label %697

697:                                              ; preds = %694
  %698 = load <2 x i64>, <2 x i64>* %197, align 8
  store <2 x i64> %698, <2 x i64>* %198, align 8
  %699 = load i64, i64* %173, align 8
  store i64 %699, i64* %175, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 24, i1 false) #19
  store i8 1, i8* %171, align 8
  br label %700

700:                                              ; preds = %694, %697
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 37, i1 false)
  store i64 -1000000, i64* %177, align 8
  store i64 %325, i64* %178, align 8
  store i32 %684, i32* %179, align 8
  store i32 0, i32* %180, align 4
  store i32 0, i32* %181, align 8
  %701 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRKS4_S5_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %159, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %32, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %32, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %33) #19
  call void @_ZN3net9HostCache5EntryD2Ev(%"class.net::HostCache::Entry"* nonnull %33) #19
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %161) #19
  %702 = load i64, i64* %34, align 8
  %703 = add i64 %702, 1
  store i64 %703, i64* %34, align 8
  br label %704

704:                                              ; preds = %700, %679
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %157) #19
  %705 = load i8, i8* %183, align 1
  %706 = icmp slt i8 %705, 0
  br i1 %706, label %707, label %709

707:                                              ; preds = %704
  %708 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %708) #21
  br label %709

709:                                              ; preds = %707, %704
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %150) #19
  br label %710

710:                                              ; preds = %548, %570, %592, %490, %709
  %711 = phi i32 [ 0, %709 ], [ 1, %490 ], [ 1, %592 ], [ 1, %570 ], [ 1, %548 ]
  %712 = load i8, i8* %125, align 8, !range !2
  %713 = icmp eq i8 %712, 0
  br i1 %713, label %738, label %714

714:                                              ; preds = %710
  %715 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %129, align 8
  %716 = icmp eq %"class.net::HostPortPair"* %715, null
  br i1 %716, label %737, label %717

717:                                              ; preds = %714
  %718 = bitcast %"class.net::HostPortPair"* %715 to i8*
  %719 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %130, align 8
  %720 = icmp eq %"class.net::HostPortPair"* %719, %715
  br i1 %720, label %735, label %721

721:                                              ; preds = %717, %731
  %722 = phi %"class.net::HostPortPair"* [ %723, %731 ], [ %719, %717 ]
  %723 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %722, i64 -1
  %724 = bitcast %"class.net::HostPortPair"* %723 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %725 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %724, i64 0, i32 1, i32 0
  %726 = load i8, i8* %725, align 1
  %727 = icmp slt i8 %726, 0
  br i1 %727, label %728, label %731

728:                                              ; preds = %721
  %729 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %723, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %730 = load i8*, i8** %729, align 8
  call void @_ZdlPv(i8* %730) #21
  br label %731

731:                                              ; preds = %728, %721
  %732 = icmp eq %"class.net::HostPortPair"* %723, %715
  br i1 %732, label %733, label %721

733:                                              ; preds = %731
  %734 = load i8*, i8** %131, align 8
  br label %735

735:                                              ; preds = %733, %717
  %736 = phi i8* [ %734, %733 ], [ %718, %717 ]
  store %"class.net::HostPortPair"* %715, %"class.net::HostPortPair"** %130, align 8
  call void @_ZdlPv(i8* %736) #21
  br label %737

737:                                              ; preds = %735, %714
  store i8 0, i8* %125, align 8
  br label %738

738:                                              ; preds = %710, %737
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #19
  br label %739

739:                                              ; preds = %464, %738
  %740 = phi i32 [ %711, %738 ], [ 1, %464 ]
  %741 = load i8, i8* %113, align 8, !range !2
  %742 = icmp eq i8 %741, 0
  br i1 %742, label %767, label %743

743:                                              ; preds = %739
  %744 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %185, align 8
  %745 = icmp eq %"class.std::__1::basic_string"* %744, null
  br i1 %745, label %766, label %746

746:                                              ; preds = %743
  %747 = bitcast %"class.std::__1::basic_string"* %744 to i8*
  %748 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %122, align 8
  %749 = icmp eq %"class.std::__1::basic_string"* %748, %744
  br i1 %749, label %764, label %750

750:                                              ; preds = %746, %760
  %751 = phi %"class.std::__1::basic_string"* [ %752, %760 ], [ %748, %746 ]
  %752 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %751, i64 -1
  %753 = bitcast %"class.std::__1::basic_string"* %752 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %754 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %753, i64 0, i32 1, i32 0
  %755 = load i8, i8* %754, align 1
  %756 = icmp slt i8 %755, 0
  br i1 %756, label %757, label %760

757:                                              ; preds = %750
  %758 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %752, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %759 = load i8*, i8** %758, align 8
  call void @_ZdlPv(i8* %759) #21
  br label %760

760:                                              ; preds = %757, %750
  %761 = icmp eq %"class.std::__1::basic_string"* %752, %744
  br i1 %761, label %762, label %750

762:                                              ; preds = %760
  %763 = load i8*, i8** %186, align 8
  br label %764

764:                                              ; preds = %762, %746
  %765 = phi i8* [ %763, %762 ], [ %747, %746 ]
  store %"class.std::__1::basic_string"* %744, %"class.std::__1::basic_string"** %122, align 8
  call void @_ZdlPv(i8* %765) #21
  br label %766

766:                                              ; preds = %764, %743
  store i8 0, i8* %113, align 8
  br label %767

767:                                              ; preds = %739, %766
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %113) #19
  br label %768

768:                                              ; preds = %395, %767
  %769 = phi i32 [ %740, %767 ], [ 1, %395 ]
  %770 = load i8, i8* %91, align 8, !range !2
  %771 = icmp eq i8 %770, 0
  br i1 %771, label %773, label %772

772:                                              ; preds = %768
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %94) #19
  store i8 0, i8* %91, align 8
  br label %773

773:                                              ; preds = %768, %772
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %91) #19
  br label %774

774:                                              ; preds = %301, %773
  %775 = phi i32 [ %769, %773 ], [ 1, %301 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #19
  br label %776

776:                                              ; preds = %774, %297, %289, %270, %275, %260
  %777 = phi i32 [ 1, %260 ], [ 1, %275 ], [ 1, %270 ], [ %775, %774 ], [ 1, %297 ], [ 1, %289 ]
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* nonnull %24) #19
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %84) #19
  br label %778

778:                                              ; preds = %252, %776
  %779 = phi i32 [ %777, %776 ], [ 1, %252 ]
  %780 = load i8, i8* %87, align 1
  %781 = icmp slt i8 %780, 0
  br i1 %781, label %782, label %784

782:                                              ; preds = %778
  %783 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %783) #21
  br label %784

784:                                              ; preds = %778, %782
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #19
  %785 = load i8, i8* %152, align 1
  %786 = icmp slt i8 %785, 0
  br i1 %786, label %787, label %790

787:                                              ; preds = %784
  %788 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %788) #21
  br label %790

789:                                              ; preds = %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #19
  br label %801

790:                                              ; preds = %787, %784
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #19
  %791 = icmp eq i32 %779, 0
  br i1 %791, label %792, label %797

792:                                              ; preds = %790
  %793 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %20)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %20, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %21) #19
  %794 = load %"class.base::Value"*, %"class.base::Value"** %38, align 8
  %795 = load %"class.base::Value"*, %"class.base::Value"** %55, align 8
  %796 = icmp eq %"class.base::Value"* %794, %795
  br i1 %796, label %799, label %199

797:                                              ; preds = %790
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #19
  %798 = icmp eq i32 %779, 2
  br i1 %798, label %800, label %801

799:                                              ; preds = %199, %792, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #19
  br label %800

800:                                              ; preds = %799, %797
  br label %801

801:                                              ; preds = %209, %789, %797, %800
  %802 = phi i1 [ true, %800 ], [ false, %797 ], [ false, %789 ], [ false, %209 ]
  ret i1 %802
}

declare %"class.std::__1::vector.81"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* %16, i8* %18) #19
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #19
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

declare %"class.std::__1::basic_string"* @_ZNK4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN3net27AddressFamilyToDnsQueryTypeENS_13AddressFamilyE(i32) local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK4base5Value7FindKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3net19NetworkIsolationKey9FromValueERKN4base5ValueEPS0_(%"class.base::Value"* dereferenceable(32), %"class.net::NetworkIsolationKey"*) local_unnamed_addr #1

declare i16 @_ZNK4base5Value11FindBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare %"class.base::Value"* @_ZNK4base5Value11FindListKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8*, i64, i64*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* %16, i8* %18) #19
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #19
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i32 @_ZNK4base5Value6GetIntEv(%"class.base::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net9HostCache11max_entriesEv(%"class.net::HostCache"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.net::HostCache"* @_ZN3net9HostCache18CreateDefaultCacheEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 64) #21
  %2 = bitcast i8* %1 to %"class.net::HostCache"*
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #19
  %4 = bitcast i8* %1 to i8**
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 24
  %6 = bitcast i8* %5 to i64*
  store i64 1000, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 32
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 40
  %10 = getelementptr inbounds i8, i8* %1, i64 56
  %11 = bitcast i8* %10 to %"class.base::TickClock"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #19
  %12 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #19
  %13 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %12, i64 0, i32 0
  store %"class.base::TickClock"* %13, %"class.base::TickClock"** %11, align 8
  ret %"class.net::HostCache"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.net::HostCache::Key"* @_ZN3net9HostCache14GetMatchingKeyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS0_5Entry6SourceEPNS0_14EntryStalenessE(%"class.net::HostCache"*, i8*, i64, i32*, %"struct.net::HostCache::EntryStaleness"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.net::HostCache::Key", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"struct.net::HostCache::Key"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %8) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 232, i1 false)
  %9 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %6, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 36, i1 false) #19
  call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %9) #19
  %10 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %6, i64 0, i32 6
  store i8 0, i8* %10, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #19
  %12 = icmp ugt i64 %2, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %5
  %14 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #20
  unreachable

15:                                               ; preds = %5
  %16 = icmp ult i64 %2, 23
  br i1 %16, label %25, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %2, 16
  %19 = and i64 %18, -16
  %20 = call i8* @_Znwm(i64 %19) #21
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !alias.scope !11
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8, !alias.scope !11
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %24, align 8, !alias.scope !11
  br label %30

25:                                               ; preds = %15
  %26 = trunc i64 %2 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 %26, i8* %28, align 1, !alias.scope !11
  %29 = icmp eq i64 %2, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %25, %17
  %31 = phi i8* [ %20, %17 ], [ %11, %25 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 %1, i64 %2, i1 false) #19
  br label %32

32:                                               ; preds = %25, %30
  %33 = phi i8* [ %11, %25 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %2
  store i8 0, i8* %34, align 1
  %35 = bitcast %"struct.net::HostCache::Key"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #21
  br label %42

42:                                               ; preds = %39, %32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %11, i64 24, i1 false) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #19
  %43 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 5
  %44 = load %"class.base::TickClock"*, %"class.base::TickClock"** %43, align 8
  %45 = bitcast %"class.base::TickClock"* %44 to i64 (%"class.base::TickClock"*)***
  %46 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %45, align 8
  %47 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %46, i64 2
  %48 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %47, align 8
  %49 = call i64 %48(%"class.base::TickClock"* %44) #19
  %50 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %91, label %53

53:                                               ; preds = %42
  %54 = call %"struct.std::__1::pair.120"* @_ZN3net9HostCache28LookupInternalIgnoringFieldsERKNS0_3KeyEN4base9TimeTicksEb(%"class.net::HostCache"* %0, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %6, i64 %49, i1 zeroext true) #19
  %55 = icmp eq %"struct.std::__1::pair.120"* %54, null
  br i1 %55, label %91, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %54, i64 0, i32 1, i32 10, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %54, i64 0, i32 1, i32 11
  %62 = load i32, i32* %61, align 8
  %63 = icmp slt i32 %62, %58
  %64 = icmp sge i64 %49, %60
  %65 = or i1 %64, %63
  %66 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %54, i64 0, i32 1, i32 12, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 1) #19
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 2147483647, i32 %70, !prof !9
  store i32 %71, i32* %66, align 4
  br i1 %65, label %72, label %79

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %54, i64 0, i32 1, i32 13, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 1) #19
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 2147483647, i32 %77, !prof !9
  store i32 %78, i32* %73, align 4
  br label %79

79:                                               ; preds = %72, %56
  %80 = icmp eq %"struct.net::HostCache::EntryStaleness"* %4, null
  br i1 %80, label %143, label %81

81:                                               ; preds = %79
  %82 = load i32, i32* %57, align 8
  %83 = sub nsw i64 %49, %60
  %84 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %4, i64 0, i32 0, i32 0
  store i64 %83, i64* %84, align 8
  %85 = load i32, i32* %61, align 8
  %86 = sub nsw i32 %82, %85
  %87 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %4, i64 0, i32 1
  store i32 %86, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %54, i64 0, i32 1, i32 13, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %4, i64 0, i32 2
  store i32 %89, i32* %90, align 4
  br label %143

91:                                               ; preds = %42, %53
  %92 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %6, i64 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = call zeroext i1 @_ZN3net13IsAddressTypeENS_12DnsQueryTypeE(i32 %93) #19
  br i1 %94, label %95, label %143

95:                                               ; preds = %91
  store i32 1, i32* %92, align 8
  %96 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %6, i64 0, i32 2
  store i32 4, i32* %96, align 4
  %97 = load %"class.base::TickClock"*, %"class.base::TickClock"** %43, align 8
  %98 = bitcast %"class.base::TickClock"* %97 to i64 (%"class.base::TickClock"*)***
  %99 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %98, align 8
  %100 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %99, i64 2
  %101 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %100, align 8
  %102 = call i64 %101(%"class.base::TickClock"* %97) #19
  %103 = load i64, i64* %50, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %151, label %105

105:                                              ; preds = %95
  %106 = call %"struct.std::__1::pair.120"* @_ZN3net9HostCache28LookupInternalIgnoringFieldsERKNS0_3KeyEN4base9TimeTicksEb(%"class.net::HostCache"* %0, %"struct.net::HostCache::Key"* nonnull dereferenceable(232) %6, i64 %102, i1 zeroext true) #19
  %107 = icmp eq %"struct.std::__1::pair.120"* %106, null
  br i1 %107, label %151, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.net::HostCache", %"class.net::HostCache"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %106, i64 0, i32 1, i32 10, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %106, i64 0, i32 1, i32 11
  %114 = load i32, i32* %113, align 8
  %115 = icmp slt i32 %114, %110
  %116 = icmp sge i64 %102, %112
  %117 = or i1 %116, %115
  %118 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %106, i64 0, i32 1, i32 12, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 1) #19
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 2147483647, i32 %122, !prof !9
  store i32 %123, i32* %118, align 4
  br i1 %117, label %124, label %131

124:                                              ; preds = %108
  %125 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %106, i64 0, i32 1, i32 13, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %126, i32 1) #19
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 2147483647, i32 %129, !prof !9
  store i32 %130, i32* %125, align 4
  br label %131

131:                                              ; preds = %124, %108
  %132 = icmp eq %"struct.net::HostCache::EntryStaleness"* %4, null
  br i1 %132, label %143, label %133

133:                                              ; preds = %131
  %134 = load i32, i32* %109, align 8
  %135 = sub nsw i64 %102, %112
  %136 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %4, i64 0, i32 0, i32 0
  store i64 %135, i64* %136, align 8
  %137 = load i32, i32* %113, align 8
  %138 = sub nsw i32 %134, %137
  %139 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %4, i64 0, i32 1
  store i32 %138, i32* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %106, i64 0, i32 1, i32 13, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.net::HostCache::EntryStaleness", %"struct.net::HostCache::EntryStaleness"* %4, i64 0, i32 2
  store i32 %141, i32* %142, align 4
  br label %143

143:                                              ; preds = %133, %131, %81, %79, %91
  %144 = phi %"struct.std::__1::pair.120"* [ null, %91 ], [ %54, %79 ], [ %54, %81 ], [ %106, %131 ], [ %106, %133 ]
  %145 = icmp eq i32* %3, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %144, i64 0, i32 1, i32 6
  %148 = load i32, i32* %147, align 8
  store i32 %148, i32* %3, align 4
  br label %149

149:                                              ; preds = %143, %146
  %150 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %144, i64 0, i32 0
  br label %151

151:                                              ; preds = %105, %95, %149
  %152 = phi %"struct.net::HostCache::Key"* [ %150, %149 ], [ null, %95 ], [ null, %105 ]
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %9) #19
  %153 = load i8, i8* %36, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %157) #21
  br label %158

158:                                              ; preds = %151, %155
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %8) #19
  ret %"struct.net::HostCache::Key"* %152
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEEC2ERKS3_(%"class.std::__1::vector.46"*, %"class.std::__1::vector.46"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.46"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  %7 = load i64, i64* %5, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %48, label %9

9:                                                ; preds = %2
  %10 = icmp slt i64 %7, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = bitcast %"class.std::__1::vector.46"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #20
  unreachable

13:                                               ; preds = %9
  %14 = add nsw i64 %7, -1
  %15 = lshr i64 %14, 6
  %16 = add nuw nsw i64 %15, 1
  %17 = shl nuw nsw i64 %16, 3
  %18 = tail call i8* @_Znwm(i64 %17) #21
  %19 = bitcast %"class.std::__1::vector.46"* %0 to i8**
  store i8* %18, i8** %19, align 8
  store i64 0, i64* %3, align 8
  store i64 %16, i64* %4, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %5, align 8
  store i64 %22, i64* %3, align 8
  %23 = icmp ult i64 %22, 65
  %24 = bitcast i8* %18 to i64*
  %25 = add i64 %22, -1
  %26 = lshr i64 %25, 6
  %27 = getelementptr inbounds i64, i64* %24, i64 %26
  %28 = select i1 %23, i64* %24, i64* %27
  store i64 0, i64* %28, align 8
  %29 = icmp sgt i64 %22, 0
  br i1 %29, label %30, label %48

30:                                               ; preds = %13
  %31 = lshr i64 %22, 6
  %32 = bitcast i64* %21 to i8*
  %33 = shl nuw nsw i64 %31, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %32, i64 %33, i1 false) #19, !noalias !14
  %34 = and i64 %22, 63
  %35 = bitcast i8* %18 to i64*
  %36 = getelementptr inbounds i64, i64* %35, i64 %31
  %37 = icmp eq i64 %34, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds i64, i64* %21, i64 %31
  %40 = sub nuw nsw i64 64, %34
  %41 = lshr i64 -1, %40
  %42 = load i64, i64* %39, align 8, !noalias !17
  %43 = and i64 %42, %41
  %44 = xor i64 %41, -1
  %45 = load i64, i64* %36, align 8, !noalias !14
  %46 = and i64 %45, %44
  %47 = or i64 %46, %43
  store i64 %47, i64* %36, align 8, !noalias !14
  br label %48

48:                                               ; preds = %38, %13, %30, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator.156"* noalias sret, i64*, i32, i64*, i32, %"class.std::__1::__bit_iterator.156"*) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i64* %1 to i64
  %8 = ptrtoint i64* %3 to i64
  %9 = sub i64 %8, %7
  %10 = shl i64 %9, 3
  %11 = zext i32 %4 to i64
  %12 = zext i32 %2 to i64
  %13 = sub nsw i64 %11, %12
  %14 = add i64 %13, %10
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %16, label %179

16:                                               ; preds = %6
  %17 = icmp eq i32 %2, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  br label %88

21:                                               ; preds = %16
  %22 = sub i32 64, %2
  %23 = zext i32 %22 to i64
  %24 = icmp slt i64 %14, %23
  %25 = select i1 %24, i64 %14, i64 %23
  %26 = sub nsw i64 %14, %25
  %27 = shl i64 -1, %12
  %28 = sub nsw i64 %23, %25
  %29 = lshr i64 -1, %28
  %30 = and i64 %29, %27
  %31 = load i64, i64* %1, align 8
  %32 = and i64 %30, %31
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = sub i32 64, %34
  %36 = zext i32 %35 to i64
  %37 = icmp ugt i64 %25, %36
  %38 = select i1 %37, i64 %36, i64 %25
  %39 = zext i32 %34 to i64
  %40 = shl i64 -1, %39
  %41 = sub nsw i64 %36, %38
  %42 = lshr i64 -1, %41
  %43 = and i64 %42, %40
  %44 = xor i64 %43, -1
  %45 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, %44
  store i64 %48, i64* %46, align 8
  %49 = load i32, i32* %33, align 8
  %50 = icmp ugt i32 %49, %2
  %51 = sub i32 %2, %49
  %52 = zext i32 %51 to i64
  %53 = lshr i64 %32, %52
  %54 = sub i32 %49, %2
  %55 = zext i32 %54 to i64
  %56 = shl i64 %32, %55
  %57 = select i1 %50, i64 %56, i64 %53
  %58 = load i64*, i64** %45, align 8
  %59 = load i64, i64* %58, align 8
  %60 = or i64 %59, %57
  store i64 %60, i64* %58, align 8
  %61 = load i32, i32* %33, align 8
  %62 = zext i32 %61 to i64
  %63 = add nuw nsw i64 %38, %62
  %64 = lshr i64 %63, 6
  %65 = load i64*, i64** %45, align 8
  %66 = getelementptr inbounds i64, i64* %65, i64 %64
  store i64* %66, i64** %45, align 8
  %67 = trunc i64 %38 to i32
  %68 = add i32 %61, %67
  %69 = and i32 %68, 63
  store i32 %69, i32* %33, align 8
  %70 = sub i64 %25, %38
  %71 = icmp sgt i64 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %21
  %73 = sub nsw i64 64, %70
  %74 = lshr i64 -1, %73
  %75 = xor i64 %74, -1
  %76 = load i64, i64* %66, align 8
  %77 = and i64 %76, %75
  store i64 %77, i64* %66, align 8
  %78 = add nuw nsw i64 %38, %12
  %79 = lshr i64 %32, %78
  %80 = load i64*, i64** %45, align 8
  %81 = load i64, i64* %80, align 8
  %82 = or i64 %81, %79
  store i64 %82, i64* %80, align 8
  %83 = trunc i64 %70 to i32
  store i32 %83, i32* %33, align 8
  br label %84

84:                                               ; preds = %72, %21
  %85 = phi i32 [ %83, %72 ], [ %69, %21 ]
  %86 = getelementptr inbounds i64, i64* %1, i64 1
  %87 = ptrtoint i64* %86 to i64
  br label %88

88:                                               ; preds = %18, %84
  %89 = phi i32 [ %20, %18 ], [ %85, %84 ]
  %90 = phi i64 [ %14, %18 ], [ %26, %84 ]
  %91 = phi i64 [ %7, %18 ], [ %87, %84 ]
  %92 = inttoptr i64 %91 to i64*
  %93 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 1
  %94 = sub i32 64, %89
  %95 = zext i32 %89 to i64
  %96 = shl i64 -1, %95
  %97 = icmp sgt i64 %90, 63
  br i1 %97, label %98, label %128

98:                                               ; preds = %88
  %99 = xor i64 %96, -1
  %100 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 0
  %101 = zext i32 %94 to i64
  br label %102

102:                                              ; preds = %98, %102
  %103 = phi i64* [ %92, %98 ], [ %124, %102 ]
  %104 = phi i64 [ %90, %98 ], [ %123, %102 ]
  %105 = load i64, i64* %103, align 8
  %106 = load i64*, i64** %100, align 8
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, %99
  store i64 %108, i64* %106, align 8
  %109 = load i32, i32* %93, align 8
  %110 = zext i32 %109 to i64
  %111 = shl i64 %105, %110
  %112 = load i64*, i64** %100, align 8
  %113 = load i64, i64* %112, align 8
  %114 = or i64 %113, %111
  store i64 %114, i64* %112, align 8
  %115 = load i64*, i64** %100, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 1
  store i64* %116, i64** %100, align 8
  %117 = load i64, i64* %116, align 8
  %118 = and i64 %117, %96
  store i64 %118, i64* %116, align 8
  %119 = lshr i64 %105, %101
  %120 = load i64*, i64** %100, align 8
  %121 = load i64, i64* %120, align 8
  %122 = or i64 %121, %119
  store i64 %122, i64* %120, align 8
  %123 = add nsw i64 %104, -64
  %124 = getelementptr inbounds i64, i64* %103, i64 1
  %125 = icmp sgt i64 %123, 63
  br i1 %125, label %102, label %126

126:                                              ; preds = %102
  %127 = and i64 %90, 63
  br label %128

128:                                              ; preds = %126, %88
  %129 = phi i64 [ %127, %126 ], [ %90, %88 ]
  %130 = phi i64* [ %124, %126 ], [ %92, %88 ]
  %131 = icmp sgt i64 %129, 0
  br i1 %131, label %132, label %179

132:                                              ; preds = %128
  %133 = sub nuw nsw i64 64, %129
  %134 = lshr i64 -1, %133
  %135 = load i64, i64* %130, align 8
  %136 = and i64 %135, %134
  %137 = zext i32 %94 to i64
  %138 = icmp sgt i64 %129, %137
  %139 = select i1 %138, i64 %137, i64 %129
  %140 = load i32, i32* %93, align 8
  %141 = zext i32 %140 to i64
  %142 = shl i64 -1, %141
  %143 = sub nsw i64 %137, %139
  %144 = lshr i64 -1, %143
  %145 = and i64 %142, %144
  %146 = xor i64 %145, -1
  %147 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 0
  %148 = load i64*, i64** %147, align 8
  %149 = load i64, i64* %148, align 8
  %150 = and i64 %149, %146
  store i64 %150, i64* %148, align 8
  %151 = load i32, i32* %93, align 8
  %152 = zext i32 %151 to i64
  %153 = shl i64 %136, %152
  %154 = load i64*, i64** %147, align 8
  %155 = load i64, i64* %154, align 8
  %156 = or i64 %155, %153
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %93, align 8
  %158 = zext i32 %157 to i64
  %159 = add nuw nsw i64 %139, %158
  %160 = lshr i64 %159, 6
  %161 = load i64*, i64** %147, align 8
  %162 = getelementptr inbounds i64, i64* %161, i64 %160
  store i64* %162, i64** %147, align 8
  %163 = trunc i64 %139 to i32
  %164 = add i32 %157, %163
  %165 = and i32 %164, 63
  store i32 %165, i32* %93, align 8
  %166 = sub nsw i64 %129, %139
  %167 = icmp sgt i64 %166, 0
  br i1 %167, label %168, label %179

168:                                              ; preds = %132
  %169 = sub nuw nsw i64 64, %166
  %170 = lshr i64 -1, %169
  %171 = xor i64 %170, -1
  %172 = load i64, i64* %162, align 8
  %173 = and i64 %172, %171
  store i64 %173, i64* %162, align 8
  %174 = lshr i64 %136, %139
  %175 = load i64*, i64** %147, align 8
  %176 = load i64, i64* %175, align 8
  %177 = or i64 %176, %174
  store i64 %177, i64* %175, align 8
  %178 = trunc i64 %166 to i32
  store i32 %178, i32* %93, align 8
  br label %179

179:                                              ; preds = %128, %168, %132, %6
  %180 = bitcast %"class.std::__1::__bit_iterator.156"* %5 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.std::__1::__bit_iterator.156"* %0 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %0, i64 0, i32 1
  %184 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 1
  %185 = load i32, i32* %184, align 8
  store i32 %185, i32* %183, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #14

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::IPEndPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 20
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 922337203685477580
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPEndPoint"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 20
  %20 = icmp ult i64 %19, 461168601842738790
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 922337203685477580, %14 ]
  %28 = mul i64 %27, 20
  %29 = tail call i8* @_Znwm(i64 %28) #21
  %30 = bitcast i8* %29 to %"class.net::IPEndPoint"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::IPEndPoint"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %32
  %36 = ptrtoint %"class.net::IPEndPoint"* %35 to i64
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %34, %"class.net::IPEndPoint"* dereferenceable(20) %1) #19
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %34, i64 1
  %38 = ptrtoint %"class.net::IPEndPoint"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %41 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %42 = icmp eq %"class.net::IPEndPoint"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.net::IPEndPoint"* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %"class.net::IPEndPoint"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.net::IPEndPoint"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %46, i64 -1
  %49 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %47, i64 -1
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %48, %"class.net::IPEndPoint"* dereferenceable(20) %49) #19
  %50 = icmp eq %"class.net::IPEndPoint"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %53 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %54 = ptrtoint %"class.net::IPEndPoint"* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %"class.net::IPEndPoint"* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.net::IPEndPoint"* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %57, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %58) #19
  %59 = icmp eq %"class.net::IPEndPoint"* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %"class.net::IPEndPoint"* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %"class.net::IPEndPoint"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %64) #21
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #1

declare dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSERKS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional_internal::optional_data.25"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEELb0EEaSERKSC_(%"class.absl::optional_internal::optional_data.25"*, %"class.absl::optional_internal::optional_data.25"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %19, label %12

12:                                               ; preds = %6
  %13 = icmp eq %"class.absl::optional_internal::optional_data.25"* %0, %1
  br i1 %13, label %103, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %7, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.17"* %11, %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"* %18) #19
  br label %103

19:                                               ; preds = %6
  %20 = bitcast %"class.std::__1::vector.17"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #19
  %21 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.17"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 24
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %70, label %29

29:                                               ; preds = %19
  %30 = icmp ugt i64 %27, 768614336404564650
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector.17"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #20
  unreachable

33:                                               ; preds = %29
  %34 = tail call i8* @_Znwm(i64 %26) #21
  %35 = bitcast i8* %34 to %"class.std::__1::basic_string"*
  %36 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"** %36 to i8**
  store i8* %34, i8** %37, align 8
  %38 = bitcast %"class.std::__1::vector.17"* %11 to i8**
  store i8* %34, i8** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 %27
  %40 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %39, %"class.std::__1::basic_string"** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %7, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %44 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  %45 = ptrtoint i8* %34 to i64
  %46 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %46, label %68, label %47

47:                                               ; preds = %33, %62
  %48 = phi %"class.std::__1::basic_string"* [ %64, %62 ], [ %35, %33 ]
  %49 = phi %"class.std::__1::basic_string"* [ %63, %62 ], [ %42, %33 ]
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #19
  br label %62

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %48, i8* %59, i64 %61) #19
  br label %62

62:                                               ; preds = %57, %54
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 1
  %65 = icmp eq %"class.std::__1::basic_string"* %63, %43
  br i1 %65, label %66, label %47

66:                                               ; preds = %62
  %67 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  br label %68

68:                                               ; preds = %66, %33
  %69 = phi i64 [ %45, %33 ], [ %67, %66 ]
  store i64 %69, i64* %44, align 8
  br label %70

70:                                               ; preds = %19, %68
  store i8 1, i8* %8, align 8
  br label %103

71:                                               ; preds = %2
  %72 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %0, i64 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %103, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %77, align 8
  %79 = icmp eq %"class.std::__1::basic_string"* %78, null
  br i1 %79, label %102, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %82 = getelementptr inbounds %"class.absl::optional_internal::optional_data.25", %"class.absl::optional_internal::optional_data.25"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = icmp eq %"class.std::__1::basic_string"* %83, %78
  br i1 %84, label %100, label %85

85:                                               ; preds = %80, %95
  %86 = phi %"class.std::__1::basic_string"* [ %87, %95 ], [ %83, %80 ]
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 -1
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  tail call void @_ZdlPv(i8* %94) #21
  br label %95

95:                                               ; preds = %92, %85
  %96 = icmp eq %"class.std::__1::basic_string"* %87, %78
  br i1 %96, label %97, label %85

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::vector.17"* %76 to i8**
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %80
  %101 = phi i8* [ %99, %97 ], [ %81, %80 ]
  store %"class.std::__1::basic_string"* %78, %"class.std::__1::basic_string"** %82, align 8
  tail call void @_ZdlPv(i8* %101) #21
  br label %102

102:                                              ; preds = %100, %75
  store i8 0, i8* %72, align 8
  br label %103

103:                                              ; preds = %102, %71, %70, %14, %12
  ret %"class.absl::optional_internal::optional_data.25"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.17"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #19
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #19
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #19
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #19
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #19
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #21
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #21
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.17"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #21
  %134 = bitcast %"class.std::__1::vector.17"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #19
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #20
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #21
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector.17"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #19
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #19
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional_internal::optional_data.30"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net12HostPortPairENS2_9allocatorIS5_EEEELb0EEaSERKS9_(%"class.absl::optional_internal::optional_data.30"*, %"class.absl::optional_internal::optional_data.30"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %75, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %19, label %12

12:                                               ; preds = %6
  %13 = icmp eq %"class.absl::optional_internal::optional_data.30"* %0, %1
  br i1 %13, label %107, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %7, i64 0, i32 0, i32 0
  %16 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %17, align 8
  tail call void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.34"* %11, %"class.net::HostPortPair"* %16, %"class.net::HostPortPair"* %18) #19
  br label %107

19:                                               ; preds = %6
  %20 = bitcast %"class.std::__1::vector.34"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #19
  %21 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = bitcast %"class.net::HostPortPair"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.34"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 5
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %74, label %29

29:                                               ; preds = %19
  %30 = icmp ugt i64 %27, 576460752303423487
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector.34"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #20
  unreachable

33:                                               ; preds = %29
  %34 = tail call i8* @_Znwm(i64 %26) #21
  %35 = bitcast i8* %34 to %"class.net::HostPortPair"*
  %36 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %37 = bitcast %"class.net::HostPortPair"** %36 to i8**
  store i8* %34, i8** %37, align 8
  %38 = bitcast %"class.std::__1::vector.34"* %11 to i8**
  store i8* %34, i8** %38, align 8
  %39 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %35, i64 %27
  %40 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::HostPortPair"* %39, %"class.net::HostPortPair"** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %7, i64 0, i32 0, i32 0
  %42 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %41, align 8
  %43 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %21, align 8
  %44 = bitcast %"class.net::HostPortPair"** %36 to i64*
  %45 = ptrtoint i8* %34 to i64
  %46 = icmp eq %"class.net::HostPortPair"* %42, %43
  br i1 %46, label %72, label %47

47:                                               ; preds = %33, %63
  %48 = phi %"class.net::HostPortPair"* [ %68, %63 ], [ %35, %33 ]
  %49 = phi %"class.net::HostPortPair"* [ %67, %63 ], [ %42, %33 ]
  %50 = bitcast %"class.net::HostPortPair"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.net::HostPortPair"* %48 to i8*
  %56 = bitcast %"class.net::HostPortPair"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #19
  br label %63

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %48, i64 0, i32 0
  %59 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %58, i8* %60, i64 %62) #19
  br label %63

63:                                               ; preds = %57, %54
  %64 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %48, i64 0, i32 1
  %65 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %49, i64 0, i32 1
  %66 = load i16, i16* %65, align 8
  store i16 %66, i16* %64, align 8
  %67 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %49, i64 1
  %68 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %48, i64 1
  %69 = icmp eq %"class.net::HostPortPair"* %67, %43
  br i1 %69, label %70, label %47

70:                                               ; preds = %63
  %71 = ptrtoint %"class.net::HostPortPair"* %68 to i64
  br label %72

72:                                               ; preds = %70, %33
  %73 = phi i64 [ %45, %33 ], [ %71, %70 ]
  store i64 %73, i64* %44, align 8
  br label %74

74:                                               ; preds = %19, %72
  store i8 1, i8* %8, align 8
  br label %107

75:                                               ; preds = %2
  %76 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %107, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %81 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %81, align 8
  %83 = icmp eq %"class.net::HostPortPair"* %82, null
  br i1 %83, label %106, label %84

84:                                               ; preds = %79
  %85 = bitcast %"class.net::HostPortPair"* %82 to i8*
  %86 = getelementptr inbounds %"class.absl::optional_internal::optional_data.30", %"class.absl::optional_internal::optional_data.30"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %87 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %86, align 8
  %88 = icmp eq %"class.net::HostPortPair"* %87, %82
  br i1 %88, label %104, label %89

89:                                               ; preds = %84, %99
  %90 = phi %"class.net::HostPortPair"* [ %91, %99 ], [ %87, %84 ]
  %91 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %90, i64 -1
  %92 = bitcast %"class.net::HostPortPair"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #21
  br label %99

99:                                               ; preds = %96, %89
  %100 = icmp eq %"class.net::HostPortPair"* %91, %82
  br i1 %100, label %101, label %89

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::vector.34"* %80 to i8**
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %101, %84
  %105 = phi i8* [ %103, %101 ], [ %85, %84 ]
  store %"class.net::HostPortPair"* %82, %"class.net::HostPortPair"** %86, align 8
  tail call void @_ZdlPv(i8* %105) #21
  br label %106

106:                                              ; preds = %104, %79
  store i8 0, i8* %76, align 8
  br label %107

107:                                              ; preds = %106, %75, %74, %14, %12
  ret %"class.absl::optional_internal::optional_data.30"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.34"*, %"class.net::HostPortPair"*, %"class.net::HostPortPair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.net::HostPortPair"* %2 to i64
  %5 = ptrtoint %"class.net::HostPortPair"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 5
  %8 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.net::HostPortPair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.34"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 5
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.net::HostPortPair"*
  br i1 %15, label %118, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.net::HostPortPair"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 5
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 %22
  %25 = select i1 %23, %"class.net::HostPortPair"* %24, %"class.net::HostPortPair"* %2
  %26 = icmp eq %"class.net::HostPortPair"* %25, %1
  br i1 %26, label %68, label %27

27:                                               ; preds = %17, %61
  %28 = phi %"class.net::HostPortPair"* [ %66, %61 ], [ %16, %17 ]
  %29 = phi %"class.net::HostPortPair"* [ %65, %61 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %28, i64 0, i32 0
  %31 = icmp eq %"class.net::HostPortPair"* %28, %29
  br i1 %31, label %61, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.net::HostPortPair"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"class.net::HostPortPair"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"class.net::HostPortPair"* %28 to i8*
  %44 = bitcast %"class.net::HostPortPair"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #19
  br label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %47, i64 %49) #19
  br label %61

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.net::HostPortPair"* %29 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %58, i64 %59) #19
  br label %61

61:                                               ; preds = %51, %45, %42, %27
  %62 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %29, i64 0, i32 1
  %63 = load i16, i16* %62, align 8
  %64 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %28, i64 0, i32 1
  store i16 %63, i16* %64, align 8
  %65 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %29, i64 1
  %66 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %28, i64 1
  %67 = icmp eq %"class.net::HostPortPair"* %65, %25
  br i1 %67, label %68, label %27

68:                                               ; preds = %61, %17
  %69 = phi %"class.net::HostPortPair"* [ %16, %17 ], [ %66, %61 ]
  br i1 %23, label %70, label %102

70:                                               ; preds = %68
  %71 = load i64, i64* %19, align 8
  %72 = icmp eq %"class.net::HostPortPair"* %25, %2
  br i1 %72, label %100, label %73

73:                                               ; preds = %70
  %74 = inttoptr i64 %71 to %"class.net::HostPortPair"*
  br label %75

75:                                               ; preds = %91, %73
  %76 = phi %"class.net::HostPortPair"* [ %96, %91 ], [ %74, %73 ]
  %77 = phi %"class.net::HostPortPair"* [ %95, %91 ], [ %24, %73 ]
  %78 = bitcast %"class.net::HostPortPair"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %75
  %83 = bitcast %"class.net::HostPortPair"* %76 to i8*
  %84 = bitcast %"class.net::HostPortPair"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #19
  br label %91

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %76, i64 0, i32 0
  %87 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %86, i8* %88, i64 %90) #19
  br label %91

91:                                               ; preds = %85, %82
  %92 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %76, i64 0, i32 1
  %93 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %77, i64 0, i32 1
  %94 = load i16, i16* %93, align 8
  store i16 %94, i16* %92, align 8
  %95 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %77, i64 1
  %96 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %76, i64 1
  %97 = icmp eq %"class.net::HostPortPair"* %95, %2
  br i1 %97, label %98, label %75

98:                                               ; preds = %91
  %99 = ptrtoint %"class.net::HostPortPair"* %96 to i64
  br label %100

100:                                              ; preds = %70, %98
  %101 = phi i64 [ %71, %70 ], [ %99, %98 ]
  store i64 %101, i64* %19, align 8
  br label %197

102:                                              ; preds = %68
  %103 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %18, align 8
  %104 = icmp eq %"class.net::HostPortPair"* %103, %69
  br i1 %104, label %117, label %105

105:                                              ; preds = %102, %115
  %106 = phi %"class.net::HostPortPair"* [ %107, %115 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %106, i64 -1
  %108 = bitcast %"class.net::HostPortPair"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  tail call void @_ZdlPv(i8* %114) #21
  br label %115

115:                                              ; preds = %112, %105
  %116 = icmp eq %"class.net::HostPortPair"* %107, %69
  br i1 %116, label %117, label %105

117:                                              ; preds = %115, %102
  store %"class.net::HostPortPair"* %69, %"class.net::HostPortPair"** %18, align 8
  br label %197

118:                                              ; preds = %3
  %119 = icmp eq i64 %12, 0
  br i1 %119, label %143, label %120

120:                                              ; preds = %118
  %121 = inttoptr i64 %12 to i8*
  %122 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %123 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %122, align 8
  %124 = icmp eq %"class.net::HostPortPair"* %123, %16
  br i1 %124, label %140, label %125

125:                                              ; preds = %120, %135
  %126 = phi %"class.net::HostPortPair"* [ %127, %135 ], [ %123, %120 ]
  %127 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %126, i64 -1
  %128 = bitcast %"class.net::HostPortPair"* %127 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  tail call void @_ZdlPv(i8* %134) #21
  br label %135

135:                                              ; preds = %132, %125
  %136 = icmp eq %"class.net::HostPortPair"* %127, %16
  br i1 %136, label %137, label %125

137:                                              ; preds = %135
  %138 = bitcast %"class.std::__1::vector.34"* %0 to i8**
  %139 = load i8*, i8** %138, align 8
  br label %140

140:                                              ; preds = %137, %120
  %141 = phi i8* [ %139, %137 ], [ %121, %120 ]
  store %"class.net::HostPortPair"* %16, %"class.net::HostPortPair"** %122, align 8
  tail call void @_ZdlPv(i8* %141) #21
  %142 = bitcast %"class.std::__1::vector.34"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #19
  br label %143

143:                                              ; preds = %118, %140
  %144 = phi i64 [ %10, %118 ], [ 0, %140 ]
  %145 = icmp ugt i64 %7, 576460752303423487
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = bitcast %"class.std::__1::vector.34"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #20
  unreachable

148:                                              ; preds = %143
  %149 = ashr exact i64 %144, 5
  %150 = icmp ult i64 %149, 288230376151711743
  br i1 %150, label %151, label %158

151:                                              ; preds = %148
  %152 = ashr exact i64 %144, 4
  %153 = icmp ult i64 %152, %7
  br i1 %153, label %158, label %154

154:                                              ; preds = %151
  %155 = icmp ugt i64 %152, 576460752303423487
  br i1 %155, label %156, label %158

156:                                              ; preds = %154
  %157 = bitcast %"class.std::__1::vector.34"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %157) #20
  unreachable

158:                                              ; preds = %151, %148, %154
  %159 = phi i64 [ %152, %154 ], [ 576460752303423487, %148 ], [ %7, %151 ]
  %160 = shl i64 %159, 5
  %161 = tail call i8* @_Znwm(i64 %160) #21
  %162 = bitcast i8* %161 to %"class.net::HostPortPair"*
  %163 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %164 = bitcast %"class.net::HostPortPair"** %163 to i8**
  store i8* %161, i8** %164, align 8
  %165 = bitcast %"class.std::__1::vector.34"* %0 to i8**
  store i8* %161, i8** %165, align 8
  %166 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %162, i64 %159
  store %"class.net::HostPortPair"* %166, %"class.net::HostPortPair"** %8, align 8
  %167 = bitcast %"class.net::HostPortPair"** %163 to i64*
  %168 = ptrtoint i8* %161 to i64
  %169 = icmp eq %"class.net::HostPortPair"* %1, %2
  br i1 %169, label %195, label %170

170:                                              ; preds = %158, %186
  %171 = phi %"class.net::HostPortPair"* [ %191, %186 ], [ %162, %158 ]
  %172 = phi %"class.net::HostPortPair"* [ %190, %186 ], [ %1, %158 ]
  %173 = bitcast %"class.net::HostPortPair"* %172 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %170
  %178 = bitcast %"class.net::HostPortPair"* %171 to i8*
  %179 = bitcast %"class.net::HostPortPair"* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 24, i1 false) #19
  br label %186

180:                                              ; preds = %170
  %181 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %171, i64 0, i32 0
  %182 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %181, i8* %183, i64 %185) #19
  br label %186

186:                                              ; preds = %180, %177
  %187 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %171, i64 0, i32 1
  %188 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %172, i64 0, i32 1
  %189 = load i16, i16* %188, align 8
  store i16 %189, i16* %187, align 8
  %190 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %172, i64 1
  %191 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %171, i64 1
  %192 = icmp eq %"class.net::HostPortPair"* %190, %2
  br i1 %192, label %193, label %170

193:                                              ; preds = %186
  %194 = ptrtoint %"class.net::HostPortPair"* %191 to i64
  br label %195

195:                                              ; preds = %158, %193
  %196 = phi i64 [ %168, %158 ], [ %194, %193 ]
  store i64 %196, i64* %167, align 8
  br label %197

197:                                              ; preds = %100, %117, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.46"* @_ZNSt3__16vectorIbNS_9allocatorIbEEEaSERKS3_(%"class.std::__1::vector.46"*, %"class.std::__1::vector.46"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::vector.46"* %0, %1
  br i1 %3, label %51, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %48, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = icmp ugt i64 %6, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::vector.46"* %0 to i8**
  %15 = load i8*, i8** %14, align 8
  br label %38

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = bitcast i64* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #21
  %22 = bitcast %"class.std::__1::vector.46"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #19
  %23 = load i64, i64* %5, align 8
  br label %24

24:                                               ; preds = %16, %20
  %25 = phi i64 [ %6, %16 ], [ %23, %20 ]
  %26 = icmp slt i64 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = bitcast %"class.std::__1::vector.46"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #20
  unreachable

29:                                               ; preds = %24
  %30 = add nsw i64 %25, -1
  %31 = lshr i64 %30, 6
  %32 = add nuw nsw i64 %31, 1
  %33 = shl nuw nsw i64 %32, 3
  %34 = tail call i8* @_Znwm(i64 %33) #21
  %35 = bitcast %"class.std::__1::vector.46"* %0 to i8**
  store i8* %34, i8** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 1
  store i64 0, i64* %36, align 8
  store i64 %32, i64* %9, align 8
  %37 = load i64, i64* %5, align 8
  br label %38

38:                                               ; preds = %13, %29
  %39 = phi i8* [ %15, %13 ], [ %34, %29 ]
  %40 = phi i64 [ %6, %13 ], [ %37, %29 ]
  %41 = add i64 %40, -1
  %42 = lshr i64 %41, 6
  %43 = shl nuw nsw i64 %42, 3
  %44 = add nuw nsw i64 %43, 8
  %45 = bitcast %"class.std::__1::vector.46"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %46, i64 %44, i1 false) #19
  %47 = load i64, i64* %5, align 8
  br label %48

48:                                               ; preds = %38, %4
  %49 = phi i64 [ %47, %38 ], [ 0, %4 ]
  %50 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 1
  store i64 %49, i64* %50, align 8
  br label %51

51:                                               ; preds = %2, %48
  ret %"class.std::__1::vector.46"* %0
}

declare dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSEOS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #19
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !9
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #19
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #19
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %26, i8* %27) #19
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #19
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #19
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #19
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #14

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #19
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %29, i8* %31) #19
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #19
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #19
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #19
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #19
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %48, i8* %50) #19
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #19
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #19
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #19
  ret void
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #15 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #19
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %20, i8* %22) #19
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #19
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #19
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #19
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i8* %41, i8* %43) #19
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #19
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #19
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #19
  ret void
}

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #1

declare zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEpLEl(%"class.base::CheckedContiguousIterator"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp sgt i64 %1, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #19
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %14 = bitcast %"class.base::Value"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = bitcast %"class.base::Value"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 5
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp slt i64 %20, %1
  br i1 %22, label %24, label %23

23:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %12, align 8
  br label %56

24:                                               ; preds = %10
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #19
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %20) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %25, i8* %26) #19
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %12, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %56, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 135, %"class.logging::CheckOpResult"* nonnull %5) #19
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #19
  br label %56

33:                                               ; preds = %2
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #19
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = sub nsw i64 0, %1
  %37 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %38 = bitcast %"class.base::Value"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 5
  %44 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp slt i64 %43, %36
  br i1 %45, label %47, label %46

46:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %35, align 8
  br label %56

47:                                               ; preds = %33
  %48 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %36) #19
  %49 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %43) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i8* %48, i8* %49) #19
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %51, i8** %35, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 137, %"class.logging::CheckOpResult"* nonnull %7) #19
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #19
  br label %56

56:                                               ; preds = %53, %47, %46, %30, %24, %23
  %57 = phi i8* [ %11, %23 ], [ %11, %24 ], [ %11, %30 ], [ %34, %46 ], [ %34, %47 ], [ %34, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #19
  %58 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %59 = load %"class.base::Value"*, %"class.base::Value"** %58, align 8
  %60 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 %1
  store %"class.base::Value"* %60, %"class.base::Value"** %58, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS6_EEE4typeESD_SF_SF_(%"class.std::__1::vector.17"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %8 = ptrtoint %"class.std::__1::basic_string"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 24
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %248

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  br i1 %21, label %136, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 24
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 %25
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %45
  %31 = phi %"class.std::__1::basic_string"* [ %47, %45 ], [ %17, %27 ]
  %32 = phi %"class.std::__1::basic_string"* [ %46, %45 ], [ %28, %27 ]
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #19
  br label %45

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %42, i64 %44) #19
  br label %45

45:                                               ; preds = %40, %37
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 1
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %48 = icmp eq %"class.std::__1::basic_string"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %45
  %50 = ptrtoint %"class.std::__1::basic_string"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %248

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"class.std::__1::basic_string"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"class.std::__1::basic_string"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"class.std::__1::basic_string"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %10
  %61 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 24
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %63
  %65 = icmp ult %"class.std::__1::basic_string"* %64, %17
  br i1 %65, label %89, label %68

66:                                               ; preds = %89
  %67 = ptrtoint %"class.std::__1::basic_string"* %95 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %97, label %71

71:                                               ; preds = %68, %83
  %72 = phi %"class.std::__1::basic_string"* [ %75, %83 ], [ %58, %68 ]
  %73 = phi %"class.std::__1::basic_string"* [ %74, %83 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 -1
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #21
  br label %83

83:                                               ; preds = %80, %71
  %84 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #19
  %86 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  store i8 0, i8* %87, align 1
  store i8 0, i8* %85, align 1
  %88 = icmp eq %"class.std::__1::basic_string"* %74, %1
  br i1 %88, label %97, label %71

89:                                               ; preds = %56, %89
  %90 = phi %"class.std::__1::basic_string"* [ %95, %89 ], [ %58, %56 ]
  %91 = phi %"class.std::__1::basic_string"* [ %94, %89 ], [ %64, %56 ]
  %92 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %93 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #19
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 1
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 1
  %96 = icmp ult %"class.std::__1::basic_string"* %94, %17
  br i1 %96, label %89, label %66

97:                                               ; preds = %83, %68
  %98 = icmp eq %"class.std::__1::basic_string"* %59, %2
  br i1 %98, label %248, label %99

99:                                               ; preds = %97, %132
  %100 = phi %"class.std::__1::basic_string"* [ %134, %132 ], [ %1, %97 ]
  %101 = phi %"class.std::__1::basic_string"* [ %133, %132 ], [ %2, %97 ]
  %102 = icmp eq %"class.std::__1::basic_string"* %100, %101
  br i1 %102, label %132, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %107, label %122, label %112

112:                                              ; preds = %103
  br i1 %111, label %116, label %113

113:                                              ; preds = %112
  %114 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  %115 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 24, i1 false) #19
  br label %132

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %100, i8* %118, i64 %120) #19
  br label %132

122:                                              ; preds = %103
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %128 = zext i8 %110 to i64
  %129 = select i1 %111, i8* %124, i8* %127
  %130 = select i1 %111, i64 %126, i64 %128
  %131 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %100, i8* %129, i64 %130) #19
  br label %132

132:                                              ; preds = %122, %116, %113, %99
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 1
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 1
  %135 = icmp eq %"class.std::__1::basic_string"* %133, %59
  br i1 %135, label %248, label %99

136:                                              ; preds = %12
  %137 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = sub i64 %18, %138
  %140 = sdiv exact i64 %139, 24
  %141 = add nsw i64 %140, %10
  %142 = icmp ugt i64 %141, 768614336404564650
  br i1 %142, label %143, label %145

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %144) #20
  unreachable

145:                                              ; preds = %136
  %146 = sub i64 %15, %138
  %147 = sdiv exact i64 %146, 24
  %148 = icmp ult i64 %147, 384307168202282325
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = sub i64 %5, %138
  %151 = sdiv exact i64 %150, 24
  br label %159

152:                                              ; preds = %145
  %153 = shl nsw i64 %147, 1
  %154 = icmp ult i64 %153, %141
  %155 = select i1 %154, i64 %141, i64 %153
  %156 = sub i64 %5, %138
  %157 = sdiv exact i64 %156, 24
  %158 = icmp eq i64 %155, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %152, %149
  %160 = phi i64 [ %151, %149 ], [ %157, %152 ]
  %161 = phi i64 [ 768614336404564650, %149 ], [ %155, %152 ]
  %162 = mul i64 %161, 24
  %163 = tail call i8* @_Znwm(i64 %162) #21
  %164 = bitcast i8* %163 to %"class.std::__1::basic_string"*
  br label %165

165:                                              ; preds = %159, %152
  %166 = phi i64 [ %160, %159 ], [ %157, %152 ]
  %167 = phi i64 [ %161, %159 ], [ 0, %152 ]
  %168 = phi %"class.std::__1::basic_string"* [ %164, %159 ], [ null, %152 ]
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 %166
  %170 = ptrtoint %"class.std::__1::basic_string"* %169 to i64
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 %167
  %172 = ptrtoint %"class.std::__1::basic_string"* %171 to i64
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 %10
  br label %174

174:                                              ; preds = %165, %190
  %175 = phi %"class.std::__1::basic_string"* [ %191, %190 ], [ %169, %165 ]
  %176 = phi i64 [ %192, %190 ], [ %170, %165 ]
  %177 = phi %"class.std::__1::basic_string"* [ %193, %190 ], [ %2, %165 ]
  %178 = bitcast %"class.std::__1::basic_string"* %177 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %174
  %183 = inttoptr i64 %176 to i8*
  %184 = bitcast %"class.std::__1::basic_string"* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 24, i1 false) #19
  br label %190

185:                                              ; preds = %174
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %175, i8* %187, i64 %189) #19
  br label %190

190:                                              ; preds = %185, %182
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 1
  %192 = ptrtoint %"class.std::__1::basic_string"* %191 to i64
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %177, i64 1
  %194 = icmp eq %"class.std::__1::basic_string"* %173, %191
  br i1 %194, label %195, label %174

195:                                              ; preds = %190
  %196 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %197 = icmp eq %"class.std::__1::basic_string"* %196, %1
  br i1 %197, label %208, label %198

198:                                              ; preds = %195, %198
  %199 = phi %"class.std::__1::basic_string"* [ %201, %198 ], [ %169, %195 ]
  %200 = phi %"class.std::__1::basic_string"* [ %202, %198 ], [ %1, %195 ]
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %199, i64 -1
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %200, i64 -1
  %203 = bitcast %"class.std::__1::basic_string"* %201 to i8*
  %204 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #19
  %205 = icmp eq %"class.std::__1::basic_string"* %202, %196
  br i1 %205, label %206, label %198

206:                                              ; preds = %198
  %207 = ptrtoint %"class.std::__1::basic_string"* %201 to i64
  br label %208

208:                                              ; preds = %206, %195
  %209 = phi i64 [ %170, %195 ], [ %207, %206 ]
  %210 = phi %"class.std::__1::basic_string"* [ %169, %195 ], [ %201, %206 ]
  %211 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %212 = icmp eq %"class.std::__1::basic_string"* %211, %1
  br i1 %212, label %213, label %215

213:                                              ; preds = %208
  %214 = ptrtoint %"class.std::__1::basic_string"* %210 to i64
  br label %225

215:                                              ; preds = %208, %215
  %216 = phi %"class.std::__1::basic_string"* [ %221, %215 ], [ %173, %208 ]
  %217 = phi %"class.std::__1::basic_string"* [ %220, %215 ], [ %1, %208 ]
  %218 = bitcast %"class.std::__1::basic_string"* %216 to i8*
  %219 = bitcast %"class.std::__1::basic_string"* %217 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %219, i8 0, i64 24, i1 false) #19
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 1
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %216, i64 1
  %222 = icmp eq %"class.std::__1::basic_string"* %220, %211
  br i1 %222, label %223, label %215

223:                                              ; preds = %215
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  br label %225

225:                                              ; preds = %223, %213
  %226 = phi %"class.std::__1::basic_string"* [ %1, %213 ], [ %224, %223 ]
  %227 = phi %"class.std::__1::basic_string"* [ %173, %213 ], [ %221, %223 ]
  %228 = phi i64 [ %214, %213 ], [ %209, %223 ]
  %229 = ptrtoint %"class.std::__1::basic_string"* %227 to i64
  %230 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  store i64 %228, i64* %137, align 8
  store i64 %229, i64* %22, align 8
  store i64 %172, i64* %14, align 8
  %231 = icmp eq %"class.std::__1::basic_string"* %226, %230
  br i1 %231, label %244, label %232

232:                                              ; preds = %225, %242
  %233 = phi %"class.std::__1::basic_string"* [ %234, %242 ], [ %226, %225 ]
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %233, i64 -1
  %235 = bitcast %"class.std::__1::basic_string"* %234 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = load i8, i8* %236, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  tail call void @_ZdlPv(i8* %241) #21
  br label %242

242:                                              ; preds = %239, %232
  %243 = icmp eq %"class.std::__1::basic_string"* %234, %230
  br i1 %243, label %244, label %232

244:                                              ; preds = %242, %225
  %245 = icmp eq %"class.std::__1::basic_string"* %230, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %244
  %247 = bitcast %"class.std::__1::basic_string"* %230 to i8*
  tail call void @_ZdlPv(i8* %247) #21
  br label %248

248:                                              ; preds = %132, %246, %244, %51, %97, %4
  %249 = phi %"class.std::__1::basic_string"* [ %1, %4 ], [ %1, %97 ], [ %1, %51 ], [ %169, %244 ], [ %169, %246 ], [ %1, %132 ]
  ret %"class.std::__1::basic_string"* %249
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.net::HostPortPair"* @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_(%"class.std::__1::vector.34"*, %"class.net::HostPortPair"*, %"class.net::HostPortPair"*, %"class.net::HostPortPair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.net::HostPortPair"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"class.net::HostPortPair"* %2 to i64
  %8 = ptrtoint %"class.net::HostPortPair"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = ashr exact i64 %9, 5
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %360

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.net::HostPortPair"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %16, align 8
  %18 = ptrtoint %"class.net::HostPortPair"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 5
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.net::HostPortPair"** %16 to i64*
  br i1 %21, label %180, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = ashr exact i64 %24, 5
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %60

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 %25
  %29 = icmp eq %"class.net::HostPortPair"* %28, %3
  br i1 %29, label %55, label %30

30:                                               ; preds = %27, %46
  %31 = phi %"class.net::HostPortPair"* [ %51, %46 ], [ %17, %27 ]
  %32 = phi %"class.net::HostPortPair"* [ %50, %46 ], [ %28, %27 ]
  %33 = bitcast %"class.net::HostPortPair"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.net::HostPortPair"* %31 to i8*
  %39 = bitcast %"class.net::HostPortPair"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #19
  br label %46

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %31, i64 0, i32 0
  %42 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %41, i8* %43, i64 %45) #19
  br label %46

46:                                               ; preds = %40, %37
  %47 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %31, i64 0, i32 1
  %48 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %32, i64 0, i32 1
  %49 = load i16, i16* %48, align 8
  store i16 %49, i16* %47, align 8
  %50 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %32, i64 1
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %31, i64 1
  %52 = icmp eq %"class.net::HostPortPair"* %50, %3
  br i1 %52, label %53, label %30

53:                                               ; preds = %46
  %54 = ptrtoint %"class.net::HostPortPair"* %51 to i64
  br label %55

55:                                               ; preds = %53, %27
  %56 = phi i64 [ %18, %27 ], [ %54, %53 ]
  store i64 %56, i64* %22, align 8
  %57 = icmp sgt i64 %24, 0
  br i1 %57, label %58, label %360

58:                                               ; preds = %55
  %59 = inttoptr i64 %56 to %"class.net::HostPortPair"*
  br label %60

60:                                               ; preds = %58, %23
  %61 = phi i64 [ %56, %58 ], [ %18, %23 ]
  %62 = phi %"class.net::HostPortPair"* [ %59, %58 ], [ %17, %23 ]
  %63 = phi %"class.net::HostPortPair"* [ %28, %58 ], [ %3, %23 ]
  %64 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 %10
  %65 = ptrtoint %"class.net::HostPortPair"* %64 to i64
  %66 = sub i64 %61, %65
  %67 = ashr exact i64 %66, 5
  %68 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 %67
  %69 = icmp ult %"class.net::HostPortPair"* %68, %17
  br i1 %69, label %70, label %95

70:                                               ; preds = %60
  %71 = sub nsw i64 0, %67
  %72 = getelementptr %"class.net::HostPortPair", %"class.net::HostPortPair"* %17, i64 %71, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast i8** %72 to i8*
  %74 = xor i64 %5, -1
  %75 = getelementptr i8, i8* %73, i64 %74
  %76 = ptrtoint i8* %75 to i64
  %77 = and i64 %76, 32
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %87

79:                                               ; preds = %70
  %80 = bitcast %"class.net::HostPortPair"* %62 to i8*
  %81 = bitcast %"class.net::HostPortPair"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #19
  %82 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %62, i64 0, i32 1
  %83 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 %67, i32 1
  %84 = load i16, i16* %83, align 8
  store i16 %84, i16* %82, align 8
  %85 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %68, i64 1
  %86 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %62, i64 1
  br label %87

87:                                               ; preds = %79, %70
  %88 = phi %"class.net::HostPortPair"* [ %62, %70 ], [ %86, %79 ]
  %89 = phi %"class.net::HostPortPair"* [ %68, %70 ], [ %85, %79 ]
  %90 = phi %"class.net::HostPortPair"* [ undef, %70 ], [ %86, %79 ]
  %91 = icmp ult i8* %75, inttoptr (i64 32 to i8*)
  br i1 %91, label %92, label %119

92:                                               ; preds = %119, %87
  %93 = phi %"class.net::HostPortPair"* [ %90, %87 ], [ %135, %119 ]
  %94 = ptrtoint %"class.net::HostPortPair"* %93 to i64
  br label %95

95:                                               ; preds = %92, %60
  %96 = phi i64 [ %94, %92 ], [ %61, %60 ]
  store i64 %96, i64* %22, align 8
  %97 = icmp eq i64 %66, 0
  br i1 %97, label %137, label %98

98:                                               ; preds = %95, %110
  %99 = phi %"class.net::HostPortPair"* [ %102, %110 ], [ %62, %95 ]
  %100 = phi %"class.net::HostPortPair"* [ %101, %110 ], [ %68, %95 ]
  %101 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %100, i64 -1
  %102 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %99, i64 -1
  %103 = bitcast %"class.net::HostPortPair"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %98
  %108 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #21
  br label %110

110:                                              ; preds = %107, %98
  %111 = bitcast %"class.net::HostPortPair"* %102 to i8*
  %112 = bitcast %"class.net::HostPortPair"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false) #19
  %113 = bitcast %"class.net::HostPortPair"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 0, i8* %114, align 1
  store i8 0, i8* %112, align 1
  %115 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %100, i64 -1, i32 1
  %116 = load i16, i16* %115, align 8
  %117 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %99, i64 -1, i32 1
  store i16 %116, i16* %117, align 8
  %118 = icmp eq %"class.net::HostPortPair"* %101, %1
  br i1 %118, label %137, label %98

119:                                              ; preds = %87, %119
  %120 = phi %"class.net::HostPortPair"* [ %135, %119 ], [ %88, %87 ]
  %121 = phi %"class.net::HostPortPair"* [ %134, %119 ], [ %89, %87 ]
  %122 = bitcast %"class.net::HostPortPair"* %120 to i8*
  %123 = bitcast %"class.net::HostPortPair"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 24, i1 false) #19
  %124 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %120, i64 0, i32 1
  %125 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %121, i64 0, i32 1
  %126 = load i16, i16* %125, align 8
  store i16 %126, i16* %124, align 8
  %127 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %121, i64 1
  %128 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %120, i64 1
  %129 = bitcast %"class.net::HostPortPair"* %128 to i8*
  %130 = bitcast %"class.net::HostPortPair"* %127 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 24, i1 false) #19
  %131 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %120, i64 1, i32 1
  %132 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %121, i64 1, i32 1
  %133 = load i16, i16* %132, align 8
  store i16 %133, i16* %131, align 8
  %134 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %121, i64 2
  %135 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %120, i64 2
  %136 = icmp ult %"class.net::HostPortPair"* %134, %17
  br i1 %136, label %119, label %92

137:                                              ; preds = %110, %95
  %138 = icmp eq %"class.net::HostPortPair"* %63, %2
  br i1 %138, label %360, label %139

139:                                              ; preds = %137, %173
  %140 = phi %"class.net::HostPortPair"* [ %178, %173 ], [ %1, %137 ]
  %141 = phi %"class.net::HostPortPair"* [ %177, %173 ], [ %2, %137 ]
  %142 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %140, i64 0, i32 0
  %143 = icmp eq %"class.net::HostPortPair"* %140, %141
  br i1 %143, label %173, label %144

144:                                              ; preds = %139
  %145 = bitcast %"class.net::HostPortPair"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  %149 = bitcast %"class.net::HostPortPair"* %141 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %148, label %163, label %153

153:                                              ; preds = %144
  br i1 %152, label %157, label %154

154:                                              ; preds = %153
  %155 = bitcast %"class.net::HostPortPair"* %140 to i8*
  %156 = bitcast %"class.net::HostPortPair"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 24, i1 false) #19
  br label %173

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %142, i8* %159, i64 %161) #19
  br label %173

163:                                              ; preds = %144
  %164 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.net::HostPortPair"* %141 to i8*
  %169 = zext i8 %151 to i64
  %170 = select i1 %152, i8* %165, i8* %168
  %171 = select i1 %152, i64 %167, i64 %169
  %172 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %142, i8* %170, i64 %171) #19
  br label %173

173:                                              ; preds = %163, %157, %154, %139
  %174 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %141, i64 0, i32 1
  %175 = load i16, i16* %174, align 8
  %176 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %140, i64 0, i32 1
  store i16 %175, i16* %176, align 8
  %177 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %141, i64 1
  %178 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %140, i64 1
  %179 = icmp eq %"class.net::HostPortPair"* %177, %63
  br i1 %179, label %360, label %139

180:                                              ; preds = %12
  %181 = bitcast %"class.std::__1::vector.34"* %0 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = sub i64 %18, %182
  %184 = ashr exact i64 %183, 5
  %185 = add nsw i64 %184, %10
  %186 = icmp ugt i64 %185, 576460752303423487
  br i1 %186, label %187, label %189

187:                                              ; preds = %180
  %188 = bitcast %"class.std::__1::vector.34"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %188) #20
  unreachable

189:                                              ; preds = %180
  %190 = sub i64 %15, %182
  %191 = ashr exact i64 %190, 5
  %192 = icmp ult i64 %191, 288230376151711743
  br i1 %192, label %196, label %193

193:                                              ; preds = %189
  %194 = sub i64 %5, %182
  %195 = ashr exact i64 %194, 5
  br label %206

196:                                              ; preds = %189
  %197 = ashr exact i64 %190, 4
  %198 = icmp ult i64 %197, %185
  %199 = select i1 %198, i64 %185, i64 %197
  %200 = sub i64 %5, %182
  %201 = ashr exact i64 %200, 5
  %202 = icmp eq i64 %199, 0
  br i1 %202, label %212, label %203

203:                                              ; preds = %196
  %204 = icmp ugt i64 %199, 576460752303423487
  br i1 %204, label %205, label %206

205:                                              ; preds = %203
  tail call void @abort() #20
  unreachable

206:                                              ; preds = %193, %203
  %207 = phi i64 [ 576460752303423487, %193 ], [ %199, %203 ]
  %208 = phi i64 [ %195, %193 ], [ %201, %203 ]
  %209 = shl i64 %207, 5
  %210 = tail call i8* @_Znwm(i64 %209) #21
  %211 = bitcast i8* %210 to %"class.net::HostPortPair"*
  br label %212

212:                                              ; preds = %206, %196
  %213 = phi i64 [ %208, %206 ], [ %201, %196 ]
  %214 = phi i64 [ %207, %206 ], [ 0, %196 ]
  %215 = phi %"class.net::HostPortPair"* [ %211, %206 ], [ null, %196 ]
  %216 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %215, i64 %213
  %217 = ptrtoint %"class.net::HostPortPair"* %216 to i64
  %218 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %215, i64 %214
  %219 = ptrtoint %"class.net::HostPortPair"* %218 to i64
  %220 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %216, i64 %10
  br label %221

221:                                              ; preds = %212, %238
  %222 = phi %"class.net::HostPortPair"* [ %242, %238 ], [ %216, %212 ]
  %223 = phi i64 [ %243, %238 ], [ %217, %212 ]
  %224 = phi %"class.net::HostPortPair"* [ %244, %238 ], [ %2, %212 ]
  %225 = bitcast %"class.net::HostPortPair"* %224 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %225, i64 0, i32 1, i32 0
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %232, label %229

229:                                              ; preds = %221
  %230 = inttoptr i64 %223 to i8*
  %231 = bitcast %"class.net::HostPortPair"* %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %231, i64 24, i1 false) #19
  br label %238

232:                                              ; preds = %221
  %233 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %222, i64 0, i32 0
  %234 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %237 = load i64, i64* %236, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %233, i8* %235, i64 %237) #19
  br label %238

238:                                              ; preds = %232, %229
  %239 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %222, i64 0, i32 1
  %240 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %224, i64 0, i32 1
  %241 = load i16, i16* %240, align 8
  store i16 %241, i16* %239, align 8
  %242 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %222, i64 1
  %243 = ptrtoint %"class.net::HostPortPair"* %242 to i64
  %244 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %224, i64 1
  %245 = icmp eq %"class.net::HostPortPair"* %220, %242
  br i1 %245, label %246, label %221

246:                                              ; preds = %238
  %247 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %6, align 8
  %248 = icmp eq %"class.net::HostPortPair"* %247, %1
  br i1 %248, label %290, label %249

249:                                              ; preds = %246
  %250 = ptrtoint %"class.net::HostPortPair"* %247 to i64
  %251 = getelementptr %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = ptrtoint i8** %251 to i64
  %253 = sub i64 %252, %250
  %254 = and i64 %253, 32
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %264

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %216, i64 -1
  %258 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 -1
  %259 = bitcast %"class.net::HostPortPair"* %257 to i8*
  %260 = bitcast %"class.net::HostPortPair"* %258 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %259, i8* align 8 %260, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %260, i8 0, i64 24, i1 false) #19
  %261 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %216, i64 -1, i32 1
  %262 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 -1, i32 1
  %263 = load i16, i16* %262, align 8
  store i16 %263, i16* %261, align 8
  br label %264

264:                                              ; preds = %256, %249
  %265 = phi %"class.net::HostPortPair"* [ undef, %249 ], [ %257, %256 ]
  %266 = phi %"class.net::HostPortPair"* [ %216, %249 ], [ %257, %256 ]
  %267 = phi %"class.net::HostPortPair"* [ %1, %249 ], [ %258, %256 ]
  %268 = icmp ult i64 %253, 32
  br i1 %268, label %287, label %269

269:                                              ; preds = %264, %269
  %270 = phi %"class.net::HostPortPair"* [ %279, %269 ], [ %266, %264 ]
  %271 = phi %"class.net::HostPortPair"* [ %280, %269 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %270, i64 -1
  %273 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %271, i64 -1
  %274 = bitcast %"class.net::HostPortPair"* %272 to i8*
  %275 = bitcast %"class.net::HostPortPair"* %273 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %275, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #19
  %276 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %270, i64 -1, i32 1
  %277 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %271, i64 -1, i32 1
  %278 = load i16, i16* %277, align 8
  store i16 %278, i16* %276, align 8
  %279 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %270, i64 -2
  %280 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %271, i64 -2
  %281 = bitcast %"class.net::HostPortPair"* %279 to i8*
  %282 = bitcast %"class.net::HostPortPair"* %280 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %282, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %282, i8 0, i64 24, i1 false) #19
  %283 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %270, i64 -2, i32 1
  %284 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %271, i64 -2, i32 1
  %285 = load i16, i16* %284, align 8
  store i16 %285, i16* %283, align 8
  %286 = icmp eq %"class.net::HostPortPair"* %280, %247
  br i1 %286, label %287, label %269

287:                                              ; preds = %269, %264
  %288 = phi %"class.net::HostPortPair"* [ %265, %264 ], [ %279, %269 ]
  %289 = ptrtoint %"class.net::HostPortPair"* %288 to i64
  br label %290

290:                                              ; preds = %287, %246
  %291 = phi i64 [ %217, %246 ], [ %289, %287 ]
  %292 = phi %"class.net::HostPortPair"* [ %216, %246 ], [ %288, %287 ]
  %293 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %16, align 8
  %294 = icmp eq %"class.net::HostPortPair"* %293, %1
  br i1 %294, label %314, label %295

295:                                              ; preds = %290
  %296 = getelementptr %"class.net::HostPortPair", %"class.net::HostPortPair"* %293, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = ptrtoint i8** %296 to i64
  %298 = sub i64 %297, %5
  %299 = and i64 %298, 32
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %309

301:                                              ; preds = %295
  %302 = bitcast %"class.net::HostPortPair"* %220 to i8*
  %303 = bitcast %"class.net::HostPortPair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 8 %303, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %303, i8 0, i64 24, i1 false) #19
  %304 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %220, i64 0, i32 1
  %305 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 1
  %306 = load i16, i16* %305, align 8
  store i16 %306, i16* %304, align 8
  %307 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 1
  %308 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %220, i64 1
  br label %309

309:                                              ; preds = %301, %295
  %310 = phi %"class.net::HostPortPair"* [ undef, %295 ], [ %308, %301 ]
  %311 = phi %"class.net::HostPortPair"* [ %220, %295 ], [ %308, %301 ]
  %312 = phi %"class.net::HostPortPair"* [ %1, %295 ], [ %307, %301 ]
  %313 = icmp ult i64 %298, 32
  br i1 %313, label %334, label %316

314:                                              ; preds = %290
  %315 = ptrtoint %"class.net::HostPortPair"* %292 to i64
  br label %337

316:                                              ; preds = %309, %316
  %317 = phi %"class.net::HostPortPair"* [ %332, %316 ], [ %311, %309 ]
  %318 = phi %"class.net::HostPortPair"* [ %331, %316 ], [ %312, %309 ]
  %319 = bitcast %"class.net::HostPortPair"* %317 to i8*
  %320 = bitcast %"class.net::HostPortPair"* %318 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %319, i8* align 8 %320, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %320, i8 0, i64 24, i1 false) #19
  %321 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %317, i64 0, i32 1
  %322 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %318, i64 0, i32 1
  %323 = load i16, i16* %322, align 8
  store i16 %323, i16* %321, align 8
  %324 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %318, i64 1
  %325 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %317, i64 1
  %326 = bitcast %"class.net::HostPortPair"* %325 to i8*
  %327 = bitcast %"class.net::HostPortPair"* %324 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %326, i8* align 8 %327, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %327, i8 0, i64 24, i1 false) #19
  %328 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %317, i64 1, i32 1
  %329 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %318, i64 1, i32 1
  %330 = load i16, i16* %329, align 8
  store i16 %330, i16* %328, align 8
  %331 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %318, i64 2
  %332 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %317, i64 2
  %333 = icmp eq %"class.net::HostPortPair"* %331, %293
  br i1 %333, label %334, label %316

334:                                              ; preds = %316, %309
  %335 = phi %"class.net::HostPortPair"* [ %310, %309 ], [ %332, %316 ]
  %336 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %16, align 8
  br label %337

337:                                              ; preds = %334, %314
  %338 = phi %"class.net::HostPortPair"* [ %1, %314 ], [ %336, %334 ]
  %339 = phi %"class.net::HostPortPair"* [ %220, %314 ], [ %335, %334 ]
  %340 = phi i64 [ %315, %314 ], [ %291, %334 ]
  %341 = ptrtoint %"class.net::HostPortPair"* %339 to i64
  %342 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %6, align 8
  store i64 %340, i64* %181, align 8
  store i64 %341, i64* %22, align 8
  store i64 %219, i64* %14, align 8
  %343 = icmp eq %"class.net::HostPortPair"* %338, %342
  br i1 %343, label %356, label %344

344:                                              ; preds = %337, %354
  %345 = phi %"class.net::HostPortPair"* [ %346, %354 ], [ %338, %337 ]
  %346 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %345, i64 -1
  %347 = bitcast %"class.net::HostPortPair"* %346 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %344
  %352 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %346, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  tail call void @_ZdlPv(i8* %353) #21
  br label %354

354:                                              ; preds = %351, %344
  %355 = icmp eq %"class.net::HostPortPair"* %346, %342
  br i1 %355, label %356, label %344

356:                                              ; preds = %354, %337
  %357 = icmp eq %"class.net::HostPortPair"* %342, null
  br i1 %357, label %360, label %358

358:                                              ; preds = %356
  %359 = bitcast %"class.net::HostPortPair"* %342 to i8*
  tail call void @_ZdlPv(i8* %359) #21
  br label %360

360:                                              ; preds = %173, %358, %356, %55, %137, %4
  %361 = phi %"class.net::HostPortPair"* [ %1, %4 ], [ %1, %137 ], [ %1, %55 ], [ %216, %356 ], [ %216, %358 ], [ %1, %173 ]
  ret %"class.net::HostPortPair"* %361
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6insertINS_14__bit_iteratorIS3_Lb1ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueENS5_IS3_Lb0ELm0EEEE4typeES6_S8_S8_(%"class.std::__1::__bit_iterator.156"* noalias sret, %"class.std::__1::vector.46"*, i64*, i32, i64*, i32, %"class.std::__1::__bit_iterator"* byval(%"class.std::__1::__bit_iterator") align 8) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %9 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %10 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %11 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %12 = alloca %"class.std::__1::vector.46", align 16
  %13 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %14 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %15 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 0
  %17 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = ptrtoint i64* %4 to i64
  %22 = sub i64 %18, %21
  %23 = shl i64 %22, 3
  %24 = zext i32 %20 to i64
  %25 = zext i32 %5 to i64
  %26 = sub nsw i64 %24, %25
  %27 = add i64 %26, %23
  %28 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %0, i64 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %0, i64 0, i32 1
  %30 = bitcast %"class.std::__1::__bit_iterator.156"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 -86, i64 16, i1 false)
  store i64* null, i64** %28, align 8
  store i32 0, i32* %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 2, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = shl i64 %32, 6
  %34 = icmp ult i64 %33, %27
  %35 = inttoptr i64 %18 to i64*
  %36 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %33, %27
  %39 = icmp ugt i64 %37, %38
  %40 = or i1 %34, %39
  br i1 %40, label %144, label %41

41:                                               ; preds = %7
  %42 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 0
  %43 = load i64*, i64** %42, align 8, !noalias !20
  %44 = lshr i64 %37, 6
  %45 = getelementptr inbounds i64, i64* %43, i64 %44
  %46 = trunc i64 %37 to i32
  %47 = and i32 %46, 63
  %48 = add i64 %37, %27
  store i64 %48, i64* %36, align 8
  %49 = lshr i64 %48, 6
  %50 = getelementptr inbounds i64, i64* %43, i64 %49
  %51 = trunc i64 %48 to i32
  %52 = and i32 %51, 63
  %53 = ptrtoint i64* %50 to i64
  %54 = bitcast %"class.std::__1::__bit_iterator.156"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #19
  %55 = bitcast %"class.std::__1::__bit_iterator.156"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55)
  %56 = icmp eq i32 %52, %47
  br i1 %56, label %57, label %122

57:                                               ; preds = %41
  %58 = ptrtoint i64* %45 to i64
  %59 = ptrtoint i64* %2 to i64
  %60 = sub i64 %58, %59
  %61 = shl i64 %60, 3
  %62 = zext i32 %47 to i64
  %63 = zext i32 %3 to i64
  %64 = sub nsw i64 %62, %63
  %65 = add i64 %61, %64
  %66 = icmp sgt i64 %65, 0
  br i1 %66, label %67, label %117

67:                                               ; preds = %57
  %68 = icmp eq i32 %47, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %67
  %70 = icmp slt i64 %65, %62
  %71 = select i1 %70, i64 %65, i64 %62
  %72 = sub nsw i64 %65, %71
  %73 = sub nuw nsw i32 64, %47
  %74 = sub nsw i64 %62, %71
  %75 = shl i64 -1, %74
  %76 = zext i32 %73 to i64
  %77 = lshr i64 -1, %76
  %78 = and i64 %75, %77
  %79 = load i64, i64* %45, align 8, !noalias !25
  %80 = and i64 %79, %78
  %81 = xor i64 %78, -1
  %82 = load i64, i64* %50, align 8, !noalias !30
  %83 = and i64 %82, %81
  %84 = or i64 %83, %80
  store i64 %84, i64* %50, align 8, !noalias !30
  %85 = trunc i64 %71 to i32
  %86 = sub i32 %46, %85
  %87 = and i32 %86, 63
  br label %88

88:                                               ; preds = %67, %69
  %89 = phi i32 [ %87, %69 ], [ 0, %67 ]
  %90 = phi i64 [ %72, %69 ], [ %65, %67 ]
  %91 = sdiv i64 %90, 64
  %92 = sub nsw i64 0, %91
  %93 = getelementptr inbounds i64, i64* %50, i64 %92
  %94 = ptrtoint i64* %93 to i64
  %95 = getelementptr inbounds i64, i64* %45, i64 %92
  %96 = bitcast i64* %93 to i8*
  %97 = bitcast i64* %95 to i8*
  %98 = shl nsw i64 %91, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 %98, i1 false) #19, !noalias !30
  %99 = shl nsw i64 %91, 6
  %100 = sub nsw i64 %90, %99
  %101 = icmp sgt i64 %100, 0
  br i1 %101, label %102, label %117

102:                                              ; preds = %88
  %103 = sub nsw i64 64, %100
  %104 = shl i64 -1, %103
  %105 = getelementptr inbounds i64, i64* %95, i64 -1
  %106 = load i64, i64* %105, align 8, !noalias !25
  %107 = and i64 %106, %104
  %108 = xor i64 %104, -1
  %109 = getelementptr inbounds i64, i64* %93, i64 -1
  %110 = ptrtoint i64* %109 to i64
  %111 = load i64, i64* %109, align 8, !noalias !30
  %112 = and i64 %111, %108
  %113 = or i64 %112, %107
  store i64 %113, i64* %109, align 8, !noalias !30
  %114 = trunc i64 %100 to i32
  %115 = sub i32 0, %114
  %116 = and i32 %115, 63
  br label %117

117:                                              ; preds = %102, %88, %57
  %118 = phi i32 [ %116, %102 ], [ %89, %88 ], [ %47, %57 ]
  %119 = phi i64 [ %110, %102 ], [ %94, %88 ], [ %53, %57 ]
  %120 = bitcast %"class.std::__1::__bit_iterator.156"* %11 to i64*
  store i64 %119, i64* %120, align 8, !alias.scope !25
  %121 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %11, i64 0, i32 1
  store i32 %118, i32* %121, align 8, !alias.scope !25
  br label %127

122:                                              ; preds = %41
  %123 = bitcast %"class.std::__1::__bit_iterator.156"* %8 to i64*
  store i64 %53, i64* %123, align 8, !noalias !31
  %124 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %8, i64 0, i32 1
  store i32 %52, i32* %124, align 8, !noalias !31
  call void @_ZNSt3__125__copy_backward_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator.156"* nonnull sret %11, i64* %2, i32 %3, i64* %45, i32 %47, %"class.std::__1::__bit_iterator.156"* nonnull %8) #19
  %125 = ptrtoint i64* %2 to i64
  %126 = zext i32 %3 to i64
  br label %127

127:                                              ; preds = %117, %122
  %128 = phi i64 [ %63, %117 ], [ %126, %122 ]
  %129 = phi i64 [ %59, %117 ], [ %125, %122 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #19
  %130 = bitcast %"class.std::__1::vector.46"* %1 to i64*
  %131 = load i64, i64* %130, align 8, !noalias !32
  %132 = sub i64 %129, %131
  %133 = shl i64 %132, 3
  %134 = add nsw i64 %133, %128
  %135 = icmp sgt i64 %134, -1
  %136 = inttoptr i64 %131 to i64*
  %137 = add i64 %134, -63
  %138 = select i1 %135, i64 %134, i64 %137
  %139 = sdiv i64 %138, 64
  %140 = getelementptr inbounds i64, i64* %136, i64 %139
  %141 = trunc i64 %134 to i32
  %142 = and i32 %141, 63
  store i64* %140, i64** %28, align 8
  store i32 %142, i32* %29, align 8
  %143 = ptrtoint i64* %140 to i64
  br label %306

144:                                              ; preds = %7
  %145 = bitcast %"class.std::__1::vector.46"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #19
  %146 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %12, i64 0, i32 0
  %147 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %12, i64 0, i32 1
  %148 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %12, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %145, i8 0, i64 24, i1 false) #19
  %149 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 1
  %150 = add i64 %37, %27
  %151 = icmp slt i64 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %144
  %153 = bitcast %"class.std::__1::vector.46"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %153) #20
  unreachable

154:                                              ; preds = %144
  %155 = icmp ult i64 %33, 4611686018427387903
  br i1 %155, label %156, label %162

156:                                              ; preds = %154
  %157 = shl i64 %32, 7
  %158 = add nuw i64 %150, 63
  %159 = and i64 %158, -64
  %160 = icmp ult i64 %157, %159
  %161 = select i1 %160, i64 %159, i64 %157
  br label %162

162:                                              ; preds = %156, %154
  %163 = phi i64 [ %161, %156 ], [ 9223372036854775807, %154 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.46"* nonnull %12, i64 %163)
  %164 = load i64, i64* %149, align 8
  %165 = add i64 %164, %27
  store i64 %165, i64* %147, align 8
  %166 = bitcast %"class.std::__1::__bit_iterator.156"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166) #19
  %167 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = bitcast %"class.std::__1::vector.46"* %12 to i64*
  %170 = load i64, i64* %169, align 16, !noalias !35
  %171 = ptrtoint i64* %168 to i64
  %172 = ptrtoint i64* %2 to i64
  %173 = sub i64 %172, %171
  %174 = shl i64 %173, 3
  %175 = zext i32 %3 to i64
  %176 = add i64 %174, %175
  %177 = icmp sgt i64 %176, 0
  br i1 %177, label %178, label %199

178:                                              ; preds = %162
  %179 = inttoptr i64 %170 to i8*
  %180 = lshr i64 %176, 6
  %181 = bitcast i64* %168 to i8*
  %182 = shl nuw nsw i64 %180, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %181, i64 %182, i1 false) #19, !noalias !40
  %183 = and i64 %176, 63
  %184 = inttoptr i64 %170 to i64*
  %185 = getelementptr inbounds i64, i64* %184, i64 %180
  %186 = ptrtoint i64* %185 to i64
  %187 = icmp eq i64 %183, 0
  br i1 %187, label %199, label %188

188:                                              ; preds = %178
  %189 = getelementptr inbounds i64, i64* %168, i64 %180
  %190 = sub nuw nsw i64 64, %183
  %191 = lshr i64 -1, %190
  %192 = load i64, i64* %189, align 8, !noalias !43
  %193 = and i64 %192, %191
  %194 = xor i64 %191, -1
  %195 = load i64, i64* %185, align 8, !noalias !40
  %196 = and i64 %195, %194
  %197 = or i64 %196, %193
  store i64 %197, i64* %185, align 8, !noalias !40
  %198 = trunc i64 %183 to i32
  br label %199

199:                                              ; preds = %178, %162, %188
  %200 = phi i32 [ %198, %188 ], [ 0, %178 ], [ 0, %162 ]
  %201 = phi i64 [ %186, %188 ], [ %186, %178 ], [ %170, %162 ]
  %202 = bitcast %"class.std::__1::__bit_iterator.156"* %13 to i64*
  store i64 %201, i64* %202, align 8, !alias.scope !43
  %203 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %13, i64 0, i32 1
  store i32 %200, i32* %203, align 8, !alias.scope !43
  %204 = bitcast %"class.std::__1::__bit_iterator.156"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* nonnull align 8 %166, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166) #19
  %205 = load i64, i64* %149, align 8
  %206 = load i64*, i64** %167, align 8
  %207 = lshr i64 %205, 6
  %208 = getelementptr inbounds i64, i64* %206, i64 %207
  %209 = trunc i64 %205 to i32
  %210 = and i32 %209, 63
  %211 = load i64, i64* %147, align 8, !noalias !46
  %212 = load i64*, i64** %146, align 16, !noalias !49
  %213 = lshr i64 %211, 6
  %214 = getelementptr inbounds i64, i64* %212, i64 %213
  %215 = trunc i64 %211 to i32
  %216 = and i32 %215, 63
  %217 = ptrtoint i64* %214 to i64
  %218 = bitcast %"class.std::__1::__bit_iterator.156"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %218) #19
  %219 = bitcast %"class.std::__1::__bit_iterator.156"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %219)
  %220 = icmp eq i32 %216, %210
  br i1 %220, label %221, label %284

221:                                              ; preds = %199
  %222 = ptrtoint i64* %208 to i64
  %223 = sub i64 %222, %172
  %224 = shl i64 %223, 3
  %225 = zext i32 %210 to i64
  %226 = sub nsw i64 %225, %175
  %227 = add i64 %224, %226
  %228 = icmp sgt i64 %227, 0
  br i1 %228, label %229, label %279

229:                                              ; preds = %221
  %230 = icmp eq i32 %210, 0
  br i1 %230, label %250, label %231

231:                                              ; preds = %229
  %232 = icmp slt i64 %227, %225
  %233 = select i1 %232, i64 %227, i64 %225
  %234 = sub nsw i64 %227, %233
  %235 = sub nuw nsw i32 64, %210
  %236 = sub nsw i64 %225, %233
  %237 = shl i64 -1, %236
  %238 = zext i32 %235 to i64
  %239 = lshr i64 -1, %238
  %240 = and i64 %237, %239
  %241 = load i64, i64* %208, align 8, !noalias !52
  %242 = and i64 %241, %240
  %243 = xor i64 %240, -1
  %244 = load i64, i64* %214, align 8, !noalias !57
  %245 = and i64 %244, %243
  %246 = or i64 %245, %242
  store i64 %246, i64* %214, align 8, !noalias !57
  %247 = trunc i64 %233 to i32
  %248 = sub i32 %209, %247
  %249 = and i32 %248, 63
  br label %250

250:                                              ; preds = %229, %231
  %251 = phi i32 [ %249, %231 ], [ 0, %229 ]
  %252 = phi i64 [ %234, %231 ], [ %227, %229 ]
  %253 = sdiv i64 %252, 64
  %254 = sub nsw i64 0, %253
  %255 = getelementptr inbounds i64, i64* %214, i64 %254
  %256 = ptrtoint i64* %255 to i64
  %257 = getelementptr inbounds i64, i64* %208, i64 %254
  %258 = bitcast i64* %255 to i8*
  %259 = bitcast i64* %257 to i8*
  %260 = shl nsw i64 %253, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %259, i64 %260, i1 false) #19, !noalias !57
  %261 = shl nsw i64 %253, 6
  %262 = sub nsw i64 %252, %261
  %263 = icmp sgt i64 %262, 0
  br i1 %263, label %264, label %279

264:                                              ; preds = %250
  %265 = sub nsw i64 64, %262
  %266 = shl i64 -1, %265
  %267 = getelementptr inbounds i64, i64* %257, i64 -1
  %268 = load i64, i64* %267, align 8, !noalias !52
  %269 = and i64 %268, %266
  %270 = xor i64 %266, -1
  %271 = getelementptr inbounds i64, i64* %255, i64 -1
  %272 = ptrtoint i64* %271 to i64
  %273 = load i64, i64* %271, align 8, !noalias !57
  %274 = and i64 %273, %270
  %275 = or i64 %274, %269
  store i64 %275, i64* %271, align 8, !noalias !57
  %276 = trunc i64 %262 to i32
  %277 = sub i32 0, %276
  %278 = and i32 %277, 63
  br label %279

279:                                              ; preds = %264, %250, %221
  %280 = phi i32 [ %278, %264 ], [ %251, %250 ], [ %210, %221 ]
  %281 = phi i64 [ %272, %264 ], [ %256, %250 ], [ %217, %221 ]
  %282 = bitcast %"class.std::__1::__bit_iterator.156"* %14 to i64*
  store i64 %281, i64* %282, align 8, !alias.scope !52
  %283 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %14, i64 0, i32 1
  store i32 %280, i32* %283, align 8, !alias.scope !52
  br label %287

284:                                              ; preds = %199
  %285 = bitcast %"class.std::__1::__bit_iterator.156"* %9 to i64*
  store i64 %217, i64* %285, align 8, !noalias !58
  %286 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %9, i64 0, i32 1
  store i32 %216, i32* %286, align 8, !noalias !58
  call void @_ZNSt3__125__copy_backward_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator.156"* nonnull sret %14, i64* %2, i32 %3, i64* %208, i32 %210, %"class.std::__1::__bit_iterator.156"* nonnull %9) #19
  br label %287

287:                                              ; preds = %279, %284
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %219)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %218) #19
  %288 = bitcast %"class.std::__1::vector.46"* %12 to <2 x i64>*
  %289 = load <2 x i64>, <2 x i64>* %288, align 16
  %290 = bitcast %"class.std::__1::vector.46"* %1 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8
  %292 = bitcast %"class.std::__1::vector.46"* %1 to <2 x i64>*
  store <2 x i64> %289, <2 x i64>* %292, align 8
  %293 = bitcast %"class.std::__1::vector.46"* %12 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %293, align 16
  %294 = load i64, i64* %31, align 8
  %295 = load i64, i64* %148, align 16
  store i64 %295, i64* %31, align 8
  store i64 %294, i64* %148, align 16
  %296 = extractelement <2 x i64> %291, i32 0
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %287
  %299 = inttoptr i64 %296 to i8*
  call void @_ZdlPv(i8* %299) #21
  br label %300

300:                                              ; preds = %287, %298
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #19
  %301 = load i64*, i64** %16, align 8
  %302 = load i32, i32* %19, align 8
  %303 = bitcast %"class.std::__1::__bit_iterator.156"* %0 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = load i32, i32* %29, align 8
  br label %306

306:                                              ; preds = %300, %127
  %307 = phi i32 [ %305, %300 ], [ %142, %127 ]
  %308 = phi i64 [ %304, %300 ], [ %143, %127 ]
  %309 = phi i32 [ %302, %300 ], [ %20, %127 ]
  %310 = phi i64* [ %301, %300 ], [ %35, %127 ]
  %311 = inttoptr i64 %308 to i64*
  %312 = bitcast %"class.std::__1::__bit_iterator.156"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %312) #19
  %313 = bitcast %"class.std::__1::__bit_iterator.156"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313)
  %314 = icmp eq i32 %307, %5
  br i1 %314, label %315, label %381

315:                                              ; preds = %306
  %316 = ptrtoint i64* %310 to i64
  %317 = sub i64 %316, %21
  %318 = shl i64 %317, 3
  %319 = zext i32 %309 to i64
  %320 = sub nsw i64 %319, %25
  %321 = add i64 %320, %318
  %322 = icmp sgt i64 %321, 0
  br i1 %322, label %323, label %376

323:                                              ; preds = %315
  %324 = icmp eq i32 %5, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %323
  %326 = inttoptr i64 %308 to i8*
  br label %351

327:                                              ; preds = %323
  %328 = sub i32 64, %5
  %329 = zext i32 %328 to i64
  %330 = icmp slt i64 %321, %329
  %331 = select i1 %330, i64 %321, i64 %329
  %332 = sub nsw i64 %321, %331
  %333 = shl i64 -1, %25
  %334 = sub nsw i64 %329, %331
  %335 = lshr i64 -1, %334
  %336 = and i64 %335, %333
  %337 = load i64, i64* %4, align 8, !noalias !59
  %338 = and i64 %337, %336
  %339 = xor i64 %336, -1
  %340 = inttoptr i64 %308 to i64*
  %341 = load i64, i64* %340, align 8, !noalias !64
  %342 = and i64 %341, %339
  %343 = or i64 %342, %338
  store i64 %343, i64* %340, align 8, !noalias !64
  %344 = add nuw nsw i64 %331, %25
  %345 = sdiv i64 %344, 64
  %346 = getelementptr inbounds i64, i64* %340, i64 %345
  %347 = srem i64 %344, 64
  %348 = trunc i64 %347 to i32
  %349 = getelementptr inbounds i64, i64* %4, i64 1
  %350 = bitcast i64* %346 to i8*
  br label %351

351:                                              ; preds = %327, %325
  %352 = phi i32 [ 0, %325 ], [ %348, %327 ]
  %353 = phi i64* [ %311, %325 ], [ %346, %327 ]
  %354 = phi i8* [ %326, %325 ], [ %350, %327 ]
  %355 = phi i64 [ %321, %325 ], [ %332, %327 ]
  %356 = phi i64* [ %4, %325 ], [ %349, %327 ]
  %357 = sdiv i64 %355, 64
  %358 = bitcast i64* %356 to i8*
  %359 = shl nsw i64 %357, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %354, i8* align 8 %358, i64 %359, i1 false) #19, !noalias !64
  %360 = shl nsw i64 %357, 6
  %361 = sub i64 %355, %360
  %362 = getelementptr inbounds i64, i64* %353, i64 %357
  %363 = ptrtoint i64* %362 to i64
  %364 = icmp sgt i64 %361, 0
  br i1 %364, label %365, label %376

365:                                              ; preds = %351
  %366 = getelementptr inbounds i64, i64* %356, i64 %357
  %367 = sub nsw i64 64, %361
  %368 = lshr i64 -1, %367
  %369 = load i64, i64* %366, align 8, !noalias !59
  %370 = and i64 %369, %368
  %371 = xor i64 %368, -1
  %372 = load i64, i64* %362, align 8, !noalias !64
  %373 = and i64 %372, %371
  %374 = or i64 %373, %370
  store i64 %374, i64* %362, align 8, !noalias !64
  %375 = trunc i64 %361 to i32
  br label %376

376:                                              ; preds = %365, %351, %315
  %377 = phi i32 [ %375, %365 ], [ %352, %351 ], [ %5, %315 ]
  %378 = phi i64 [ %363, %365 ], [ %363, %351 ], [ %308, %315 ]
  %379 = bitcast %"class.std::__1::__bit_iterator.156"* %15 to i64*
  store i64 %378, i64* %379, align 8, !alias.scope !59
  %380 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %15, i64 0, i32 1
  store i32 %377, i32* %380, align 8, !alias.scope !59
  br label %384

381:                                              ; preds = %306
  %382 = bitcast %"class.std::__1::__bit_iterator.156"* %10 to i64*
  store i64 %308, i64* %382, align 8, !noalias !65
  %383 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %10, i64 0, i32 1
  store i32 %307, i32* %383, align 8, !noalias !65
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator.156"* nonnull sret %15, i64* %4, i32 %5, i64* %310, i32 %309, %"class.std::__1::__bit_iterator.156"* nonnull %10) #19
  br label %384

384:                                              ; preds = %376, %381
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %312) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.46"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.46", align 16
  %4 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.46"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #19
  %12 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #19
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.46"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #20
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #21
  %23 = bitcast %"class.std::__1::vector.46"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector.46"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !66
  %26 = bitcast %"class.std::__1::__bit_iterator.156"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !66
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !66
  %28 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !71
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !74
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !74
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.46"* nonnull %3, %"class.std::__1::__bit_iterator.156"* nonnull %4, %"class.std::__1::__bit_iterator.156"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.46"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.46"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.46"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #21
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #19
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__copy_backward_unalignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator.156"* noalias sret, i64*, i32, i64*, i32, %"class.std::__1::__bit_iterator.156"*) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i64* %1 to i64
  %8 = ptrtoint i64* %3 to i64
  %9 = sub i64 %8, %7
  %10 = shl i64 %9, 3
  %11 = zext i32 %4 to i64
  %12 = zext i32 %2 to i64
  %13 = sub nsw i64 %11, %12
  %14 = add i64 %13, %10
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %16, label %184

16:                                               ; preds = %6
  %17 = icmp eq i32 %4, 0
  br i1 %17, label %90, label %18

18:                                               ; preds = %16
  %19 = icmp slt i64 %14, %11
  %20 = select i1 %19, i64 %14, i64 %11
  %21 = sub nsw i64 %14, %20
  %22 = sub i32 64, %4
  %23 = sub nsw i64 %11, %20
  %24 = shl i64 -1, %23
  %25 = zext i32 %22 to i64
  %26 = lshr i64 -1, %25
  %27 = and i64 %24, %26
  %28 = load i64, i64* %3, align 8
  %29 = and i64 %27, %28
  %30 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = icmp sgt i64 %20, %32
  %34 = select i1 %33, i64 %32, i64 %20
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %65, label %36

36:                                               ; preds = %18
  %37 = sub i32 64, %31
  %38 = sub nsw i64 %32, %34
  %39 = shl i64 -1, %38
  %40 = zext i32 %37 to i64
  %41 = lshr i64 -1, %40
  %42 = and i64 %39, %41
  %43 = xor i64 %42, -1
  %44 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, %43
  store i64 %47, i64* %45, align 8
  %48 = load i32, i32* %30, align 8
  %49 = icmp ugt i32 %48, %4
  %50 = sub i32 %4, %48
  %51 = zext i32 %50 to i64
  %52 = lshr i64 %29, %51
  %53 = sub i32 %48, %4
  %54 = zext i32 %53 to i64
  %55 = shl i64 %29, %54
  %56 = select i1 %49, i64 %55, i64 %52
  %57 = load i64*, i64** %44, align 8
  %58 = load i64, i64* %57, align 8
  %59 = or i64 %58, %56
  store i64 %59, i64* %57, align 8
  %60 = load i32, i32* %30, align 8
  %61 = trunc i64 %34 to i32
  %62 = sub i32 %60, %61
  %63 = and i32 %62, 63
  store i32 %63, i32* %30, align 8
  %64 = sub nsw i64 %20, %34
  br label %65

65:                                               ; preds = %18, %36
  %66 = phi i64 [ %20, %18 ], [ %64, %36 ]
  %67 = icmp sgt i64 %66, 0
  br i1 %67, label %68, label %90

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 -1
  store i64* %71, i64** %69, align 8
  %72 = trunc i64 %66 to i32
  %73 = sub i32 0, %72
  %74 = and i32 %73, 63
  store i32 %74, i32* %30, align 8
  %75 = zext i32 %74 to i64
  %76 = shl i64 -1, %75
  %77 = xor i64 %76, -1
  %78 = load i64, i64* %71, align 8
  %79 = and i64 %78, %77
  store i64 %79, i64* %71, align 8
  %80 = add nuw nsw i64 %66, %34
  %81 = trunc i64 %80 to i32
  %82 = load i32, i32* %30, align 8
  %83 = sub i32 %81, %4
  %84 = add i32 %83, %82
  %85 = zext i32 %84 to i64
  %86 = shl i64 %29, %85
  %87 = load i64*, i64** %69, align 8
  %88 = load i64, i64* %87, align 8
  %89 = or i64 %86, %88
  store i64 %89, i64* %87, align 8
  br label %90

90:                                               ; preds = %65, %68, %16
  %91 = phi i64 [ %14, %16 ], [ %21, %68 ], [ %21, %65 ]
  %92 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = sub i32 64, %93
  %95 = zext i32 %94 to i64
  %96 = lshr i64 -1, %95
  %97 = icmp sgt i64 %91, 63
  br i1 %97, label %98, label %127

98:                                               ; preds = %90
  %99 = xor i64 %96, -1
  %100 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 0
  br label %101

101:                                              ; preds = %98, %101
  %102 = phi i64* [ %3, %98 ], [ %104, %101 ]
  %103 = phi i64 [ %91, %98 ], [ %123, %101 ]
  %104 = getelementptr inbounds i64, i64* %102, i64 -1
  %105 = load i64, i64* %104, align 8
  %106 = load i64*, i64** %100, align 8
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, %99
  store i64 %108, i64* %106, align 8
  %109 = lshr i64 %105, %95
  %110 = load i64*, i64** %100, align 8
  %111 = load i64, i64* %110, align 8
  %112 = or i64 %111, %109
  store i64 %112, i64* %110, align 8
  %113 = load i64*, i64** %100, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 -1
  store i64* %114, i64** %100, align 8
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, %96
  store i64 %116, i64* %114, align 8
  %117 = load i32, i32* %92, align 8
  %118 = zext i32 %117 to i64
  %119 = shl i64 %105, %118
  %120 = load i64*, i64** %100, align 8
  %121 = load i64, i64* %120, align 8
  %122 = or i64 %121, %119
  store i64 %122, i64* %120, align 8
  %123 = add nsw i64 %103, -64
  %124 = icmp sgt i64 %123, 63
  br i1 %124, label %101, label %125

125:                                              ; preds = %101
  %126 = and i64 %91, 63
  br label %127

127:                                              ; preds = %125, %90
  %128 = phi i64 [ %126, %125 ], [ %91, %90 ]
  %129 = phi i64* [ %104, %125 ], [ %3, %90 ]
  %130 = icmp sgt i64 %128, 0
  br i1 %130, label %131, label %184

131:                                              ; preds = %127
  %132 = sub nuw nsw i64 64, %128
  %133 = shl i64 -1, %132
  %134 = getelementptr inbounds i64, i64* %129, i64 -1
  %135 = load i64, i64* %134, align 8
  %136 = and i64 %135, %133
  %137 = load i32, i32* %92, align 8
  %138 = sub i32 64, %137
  %139 = zext i32 %137 to i64
  %140 = icmp sgt i64 %128, %139
  %141 = select i1 %140, i64 %139, i64 %128
  %142 = sub nsw i64 %139, %141
  %143 = shl i64 -1, %142
  %144 = zext i32 %138 to i64
  %145 = lshr i64 -1, %144
  %146 = and i64 %143, %145
  %147 = xor i64 %146, -1
  %148 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = load i64, i64* %149, align 8
  %151 = and i64 %150, %147
  store i64 %151, i64* %149, align 8
  %152 = load i32, i32* %92, align 8
  %153 = sub i32 64, %152
  %154 = zext i32 %153 to i64
  %155 = lshr i64 %136, %154
  %156 = load i64*, i64** %148, align 8
  %157 = load i64, i64* %156, align 8
  %158 = or i64 %155, %157
  store i64 %158, i64* %156, align 8
  %159 = load i32, i32* %92, align 8
  %160 = trunc i64 %141 to i32
  %161 = sub i32 %159, %160
  %162 = and i32 %161, 63
  store i32 %162, i32* %92, align 8
  %163 = sub nsw i64 %128, %141
  %164 = icmp sgt i64 %163, 0
  br i1 %164, label %165, label %184

165:                                              ; preds = %131
  %166 = load i64*, i64** %148, align 8
  %167 = getelementptr inbounds i64, i64* %166, i64 -1
  store i64* %167, i64** %148, align 8
  %168 = trunc i64 %163 to i32
  %169 = sub nsw i32 0, %168
  %170 = and i32 %169, 63
  store i32 %170, i32* %92, align 8
  %171 = zext i32 %170 to i64
  %172 = shl i64 -1, %171
  %173 = xor i64 %172, -1
  %174 = load i64, i64* %167, align 8
  %175 = and i64 %174, %173
  store i64 %175, i64* %167, align 8
  %176 = load i32, i32* %92, align 8
  %177 = zext i32 %176 to i64
  %178 = add nuw nsw i64 %128, -64
  %179 = add nsw i64 %178, %177
  %180 = shl i64 %136, %179
  %181 = load i64*, i64** %148, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %180, %182
  store i64 %183, i64* %181, align 8
  br label %184

184:                                              ; preds = %127, %165, %131, %6
  %185 = bitcast %"class.std::__1::__bit_iterator.156"* %5 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.std::__1::__bit_iterator.156"* %0 to i64*
  store i64 %186, i64* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %0, i64 0, i32 1
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 1
  %190 = load i32, i32* %189, align 8
  store i32 %190, i32* %188, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.46"*, %"class.std::__1::__bit_iterator.156"*, %"class.std::__1::__bit_iterator.156"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %5 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %6 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %7 = alloca %"class.std::__1::__bit_iterator.156", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator.156"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator.156"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !77
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator.156"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #19
  %52 = bitcast %"class.std::__1::__bit_iterator.156"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator.156"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator.156"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !80
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !80
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !80
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #19, !noalias !80
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !80
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !80
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !80
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator.156"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !83
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !83
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator.156"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !86
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !86
  %126 = bitcast %"class.std::__1::__bit_iterator.156"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !86
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !86
  %128 = bitcast %"class.std::__1::__bit_iterator.156"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !86
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !86
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator.156"* nonnull sret %7, %"class.std::__1::__bit_iterator.156"* nonnull %4, %"class.std::__1::__bit_iterator.156"* nonnull %5, %"class.std::__1::__bit_iterator.156"* nonnull %6) #19
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator.156"* noalias sret, %"class.std::__1::__bit_iterator.156"*, %"class.std::__1::__bit_iterator.156"*, %"class.std::__1::__bit_iterator.156"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator.156"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator.156"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator.156"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator.156"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator.156", %"class.std::__1::__bit_iterator.156"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.34"*, %"class.net::HostPortPair"* dereferenceable(32)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::HostPortPair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.34"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.34"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::HostPortPair"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #21
  %33 = bitcast i8* %32 to %"class.net::HostPortPair"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.net::HostPortPair"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %36, i64 %9
  %38 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %36, i64 %35
  %39 = ptrtoint %"class.net::HostPortPair"* %38 to i64
  %40 = bitcast %"class.net::HostPortPair"* %37 to i8*
  %41 = bitcast %"class.net::HostPortPair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #19
  %42 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 1
  %44 = load i16, i16* %43, align 8
  store i16 %44, i16* %42, align 8
  %45 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 1
  %46 = ptrtoint %"class.net::HostPortPair"* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 0
  %48 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %47, align 8
  %49 = ptrtoint %"class.net::HostPortPair"* %48 to i64
  %50 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %3, align 8
  %51 = icmp eq %"class.net::HostPortPair"* %50, %48
  br i1 %51, label %93, label %52

52:                                               ; preds = %34
  %53 = getelementptr %"class.net::HostPortPair", %"class.net::HostPortPair"* %50, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = ptrtoint i8** %53 to i64
  %55 = sub i64 %54, %49
  %56 = and i64 %55, 32
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 -1
  %60 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %50, i64 -1
  %61 = bitcast %"class.net::HostPortPair"* %59 to i8*
  %62 = bitcast %"class.net::HostPortPair"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #19
  %63 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 -1, i32 1
  %64 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %50, i64 -1, i32 1
  %65 = load i16, i16* %64, align 8
  store i16 %65, i16* %63, align 8
  br label %66

66:                                               ; preds = %58, %52
  %67 = phi %"class.net::HostPortPair"* [ undef, %52 ], [ %59, %58 ]
  %68 = phi %"class.net::HostPortPair"* [ %37, %52 ], [ %59, %58 ]
  %69 = phi %"class.net::HostPortPair"* [ %50, %52 ], [ %60, %58 ]
  %70 = icmp ult i64 %55, 32
  br i1 %70, label %89, label %71

71:                                               ; preds = %66, %71
  %72 = phi %"class.net::HostPortPair"* [ %81, %71 ], [ %68, %66 ]
  %73 = phi %"class.net::HostPortPair"* [ %82, %71 ], [ %69, %66 ]
  %74 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %72, i64 -1
  %75 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %73, i64 -1
  %76 = bitcast %"class.net::HostPortPair"* %74 to i8*
  %77 = bitcast %"class.net::HostPortPair"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #19
  %78 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %72, i64 -1, i32 1
  %79 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %73, i64 -1, i32 1
  %80 = load i16, i16* %79, align 8
  store i16 %80, i16* %78, align 8
  %81 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %72, i64 -2
  %82 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %73, i64 -2
  %83 = bitcast %"class.net::HostPortPair"* %81 to i8*
  %84 = bitcast %"class.net::HostPortPair"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #19
  %85 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %72, i64 -2, i32 1
  %86 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %73, i64 -2, i32 1
  %87 = load i16, i16* %86, align 8
  store i16 %87, i16* %85, align 8
  %88 = icmp eq %"class.net::HostPortPair"* %82, %48
  br i1 %88, label %89, label %71

89:                                               ; preds = %71, %66
  %90 = phi %"class.net::HostPortPair"* [ %67, %66 ], [ %81, %71 ]
  %91 = load i64, i64* %6, align 8
  %92 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %3, align 8
  br label %93

93:                                               ; preds = %34, %89
  %94 = phi %"class.net::HostPortPair"* [ %92, %89 ], [ %48, %34 ]
  %95 = phi %"class.net::HostPortPair"* [ %90, %89 ], [ %37, %34 ]
  %96 = phi i64 [ %91, %89 ], [ %49, %34 ]
  %97 = ptrtoint %"class.net::HostPortPair"* %95 to i64
  store i64 %97, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %98 = inttoptr i64 %96 to %"class.net::HostPortPair"*
  %99 = icmp eq %"class.net::HostPortPair"* %94, %98
  br i1 %99, label %112, label %100

100:                                              ; preds = %93, %110
  %101 = phi %"class.net::HostPortPair"* [ %102, %110 ], [ %94, %93 ]
  %102 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %101, i64 -1
  %103 = bitcast %"class.net::HostPortPair"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #21
  br label %110

110:                                              ; preds = %107, %100
  %111 = icmp eq %"class.net::HostPortPair"* %102, %98
  br i1 %111, label %112, label %100

112:                                              ; preds = %110, %93
  %113 = icmp eq i64 %96, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %96 to i8*
  tail call void @_ZdlPv(i8* %115) #21
  br label %116

116:                                              ; preds = %112, %114
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net12HostPortPairENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.34"*, %"class.net::HostPortPair"* dereferenceable(32)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::HostPortPair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.34"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.34"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::HostPortPair"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #21
  %33 = bitcast i8* %32 to %"class.net::HostPortPair"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.net::HostPortPair"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %36, i64 %9
  %38 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %36, i64 %35
  %39 = ptrtoint %"class.net::HostPortPair"* %38 to i64
  %40 = bitcast %"class.net::HostPortPair"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = bitcast %"class.net::HostPortPair"* %37 to i8*
  %46 = bitcast %"class.net::HostPortPair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #19
  br label %53

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 0, i32 0
  %49 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %48, i8* %50, i64 %52) #19
  br label %53

53:                                               ; preds = %44, %47
  %54 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %36, i64 %9, i32 1
  %55 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 1
  %56 = load i16, i16* %55, align 8
  store i16 %56, i16* %54, align 8
  %57 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 1
  %58 = ptrtoint %"class.net::HostPortPair"* %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 0
  %60 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %59, align 8
  %61 = ptrtoint %"class.net::HostPortPair"* %60 to i64
  %62 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %3, align 8
  %63 = icmp eq %"class.net::HostPortPair"* %62, %60
  br i1 %63, label %105, label %64

64:                                               ; preds = %53
  %65 = getelementptr %"class.net::HostPortPair", %"class.net::HostPortPair"* %62, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = ptrtoint i8** %65 to i64
  %67 = sub i64 %66, %61
  %68 = and i64 %67, 32
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %78

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 -1
  %72 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %62, i64 -1
  %73 = bitcast %"class.net::HostPortPair"* %71 to i8*
  %74 = bitcast %"class.net::HostPortPair"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #19
  %75 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %37, i64 -1, i32 1
  %76 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %62, i64 -1, i32 1
  %77 = load i16, i16* %76, align 8
  store i16 %77, i16* %75, align 8
  br label %78

78:                                               ; preds = %70, %64
  %79 = phi %"class.net::HostPortPair"* [ undef, %64 ], [ %71, %70 ]
  %80 = phi %"class.net::HostPortPair"* [ %37, %64 ], [ %71, %70 ]
  %81 = phi %"class.net::HostPortPair"* [ %62, %64 ], [ %72, %70 ]
  %82 = icmp ult i64 %67, 32
  br i1 %82, label %101, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"class.net::HostPortPair"* [ %93, %83 ], [ %80, %78 ]
  %85 = phi %"class.net::HostPortPair"* [ %94, %83 ], [ %81, %78 ]
  %86 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %84, i64 -1
  %87 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %85, i64 -1
  %88 = bitcast %"class.net::HostPortPair"* %86 to i8*
  %89 = bitcast %"class.net::HostPortPair"* %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #19
  %90 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %84, i64 -1, i32 1
  %91 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %85, i64 -1, i32 1
  %92 = load i16, i16* %91, align 8
  store i16 %92, i16* %90, align 8
  %93 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %84, i64 -2
  %94 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %85, i64 -2
  %95 = bitcast %"class.net::HostPortPair"* %93 to i8*
  %96 = bitcast %"class.net::HostPortPair"* %94 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #19
  %97 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %84, i64 -2, i32 1
  %98 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %85, i64 -2, i32 1
  %99 = load i16, i16* %98, align 8
  store i16 %99, i16* %97, align 8
  %100 = icmp eq %"class.net::HostPortPair"* %94, %60
  br i1 %100, label %101, label %83

101:                                              ; preds = %83, %78
  %102 = phi %"class.net::HostPortPair"* [ %79, %78 ], [ %93, %83 ]
  %103 = load i64, i64* %6, align 8
  %104 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %3, align 8
  br label %105

105:                                              ; preds = %53, %101
  %106 = phi %"class.net::HostPortPair"* [ %104, %101 ], [ %60, %53 ]
  %107 = phi %"class.net::HostPortPair"* [ %102, %101 ], [ %37, %53 ]
  %108 = phi i64 [ %103, %101 ], [ %61, %53 ]
  %109 = ptrtoint %"class.net::HostPortPair"* %107 to i64
  store i64 %109, i64* %6, align 8
  store i64 %58, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %110 = inttoptr i64 %108 to %"class.net::HostPortPair"*
  %111 = icmp eq %"class.net::HostPortPair"* %106, %110
  br i1 %111, label %124, label %112

112:                                              ; preds = %105, %122
  %113 = phi %"class.net::HostPortPair"* [ %114, %122 ], [ %106, %105 ]
  %114 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %113, i64 -1
  %115 = bitcast %"class.net::HostPortPair"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  tail call void @_ZdlPv(i8* %121) #21
  br label %122

122:                                              ; preds = %119, %112
  %123 = icmp eq %"class.net::HostPortPair"* %114, %110
  br i1 %123, label %124, label %112

124:                                              ; preds = %122, %105
  %125 = icmp eq i64 %108, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = inttoptr i64 %108 to i8*
  tail call void @_ZdlPv(i8* %127) #21
  br label %128

128:                                              ; preds = %124, %126
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.net::IPEndPoint"* @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_(%"class.std::__1::vector"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.net::IPEndPoint"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"class.net::IPEndPoint"* %2 to i64
  %8 = ptrtoint %"class.net::IPEndPoint"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 20
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %154

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.net::IPEndPoint"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %16, align 8
  %18 = ptrtoint %"class.net::IPEndPoint"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 20
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.net::IPEndPoint"** %16 to i64*
  br i1 %21, label %75, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 20
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %43

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %2, i64 %25
  %29 = icmp eq %"class.net::IPEndPoint"* %28, %3
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"class.net::IPEndPoint"* [ %34, %30 ], [ %17, %27 ]
  %32 = phi %"class.net::IPEndPoint"* [ %33, %30 ], [ %28, %27 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %31, %"class.net::IPEndPoint"* dereferenceable(20) %32) #19
  %33 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %32, i64 1
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %31, i64 1
  %35 = icmp eq %"class.net::IPEndPoint"* %33, %3
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.net::IPEndPoint"* %34 to i64
  br label %38

38:                                               ; preds = %36, %27
  %39 = phi i64 [ %18, %27 ], [ %37, %36 ]
  store i64 %39, i64* %22, align 8
  %40 = icmp sgt i64 %24, 0
  br i1 %40, label %41, label %154

41:                                               ; preds = %38
  %42 = inttoptr i64 %39 to %"class.net::IPEndPoint"*
  br label %43

43:                                               ; preds = %41, %23
  %44 = phi i64 [ %39, %41 ], [ %18, %23 ]
  %45 = phi %"class.net::IPEndPoint"* [ %42, %41 ], [ %17, %23 ]
  %46 = phi %"class.net::IPEndPoint"* [ %28, %41 ], [ %3, %23 ]
  %47 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 %10
  %48 = ptrtoint %"class.net::IPEndPoint"* %47 to i64
  %49 = sub i64 %44, %48
  %50 = sdiv exact i64 %49, 20
  %51 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 %50
  %52 = icmp ult %"class.net::IPEndPoint"* %51, %17
  br i1 %52, label %62, label %55

53:                                               ; preds = %62
  %54 = ptrtoint %"class.net::IPEndPoint"* %66 to i64
  br label %55

55:                                               ; preds = %53, %43
  %56 = phi i64 [ %54, %53 ], [ %44, %43 ]
  store i64 %56, i64* %22, align 8
  %57 = icmp eq i64 %49, 0
  br i1 %57, label %68, label %58

58:                                               ; preds = %55
  %59 = sdiv exact i64 %49, -20
  %60 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %45, i64 %59, i32 0, i32 0, i32 0, i32 0, i64 0
  %61 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %60, i8* align 2 %61, i64 %49, i1 false) #19
  br label %68

62:                                               ; preds = %43, %62
  %63 = phi %"class.net::IPEndPoint"* [ %66, %62 ], [ %45, %43 ]
  %64 = phi %"class.net::IPEndPoint"* [ %65, %62 ], [ %51, %43 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %63, %"class.net::IPEndPoint"* dereferenceable(20) %64) #19
  %65 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %64, i64 1
  %66 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %63, i64 1
  %67 = icmp ult %"class.net::IPEndPoint"* %65, %17
  br i1 %67, label %62, label %53

68:                                               ; preds = %55, %58
  %69 = ptrtoint %"class.net::IPEndPoint"* %46 to i64
  %70 = sub i64 %69, %7
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %154, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %74 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %73, i8* align 2 %74, i64 %70, i1 false) #19
  br label %154

75:                                               ; preds = %12
  %76 = bitcast %"class.std::__1::vector"* %0 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %18, %77
  %79 = sdiv exact i64 %78, 20
  %80 = add nsw i64 %79, %10
  %81 = icmp ugt i64 %80, 922337203685477580
  br i1 %81, label %82, label %84

82:                                               ; preds = %75
  %83 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %83) #20
  unreachable

84:                                               ; preds = %75
  %85 = sub i64 %15, %77
  %86 = sdiv exact i64 %85, 20
  %87 = icmp ult i64 %86, 461168601842738790
  br i1 %87, label %91, label %88

88:                                               ; preds = %84
  %89 = sub i64 %5, %77
  %90 = sdiv exact i64 %89, 20
  br label %98

91:                                               ; preds = %84
  %92 = shl nsw i64 %86, 1
  %93 = icmp ult i64 %92, %80
  %94 = select i1 %93, i64 %80, i64 %92
  %95 = sub i64 %5, %77
  %96 = sdiv exact i64 %95, 20
  %97 = icmp eq i64 %94, 0
  br i1 %97, label %104, label %98

98:                                               ; preds = %91, %88
  %99 = phi i64 [ %90, %88 ], [ %96, %91 ]
  %100 = phi i64 [ 922337203685477580, %88 ], [ %94, %91 ]
  %101 = mul i64 %100, 20
  %102 = tail call i8* @_Znwm(i64 %101) #21
  %103 = bitcast i8* %102 to %"class.net::IPEndPoint"*
  br label %104

104:                                              ; preds = %98, %91
  %105 = phi i64 [ %99, %98 ], [ %96, %91 ]
  %106 = phi i64 [ %100, %98 ], [ 0, %91 ]
  %107 = phi %"class.net::IPEndPoint"* [ %103, %98 ], [ null, %91 ]
  %108 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %107, i64 %105
  %109 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %107, i64 %106
  %110 = ptrtoint %"class.net::IPEndPoint"* %109 to i64
  %111 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %108, i64 %10
  br label %112

112:                                              ; preds = %104, %112
  %113 = phi %"class.net::IPEndPoint"* [ %115, %112 ], [ %108, %104 ]
  %114 = phi %"class.net::IPEndPoint"* [ %116, %112 ], [ %2, %104 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %113, %"class.net::IPEndPoint"* dereferenceable(20) %114) #19
  %115 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %113, i64 1
  %116 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %114, i64 1
  %117 = icmp eq %"class.net::IPEndPoint"* %111, %115
  br i1 %117, label %118, label %112

118:                                              ; preds = %112
  %119 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %6, align 8
  %120 = icmp eq %"class.net::IPEndPoint"* %119, %1
  br i1 %120, label %127, label %121

121:                                              ; preds = %118, %121
  %122 = phi %"class.net::IPEndPoint"* [ %124, %121 ], [ %108, %118 ]
  %123 = phi %"class.net::IPEndPoint"* [ %125, %121 ], [ %1, %118 ]
  %124 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %122, i64 -1
  %125 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %123, i64 -1
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %124, %"class.net::IPEndPoint"* dereferenceable(20) %125) #19
  %126 = icmp eq %"class.net::IPEndPoint"* %125, %119
  br i1 %126, label %127, label %121

127:                                              ; preds = %121, %118
  %128 = phi %"class.net::IPEndPoint"* [ %108, %118 ], [ %124, %121 ]
  %129 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %16, align 8
  %130 = icmp eq %"class.net::IPEndPoint"* %129, %1
  br i1 %130, label %139, label %131

131:                                              ; preds = %127, %131
  %132 = phi %"class.net::IPEndPoint"* [ %135, %131 ], [ %111, %127 ]
  %133 = phi %"class.net::IPEndPoint"* [ %134, %131 ], [ %1, %127 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %132, %"class.net::IPEndPoint"* dereferenceable(20) %133) #19
  %134 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %133, i64 1
  %135 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %132, i64 1
  %136 = icmp eq %"class.net::IPEndPoint"* %134, %129
  br i1 %136, label %137, label %131

137:                                              ; preds = %131
  %138 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %16, align 8
  br label %139

139:                                              ; preds = %127, %137
  %140 = phi %"class.net::IPEndPoint"* [ %138, %137 ], [ %1, %127 ]
  %141 = phi %"class.net::IPEndPoint"* [ %135, %137 ], [ %111, %127 ]
  %142 = ptrtoint %"class.net::IPEndPoint"* %128 to i64
  %143 = ptrtoint %"class.net::IPEndPoint"* %141 to i64
  %144 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %6, align 8
  store i64 %142, i64* %76, align 8
  store i64 %143, i64* %22, align 8
  store i64 %110, i64* %14, align 8
  %145 = icmp eq %"class.net::IPEndPoint"* %140, %144
  br i1 %145, label %150, label %146

146:                                              ; preds = %139, %146
  %147 = phi %"class.net::IPEndPoint"* [ %148, %146 ], [ %140, %139 ]
  %148 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %147, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %148) #19
  %149 = icmp eq %"class.net::IPEndPoint"* %148, %144
  br i1 %149, label %150, label %146

150:                                              ; preds = %146, %139
  %151 = icmp eq %"class.net::IPEndPoint"* %144, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %153) #21
  br label %154

154:                                              ; preds = %152, %150, %38, %68, %72, %4
  %155 = phi %"class.net::IPEndPoint"* [ %1, %4 ], [ %1, %72 ], [ %1, %68 ], [ %1, %38 ], [ %108, %150 ], [ %108, %152 ]
  ret %"class.net::IPEndPoint"* %155
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__113__stable_sortIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %class.anon.90* dereferenceable(1), i64, %"class.net::IPEndPoint"*, i64) unnamed_addr #0 {
  %7 = alloca %"class.net::IPEndPoint", align 2
  %8 = alloca %"class.net::IPEndPoint", align 2
  switch i64 %3, label %20 [
    i64 0, label %113
    i64 1, label %113
    i64 2, label %9
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 -1
  %11 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %10) #19
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %113

13:                                               ; preds = %9
  %14 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %0) #19
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %113

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %17, i8 -86, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %8, %"class.net::IPEndPoint"* dereferenceable(20) %0) #19
  %18 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %18, i8* align 2 %19, i64 20, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* nonnull align 2 %17, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17) #19
  br label %113

20:                                               ; preds = %6
  %21 = icmp slt i64 %3, 129
  br i1 %21, label %22, label %49

22:                                               ; preds = %20
  %23 = icmp eq %"class.net::IPEndPoint"* %0, %1
  br i1 %23, label %113, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 1
  %26 = icmp eq %"class.net::IPEndPoint"* %25, %1
  br i1 %26, label %113, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  br label %29

29:                                               ; preds = %40, %27
  %30 = phi %"class.net::IPEndPoint"* [ %25, %27 ], [ %43, %40 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %28) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %28, i8 -86, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %7, %"class.net::IPEndPoint"* dereferenceable(20) %30) #19
  %31 = icmp eq %"class.net::IPEndPoint"* %30, %0
  br i1 %31, label %40, label %32

32:                                               ; preds = %29, %45
  %33 = phi %"class.net::IPEndPoint"* [ %34, %45 ], [ %30, %29 ]
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 -1
  %35 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* nonnull %7) #19
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %34) #19
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %45, label %40

40:                                               ; preds = %45, %37, %32, %29
  %41 = phi %"class.net::IPEndPoint"* [ %0, %29 ], [ %33, %37 ], [ %33, %32 ], [ %0, %45 ]
  %42 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %42, i8* nonnull align 2 %28, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %28) #19
  %43 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %30, i64 1
  %44 = icmp eq %"class.net::IPEndPoint"* %43, %1
  br i1 %44, label %113, label %29

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %47 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %46, i8* align 2 %47, i64 20, i1 false) #19
  %48 = icmp eq %"class.net::IPEndPoint"* %34, %0
  br i1 %48, label %40, label %32

49:                                               ; preds = %20
  %50 = lshr i64 %3, 1
  %51 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 %50
  %52 = icmp sgt i64 %3, %5
  br i1 %52, label %111, label %53

53:                                               ; preds = %49
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeE"(%"class.net::IPEndPoint"* %0, %"class.net::IPEndPoint"* %51, %class.anon.90* dereferenceable(1) %2, i64 %50, %"class.net::IPEndPoint"* %4)
  %54 = sub nsw i64 %3, %50
  %55 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 %50
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeE"(%"class.net::IPEndPoint"* %51, %"class.net::IPEndPoint"* %1, %class.anon.90* dereferenceable(1) %2, i64 %54, %"class.net::IPEndPoint"* %55)
  %56 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 %3
  br label %59

57:                                               ; preds = %88
  %58 = icmp eq %"class.net::IPEndPoint"* %89, %56
  br i1 %58, label %101, label %93

59:                                               ; preds = %53, %88
  %60 = phi %"class.net::IPEndPoint"* [ %90, %88 ], [ %4, %53 ]
  %61 = phi %"class.net::IPEndPoint"* [ %89, %88 ], [ %55, %53 ]
  %62 = phi %"class.net::IPEndPoint"* [ %91, %88 ], [ %0, %53 ]
  %63 = icmp eq %"class.net::IPEndPoint"* %61, %56
  br i1 %63, label %64, label %74

64:                                               ; preds = %59
  %65 = icmp eq %"class.net::IPEndPoint"* %60, %55
  br i1 %65, label %101, label %66

66:                                               ; preds = %64, %66
  %67 = phi %"class.net::IPEndPoint"* [ %71, %66 ], [ %60, %64 ]
  %68 = phi %"class.net::IPEndPoint"* [ %72, %66 ], [ %62, %64 ]
  %69 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %70 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %69, i8* align 2 %70, i64 20, i1 false) #19
  %71 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %67, i64 1
  %72 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %68, i64 1
  %73 = icmp eq %"class.net::IPEndPoint"* %71, %55
  br i1 %73, label %101, label %66

74:                                               ; preds = %59
  %75 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %61) #19
  %76 = icmp eq i32 %75, 2
  br i1 %76, label %77, label %84

77:                                               ; preds = %74
  %78 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %60) #19
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %84

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %82 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %81, i8* align 2 %82, i64 20, i1 false) #19
  %83 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %61, i64 1
  br label %88

84:                                               ; preds = %77, %74
  %85 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %86 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %85, i8* align 2 %86, i64 20, i1 false) #19
  %87 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %60, i64 1
  br label %88

88:                                               ; preds = %84, %80
  %89 = phi %"class.net::IPEndPoint"* [ %83, %80 ], [ %61, %84 ]
  %90 = phi %"class.net::IPEndPoint"* [ %60, %80 ], [ %87, %84 ]
  %91 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %62, i64 1
  %92 = icmp eq %"class.net::IPEndPoint"* %90, %55
  br i1 %92, label %57, label %59

93:                                               ; preds = %57, %93
  %94 = phi %"class.net::IPEndPoint"* [ %98, %93 ], [ %89, %57 ]
  %95 = phi %"class.net::IPEndPoint"* [ %99, %93 ], [ %91, %57 ]
  %96 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %97 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %96, i8* align 2 %97, i64 20, i1 false) #19
  %98 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %94, i64 1
  %99 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %95, i64 1
  %100 = icmp eq %"class.net::IPEndPoint"* %98, %56
  br i1 %100, label %101, label %93

101:                                              ; preds = %93, %66, %57, %64
  %102 = icmp eq %"class.net::IPEndPoint"* %4, null
  %103 = icmp eq i64 %3, 0
  %104 = or i1 %103, %102
  br i1 %104, label %113, label %105

105:                                              ; preds = %101, %105
  %106 = phi i64 [ %108, %105 ], [ 0, %101 ]
  %107 = phi %"class.net::IPEndPoint"* [ %109, %105 ], [ %4, %101 ]
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %107) #19
  %108 = add nuw i64 %106, 1
  %109 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %107, i64 1
  %110 = icmp eq i64 %108, %3
  br i1 %110, label %113, label %105

111:                                              ; preds = %49
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.net::IPEndPoint"* %0, %"class.net::IPEndPoint"* %51, %class.anon.90* dereferenceable(1) %2, i64 %50, %"class.net::IPEndPoint"* %4, i64 %5)
  %112 = sub nsw i64 %3, %50
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.net::IPEndPoint"* %51, %"class.net::IPEndPoint"* %1, %class.anon.90* dereferenceable(1) %2, i64 %112, %"class.net::IPEndPoint"* %4, i64 %5)
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEl"(%"class.net::IPEndPoint"* %0, %"class.net::IPEndPoint"* %51, %"class.net::IPEndPoint"* %1, %class.anon.90* dereferenceable(1) %2, i64 %50, i64 %112, %"class.net::IPEndPoint"* %4, i64 %5)
  br label %113

113:                                              ; preds = %105, %40, %9, %101, %24, %22, %111, %13, %16, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__118__stable_sort_moveIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeE"(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %class.anon.90* dereferenceable(1), i64, %"class.net::IPEndPoint"*) unnamed_addr #0 {
  switch i64 %3, label %18 [
    i64 0, label %100
    i64 1, label %6
    i64 2, label %7
  ]

6:                                                ; preds = %5
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %4, %"class.net::IPEndPoint"* dereferenceable(20) %0) #19
  br label %100

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 -1
  %9 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %8) #19
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %0) #19
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %4, %"class.net::IPEndPoint"* dereferenceable(20) %8) #19
  %15 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 1
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %15, %"class.net::IPEndPoint"* dereferenceable(20) %0) #19
  br label %100

16:                                               ; preds = %7, %11
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %4, %"class.net::IPEndPoint"* dereferenceable(20) %0) #19
  %17 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 1
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %17, %"class.net::IPEndPoint"* dereferenceable(20) %8) #19
  br label %100

18:                                               ; preds = %5
  %19 = icmp slt i64 %3, 9
  br i1 %19, label %20, label %56

20:                                               ; preds = %18
  %21 = icmp eq %"class.net::IPEndPoint"* %0, %1
  br i1 %21, label %100, label %22

22:                                               ; preds = %20
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %4, %"class.net::IPEndPoint"* dereferenceable(20) %0) #19
  %23 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 1
  %24 = icmp eq %"class.net::IPEndPoint"* %23, %1
  br i1 %24, label %100, label %25

25:                                               ; preds = %22, %53
  %26 = phi %"class.net::IPEndPoint"* [ %54, %53 ], [ %23, %22 ]
  %27 = phi %"class.net::IPEndPoint"* [ %28, %53 ], [ %4, %22 ]
  %28 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %27, i64 1
  %29 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %26) #19
  %30 = icmp eq i32 %29, 2
  br i1 %30, label %31, label %52

31:                                               ; preds = %25
  %32 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %27) #19
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %52

34:                                               ; preds = %31
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %28, %"class.net::IPEndPoint"* dereferenceable(20) %27) #19
  %35 = icmp eq %"class.net::IPEndPoint"* %27, %4
  br i1 %35, label %48, label %36

36:                                               ; preds = %34, %44
  %37 = phi %"class.net::IPEndPoint"* [ %38, %44 ], [ %27, %34 ]
  %38 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %37, i64 -1
  %39 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %26) #19
  %40 = icmp eq i32 %39, 2
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %38) #19
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %48

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %46 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %45, i8* align 2 %46, i64 20, i1 false) #19
  %47 = icmp eq %"class.net::IPEndPoint"* %38, %4
  br i1 %47, label %48, label %36

48:                                               ; preds = %44, %41, %36, %34
  %49 = phi %"class.net::IPEndPoint"* [ %4, %34 ], [ %37, %41 ], [ %4, %44 ], [ %37, %36 ]
  %50 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %51 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %50, i8* align 2 %51, i64 20, i1 false) #19
  br label %53

52:                                               ; preds = %31, %25
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %28, %"class.net::IPEndPoint"* dereferenceable(20) %26) #19
  br label %53

53:                                               ; preds = %52, %48
  %54 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %26, i64 1
  %55 = icmp eq %"class.net::IPEndPoint"* %54, %1
  br i1 %55, label %100, label %25

56:                                               ; preds = %18
  %57 = lshr i64 %3, 1
  %58 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 %57
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.net::IPEndPoint"* %0, %"class.net::IPEndPoint"* %58, %class.anon.90* dereferenceable(1) %2, i64 %57, %"class.net::IPEndPoint"* %4, i64 %57)
  %59 = sub nsw i64 %3, %57
  %60 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 %57
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.net::IPEndPoint"* %58, %"class.net::IPEndPoint"* %1, %class.anon.90* dereferenceable(1) %2, i64 %59, %"class.net::IPEndPoint"* %60, i64 %59)
  %61 = icmp eq i64 %57, 0
  br i1 %61, label %62, label %72

62:                                               ; preds = %95, %56
  %63 = phi %"class.net::IPEndPoint"* [ %58, %56 ], [ %96, %95 ]
  %64 = phi %"class.net::IPEndPoint"* [ %4, %56 ], [ %98, %95 ]
  %65 = icmp eq %"class.net::IPEndPoint"* %63, %1
  br i1 %65, label %100, label %66

66:                                               ; preds = %62, %66
  %67 = phi %"class.net::IPEndPoint"* [ %70, %66 ], [ %64, %62 ]
  %68 = phi %"class.net::IPEndPoint"* [ %69, %66 ], [ %63, %62 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %67, %"class.net::IPEndPoint"* dereferenceable(20) %68) #19
  %69 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %68, i64 1
  %70 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %67, i64 1
  %71 = icmp eq %"class.net::IPEndPoint"* %69, %1
  br i1 %71, label %100, label %66

72:                                               ; preds = %56, %95
  %73 = phi %"class.net::IPEndPoint"* [ %98, %95 ], [ %4, %56 ]
  %74 = phi %"class.net::IPEndPoint"* [ %97, %95 ], [ %0, %56 ]
  %75 = phi %"class.net::IPEndPoint"* [ %96, %95 ], [ %58, %56 ]
  %76 = icmp eq %"class.net::IPEndPoint"* %75, %1
  br i1 %76, label %77, label %85

77:                                               ; preds = %72
  %78 = icmp eq %"class.net::IPEndPoint"* %74, %58
  br i1 %78, label %100, label %79

79:                                               ; preds = %77, %79
  %80 = phi %"class.net::IPEndPoint"* [ %83, %79 ], [ %73, %77 ]
  %81 = phi %"class.net::IPEndPoint"* [ %82, %79 ], [ %74, %77 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %80, %"class.net::IPEndPoint"* dereferenceable(20) %81) #19
  %82 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %81, i64 1
  %83 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %80, i64 1
  %84 = icmp eq %"class.net::IPEndPoint"* %82, %58
  br i1 %84, label %100, label %79

85:                                               ; preds = %72
  %86 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %75) #19
  %87 = icmp eq i32 %86, 2
  br i1 %87, label %88, label %93

88:                                               ; preds = %85
  %89 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %74) #19
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %73, %"class.net::IPEndPoint"* dereferenceable(20) %75) #19
  %92 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %75, i64 1
  br label %95

93:                                               ; preds = %88, %85
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %73, %"class.net::IPEndPoint"* dereferenceable(20) %74) #19
  %94 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %74, i64 1
  br label %95

95:                                               ; preds = %93, %91
  %96 = phi %"class.net::IPEndPoint"* [ %92, %91 ], [ %75, %93 ]
  %97 = phi %"class.net::IPEndPoint"* [ %74, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %73, i64 1
  %99 = icmp eq %"class.net::IPEndPoint"* %97, %58
  br i1 %99, label %62, label %72

100:                                              ; preds = %79, %66, %53, %77, %62, %22, %20, %16, %14, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__115__inplace_mergeIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEl"(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %class.anon.90* readnone dereferenceable(1), i64, i64, %"class.net::IPEndPoint"*, i64) unnamed_addr #0 {
  %9 = alloca %"class.net::IPEndPoint", align 2
  %10 = alloca %"class.net::IPEndPoint", align 2
  %11 = alloca %"class.net::IPEndPoint", align 2
  %12 = icmp eq i64 %5, 0
  br i1 %12, label %280, label %13

13:                                               ; preds = %8
  %14 = ptrtoint %"class.net::IPEndPoint"* %1 to i64
  %15 = ptrtoint %"class.net::IPEndPoint"* %0 to i64
  %16 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %17 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  br label %18

18:                                               ; preds = %13, %273
  %19 = phi %"class.net::IPEndPoint"* [ %2, %13 ], [ %278, %273 ]
  %20 = phi i64 [ %4, %13 ], [ %277, %273 ]
  %21 = phi i64 [ %5, %13 ], [ %276, %273 ]
  %22 = phi i64 [ %14, %13 ], [ %275, %273 ]
  %23 = phi i64 [ %15, %13 ], [ %274, %273 ]
  %24 = icmp sgt i64 %20, %7
  %25 = icmp sgt i64 %21, %7
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %31

27:                                               ; preds = %18
  %28 = icmp eq i64 %20, 0
  br i1 %28, label %280, label %29

29:                                               ; preds = %27
  %30 = inttoptr i64 %22 to %"class.net::IPEndPoint"*
  br label %132

31:                                               ; preds = %18
  %32 = inttoptr i64 %23 to %"class.net::IPEndPoint"*
  %33 = inttoptr i64 %22 to %"class.net::IPEndPoint"*
  %34 = icmp sgt i64 %20, %21
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = icmp eq %"class.net::IPEndPoint"* %32, %33
  br i1 %36, label %280, label %73

37:                                               ; preds = %31
  %38 = icmp eq %"class.net::IPEndPoint"* %19, %33
  br i1 %38, label %280, label %113

39:                                               ; preds = %73
  %40 = icmp eq %"class.net::IPEndPoint"* %79, %6
  br i1 %40, label %121, label %41

41:                                               ; preds = %39, %68
  %42 = phi %"class.net::IPEndPoint"* [ %70, %68 ], [ %6, %39 ]
  %43 = phi %"class.net::IPEndPoint"* [ %71, %68 ], [ %32, %39 ]
  %44 = phi %"class.net::IPEndPoint"* [ %69, %68 ], [ %33, %39 ]
  %45 = icmp eq %"class.net::IPEndPoint"* %44, %19
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ptrtoint %"class.net::IPEndPoint"* %79 to i64
  %48 = ptrtoint %"class.net::IPEndPoint"* %42 to i64
  %49 = sub i64 %47, %48
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %121, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %53 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %52, i8* align 2 %53, i64 %49, i1 false) #19
  br label %121

54:                                               ; preds = %41
  %55 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %44) #19
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %57, label %64

57:                                               ; preds = %54
  %58 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %42) #19
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %64

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %62 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %61, i8* align 2 %62, i64 20, i1 false) #19
  %63 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %44, i64 1
  br label %68

64:                                               ; preds = %57, %54
  %65 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %66 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %65, i8* align 2 %66, i64 20, i1 false) #19
  %67 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %42, i64 1
  br label %68

68:                                               ; preds = %64, %60
  %69 = phi %"class.net::IPEndPoint"* [ %63, %60 ], [ %44, %64 ]
  %70 = phi %"class.net::IPEndPoint"* [ %42, %60 ], [ %67, %64 ]
  %71 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %43, i64 1
  %72 = icmp eq %"class.net::IPEndPoint"* %70, %79
  br i1 %72, label %121, label %41

73:                                               ; preds = %35, %73
  %74 = phi %"class.net::IPEndPoint"* [ %79, %73 ], [ %6, %35 ]
  %75 = phi %"class.net::IPEndPoint"* [ %78, %73 ], [ %32, %35 ]
  %76 = phi i64 [ %77, %73 ], [ 0, %35 ]
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %74, %"class.net::IPEndPoint"* dereferenceable(20) %75) #19
  %77 = add i64 %76, 1
  %78 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %75, i64 1
  %79 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %74, i64 1
  %80 = icmp eq %"class.net::IPEndPoint"* %78, %33
  br i1 %80, label %39, label %73

81:                                               ; preds = %113
  %82 = icmp eq %"class.net::IPEndPoint"* %119, %6
  br i1 %82, label %121, label %83

83:                                               ; preds = %81, %105
  %84 = phi %"class.net::IPEndPoint"* [ %111, %105 ], [ %19, %81 ]
  %85 = phi %"class.net::IPEndPoint"* [ %108, %105 ], [ %119, %81 ]
  %86 = phi %"class.net::IPEndPoint"* [ %107, %105 ], [ %33, %81 ]
  %87 = icmp eq %"class.net::IPEndPoint"* %86, %32
  br i1 %87, label %88, label %96

88:                                               ; preds = %83, %88
  %89 = phi %"class.net::IPEndPoint"* [ %91, %88 ], [ %85, %83 ]
  %90 = phi %"class.net::IPEndPoint"* [ %92, %88 ], [ %84, %83 ]
  %91 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %89, i64 -1
  %92 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %90, i64 -1
  %93 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %94 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %93, i8* align 2 %94, i64 20, i1 false) #19
  %95 = icmp eq %"class.net::IPEndPoint"* %91, %6
  br i1 %95, label %121, label %88

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %86, i64 -1
  %98 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %85, i64 -1
  %99 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %98) #19
  %100 = icmp eq i32 %99, 2
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %97) #19
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %105, label %104

104:                                              ; preds = %101, %96
  br label %105

105:                                              ; preds = %101, %104
  %106 = phi %"class.net::IPEndPoint"* [ %85, %104 ], [ %86, %101 ]
  %107 = phi %"class.net::IPEndPoint"* [ %86, %104 ], [ %97, %101 ]
  %108 = phi %"class.net::IPEndPoint"* [ %98, %104 ], [ %85, %101 ]
  %109 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %84, i64 -1, i32 0, i32 0, i32 0, i32 0, i64 0
  %110 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %106, i64 -1, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %109, i8* align 2 %110, i64 20, i1 false) #19
  %111 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %84, i64 -1
  %112 = icmp eq %"class.net::IPEndPoint"* %108, %6
  br i1 %112, label %121, label %83

113:                                              ; preds = %37, %113
  %114 = phi %"class.net::IPEndPoint"* [ %119, %113 ], [ %6, %37 ]
  %115 = phi %"class.net::IPEndPoint"* [ %118, %113 ], [ %33, %37 ]
  %116 = phi i64 [ %117, %113 ], [ 0, %37 ]
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %114, %"class.net::IPEndPoint"* dereferenceable(20) %115) #19
  %117 = add i64 %116, 1
  %118 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %115, i64 1
  %119 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %114, i64 1
  %120 = icmp eq %"class.net::IPEndPoint"* %118, %19
  br i1 %120, label %81, label %113

121:                                              ; preds = %68, %105, %88, %81, %51, %46, %39
  %122 = phi i64 [ %77, %39 ], [ %77, %46 ], [ %77, %51 ], [ %117, %81 ], [ %117, %88 ], [ %117, %105 ], [ %77, %68 ]
  %123 = icmp eq %"class.net::IPEndPoint"* %6, null
  %124 = icmp eq i64 %122, 0
  %125 = or i1 %123, %124
  br i1 %125, label %280, label %126

126:                                              ; preds = %121, %126
  %127 = phi i64 [ %129, %126 ], [ 0, %121 ]
  %128 = phi %"class.net::IPEndPoint"* [ %130, %126 ], [ %6, %121 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %128) #19
  %129 = add nuw i64 %127, 1
  %130 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %128, i64 1
  %131 = icmp eq i64 %129, %122
  br i1 %131, label %280, label %126

132:                                              ; preds = %29, %141
  %133 = phi i64 [ %20, %29 ], [ %144, %141 ]
  %134 = phi i64 [ %23, %29 ], [ %143, %141 ]
  %135 = inttoptr i64 %134 to %"class.net::IPEndPoint"*
  %136 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %30) #19
  %137 = icmp eq i32 %136, 2
  br i1 %137, label %138, label %141

138:                                              ; preds = %132
  %139 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %135) #19
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %146, label %141

141:                                              ; preds = %132, %138
  %142 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %135, i64 1
  %143 = ptrtoint %"class.net::IPEndPoint"* %142 to i64
  %144 = add nsw i64 %133, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %280, label %132

146:                                              ; preds = %138
  %147 = inttoptr i64 %134 to %"class.net::IPEndPoint"*
  %148 = icmp slt i64 %133, %21
  br i1 %148, label %149, label %180

149:                                              ; preds = %146
  %150 = sdiv i64 %21, 2
  %151 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %30, i64 %150
  %152 = sub i64 %22, %134
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %174, label %154

154:                                              ; preds = %149
  %155 = sdiv exact i64 %152, 20
  br label %156

156:                                              ; preds = %170, %154
  %157 = phi %"class.net::IPEndPoint"* [ %172, %170 ], [ %147, %154 ]
  %158 = phi i64 [ %171, %170 ], [ %155, %154 ]
  %159 = lshr i64 %158, 1
  %160 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %157, i64 %159
  %161 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %151) #19
  %162 = icmp eq i32 %161, 2
  br i1 %162, label %163, label %166

163:                                              ; preds = %156
  %164 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %160) #19
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %170, label %166

166:                                              ; preds = %163, %156
  %167 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %160, i64 1
  %168 = xor i64 %159, -1
  %169 = add i64 %158, %168
  br label %170

170:                                              ; preds = %166, %163
  %171 = phi i64 [ %169, %166 ], [ %159, %163 ]
  %172 = phi %"class.net::IPEndPoint"* [ %167, %166 ], [ %157, %163 ]
  %173 = icmp eq i64 %171, 0
  br i1 %173, label %174, label %156

174:                                              ; preds = %170, %149
  %175 = phi %"class.net::IPEndPoint"* [ %147, %149 ], [ %172, %170 ]
  %176 = ptrtoint %"class.net::IPEndPoint"* %175 to i64
  %177 = sub i64 %176, %134
  %178 = sdiv exact i64 %177, 20
  %179 = ptrtoint %"class.net::IPEndPoint"* %151 to i64
  br label %222

180:                                              ; preds = %146
  %181 = icmp eq i64 %133, 1
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  %183 = inttoptr i64 %22 to %"class.net::IPEndPoint"*
  %184 = inttoptr i64 %134 to %"class.net::IPEndPoint"*
  %185 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %185) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %185, i8 -86, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %11, %"class.net::IPEndPoint"* dereferenceable(20) %184) #19
  %186 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %184, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %187 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %183, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %186, i8* align 2 %187, i64 20, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %187, i8* nonnull align 2 %185, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %185) #19
  br label %280

188:                                              ; preds = %180
  %189 = sdiv i64 %133, 2
  %190 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %147, i64 %189
  %191 = ptrtoint %"class.net::IPEndPoint"* %190 to i64
  %192 = ptrtoint %"class.net::IPEndPoint"* %19 to i64
  %193 = sub i64 %192, %22
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %216, label %195

195:                                              ; preds = %188
  %196 = sdiv exact i64 %193, 20
  br label %197

197:                                              ; preds = %212, %195
  %198 = phi i64 [ %214, %212 ], [ 0, %195 ]
  %199 = phi i64 [ %213, %212 ], [ %196, %195 ]
  %200 = lshr i64 %199, 1
  %201 = add nsw i64 %200, %198
  %202 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %30, i64 %201
  %203 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %202) #19
  %204 = icmp eq i32 %203, 2
  br i1 %204, label %205, label %212

205:                                              ; preds = %197
  %206 = call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %190) #19
  %207 = icmp eq i32 %206, 1
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  %209 = add nsw i64 %201, 1
  %210 = xor i64 %200, -1
  %211 = add i64 %199, %210
  br label %212

212:                                              ; preds = %208, %205, %197
  %213 = phi i64 [ %211, %208 ], [ %200, %205 ], [ %200, %197 ]
  %214 = phi i64 [ %209, %208 ], [ %198, %205 ], [ %198, %197 ]
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %216, label %197

216:                                              ; preds = %212, %188
  %217 = phi i64 [ 0, %188 ], [ %214, %212 ]
  %218 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %30, i64 %217
  %219 = ptrtoint %"class.net::IPEndPoint"* %218 to i64
  %220 = sub i64 %219, %22
  %221 = sdiv exact i64 %220, 20
  br label %222

222:                                              ; preds = %216, %174
  %223 = phi i64 [ %219, %216 ], [ %179, %174 ]
  %224 = phi i64 [ %191, %216 ], [ %176, %174 ]
  %225 = phi i64 [ %217, %216 ], [ %150, %174 ]
  %226 = phi i64 [ %221, %216 ], [ %150, %174 ]
  %227 = phi i64 [ %189, %216 ], [ %178, %174 ]
  %228 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %30, i64 %225
  %229 = sub nsw i64 %133, %227
  %230 = sub nsw i64 %21, %226
  %231 = inttoptr i64 %224 to %"class.net::IPEndPoint"*
  %232 = icmp eq %"class.net::IPEndPoint"* %231, %30
  br i1 %232, label %265, label %233

233:                                              ; preds = %222
  %234 = icmp eq i64 %225, 0
  br i1 %234, label %265, label %235

235:                                              ; preds = %233
  %236 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %231, i64 1
  %237 = icmp eq %"class.net::IPEndPoint"* %236, %30
  br i1 %237, label %238, label %248

238:                                              ; preds = %235
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %17, i8 -86, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %9, %"class.net::IPEndPoint"* dereferenceable(20) %231) #19
  %239 = sub i64 %223, %22
  %240 = sdiv exact i64 %239, 20
  %241 = icmp eq i64 %239, 0
  br i1 %241, label %245, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %244 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %243, i8* align 2 %244, i64 %239, i1 false) #19
  br label %245

245:                                              ; preds = %242, %238
  %246 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %231, i64 %240
  %247 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %246, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %247, i8* nonnull align 2 %17, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17) #19
  br label %265

248:                                              ; preds = %235
  %249 = icmp eq i64 %225, 1
  br i1 %249, label %250, label %263

250:                                              ; preds = %248
  %251 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %228, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %16) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %16, i8 -86, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %10, %"class.net::IPEndPoint"* dereferenceable(20) %251) #19
  %252 = ptrtoint %"class.net::IPEndPoint"* %251 to i64
  %253 = sub i64 %252, %224
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %260, label %255

255:                                              ; preds = %250
  %256 = sdiv exact i64 %253, -20
  %257 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %228, i64 %256
  %258 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %257, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %259 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %258, i8* align 2 %259, i64 %253, i1 false) #19
  br label %260

260:                                              ; preds = %255, %250
  %261 = phi %"class.net::IPEndPoint"* [ %257, %255 ], [ %228, %250 ]
  %262 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %262, i8* nonnull align 2 %16, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %16) #19
  br label %265

263:                                              ; preds = %248
  %264 = call %"class.net::IPEndPoint"* @_ZNSt3__112__rotate_gcdINS_11__wrap_iterIPN3net10IPEndPointEEEEET_S6_S6_S6_(%"class.net::IPEndPoint"* %231, %"class.net::IPEndPoint"* %30, %"class.net::IPEndPoint"* %228) #19
  br label %265

265:                                              ; preds = %263, %260, %245, %222, %233
  %266 = phi %"class.net::IPEndPoint"* [ %231, %233 ], [ %228, %222 ], [ %246, %245 ], [ %261, %260 ], [ %264, %263 ]
  %267 = add nsw i64 %227, %226
  %268 = add nsw i64 %229, %230
  %269 = icmp slt i64 %267, %268
  br i1 %269, label %270, label %272

270:                                              ; preds = %265
  %271 = ptrtoint %"class.net::IPEndPoint"* %266 to i64
  call fastcc void @"_ZNSt3__115__inplace_mergeIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEl"(%"class.net::IPEndPoint"* %147, %"class.net::IPEndPoint"* %231, %"class.net::IPEndPoint"* %266, %class.anon.90* dereferenceable(1) %3, i64 %227, i64 %226, %"class.net::IPEndPoint"* %6, i64 %7)
  br label %273

272:                                              ; preds = %265
  call fastcc void @"_ZNSt3__115__inplace_mergeIRZN3net9HostCache5Entry18MergeAddressesFromERKS3_E3$_2NS_11__wrap_iterIPNS1_10IPEndPointEEEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEl"(%"class.net::IPEndPoint"* %266, %"class.net::IPEndPoint"* %228, %"class.net::IPEndPoint"* %19, %class.anon.90* dereferenceable(1) %3, i64 %229, i64 %230, %"class.net::IPEndPoint"* %6, i64 %7)
  br label %273

273:                                              ; preds = %270, %272
  %274 = phi i64 [ %271, %270 ], [ %134, %272 ]
  %275 = phi i64 [ %223, %270 ], [ %224, %272 ]
  %276 = phi i64 [ %230, %270 ], [ %226, %272 ]
  %277 = phi i64 [ %229, %270 ], [ %227, %272 ]
  %278 = phi %"class.net::IPEndPoint"* [ %19, %270 ], [ %266, %272 ]
  %279 = icmp eq i64 %276, 0
  br i1 %279, label %280, label %18

280:                                              ; preds = %273, %27, %141, %126, %8, %182, %121, %37, %35
  ret void
}

declare i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.net::IPEndPoint"* @_ZNSt3__112__rotate_gcdINS_11__wrap_iterIPN3net10IPEndPointEEEEET_S6_S6_S6_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = alloca %"class.net::IPEndPoint", align 2
  %6 = ptrtoint %"class.net::IPEndPoint"* %0 to i64
  %7 = ptrtoint %"class.net::IPEndPoint"* %1 to i64
  %8 = ptrtoint %"class.net::IPEndPoint"* %2 to i64
  %9 = sub i64 %7, %6
  %10 = sdiv exact i64 %9, 20
  %11 = sub i64 %8, %7
  %12 = sdiv exact i64 %11, 20
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %3
  %15 = icmp eq %"class.net::IPEndPoint"* %0, %1
  br i1 %15, label %58, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi %"class.net::IPEndPoint"* [ %1, %16 ], [ %24, %18 ]
  %20 = phi %"class.net::IPEndPoint"* [ %0, %16 ], [ %23, %18 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %17, i8 -86, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %4, %"class.net::IPEndPoint"* dereferenceable(20) %20) #19
  %21 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %22 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 2 %22, i64 20, i1 false) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %22, i8* nonnull align 2 %17, i64 20, i1 false) #19
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17) #19
  %23 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %20, i64 1
  %24 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %19, i64 1
  %25 = icmp eq %"class.net::IPEndPoint"* %23, %1
  br i1 %25, label %58, label %18

26:                                               ; preds = %3, %26
  %27 = phi i64 [ %29, %26 ], [ %12, %3 ]
  %28 = phi i64 [ %27, %26 ], [ %10, %3 ]
  %29 = srem i64 %28, %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %26

31:                                               ; preds = %26
  %32 = icmp eq i64 %27, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 %27
  %35 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  br label %38

36:                                               ; preds = %56, %31
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 %12
  br label %58

38:                                               ; preds = %33, %56
  %39 = phi %"class.net::IPEndPoint"* [ %34, %33 ], [ %40, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %35) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %35, i8 -86, i64 20, i1 false)
  %40 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %39, i64 -1
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %5, %"class.net::IPEndPoint"* dereferenceable(20) %40) #19
  %41 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %40, i64 %10
  br label %42

42:                                               ; preds = %42, %38
  %43 = phi %"class.net::IPEndPoint"* [ %40, %38 ], [ %44, %42 ]
  %44 = phi %"class.net::IPEndPoint"* [ %41, %38 ], [ %54, %42 ]
  %45 = ptrtoint %"class.net::IPEndPoint"* %44 to i64
  %46 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %47 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %46, i8* align 2 %47, i64 20, i1 false)
  %48 = sub i64 %8, %45
  %49 = sdiv exact i64 %48, 20
  %50 = icmp slt i64 %10, %49
  %51 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %44, i64 %10
  %52 = sub nsw i64 %10, %49
  %53 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %0, i64 %52
  %54 = select i1 %50, %"class.net::IPEndPoint"* %51, %"class.net::IPEndPoint"* %53
  %55 = icmp eq %"class.net::IPEndPoint"* %54, %40
  br i1 %55, label %56, label %42

56:                                               ; preds = %42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* nonnull align 2 %35, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %35) #19
  %57 = icmp eq %"class.net::IPEndPoint"* %40, %0
  br i1 %57, label %36, label %38

58:                                               ; preds = %18, %14, %36
  %59 = phi %"class.net::IPEndPoint"* [ %37, %36 ], [ %0, %14 ], [ %1, %18 ]
  ret %"class.net::IPEndPoint"* %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #19
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #19
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #19, !range !87
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #19
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #21, !noalias !88
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !88
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #19, !noalias !88
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !88
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !88
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #19, !noalias !88
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !88
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %131, align 8, !noalias !88
  %132 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #19, !range !87
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #19
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #19, !range !87
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base"* %174, %"struct.std::__1::__hash_node_base"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #19, !range !87
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %214
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !87
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #19
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #19, !range !87
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #19
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #19, !range !87
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #19
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #15 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #21
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #21
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !91

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #19, !range !87
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #19
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #21
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #19
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #19
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #19, !range !87
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #19
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.17"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #21
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #19
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #19
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #19
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #21
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #21
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #19
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #19
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN3net9HostCache5EntryD2Ev(%"class.net::HostCache::Entry"* %11) #19
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2, i32 0, i32 0, i32 5
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %12) #19
  %13 = bitcast %"struct.std::__1::pair.120"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.std::__1::pair.120", %"struct.std::__1::pair.120"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #21
  br label %20

20:                                               ; preds = %4, %17
  %21 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %21) #21
  br label %22

22:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE4findIS4_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"*, %"struct.net::HostCache::Key"* dereferenceable(232)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less.226", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"struct.std::__1::__tuple_less.226", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %115, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 3, i32 0
  %19 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 4, i32 0
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 5, i32 0
  %21 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %22 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 3
  %26 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 5
  %27 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %1, i64 0, i32 6
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  %32 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 4, i32 0
  %33 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 5, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::__tuple_less.226", %"struct.std::__1::__tuple_less.226"* %3, i64 0, i32 0
  br label %35

35:                                               ; preds = %66, %13
  %36 = phi %"class.std::__1::__tree_end_node"* [ %9, %13 ], [ %68, %66 ]
  %37 = phi %"class.std::__1::__tree_node"* [ %11, %13 ], [ %69, %66 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #19
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 2, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 2, i32 0, i32 0, i32 3
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 2, i32 0, i32 0, i32 5
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 2, i32 0, i32 0, i32 6
  store i32* %38, i32** %15, align 8, !alias.scope !93
  store i32* %39, i32** %16, align 8, !alias.scope !93
  store %"class.std::__1::basic_string"* %40, %"class.std::__1::basic_string"** %17, align 8, !alias.scope !93
  store i32* %41, i32** %18, align 8, !alias.scope !93
  store %"class.net::NetworkIsolationKey"* %42, %"class.net::NetworkIsolationKey"** %19, align 8, !alias.scope !93
  store i8* %43, i8** %20, align 8, !alias.scope !93
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #19
  store i32* %22, i32** %28, align 8, !alias.scope !98
  store i32* %23, i32** %29, align 8, !alias.scope !98
  store %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"** %30, align 8, !alias.scope !98
  store i32* %25, i32** %31, align 8, !alias.scope !98
  store %"class.net::NetworkIsolationKey"* %26, %"class.net::NetworkIsolationKey"** %32, align 8, !alias.scope !98
  store i8* %27, i8** %33, align 8, !alias.scope !98
  %44 = load i32, i32* %38, align 4
  %45 = load i32, i32* %22, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %55, label %47

47:                                               ; preds = %35
  %48 = icmp slt i32 %45, %44
  br i1 %48, label %58, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %39, align 4
  %51 = load i32, i32* %23, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = icmp slt i32 %51, %50
  br i1 %54, label %58, label %59

55:                                               ; preds = %49, %35
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #19
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 1
  %57 = bitcast %"class.std::__1::__tree_node_base"** %56 to %"class.std::__1::__tree_node"**
  br label %66

58:                                               ; preds = %53, %47
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #19
  br label %63

59:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #19
  %60 = call zeroext i1 @_ZNSt3__112__tuple_lessILm4EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_18HostResolverSourceERKNS4_19NetworkIsolationKeyERKbEEESQ_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.226"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(48) %4, %"class.std::__1::tuple"* nonnull dereferenceable(48) %5) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #19
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 1
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  br i1 %60, label %66, label %63

63:                                               ; preds = %59, %58
  %64 = bitcast %"class.std::__1::__tree_node"* %37 to %"class.std::__1::__tree_node"**
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %37, i64 0, i32 0, i32 0
  br label %66

66:                                               ; preds = %63, %59, %55
  %67 = phi %"class.std::__1::__tree_node"** [ %64, %63 ], [ %57, %55 ], [ %62, %59 ]
  %68 = phi %"class.std::__1::__tree_end_node"* [ %65, %63 ], [ %36, %55 ], [ %36, %59 ]
  %69 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %67, align 8
  %70 = icmp eq %"class.std::__1::__tree_node"* %69, null
  br i1 %70, label %71, label %35

71:                                               ; preds = %66
  %72 = icmp eq %"class.std::__1::__tree_end_node"* %68, %9
  br i1 %72, label %115, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 4
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"struct.std::__1::__value_type"*
  %76 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %76) #19
  %77 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %22, i32** %77, align 8, !alias.scope !103
  %78 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 1, i32 0
  store i32* %23, i32** %78, align 8, !alias.scope !103
  %79 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 2, i32 0
  store %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"** %79, align 8, !alias.scope !103
  %80 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 3, i32 0
  store i32* %25, i32** %80, align 8, !alias.scope !103
  %81 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 4, i32 0
  store %"class.net::NetworkIsolationKey"* %26, %"class.net::NetworkIsolationKey"** %81, align 8, !alias.scope !103
  %82 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 5, i32 0
  store i8* %27, i8** %82, align 8, !alias.scope !103
  %83 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %83) #19
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 7
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to i32*
  %86 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %75, i64 0, i32 0, i32 0, i32 2
  %87 = insertelement <2 x %"class.std::__1::__tree_end_node"*> undef, %"class.std::__1::__tree_end_node"* %68, i32 0
  %88 = shufflevector <2 x %"class.std::__1::__tree_end_node"*> %87, <2 x %"class.std::__1::__tree_end_node"*> undef, <2 x i32> zeroinitializer
  %89 = getelementptr %"class.std::__1::__tree_end_node", <2 x %"class.std::__1::__tree_end_node"*> %88, <2 x i64> <i64 8, i64 9>
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 32
  %91 = bitcast %"class.std::__1::tuple"* %8 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %91, align 8, !alias.scope !108
  %92 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  store i32* %86, i32** %92, align 8, !alias.scope !108
  %93 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 2, i32 0
  %94 = bitcast %"class.std::__1::basic_string"** %93 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %94, align 8, !alias.scope !108
  %95 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 3, i32 0
  %96 = bitcast i32** %95 to <2 x %"class.std::__1::__tree_end_node"*>*
  store <2 x %"class.std::__1::__tree_end_node"*> %89, <2 x %"class.std::__1::__tree_end_node"*>* %96, align 8, !alias.scope !108
  %97 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 5, i32 0
  %98 = bitcast i8** %97 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %90, %"class.std::__1::__tree_end_node"** %98, align 8, !alias.scope !108
  %99 = load i32, i32* %22, align 4
  %100 = load i32, i32* %85, align 4
  %101 = icmp slt i32 %99, %100
  br i1 %101, label %110, label %102

102:                                              ; preds = %73
  %103 = icmp slt i32 %100, %99
  br i1 %103, label %111, label %104

104:                                              ; preds = %102
  %105 = load i32, i32* %23, align 4
  %106 = load i32, i32* %86, align 4
  %107 = icmp slt i32 %105, %106
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = icmp slt i32 %106, %105
  br i1 %109, label %111, label %112

110:                                              ; preds = %73, %104
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %83) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %76) #19
  br label %115

111:                                              ; preds = %102, %108
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %83) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %76) #19
  br label %116

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"struct.std::__1::__tuple_less.226", %"struct.std::__1::__tuple_less.226"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %113) #19
  %114 = call zeroext i1 @_ZNSt3__112__tuple_lessILm4EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_18HostResolverSourceERKNS4_19NetworkIsolationKeyERKbEEESQ_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.226"* nonnull %6, %"class.std::__1::tuple"* nonnull dereferenceable(48) %7, %"class.std::__1::tuple"* nonnull dereferenceable(48) %8) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %113) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %83) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %76) #19
  br i1 %114, label %115, label %116

115:                                              ; preds = %71, %2, %110, %112
  br label %116

116:                                              ; preds = %112, %111, %115
  %117 = phi %"class.std::__1::__tree_end_node"* [ %9, %115 ], [ %68, %111 ], [ %68, %112 ]
  ret %"class.std::__1::__tree_end_node"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm4EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_18HostResolverSourceERKNS4_19NetworkIsolationKeyERKbEEESQ_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.226"*, %"class.std::__1::tuple"* dereferenceable(48), %"class.std::__1::tuple"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.227", align 1
  %5 = alloca %"class.std::__1::tuple.230", align 8
  %6 = alloca %"class.std::__1::tuple.230", align 8
  %7 = alloca %"struct.std::__1::__tuple_less.227", align 1
  %8 = alloca %"class.std::__1::tuple.230", align 8
  %9 = alloca %"class.std::__1::tuple.230", align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = icmp ult i64 %21, %29
  %31 = select i1 %30, i64 %21, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %44, label %33

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %37 = select i1 %25, i8* %35, i8* %36
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %41 = select i1 %17, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %37, i8* %41, i64 %31) #19
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %33, %3
  %45 = icmp ult i64 %29, %21
  br i1 %45, label %124, label %48

46:                                               ; preds = %33
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %124, label %58

48:                                               ; preds = %44
  br i1 %32, label %63, label %49

49:                                               ; preds = %48
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %55 = select i1 %17, i8* %51, i8* %54
  %56 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %57 = select i1 %25, i8* %53, i8* %56
  br label %58

58:                                               ; preds = %49, %46
  %59 = phi i8* [ %57, %49 ], [ %37, %46 ]
  %60 = phi i8* [ %55, %49 ], [ %41, %46 ]
  %61 = tail call i32 @memcmp(i8* %60, i8* %59, i64 %31) #19
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %58, %48
  br i1 %30, label %124, label %66

64:                                               ; preds = %58
  %65 = icmp slt i32 %61, 0
  br i1 %65, label %124, label %66

66:                                               ; preds = %63, %64
  %67 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 3, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 3, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = load i32, i32* %71, align 4
  %73 = icmp slt i32 %69, %72
  br i1 %73, label %124, label %74

74:                                               ; preds = %66
  %75 = icmp slt i32 %72, %69
  br i1 %75, label %124, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 4, i32 0
  %78 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 4, i32 0
  %80 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %79, align 8
  %81 = bitcast %"class.std::__1::tuple.230"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #19
  %82 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %78, i64 0, i32 1
  %83 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %78, i64 0, i32 2
  %84 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %78, i64 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %82, %"class.absl::optional"** %85, align 8, !alias.scope !113
  %86 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %83, %"class.absl::optional"** %86, align 8, !alias.scope !113
  %87 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %5, i64 0, i32 0, i32 2, i32 0
  store i8* %84, i8** %87, align 8, !alias.scope !113
  %88 = bitcast %"class.std::__1::tuple.230"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #19
  %89 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %80, i64 0, i32 1
  %90 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %80, i64 0, i32 2
  %91 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %80, i64 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %89, %"class.absl::optional"** %92, align 8, !alias.scope !116
  %93 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %90, %"class.absl::optional"** %93, align 8, !alias.scope !116
  %94 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %6, i64 0, i32 0, i32 2, i32 0
  store i8* %91, i8** %94, align 8, !alias.scope !116
  %95 = getelementptr inbounds %"struct.std::__1::__tuple_less.227", %"struct.std::__1::__tuple_less.227"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %95) #19
  %96 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.227"* nonnull %4, %"class.std::__1::tuple.230"* nonnull dereferenceable(24) %5, %"class.std::__1::tuple.230"* nonnull dereferenceable(24) %6) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %95) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #19
  br i1 %96, label %124, label %97

97:                                               ; preds = %76
  %98 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %79, align 8
  %99 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %77, align 8
  %100 = bitcast %"class.std::__1::tuple.230"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #19
  %101 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %98, i64 0, i32 1
  %102 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %98, i64 0, i32 2
  %103 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %98, i64 0, i32 0
  %104 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %101, %"class.absl::optional"** %104, align 8, !alias.scope !119
  %105 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %102, %"class.absl::optional"** %105, align 8, !alias.scope !119
  %106 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %8, i64 0, i32 0, i32 2, i32 0
  store i8* %103, i8** %106, align 8, !alias.scope !119
  %107 = bitcast %"class.std::__1::tuple.230"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #19
  %108 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %99, i64 0, i32 1
  %109 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %99, i64 0, i32 2
  %110 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %99, i64 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %108, %"class.absl::optional"** %111, align 8, !alias.scope !122
  %112 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %109, %"class.absl::optional"** %112, align 8, !alias.scope !122
  %113 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %9, i64 0, i32 0, i32 2, i32 0
  store i8* %110, i8** %113, align 8, !alias.scope !122
  %114 = getelementptr inbounds %"struct.std::__1::__tuple_less.227", %"struct.std::__1::__tuple_less.227"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %114) #19
  %115 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.227"* nonnull %7, %"class.std::__1::tuple.230"* nonnull dereferenceable(24) %8, %"class.std::__1::tuple.230"* nonnull dereferenceable(24) %9) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %114) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #19
  br i1 %115, label %124, label %116

116:                                              ; preds = %97
  %117 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 5, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = load i8, i8* %118, align 1, !range !2
  %120 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 5, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = load i8, i8* %121, align 1, !range !2
  %123 = icmp ult i8 %119, %122
  br label %124

124:                                              ; preds = %63, %44, %74, %66, %76, %97, %116, %64, %46
  %125 = phi i1 [ true, %46 ], [ false, %64 ], [ true, %66 ], [ false, %74 ], [ %123, %116 ], [ true, %76 ], [ false, %97 ], [ true, %44 ], [ false, %63 ]
  ret i1 %125
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.227"*, %"class.std::__1::tuple.230"* dereferenceable(24), %"class.std::__1::tuple.230"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %77, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %16, %"class.net::SchemefulSite"* dereferenceable(80) %17) #19
  br i1 %18, label %77, label %19

19:                                               ; preds = %15
  %20 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %21 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  br label %22

22:                                               ; preds = %19, %3
  %23 = phi %"class.absl::optional"* [ %21, %19 ], [ %5, %3 ]
  %24 = phi %"class.absl::optional"* [ %20, %19 ], [ %7, %3 ]
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %33, %"class.net::SchemefulSite"* dereferenceable(80) %34) #19
  br i1 %35, label %77, label %36

36:                                               ; preds = %22, %32
  %37 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 1, i32 0
  %38 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %2, i64 0, i32 0, i32 1, i32 0
  %40 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %49, %"class.net::SchemefulSite"* dereferenceable(80) %50) #19
  br i1 %51, label %77, label %52

52:                                               ; preds = %48
  %53 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %54 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  br label %55

55:                                               ; preds = %52, %36
  %56 = phi %"class.absl::optional"* [ %54, %52 ], [ %38, %36 ]
  %57 = phi %"class.absl::optional"* [ %53, %52 ], [ %40, %36 ]
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %66, %"class.net::SchemefulSite"* dereferenceable(80) %67) #19
  br i1 %68, label %77, label %69

69:                                               ; preds = %65, %55
  %70 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %1, i64 0, i32 0, i32 2, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = getelementptr inbounds %"class.std::__1::tuple.230", %"class.std::__1::tuple.230"* %2, i64 0, i32 0, i32 2, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i8, i8* %74, align 1, !range !2
  %76 = icmp ult i8 %72, %75
  br label %77

77:                                               ; preds = %28, %11, %69, %65, %61, %48, %44, %32, %15
  %78 = phi i1 [ true, %15 ], [ false, %32 ], [ %76, %69 ], [ true, %48 ], [ false, %65 ], [ true, %44 ], [ false, %61 ], [ true, %11 ], [ false, %28 ]
  ret i1 %78
}

declare zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #19
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 33
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.net::HostCache::Entry"*
  tail call void @_ZN3net9HostCache5EntryD2Ev(%"class.net::HostCache::Entry"* %47) #19
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 9
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.net::NetworkIsolationKey"*
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %49) #19
  %50 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %38
  %55 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #21
  br label %57

57:                                               ; preds = %38, %54
  %58 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %58) #21
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRKS4_S5_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"struct.net::HostCache::Key"* dereferenceable(232), %"struct.net::HostCache::Key"* dereferenceable(232), %"class.net::HostCache::Entry"* dereferenceable(200)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"struct.net::HostCache::Key"* dereferenceable(232) %1)
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %11, label %61

11:                                               ; preds = %4
  %12 = call i8* @_Znwm(i64 464) #21, !noalias !125
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast %"struct.net::HostCache::Key"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !noalias !125
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = bitcast %"struct.net::HostCache::Key"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %19, i64 24, i1 false) #19, !noalias !125
  br label %26

20:                                               ; preds = %11
  %21 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  %22 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !noalias !125
  %24 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !noalias !125
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %23, i64 %25) #19, !noalias !125
  br label %26

26:                                               ; preds = %18, %20
  %27 = getelementptr inbounds i8, i8* %12, i64 56
  %28 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 1
  %29 = bitcast i32* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %29, i64 12, i1 false) #19, !noalias !125
  %30 = getelementptr inbounds i8, i8* %12, i64 72
  %31 = bitcast i8* %30 to %"class.net::NetworkIsolationKey"*
  %32 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 5
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %31, %"class.net::NetworkIsolationKey"* dereferenceable(184) %32) #19, !noalias !125
  %33 = getelementptr inbounds i8, i8* %12, i64 256
  %34 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 6
  %35 = load i8, i8* %34, align 8, !range !2, !noalias !125
  store i8 %35, i8* %33, align 8, !noalias !125
  %36 = getelementptr inbounds i8, i8* %12, i64 264
  %37 = bitcast i8* %36 to %"class.net::HostCache::Entry"*
  call void @_ZN3net9HostCache5EntryC2EOS1_(%"class.net::HostCache::Entry"* %37, %"class.net::HostCache::Entry"* dereferenceable(200) %3) #19, !noalias !125
  %38 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast i8* %12 to %"class.std::__1::__tree_node"*
  %41 = bitcast i8* %12 to %"class.std::__1::__tree_node_base"*
  %42 = getelementptr inbounds i8, i8* %12, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #19
  %43 = bitcast i8* %42 to i64*
  store i64 %39, i64* %43, align 8
  %44 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8**
  store i8* %12, i8** %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %26
  %51 = ptrtoint %"class.std::__1::__tree_node_base"* %48 to i64
  %52 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %51, i64* %52, align 8
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  br label %54

54:                                               ; preds = %50, %26
  %55 = phi %"class.std::__1::__tree_node_base"* [ %41, %26 ], [ %53, %50 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %57, %"class.std::__1::__tree_node_base"* %55) #19
  %58 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %54, %4
  %62 = phi i8 [ 1, %54 ], [ 0, %4 ]
  %63 = phi %"class.std::__1::__tree_node"* [ %40, %54 ], [ %9, %4 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %65 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %64, 0
  %66 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %65, i8 %62, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE12__find_equalIS4_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISI_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"struct.net::HostCache::Key"* dereferenceable(232)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.226", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"struct.std::__1::__tuple_less.226", align 1
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node"* %12, null
  br i1 %13, label %113, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %17 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 2
  %19 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 3
  %21 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 5
  %22 = getelementptr inbounds %"struct.net::HostCache::Key", %"struct.net::HostCache::Key"* %2, i64 0, i32 6
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  %27 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 4, i32 0
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 5, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 2, i32 0
  %33 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 3, i32 0
  %34 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 4, i32 0
  %35 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 5, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::__tuple_less.226", %"struct.std::__1::__tuple_less.226"* %4, i64 0, i32 0
  %37 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %38 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 2, i32 0
  %41 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 3, i32 0
  %42 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 4, i32 0
  %43 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 5, i32 0
  %44 = bitcast %"class.std::__1::tuple"* %9 to i8*
  %45 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 2, i32 0
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 3, i32 0
  %49 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 4, i32 0
  %50 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 5, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::__tuple_less.226", %"struct.std::__1::__tuple_less.226"* %7, i64 0, i32 0
  br label %52

52:                                               ; preds = %14, %109
  %53 = phi %"class.std::__1::__tree_node"* [ %112, %109 ], [ %12, %14 ]
  %54 = phi %"class.std::__1::__tree_node_base"** [ %111, %109 ], [ %15, %14 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #19
  store i32* %17, i32** %23, align 8, !alias.scope !128
  store i32* %18, i32** %24, align 8, !alias.scope !128
  store %"class.std::__1::basic_string"* %19, %"class.std::__1::basic_string"** %25, align 8, !alias.scope !128
  store i32* %20, i32** %26, align 8, !alias.scope !128
  store %"class.net::NetworkIsolationKey"* %21, %"class.net::NetworkIsolationKey"** %27, align 8, !alias.scope !128
  store i8* %22, i8** %28, align 8, !alias.scope !128
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #19
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 2, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 2, i32 0, i32 0, i32 2
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 2, i32 0, i32 0, i32 3
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 2, i32 0, i32 0, i32 5
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 2, i32 0, i32 0, i32 6
  store i32* %55, i32** %30, align 8, !alias.scope !133
  store i32* %56, i32** %31, align 8, !alias.scope !133
  store %"class.std::__1::basic_string"* %57, %"class.std::__1::basic_string"** %32, align 8, !alias.scope !133
  store i32* %58, i32** %33, align 8, !alias.scope !133
  store %"class.net::NetworkIsolationKey"* %59, %"class.net::NetworkIsolationKey"** %34, align 8, !alias.scope !133
  store i8* %60, i8** %35, align 8, !alias.scope !133
  %61 = load i32, i32* %17, align 4
  %62 = load i32, i32* %55, align 4
  %63 = icmp slt i32 %61, %62
  br i1 %63, label %72, label %64

64:                                               ; preds = %52
  %65 = icmp slt i32 %62, %61
  br i1 %65, label %73, label %66

66:                                               ; preds = %64
  %67 = load i32, i32* %18, align 4
  %68 = load i32, i32* %56, align 4
  %69 = icmp slt i32 %67, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = icmp slt i32 %68, %67
  br i1 %71, label %73, label %74

72:                                               ; preds = %52, %66
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #19
  br label %79

73:                                               ; preds = %64, %70
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #19
  br label %85

74:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #19
  %75 = call zeroext i1 @_ZNSt3__112__tuple_lessILm4EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_18HostResolverSourceERKNS4_19NetworkIsolationKeyERKbEEESQ_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.226"* nonnull %4, %"class.std::__1::tuple"* nonnull dereferenceable(48) %5, %"class.std::__1::tuple"* nonnull dereferenceable(48) %6) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #19
  br i1 %75, label %79, label %76

76:                                               ; preds = %74
  %77 = load i32, i32* %55, align 4
  %78 = load i32, i32* %17, align 4
  br label %85

79:                                               ; preds = %72, %74
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, null
  br i1 %82, label %83, label %109

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %84, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %115

85:                                               ; preds = %76, %73
  %86 = phi i32 [ %78, %76 ], [ %61, %73 ]
  %87 = phi i32 [ %77, %76 ], [ %62, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #19
  store i32* %55, i32** %38, align 8, !alias.scope !138
  store i32* %56, i32** %39, align 8, !alias.scope !138
  store %"class.std::__1::basic_string"* %57, %"class.std::__1::basic_string"** %40, align 8, !alias.scope !138
  store i32* %58, i32** %41, align 8, !alias.scope !138
  store %"class.net::NetworkIsolationKey"* %59, %"class.net::NetworkIsolationKey"** %42, align 8, !alias.scope !138
  store i8* %60, i8** %43, align 8, !alias.scope !138
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %44) #19
  store i32* %17, i32** %45, align 8, !alias.scope !143
  store i32* %18, i32** %46, align 8, !alias.scope !143
  store %"class.std::__1::basic_string"* %19, %"class.std::__1::basic_string"** %47, align 8, !alias.scope !143
  store i32* %20, i32** %48, align 8, !alias.scope !143
  store %"class.net::NetworkIsolationKey"* %21, %"class.net::NetworkIsolationKey"** %49, align 8, !alias.scope !143
  store i8* %22, i8** %50, align 8, !alias.scope !143
  %88 = icmp slt i32 %87, %86
  br i1 %88, label %97, label %89

89:                                               ; preds = %85
  %90 = icmp slt i32 %86, %87
  br i1 %90, label %98, label %91

91:                                               ; preds = %89
  %92 = load i32, i32* %56, align 4
  %93 = load i32, i32* %18, align 4
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = icmp slt i32 %93, %92
  br i1 %96, label %98, label %99

97:                                               ; preds = %85, %91
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #19
  br label %101

98:                                               ; preds = %89, %95
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #19
  br label %107

99:                                               ; preds = %95
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %51) #19
  %100 = call zeroext i1 @_ZNSt3__112__tuple_lessILm4EEclINS_5tupleIJRKN3net12DnsQueryTypeERKiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS4_18HostResolverSourceERKNS4_19NetworkIsolationKeyERKbEEESQ_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.226"* nonnull %7, %"class.std::__1::tuple"* nonnull dereferenceable(48) %8, %"class.std::__1::tuple"* nonnull dereferenceable(48) %9) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %51) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #19
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #19
  br i1 %100, label %101, label %107

101:                                              ; preds = %97, %99
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %109

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %115

107:                                              ; preds = %99, %98
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %108, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %115

109:                                              ; preds = %101, %79
  %110 = phi %"class.std::__1::__tree_node_base"* [ %81, %79 ], [ %103, %101 ]
  %111 = phi %"class.std::__1::__tree_node_base"** [ %80, %79 ], [ %102, %101 ]
  %112 = bitcast %"class.std::__1::__tree_node_base"* %110 to %"class.std::__1::__tree_node"*
  br label %52

113:                                              ; preds = %3
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %1, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  br label %115

115:                                              ; preds = %113, %107, %105, %83
  %116 = phi %"class.std::__1::__tree_node_base"** [ %80, %83 ], [ %102, %105 ], [ %54, %107 ], [ %114, %113 ]
  ret %"class.std::__1::__tree_node_base"** %116
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #18

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nofree nounwind readonly }
attributes #19 = { nounwind }
attributes #20 = { noreturn nounwind }
attributes #21 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!17 = !{!15, !18}
!18 = distinct !{!18, !19, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!23 = distinct !{!23, !24, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZNSt3__123__copy_backward_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__123__copy_backward_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!28 = distinct !{!28, !29, !"_ZNSt3__113copy_backwardINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__113copy_backwardINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!30 = !{!26}
!31 = !{!28}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE21__const_iterator_castENS_14__bit_iteratorIS3_Lb1ELm0EEE: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE21__const_iterator_castENS_14__bit_iteratorIS3_Lb1ELm0EEE"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!38 = distinct !{!38, !39, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!43 = !{!41, !44}
!44 = distinct !{!44, !45, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!49 = !{!50, !47}
!50 = distinct !{!50, !51, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZNSt3__123__copy_backward_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__123__copy_backward_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!55 = distinct !{!55, !56, !"_ZNSt3__113copy_backwardINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__113copy_backwardINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!57 = !{!53}
!58 = !{!55}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!62 = distinct !{!62, !63, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!64 = !{!60}
!65 = !{!62}
!66 = !{!67, !69}
!67 = distinct !{!67, !68, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!68 = distinct !{!68, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!69 = distinct !{!69, !70, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!70 = distinct !{!70, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!74 = !{!75, !72}
!75 = distinct !{!75, !76, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!76 = distinct !{!76, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!83 = !{!81, !84}
!84 = distinct !{!84, !85, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!86 = !{!84}
!87 = !{i64 0, i64 65}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!90 = distinct !{!90, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!91 = distinct !{!91, !92}
!92 = !{!"llvm.loop.unroll.disable"}
!93 = !{!94, !96}
!94 = distinct !{!94, !95, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!95 = distinct !{!95, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_"}
!96 = distinct !{!96, !97, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_: argument 0"}
!97 = distinct !{!97, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_"}
!98 = !{!99, !101}
!99 = distinct !{!99, !100, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_"}
!101 = distinct !{!101, !102, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_: argument 0"}
!102 = distinct !{!102, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_"}
!103 = !{!104, !106}
!104 = distinct !{!104, !105, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_"}
!106 = distinct !{!106, !107, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_: argument 0"}
!107 = distinct !{!107, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_"}
!108 = !{!109, !111}
!109 = distinct !{!109, !110, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!110 = distinct !{!110, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_"}
!111 = distinct !{!111, !112, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_: argument 0"}
!112 = distinct !{!112, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!115 = distinct !{!115, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!118 = distinct !{!118, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!124 = distinct !{!124, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKS4_S5_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_: argument 0"}
!127 = distinct !{!127, !"_ZNSt3__16__treeINS_12__value_typeIN3net9HostCache3KeyENS3_5EntryEEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKS4_S5_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_"}
!128 = !{!129, !131}
!129 = distinct !{!129, !130, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!130 = distinct !{!130, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_"}
!131 = distinct !{!131, !132, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_: argument 0"}
!132 = distinct !{!132, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_"}
!133 = !{!134, !136}
!134 = distinct !{!134, !135, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!135 = distinct !{!135, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_"}
!136 = distinct !{!136, !137, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_: argument 0"}
!137 = distinct !{!137, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_"}
!138 = !{!139, !141}
!139 = distinct !{!139, !140, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!140 = distinct !{!140, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_"}
!141 = distinct !{!141, !142, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_: argument 0"}
!142 = distinct !{!142, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_"}
!143 = !{!144, !146}
!144 = distinct !{!144, !145, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!145 = distinct !{!145, !"_ZNSt3__13tieIJKN3net12DnsQueryTypeEKiKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKNS1_18HostResolverSourceEKNS1_19NetworkIsolationKeyEKbEEENS_5tupleIJDpRT_EEESK_"}
!146 = distinct !{!146, !147, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_: argument 0"}
!147 = distinct !{!147, !"_ZNK3net9HostCache3Key8GetTupleEPKS1_"}
