; ModuleID = '../../third_party/blink/renderer/core/layout/ng/inline/ng_inline_node.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/inline/ng_inline_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::NGLineLayoutOpportunity" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGInlineNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1798", %"class.std::__1::unique_ptr.1803", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1824, %"class.blink::Persistent.1825" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2127" }
%"class.blink::Member.2127" = type { %"class.blink::MemberBase.2128" }
%"class.blink::MemberBase.2128" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2129" }
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2150 }
%class.scoped_refptr.2150 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2160" }
%"class.blink::Member.2160" = type { %"class.blink::MemberBase.2161" }
%"class.blink::MemberBase.2161" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2156" }
%"class.blink::MemberBase.2156" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2157" }
%"class.blink::MemberBase.2157" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2158" }
%"class.blink::MemberBase.2158" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2159" }
%"class.blink::MemberBase.2159" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2151", %"class.WTF::Vector.2151" }
%"class.WTF::Vector.2151" = type { %"class.WTF::VectorBuffer.2152" }
%"class.WTF::VectorBuffer.2152" = type { %"class.WTF::VectorBufferBase.2153" }
%"class.WTF::VectorBufferBase.2153" = type { %class.scoped_refptr.2150*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2136 }
%class.scoped_refptr.2136 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2137", %"class.WTF::Vector.630", %"class.WTF::Vector.2139", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2137" = type { %"class.base::RefCounted.2138" }
%"class.base::RefCounted.2138" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2139" = type { %"class.WTF::VectorBuffer.2140" }
%"class.WTF::VectorBuffer.2140" = type { %"class.WTF::VectorBufferBase.2141" }
%"class.WTF::VectorBufferBase.2141" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2142 }
%union.anon.2142 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1779, %union.anon.1797, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1634, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1634 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1635 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1635 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1669 }
%class.scoped_refptr.1669 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1670", [4 x i8], %"class.std::__1::unique_ptr.1672", i64, %"class.WTF::Vector.1676", %"class.WTF::Vector.1681", %"class.WTF::Vector.1687", %"class.WTF::Vector.1705", %class.scoped_refptr.1546, %"class.WTF::HashMap.1711", %"class.WTF::Vector.1716", %"class.WTF::Vector.1676", %"class.WTF::Vector.1721", %"class.WTF::HashMap.1726", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1670" = type { %"class.base::RefCountedThreadSafe.1671" }
%"class.base::RefCountedThreadSafe.1671" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { i8* }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [8 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %class.scoped_refptr.1684*, i32, i32 }
%class.scoped_refptr.1684 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1691", %"class.std::__1::unique_ptr.1697" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1690 }
%class.scoped_refptr.1690 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1708", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1708" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1715" = type opaque
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.1718" }
%"class.WTF::VectorBufferBase.1718" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [16 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1730" = type { i8**, %"class.std::__1::unique_ptr.2162" }
%"class.std::__1::unique_ptr.2162" = type { %"class.std::__1::__compressed_pair.2163" }
%"class.std::__1::__compressed_pair.2163" = type { %"struct.std::__1::__compressed_pair_elem.2164" }
%"struct.std::__1::__compressed_pair_elem.2164" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1731" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1734, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1751" }
%class.scoped_refptr.1734 = type { %"class.base::RefCountedData.1735"* }
%"class.base::RefCountedData.1735" = type { %"class.base::RefCountedThreadSafe.1736", %"class.WTF::Vector.1737" }
%"class.base::RefCountedThreadSafe.1736" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %class.scoped_refptr.1740*, i32, i32 }
%class.scoped_refptr.1740 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1741", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1743" }
%"class.WTF::RefCounted.1741" = type { %"class.base::RefCounted.1742" }
%"class.base::RefCounted.1742" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1754", %"class.WTF::Vector.1767", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756", [320 x i8] }
%"class.WTF::VectorBufferBase.1756" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1757", %"class.WTF::Vector.1757", %class.scoped_refptr.1762, i8, [7 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [8 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1762 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1763", %"class.WTF::Vector.1737", %"class.WTF::Vector.1737" }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [288 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1757", %"class.WTF::Vector.1757" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1770 }
%class.scoped_refptr.1770 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1779 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1780", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1782, %"class.std::__1::unique_ptr.1785" }
%"class.WTF::RefCounted.1780" = type { %"class.base::RefCounted.1781" }
%"class.base::RefCounted.1781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1782 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.WTF::Vector.1788"* }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1791 }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1791 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%union.anon.1797 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1636", %class.scoped_refptr.1841, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1842, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1669, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1843", %"class.absl::optional.1859" }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1841 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1864", [4 x i8], %union.anon.1866, %class.scoped_refptr.1841, i32, [4 x i8] }>
%"class.WTF::RefCounted.1864" = type { %"class.base::RefCounted.1865" }
%"class.base::RefCounted.1865" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1866 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%union.anon.1842 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1843" = type { %"class.std::__1::__compressed_pair.1844" }
%"class.std::__1::__compressed_pair.1844" = type { %"struct.std::__1::__compressed_pair_elem.1845" }
%"struct.std::__1::__compressed_pair_elem.1845" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1846", %"class.WTF::Vector.1851", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1846" = type { %"class.WTF::VectorBuffer.1847" }
%"class.WTF::VectorBuffer.1847" = type { %"class.WTF::VectorBufferBase.1848" }
%"class.WTF::VectorBufferBase.1848" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1851" = type { %"class.WTF::VectorBuffer.1852" }
%"class.WTF::VectorBuffer.1852" = type { %"class.WTF::VectorBufferBase.1853" }
%"class.WTF::VectorBufferBase.1853" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1859" = type { %"class.absl::optional_internal::optional_data.1860" }
%"class.absl::optional_internal::optional_data.1860" = type { %"class.absl::optional_internal::optional_data_base.1861" }
%"class.absl::optional_internal::optional_data_base.1861" = type { %"class.absl::optional_internal::optional_data_dtor_base.1862" }
%"class.absl::optional_internal::optional_data_dtor_base.1862" = type { i8, %union.anon.1863 }
%union.anon.1863 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800", [8 x i8] }
%"class.WTF::VectorBufferBase.1800" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1806", %"class.absl::optional.1811", %"class.absl::optional.1816" }
%"class.absl::optional.1806" = type { %"class.absl::optional_internal::optional_data.1807" }
%"class.absl::optional_internal::optional_data.1807" = type { %"class.absl::optional_internal::optional_data_base.1808" }
%"class.absl::optional_internal::optional_data_base.1808" = type { %"class.absl::optional_internal::optional_data_dtor_base.1809" }
%"class.absl::optional_internal::optional_data_dtor_base.1809" = type { i8, %union.anon.1810 }
%union.anon.1810 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, %union.anon.1820 }
%union.anon.1820 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1824 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1825" = type { %"class.blink::PersistentBase.1826" }
%"class.blink::PersistentBase.1826" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1829", %"struct.blink::PhysicalRect", %"class.blink::Member.1839" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.WTF::HashSet.1832"* }
%"class.WTF::HashSet.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1920", %"class.std::__1::unique_ptr.1946", %"class.std::__1::unique_ptr.1871" }
%"class.WTF::Vector.1920" = type { %"class.WTF::VectorBuffer.1921" }
%"class.WTF::VectorBuffer.1921" = type { %"class.WTF::VectorBufferBase.1922" }
%"class.WTF::VectorBufferBase.1922" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.std::__1::unique_ptr.1946" = type { %"class.std::__1::__compressed_pair.1947" }
%"class.std::__1::__compressed_pair.1947" = type { %"struct.std::__1::__compressed_pair_elem.1948" }
%"struct.std::__1::__compressed_pair_elem.1948" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1949", %"class.WTF::Vector.1954" }
%"class.WTF::Vector.1949" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951" }
%"class.WTF::VectorBufferBase.1951" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1954" = type { %"class.WTF::VectorBuffer.1955" }
%"class.WTF::VectorBuffer.1955" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.1871" = type { %"class.std::__1::__compressed_pair.1872" }
%"class.std::__1::__compressed_pair.1872" = type { %"struct.std::__1::__compressed_pair_elem.1873" }
%"struct.std::__1::__compressed_pair_elem.1873" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1874", %"class.WTF::HashMap.1879", %"class.WTF::String" }
%"class.WTF::Vector.1874" = type { %"class.WTF::VectorBuffer.1875" }
%"class.WTF::VectorBuffer.1875" = type { %"class.WTF::VectorBufferBase.1876" }
%"class.WTF::VectorBufferBase.1876" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1879" = type { %"class.WTF::HashTable.1880" }
%"class.WTF::HashTable.1880" = type <{ %"struct.WTF::KeyValuePair.1883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1883" = type { %"class.blink::Persistent.2168", %"struct.std::__1::pair.2171" }
%"class.blink::Persistent.2168" = type { %"class.blink::PersistentBase.2169" }
%"class.blink::PersistentBase.2169" = type { %"class.blink::Node"*, %"class.blink::PersistentNodePtr.2170" }
%"class.blink::PersistentNodePtr.2170" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::pair.2171" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%class.scoped_refptr.2076 = type { %"class.blink::NGInlineBreakToken"* }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2131" }
%"class.WTF::Vector.2131" = type { %"class.WTF::VectorBuffer.2132" }
%"class.WTF::VectorBuffer.2132" = type { %"class.WTF::VectorBufferBase.2133" }
%"class.WTF::VectorBufferBase.2133" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1641", %"class.absl::optional.1641", %"class.absl::optional.1641" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2146" }
%"class.WTF::VectorBuffer.2146" = type { %"class.WTF::VectorBufferBase.2147", [32 x i8] }
%"class.WTF::VectorBufferBase.2147" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::LazyLineBreakIterator" = type <{ %"class.WTF::String", %"class.WTF::AtomicString", %"class.icu_69::BreakIterator"*, [2 x i16], [4 x i8], %"struct.blink::LazyLineBreakIterator::PriorContext", i32, i32, i32, [4 x i8] }>
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"struct.blink::LazyLineBreakIterator::PriorContext" = type <{ i16*, i32, [4 x i8] }>
%"class.blink::HarfBuzzShaper" = type { %"class.WTF::String", %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::ShapeResultSpacing" = type <{ %"class.WTF::String"*, float, float, float, float, i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2275 = type { i32 }
%union.anon.2280 = type { %"struct.blink::NGLineBreaker::TrailingCollapsibleSpace" }
%"struct.blink::NGLineBreaker::TrailingCollapsibleSpace" = type { %"struct.blink::NGInlineItemResult"*, %class.scoped_refptr.2281 }
%"struct.blink::NGInlineItemResult" = type { %"class.blink::NGInlineItem"*, i32, %"struct.blink::NGTextOffset", %"class.absl::optional.2271", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %class.scoped_refptr.2281, %"class.WTF::String", %class.scoped_refptr.1923, %class.scoped_refptr.1631, %"class.absl::optional.2285", %"struct.blink::NGLineBoxStrut", %"struct.blink::NGLineBoxStrut", %"struct.blink::NGLineBoxStrut", i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.absl::optional.2271" = type { %"class.absl::optional_internal::optional_data.2272" }
%"class.absl::optional_internal::optional_data.2272" = type { %"class.absl::optional_internal::optional_data_base.2273" }
%"class.absl::optional_internal::optional_data_base.2273" = type { %"class.absl::optional_internal::optional_data_dtor_base.2274" }
%"class.absl::optional_internal::optional_data_dtor_base.2274" = type { i8, %union.anon.2275 }
%class.scoped_refptr.1923 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1924", float, %"class.blink::FloatRect", %"class.WTF::Vector.1926", %class.scoped_refptr.1932, %"class.std::__1::unique_ptr.1933", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1924" = type { %"class.base::RefCounted.1925" }
%"class.base::RefCounted.1925" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1926" = type { %"class.WTF::VectorBuffer.1927" }
%"class.WTF::VectorBuffer.1927" = type { %"class.WTF::VectorBufferBase.1928" }
%"class.WTF::VectorBufferBase.1928" = type { %class.scoped_refptr.1929*, i32, i32 }
%class.scoped_refptr.1929 = type opaque
%class.scoped_refptr.1932 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.1933" = type { %"class.std::__1::__compressed_pair.1934" }
%"class.std::__1::__compressed_pair.1934" = type { %"struct.std::__1::__compressed_pair_elem.1935" }
%"struct.std::__1::__compressed_pair_elem.1935" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1936", i32, float }
%"class.WTF::Vector.1936" = type { %"class.WTF::VectorBuffer.1937" }
%"class.WTF::VectorBuffer.1937" = type { %"class.WTF::VectorBufferBase.1938" }
%"class.WTF::VectorBufferBase.1938" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.absl::optional.2285" = type { %"class.absl::optional_internal::optional_data.2286" }
%"class.absl::optional_internal::optional_data.2286" = type { %"class.absl::optional_internal::optional_data_base.2287" }
%"class.absl::optional_internal::optional_data_base.2287" = type { %"class.absl::optional_internal::optional_data_dtor_base.2288" }
%"class.absl::optional_internal::optional_data_dtor_base.2288" = type { i8, [7 x i8], %union.anon.2289 }
%union.anon.2289 = type { %"struct.blink::NGPositionedFloat" }
%"struct.blink::NGPositionedFloat" = type <{ %class.scoped_refptr.1631, %"struct.blink::NGBfcOffset", i8, [7 x i8] }>
%"struct.blink::NGLineBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2281 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.2282", %class.scoped_refptr.1932, i32, i32, i32, i32, float, i32, [0 x %struct.anon.2284] }
%"class.WTF::RefCounted.2282" = type { %"class.base::RefCounted.2283" }
%"class.base::RefCounted.2283" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.2284 = type { i8* }
%"class.WTF::Vector.2266" = type { %"class.WTF::VectorBuffer.2267" }
%"class.WTF::VectorBuffer.2267" = type { %"class.WTF::VectorBufferBase.2268", [192 x i8] }
%"class.WTF::VectorBufferBase.2268" = type { %"struct.blink::NGPositionedFloat"*, i32, i32 }
%"class.WTF::Vector.2104" = type { %"class.WTF::VectorBuffer.2105" }
%"class.WTF::VectorBuffer.2105" = type { %"class.WTF::VectorBufferBase.2106", [256 x i8] }
%"class.WTF::VectorBufferBase.2106" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1923, %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::Vector.2290" = type { %"class.WTF::VectorBuffer.2291" }
%"class.WTF::VectorBuffer.2291" = type { %"class.WTF::VectorBufferBase.2292" }
%"class.WTF::VectorBufferBase.2292" = type { %class.scoped_refptr.2293*, i32, i32 }
%class.scoped_refptr.2293 = type { %"class.blink::NGBlockBreakToken"* }
%"class.blink::NGBlockBreakToken" = type { %"class.blink::NGBreakToken.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [0 x %"class.blink::NGBreakToken"*] }
%"class.blink::LayoutUnit" = type { i32 }
%union.anon.2300 = type { %"struct.blink::NGLineBreaker::RewindIndex" }
%"struct.blink::NGLineBreaker::RewindIndex" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1867", %"class.std::__1::unique_ptr.1887" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.1867" = type { %"class.blink::PersistentBase.1868" }
%"class.blink::PersistentBase.1868" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1871", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1887" = type { %"class.std::__1::__compressed_pair.1888" }
%"class.std::__1::__compressed_pair.1888" = type { %"struct.std::__1::__compressed_pair_elem.1889" }
%"struct.std::__1::__compressed_pair_elem.1889" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1890", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1890" = type { %"class.WTF::HashTable.1893", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1893" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1896", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1896" = type { %"class.std::__1::__compressed_pair.1897" }
%"class.std::__1::__compressed_pair.1897" = type { %"struct.std::__1::__compressed_pair_elem.1898" }
%"struct.std::__1::__compressed_pair_elem.1898" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1899, %"class.std::__1::unique_ptr.1900", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1899 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1918", i16, %class.scoped_refptr.1899 }
%"class.WTF::ThreadSafeRefCounted.1918" = type { %"class.base::RefCountedThreadSafe.1919" }
%"class.base::RefCountedThreadSafe.1919" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1900" = type { %"class.std::__1::__compressed_pair.1901" }
%"class.std::__1::__compressed_pair.1901" = type { %"struct.std::__1::__compressed_pair_elem.1902" }
%"struct.std::__1::__compressed_pair_elem.1902" = type { %"class.WTF::Vector.1903"* }
%"class.WTF::Vector.1903" = type { %"class.WTF::VectorBuffer.1904" }
%"class.WTF::VectorBuffer.1904" = type { %"class.WTF::VectorBufferBase.1905" }
%"class.WTF::VectorBufferBase.1905" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1914, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1914 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.1961", %"class.std::__1::unique_ptr.1967", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1961" = type { %"class.std::__1::__compressed_pair.1962" }
%"class.std::__1::__compressed_pair.1962" = type { %"struct.std::__1::__compressed_pair_elem.1963" }
%"struct.std::__1::__compressed_pair_elem.1963" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.1967" = type { %"class.std::__1::__compressed_pair.1968" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.1970", %"class.WTF::Vector.1976", %"class.WTF::Vector.1976", %"class.WTF::HashMap.1981" }
%"class.WTF::Vector.1970" = type { %"class.WTF::VectorBuffer.1971" }
%"class.WTF::VectorBuffer.1971" = type { %"class.WTF::VectorBufferBase.1972" }
%"class.WTF::VectorBufferBase.1972" = type { %"struct.std::__1::pair.1973"*, i32, i32 }
%"struct.std::__1::pair.1973" = type { i32, %"struct.blink::NGSvgCharacterData" }
%"struct.blink::NGSvgCharacterData" = type <{ %"struct.blink::SVGCharacterData", i8, [3 x i8] }>
%"struct.blink::SVGCharacterData" = type { float, float, float, float, float }
%"class.WTF::Vector.1976" = type { %"class.WTF::VectorBuffer.1977" }
%"class.WTF::VectorBuffer.1977" = type { %"class.WTF::VectorBufferBase.1978" }
%"class.WTF::VectorBufferBase.1978" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.1981" = type { %"class.WTF::HashTable.1982" }
%"class.WTF::HashTable.1982" = type <{ %"struct.WTF::KeyValuePair.1985"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1985" = type { %"class.blink::LayoutText"*, %"class.WTF::Vector.1954" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1986 }
%union.anon.1986 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.1987" }
%"class.blink::InlineBoxList.1987" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.std::__1::unique_ptr.1991" = type { %"class.std::__1::__compressed_pair.1992" }
%"class.std::__1::__compressed_pair.1992" = type { %"struct.std::__1::__compressed_pair_elem.1993" }
%"struct.std::__1::__compressed_pair_elem.1993" = type { %"struct.blink::NGInlineNodeData"* }
%"class.blink::NGInlineItemsBuilderTemplate.2018" = type <{ %"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1920"*, %"class.WTF::StringBuilder", %"class.blink::NGOffsetMappingBuilder", %"class.WTF::Vector.2019", %"class.WTF::Vector.2024", %"class.WTF::HashMap.1981"*, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1997, i32, i8, i8, [2 x i8] }>
%union.anon.1997 = type { %"class.WTF::Vector.1998" }
%"class.WTF::Vector.1998" = type { %"class.WTF::VectorBuffer.1999" }
%"class.WTF::VectorBuffer.1999" = type { %"class.WTF::VectorBufferBase.2000", [16 x i8] }
%"class.WTF::VectorBufferBase.2000" = type { i8*, i32, i32 }
%"class.blink::NGOffsetMappingBuilder" = type { %"class.blink::LayoutObject"*, i32, i8, i32, %"class.WTF::Vector.1874", %"class.WTF::HashMap.1879", %"class.WTF::String" }
%"class.WTF::Vector.2019" = type { %"class.WTF::VectorBuffer.2020" }
%"class.WTF::VectorBuffer.2020" = type { %"class.WTF::VectorBufferBase.2021" }
%"class.WTF::VectorBufferBase.2021" = type { %"struct.blink::NGInlineItemsBuilderTemplate<blink::NGOffsetMappingBuilder>::BoxInfo"*, i32, i32 }
%"struct.blink::NGInlineItemsBuilderTemplate<blink::NGOffsetMappingBuilder>::BoxInfo" = type { i32, i8, i8, %"struct.blink::FontHeight" }
%"class.WTF::Vector.2024" = type { %"class.WTF::VectorBuffer.2025" }
%"class.WTF::VectorBuffer.2025" = type { %"class.WTF::VectorBufferBase.2026" }
%"class.WTF::VectorBufferBase.2026" = type { %"struct.blink::NGInlineItemsBuilderTemplate<blink::NGOffsetMappingBuilder>::BidiContext"*, i32, i32 }
%"struct.blink::NGInlineItemsBuilderTemplate<blink::NGOffsetMappingBuilder>::BidiContext" = type { %"class.blink::LayoutObject"*, i16, i16 }
%"class.blink::NGSvgTextLayoutAttributesBuilder" = type { %"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1970", %"class.WTF::Vector.1976", %"class.WTF::Vector.1976" }
%"class.blink::NGInlineItemsBuilderTemplate" = type <{ %"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.1920"*, %"class.WTF::StringBuilder", %"class.blink::EmptyOffsetMappingBuilder", [7 x i8], %"class.WTF::Vector.2008", %"class.WTF::Vector.2013", %"class.WTF::HashMap.1981"*, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::EmptyOffsetMappingBuilder" = type { i8 }
%"class.WTF::Vector.2008" = type { %"class.WTF::VectorBuffer.2009" }
%"class.WTF::VectorBuffer.2009" = type { %"class.WTF::VectorBufferBase.2010" }
%"class.WTF::VectorBufferBase.2010" = type { %"struct.blink::NGInlineItemsBuilderTemplate<blink::EmptyOffsetMappingBuilder>::BoxInfo"*, i32, i32 }
%"struct.blink::NGInlineItemsBuilderTemplate<blink::EmptyOffsetMappingBuilder>::BoxInfo" = type { i32, i8, i8, %"struct.blink::FontHeight" }
%"class.WTF::Vector.2013" = type { %"class.WTF::VectorBuffer.2014" }
%"class.WTF::VectorBuffer.2014" = type { %"class.WTF::VectorBufferBase.2015" }
%"class.WTF::VectorBufferBase.2015" = type { %"struct.blink::NGInlineItemsBuilderTemplate<blink::EmptyOffsetMappingBuilder>::BidiContext"*, i32, i32 }
%"struct.blink::NGInlineItemsBuilderTemplate<blink::EmptyOffsetMappingBuilder>::BidiContext" = type { %"class.blink::LayoutObject"*, i16, i16 }
%"class.WTF::Vector.2247" = type { %"class.WTF::VectorBuffer.2248" }
%"class.WTF::VectorBuffer.2248" = type { %"class.WTF::VectorBufferBase.2249" }
%"class.WTF::VectorBufferBase.2249" = type { %"class.blink::ShapeResult"**, i32, i32 }
%"class.blink::(anonymous namespace)::ReusingTextShaper" = type { %"struct.blink::NGInlineItemsData"*, %"class.WTF::Vector.1920"*, %"class.blink::HarfBuzzShaper" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.2071" = type { %"class.WTF::VectorBuffer.2072" }
%"class.WTF::VectorBuffer.2072" = type { %"class.WTF::VectorBufferBase.2073", [512 x i8] }
%"class.WTF::VectorBufferBase.2073" = type { %"struct.blink::ShapeResult::ShapeRange"*, i32, i32 }
%"struct.blink::ShapeResult::ShapeRange" = type { i32, i32, %"class.blink::ShapeResult"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NGInlineNodeDataEditor" = type { %"class.std::__1::unique_ptr.1991", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutText"* }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.2172, i16, i8, [5 x i8], %"class.blink::Persistent.2173", %"class.WTF::HashMap.2176", %"class.WTF::HashMap.2181", %"class.blink::FontDataCache", %"class.blink::Persistent.2201", float, [4 x i8] }>
%class.sk_sp.2172 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent.2173" = type { %"class.blink::PersistentBase.2174" }
%"class.blink::PersistentBase.2174" = type { %"class.blink::HeapHashSet.2175"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashSet.2175" = type opaque
%"class.WTF::HashMap.2176" = type { %"class.WTF::HashTable.2177" }
%"class.WTF::HashTable.2177" = type <{ %"struct.WTF::KeyValuePair.2180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2180" = type opaque
%"class.WTF::HashMap.2181" = type { %"class.WTF::HashTable.2182" }
%"class.WTF::HashTable.2182" = type <{ %"struct.WTF::KeyValuePair.2185"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2185" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.2186", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.2186" = type { %"class.WTF::HashTable.2187" }
%"class.WTF::HashTable.2187" = type <{ %"struct.WTF::KeyValuePair.2190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2190" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2191", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2191" = type { %"class.WTF::HashTable.2192" }
%"class.WTF::HashTable.2192" = type <{ %"struct.WTF::KeyValuePair.2195"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2195" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2196", i32, i32 }
%"class.WTF::Vector.2196" = type { %"class.WTF::VectorBuffer.2197" }
%"class.WTF::VectorBuffer.2197" = type { %"class.WTF::VectorBufferBase.2198" }
%"class.WTF::VectorBufferBase.2198" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Persistent.2201" = type { %"class.blink::PersistentBase.2202" }
%"class.blink::PersistentBase.2202" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::NGBidiParagraph" = type <{ %struct.UBiDi*, i8, [7 x i8] }>
%struct.UBiDi = type opaque
%"struct.blink::RunSegmenter::RunSegmenterRange" = type { i32, i32, i32, i32, i32 }
%"class.blink::RunSegmenter" = type <{ i32, i32, %"struct.blink::RunSegmenter::RunSegmenterRange", [4 x i8], %"class.std::__1::unique_ptr.2030", %"class.std::__1::unique_ptr.2052", %"class.std::__1::unique_ptr.2064", i32, i32, i32, i32, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2030" = type { %"class.std::__1::__compressed_pair.2031" }
%"class.std::__1::__compressed_pair.2031" = type { %"struct.std::__1::__compressed_pair_elem.2032" }
%"struct.std::__1::__compressed_pair_elem.2032" = type { %"class.blink::ScriptRunIterator"* }
%"class.blink::ScriptRunIterator" = type { i16*, i32, %"class.WTF::Deque.2033", i32, %"class.WTF::Vector.2038", %"class.std::__1::unique_ptr.2043", %"class.std::__1::unique_ptr.2043", i32, i32, i32, %"class.blink::ScriptData"* }
%"class.WTF::Deque.2033" = type { %"class.WTF::Deque<blink::ScriptRunIterator::BracketRec, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::ScriptRunIterator::BracketRec, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2036" }
%"class.WTF::VectorBuffer.2036" = type { %"class.WTF::VectorBufferBase.2037" }
%"class.WTF::VectorBufferBase.2037" = type { %"struct.blink::ScriptRunIterator::BracketRec"*, i32, i32 }
%"struct.blink::ScriptRunIterator::BracketRec" = type { i32, i32 }
%"class.WTF::Vector.2038" = type { %"class.WTF::VectorBuffer.2039" }
%"class.WTF::VectorBuffer.2039" = type { %"class.WTF::VectorBufferBase.2040", [128 x i8] }
%"class.WTF::VectorBufferBase.2040" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.2043" = type { %"class.std::__1::__compressed_pair.2044" }
%"class.std::__1::__compressed_pair.2044" = type { %"struct.std::__1::__compressed_pair_elem.2045" }
%"struct.std::__1::__compressed_pair_elem.2045" = type { %"class.WTF::Vector.2038"* }
%"class.blink::ScriptData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2052" = type { %"class.std::__1::__compressed_pair.2053" }
%"class.std::__1::__compressed_pair.2053" = type { %"struct.std::__1::__compressed_pair_elem.2054" }
%"struct.std::__1::__compressed_pair_elem.2054" = type { %"class.blink::OrientationIterator"* }
%"class.blink::OrientationIterator" = type <{ %"class.std::__1::unique_ptr.2055", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2055" = type { %"class.std::__1::__compressed_pair.2056" }
%"class.std::__1::__compressed_pair.2056" = type { %"struct.std::__1::__compressed_pair_elem.2057" }
%"struct.std::__1::__compressed_pair_elem.2057" = type { %"class.blink::UTF16TextIterator"* }
%"class.blink::UTF16TextIterator" = type <{ i16*, i16*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2064" = type { %"class.std::__1::__compressed_pair.2065" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { %"class.blink::SymbolsIterator"* }
%"class.blink::SymbolsIterator" = type <{ %"class.blink::UTF16RagelIterator", i32, i32, i8, [7 x i8] }>
%"class.blink::UTF16RagelIterator" = type <{ i16*, i32, i32, i8, [7 x i8] }>
%"class.blink::NGInlineChildLayoutContext" = type opaque
%"class.blink::NGInlineLayoutAlgorithm" = type <{ %"class.blink::NGLayoutAlgorithm", %"class.blink::NGInlineLayoutStateStack"*, %"class.blink::NGInlineChildLayoutContext"*, i32, i8, [3 x i8] }>
%"class.blink::NGLayoutAlgorithm" = type { %"class.blink::NGLayoutAlgorithmOperations", %"class.blink::NGInlineNode", %"class.blink::NGEarlyBreak"*, %class.scoped_refptr.2076, %"class.blink::NGLineBoxFragmentBuilder" }
%"class.blink::NGLayoutAlgorithmOperations" = type { i32 (...)** }
%"class.blink::NGLineBoxFragmentBuilder" = type <{ %"class.blink::NGContainerFragmentBuilder.base", [3 x i8], %"struct.blink::FontHeight", %"class.blink::LayoutUnit", i32, i8, [7 x i8] }>
%"class.blink::NGContainerFragmentBuilder.base" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1636", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.2078", %"class.WTF::Vector.2078", %"class.WTF::Vector.2078", %"class.WTF::HashMap.2088", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.2093", %"class.WTF::Vector.2098", %class.scoped_refptr.2076, %class.scoped_refptr.1841, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"class.blink::NGFragmentBuilder.base" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.2077, i8, i8 }>
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%class.scoped_refptr.2077 = type { %"class.blink::NGBreakToken"* }
%"class.WTF::Vector.2078" = type { %"class.WTF::VectorBuffer.2079" }
%"class.WTF::VectorBuffer.2079" = type { %"class.WTF::VectorBufferBase.2080" }
%"class.WTF::VectorBufferBase.2080" = type { %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGLogicalOutOfFlowPositionedNode" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition", %"class.blink::LayoutInline"*, i8, [3 x i8], %"class.blink::LayoutUnit", %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock", %"class.absl::optional.2081", [4 x i8] }>
%"struct.blink::NGLogicalStaticPosition" = type { %"struct.blink::LogicalOffset", i32, i32 }
%"struct.blink::NGContainingBlock" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset", %class.scoped_refptr.1779 }
%"class.absl::optional.2081" = type { %"class.absl::optional_internal::optional_data.2082" }
%"class.absl::optional_internal::optional_data.2082" = type { %"class.absl::optional_internal::optional_data_base.2083" }
%"class.absl::optional_internal::optional_data_base.2083" = type { %"class.absl::optional_internal::optional_data_dtor_base.2084" }
%"class.absl::optional_internal::optional_data_dtor_base.2084" = type { i8, %union.anon.2085 }
%union.anon.2085 = type { %"struct.blink::LogicalRect" }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.WTF::HashMap.2088" = type { %"class.WTF::HashTable.2089" }
%"class.WTF::HashTable.2089" = type <{ %"struct.WTF::KeyValuePair.2092"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2092" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs" }
%"struct.blink::NGMulticolWithPendingOOFs" = type { %"struct.blink::LogicalOffset", %"struct.blink::NGContainingBlock" }
%"class.blink::NGUnpositionedListMarker" = type { %"class.blink::LayoutNGOutsideListMarker"* }
%"class.blink::LayoutNGOutsideListMarker" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::ListMarker", [4 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.1991" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.WTF::Vector.2093" = type { %"class.WTF::VectorBuffer.2094" }
%"class.WTF::VectorBuffer.2094" = type { %"class.WTF::VectorBufferBase.2095", [64 x i8] }
%"class.WTF::VectorBufferBase.2095" = type { %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, i32, i32 }
%"struct.blink::NGContainerFragmentBuilder::ChildWithOffset" = type { %"struct.blink::LogicalOffset", %class.scoped_refptr.1779 }
%"class.WTF::Vector.2098" = type { %"class.WTF::VectorBuffer.2099" }
%"class.WTF::VectorBuffer.2099" = type { %"class.WTF::VectorBufferBase.2100" }
%"class.WTF::VectorBufferBase.2100" = type { %class.scoped_refptr.1782*, i32, i32 }
%"class.blink::NGInlineLayoutStateStack" = type opaque
%"class.base::CheckedContiguousIterator.2366" = type { %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"* }
%"struct.blink::MinMaxSizesFloatInput" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGInlineNode::FloatingObject" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutUnit", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NGLineBreaker" = type <{ i32, i32, i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGLineLayoutOpportunity", %"class.blink::NGInlineNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.blink::NGInlineItemsData"*, %"class.WTF::String", %"class.blink::NGConstraintSpace"*, %"class.blink::NGExclusionSpace"*, %class.scoped_refptr.2076, %class.scoped_refptr, %"class.blink::LazyLineBreakIterator", %"class.blink::HarfBuzzShaper", %"class.blink::ShapeResultSpacing", i8, [7 x i8], %"class.blink::Hyphenation"*, %"class.absl::optional.2271", i8, [7 x i8], %"class.absl::optional.2276", %"class.WTF::Vector.2266"*, i32, i32, %"class.WTF::Vector.2104"*, i8*, %"class.blink::NGInlineItem"*, i8, [7 x i8], %"class.WTF::Vector.2290", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8], %"class.absl::optional.2296", [4 x i8] }>
%"class.absl::optional.2276" = type { %"class.absl::optional_internal::optional_data.2277" }
%"class.absl::optional_internal::optional_data.2277" = type { %"class.absl::optional_internal::optional_data_base.2278" }
%"class.absl::optional_internal::optional_data_base.2278" = type { %"class.absl::optional_internal::optional_data_dtor_base.2279" }
%"class.absl::optional_internal::optional_data_dtor_base.2279" = type { i8, %union.anon.2280 }
%"class.absl::optional.2296" = type { %"class.absl::optional_internal::optional_data.2297" }
%"class.absl::optional_internal::optional_data.2297" = type { %"class.absl::optional_internal::optional_data_base.2298" }
%"class.absl::optional_internal::optional_data_base.2298" = type { %"class.absl::optional_internal::optional_data_dtor_base.2299" }
%"class.absl::optional_internal::optional_data_dtor_base.2299" = type { i8, %union.anon.2300 }
%class.FloatsMaxSize = type { %"class.blink::LayoutUnit", %"class.blink::HeapVector.2301" }
%"class.blink::HeapVector.2301" = type { %"class.WTF::Vector.2304" }
%"class.WTF::Vector.2304" = type { %"class.WTF::VectorBuffer.2305" }
%"class.WTF::VectorBuffer.2305" = type { %"class.WTF::VectorBufferBase.2306", [96 x i8] }
%"class.WTF::VectorBufferBase.2306" = type { %"struct.blink::NGInlineNode::FloatingObject"*, i32, i32 }
%"class.blink::NGLineInfo" = type <{ %"struct.blink::NGInlineItemsData"*, %"class.blink::ComputedStyle"*, %"class.WTF::Vector.2309", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.WTF::Vector.2309" = type { %"class.WTF::VectorBuffer.2310" }
%"class.WTF::VectorBuffer.2310" = type { %"class.WTF::VectorBufferBase.2311", [5120 x i8] }
%"class.WTF::VectorBufferBase.2311" = type { %"struct.blink::NGInlineItemResult"*, i32, i32 }
%"class.blink::NGMinMaxConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpaceBuilder" }
%"class.blink::NGConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpace", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.base::span.2203" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.base::span.2204" = type { %"struct.base::internal::ExtentStorage", i16* }
%"class.base::CheckedContiguousIterator" = type { i8*, i8*, i8* }
%"struct.std::__1::pair.2205" = type { %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator" }
%"class.base::CheckedContiguousIterator.2207" = type { i16*, i16*, i16* }
%"struct.std::__1::pair.2206" = type { %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator.2207" }
%"struct.std::__1::pair.2211" = type { %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator" }
%"struct.std::__1::pair.2213" = type { %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::reverse_iterator" = type { %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator" }
%"struct.std::__1::pair.2215" = type { %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator" }
%"class.std::__1::reverse_iterator.2218" = type { %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207" }
%"struct.std::__1::pair.2217" = type { %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator.2218" }
%"struct.std::__1::pair.2220" = type { %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator" }
%"struct.std::__1::pair.2221" = type { %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218" }
%"class.WTF::Vector.2003" = type { %"class.WTF::VectorBuffer.2004" }
%"class.WTF::VectorBuffer.2004" = type { %"class.WTF::VectorBufferBase.2005", [16 x i8] }
%"class.WTF::VectorBufferBase.2005" = type { i16*, i32, i32 }
%"struct.std::__1::default_delete.1774" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.1647", [4 x i8], %"class.WTF::Vector.1649", %"class.WTF::Vector.1654", %"class.WTF::Vector.1659", %"class.WTF::Vector.1664", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.1659" = type { %"class.WTF::VectorBuffer.1660" }
%"class.WTF::VectorBuffer.1660" = type { %"class.WTF::VectorBufferBase.1661" }
%"class.WTF::VectorBufferBase.1661" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>

$_ZNSt3__110unique_ptrIN5blink16NGInlineNodeDataENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink22NGInlineNodeDataEditor7PrepareEjj = comdat any

$_ZN5blink22NGInlineNodeDataEditor3RunEv = comdat any

$_ZN5blink20NGInlineItemSegments6AppendIJRNS_12RunSegmenter17RunSegmenterRangeEEEEvDpOT_ = comdat any

$_ZNK5blink12NGInlineItem5StyleEv = comdat any

$_ZN5blink20NGInlineItemSegments6AppendIJjRKNS_12NGInlineItemEEEEvDpOT_ = comdat any

$_ZN5blink22NGInlineNodeDataEditor8MismatchERKNS_17NGInlineItemsDataES3_ = comdat any

$_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndERKNS_17NGInlineItemsDataES3_j = comdat any

$_ZNK5blink22NGInlineNodeDataEditor14CopyItemBeforeERKNS_12NGInlineItemEj = comdat any

$_ZNK5blink22NGInlineNodeDataEditor13CopyItemAfterERKNS_12NGInlineItemEj = comdat any

$_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKhLm18446744073709551615EEES5_EEjRKT_RKT0_ = comdat any

$_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKhLm18446744073709551615EEENS3_IKDsLm18446744073709551615EEEEEjRKT_RKT0_ = comdat any

$_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKDsLm18446744073709551615EEENS3_IKhLm18446744073709551615EEEEEjRKT_RKT0_ = comdat any

$_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKDsLm18446744073709551615EEES5_EEjRKT_RKT0_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKhEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEppEv = comdat any

$_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKDsEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKDsEppEv = comdat any

$_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_ = comdat any

$_ZNK4base4spanIKhLm18446744073709551615EE7subspanEmm = comdat any

$_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKhLm18446744073709551615EEES5_EEjRKT_RKT0_ = comdat any

$_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKhLm18446744073709551615EEENS3_IKDsLm18446744073709551615EEEEEjRKT_RKT0_ = comdat any

$_ZNK4base4spanIKDsLm18446744073709551615EE7subspanEmm = comdat any

$_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKDsLm18446744073709551615EEENS3_IKhLm18446744073709551615EEEEEjRKT_RKT0_ = comdat any

$_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKDsLm18446744073709551615EEES5_EEjRKT_RKT0_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKhEmmEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKDsEmmEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17ScriptRunIteratorD2Ev = comdat any

$_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGInlineItemSegmentEEEmm = comdat any

$_ZN3WTF6VectorIPKN5blink11ShapeResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11ShapeResultEEEmm = comdat any

$_ZNK3WTF6VectorIPKN5blink11ShapeResultELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12VectorBufferIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN5blink30NGMinMaxConstraintSpaceBuilderC2ERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_17NGLayoutInputNodeEb = comdat any

$_ZN5blink16NGExclusionSpaceD2Ev = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_12NGInlineNode14FloatingObjectEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS2_EEE14AllocateObjectIS6_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGConstraintSpace8RareDataD2Ev = comdat any

$_ZNK3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink18NGInlineItemResultD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink17NGPositionedFloatELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink17NGInlineItemsDataD2Ev = comdat any

$_ZN5blink17SvgInlineNodeDataD2Ev = comdat any

$_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E6insertINS_17HashMapTranslatorISH_SC_S7_EES4_S8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E8RehashToEPS9_jSJ_ = comdat any

$_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E16LookupForWritingERKS4_ = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ShapeResult10ShapeRangeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEE15CheckComparableERKS4_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/core/layout/ng/inline/ng_inline_node.cc\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"node.IsPrepareLayoutFinished()\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [24 x i8] c"NGInlineNode::ShapeText\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"NGInlineNode\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.8 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"offset <= size()\00", align 1
@.str.13 = private unnamed_addr constant [52 x i8] c"count == dynamic_extent || count <= size() - offset\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"current_ != start_\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGInlineItemEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGInlineItem]\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGInlineItemSegmentEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGInlineItemSegment]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11ShapeResultEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::ShapeResult *]\00", align 1
@.str.20 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@__const._ZN5blinkL18ComputeContentSizeENS_12NGInlineNodeENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputENS_17NGLineBreakerModeEPN3WTF6VectorINS_10LayoutUnitELj64ENS9_18PartitionAllocatorEEEPN4absl8optionalISB_EEPb.line_breaker = private unnamed_addr constant <{ i32, i32, i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGLineLayoutOpportunity", %"class.blink::NGInlineNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.blink::NGInlineItemsData"*, %"class.WTF::String", %"class.blink::NGConstraintSpace"*, %"class.blink::NGExclusionSpace"*, %class.scoped_refptr.2076, %class.scoped_refptr, %"class.blink::LazyLineBreakIterator", %"class.blink::HarfBuzzShaper", %"class.blink::ShapeResultSpacing", i8, [7 x i8], %"class.blink::Hyphenation"*, { { { { i8, [3 x i8], %union.anon.2275 } } } }, i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.2280 } } } }, %"class.WTF::Vector.2266"*, i32, i32, %"class.WTF::Vector.2104"*, i8*, %"class.blink::NGInlineItem"*, i8, [7 x i8], %"class.WTF::Vector.2290", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.2300 } } } }, [4 x i8] }> <{ i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, %"struct.blink::NGLineLayoutOpportunity" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"class.blink::NGInlineNode" { %"class.blink::NGLayoutInputNode.base" <{ %"class.blink::LayoutBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutBox"*), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, %"struct.blink::NGInlineItemsData"* inttoptr (i64 -6148914691236517206 to %"struct.blink::NGInlineItemsData"*), %"class.WTF::String" { %class.scoped_refptr.5 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.blink::NGConstraintSpace"* inttoptr (i64 -6148914691236517206 to %"class.blink::NGConstraintSpace"*), %"class.blink::NGExclusionSpace"* inttoptr (i64 -6148914691236517206 to %"class.blink::NGExclusionSpace"*), %class.scoped_refptr.2076 { %"class.blink::NGInlineBreakToken"* inttoptr (i64 -6148914691236517206 to %"class.blink::NGInlineBreakToken"*) }, %class.scoped_refptr { %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*) }, %"class.blink::LazyLineBreakIterator" <{ %"class.WTF::String" { %class.scoped_refptr.5 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.5 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.icu_69::BreakIterator"* inttoptr (i64 -6148914691236517206 to %"class.icu_69::BreakIterator"*), [2 x i16] [i16 -21846, i16 -21846], [4 x i8] c"\AA\AA\AA\AA", %"struct.blink::LazyLineBreakIterator::PriorContext" <{ i16* inttoptr (i64 -6148914691236517206 to i16*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.blink::HarfBuzzShaper" { %"class.WTF::String" { %class.scoped_refptr.5 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.base::RepeatingCallback" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr.909 { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } } }, %"class.blink::ShapeResultSpacing" <{ %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [3 x i8] c"\AA\AA\AA" }>, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.blink::Hyphenation"* inttoptr (i64 -6148914691236517206 to %"class.blink::Hyphenation"*), { { { { i8, [3 x i8], %union.anon.2275 } } } } { { { { i8, [3 x i8], %union.anon.2275 } } } { { { i8, [3 x i8], %union.anon.2275 } } { { i8, [3 x i8], %union.anon.2275 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.2275 { i32 -1431655766 } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.2280 } } } } { { { { i8, [7 x i8], %union.anon.2280 } } } { { { i8, [7 x i8], %union.anon.2280 } } { { i8, [7 x i8], %union.anon.2280 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.2280 { %"struct.blink::NGLineBreaker::TrailingCollapsibleSpace" { %"struct.blink::NGInlineItemResult"* inttoptr (i64 -6148914691236517206 to %"struct.blink::NGInlineItemResult"*), %class.scoped_refptr.2281 { %"class.blink::ShapeResultView"* inttoptr (i64 -6148914691236517206 to %"class.blink::ShapeResultView"*) } } } } } } }, %"class.WTF::Vector.2266"* inttoptr (i64 -6148914691236517206 to %"class.WTF::Vector.2266"*), i32 -1431655766, i32 -1431655766, %"class.WTF::Vector.2104"* inttoptr (i64 -6148914691236517206 to %"class.WTF::Vector.2104"*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"class.blink::NGInlineItem"* inttoptr (i64 -6148914691236517206 to %"class.blink::NGInlineItem"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.2290" { %"class.WTF::VectorBuffer.2291" { %"class.WTF::VectorBufferBase.2292" { %class.scoped_refptr.2293* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.2293*), i32 -1431655766, i32 -1431655766 } } }, i32 -1431655766, %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, i8 -86, [3 x i8] c"\AA\AA\AA", { { { { i8, [3 x i8], %union.anon.2300 } } } } { { { { i8, [3 x i8], %union.anon.2300 } } } { { { i8, [3 x i8], %union.anon.2300 } } { { i8, [3 x i8], %union.anon.2300 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.2300 { %"struct.blink::NGLineBreaker::RewindIndex" { i32 -1431655766, i32 -1431655766 } } } } } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.24 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.26 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.29 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.30 = private unnamed_addr constant [52 x i8] c"line_info.EndItemIndex() <= items_data.items.size()\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.32 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink10LayoutTextENS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [148 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutText *, WTF::Vector<unsigned int, 0, WTF::PartitionAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ShapeResult10ShapeRangeEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ShapeResult::ShapeRange]\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1

@_ZN5blink12NGInlineNodeC1EPNS_15LayoutBlockFlowE = hidden unnamed_addr alias void (%"class.blink::NGInlineNode"*, %"class.blink::LayoutBlockFlow"*), void (%"class.blink::NGInlineNode"*, %"class.blink::LayoutBlockFlow"*)* @_ZN5blink12NGInlineNodeC2EPNS_15LayoutBlockFlowE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12NGInlineNodeC2EPNS_15LayoutBlockFlowE(%"class.blink::NGInlineNode"* nocapture, %"class.blink::LayoutBlockFlow"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 0
  store %"class.blink::LayoutBox"* %3, %"class.blink::LayoutBox"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 1
  %6 = load i8, i8* %5, align 8
  %7 = or i8 %6, 1
  store i8 %7, i8* %5, align 8
  %8 = bitcast %"class.blink::LayoutBlockFlow"* %1 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %9 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %9, i64 216
  %11 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutBlockFlow"* %1) #13
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::LayoutBlockFlow"* %1 to void (%"class.blink::LayoutBlockFlow"*)***
  %15 = load void (%"class.blink::LayoutBlockFlow"*)**, void (%"class.blink::LayoutBlockFlow"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %15, i64 214
  %17 = load void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %16, align 8
  tail call void %17(%"class.blink::LayoutBlockFlow"* %1) #13
  br label %18

18:                                               ; preds = %13, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12NGInlineNode23IsPrepareLayoutFinishedEv(%"class.blink::NGInlineNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %3 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %3 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %5 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %5, i64 213
  %7 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %6, align 8
  %8 = tail call %"struct.blink::NGInlineNodeData"* %7(%"class.blink::LayoutBlockFlow"* %3) #13
  %9 = icmp eq %"struct.blink::NGInlineNodeData"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp ne %"class.WTF::StringImpl"* %12, null
  br label %14

14:                                               ; preds = %1, %10
  %15 = phi i1 [ false, %1 ], [ %13, %10 ]
  ret i1 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode21PrepareLayoutIfNeededEv(%"class.blink::NGInlineNode"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %3 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %3 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %5 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %5, i64 213
  %7 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %6, align 8
  %8 = tail call %"struct.blink::NGInlineNodeData"* %7(%"class.blink::LayoutBlockFlow"* %3) #13
  %9 = icmp eq %"struct.blink::NGInlineNodeData"* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 2048
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %14
  %21 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %4, align 8
  %22 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %21, i64 212
  %23 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %22, align 8
  %24 = tail call %"struct.blink::NGInlineNodeData"* %23(%"class.blink::LayoutBlockFlow"* %3) #13
  %25 = bitcast %"class.blink::LayoutBlockFlow"* %3 to void (%"class.blink::LayoutBlockFlow"*)***
  %26 = load void (%"class.blink::LayoutBlockFlow"*)**, void (%"class.blink::LayoutBlockFlow"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %26, i64 214
  %28 = load void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %27, align 8
  tail call void %28(%"class.blink::LayoutBlockFlow"* %3) #13
  br label %29

29:                                               ; preds = %10, %1, %20
  %30 = phi %"struct.blink::NGInlineNodeData"* [ %24, %20 ], [ null, %10 ], [ null, %1 ]
  tail call void @_ZNK5blink12NGInlineNode13PrepareLayoutENSt3__110unique_ptrINS_16NGInlineNodeDataENS1_14default_deleteIS3_EEEE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %30)
  br label %31

31:                                               ; preds = %14, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink16NGInlineNodeDataENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1991"*, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.1991", %"class.std::__1::unique_ptr.1991"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %3, align 8
  store %"struct.blink::NGInlineNodeData"* %1, %"struct.blink::NGInlineNodeData"** %3, align 8
  %5 = icmp eq %"struct.blink::NGInlineNodeData"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %7, align 8
  store %"struct.blink::SvgInlineNodeData"* null, %"struct.blink::SvgInlineNodeData"** %7, align 8
  %9 = icmp eq %"struct.blink::SvgInlineNodeData"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink17SvgInlineNodeDataD2Ev(%"struct.blink::SvgInlineNodeData"* nonnull %8) #13
  %11 = bitcast %"struct.blink::SvgInlineNodeData"* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %13, align 8
  store %"struct.blink::NGInlineItemsData"* null, %"struct.blink::NGInlineItemsData"** %13, align 8
  %15 = icmp eq %"struct.blink::NGInlineItemsData"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"* nonnull %14) #13
  %17 = bitcast %"struct.blink::NGInlineItemsData"* %14 to i8*
  tail call void @free(i8* %17) #13
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %4, i64 0, i32 0
  tail call void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"* %19) #13
  %20 = bitcast %"struct.blink::NGInlineNodeData"* %4 to i8*
  tail call void @free(i8* %20) #13
  br label %21

21:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode13PrepareLayoutENSt3__110unique_ptrINS_16NGInlineNodeDataENS1_14default_deleteIS3_EEEE(%"class.blink::NGInlineNode"*, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %4 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %3, align 8
  %5 = bitcast %"class.blink::LayoutBlockFlow"* %4 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %6 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %6, i64 213
  %8 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %7, align 8
  %9 = tail call %"struct.blink::NGInlineNodeData"* %8(%"class.blink::LayoutBlockFlow"* %4) #13
  tail call void @_ZNK5blink12NGInlineNode14CollectInlinesEPNS_16NGInlineNodeDataES2_(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %9, %"struct.blink::NGInlineNodeData"* %1)
  tail call void @_ZNK5blink12NGInlineNode15SegmentBidiRunsEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %9) #13
  tail call void @_ZNK5blink12NGInlineNode17SegmentScriptRunsEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* undef, %"struct.blink::NGInlineNodeData"* %9) #13
  tail call void @_ZNK5blink12NGInlineNode22SegmentFontOrientationEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %9) #13
  %10 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %9, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %10, align 8
  %12 = icmp eq %"class.blink::NGInlineItemSegments"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %9, i64 0, i32 0, i32 1
  tail call void @_ZN5blink20NGInlineItemSegments16ComputeItemIndexERKN3WTF6VectorINS_12NGInlineItemELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGInlineItemSegments"* nonnull %11, %"class.WTF::Vector.1920"* dereferenceable(16) %14) #13
  br label %15

15:                                               ; preds = %2, %13
  %16 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %9, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink12NGInlineNode9ShapeTextEPNS_17NGInlineItemsDataEPKN3WTF6StringEPKNS3_6VectorINS_12NGInlineItemELj0ENS3_18PartitionAllocatorEEE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineItemsData"* %16, %"class.WTF::String"* %17, %"class.WTF::Vector.1920"* null)
  tail call void @_ZNK5blink12NGInlineNode29ShapeTextForFirstLineIfNeededEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %9)
  tail call void @_ZNK5blink12NGInlineNode25AssociateItemsWithInlinesEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* undef, %"struct.blink::NGInlineNodeData"* %9)
  %18 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %3, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = and i96 %21, -2049
  store i96 %22, i96* %20, align 4
  %23 = icmp eq %"struct.blink::NGInlineNodeData"* %1, null
  br i1 %23, label %39, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %25, align 8
  store %"struct.blink::SvgInlineNodeData"* null, %"struct.blink::SvgInlineNodeData"** %25, align 8
  %27 = icmp eq %"struct.blink::SvgInlineNodeData"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  tail call void @_ZN5blink17SvgInlineNodeDataD2Ev(%"struct.blink::SvgInlineNodeData"* nonnull %26) #13
  %29 = bitcast %"struct.blink::SvgInlineNodeData"* %26 to i8*
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %31, align 8
  store %"struct.blink::NGInlineItemsData"* null, %"struct.blink::NGInlineItemsData"** %31, align 8
  %33 = icmp eq %"struct.blink::NGInlineItemsData"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  tail call void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"* nonnull %32) #13
  %35 = bitcast %"struct.blink::NGInlineItemsData"* %32 to i8*
  tail call void @free(i8* %35) #13
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0
  tail call void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"* %37) #13
  %38 = bitcast %"struct.blink::NGInlineNodeData"* %1 to i8*
  tail call void @free(i8* %38) #13
  br label %39

39:                                               ; preds = %15, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode14CollectInlinesEPNS_16NGInlineNodeDataES2_(%"class.blink::NGInlineNode"* nocapture readonly, %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.1920", align 8
  %5 = alloca %"class.blink::NGInlineItemsBuilderTemplate.2018", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::NGSvgTextLayoutAttributesBuilder", align 8
  %8 = alloca %"class.WTF::Vector.1970", align 8
  %9 = alloca %"class.WTF::Vector.1976", align 8
  %10 = alloca %"class.WTF::Vector.1976", align 8
  %11 = alloca %"class.blink::LayoutText"*, align 8
  %12 = alloca %"class.WTF::Vector.1954", align 8
  %13 = alloca i32, align 4
  %14 = alloca %"class.blink::NGInlineItemsBuilderTemplate", align 8
  %15 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %16 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %15, align 8
  %17 = bitcast %"class.blink::LayoutBlockFlow"* %16 to void (%"class.blink::LayoutBlockFlow"*)***
  %18 = load void (%"class.blink::LayoutBlockFlow"*)**, void (%"class.blink::LayoutBlockFlow"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %18, i64 217
  %20 = load void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %19, align 8
  tail call void %20(%"class.blink::LayoutBlockFlow"* %16) #13
  %21 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.blink::LayoutBlockFlow"* %16 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %21, i32 57) #13
  br i1 %26, label %27, label %387

27:                                               ; preds = %3
  %28 = bitcast %"class.WTF::Vector.1920"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %4, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #13
  %32 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %16, i64 0, i32 0, i32 1, i32 0
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %53, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"class.blink::LayoutObject"* [ %40, %35 ], [ %33, %27 ]
  %37 = phi i32 [ %38, %35 ], [ 0, %27 ]
  %38 = add i32 %37, 1
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 9
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %42, label %35

42:                                               ; preds = %35
  %43 = shl i32 %38, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %53, label %45, !prof !2

45:                                               ; preds = %42
  %46 = zext i32 %43 to i64
  %47 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm(i64 %46) #13
  %48 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %47, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGInlineItemEEEPKcv, i64 0, i64 0)) #13
  %49 = ptrtoint i8* %48 to i64
  %50 = bitcast %"class.WTF::Vector.1920"* %4 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = lshr i64 %47, 5
  %52 = trunc i64 %51 to i32
  store i32 %52, i32* %30, align 8
  br label %53

53:                                               ; preds = %42, %27, %45
  %54 = bitcast %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %54) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 184, i1 false)
  %55 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 0
  store %"class.blink::LayoutBlockFlow"* %16, %"class.blink::LayoutBlockFlow"** %55, align 8
  %56 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 1
  store %"class.WTF::Vector.1920"* %4, %"class.WTF::Vector.1920"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  %58 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 2, i32 1
  %59 = bitcast %union.anon.1997* %58 to i8*
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 2, i32 2
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 2, i32 3
  store i8 1, i8* %61, align 4
  %62 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 2, i32 4
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 3
  call void @_ZN5blink22NGOffsetMappingBuilderC1Ev(%"class.blink::NGOffsetMappingBuilder"* %63) #13
  %64 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 4
  %65 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 9
  %66 = bitcast %"class.WTF::Vector.2019"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 42, i1 false)
  store i8 1, i8* %65, align 2
  %67 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 10
  store i8 1, i8* %67, align 1
  %68 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %5, i64 0, i32 11
  store i8 0, i8* %68, align 4
  %69 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %70 = icmp eq %"class.blink::LayoutObject"* %69, null
  br i1 %70, label %80, label %73

71:                                               ; preds = %73
  %72 = and i32 %76, 1073741823
  br label %80

73:                                               ; preds = %53, %73
  %74 = phi %"class.blink::LayoutObject"* [ %78, %73 ], [ %69, %53 ]
  %75 = phi i32 [ %76, %73 ], [ 0, %53 ]
  %76 = add i32 %75, 1
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %74, i64 0, i32 9
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutObject"* %78, null
  br i1 %79, label %71, label %73

80:                                               ; preds = %53, %71
  %81 = phi i32 [ 0, %53 ], [ %72, %71 ]
  call void @_ZN5blink22NGOffsetMappingBuilder15ReserveCapacityEj(%"class.blink::NGOffsetMappingBuilder"* %63, i32 %81) #13
  call fastcc void @_ZN5blink12_GLOBAL__N_122CollectInlinesInternalINS_28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEEEEEvPT_PKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* nonnull %5)
  %82 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %83, align 8
  %84 = call %"class.WTF::StringImpl"* @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE8ToStringEv(%"class.blink::NGInlineItemsBuilderTemplate.2018"* nonnull %5) #13
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %83, align 8
  %85 = bitcast %"class.blink::NGSvgTextLayoutAttributesBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %85) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 56, i1 false)
  %86 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 0
  %87 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 1
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  call void @_ZN5blink32NGSvgTextLayoutAttributesBuilderC1ENS_12NGInlineNodeE(%"class.blink::NGSvgTextLayoutAttributesBuilder"* nonnull %7, %"class.blink::LayoutBox"* %87, i64 %90) #13
  call void @_ZN5blink32NGSvgTextLayoutAttributesBuilder5BuildERKN3WTF6StringERKNS1_6VectorINS_12NGInlineItemELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGSvgTextLayoutAttributesBuilder"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::Vector.1920"* nonnull dereferenceable(16) %4) #13
  %91 = call i8* @_Znwm(i64 72) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 72, i1 false) #13
  %92 = ptrtoint i8* %91 to i64
  %93 = bitcast %"class.WTF::Vector.1970"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #13
  call void @_ZN5blink32NGSvgTextLayoutAttributesBuilder17CharacterDataListEv(%"class.WTF::Vector.1970"* nonnull sret %8, %"class.blink::NGSvgTextLayoutAttributesBuilder"* nonnull %7) #13
  %94 = bitcast %"class.WTF::Vector.1970"* %8 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast i8* %91 to i64*
  %97 = load i64, i64* %96, align 8
  store atomic i64 %97, i64* %94 monotonic, align 8
  store atomic i64 %95, i64* %96 monotonic, align 8
  %98 = getelementptr inbounds i8, i8* %91, i64 8
  %99 = bitcast i8* %98 to i32*
  %100 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %8, i64 0, i32 0, i32 0, i32 1
  %101 = load i32, i32* %99, align 4
  %102 = load i32, i32* %100, align 8
  store i32 %102, i32* %99, align 4
  store i32 %101, i32* %100, align 8
  %103 = getelementptr inbounds i8, i8* %91, i64 12
  %104 = bitcast i8* %103 to i32*
  %105 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %8, i64 0, i32 0, i32 0, i32 2
  %106 = load i32, i32* %104, align 4
  %107 = load i32, i32* %105, align 4
  store i32 %107, i32* %104, align 4
  store i32 %106, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %8, i64 0, i32 0, i32 0, i32 0
  %109 = icmp eq i64 %97, 0
  %110 = inttoptr i64 %97 to i8*
  br i1 %109, label %115, label %111, !prof !3

111:                                              ; preds = %80
  %112 = icmp eq i32 %106, 0
  br i1 %112, label %114, label %113, !prof !2

113:                                              ; preds = %111
  store i32 0, i32* %105, align 4
  br label %114

114:                                              ; preds = %113, %111
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %110) #13
  store %"struct.std::__1::pair.1973"* null, %"struct.std::__1::pair.1973"** %108, align 8
  br label %115

115:                                              ; preds = %80, %114
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #13
  %116 = bitcast %"class.WTF::Vector.1976"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #13
  call void @_ZN5blink32NGSvgTextLayoutAttributesBuilder19TextLengthRangeListEv(%"class.WTF::Vector.1976"* nonnull sret %9, %"class.blink::NGSvgTextLayoutAttributesBuilder"* nonnull %7) #13
  %117 = getelementptr inbounds i8, i8* %91, i64 16
  %118 = bitcast %"class.WTF::Vector.1976"* %9 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8* %117 to i64*
  %121 = load i64, i64* %120, align 8
  store atomic i64 %121, i64* %118 monotonic, align 8
  store atomic i64 %119, i64* %120 monotonic, align 8
  %122 = getelementptr inbounds i8, i8* %91, i64 24
  %123 = bitcast i8* %122 to i32*
  %124 = getelementptr inbounds %"class.WTF::Vector.1976", %"class.WTF::Vector.1976"* %9, i64 0, i32 0, i32 0, i32 1
  %125 = load i32, i32* %123, align 4
  %126 = load i32, i32* %124, align 8
  store i32 %126, i32* %123, align 4
  store i32 %125, i32* %124, align 8
  %127 = getelementptr inbounds i8, i8* %91, i64 28
  %128 = bitcast i8* %127 to i32*
  %129 = getelementptr inbounds %"class.WTF::Vector.1976", %"class.WTF::Vector.1976"* %9, i64 0, i32 0, i32 0, i32 2
  %130 = load i32, i32* %128, align 4
  %131 = load i32, i32* %129, align 4
  store i32 %131, i32* %128, align 4
  store i32 %130, i32* %129, align 4
  %132 = getelementptr inbounds %"class.WTF::Vector.1976", %"class.WTF::Vector.1976"* %9, i64 0, i32 0, i32 0, i32 0
  %133 = icmp eq i64 %121, 0
  %134 = inttoptr i64 %121 to i8*
  br i1 %133, label %139, label %135, !prof !3

135:                                              ; preds = %115
  %136 = icmp eq i32 %130, 0
  br i1 %136, label %138, label %137, !prof !2

137:                                              ; preds = %135
  store i32 0, i32* %129, align 4
  br label %138

138:                                              ; preds = %137, %135
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %134) #13
  store %"struct.blink::SvgTextContentRange"* null, %"struct.blink::SvgTextContentRange"** %132, align 8
  br label %139

139:                                              ; preds = %115, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  %140 = bitcast %"class.WTF::Vector.1976"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #13
  call void @_ZN5blink32NGSvgTextLayoutAttributesBuilder17TextPathRangeListEv(%"class.WTF::Vector.1976"* nonnull sret %10, %"class.blink::NGSvgTextLayoutAttributesBuilder"* nonnull %7) #13
  %141 = getelementptr inbounds i8, i8* %91, i64 32
  %142 = bitcast %"class.WTF::Vector.1976"* %10 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast i8* %141 to i64*
  %145 = load i64, i64* %144, align 8
  store atomic i64 %145, i64* %142 monotonic, align 8
  store atomic i64 %143, i64* %144 monotonic, align 8
  %146 = getelementptr inbounds i8, i8* %91, i64 40
  %147 = bitcast i8* %146 to i32*
  %148 = getelementptr inbounds %"class.WTF::Vector.1976", %"class.WTF::Vector.1976"* %10, i64 0, i32 0, i32 0, i32 1
  %149 = load i32, i32* %147, align 4
  %150 = load i32, i32* %148, align 8
  store i32 %150, i32* %147, align 4
  store i32 %149, i32* %148, align 8
  %151 = getelementptr inbounds i8, i8* %91, i64 44
  %152 = bitcast i8* %151 to i32*
  %153 = getelementptr inbounds %"class.WTF::Vector.1976", %"class.WTF::Vector.1976"* %10, i64 0, i32 0, i32 0, i32 2
  %154 = load i32, i32* %152, align 4
  %155 = load i32, i32* %153, align 4
  store i32 %155, i32* %152, align 4
  store i32 %154, i32* %153, align 4
  %156 = getelementptr inbounds %"class.WTF::Vector.1976", %"class.WTF::Vector.1976"* %10, i64 0, i32 0, i32 0, i32 0
  %157 = icmp eq i64 %145, 0
  %158 = inttoptr i64 %145 to i8*
  br i1 %157, label %163, label %159, !prof !3

159:                                              ; preds = %139
  %160 = icmp eq i32 %154, 0
  br i1 %160, label %162, label %161, !prof !2

161:                                              ; preds = %159
  store i32 0, i32* %153, align 4
  br label %162

162:                                              ; preds = %161, %159
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %158) #13
  store %"struct.blink::SvgTextContentRange"* null, %"struct.blink::SvgTextContentRange"** %156, align 8
  br label %163

163:                                              ; preds = %139, %162
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #13
  %164 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 2
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.1967", %"class.std::__1::unique_ptr.1967"* %164, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %165, align 8
  %167 = bitcast %"class.std::__1::unique_ptr.1967"* %164 to i64*
  store i64 %92, i64* %167, align 8
  %168 = icmp eq %"struct.blink::SvgInlineNodeData"* %166, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %163
  call void @_ZN5blink17SvgInlineNodeDataD2Ev(%"struct.blink::SvgInlineNodeData"* nonnull %166) #13
  %170 = bitcast %"struct.blink::SvgInlineNodeData"* %166 to i8*
  call void @_ZdlPv(i8* %170) #14
  br label %171

171:                                              ; preds = %163, %169
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %191, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %191

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #13
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !2

188:                                              ; preds = %179
  call void @llvm.trap() #13
  unreachable

189:                                              ; preds = %179
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %180, align 4
  br label %191

191:                                              ; preds = %171, %174, %189
  call void @_ZN5blink22NGOffsetMappingBuilder20SetDestinationStringEN3WTF6StringE(%"class.blink::NGOffsetMappingBuilder"* %63, %"class.WTF::StringImpl"* %172) #13
  %192 = call %"class.blink::NGOffsetMapping"* @_ZN5blink22NGOffsetMappingBuilder5BuildEv(%"class.blink::NGOffsetMappingBuilder"* %63) #13
  %193 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %165, align 8
  %194 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %193, i64 0, i32 0, i32 0, i32 0, i32 0
  %195 = load %"struct.std::__1::pair.1973"*, %"struct.std::__1::pair.1973"** %194, align 8
  %196 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %193, i64 0, i32 0, i32 0, i32 0, i32 2
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds %"struct.std::__1::pair.1973", %"struct.std::__1::pair.1973"* %195, i64 %198
  %200 = icmp eq i32 %197, 0
  br i1 %200, label %210, label %201

201:                                              ; preds = %191
  %202 = bitcast %"class.blink::LayoutText"** %11 to i8*
  %203 = bitcast %"class.blink::LayoutText"** %11 to i64*
  %204 = bitcast %"class.WTF::Vector.1954"* %12 to i8*
  %205 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %12, i64 0, i32 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %12, i64 0, i32 0, i32 0, i32 2
  %207 = bitcast i32* %13 to i8*
  br label %218

208:                                              ; preds = %311
  %209 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %165, align 8
  br label %210

210:                                              ; preds = %208, %191
  %211 = phi %"struct.blink::SvgInlineNodeData"* [ %209, %208 ], [ %193, %191 ]
  %212 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %211, i64 0, i32 3
  %213 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %211, i64 0, i32 3, i32 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 0
  %216 = select i1 %215, %"class.WTF::HashMap.1981"* null, %"class.WTF::HashMap.1981"* %212
  %217 = icmp eq %"class.blink::NGOffsetMapping"* %192, null
  br i1 %217, label %318, label %316

218:                                              ; preds = %201, %311
  %219 = phi i32 [ 0, %201 ], [ %313, %311 ]
  %220 = phi i32 [ 0, %201 ], [ %312, %311 ]
  %221 = phi %"struct.std::__1::pair.1973"* [ %195, %201 ], [ %314, %311 ]
  %222 = getelementptr inbounds %"struct.std::__1::pair.1973", %"struct.std::__1::pair.1973"* %221, i64 0, i32 1, i32 1
  %223 = load i8, i8* %222, align 4, !range !4
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %311, label %225

225:                                              ; preds = %218
  %226 = getelementptr inbounds %"struct.std::__1::pair.1973", %"struct.std::__1::pair.1973"* %221, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %311, label %229

229:                                              ; preds = %225
  %230 = icmp ult i32 %219, %227
  br i1 %230, label %231, label %275

231:                                              ; preds = %229
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 1
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 1
  %237 = bitcast %"class.WTF::StringImpl"* %236 to i16*
  br label %238

238:                                              ; preds = %272, %231
  %239 = phi i32 [ %219, %231 ], [ %241, %272 ]
  %240 = phi i32 [ %220, %231 ], [ %273, %272 ]
  %241 = add nuw i32 %239, 1
  %242 = add i32 %240, 1
  br i1 %233, label %272, label %243

243:                                              ; preds = %238
  %244 = load i32, i32* %234, align 4
  %245 = icmp ult i32 %242, %244
  %246 = icmp ugt i32 %244, %240
  %247 = and i1 %245, %246
  br i1 %247, label %248, label %272

248:                                              ; preds = %243
  %249 = load atomic i32, i32* %235 monotonic, align 4
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %272

252:                                              ; preds = %248
  %253 = zext i32 %240 to i64
  %254 = getelementptr inbounds i16, i16* %237, i64 %253
  %255 = load i16, i16* %254, align 2
  %256 = and i16 %255, -1024
  %257 = icmp eq i16 %256, -10240
  br i1 %257, label %258, label %272

258:                                              ; preds = %252
  %259 = load atomic i32, i32* %235 monotonic, align 4
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %266

262:                                              ; preds = %258
  %263 = zext i32 %242 to i64
  %264 = getelementptr inbounds i16, i16* %237, i64 %263
  %265 = load i16, i16* %264, align 2
  br label %266

266:                                              ; preds = %258, %262
  %267 = phi i16 [ %265, %262 ], [ 0, %258 ]
  %268 = and i16 %267, -1024
  %269 = icmp eq i16 %268, -9216
  %270 = add nuw i32 %240, 2
  %271 = select i1 %269, i32 %270, i32 %242
  br label %272

272:                                              ; preds = %248, %238, %266, %252, %243
  %273 = phi i32 [ %242, %252 ], [ %242, %243 ], [ %271, %266 ], [ %242, %238 ], [ %242, %248 ]
  %274 = icmp eq i32 %241, %227
  br i1 %274, label %275, label %238

275:                                              ; preds = %272, %229
  %276 = phi i32 [ %220, %229 ], [ %273, %272 ]
  %277 = phi i32 [ %219, %229 ], [ %227, %272 ]
  %278 = call %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping18GetLastMappingUnitEj(%"class.blink::NGOffsetMapping"* %192, i32 %276) #13
  %279 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %165, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #13
  %280 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %278, i64 0, i32 1
  %281 = bitcast %"class.blink::LayoutObject"** %280 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %203, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 0, i64 16, i1 false) #13
  %283 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %279, i64 0, i32 3, i32 0
  %284 = call { %"struct.WTF::KeyValuePair.1985"*, i8 } @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E6insertINS_17HashMapTranslatorISH_SC_S7_EES4_S8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_(%"class.WTF::HashTable.1982"* %283, %"class.blink::LayoutText"** nonnull dereferenceable(8) %11, %"class.WTF::Vector.1954"* nonnull dereferenceable(16) %12) #13
  %285 = extractvalue { %"struct.WTF::KeyValuePair.1985"*, i8 } %284, 0
  %286 = load i32*, i32** %205, align 8
  %287 = icmp eq i32* %286, null
  %288 = bitcast i32* %286 to i8*
  br i1 %287, label %294, label %289, !prof !3

289:                                              ; preds = %275
  %290 = load i32, i32* %206, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %293, label %292, !prof !2

292:                                              ; preds = %289
  store i32 0, i32* %206, align 4
  br label %293

293:                                              ; preds = %292, %289
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %288) #13
  store i32* null, i32** %205, align 8
  br label %294

294:                                              ; preds = %275, %293
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #13
  %295 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %285, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #13
  %296 = call i32 @_ZNK5blink19NGOffsetMappingUnit34ConvertTextContentToFirstDOMOffsetEj(%"class.blink::NGOffsetMappingUnit"* %278, i32 %276) #13
  store i32 %296, i32* %13, align 4
  %297 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %285, i64 0, i32 1, i32 0, i32 0, i32 2
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %285, i64 0, i32 1, i32 0, i32 0, i32 1
  %300 = load i32, i32* %299, align 8
  %301 = icmp eq i32 %298, %300
  br i1 %301, label %309, label %302, !prof !2

302:                                              ; preds = %294
  %303 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %295, i64 0, i32 0, i32 0, i32 0
  %304 = load i32*, i32** %303, align 8
  %305 = zext i32 %298 to i64
  %306 = getelementptr inbounds i32, i32* %304, i64 %305
  store i32 %296, i32* %306, align 4
  %307 = load i32, i32* %297, align 4
  %308 = add i32 %307, 1
  store i32 %308, i32* %297, align 4
  br label %310

309:                                              ; preds = %294
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.1954"* %295, i32* nonnull dereferenceable(4) %13) #13
  br label %310

310:                                              ; preds = %302, %309
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #13
  br label %311

311:                                              ; preds = %310, %225, %218
  %312 = phi i32 [ %220, %218 ], [ %276, %310 ], [ %220, %225 ]
  %313 = phi i32 [ %219, %218 ], [ %277, %310 ], [ %219, %225 ]
  %314 = getelementptr inbounds %"struct.std::__1::pair.1973", %"struct.std::__1::pair.1973"* %221, i64 1
  %315 = icmp eq %"struct.std::__1::pair.1973"* %314, %199
  br i1 %315, label %208, label %218

316:                                              ; preds = %210
  call void @_ZN5blink15NGOffsetMappingD1Ev(%"class.blink::NGOffsetMapping"* nonnull %192) #13
  %317 = bitcast %"class.blink::NGOffsetMapping"* %192 to i8*
  call void @free(i8* %317) #13
  br label %318

318:                                              ; preds = %316, %210
  %319 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAttributesBuilder", %"class.blink::NGSvgTextLayoutAttributesBuilder"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %320 = load %"struct.blink::SvgTextContentRange"*, %"struct.blink::SvgTextContentRange"** %319, align 8
  %321 = icmp eq %"struct.blink::SvgTextContentRange"* %320, null
  %322 = bitcast %"struct.blink::SvgTextContentRange"* %320 to i8*
  br i1 %321, label %329, label %323, !prof !3

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAttributesBuilder", %"class.blink::NGSvgTextLayoutAttributesBuilder"* %7, i64 0, i32 3, i32 0, i32 0, i32 2
  %325 = load i32, i32* %324, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %328, label %327, !prof !2

327:                                              ; preds = %323
  store i32 0, i32* %324, align 4
  br label %328

328:                                              ; preds = %327, %323
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %322) #13
  store %"struct.blink::SvgTextContentRange"* null, %"struct.blink::SvgTextContentRange"** %319, align 8
  br label %329

329:                                              ; preds = %328, %318
  %330 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAttributesBuilder", %"class.blink::NGSvgTextLayoutAttributesBuilder"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %331 = load %"struct.blink::SvgTextContentRange"*, %"struct.blink::SvgTextContentRange"** %330, align 8
  %332 = icmp eq %"struct.blink::SvgTextContentRange"* %331, null
  %333 = bitcast %"struct.blink::SvgTextContentRange"* %331 to i8*
  br i1 %332, label %340, label %334, !prof !3

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAttributesBuilder", %"class.blink::NGSvgTextLayoutAttributesBuilder"* %7, i64 0, i32 2, i32 0, i32 0, i32 2
  %336 = load i32, i32* %335, align 4
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %339, label %338, !prof !2

338:                                              ; preds = %334
  store i32 0, i32* %335, align 4
  br label %339

339:                                              ; preds = %338, %334
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %333) #13
  store %"struct.blink::SvgTextContentRange"* null, %"struct.blink::SvgTextContentRange"** %330, align 8
  br label %340

340:                                              ; preds = %339, %329
  %341 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAttributesBuilder", %"class.blink::NGSvgTextLayoutAttributesBuilder"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %342 = load %"struct.std::__1::pair.1973"*, %"struct.std::__1::pair.1973"** %341, align 8
  %343 = icmp eq %"struct.std::__1::pair.1973"* %342, null
  %344 = bitcast %"struct.std::__1::pair.1973"* %342 to i8*
  br i1 %343, label %351, label %345, !prof !3

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.blink::NGSvgTextLayoutAttributesBuilder", %"class.blink::NGSvgTextLayoutAttributesBuilder"* %7, i64 0, i32 1, i32 0, i32 0, i32 2
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %350, label %349, !prof !2

349:                                              ; preds = %345
  store i32 0, i32* %346, align 4
  br label %350

350:                                              ; preds = %349, %345
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %344) #13
  store %"struct.std::__1::pair.1973"* null, %"struct.std::__1::pair.1973"** %341, align 8
  br label %351

351:                                              ; preds = %340, %350
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %85) #13
  %352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %353 = icmp eq %"class.WTF::StringImpl"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %352, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %354
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %360, %354 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %352) #13
  br label %367

367:                                              ; preds = %351, %363, %366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #13
  call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEED1Ev(%"class.blink::NGInlineItemsBuilderTemplate.2018"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %54) #13
  %368 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %29, align 8
  %369 = icmp eq %"class.blink::NGInlineItem"* %368, null
  br i1 %369, label %386, label %370, !prof !3

370:                                              ; preds = %367
  %371 = bitcast %"class.blink::NGInlineItem"* %368 to i8*
  %372 = load i32, i32* %31, align 4
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %384, label %374, !prof !2

374:                                              ; preds = %370
  %375 = zext i32 %372 to i64
  %376 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %368, i64 %375
  br label %377

377:                                              ; preds = %377, %374
  %378 = phi %"class.blink::NGInlineItem"* [ %379, %377 ], [ %368, %374 ]
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* %378) #13
  %379 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %378, i64 1
  %380 = icmp eq %"class.blink::NGInlineItem"* %379, %376
  br i1 %380, label %381, label %377

381:                                              ; preds = %377
  store i32 0, i32* %31, align 4
  %382 = bitcast %"class.WTF::Vector.1920"* %4 to i8**
  %383 = load i8*, i8** %382, align 8
  br label %384

384:                                              ; preds = %381, %370
  %385 = phi i8* [ %383, %381 ], [ %371, %370 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %385) #13
  store %"class.blink::NGInlineItem"* null, %"class.blink::NGInlineItem"** %29, align 8
  br label %386

386:                                              ; preds = %367, %384
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %387

387:                                              ; preds = %386, %3
  %388 = phi %"class.WTF::HashMap.1981"* [ %216, %386 ], [ null, %3 ]
  %389 = phi %"struct.blink::NGInlineNodeData"* [ null, %386 ], [ %2, %3 ]
  %390 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1
  %391 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %16, i64 0, i32 0, i32 1, i32 0
  %392 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %391, align 8
  %393 = icmp eq %"class.blink::LayoutObject"* %392, null
  br i1 %393, label %419, label %394

394:                                              ; preds = %387, %394
  %395 = phi %"class.blink::LayoutObject"* [ %399, %394 ], [ %392, %387 ]
  %396 = phi i32 [ %397, %394 ], [ 0, %387 ]
  %397 = add i32 %396, 1
  %398 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %395, i64 0, i32 9
  %399 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %398, align 8
  %400 = icmp eq %"class.blink::LayoutObject"* %399, null
  br i1 %400, label %401, label %394

401:                                              ; preds = %394
  %402 = shl i32 %397, 2
  %403 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %404 = load i32, i32* %403, align 8
  %405 = icmp ult i32 %404, %402
  br i1 %405, label %406, label %419, !prof !3

406:                                              ; preds = %401
  %407 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %390, i64 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %407, align 8
  %409 = icmp eq %"class.blink::NGInlineItem"* %408, null
  br i1 %409, label %410, label %418

410:                                              ; preds = %406
  %411 = zext i32 %402 to i64
  %412 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm(i64 %411) #13
  %413 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %412, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGInlineItemEEEPKcv, i64 0, i64 0)) #13
  %414 = ptrtoint i8* %413 to i64
  %415 = bitcast %"class.WTF::Vector.1920"* %390 to i64*
  store atomic i64 %414, i64* %415 monotonic, align 8
  %416 = lshr i64 %412, 5
  %417 = trunc i64 %416 to i32
  store i32 %417, i32* %403, align 8
  br label %419

418:                                              ; preds = %406
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1920"* %390, i32 %402) #13
  br label %419

419:                                              ; preds = %387, %401, %410, %418
  %420 = bitcast %"class.blink::NGInlineItemsBuilderTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %420) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %420, i8 -86, i64 120, i1 false)
  %421 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 0
  store %"class.blink::LayoutBlockFlow"* %16, %"class.blink::LayoutBlockFlow"** %421, align 8
  %422 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 1
  store %"class.WTF::Vector.1920"* %390, %"class.WTF::Vector.1920"** %422, align 8
  %423 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %423, align 8
  %424 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 2, i32 1
  %425 = bitcast %union.anon.1997* %424 to i8*
  store i8 0, i8* %425, align 8
  %426 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 2, i32 2
  store i32 0, i32* %426, align 8
  %427 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 2, i32 3
  store i8 1, i8* %427, align 4
  %428 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 2, i32 4
  store i8 0, i8* %428, align 1
  %429 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 5
  %430 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 7
  %431 = bitcast %"class.WTF::Vector.2008"* %429 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %431, i8 0, i64 32, i1 false) #13
  store %"class.WTF::HashMap.1981"* %388, %"class.WTF::HashMap.1981"** %430, align 8
  %432 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 8
  store i8 0, i8* %432, align 8
  %433 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 9
  store i8 0, i8* %433, align 1
  %434 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 10
  store i8 1, i8* %434, align 2
  %435 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 11
  store i8 1, i8* %435, align 1
  %436 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %14, i64 0, i32 12
  store i8 0, i8* %436, align 4
  call fastcc void @_ZN5blink12_GLOBAL__N_122CollectInlinesInternalINS_28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEEEEEvPT_PKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate"* nonnull %14, %"struct.blink::NGInlineNodeData"* %389)
  call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE23DidFinishCollectInlinesEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate"* nonnull %14, %"struct.blink::NGInlineNodeData"* %1) #13
  %437 = load i8, i8* %436, align 4, !range !4
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %463, label %439, !prof !3

439:                                              ; preds = %419
  %440 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutObject"**
  %441 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %440, align 8
  %442 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %441, i64 0, i32 6, i32 0, i32 0
  %443 = load %"class.blink::Node"*, %"class.blink::Node"** %442, align 8
  %444 = icmp eq %"class.blink::Node"* %443, null
  br i1 %444, label %445, label %452

445:                                              ; preds = %439, %445
  %446 = phi %"class.blink::LayoutObject"* [ %448, %445 ], [ %441, %439 ]
  %447 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %446, i64 0, i32 7
  %448 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %447, align 8
  %449 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %448, i64 0, i32 6, i32 0, i32 0
  %450 = load %"class.blink::Node"*, %"class.blink::Node"** %449, align 8
  %451 = icmp eq %"class.blink::Node"* %450, null
  br i1 %451, label %445, label %452

452:                                              ; preds = %445, %439
  %453 = phi %"class.blink::Node"* [ %443, %439 ], [ %450, %445 ]
  %454 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %453, i64 0, i32 3, i32 0, i32 0
  %455 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %454, align 8
  %456 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %455, i64 0, i32 2, i32 0, i32 0
  %457 = load %"class.blink::Document"*, %"class.blink::Document"** %456, align 8
  %458 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %457, i64 0, i32 2
  %459 = bitcast %"class.blink::UseCounter"* %458 to void (%"class.blink::UseCounter"*, i32)***
  %460 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %459, align 8
  %461 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %460, i64 3
  %462 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %461, align 8
  call void %462(%"class.blink::UseCounter"* %458, i32 3706) #13
  br label %463

463:                                              ; preds = %419, %452
  call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEED1Ev(%"class.blink::NGInlineItemsBuilderTemplate"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %420) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode11SegmentTextEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* nocapture readonly, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink12NGInlineNode15SegmentBidiRunsEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %1)
  tail call void @_ZNK5blink12NGInlineNode17SegmentScriptRunsEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* undef, %"struct.blink::NGInlineNodeData"* %1)
  tail call void @_ZNK5blink12NGInlineNode22SegmentFontOrientationEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %1)
  %3 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %3, align 8
  %5 = icmp eq %"class.blink::NGInlineItemSegments"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1
  tail call void @_ZN5blink20NGInlineItemSegments16ComputeItemIndexERKN3WTF6VectorINS_12NGInlineItemELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGInlineItemSegments"* nonnull %4, %"class.WTF::Vector.1920"* dereferenceable(16) %7) #13
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode9ShapeTextEPNS_17NGInlineItemsDataEPKN3WTF6StringEPKNS3_6VectorINS_12NGInlineItemELj0ENS3_18PartitionAllocatorEEE(%"class.blink::NGInlineNode"*, %"struct.blink::NGInlineItemsData"*, %"class.WTF::String"* readonly, %"class.WTF::Vector.1920"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ShapeResult"*, align 8
  %6 = alloca %"class.WTF::Vector.2247", align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %"class.blink::Length"*, align 8
  %22 = alloca %"class.blink::Length"*, align 8
  %23 = alloca %"class.blink::Length"*, align 8
  %24 = alloca %"class.blink::Length"*, align 8
  %25 = alloca %"class.blink::Length"*, align 8
  %26 = alloca %"class.blink::Length"*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %"class.base::RepeatingCallback", align 8
  %32 = alloca %"class.base::TimeTicks", align 8
  %33 = alloca %"class.blink::(anonymous namespace)::ReusingTextShaper", align 8
  %34 = alloca %"class.blink::ShapeResultSpacing", align 8
  %35 = alloca %"class.WTF::StringView", align 8
  %36 = alloca %"class.WTF::StringView", align 8
  %37 = alloca %"class.WTF::Vector.2071", align 8
  %38 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 57, i32 0), align 16
  %39 = and i8 %38, 25
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %47, label %41, !prof !3

41:                                               ; preds = %4
  %42 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %43 = bitcast %"class.base::TimeTicks"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %32, i64 0, i32 0, i32 0
  %45 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %45, i64* %44, align 8
  %46 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 57, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %42, %"class.base::TimeTicks"* nonnull dereferenceable(8) %32, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  br label %47

47:                                               ; preds = %4, %41
  %48 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 57, i32 0), %41 ]
  %49 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), %41 ]
  %50 = phi i64 [ -6148914691236517206, %4 ], [ %46, %41 ]
  %51 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %1, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %1, i64 0, i32 1
  %53 = bitcast %"class.blink::(anonymous namespace)::ReusingTextShaper"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #13
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::ReusingTextShaper", %"class.blink::(anonymous namespace)::ReusingTextShaper"* %33, i64 0, i32 0
  %55 = getelementptr inbounds %"class.blink::(anonymous namespace)::ReusingTextShaper", %"class.blink::(anonymous namespace)::ReusingTextShaper"* %33, i64 0, i32 1
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::ReusingTextShaper", %"class.blink::(anonymous namespace)::ReusingTextShaper"* %33, i64 0, i32 2, i32 0, i32 0, i32 0
  %57 = bitcast %"class.base::RepeatingCallback"* %31 to i8*
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::ReusingTextShaper", %"class.blink::(anonymous namespace)::ReusingTextShaper"* %33, i64 0, i32 2, i32 1
  %59 = bitcast %"class.base::RepeatingCallback"* %58 to i64*
  store i64 -6148914691236517206, i64* %59, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57)
  store %"struct.blink::NGInlineItemsData"* %1, %"struct.blink::NGInlineItemsData"** %54, align 8
  store %"class.WTF::Vector.1920"* %3, %"class.WTF::Vector.1920"** %55, align 8
  %60 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %60, align 8
  %61 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %56, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %47
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #13
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %69
  call void @llvm.trap() #13
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %47, %64, %79
  %82 = getelementptr inbounds %"class.blink::(anonymous namespace)::ReusingTextShaper", %"class.blink::(anonymous namespace)::ReusingTextShaper"* %33, i64 0, i32 2, i32 1, i32 0
  %83 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %31, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %82, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %83) #13
  %84 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %31, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %84) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57)
  %85 = bitcast %"class.blink::ShapeResultSpacing"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %85) #13
  %86 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %34, i64 0, i32 0
  store %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), %"class.WTF::String"** %86, align 8
  %87 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %34, i64 0, i32 1
  %88 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %34, i64 0, i32 5
  %89 = bitcast float* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 -1, i64 16, i1 false)
  %90 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %34, i64 0, i32 7
  %91 = getelementptr inbounds %"class.blink::ShapeResultSpacing", %"class.blink::ShapeResultSpacing"* %34, i64 0, i32 11
  %92 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::NGLayoutInputNode"*
  %93 = bitcast i32* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 -86, i64 16, i1 false)
  %94 = call zeroext i1 @_ZNK5blink17NGLayoutInputNode9IsSvgTextEv(%"class.blink::NGLayoutInputNode"* %92) #13
  %95 = zext i1 %94 to i8
  store %"class.WTF::String"* %51, %"class.WTF::String"** %86, align 8
  %96 = bitcast float* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 28, i1 false) #13
  store i8 %95, i8* %91, align 4
  %97 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %157, label %100

100:                                              ; preds = %81
  %101 = bitcast %"class.blink::Length"** %19 to i8*
  %102 = bitcast %"class.blink::Length"** %23 to i8*
  %103 = bitcast %"class.blink::Length"** %7 to i8*
  %104 = bitcast %"class.blink::Length"** %11 to i8*
  %105 = bitcast %"class.blink::Length"** %20 to i8*
  %106 = bitcast %"class.blink::Length"** %21 to i8*
  %107 = bitcast %"class.blink::Length"** %22 to i8*
  %108 = bitcast %"class.blink::Length"** %24 to i8*
  %109 = bitcast %"class.blink::Length"** %25 to i8*
  %110 = bitcast %"class.blink::Length"** %26 to i8*
  %111 = bitcast i32* %27 to i8*
  %112 = bitcast i32* %28 to i8*
  %113 = bitcast i32* %29 to i8*
  %114 = bitcast i32* %30 to i8*
  %115 = bitcast %"class.blink::Length"** %8 to i8*
  %116 = bitcast %"class.blink::Length"** %9 to i8*
  %117 = bitcast %"class.blink::Length"** %10 to i8*
  %118 = bitcast %"class.blink::Length"** %12 to i8*
  %119 = bitcast %"class.blink::Length"** %13 to i8*
  %120 = bitcast %"class.blink::Length"** %14 to i8*
  %121 = bitcast i32* %15 to i8*
  %122 = bitcast i32* %16 to i8*
  %123 = bitcast i32* %17 to i8*
  %124 = bitcast i32* %18 to i8*
  %125 = icmp eq %"class.WTF::String"* %2, null
  %126 = bitcast %"class.WTF::StringView"* %35 to i8*
  %127 = bitcast %"class.WTF::StringView"* %36 to i8*
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 2
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 0
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 1
  %132 = bitcast i8** %131 to i16**
  %133 = bitcast %"class.WTF::StringView"* %35 to i64*
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 2
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 0
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 1
  %137 = bitcast i8** %136 to i16**
  %138 = bitcast %"class.WTF::StringView"* %36 to i64*
  %139 = bitcast %"class.WTF::Vector.2247"* %6 to i8*
  %140 = getelementptr inbounds %"class.WTF::Vector.2247", %"class.WTF::Vector.2247"* %6, i64 0, i32 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.WTF::Vector.2247", %"class.WTF::Vector.2247"* %6, i64 0, i32 0, i32 0, i32 1
  %142 = getelementptr inbounds %"class.WTF::Vector.2247", %"class.WTF::Vector.2247"* %6, i64 0, i32 0, i32 0, i32 2
  %143 = bitcast %"class.blink::ShapeResult"** %5 to i8*
  %144 = bitcast %"class.blink::ShapeResult"** %5 to i64*
  %145 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %146 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutObject"**
  %147 = bitcast %"class.WTF::Vector.2071"* %37 to i8*
  %148 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %37, i64 0, i32 0, i32 1, i64 0
  %149 = bitcast %"class.WTF::Vector.2071"* %37 to i8**
  %150 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %37, i64 0, i32 0, i32 0, i32 1
  %151 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %37, i64 0, i32 0, i32 0, i32 2
  %152 = bitcast %"class.WTF::Vector.2071"* %37 to i64*
  %153 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %37, i64 0, i32 0, i32 0, i32 0
  %154 = bitcast i8* %148 to %"struct.blink::ShapeResult::ShapeRange"*
  %155 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %37, i64 0, i32 0
  %156 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %37, i64 0, i32 0, i32 1, i64 0
  br label %181

157:                                              ; preds = %979, %81
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %85) #13
  %158 = getelementptr inbounds %"class.blink::(anonymous namespace)::ReusingTextShaper", %"class.blink::(anonymous namespace)::ReusingTextShaper"* %33, i64 0, i32 2, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %158) #13
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #13
  br label %174

174:                                              ; preds = %157, %170, %173
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #13
  %175 = icmp eq i8* %48, null
  br i1 %175, label %180, label %176

176:                                              ; preds = %174
  %177 = load i8, i8* %48, align 1
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %180, label %179

179:                                              ; preds = %176
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %48, i8* %49, i64 %50) #13
  br label %180

180:                                              ; preds = %174, %176, %179
  ret void

181:                                              ; preds = %100, %979
  %182 = phi i32 [ 0, %100 ], [ %980, %979 ]
  %183 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* %52, i32 %182) #13
  %184 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %183, i64 0, i32 4
  %185 = load i32, i32* %184, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %193

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %183, i64 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 8
  %192 = icmp eq i32 %189, %191
  br i1 %192, label %193, label %195

193:                                              ; preds = %187, %181
  %194 = add nuw i32 %182, 1
  br label %979

195:                                              ; preds = %187
  %196 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %183)
  %197 = call dereferenceable(88) %"class.blink::Font"* @_ZNK5blink12NGInlineItem18FontWithSvgScalingEv(%"class.blink::NGInlineItem"* %183) #13
  %198 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %183, i64 0, i32 5
  %199 = load i32, i32* %198, align 4
  %200 = lshr i32 %199, 7
  %201 = trunc i32 %200 to i8
  %202 = and i8 %201, 1
  %203 = add nuw i32 %182, 1
  %204 = load i32, i32* %188, align 4
  %205 = and i32 %199, 7
  %206 = icmp eq i32 %205, 3
  br i1 %206, label %210, label %207, !prof !2

207:                                              ; preds = %195
  %208 = load i32, i32* %97, align 4
  %209 = icmp ult i32 %203, %208
  br i1 %209, label %231, label %529

210:                                              ; preds = %195
  %211 = call i32 @_ZN5blink10ListMarker13WidthOfSymbolERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %196) #13
  %212 = load i32, i32* %190, align 8
  %213 = load i32, i32* %188, align 4
  %214 = sub i32 %213, %212
  %215 = sitofp i32 %211 to float
  %216 = fmul float %215, 1.562500e-02
  %217 = call %"class.blink::ShapeResult"* @_ZN5blink11ShapeResult15CreateForSpacesEPKNS_4FontENS_13TextDirectionEjjf(%"class.blink::Font"* %197, i8 zeroext %202, i32 %212, i32 %214, float %216) #13
  %218 = ptrtoint %"class.blink::ShapeResult"* %217 to i64
  %219 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %183, i64 0, i32 2
  %220 = bitcast %class.scoped_refptr.1923* %219 to i64*
  %221 = getelementptr inbounds %class.scoped_refptr.1923, %class.scoped_refptr.1923* %219, i64 0, i32 0
  %222 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %221, align 8
  store i64 %218, i64* %220, align 8
  %223 = icmp eq %"class.blink::ShapeResult"* %222, null
  br i1 %223, label %979, label %224

224:                                              ; preds = %210
  %225 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %222, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %225) #13
  %226 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %222, i64 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %979

229:                                              ; preds = %224
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %222) #13
  %230 = bitcast %"class.blink::ShapeResult"* %222 to i8*
  call void @free(i8* %230) #13
  br label %979

231:                                              ; preds = %207, %523
  %232 = phi i32 [ %525, %523 ], [ 1, %207 ]
  %233 = phi i32 [ %524, %523 ], [ %204, %207 ]
  %234 = phi i32 [ %526, %523 ], [ %203, %207 ]
  %235 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* %52, i32 %234) #13
  %236 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %235, i64 0, i32 4
  %237 = load i32, i32* %236, align 8
  switch i32 %237, label %529 [
    i32 4, label %407
    i32 0, label %238
    i32 3, label %291
  ]

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %235, i64 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %235, i64 0, i32 0
  %242 = load i32, i32* %241, align 8
  %243 = icmp eq i32 %240, %242
  br i1 %243, label %523, label %244

244:                                              ; preds = %238
  %245 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %235) #13
  %246 = icmp eq %"class.blink::ComputedStyle"* %245, %196
  br i1 %246, label %256, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %245, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %249, i64 0, i32 1, i32 0, i32 0
  %251 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %250, align 8
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %251, i64 0, i32 1
  %253 = icmp eq %"class.blink::Font"* %252, %197
  br i1 %253, label %256, label %254

254:                                              ; preds = %247
  %255 = call zeroext i1 @_ZNK5blink4FonteqERKS0_(%"class.blink::Font"* %252, %"class.blink::Font"* dereferenceable(88) %197) #13
  br i1 %255, label %256, label %529

256:                                              ; preds = %254, %247, %244
  %257 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %235, i64 0, i32 5
  %258 = load i32, i32* %257, align 4
  %259 = lshr i32 %258, 7
  %260 = trunc i32 %259 to i8
  %261 = and i8 %260, 1
  %262 = icmp eq i8 %261, %202
  br i1 %262, label %263, label %529

263:                                              ; preds = %256
  %264 = load i32, i32* %198, align 4
  %265 = xor i32 %264, %258
  %266 = and i32 %265, 67076096
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %529

268:                                              ; preds = %263
  %269 = load i32, i32* %241, align 8
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %288, label %272

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = icmp ugt i32 %274, %269
  br i1 %275, label %276, label %288

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %288

281:                                              ; preds = %276
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 1
  %283 = bitcast %"class.WTF::StringImpl"* %282 to i16*
  %284 = zext i32 %269 to i64
  %285 = getelementptr inbounds i16, i16* %283, i64 %284
  %286 = load i16, i16* %285, align 2
  %287 = icmp eq i16 %286, 8204
  br i1 %287, label %529, label %288

288:                                              ; preds = %276, %268, %272, %281
  %289 = load i32, i32* %239, align 4
  %290 = add i32 %232, 1
  br label %523

291:                                              ; preds = %231
  %292 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %235) #13
  %293 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %292, i64 0, i32 0, i32 9
  %294 = bitcast [20 x i8]* %293 to i160*
  %295 = load i160, i160* %294, align 8
  %296 = and i160 %295, 89202980794122492566142873090593446023921664
  %297 = icmp eq i160 %296, 0
  br i1 %297, label %328, label %298

298:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107)
  %299 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %292, i64 0, i32 0, i32 7, i32 0, i32 0
  %300 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %299, align 8, !noalias !5
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %300, i64 0, i32 16
  %302 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %300, i64 0, i32 15
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %300, i64 0, i32 13
  %304 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %300, i64 0, i32 14
  store %"class.blink::Length"* %301, %"class.blink::Length"** %19, align 8, !alias.scope !5
  store %"class.blink::Length"* %302, %"class.blink::Length"** %20, align 8, !alias.scope !5
  store %"class.blink::Length"* %303, %"class.blink::Length"** %21, align 8, !alias.scope !5
  store %"class.blink::Length"* %304, %"class.blink::Length"** %22, align 8, !alias.scope !5
  %305 = and i160 %295, 15211807202738752817960438464512
  %306 = icmp eq i160 %305, 0
  %307 = and i160 %295, 41538374868278621028243970633760768
  %308 = icmp eq i160 %307, 0
  %309 = select i1 %308, %"class.blink::Length"** %22, %"class.blink::Length"** %20
  %310 = select i1 %308, %"class.blink::Length"** %19, %"class.blink::Length"** %21
  %311 = select i1 %306, %"class.blink::Length"** %309, %"class.blink::Length"** %310
  %312 = load %"class.blink::Length"*, %"class.blink::Length"** %311, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107)
  %313 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %312, i64 0, i32 2
  %314 = load i8, i8* %313, align 1
  %315 = icmp eq i8 %314, 8
  br i1 %315, label %529, label %316

316:                                              ; preds = %298
  %317 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %312, i64 0, i32 3
  %318 = load i8, i8* %317, align 2, !range !4
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %324, label %320

320:                                              ; preds = %316
  %321 = bitcast %"class.blink::Length"* %312 to float*
  %322 = load float, float* %321, align 4
  %323 = fcmp oeq float %322, 0.000000e+00
  br i1 %323, label %328, label %529

324:                                              ; preds = %316
  %325 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %312, i64 0, i32 0, i32 0
  %326 = load i32, i32* %325, align 4
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %529

328:                                              ; preds = %324, %320, %291
  %329 = and i160 %295, 44601490397061246283071436545296723011960832
  %330 = icmp eq i160 %329, 0
  br i1 %330, label %331, label %334

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %292, i64 0, i32 0, i32 7, i32 0, i32 0
  %333 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %332, align 8, !noalias !8
  br label %364

334:                                              ; preds = %328
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110)
  %335 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %292, i64 0, i32 0, i32 7, i32 0, i32 0
  %336 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %335, align 8, !noalias !11
  %337 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %336, i64 0, i32 12
  %338 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %336, i64 0, i32 11
  %339 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %336, i64 0, i32 9
  %340 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %336, i64 0, i32 10
  store %"class.blink::Length"* %337, %"class.blink::Length"** %23, align 8, !alias.scope !11
  store %"class.blink::Length"* %338, %"class.blink::Length"** %24, align 8, !alias.scope !11
  store %"class.blink::Length"* %339, %"class.blink::Length"** %25, align 8, !alias.scope !11
  store %"class.blink::Length"* %340, %"class.blink::Length"** %26, align 8, !alias.scope !11
  %341 = and i160 %295, 15211807202738752817960438464512
  %342 = icmp eq i160 %341, 0
  %343 = and i160 %295, 41538374868278621028243970633760768
  %344 = icmp eq i160 %343, 0
  %345 = select i1 %344, %"class.blink::Length"** %26, %"class.blink::Length"** %24
  %346 = select i1 %344, %"class.blink::Length"** %23, %"class.blink::Length"** %25
  %347 = select i1 %342, %"class.blink::Length"** %345, %"class.blink::Length"** %346
  %348 = load %"class.blink::Length"*, %"class.blink::Length"** %347, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  %349 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %348, i64 0, i32 2
  %350 = load i8, i8* %349, align 1
  %351 = icmp eq i8 %350, 8
  br i1 %351, label %529, label %352

352:                                              ; preds = %334
  %353 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %348, i64 0, i32 3
  %354 = load i8, i8* %353, align 2, !range !4
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %360, label %356

356:                                              ; preds = %352
  %357 = bitcast %"class.blink::Length"* %348 to float*
  %358 = load float, float* %357, align 4
  %359 = fcmp oeq float %358, 0.000000e+00
  br i1 %359, label %364, label %529

360:                                              ; preds = %352
  %361 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %348, i64 0, i32 0, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %529

364:                                              ; preds = %360, %356, %331
  %365 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %333, %331 ], [ %336, %356 ], [ %336, %360 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114)
  %366 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %365, i64 0, i32 27
  %367 = load i16, i16* %366, align 8, !noalias !8
  %368 = icmp ult i16 %367, 8192
  br i1 %368, label %372, label %369

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %365, i64 0, i32 26, i32 0
  %371 = load i32, i32* %370, align 4, !noalias !8
  br label %372

372:                                              ; preds = %369, %364
  %373 = phi i32 [ %371, %369 ], [ 0, %364 ]
  %374 = and i16 %367, 3584
  %375 = icmp eq i16 %374, 0
  br i1 %375, label %379, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %365, i64 0, i32 25, i32 0
  %378 = load i32, i32* %377, align 4, !noalias !8
  br label %379

379:                                              ; preds = %376, %372
  %380 = phi i32 [ %378, %376 ], [ 0, %372 ]
  %381 = and i16 %367, 14
  %382 = icmp eq i16 %381, 0
  br i1 %382, label %386, label %383

383:                                              ; preds = %379
  %384 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %365, i64 0, i32 23, i32 0
  %385 = load i32, i32* %384, align 4, !noalias !8
  br label %386

386:                                              ; preds = %383, %379
  %387 = phi i32 [ %385, %383 ], [ 0, %379 ]
  %388 = and i16 %367, 224
  %389 = icmp eq i16 %388, 0
  br i1 %389, label %393, label %390

390:                                              ; preds = %386
  %391 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %365, i64 0, i32 24, i32 0
  %392 = load i32, i32* %391, align 4, !noalias !8
  br label %393

393:                                              ; preds = %390, %386
  %394 = phi i32 [ %392, %390 ], [ 0, %386 ]
  store i32 %373, i32* %27, align 4, !alias.scope !8
  store i32 %380, i32* %28, align 4, !alias.scope !8
  store i32 %387, i32* %29, align 4, !alias.scope !8
  store i32 %394, i32* %30, align 4, !alias.scope !8
  %395 = and i160 %295, 15211807202738752817960438464512
  %396 = icmp eq i160 %395, 0
  %397 = and i160 %295, 41538374868278621028243970633760768
  %398 = icmp eq i160 %397, 0
  %399 = select i1 %398, i32* %30, i32* %28
  %400 = select i1 %398, i32* %27, i32* %29
  %401 = select i1 %396, i32* %399, i32* %400
  %402 = load i32, i32* %401, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114)
  %403 = icmp ne i32 %402, 0
  %404 = and i160 %295, 276701161105643274240
  %405 = icmp ne i160 %404, 0
  %406 = or i1 %405, %403
  br i1 %406, label %529, label %523

407:                                              ; preds = %231
  %408 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %235) #13
  %409 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %408, i64 0, i32 0, i32 9
  %410 = bitcast [20 x i8]* %409 to i160*
  %411 = load i160, i160* %410, align 8
  %412 = and i160 %411, 89202980794122492566142873090593446023921664
  %413 = icmp eq i160 %412, 0
  br i1 %413, label %444, label %414

414:                                              ; preds = %407
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117)
  %415 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %408, i64 0, i32 0, i32 7, i32 0, i32 0
  %416 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %415, align 8, !noalias !14
  %417 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %416, i64 0, i32 16
  %418 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %416, i64 0, i32 15
  %419 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %416, i64 0, i32 13
  %420 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %416, i64 0, i32 14
  store %"class.blink::Length"* %417, %"class.blink::Length"** %7, align 8, !alias.scope !14
  store %"class.blink::Length"* %418, %"class.blink::Length"** %8, align 8, !alias.scope !14
  store %"class.blink::Length"* %419, %"class.blink::Length"** %9, align 8, !alias.scope !14
  store %"class.blink::Length"* %420, %"class.blink::Length"** %10, align 8, !alias.scope !14
  %421 = and i160 %411, 15211807202738752817960438464512
  %422 = icmp eq i160 %421, 0
  %423 = and i160 %411, 41538374868278621028243970633760768
  %424 = icmp eq i160 %423, 0
  %425 = select i1 %424, %"class.blink::Length"** %8, %"class.blink::Length"** %10
  %426 = select i1 %424, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %427 = select i1 %422, %"class.blink::Length"** %425, %"class.blink::Length"** %426
  %428 = load %"class.blink::Length"*, %"class.blink::Length"** %427, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117)
  %429 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %428, i64 0, i32 2
  %430 = load i8, i8* %429, align 1
  %431 = icmp eq i8 %430, 8
  br i1 %431, label %529, label %432

432:                                              ; preds = %414
  %433 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %428, i64 0, i32 3
  %434 = load i8, i8* %433, align 2, !range !4
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %440, label %436

436:                                              ; preds = %432
  %437 = bitcast %"class.blink::Length"* %428 to float*
  %438 = load float, float* %437, align 4
  %439 = fcmp oeq float %438, 0.000000e+00
  br i1 %439, label %444, label %529

440:                                              ; preds = %432
  %441 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %428, i64 0, i32 0, i32 0
  %442 = load i32, i32* %441, align 4
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %529

444:                                              ; preds = %440, %436, %407
  %445 = and i160 %411, 44601490397061246283071436545296723011960832
  %446 = icmp eq i160 %445, 0
  br i1 %446, label %447, label %450

447:                                              ; preds = %444
  %448 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %408, i64 0, i32 0, i32 7, i32 0, i32 0
  %449 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %448, align 8, !noalias !17
  br label %480

450:                                              ; preds = %444
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120)
  %451 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %408, i64 0, i32 0, i32 7, i32 0, i32 0
  %452 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %451, align 8, !noalias !20
  %453 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %452, i64 0, i32 12
  %454 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %452, i64 0, i32 11
  %455 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %452, i64 0, i32 9
  %456 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %452, i64 0, i32 10
  store %"class.blink::Length"* %453, %"class.blink::Length"** %11, align 8, !alias.scope !20
  store %"class.blink::Length"* %454, %"class.blink::Length"** %12, align 8, !alias.scope !20
  store %"class.blink::Length"* %455, %"class.blink::Length"** %13, align 8, !alias.scope !20
  store %"class.blink::Length"* %456, %"class.blink::Length"** %14, align 8, !alias.scope !20
  %457 = and i160 %411, 15211807202738752817960438464512
  %458 = icmp eq i160 %457, 0
  %459 = and i160 %411, 41538374868278621028243970633760768
  %460 = icmp eq i160 %459, 0
  %461 = select i1 %460, %"class.blink::Length"** %12, %"class.blink::Length"** %14
  %462 = select i1 %460, %"class.blink::Length"** %13, %"class.blink::Length"** %11
  %463 = select i1 %458, %"class.blink::Length"** %461, %"class.blink::Length"** %462
  %464 = load %"class.blink::Length"*, %"class.blink::Length"** %463, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120)
  %465 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %464, i64 0, i32 2
  %466 = load i8, i8* %465, align 1
  %467 = icmp eq i8 %466, 8
  br i1 %467, label %529, label %468

468:                                              ; preds = %450
  %469 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %464, i64 0, i32 3
  %470 = load i8, i8* %469, align 2, !range !4
  %471 = icmp eq i8 %470, 0
  br i1 %471, label %476, label %472

472:                                              ; preds = %468
  %473 = bitcast %"class.blink::Length"* %464 to float*
  %474 = load float, float* %473, align 4
  %475 = fcmp oeq float %474, 0.000000e+00
  br i1 %475, label %480, label %529

476:                                              ; preds = %468
  %477 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %464, i64 0, i32 0, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %480, label %529

480:                                              ; preds = %476, %472, %447
  %481 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %449, %447 ], [ %452, %472 ], [ %452, %476 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124)
  %482 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %481, i64 0, i32 27
  %483 = load i16, i16* %482, align 8, !noalias !17
  %484 = icmp ult i16 %483, 8192
  br i1 %484, label %488, label %485

485:                                              ; preds = %480
  %486 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %481, i64 0, i32 26, i32 0
  %487 = load i32, i32* %486, align 4, !noalias !17
  br label %488

488:                                              ; preds = %485, %480
  %489 = phi i32 [ %487, %485 ], [ 0, %480 ]
  %490 = and i16 %483, 3584
  %491 = icmp eq i16 %490, 0
  br i1 %491, label %495, label %492

492:                                              ; preds = %488
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %481, i64 0, i32 25, i32 0
  %494 = load i32, i32* %493, align 4, !noalias !17
  br label %495

495:                                              ; preds = %492, %488
  %496 = phi i32 [ %494, %492 ], [ 0, %488 ]
  %497 = and i16 %483, 14
  %498 = icmp eq i16 %497, 0
  br i1 %498, label %502, label %499

499:                                              ; preds = %495
  %500 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %481, i64 0, i32 23, i32 0
  %501 = load i32, i32* %500, align 4, !noalias !17
  br label %502

502:                                              ; preds = %499, %495
  %503 = phi i32 [ %501, %499 ], [ 0, %495 ]
  %504 = and i16 %483, 224
  %505 = icmp eq i16 %504, 0
  br i1 %505, label %509, label %506

506:                                              ; preds = %502
  %507 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %481, i64 0, i32 24, i32 0
  %508 = load i32, i32* %507, align 4, !noalias !17
  br label %509

509:                                              ; preds = %506, %502
  %510 = phi i32 [ %508, %506 ], [ 0, %502 ]
  store i32 %489, i32* %15, align 4, !alias.scope !17
  store i32 %496, i32* %16, align 4, !alias.scope !17
  store i32 %503, i32* %17, align 4, !alias.scope !17
  store i32 %510, i32* %18, align 4, !alias.scope !17
  %511 = and i160 %411, 15211807202738752817960438464512
  %512 = icmp eq i160 %511, 0
  %513 = and i160 %411, 41538374868278621028243970633760768
  %514 = icmp eq i160 %513, 0
  %515 = select i1 %514, i32* %16, i32* %18
  %516 = select i1 %514, i32* %17, i32* %15
  %517 = select i1 %512, i32* %515, i32* %516
  %518 = load i32, i32* %517, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124)
  %519 = icmp ne i32 %518, 0
  %520 = and i160 %411, 276701161105643274240
  %521 = icmp ne i160 %520, 0
  %522 = or i1 %521, %519
  br i1 %522, label %529, label %523

523:                                              ; preds = %509, %393, %288, %238
  %524 = phi i32 [ %233, %238 ], [ %289, %288 ], [ %233, %393 ], [ %233, %509 ]
  %525 = phi i32 [ %232, %238 ], [ %290, %288 ], [ %232, %393 ], [ %232, %509 ]
  %526 = add nuw i32 %234, 1
  %527 = load i32, i32* %97, align 4
  %528 = icmp ult i32 %526, %527
  br i1 %528, label %231, label %529

529:                                              ; preds = %523, %281, %254, %256, %360, %356, %334, %324, %320, %298, %476, %472, %450, %440, %436, %414, %393, %231, %509, %263, %207
  %530 = phi i32 [ %203, %207 ], [ %234, %263 ], [ %234, %509 ], [ %234, %231 ], [ %234, %393 ], [ %234, %414 ], [ %234, %436 ], [ %234, %440 ], [ %234, %450 ], [ %234, %472 ], [ %234, %476 ], [ %234, %298 ], [ %234, %320 ], [ %234, %324 ], [ %234, %334 ], [ %234, %356 ], [ %234, %360 ], [ %234, %256 ], [ %234, %254 ], [ %234, %281 ], [ %526, %523 ]
  %531 = phi i32 [ %204, %207 ], [ %233, %263 ], [ %233, %509 ], [ %233, %231 ], [ %233, %393 ], [ %233, %414 ], [ %233, %436 ], [ %233, %440 ], [ %233, %450 ], [ %233, %472 ], [ %233, %476 ], [ %233, %298 ], [ %233, %320 ], [ %233, %324 ], [ %233, %334 ], [ %233, %356 ], [ %233, %360 ], [ %233, %256 ], [ %233, %254 ], [ %233, %281 ], [ %524, %523 ]
  %532 = phi i32 [ 1, %207 ], [ %232, %263 ], [ %232, %509 ], [ %232, %231 ], [ %232, %393 ], [ %232, %414 ], [ %232, %436 ], [ %232, %440 ], [ %232, %450 ], [ %232, %472 ], [ %232, %476 ], [ %232, %298 ], [ %232, %320 ], [ %232, %324 ], [ %232, %334 ], [ %232, %356 ], [ %232, %360 ], [ %232, %256 ], [ %232, %254 ], [ %232, %281 ], [ %525, %523 ]
  br i1 %125, label %621, label %533

533:                                              ; preds = %529
  %534 = load i32, i32* %188, align 4
  %535 = icmp eq i32 %531, %534
  br i1 %535, label %536, label %548

536:                                              ; preds = %533
  %537 = load i32, i32* %184, align 8
  %538 = icmp ne i32 %537, 0
  %539 = load i32, i32* %190, align 8
  %540 = icmp eq i32 %531, %539
  %541 = or i1 %538, %540
  br i1 %541, label %979, label %542

542:                                              ; preds = %536
  %543 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %183, i64 0, i32 2, i32 0
  %544 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %543, align 8
  %545 = icmp eq %"class.blink::ShapeResult"* %544, null
  br i1 %545, label %548, label %546

546:                                              ; preds = %542
  %547 = call zeroext i1 @_ZNK5blink11ShapeResult18IsStartSafeToBreakEv(%"class.blink::ShapeResult"* nonnull %544) #13
  br i1 %547, label %979, label %548

548:                                              ; preds = %546, %542, %533
  %549 = icmp ult i32 %182, %530
  br i1 %549, label %550, label %571

550:                                              ; preds = %548, %568
  %551 = phi i32 [ %569, %568 ], [ %182, %548 ]
  %552 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* %52, i32 %551) #13
  %553 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %552, i64 0, i32 4
  %554 = load i32, i32* %553, align 8
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %556, label %568

556:                                              ; preds = %550
  %557 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %552, i64 0, i32 1
  %558 = load i32, i32* %557, align 4
  %559 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %552, i64 0, i32 0
  %560 = load i32, i32* %559, align 8
  %561 = icmp eq i32 %558, %560
  br i1 %561, label %568, label %562

562:                                              ; preds = %556
  %563 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %552, i64 0, i32 2, i32 0
  %564 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %563, align 8
  %565 = icmp eq %"class.blink::ShapeResult"* %564, null
  br i1 %565, label %621, label %566

566:                                              ; preds = %562
  %567 = call zeroext i1 @_ZNK5blink11ShapeResult18IsStartSafeToBreakEv(%"class.blink::ShapeResult"* nonnull %564) #13
  br i1 %567, label %568, label %621

568:                                              ; preds = %566, %556, %550
  %569 = add i32 %551, 1
  %570 = icmp eq i32 %569, %530
  br i1 %570, label %571, label %550

571:                                              ; preds = %568, %548
  %572 = load i32, i32* %190, align 8
  %573 = sub i32 %531, %572
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #13
  %574 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %575 = icmp eq %"class.WTF::StringImpl"* %574, null
  br i1 %575, label %579, label %576

576:                                              ; preds = %571
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %574, i64 0, i32 1
  %578 = load i32, i32* %577, align 4
  br label %579

579:                                              ; preds = %571, %576
  %580 = phi i32 [ %578, %576 ], [ 0, %571 ]
  %581 = icmp ugt i32 %531, %580
  br i1 %581, label %620, label %582

582:                                              ; preds = %579
  %583 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %584 = icmp eq %"class.WTF::StringImpl"* %583, null
  br i1 %584, label %599, label %585

585:                                              ; preds = %582
  store i32 %573, i32* %129, align 8
  store %"class.WTF::StringImpl"* %583, %"class.WTF::StringImpl"** %130, align 8
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = load atomic i32, i32* %586 monotonic, align 4
  %588 = and i32 %587, 1
  %589 = icmp eq i32 %588, 0
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 1
  br i1 %589, label %595, label %591

591:                                              ; preds = %585
  %592 = bitcast %"class.WTF::StringImpl"* %590 to i8*
  %593 = zext i32 %572 to i64
  %594 = getelementptr inbounds i8, i8* %592, i64 %593
  store i8* %594, i8** %131, align 8
  br label %601

595:                                              ; preds = %585
  %596 = bitcast %"class.WTF::StringImpl"* %590 to i16*
  %597 = zext i32 %572 to i64
  %598 = getelementptr inbounds i16, i16* %596, i64 %597
  store i16* %598, i16** %132, align 8
  br label %601

599:                                              ; preds = %582
  store i32 0, i32* %129, align 8
  store i8* null, i8** %131, align 8
  %600 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %600, i64* %133, align 8
  br label %601

601:                                              ; preds = %591, %595, %599
  br i1 %575, label %616, label %602

602:                                              ; preds = %601
  store i32 %573, i32* %134, align 8
  store %"class.WTF::StringImpl"* %574, %"class.WTF::StringImpl"** %135, align 8
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %574, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %604 = load atomic i32, i32* %603 monotonic, align 4
  %605 = and i32 %604, 1
  %606 = icmp eq i32 %605, 0
  %607 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %574, i64 1
  br i1 %606, label %612, label %608

608:                                              ; preds = %602
  %609 = bitcast %"class.WTF::StringImpl"* %607 to i8*
  %610 = zext i32 %572 to i64
  %611 = getelementptr inbounds i8, i8* %609, i64 %610
  store i8* %611, i8** %136, align 8
  br label %618

612:                                              ; preds = %602
  %613 = bitcast %"class.WTF::StringImpl"* %607 to i16*
  %614 = zext i32 %572 to i64
  %615 = getelementptr inbounds i16, i16* %613, i64 %614
  store i16* %615, i16** %137, align 8
  br label %618

616:                                              ; preds = %601
  store i32 0, i32* %134, align 8
  store i8* null, i8** %136, align 8
  %617 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %617, i64* %138, align 8
  br label %618

618:                                              ; preds = %608, %612, %616
  %619 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %35, %"class.WTF::StringView"* nonnull dereferenceable(24) %36) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  br i1 %619, label %979, label %621

620:                                              ; preds = %579
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  br label %621

621:                                              ; preds = %562, %566, %529, %620, %618
  %622 = load i32, i32* %190, align 8
  %623 = load %"class.WTF::Vector.1920"*, %"class.WTF::Vector.1920"** %55, align 8
  %624 = icmp eq %"class.WTF::Vector.1920"* %623, null
  br i1 %624, label %625, label %627

625:                                              ; preds = %621
  %626 = call fastcc %"class.blink::ShapeResult"* @_ZN5blink12_GLOBAL__N_117ReusingTextShaper7ReshapeERKNS_12NGInlineItemEjj(%"class.blink::(anonymous namespace)::ReusingTextShaper"* nonnull %33, %"class.blink::NGInlineItem"* dereferenceable(32) %183, i32 %622, i32 %531) #13
  br label %825

627:                                              ; preds = %621
  %628 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %54, align 8
  %629 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %628, i64 0, i32 2, i32 0, i32 0, i32 0
  %630 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %629, align 8
  %631 = icmp eq %"class.blink::NGInlineItemSegments"* %630, null
  br i1 %631, label %634, label %632

632:                                              ; preds = %627
  %633 = call fastcc %"class.blink::ShapeResult"* @_ZN5blink12_GLOBAL__N_117ReusingTextShaper7ReshapeERKNS_12NGInlineItemEjj(%"class.blink::(anonymous namespace)::ReusingTextShaper"* nonnull %33, %"class.blink::NGInlineItem"* dereferenceable(32) %183, i32 %622, i32 %531) #13
  br label %825

634:                                              ; preds = %627
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #13
  %635 = load i32, i32* %198, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 16, i1 false) #13, !alias.scope !23
  %636 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %623, i64 0, i32 0, i32 0, i32 0
  %637 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %636, align 8, !noalias !23
  %638 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %623, i64 0, i32 0, i32 0, i32 2
  %639 = load i32, i32* %638, align 4, !noalias !23
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %657, label %641

641:                                              ; preds = %634
  %642 = zext i32 %639 to i64
  br label %643

643:                                              ; preds = %643, %641
  %644 = phi i64 [ %642, %641 ], [ %655, %643 ]
  %645 = phi %"class.blink::NGInlineItem"* [ %637, %641 ], [ %654, %643 ]
  %646 = lshr i64 %644, 1
  %647 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %645, i64 1
  %648 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %645, i64 %646, i32 1
  %649 = load i32, i32* %648, align 4
  %650 = icmp ule i32 %649, %622
  %651 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %647, i64 %646
  %652 = xor i64 %646, -1
  %653 = add i64 %644, %652
  %654 = select i1 %650, %"class.blink::NGInlineItem"* %651, %"class.blink::NGInlineItem"* %645
  %655 = select i1 %650, i64 %653, i64 %646
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %657, label %643

657:                                              ; preds = %643, %634
  %658 = phi i64 [ 0, %634 ], [ %642, %643 ]
  %659 = phi %"class.blink::NGInlineItem"* [ %637, %634 ], [ %654, %643 ]
  %660 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %637, i64 %658
  %661 = icmp eq %"class.blink::NGInlineItem"* %659, %660
  br i1 %661, label %714, label %662

662:                                              ; preds = %657, %701
  %663 = phi %"class.WTF::Vector.1920"* [ %702, %701 ], [ %623, %657 ]
  %664 = phi %"class.blink::NGInlineItem"* [ %703, %701 ], [ %659, %657 ]
  %665 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %664, i64 0, i32 0
  %666 = load i32, i32* %665, align 8
  %667 = icmp ult i32 %666, %531
  br i1 %667, label %668, label %711

668:                                              ; preds = %662
  %669 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %664, i64 0, i32 1
  %670 = load i32, i32* %669, align 4
  %671 = icmp ult i32 %670, %622
  br i1 %671, label %701, label %672

672:                                              ; preds = %668
  %673 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %664, i64 0, i32 2, i32 0
  %674 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %673, align 8
  %675 = icmp eq %"class.blink::ShapeResult"* %674, null
  %676 = ptrtoint %"class.blink::ShapeResult"* %674 to i64
  br i1 %675, label %701, label %677

677:                                              ; preds = %672
  %678 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %664, i64 0, i32 5
  %679 = load i32, i32* %678, align 4
  %680 = xor i32 %679, %635
  %681 = trunc i32 %680 to i8
  %682 = icmp sgt i8 %681, -1
  br i1 %682, label %683, label %701

683:                                              ; preds = %677
  %684 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %674, i64 0, i32 8
  %685 = load i32, i32* %684, align 8
  %686 = icmp slt i32 %685, 0
  br i1 %686, label %701, label %687

687:                                              ; preds = %683
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #13, !noalias !23
  store i64 %676, i64* %144, align 8, !noalias !23
  %688 = load i32, i32* %142, align 4, !alias.scope !23
  %689 = load i32, i32* %141, align 8, !alias.scope !23
  %690 = icmp eq i32 %688, %689
  br i1 %690, label %698, label %691, !prof !2

691:                                              ; preds = %687
  %692 = load %"class.blink::ShapeResult"**, %"class.blink::ShapeResult"*** %140, align 8, !alias.scope !23
  %693 = zext i32 %688 to i64
  %694 = getelementptr inbounds %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %692, i64 %693
  %695 = bitcast %"class.blink::ShapeResult"** %694 to i64*
  store i64 %676, i64* %695, align 8
  %696 = load i32, i32* %142, align 4, !alias.scope !23
  %697 = add i32 %696, 1
  store i32 %697, i32* %142, align 4, !alias.scope !23
  br label %699

698:                                              ; preds = %687
  call void @_ZN3WTF6VectorIPKN5blink11ShapeResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.2247"* nonnull %6, %"class.blink::ShapeResult"** nonnull dereferenceable(8) %5) #13
  br label %699

699:                                              ; preds = %698, %691
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #13, !noalias !23
  %700 = load %"class.WTF::Vector.1920"*, %"class.WTF::Vector.1920"** %55, align 8, !noalias !23
  br label %701

701:                                              ; preds = %699, %683, %677, %672, %668
  %702 = phi %"class.WTF::Vector.1920"* [ %663, %677 ], [ %663, %672 ], [ %663, %683 ], [ %663, %668 ], [ %700, %699 ]
  %703 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %664, i64 1
  %704 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %702, i64 0, i32 0, i32 0, i32 0
  %705 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %704, align 8
  %706 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %702, i64 0, i32 0, i32 0, i32 2
  %707 = load i32, i32* %706, align 4
  %708 = zext i32 %707 to i64
  %709 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %705, i64 %708
  %710 = icmp eq %"class.blink::NGInlineItem"* %703, %709
  br i1 %710, label %711, label %662

711:                                              ; preds = %701, %662
  %712 = load i32, i32* %142, align 4
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %714, label %716

714:                                              ; preds = %711, %657
  %715 = call fastcc %"class.blink::ShapeResult"* @_ZN5blink12_GLOBAL__N_117ReusingTextShaper7ReshapeERKNS_12NGInlineItemEjj(%"class.blink::(anonymous namespace)::ReusingTextShaper"* nonnull %33, %"class.blink::NGInlineItem"* dereferenceable(32) %183, i32 %622, i32 %531) #13
  br label %814

716:                                              ; preds = %711
  %717 = call dereferenceable(8) %"class.blink::ShapeResult"** @_ZNK3WTF6VectorIPKN5blink11ShapeResultELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2247"* nonnull %6, i32 0) #13
  %718 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %717, align 8
  %719 = call noalias i8* @malloc(i64 72) #13
  %720 = bitcast i8* %719 to %"class.blink::ShapeResult"*
  %721 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %718, i64 0, i32 4, i32 0
  %722 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %721, align 8
  %723 = icmp eq %"class.blink::SimpleFontData"* %722, null
  br i1 %723, label %726, label %724

724:                                              ; preds = %716
  %725 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %722, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %725) #13
  br label %726

726:                                              ; preds = %724, %716
  %727 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %718, i64 0, i32 8
  %728 = load i32, i32* %727, align 8
  %729 = lshr i32 %728, 29
  %730 = trunc i32 %729 to i8
  %731 = and i8 %730, 1
  call void @_ZN5blink11ShapeResultC1E13scoped_refptrIKNS_14SimpleFontDataEEjjNS_13TextDirectionE(%"class.blink::ShapeResult"* %720, %"class.blink::SimpleFontData"* %722, i32 0, i32 0, i8 zeroext %731) #13
  %732 = load %"class.blink::ShapeResult"**, %"class.blink::ShapeResult"*** %140, align 8
  %733 = load i32, i32* %142, align 4
  %734 = zext i32 %733 to i64
  %735 = getelementptr inbounds %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %732, i64 %734
  %736 = icmp eq i32 %733, 0
  br i1 %736, label %788, label %737

737:                                              ; preds = %726
  %738 = getelementptr inbounds i8, i8* %719, i64 56
  %739 = bitcast i8* %738 to i32*
  %740 = getelementptr inbounds i8, i8* %719, i64 60
  %741 = bitcast i8* %740 to i32*
  br label %744

742:                                              ; preds = %771
  %743 = icmp eq %"class.blink::ShapeResult"** %783, %735
  br i1 %743, label %788, label %744

744:                                              ; preds = %742, %737
  %745 = phi %"class.blink::ShapeResult"** [ %732, %737 ], [ %783, %742 ]
  %746 = phi i32 [ %622, %737 ], [ %781, %742 ]
  %747 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %745, align 8
  %748 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %747, i64 0, i32 6
  %749 = load i32, i32* %748, align 8
  %750 = icmp ult i32 %746, %749
  br i1 %750, label %751, label %771

751:                                              ; preds = %744
  %752 = call fastcc %"class.blink::ShapeResult"* @_ZN5blink12_GLOBAL__N_117ReusingTextShaper7ReshapeERKNS_12NGInlineItemEjj(%"class.blink::(anonymous namespace)::ReusingTextShaper"* nonnull %33, %"class.blink::NGInlineItem"* dereferenceable(32) %183, i32 %746, i32 %749) #13
  %753 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %752, i64 0, i32 6
  %754 = load i32, i32* %753, align 8
  %755 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %752, i64 0, i32 7
  %756 = load i32, i32* %755, align 4
  %757 = add i32 %756, %754
  call void @_ZNK5blink11ShapeResult9CopyRangeEjjPS0_(%"class.blink::ShapeResult"* %752, i32 %754, i32 %757, %"class.blink::ShapeResult"* %720) #13
  %758 = icmp eq %"class.blink::ShapeResult"* %752, null
  br i1 %758, label %766, label %759

759:                                              ; preds = %751
  %760 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %752, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %760) #13
  %761 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %752, i64 0, i32 0, i32 0, i32 0, i32 0
  %762 = load i32, i32* %761, align 4
  %763 = icmp eq i32 %762, 0
  br i1 %763, label %764, label %766

764:                                              ; preds = %759
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %752) #13
  %765 = bitcast %"class.blink::ShapeResult"* %752 to i8*
  call void @free(i8* %765) #13
  br label %766

766:                                              ; preds = %764, %759, %751
  %767 = load i32, i32* %739, align 8
  %768 = load i32, i32* %741, align 4
  %769 = add i32 %768, %767
  %770 = load i32, i32* %748, align 8
  br label %771

771:                                              ; preds = %766, %744
  %772 = phi i32 [ %770, %766 ], [ %749, %744 ]
  %773 = phi i32 [ %769, %766 ], [ %746, %744 ]
  %774 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %747, i64 0, i32 7
  %775 = load i32, i32* %774, align 4
  %776 = add i32 %775, %772
  %777 = icmp ugt i32 %776, %531
  %778 = select i1 %777, i32 %531, i32 %776
  call void @_ZNK5blink11ShapeResult9CopyRangeEjjPS0_(%"class.blink::ShapeResult"* %747, i32 %773, i32 %778, %"class.blink::ShapeResult"* %720) #13
  %779 = load i32, i32* %739, align 8
  %780 = load i32, i32* %741, align 4
  %781 = add i32 %780, %779
  %782 = icmp eq i32 %781, %531
  %783 = getelementptr inbounds %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %745, i64 1
  br i1 %782, label %784, label %742

784:                                              ; preds = %771
  %785 = icmp eq i8* %719, null
  br i1 %785, label %814, label %786

786:                                              ; preds = %784
  %787 = bitcast i8* %719 to %"class.base::subtle::RefCountedBase"*
  br label %808

788:                                              ; preds = %742, %726
  %789 = phi i32 [ %622, %726 ], [ %781, %742 ]
  %790 = call fastcc %"class.blink::ShapeResult"* @_ZN5blink12_GLOBAL__N_117ReusingTextShaper7ReshapeERKNS_12NGInlineItemEjj(%"class.blink::(anonymous namespace)::ReusingTextShaper"* nonnull %33, %"class.blink::NGInlineItem"* dereferenceable(32) %183, i32 %789, i32 %531) #13
  %791 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %790, i64 0, i32 6
  %792 = load i32, i32* %791, align 8
  %793 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %790, i64 0, i32 7
  %794 = load i32, i32* %793, align 4
  %795 = add i32 %794, %792
  call void @_ZNK5blink11ShapeResult9CopyRangeEjjPS0_(%"class.blink::ShapeResult"* %790, i32 %792, i32 %795, %"class.blink::ShapeResult"* %720) #13
  %796 = icmp eq %"class.blink::ShapeResult"* %790, null
  br i1 %796, label %804, label %797

797:                                              ; preds = %788
  %798 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %790, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %798) #13
  %799 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %790, i64 0, i32 0, i32 0, i32 0, i32 0
  %800 = load i32, i32* %799, align 4
  %801 = icmp eq i32 %800, 0
  br i1 %801, label %802, label %804

802:                                              ; preds = %797
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %790) #13
  %803 = bitcast %"class.blink::ShapeResult"* %790 to i8*
  call void @free(i8* %803) #13
  br label %804

804:                                              ; preds = %802, %797, %788
  %805 = icmp eq i8* %719, null
  br i1 %805, label %814, label %806

806:                                              ; preds = %804
  %807 = bitcast i8* %719 to %"class.base::subtle::RefCountedBase"*
  br label %808

808:                                              ; preds = %806, %786
  %809 = phi %"class.base::subtle::RefCountedBase"* [ %807, %806 ], [ %787, %786 ]
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %809) #13
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %809) #13
  %810 = bitcast i8* %719 to i32*
  %811 = load i32, i32* %810, align 4
  %812 = icmp eq i32 %811, 0
  br i1 %812, label %813, label %814

813:                                              ; preds = %808
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %720) #13
  call void @free(i8* nonnull %719) #13
  br label %814

814:                                              ; preds = %813, %808, %804, %784, %714
  %815 = phi %"class.blink::ShapeResult"* [ %715, %714 ], [ %720, %808 ], [ %720, %813 ], [ null, %804 ], [ null, %784 ]
  %816 = load %"class.blink::ShapeResult"**, %"class.blink::ShapeResult"*** %140, align 8
  %817 = icmp eq %"class.blink::ShapeResult"** %816, null
  %818 = bitcast %"class.blink::ShapeResult"** %816 to i8*
  br i1 %817, label %824, label %819, !prof !3

819:                                              ; preds = %814
  %820 = load i32, i32* %142, align 4
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %823, label %822, !prof !2

822:                                              ; preds = %819
  store i32 0, i32* %142, align 4
  br label %823

823:                                              ; preds = %822, %819
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %818) #13
  store %"class.blink::ShapeResult"** null, %"class.blink::ShapeResult"*** %140, align 8
  br label %824

824:                                              ; preds = %823, %814
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #13
  br label %825

825:                                              ; preds = %625, %632, %824
  %826 = phi %"class.blink::ShapeResult"* [ %626, %625 ], [ %633, %632 ], [ %815, %824 ]
  %827 = ptrtoint %"class.blink::ShapeResult"* %826 to i64
  %828 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %197, i64 0, i32 0
  %829 = call zeroext i1 @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE10SetSpacingERKNS_15FontDescriptionE(%"class.blink::ShapeResultSpacing"* nonnull %34, %"class.blink::FontDescription"* dereferenceable(80) %828) #13
  br i1 %829, label %830, label %867, !prof !2

830:                                              ; preds = %825
  call void @_ZN5blink11ShapeResult12ApplySpacingERNS_18ShapeResultSpacingIN3WTF6StringEEEi(%"class.blink::ShapeResult"* %826, %"class.blink::ShapeResultSpacing"* nonnull dereferenceable(40) %34, i32 0) #13
  %831 = load i8, i8* %90, align 8, !range !4
  %832 = icmp ne i8 %831, 0
  %833 = load float, float* %87, align 8
  %834 = fcmp une float %833, 0.000000e+00
  %835 = and i1 %832, %834
  br i1 %835, label %836, label %867

836:                                              ; preds = %830
  %837 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %183, i64 0, i32 3
  %838 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %837, align 8
  %839 = load i32, i32* %198, align 4
  %840 = and i32 %839, 24
  %841 = icmp eq i32 %840, 8
  %842 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %145, align 8
  %843 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_135ShouldReportLetterSpacingUseCounterEPKNS_12LayoutObjectEbPKNS_15LayoutBlockFlowE(%"class.blink::LayoutObject"* %838, i1 zeroext %841, %"class.blink::LayoutBlockFlow"* %842)
  br i1 %843, label %844, label %867

844:                                              ; preds = %836
  %845 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %846 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %845, i64 0, i32 6, i32 0, i32 0
  %847 = load %"class.blink::Node"*, %"class.blink::Node"** %846, align 8
  %848 = icmp eq %"class.blink::Node"* %847, null
  br i1 %848, label %849, label %856

849:                                              ; preds = %844, %849
  %850 = phi %"class.blink::LayoutObject"* [ %852, %849 ], [ %845, %844 ]
  %851 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %850, i64 0, i32 7
  %852 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %851, align 8
  %853 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %852, i64 0, i32 6, i32 0, i32 0
  %854 = load %"class.blink::Node"*, %"class.blink::Node"** %853, align 8
  %855 = icmp eq %"class.blink::Node"* %854, null
  br i1 %855, label %849, label %856

856:                                              ; preds = %849, %844
  %857 = phi %"class.blink::Node"* [ %847, %844 ], [ %854, %849 ]
  %858 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %857, i64 0, i32 3, i32 0, i32 0
  %859 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %858, align 8
  %860 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %859, i64 0, i32 2, i32 0, i32 0
  %861 = load %"class.blink::Document"*, %"class.blink::Document"** %860, align 8
  %862 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %861, i64 0, i32 2
  %863 = bitcast %"class.blink::UseCounter"* %862 to void (%"class.blink::UseCounter"*, i32)***
  %864 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %863, align 8
  %865 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %864, i64 3
  %866 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %865, align 8
  call void %866(%"class.blink::UseCounter"* %862, i32 3383) #13
  br label %867

867:                                              ; preds = %830, %836, %856, %825
  %868 = load i32, i32* %188, align 4
  %869 = icmp eq i32 %531, %868
  br i1 %869, label %870, label %883

870:                                              ; preds = %867
  %871 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %183, i64 0, i32 2
  %872 = bitcast %class.scoped_refptr.1923* %871 to i64*
  %873 = getelementptr inbounds %class.scoped_refptr.1923, %class.scoped_refptr.1923* %871, i64 0, i32 0
  %874 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %873, align 8
  store i64 %827, i64* %872, align 8
  %875 = icmp eq %"class.blink::ShapeResult"* %874, null
  br i1 %875, label %979, label %876

876:                                              ; preds = %870
  %877 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %874, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %877) #13
  %878 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %874, i64 0, i32 0, i32 0, i32 0, i32 0
  %879 = load i32, i32* %878, align 4
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %979

881:                                              ; preds = %876
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %874) #13
  %882 = bitcast %"class.blink::ShapeResult"* %874 to i8*
  call void @free(i8* %882) #13
  br label %979

883:                                              ; preds = %867
  call void @llvm.lifetime.start.p0i8(i64 528, i8* nonnull %147) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 -86, i64 512, i1 false)
  store i8* %148, i8** %149, align 8
  store i32 32, i32* %150, align 8
  store i32 0, i32* %151, align 4
  %884 = icmp ugt i32 %532, 32
  br i1 %884, label %885, label %893

885:                                              ; preds = %883
  %886 = zext i32 %532 to i64
  %887 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ShapeResult10ShapeRangeEEEmm(i64 %886) #13
  %888 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %887, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ShapeResult10ShapeRangeEEEPKcv, i64 0, i64 0)) #13
  %889 = ptrtoint i8* %888 to i64
  store atomic i64 %889, i64* %152 monotonic, align 8
  %890 = lshr i64 %887, 4
  %891 = trunc i64 %890 to i32
  store i32 %891, i32* %150, align 8
  %892 = bitcast i8* %888 to %"struct.blink::ShapeResult::ShapeRange"*
  br label %893

893:                                              ; preds = %883, %885
  %894 = phi %"struct.blink::ShapeResult::ShapeRange"* [ %154, %883 ], [ %892, %885 ]
  %895 = icmp ult i32 %182, %530
  br i1 %895, label %896, label %959

896:                                              ; preds = %893
  %897 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %826, i64 0, i32 4, i32 0
  %898 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %826, i64 0, i32 8
  br label %899

899:                                              ; preds = %954, %896
  %900 = phi i32 [ %182, %896 ], [ %955, %954 ]
  %901 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* %52, i32 %900) #13
  %902 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %901, i64 0, i32 4
  %903 = load i32, i32* %902, align 8
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %954

905:                                              ; preds = %899
  %906 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %901, i64 0, i32 1
  %907 = load i32, i32* %906, align 4
  %908 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %901, i64 0, i32 0
  %909 = load i32, i32* %908, align 8
  %910 = icmp eq i32 %907, %909
  br i1 %910, label %954, label %911

911:                                              ; preds = %905
  %912 = call noalias i8* @malloc(i64 72) #13
  %913 = bitcast i8* %912 to %"class.blink::ShapeResult"*
  %914 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %897, align 8
  %915 = icmp eq %"class.blink::SimpleFontData"* %914, null
  br i1 %915, label %918, label %916

916:                                              ; preds = %911
  %917 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %914, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %917) #13
  br label %918

918:                                              ; preds = %911, %916
  %919 = load i32, i32* %898, align 8
  %920 = lshr i32 %919, 29
  %921 = trunc i32 %920 to i8
  %922 = and i8 %921, 1
  call void @_ZN5blink11ShapeResultC1E13scoped_refptrIKNS_14SimpleFontDataEEjjNS_13TextDirectionE(%"class.blink::ShapeResult"* %913, %"class.blink::SimpleFontData"* %914, i32 0, i32 0, i8 zeroext %922) #13
  %923 = ptrtoint i8* %912 to i64
  %924 = load i32, i32* %908, align 8
  %925 = load i32, i32* %906, align 4
  %926 = load i32, i32* %151, align 4
  %927 = load i32, i32* %150, align 8
  %928 = icmp eq i32 %926, %927
  br i1 %928, label %929, label %932, !prof !2

929:                                              ; preds = %918
  %930 = add i32 %926, 1
  call void @_ZN3WTF6VectorIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2071"* nonnull %37, i32 %930) #13
  %931 = load i32, i32* %151, align 4
  br label %932

932:                                              ; preds = %918, %929
  %933 = phi i32 [ %931, %929 ], [ %926, %918 ]
  %934 = load %"struct.blink::ShapeResult::ShapeRange"*, %"struct.blink::ShapeResult::ShapeRange"** %153, align 8
  %935 = zext i32 %933 to i64
  %936 = getelementptr inbounds %"struct.blink::ShapeResult::ShapeRange", %"struct.blink::ShapeResult::ShapeRange"* %934, i64 %935, i32 0
  store i32 %924, i32* %936, align 8
  %937 = getelementptr inbounds %"struct.blink::ShapeResult::ShapeRange", %"struct.blink::ShapeResult::ShapeRange"* %934, i64 %935, i32 1
  store i32 %925, i32* %937, align 4
  %938 = getelementptr inbounds %"struct.blink::ShapeResult::ShapeRange", %"struct.blink::ShapeResult::ShapeRange"* %934, i64 %935, i32 2
  %939 = bitcast %"class.blink::ShapeResult"** %938 to i64*
  store i64 %923, i64* %939, align 8
  %940 = load i32, i32* %151, align 4
  %941 = add i32 %940, 1
  store i32 %941, i32* %151, align 4
  %942 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %901, i64 0, i32 2
  %943 = bitcast %class.scoped_refptr.1923* %942 to i64*
  %944 = getelementptr inbounds %class.scoped_refptr.1923, %class.scoped_refptr.1923* %942, i64 0, i32 0
  %945 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %944, align 8
  store i64 %923, i64* %943, align 8
  %946 = icmp eq %"class.blink::ShapeResult"* %945, null
  br i1 %946, label %954, label %947

947:                                              ; preds = %932
  %948 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %945, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %948) #13
  %949 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %945, i64 0, i32 0, i32 0, i32 0, i32 0
  %950 = load i32, i32* %949, align 4
  %951 = icmp eq i32 %950, 0
  br i1 %951, label %952, label %954

952:                                              ; preds = %947
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %945) #13
  %953 = bitcast %"class.blink::ShapeResult"* %945 to i8*
  call void @free(i8* %953) #13
  br label %954

954:                                              ; preds = %932, %947, %952, %899, %905
  %955 = add i32 %900, 1
  %956 = icmp eq i32 %955, %530
  br i1 %956, label %957, label %899

957:                                              ; preds = %954
  %958 = load %"struct.blink::ShapeResult::ShapeRange"*, %"struct.blink::ShapeResult::ShapeRange"** %153, align 8
  br label %959

959:                                              ; preds = %957, %893
  %960 = phi %"struct.blink::ShapeResult::ShapeRange"* [ %894, %893 ], [ %958, %957 ]
  %961 = phi i32 [ %182, %893 ], [ %530, %957 ]
  %962 = load i32, i32* %151, align 4
  call void @_ZNK5blink11ShapeResult10CopyRangesEPKNS0_10ShapeRangeEj(%"class.blink::ShapeResult"* %826, %"struct.blink::ShapeResult::ShapeRange"* %960, i32 %962) #13
  %963 = load i32, i32* %151, align 4
  %964 = icmp eq i32 %963, 0
  br i1 %964, label %966, label %965, !prof !2

965:                                              ; preds = %959
  store i32 0, i32* %151, align 4
  br label %966

966:                                              ; preds = %965, %959
  %967 = load %"struct.blink::ShapeResult::ShapeRange"*, %"struct.blink::ShapeResult::ShapeRange"** %153, align 8
  %968 = icmp eq %"struct.blink::ShapeResult::ShapeRange"* %967, %154
  br i1 %968, label %970, label %969, !prof !3

969:                                              ; preds = %966
  call void @_ZN3WTF12VectorBufferIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2072"* nonnull %155, %"struct.blink::ShapeResult::ShapeRange"* %967) #13
  br label %970

970:                                              ; preds = %969, %966
  call void @llvm.lifetime.end.p0i8(i64 528, i8* nonnull %147) #13
  %971 = icmp eq %"class.blink::ShapeResult"* %826, null
  br i1 %971, label %979, label %972

972:                                              ; preds = %970
  %973 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %826, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %973) #13
  %974 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %826, i64 0, i32 0, i32 0, i32 0, i32 0
  %975 = load i32, i32* %974, align 4
  %976 = icmp eq i32 %975, 0
  br i1 %976, label %977, label %979

977:                                              ; preds = %972
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %826) #13
  %978 = bitcast %"class.blink::ShapeResult"* %826 to i8*
  call void @free(i8* %978) #13
  br label %979

979:                                              ; preds = %870, %876, %881, %546, %536, %977, %972, %970, %618, %210, %224, %229, %193
  %980 = phi i32 [ %194, %193 ], [ %203, %546 ], [ %203, %229 ], [ %203, %224 ], [ %203, %210 ], [ %530, %618 ], [ %961, %970 ], [ %961, %972 ], [ %961, %977 ], [ %203, %536 ], [ %203, %881 ], [ %203, %876 ], [ %203, %870 ]
  %981 = load i32, i32* %97, align 4
  %982 = icmp ult i32 %980, %981
  br i1 %982, label %181, label %157
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode29ShapeTextForFirstLineIfNeededEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"*, %"struct.blink::NGInlineNodeData"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %8, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %20

13:                                               ; preds = %2, %13
  %14 = phi %"class.blink::LayoutObject"* [ %16, %13 ], [ %9, %2 ]
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 7
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %13, label %20

20:                                               ; preds = %13, %2
  %21 = phi %"class.blink::Node"* [ %11, %2 ], [ %18, %13 ]
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 59, i32 0, i32 0
  %27 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %27, i64 0, i32 31, i32 0, i32 0
  %29 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %29, i64 0, i32 0, i32 11
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %20
  %35 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.20, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #13
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  br label %37

37:                                               ; preds = %20, %34
  %38 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %29, i64 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %326, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %8, i64 0, i32 0, i32 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %46, label %53

46:                                               ; preds = %41, %46
  %47 = phi %"class.blink::LayoutObject"* [ %49, %46 ], [ %9, %41 ]
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 7
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %49, i64 0, i32 6, i32 0, i32 0
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %46, label %53

53:                                               ; preds = %46, %41
  %54 = phi %"class.blink::Node"* [ %44, %41 ], [ %51, %46 ]
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %54, i64 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::Document"*, %"class.blink::Document"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %58, i64 0, i32 59, i32 0, i32 0
  %60 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %60, i64 0, i32 31, i32 0, i32 0
  %62 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %62, i64 0, i32 0, i32 11
  %64 = load i8, i8* %63, align 8
  %65 = and i8 %64, 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %53
  %68 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.20, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #13
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #13
  br label %70

70:                                               ; preds = %67, %53
  %71 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %62, i64 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %9) #13
  %76 = icmp eq %"class.blink::ComputedStyle"* %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %74, %70
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %79

79:                                               ; preds = %74, %77
  %80 = phi %"class.blink::ComputedStyle"* [ %78, %77 ], [ %75, %74 ]
  %81 = icmp eq %"class.blink::ComputedStyle"* %43, %80
  br i1 %81, label %326, label %82

82:                                               ; preds = %79
  %83 = call noalias i8* @malloc(i64 40) #13
  %84 = bitcast i8* %83 to %"struct.blink::NGInlineItemsData"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 40, i1 false) #13
  %85 = ptrtoint i8* %83 to i64
  %86 = bitcast i8* %83 to %"class.WTF::String"*
  %87 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %105, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %105

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i33
  %99 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #13
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %109, !prof !2

104:                                              ; preds = %95
  call void @llvm.trap() #13
  unreachable

105:                                              ; preds = %90, %82
  %106 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  %107 = bitcast i8* %83 to i64*
  %108 = bitcast i8* %83 to %"class.WTF::StringImpl"**
  store i64 %106, i64* %107, align 8
  br label %130

109:                                              ; preds = %95
  %110 = trunc i33 %101 to i32
  store i32 %110, i32* %96, align 4
  %111 = bitcast i8* %83 to %"class.WTF::StringImpl"**
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  %114 = bitcast i8* %83 to i64*
  %115 = bitcast i8* %83 to %"class.WTF::StringImpl"**
  store i64 %113, i64* %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #13
  br label %130

130:                                              ; preds = %105, %109, %126, %129
  %131 = phi %"class.WTF::StringImpl"** [ %108, %105 ], [ %115, %109 ], [ %115, %126 ], [ %115, %129 ]
  %132 = phi i64* [ %107, %105 ], [ %114, %109 ], [ %114, %126 ], [ %114, %129 ]
  %133 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %134 = bitcast [20 x i8]* %133 to i160*
  %135 = load i160, i160* %134, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %137 = bitcast [20 x i8]* %136 to i160*
  %138 = load i160, i160* %137, align 8
  %139 = xor i160 %138, %135
  %140 = and i160 %139, 67699845898419233783545856
  %141 = icmp eq i160 %140, 0
  br i1 %141, label %246, label %142

142:                                              ; preds = %130
  call void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"* %80, %"class.WTF::String"* %86, i16 zeroext 32) #13
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %145 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"* %144) #13
  br i1 %145, label %246, label %146

146:                                              ; preds = %142
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  br label %152

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 0, %146 ]
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %178, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = icmp ugt i32 %158, %153
  br i1 %159, label %160, label %178

160:                                              ; preds = %156
  %161 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %86, i32 0, i32 %153) #13
  %162 = ptrtoint %"class.WTF::StringImpl"* %161 to i64
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  store i64 %162, i64* %132, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %246, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %246

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #13
  br label %246

178:                                              ; preds = %156, %152
  %179 = phi i32 [ 0, %152 ], [ %158, %156 ]
  %180 = icmp ult i32 %179, %153
  br i1 %180, label %181, label %246

181:                                              ; preds = %178
  %182 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %182) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 48, i1 false) #13
  %183 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %183, align 8
  %184 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %185 = bitcast %union.anon.1997* %184 to i8*
  store i8 0, i8* %185, align 8
  %186 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %186, align 8
  %187 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %187, align 4
  %188 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %188, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %3, i32 %153) #13
  %189 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #13
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %192, label %196

192:                                              ; preds = %181
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %193, align 8
  %194 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %195 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %194, i64* %195, align 8
  br label %203

196:                                              ; preds = %181
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %197, align 8
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 1
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %202 = bitcast i8** %201 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %200, %"class.WTF::StringImpl"** %202, align 8
  br label %203

203:                                              ; preds = %196, %192
  %204 = phi i32 [ %199, %196 ], [ 0, %192 ]
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %204, i32* %205, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #13
  %206 = load i32, i32* %186, align 8
  %207 = icmp ult i32 %206, %153
  br i1 %207, label %208, label %211

208:                                              ; preds = %203, %208
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %3, i16 zeroext 32) #13
  %209 = load i32, i32* %186, align 8
  %210 = icmp ult i32 %209, %153
  br i1 %210, label %208, label %211

211:                                              ; preds = %208, %203
  %212 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #13
  %213 = ptrtoint %"class.WTF::StringImpl"* %212 to i64
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  store i64 %213, i64* %132, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #13
  br label %229

229:                                              ; preds = %228, %225, %211
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #13
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #13
  br label %245

245:                                              ; preds = %244, %241, %229
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %182) #13
  br label %246

246:                                              ; preds = %142, %245, %178, %177, %174, %160, %130
  %247 = phi i1 [ false, %142 ], [ false, %130 ], [ true, %160 ], [ true, %174 ], [ true, %177 ], [ true, %178 ], [ true, %245 ]
  %248 = getelementptr inbounds i8, i8* %83, i64 8
  %249 = bitcast i8* %248 to %"class.WTF::Vector.1920"*
  %250 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %251 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %250, align 8
  %252 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %253 = load i32, i32* %252, align 4
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.1920"* %249, %"class.blink::NGInlineItem"* %251, i32 %253) #13
  %254 = bitcast i8* %248 to %"class.blink::NGInlineItem"**
  %255 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %254, align 8
  %256 = getelementptr inbounds i8, i8* %83, i64 20
  %257 = bitcast i8* %256 to i32*
  %258 = load i32, i32* %257, align 4
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %255, i64 %259
  %261 = icmp eq i32 %258, 0
  br i1 %261, label %282, label %262

262:                                              ; preds = %246
  %263 = shl nuw nsw i64 %259, 5
  %264 = add nsw i64 %263, -32
  %265 = lshr exact i64 %264, 5
  %266 = add nuw nsw i64 %265, 1
  %267 = and i64 %266, 3
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %279, label %269

269:                                              ; preds = %262, %269
  %270 = phi %"class.blink::NGInlineItem"* [ %276, %269 ], [ %255, %262 ]
  %271 = phi i64 [ %277, %269 ], [ %267, %262 ]
  %272 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %270, i64 0, i32 5
  %273 = load i32, i32* %272, align 4
  %274 = and i32 %273, -25
  %275 = or i32 %274, 8
  store i32 %275, i32* %272, align 4
  %276 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %270, i64 1
  %277 = add i64 %271, -1
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %269, !llvm.loop !26

279:                                              ; preds = %269, %262
  %280 = phi %"class.blink::NGInlineItem"* [ %255, %262 ], [ %276, %269 ]
  %281 = icmp ult i64 %264, 96
  br i1 %281, label %282, label %283

282:                                              ; preds = %279, %283, %246
  br i1 %247, label %317, label %303

283:                                              ; preds = %279, %283
  %284 = phi %"class.blink::NGInlineItem"* [ %301, %283 ], [ %280, %279 ]
  %285 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %284, i64 0, i32 5
  %286 = load i32, i32* %285, align 4
  %287 = and i32 %286, -25
  %288 = or i32 %287, 8
  store i32 %288, i32* %285, align 4
  %289 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %284, i64 1, i32 5
  %290 = load i32, i32* %289, align 4
  %291 = and i32 %290, -25
  %292 = or i32 %291, 8
  store i32 %292, i32* %289, align 4
  %293 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %284, i64 2, i32 5
  %294 = load i32, i32* %293, align 4
  %295 = and i32 %294, -25
  %296 = or i32 %295, 8
  store i32 %296, i32* %293, align 4
  %297 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %284, i64 3, i32 5
  %298 = load i32, i32* %297, align 4
  %299 = and i32 %298, -25
  %300 = or i32 %299, 8
  store i32 %300, i32* %297, align 4
  %301 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %284, i64 4
  %302 = icmp eq %"class.blink::NGInlineItem"* %301, %260
  br i1 %302, label %282, label %283

303:                                              ; preds = %282
  %304 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %305 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %304, align 8
  %306 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %305, i64 0, i32 1, i32 0, i32 0
  %307 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %306, align 8
  %308 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %309 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %309, i64 0, i32 1, i32 0, i32 0
  %311 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %310, align 8
  %312 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %307, %311
  br i1 %312, label %318, label %313

313:                                              ; preds = %303
  %314 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %307, i64 0, i32 1
  %315 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %311, i64 0, i32 1
  %316 = call zeroext i1 @_ZNK5blink4FonteqERKS0_(%"class.blink::Font"* %314, %"class.blink::Font"* dereferenceable(88) %315) #13
  br i1 %316, label %318, label %317

317:                                              ; preds = %313, %282
  call void @_ZNK5blink12NGInlineNode9ShapeTextEPNS_17NGInlineItemsDataEPKN3WTF6StringEPKNS3_6VectorINS_12NGInlineItemELj0ENS3_18PartitionAllocatorEEE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineItemsData"* %84, %"class.WTF::String"* null, %"class.WTF::Vector.1920"* null)
  br label %318

318:                                              ; preds = %313, %303, %317
  %319 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 1
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr.1961", %"class.std::__1::unique_ptr.1961"* %319, i64 0, i32 0, i32 0, i32 0
  %321 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %320, align 8
  %322 = bitcast %"class.std::__1::unique_ptr.1961"* %319 to i64*
  store i64 %85, i64* %322, align 8
  %323 = icmp eq %"struct.blink::NGInlineItemsData"* %321, null
  br i1 %323, label %326, label %324

324:                                              ; preds = %318
  call void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"* nonnull %321) #13
  %325 = bitcast %"struct.blink::NGInlineItemsData"* %321 to i8*
  call void @free(i8* %325) #13
  br label %326

326:                                              ; preds = %37, %318, %324, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode25AssociateItemsWithInlinesEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* nocapture readnone, %"struct.blink::NGInlineNodeData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %3, align 8
  br label %10

9:                                                ; preds = %58, %2
  ret void

10:                                               ; preds = %7, %58
  %11 = phi %"class.blink::NGInlineItem"* [ %59, %58 ], [ %8, %7 ]
  %12 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %11, i64 0, i32 3
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutObject"* %13, null
  br i1 %14, label %56, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::LayoutObject"* %13 to i1 (%"class.blink::LayoutObject"*, i32)***
  %17 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, i64 92
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutObject"* nonnull %13, i32 33) #13
  br i1 %20, label %21, label %56

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::LayoutObject"* %13 to %"class.blink::LayoutText"*
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 1
  %24 = bitcast %"class.blink::LayoutObject"* %23 to i16*
  %25 = load i16, i16* %24, align 8
  %26 = and i16 %25, -257
  store i16 %26, i16* %24, align 8
  %27 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %11, i64 1
  %28 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %3, align 8
  %29 = load i32, i32* %4, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %28, i64 %30
  %32 = icmp eq %"class.blink::NGInlineItem"* %27, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %21
  tail call void @_ZN5blink10LayoutText14SetInlineItemsEPNS_12NGInlineItemES2_(%"class.blink::LayoutText"* nonnull %22, %"class.blink::NGInlineItem"* %11, %"class.blink::NGInlineItem"* %27) #13
  br label %58

34:                                               ; preds = %21, %41
  %35 = phi %"class.blink::NGInlineItem"* [ %46, %41 ], [ %27, %21 ]
  %36 = phi i8 [ %45, %41 ], [ 0, %21 ]
  %37 = phi %"class.blink::NGInlineItem"* [ %35, %41 ], [ %11, %21 ]
  %38 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %37, i64 1, i32 3
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutObject"* %39, %13
  br i1 %40, label %41, label %48

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %37, i64 1, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 8
  %45 = select i1 %44, i8 1, i8 %36
  %46 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %35, i64 1
  %47 = icmp eq %"class.blink::NGInlineItem"* %46, %31
  br i1 %47, label %48, label %34

48:                                               ; preds = %41, %34
  %49 = phi i8 [ %45, %41 ], [ %36, %34 ]
  %50 = phi %"class.blink::NGInlineItem"* [ %31, %41 ], [ %35, %34 ]
  tail call void @_ZN5blink10LayoutText14SetInlineItemsEPNS_12NGInlineItemES2_(%"class.blink::LayoutText"* nonnull %22, %"class.blink::NGInlineItem"* %11, %"class.blink::NGInlineItem"* %50) #13
  %51 = and i8 %49, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = load i16, i16* %24, align 8
  %55 = or i16 %54, 256
  store i16 %55, i16* %24, align 8
  br label %58

56:                                               ; preds = %15, %10
  %57 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %11, i64 1
  br label %58

58:                                               ; preds = %33, %48, %53, %56
  %59 = phi %"class.blink::NGInlineItem"* [ %57, %56 ], [ %50, %53 ], [ %50, %48 ], [ %27, %33 ]
  %60 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %3, align 8
  %61 = load i32, i32* %4, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %60, i64 %62
  %64 = icmp eq %"class.blink::NGInlineItem"* %59, %63
  br i1 %64, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12NGInlineNode17SetTextWithOffsetEPNS_10LayoutTextE13scoped_refptrIN3WTF10StringImplEEjj(%"class.blink::LayoutText"*, %"class.WTF::StringImpl"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::NGInlineNodeDataEditor", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::NGInlineNode", align 8
  %8 = alloca %"class.blink::NGInlineItemsBuilderTemplate", align 8
  %9 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %11 = load i16, i16* %10, align 8
  %12 = trunc i16 %11 to i8
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %224

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 268435456
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %224, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #13
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %30
  tail call void @llvm.trap() #13
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %21, %25, %40
  %43 = icmp eq i32 %2, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %42
  br i1 %24, label %48, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %44, %45
  %49 = phi i32 [ %47, %45 ], [ 0, %44 ]
  %50 = icmp eq i32 %49, %3
  br i1 %50, label %207, label %51

51:                                               ; preds = %48, %42
  %52 = bitcast %"class.blink::NGInlineNodeDataEditor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #13
  %53 = getelementptr inbounds %"class.blink::NGInlineNodeDataEditor", %"class.blink::NGInlineNodeDataEditor"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::NGInlineNodeDataEditor", %"class.blink::NGInlineNodeDataEditor"* %5, i64 0, i32 1
  %55 = getelementptr inbounds %"class.blink::NGInlineNodeDataEditor", %"class.blink::NGInlineNodeDataEditor"* %5, i64 0, i32 2
  %56 = bitcast %"class.blink::NGInlineNodeDataEditor"* %5 to i64*
  store i64 0, i64* %56, align 8
  %57 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* %15) #13
  store %"class.blink::LayoutBlockFlow"* %57, %"class.blink::LayoutBlockFlow"** %54, align 8
  store %"class.blink::LayoutText"* %0, %"class.blink::LayoutText"** %55, align 8
  %58 = call %"struct.blink::NGInlineNodeData"* @_ZN5blink22NGInlineNodeDataEditor7PrepareEjj(%"class.blink::NGInlineNodeDataEditor"* nonnull %5, i32 %2, i32 %3)
  %59 = icmp eq %"struct.blink::NGInlineNodeData"* %58, null
  br i1 %59, label %186, label %60

60:                                               ; preds = %51
  %61 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #13
  %62 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %61, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %62, align 4
  %65 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::String"* %6 to i64*
  store i64 %9, i64* %67, align 8
  %68 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %68, align 8
  %70 = bitcast %"class.blink::LayoutText"* %0 to i16 (%"class.blink::LayoutText"*)***
  %71 = load i16 (%"class.blink::LayoutText"*)**, i16 (%"class.blink::LayoutText"*)*** %70, align 8
  %72 = getelementptr inbounds i16 (%"class.blink::LayoutText"*)*, i16 (%"class.blink::LayoutText"*)** %71, i64 119
  %73 = load i16 (%"class.blink::LayoutText"*)*, i16 (%"class.blink::LayoutText"*)** %72, align 8
  %74 = call zeroext i16 %73(%"class.blink::LayoutText"* %0) #13
  call void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"* %69, %"class.WTF::String"* nonnull %6, i16 zeroext %74) #13
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %60
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #13
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %82
  call void @llvm.trap() #13
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %60, %77, %92
  call void @_ZN5blink10LayoutText15SetTextInternalE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"* %0, %"class.WTF::StringImpl"* %75) #13
  %95 = bitcast %"class.blink::NGInlineNode"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #13
  %96 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %7, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %7, i64 0, i32 0, i32 1
  %98 = bitcast %"class.blink::NGInlineNode"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 16, i1 false)
  %99 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %54, align 8
  %100 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %99, i64 0, i32 0, i32 0
  store %"class.blink::LayoutBox"* %100, %"class.blink::LayoutBox"** %96, align 8
  store i8 -85, i8* %97, align 8
  %101 = bitcast %"class.blink::LayoutBlockFlow"* %99 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %102 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %101, align 8
  %103 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %102, i64 216
  %104 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %103, align 8
  %105 = call zeroext i1 %104(%"class.blink::LayoutBlockFlow"* %99) #13
  br i1 %105, label %113, label %106

106:                                              ; preds = %94
  %107 = bitcast %"class.blink::LayoutBlockFlow"* %99 to void (%"class.blink::LayoutBlockFlow"*)***
  %108 = load void (%"class.blink::LayoutBlockFlow"*)**, void (%"class.blink::LayoutBlockFlow"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %108, i64 214
  %110 = load void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %109, align 8
  call void %110(%"class.blink::LayoutBlockFlow"* %99) #13
  %111 = bitcast %"class.blink::NGInlineNode"* %7 to %"class.blink::LayoutBlockFlow"**
  %112 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %111, align 8
  br label %113

113:                                              ; preds = %94, %106
  %114 = phi %"class.blink::LayoutBlockFlow"* [ %112, %106 ], [ %99, %94 ]
  %115 = bitcast %"class.blink::LayoutBlockFlow"* %114 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %116 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %115, align 8
  %117 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %116, i64 213
  %118 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %117, align 8
  %119 = call %"struct.blink::NGInlineNodeData"* %118(%"class.blink::LayoutBlockFlow"* %114) #13
  %120 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %119, i64 0, i32 0
  %121 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %119, i64 0, i32 0, i32 1
  %122 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %58, i64 0, i32 0, i32 1
  %123 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %58, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %119, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = icmp ult i32 %126, %124
  br i1 %127, label %128, label %141, !prof !3

128:                                              ; preds = %113
  %129 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %121, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %129, align 8
  %131 = icmp eq %"class.blink::NGInlineItem"* %130, null
  br i1 %131, label %132, label %140

132:                                              ; preds = %128
  %133 = zext i32 %124 to i64
  %134 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm(i64 %133) #13
  %135 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %134, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGInlineItemEEEPKcv, i64 0, i64 0)) #13
  %136 = ptrtoint i8* %135 to i64
  %137 = bitcast %"class.WTF::Vector.1920"* %121 to i64*
  store atomic i64 %136, i64* %137 monotonic, align 8
  %138 = lshr i64 %134, 5
  %139 = trunc i64 %138 to i32
  store i32 %139, i32* %125, align 8
  br label %141

140:                                              ; preds = %128
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1920"* %121, i32 %124) #13
  br label %141

141:                                              ; preds = %113, %132, %140
  %142 = bitcast %"class.blink::NGInlineItemsBuilderTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %142) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 120, i1 false)
  %143 = bitcast %"class.blink::LayoutBlockFlow"** %54 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.blink::NGInlineItemsBuilderTemplate"* %8 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 1
  store %"class.WTF::Vector.1920"* %121, %"class.WTF::Vector.1920"** %146, align 8
  %147 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %147, align 8
  %148 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 2, i32 1
  %149 = bitcast %union.anon.1997* %148 to i8*
  store i8 0, i8* %149, align 8
  %150 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 2, i32 2
  store i32 0, i32* %150, align 8
  %151 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 2, i32 3
  store i8 1, i8* %151, align 4
  %152 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 2, i32 4
  store i8 0, i8* %152, align 1
  %153 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 5
  %154 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 10
  %155 = bitcast %"class.WTF::Vector.2008"* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 42, i1 false)
  store i8 1, i8* %154, align 2
  %156 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 11
  store i8 1, i8* %156, align 1
  %157 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %8, i64 0, i32 12
  store i8 0, i8* %157, align 4
  call void @_ZN5blink10LayoutText16ClearInlineItemsEv(%"class.blink::LayoutText"* %0) #13
  call fastcc void @_ZN5blink12_GLOBAL__N_122CollectInlinesInternalINS_28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEEEEEvPT_PKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate"* nonnull %8, %"struct.blink::NGInlineNodeData"* nonnull %58)
  call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE23DidFinishCollectInlinesEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate"* nonnull %8, %"struct.blink::NGInlineNodeData"* %119) #13
  call void @_ZN5blink22NGInlineNodeDataEditor3RunEv(%"class.blink::NGInlineNodeDataEditor"* nonnull %5)
  call void @_ZNK5blink12NGInlineNode15SegmentBidiRunsEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* nonnull %7, %"struct.blink::NGInlineNodeData"* %119) #13
  call void @_ZNK5blink12NGInlineNode17SegmentScriptRunsEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* undef, %"struct.blink::NGInlineNodeData"* %119) #13
  call void @_ZNK5blink12NGInlineNode22SegmentFontOrientationEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* nonnull %7, %"struct.blink::NGInlineNodeData"* %119) #13
  %158 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %119, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %159 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %158, align 8
  %160 = icmp eq %"class.blink::NGInlineItemSegments"* %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %141
  call void @_ZN5blink20NGInlineItemSegments16ComputeItemIndexERKN3WTF6VectorINS_12NGInlineItemELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGInlineItemSegments"* nonnull %159, %"class.WTF::Vector.1920"* dereferenceable(16) %121) #13
  br label %162

162:                                              ; preds = %141, %161
  %163 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %58, i64 0, i32 0, i32 0
  call void @_ZNK5blink12NGInlineNode9ShapeTextEPNS_17NGInlineItemsDataEPKN3WTF6StringEPKNS3_6VectorINS_12NGInlineItemELj0ENS3_18PartitionAllocatorEEE(%"class.blink::NGInlineNode"* nonnull %7, %"struct.blink::NGInlineItemsData"* %120, %"class.WTF::String"* %163, %"class.WTF::Vector.1920"* %122)
  call void @_ZNK5blink12NGInlineNode29ShapeTextForFirstLineIfNeededEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* nonnull %7, %"struct.blink::NGInlineNodeData"* %119)
  call void @_ZNK5blink12NGInlineNode25AssociateItemsWithInlinesEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* undef, %"struct.blink::NGInlineNodeData"* %119)
  call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEED1Ev(%"class.blink::NGInlineItemsBuilderTemplate"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %142) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #13
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #13
  br label %179

179:                                              ; preds = %162, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #13
  %180 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #13
  %181 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %180, i64 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = add nsw i32 %182, -1
  store i32 %183, i32* %181, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %179
  call void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"* %180, i32 0) #13
  br label %186

186:                                              ; preds = %185, %179, %51
  %187 = phi i64 [ %9, %51 ], [ 0, %179 ], [ 0, %185 ]
  %188 = phi i1 [ false, %51 ], [ true, %179 ], [ true, %185 ]
  %189 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %53, align 8
  store %"struct.blink::NGInlineNodeData"* null, %"struct.blink::NGInlineNodeData"** %53, align 8
  %190 = icmp eq %"struct.blink::NGInlineNodeData"* %189, null
  br i1 %190, label %206, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %189, i64 0, i32 2, i32 0, i32 0, i32 0
  %193 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %192, align 8
  store %"struct.blink::SvgInlineNodeData"* null, %"struct.blink::SvgInlineNodeData"** %192, align 8
  %194 = icmp eq %"struct.blink::SvgInlineNodeData"* %193, null
  br i1 %194, label %197, label %195

195:                                              ; preds = %191
  call void @_ZN5blink17SvgInlineNodeDataD2Ev(%"struct.blink::SvgInlineNodeData"* nonnull %193) #13
  %196 = bitcast %"struct.blink::SvgInlineNodeData"* %193 to i8*
  call void @_ZdlPv(i8* %196) #14
  br label %197

197:                                              ; preds = %195, %191
  %198 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %189, i64 0, i32 1, i32 0, i32 0, i32 0
  %199 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %198, align 8
  store %"struct.blink::NGInlineItemsData"* null, %"struct.blink::NGInlineItemsData"** %198, align 8
  %200 = icmp eq %"struct.blink::NGInlineItemsData"* %199, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %197
  call void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"* nonnull %199) #13
  %202 = bitcast %"struct.blink::NGInlineItemsData"* %199 to i8*
  call void @free(i8* %202) #13
  br label %203

203:                                              ; preds = %201, %197
  %204 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %189, i64 0, i32 0
  call void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"* %204) #13
  %205 = bitcast %"struct.blink::NGInlineNodeData"* %189 to i8*
  call void @free(i8* %205) #13
  br label %206

206:                                              ; preds = %186, %203
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  br label %207

207:                                              ; preds = %48, %206
  %208 = phi i64 [ %9, %48 ], [ %187, %206 ]
  %209 = phi i1 [ false, %48 ], [ %188, %206 ]
  %210 = inttoptr i64 %208 to %"class.WTF::StringImpl"*
  br i1 %24, label %224, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #13
  br label %224

224:                                              ; preds = %14, %223, %220, %207, %4
  %225 = phi %"class.WTF::StringImpl"* [ %1, %14 ], [ %1, %4 ], [ %210, %207 ], [ %210, %220 ], [ %210, %223 ]
  %226 = phi i1 [ false, %14 ], [ false, %4 ], [ %209, %207 ], [ %209, %220 ], [ %209, %223 ]
  %227 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #13
  br label %241

241:                                              ; preds = %224, %237, %240
  ret i1 %226
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZN5blink22NGInlineNodeDataEditor7PrepareEjj(%"class.blink::NGInlineNodeDataEditor"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::NGInlineNodeDataEditor", %"class.blink::NGInlineNodeDataEditor"* %0, i64 0, i32 1
  %5 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutBlockFlow"* %5, null
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %6, label %92, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 2111
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %14, label %92

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %18, label %25

18:                                               ; preds = %14, %18
  %19 = phi %"class.blink::LayoutObject"* [ %21, %18 ], [ %7, %14 ]
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 7
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %18, label %25

25:                                               ; preds = %18, %14
  %26 = phi %"class.blink::Node"* [ %16, %14 ], [ %23, %18 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = tail call zeroext i1 @_ZNK5blink8Document21NeedsLayoutTreeUpdateEv(%"class.blink::Document"* %30) #13
  br i1 %31, label %92, label %32

32:                                               ; preds = %25
  %33 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %34 = bitcast %"class.blink::LayoutBlockFlow"* %33 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %35 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %34, align 8
  %36 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %35, i64 213
  %37 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %36, align 8
  %38 = tail call %"struct.blink::NGInlineNodeData"* %37(%"class.blink::LayoutBlockFlow"* %33) #13
  %39 = icmp eq %"struct.blink::NGInlineNodeData"* %38, null
  br i1 %39, label %92, label %40

40:                                               ; preds = %32
  %41 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %42 = bitcast %"class.blink::LayoutBlockFlow"* %41 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %43 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %42, align 8
  %44 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %43, i64 213
  %45 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %44, align 8
  %46 = tail call %"struct.blink::NGInlineNodeData"* %45(%"class.blink::LayoutBlockFlow"* %41) #13
  %47 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %92, label %50

50:                                               ; preds = %40
  %51 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %52 = bitcast %"class.blink::LayoutBlockFlow"* %51 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %53 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %52, align 8
  %54 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %53, i64 213
  %55 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %54, align 8
  %56 = tail call %"struct.blink::NGInlineNodeData"* %55(%"class.blink::LayoutBlockFlow"* %51) #13
  %57 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %56, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.blink::NGInlineNodeDataEditor", %"class.blink::NGInlineNodeDataEditor"* %0, i64 0, i32 2
  %62 = bitcast %"class.blink::LayoutText"** %61 to %"class.blink::LayoutObject"**
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 5, i32 0
  %65 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %66 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %66, i64 0, i32 1, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %68, i64 0, i32 23
  %70 = bitcast [5 x i8]* %69 to i40*
  %71 = load i40, i40* %70, align 8
  %72 = and i40 %71, 50331648
  %73 = icmp eq i40 %72, 0
  br i1 %73, label %74, label %92

74:                                               ; preds = %60
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 1
  %76 = bitcast %"class.blink::LayoutObject"* %75 to i16*
  %77 = load i16, i16* %76, align 8
  %78 = and i16 %77, 256
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %74
  %81 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %82 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink12NGInlineNode16GetOffsetMappingEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"* %81)
  %83 = getelementptr inbounds %"class.blink::NGInlineNodeDataEditor", %"class.blink::NGInlineNodeDataEditor"* %0, i64 0, i32 0
  %84 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %85 = bitcast %"class.blink::LayoutBlockFlow"* %84 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %86 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %85, align 8
  %87 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %86, i64 212
  %88 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %87, align 8
  %89 = tail call %"struct.blink::NGInlineNodeData"* %88(%"class.blink::LayoutBlockFlow"* %84) #13
  tail call void @_ZNSt3__110unique_ptrIN5blink16NGInlineNodeDataENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.1991"* %83, %"struct.blink::NGInlineNodeData"* %89) #13
  %90 = getelementptr inbounds %"class.blink::NGInlineNodeDataEditor", %"class.blink::NGInlineNodeDataEditor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %90, align 8
  br label %92

92:                                               ; preds = %74, %8, %60, %25, %40, %50, %3, %32, %80
  %93 = phi %"struct.blink::NGInlineNodeData"* [ %91, %80 ], [ null, %32 ], [ null, %3 ], [ null, %50 ], [ null, %40 ], [ null, %25 ], [ null, %8 ], [ null, %60 ], [ null, %74 ]
  ret %"struct.blink::NGInlineNodeData"* %93
}

declare void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"*, %"class.WTF::String"*, i16 zeroext) local_unnamed_addr #2

declare void @_ZN5blink10LayoutText15SetTextInternalE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink10LayoutText16ClearInlineItemsEv(%"class.blink::LayoutText"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122CollectInlinesInternalINS_28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEEEEEvPT_PKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"struct.blink::NGInlineNodeData"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate", %"class.blink::NGInlineItemsBuilderTemplate"* %0, i64 0, i32 0
  %4 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE10EnterBlockEPKNS_13ComputedStyleE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::ComputedStyle"* %7) #13
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %4, i64 0, i32 0, i32 1, i32 0
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %44, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::LayoutObject"* %9 to i1 (%"class.blink::LayoutObject"*)***
  %13 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, i64 25
  %15 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* nonnull %9) #13
  br i1 %16, label %17, label %22, !prof !2

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 2, i32 6
  %19 = bitcast %"class.blink::UntracedMember"* %18 to %"class.blink::LayoutObject"**
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %17, %11
  %23 = phi %"class.blink::LayoutObject"* [ %20, %17 ], [ %9, %11 ]
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 73786976294838206464
  %28 = icmp eq i96 %27, 0
  %29 = and i96 %26, 113336795588871485128704
  %30 = icmp eq i96 %29, 75557863725914323419136
  %31 = or i1 %28, %30
  br i1 %31, label %42, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = and i160 %37, 16528282690043758247936
  %39 = icmp eq i160 %38, 0
  br i1 %39, label %40, label %42, !prof !2

40:                                               ; preds = %32
  %41 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* nonnull %23) #13
  br i1 %41, label %46, label %42, !prof !2

42:                                               ; preds = %40, %32, %22
  %43 = tail call %"class.blink::LayoutObject"* @_ZN5blink16LayoutNGListItem26FindSymbolMarkerLayoutTextEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %5) #13
  br label %51

44:                                               ; preds = %2, %17
  %45 = tail call %"class.blink::LayoutObject"* @_ZN5blink16LayoutNGListItem26FindSymbolMarkerLayoutTextEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %5) #13
  br label %152

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 9
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = tail call %"class.blink::LayoutObject"* @_ZN5blink16LayoutNGListItem26FindSymbolMarkerLayoutTextEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %5) #13
  %50 = icmp eq %"class.blink::LayoutObject"* %48, null
  br i1 %50, label %152, label %51

51:                                               ; preds = %42, %46
  %52 = phi %"class.blink::LayoutObject"* [ %43, %42 ], [ %49, %46 ]
  %53 = phi %"class.blink::LayoutObject"* [ %23, %42 ], [ %48, %46 ]
  br label %54

54:                                               ; preds = %51, %149
  %55 = phi %"class.blink::LayoutObject"* [ %150, %149 ], [ %53, %51 ]
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 4
  %57 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %56 to i96*
  %58 = load i96, i96* %57, align 4
  %59 = and i96 %58, 33554432
  %60 = icmp eq i96 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.blink::LayoutObject"* %55 to %"class.blink::LayoutText"*
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE10AppendTextEPNS_10LayoutTextEPKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutText"* nonnull %62, %"struct.blink::NGInlineNodeData"* %1) #13
  %63 = icmp eq %"class.blink::LayoutObject"* %52, %55
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE17SetIsSymbolMarkerEv(%"class.blink::NGInlineItemsBuilderTemplate"* %0) #13
  br label %65

65:                                               ; preds = %64, %61
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE16ClearNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %55) #13
  br label %103

66:                                               ; preds = %54
  %67 = and i96 %58, 8388608
  %68 = icmp eq i96 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE14AppendFloatingEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %55) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE19ClearInlineFragmentEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %55) #13
  br label %103

70:                                               ; preds = %66
  %71 = and i96 %58, 113336795588871485128704
  %72 = icmp eq i96 %71, 75557863725914323419136
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE25AppendOutOfFlowPositionedEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %55) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE19ClearInlineFragmentEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %55) #13
  br label %103

74:                                               ; preds = %70
  %75 = and i96 %58, 1073741824
  %76 = icmp eq i96 %75, 0
  br i1 %76, label %96, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.blink::LayoutObject"* %55 to i1 (%"class.blink::LayoutObject"*, i32)***
  %79 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %78, align 8
  %80 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, i64 92
  %81 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %80, align 8
  %82 = tail call zeroext i1 %81(%"class.blink::LayoutObject"* nonnull %55, i32 15) #13
  br i1 %82, label %93, label %83

83:                                               ; preds = %77
  %84 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %78, align 8
  %85 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %84, i64 92
  %86 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %85, align 8
  %87 = tail call zeroext i1 %86(%"class.blink::LayoutObject"* nonnull %55, i32 36) #13
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %78, align 8
  %90 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %89, i64 92
  %91 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %90, align 8
  %92 = tail call zeroext i1 %91(%"class.blink::LayoutObject"* nonnull %55, i32 31) #13
  br i1 %92, label %93, label %94

93:                                               ; preds = %77, %83, %88
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE12AppendOpaqueENS_12NGInlineItem16NGInlineItemTypeEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, i32 7, %"class.blink::LayoutObject"* nonnull %55) #13
  br label %95

94:                                               ; preds = %88
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE18AppendAtomicInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %55) #13
  br label %95

95:                                               ; preds = %94, %93
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE19ClearInlineFragmentEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %55) #13
  br label %103

96:                                               ; preds = %74
  %97 = bitcast %"class.blink::LayoutObject"* %55 to %"class.blink::LayoutInline"*
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE29UpdateShouldCreateBoxFragmentEPNS_12LayoutInlineE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutInline"* %97) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE11EnterInlineEPNS_12LayoutInlineE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutInline"* %97) #13
  %98 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 1
  %99 = bitcast %"class.blink::LayoutObject"* %98 to %"class.blink::LayoutObject"**
  %100 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %99, align 8
  %101 = icmp eq %"class.blink::LayoutObject"* %100, null
  br i1 %101, label %102, label %149

102:                                              ; preds = %96
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE10ExitInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %55) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE16ClearNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %55) #13
  br label %103

103:                                              ; preds = %102, %69, %95, %73, %65
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 9
  %105 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %104, align 8
  %106 = icmp eq %"class.blink::LayoutObject"* %105, null
  br i1 %106, label %107, label %149

107:                                              ; preds = %103, %145
  %108 = phi %"class.blink::LayoutObject"* [ %141, %145 ], [ %55, %103 ]
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 7
  %110 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %109, align 8
  %111 = icmp eq %"class.blink::LayoutObject"* %110, null
  br i1 %111, label %152, label %112, !prof !2

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 4
  %114 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %113 to i96*
  %115 = load i96, i96* %114, align 4
  %116 = and i96 %115, 73786976294838206464
  %117 = icmp eq i96 %116, 0
  %118 = and i96 %115, 113336795588871485128704
  %119 = icmp eq i96 %118, 75557863725914323419136
  %120 = or i1 %117, %119
  br i1 %120, label %131, label %121

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 5, i32 0
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %123, i64 0, i32 0, i32 9
  %125 = bitcast [20 x i8]* %124 to i160*
  %126 = load i160, i160* %125, align 8
  %127 = and i160 %126, 16528282690043758247936
  %128 = icmp eq i160 %127, 0
  br i1 %128, label %129, label %131, !prof !2

129:                                              ; preds = %121
  %130 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* nonnull %108) #13
  br i1 %130, label %137, label %131, !prof !2

131:                                              ; preds = %129, %121, %112
  %132 = bitcast %"class.blink::LayoutObject"* %110 to i1 (%"class.blink::LayoutObject"*)***
  %133 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %132, align 8
  %134 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %133, i64 25
  %135 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %134, align 8
  %136 = tail call zeroext i1 %135(%"class.blink::LayoutObject"* nonnull %110) #13
  br i1 %136, label %137, label %140, !prof !2

137:                                              ; preds = %131, %129
  %138 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 7
  %139 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %138, align 8
  br label %140

140:                                              ; preds = %137, %131
  %141 = phi %"class.blink::LayoutObject"* [ %110, %131 ], [ %139, %137 ]
  %142 = icmp ne %"class.blink::LayoutObject"* %141, %5
  %143 = icmp ne %"class.blink::LayoutObject"* %141, null
  %144 = and i1 %142, %143
  br i1 %144, label %145, label %152

145:                                              ; preds = %140
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE10ExitInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %141) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE16ClearNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"* %0, %"class.blink::LayoutObject"* nonnull %141) #13
  %146 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %141, i64 0, i32 9
  %147 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %148 = icmp eq %"class.blink::LayoutObject"* %147, null
  br i1 %148, label %107, label %149

149:                                              ; preds = %145, %96, %103
  %150 = phi %"class.blink::LayoutObject"* [ %105, %103 ], [ %100, %96 ], [ %147, %145 ]
  %151 = icmp eq %"class.blink::LayoutObject"* %150, null
  br i1 %151, label %152, label %54

152:                                              ; preds = %149, %107, %140, %44, %46
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE9ExitBlockEv(%"class.blink::NGInlineItemsBuilderTemplate"* %0) #13
  ret void
}

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE23DidFinishCollectInlinesEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22NGInlineNodeDataEditor3RunEv(%"class.blink::NGInlineNodeDataEditor"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::Vector.1920", align 8
  %3 = alloca %"class.blink::NGInlineItem", align 8
  %4 = alloca %"class.blink::NGInlineItem", align 8
  %5 = alloca %"class.blink::NGInlineItem", align 8
  %6 = alloca %"class.blink::NGInlineItem", align 8
  %7 = alloca %"class.blink::NGInlineItem", align 8
  %8 = alloca %"class.blink::NGInlineItem", align 8
  %9 = alloca %"class.blink::NGInlineItem", align 8
  %10 = getelementptr inbounds %"class.blink::NGInlineNodeDataEditor", %"class.blink::NGInlineNodeDataEditor"* %0, i64 0, i32 1
  %11 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %10, align 8
  %12 = bitcast %"class.blink::LayoutBlockFlow"* %11 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %13 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %13, i64 213
  %15 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %14, align 8
  %16 = tail call %"struct.blink::NGInlineNodeData"* %15(%"class.blink::LayoutBlockFlow"* %11) #13
  %17 = getelementptr inbounds %"class.blink::NGInlineNodeDataEditor", %"class.blink::NGInlineNodeDataEditor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %17, align 8
  %19 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %1, %22
  %26 = phi i32 [ %24, %22 ], [ 0, %1 ]
  %27 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %16, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %25, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %25 ]
  %36 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %18, i64 0, i32 0
  %37 = tail call i32 @_ZN5blink22NGInlineNodeDataEditor8MismatchERKNS_17NGInlineItemsDataES3_(%"struct.blink::NGInlineItemsData"* dereferenceable(40) %36, %"struct.blink::NGInlineItemsData"* dereferenceable(40) %27)
  %38 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %17, align 8
  %39 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %38, i64 0, i32 0
  %40 = sub i32 %26, %37
  %41 = sub i32 %35, %37
  %42 = icmp ult i32 %41, %40
  %43 = select i1 %42, i32 %41, i32 %40
  %44 = tail call i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndERKNS_17NGInlineItemsDataES3_j(%"struct.blink::NGInlineItemsData"* dereferenceable(40) %39, %"struct.blink::NGInlineItemsData"* dereferenceable(40) %27, i32 %43)
  %45 = sub i32 %26, %44
  %46 = bitcast %"class.WTF::Vector.1920"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %2, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %2, i64 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #13
  %50 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %17, align 8
  %51 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %50, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %52, 3
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %50, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %56, align 8
  %58 = zext i32 %52 to i64
  %59 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %57, i64 %58
  br label %76

60:                                               ; preds = %34
  %61 = zext i32 %53 to i64
  %62 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm(i64 %61) #13
  %63 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %62, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGInlineItemEEEPKcv, i64 0, i64 0)) #13
  %64 = ptrtoint i8* %63 to i64
  %65 = bitcast %"class.WTF::Vector.1920"* %2 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = lshr i64 %62, 5
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %48, align 8
  %68 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %17, align 8
  %69 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %68, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %68, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %71, align 8
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %72, i64 %73
  %75 = icmp eq i32 %70, 0
  br i1 %75, label %400, label %76

76:                                               ; preds = %55, %60
  %77 = phi %"class.blink::NGInlineItem"* [ %59, %55 ], [ %74, %60 ]
  %78 = phi %"class.blink::NGInlineItem"* [ %57, %55 ], [ %72, %60 ]
  br label %79

79:                                               ; preds = %76, %109
  %80 = phi %"class.blink::NGInlineItem"* [ %110, %109 ], [ %78, %76 ]
  %81 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %80, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp ult i32 %82, %37
  br i1 %83, label %84, label %112

84:                                               ; preds = %79
  %85 = load i32, i32* %49, align 4
  %86 = load i32, i32* %48, align 8
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %108, label %88, !prof !2

88:                                               ; preds = %84
  %89 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %90 = zext i32 %85 to i64
  %91 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %89, i64 %90
  %92 = bitcast %"class.blink::NGInlineItem"* %80 to i64*
  %93 = bitcast %"class.blink::NGInlineItem"* %91 to i64*
  %94 = load i64, i64* %92, align 8
  store i64 %94, i64* %93, align 8
  %95 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %80, i64 0, i32 2, i32 0
  %96 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %89, i64 %90, i32 2, i32 0
  store %"class.blink::ShapeResult"* %96, %"class.blink::ShapeResult"** %97, align 8
  %98 = icmp eq %"class.blink::ShapeResult"* %96, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %88
  %100 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %96, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %100) #13
  br label %101

101:                                              ; preds = %99, %88
  %102 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %89, i64 %90, i32 3
  %103 = bitcast %"class.blink::LayoutObject"** %102 to i8*
  %104 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %80, i64 0, i32 3
  %105 = bitcast %"class.blink::LayoutObject"** %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %105, i64 16, i1 false) #13
  %106 = load i32, i32* %49, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %49, align 4
  br label %109

108:                                              ; preds = %84
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1920"* nonnull %2, %"class.blink::NGInlineItem"* dereferenceable(32) %80) #13
  br label %109

109:                                              ; preds = %101, %108
  %110 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %80, i64 1
  %111 = icmp eq %"class.blink::NGInlineItem"* %110, %77
  br i1 %111, label %400, label %79

112:                                              ; preds = %79
  %113 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %80, i64 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = icmp ult i32 %114, %37
  br i1 %115, label %116, label %174

116:                                              ; preds = %112
  %117 = bitcast %"class.blink::NGInlineItem"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #13
  call void @_ZNK5blink22NGInlineNodeDataEditor14CopyItemBeforeERKNS_12NGInlineItemEj(%"class.blink::NGInlineItem"* nonnull sret %3, %"class.blink::NGInlineNodeDataEditor"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %80, i32 %37)
  %118 = load i32, i32* %49, align 4
  %119 = load i32, i32* %48, align 8
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %141, label %121, !prof !2

121:                                              ; preds = %116
  %122 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %123 = zext i32 %118 to i64
  %124 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %122, i64 %123
  %125 = bitcast %"class.blink::NGInlineItem"* %3 to i64*
  %126 = bitcast %"class.blink::NGInlineItem"* %124 to i64*
  %127 = load i64, i64* %125, align 8
  store i64 %127, i64* %126, align 8
  %128 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %3, i64 0, i32 2, i32 0
  %129 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %122, i64 %123, i32 2, i32 0
  store %"class.blink::ShapeResult"* %129, %"class.blink::ShapeResult"** %130, align 8
  %131 = icmp eq %"class.blink::ShapeResult"* %129, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %121
  %133 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %129, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %133) #13
  br label %134

134:                                              ; preds = %132, %121
  %135 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %122, i64 %123, i32 3
  %136 = bitcast %"class.blink::LayoutObject"** %135 to i8*
  %137 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %3, i64 0, i32 3
  %138 = bitcast %"class.blink::LayoutObject"** %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %138, i64 16, i1 false) #13
  %139 = load i32, i32* %49, align 4
  %140 = add i32 %139, 1
  store i32 %140, i32* %49, align 4
  br label %142

141:                                              ; preds = %116
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1920"* nonnull %2, %"class.blink::NGInlineItem"* nonnull dereferenceable(32) %3) #13
  br label %142

142:                                              ; preds = %134, %141
  %143 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %3, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp ult i32 %144, %37
  br i1 %145, label %146, label %173

146:                                              ; preds = %142
  %147 = bitcast %"class.blink::NGInlineItem"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %147) #13
  call void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"* nonnull %4, %"class.blink::NGInlineItem"* dereferenceable(32) %80, i32 %144, i32 %37, %"class.blink::ShapeResult"* null) #13
  %148 = load i32, i32* %49, align 4
  %149 = load i32, i32* %48, align 8
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %171, label %151, !prof !2

151:                                              ; preds = %146
  %152 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %153 = zext i32 %148 to i64
  %154 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %152, i64 %153
  %155 = bitcast %"class.blink::NGInlineItem"* %4 to i64*
  %156 = bitcast %"class.blink::NGInlineItem"* %154 to i64*
  %157 = load i64, i64* %155, align 8
  store i64 %157, i64* %156, align 8
  %158 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %4, i64 0, i32 2, i32 0
  %159 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %152, i64 %153, i32 2, i32 0
  store %"class.blink::ShapeResult"* %159, %"class.blink::ShapeResult"** %160, align 8
  %161 = icmp eq %"class.blink::ShapeResult"* %159, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %151
  %163 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %159, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %163) #13
  br label %164

164:                                              ; preds = %162, %151
  %165 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %152, i64 %153, i32 3
  %166 = bitcast %"class.blink::LayoutObject"** %165 to i8*
  %167 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %4, i64 0, i32 3
  %168 = bitcast %"class.blink::LayoutObject"** %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %168, i64 16, i1 false) #13
  %169 = load i32, i32* %49, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %49, align 4
  br label %172

171:                                              ; preds = %146
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1920"* nonnull %2, %"class.blink::NGInlineItem"* nonnull dereferenceable(32) %4) #13
  br label %172

172:                                              ; preds = %164, %171
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %147) #13
  br label %173

173:                                              ; preds = %172, %142
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #13
  br label %174

174:                                              ; preds = %173, %112
  %175 = icmp eq %"class.blink::NGInlineItem"* %80, %77
  br i1 %175, label %400, label %176

176:                                              ; preds = %174, %181
  %177 = phi %"class.blink::NGInlineItem"* [ %182, %181 ], [ %80, %174 ]
  %178 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %177, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = icmp ult i32 %179, %45
  br i1 %180, label %181, label %184

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %177, i64 1
  %183 = icmp eq %"class.blink::NGInlineItem"* %182, %77
  br i1 %183, label %400, label %176

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %177, i64 0, i32 1
  %186 = sub i32 %35, %26
  %187 = add i32 %45, %186
  %188 = icmp ult i32 %37, %187
  br i1 %188, label %189, label %217

189:                                              ; preds = %184
  %190 = bitcast %"class.blink::NGInlineItem"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190) #13
  call void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"* nonnull %5, %"class.blink::NGInlineItem"* dereferenceable(32) %177, i32 %37, i32 %187, %"class.blink::ShapeResult"* null) #13
  %191 = load i32, i32* %49, align 4
  %192 = load i32, i32* %48, align 8
  %193 = icmp eq i32 %191, %192
  br i1 %193, label %214, label %194, !prof !2

194:                                              ; preds = %189
  %195 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %196 = zext i32 %191 to i64
  %197 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %195, i64 %196
  %198 = bitcast %"class.blink::NGInlineItem"* %5 to i64*
  %199 = bitcast %"class.blink::NGInlineItem"* %197 to i64*
  %200 = load i64, i64* %198, align 8
  store i64 %200, i64* %199, align 8
  %201 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %5, i64 0, i32 2, i32 0
  %202 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %201, align 8
  %203 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %195, i64 %196, i32 2, i32 0
  store %"class.blink::ShapeResult"* %202, %"class.blink::ShapeResult"** %203, align 8
  %204 = icmp eq %"class.blink::ShapeResult"* %202, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %194
  %206 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %202, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %206) #13
  br label %207

207:                                              ; preds = %205, %194
  %208 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %195, i64 %196, i32 3
  %209 = bitcast %"class.blink::LayoutObject"** %208 to i8*
  %210 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %5, i64 0, i32 3
  %211 = bitcast %"class.blink::LayoutObject"** %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %211, i64 16, i1 false) #13
  %212 = load i32, i32* %49, align 4
  %213 = add i32 %212, 1
  store i32 %213, i32* %49, align 4
  br label %215

214:                                              ; preds = %189
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1920"* nonnull %2, %"class.blink::NGInlineItem"* nonnull dereferenceable(32) %5) #13
  br label %215

215:                                              ; preds = %207, %214
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %190) #13
  %216 = load i32, i32* %185, align 4
  br label %217

217:                                              ; preds = %215, %184
  %218 = phi i32 [ %216, %215 ], [ %179, %184 ]
  %219 = icmp ult i32 %45, %218
  br i1 %219, label %220, label %336

220:                                              ; preds = %217
  %221 = bitcast %"class.blink::NGInlineItem"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %221) #13
  call void @_ZNK5blink22NGInlineNodeDataEditor13CopyItemAfterERKNS_12NGInlineItemEj(%"class.blink::NGInlineItem"* nonnull sret %6, %"class.blink::NGInlineNodeDataEditor"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %177, i32 %45)
  %222 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 0, i32 0
  %223 = load i32, i32* %222, align 8
  %224 = icmp ult i32 %45, %223
  br i1 %224, label %225, label %280

225:                                              ; preds = %220
  %226 = bitcast %"class.blink::NGInlineItem"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %226) #13
  call void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"* nonnull %7, %"class.blink::NGInlineItem"* dereferenceable(32) %177, i32 %45, i32 %223, %"class.blink::ShapeResult"* null) #13
  %227 = load i32, i32* %49, align 4
  %228 = load i32, i32* %48, align 8
  %229 = icmp eq i32 %227, %228
  br i1 %229, label %250, label %230, !prof !2

230:                                              ; preds = %225
  %231 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %232 = zext i32 %227 to i64
  %233 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %231, i64 %232
  %234 = bitcast %"class.blink::NGInlineItem"* %7 to i64*
  %235 = bitcast %"class.blink::NGInlineItem"* %233 to i64*
  %236 = load i64, i64* %234, align 8
  store i64 %236, i64* %235, align 8
  %237 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %7, i64 0, i32 2, i32 0
  %238 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %237, align 8
  %239 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %231, i64 %232, i32 2, i32 0
  store %"class.blink::ShapeResult"* %238, %"class.blink::ShapeResult"** %239, align 8
  %240 = icmp eq %"class.blink::ShapeResult"* %238, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %230
  %242 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %238, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %242) #13
  br label %243

243:                                              ; preds = %241, %230
  %244 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %231, i64 %232, i32 3
  %245 = bitcast %"class.blink::LayoutObject"** %244 to i8*
  %246 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %7, i64 0, i32 3
  %247 = bitcast %"class.blink::LayoutObject"** %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* align 8 %247, i64 16, i1 false) #13
  %248 = load i32, i32* %49, align 4
  %249 = add i32 %248, 1
  store i32 %249, i32* %49, align 4
  br label %251

250:                                              ; preds = %225
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1920"* nonnull %2, %"class.blink::NGInlineItem"* nonnull dereferenceable(32) %7) #13
  br label %251

251:                                              ; preds = %243, %250
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %226) #13
  %252 = load i32, i32* %49, align 4
  %253 = add i32 %252, -1
  %254 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* nonnull %2, i32 %253) #13
  %255 = icmp eq i32 %186, 0
  br i1 %255, label %280, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %254, i64 0, i32 0
  %258 = load i32, i32* %257, align 8
  %259 = add i32 %258, %186
  store i32 %259, i32* %257, align 8
  %260 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %254, i64 0, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = add i32 %261, %186
  store i32 %262, i32* %260, align 4
  %263 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %254, i64 0, i32 2
  %264 = getelementptr inbounds %class.scoped_refptr.1923, %class.scoped_refptr.1923* %263, i64 0, i32 0
  %265 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %264, align 8
  %266 = icmp eq %"class.blink::ShapeResult"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %256
  %268 = call %"class.blink::ShapeResult"* @_ZNK5blink11ShapeResult18CopyAdjustedOffsetEj(%"class.blink::ShapeResult"* nonnull %265, i32 %259) #13
  %269 = ptrtoint %"class.blink::ShapeResult"* %268 to i64
  %270 = bitcast %class.scoped_refptr.1923* %263 to i64*
  %271 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %264, align 8
  store i64 %269, i64* %270, align 8
  %272 = icmp eq %"class.blink::ShapeResult"* %271, null
  br i1 %272, label %280, label %273

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %271, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %274) #13
  %275 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %271, i64 0, i32 0, i32 0, i32 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %280

278:                                              ; preds = %273
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %271) #13
  %279 = bitcast %"class.blink::ShapeResult"* %271 to i8*
  call void @free(i8* %279) #13
  br label %280

280:                                              ; preds = %278, %273, %267, %256, %251, %220
  %281 = load i32, i32* %49, align 4
  %282 = load i32, i32* %48, align 8
  %283 = icmp eq i32 %281, %282
  br i1 %283, label %304, label %284, !prof !2

284:                                              ; preds = %280
  %285 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %286 = zext i32 %281 to i64
  %287 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %285, i64 %286
  %288 = bitcast %"class.blink::NGInlineItem"* %6 to i64*
  %289 = bitcast %"class.blink::NGInlineItem"* %287 to i64*
  %290 = load i64, i64* %288, align 8
  store i64 %290, i64* %289, align 8
  %291 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 0, i32 2, i32 0
  %292 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %285, i64 %286, i32 2, i32 0
  store %"class.blink::ShapeResult"* %292, %"class.blink::ShapeResult"** %293, align 8
  %294 = icmp eq %"class.blink::ShapeResult"* %292, null
  br i1 %294, label %297, label %295

295:                                              ; preds = %284
  %296 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %292, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %296) #13
  br label %297

297:                                              ; preds = %295, %284
  %298 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %285, i64 %286, i32 3
  %299 = bitcast %"class.blink::LayoutObject"** %298 to i8*
  %300 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 0, i32 3
  %301 = bitcast %"class.blink::LayoutObject"** %300 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %299, i8* align 8 %301, i64 16, i1 false) #13
  %302 = load i32, i32* %49, align 4
  %303 = add i32 %302, 1
  store i32 %303, i32* %49, align 4
  br label %306

304:                                              ; preds = %280
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1920"* nonnull %2, %"class.blink::NGInlineItem"* nonnull dereferenceable(32) %6) #13
  %305 = load i32, i32* %49, align 4
  br label %306

306:                                              ; preds = %297, %304
  %307 = phi i32 [ %303, %297 ], [ %305, %304 ]
  %308 = add i32 %307, -1
  %309 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* nonnull %2, i32 %308) #13
  %310 = icmp eq i32 %186, 0
  br i1 %310, label %335, label %311

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %309, i64 0, i32 0
  %313 = load i32, i32* %312, align 8
  %314 = add i32 %313, %186
  store i32 %314, i32* %312, align 8
  %315 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %309, i64 0, i32 1
  %316 = load i32, i32* %315, align 4
  %317 = add i32 %316, %186
  store i32 %317, i32* %315, align 4
  %318 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %309, i64 0, i32 2
  %319 = getelementptr inbounds %class.scoped_refptr.1923, %class.scoped_refptr.1923* %318, i64 0, i32 0
  %320 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %319, align 8
  %321 = icmp eq %"class.blink::ShapeResult"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %311
  %323 = call %"class.blink::ShapeResult"* @_ZNK5blink11ShapeResult18CopyAdjustedOffsetEj(%"class.blink::ShapeResult"* nonnull %320, i32 %314) #13
  %324 = ptrtoint %"class.blink::ShapeResult"* %323 to i64
  %325 = bitcast %class.scoped_refptr.1923* %318 to i64*
  %326 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %319, align 8
  store i64 %324, i64* %325, align 8
  %327 = icmp eq %"class.blink::ShapeResult"* %326, null
  br i1 %327, label %335, label %328

328:                                              ; preds = %322
  %329 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %326, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %329) #13
  %330 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %326, i64 0, i32 0, i32 0, i32 0, i32 0
  %331 = load i32, i32* %330, align 4
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %328
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %326) #13
  %334 = bitcast %"class.blink::ShapeResult"* %326 to i8*
  call void @free(i8* %334) #13
  br label %335

335:                                              ; preds = %306, %311, %322, %328, %333
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %221) #13
  br label %336

336:                                              ; preds = %335, %217
  %337 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %177, i64 1
  %338 = icmp eq %"class.blink::NGInlineItem"* %337, %77
  br i1 %338, label %400, label %339

339:                                              ; preds = %336
  %340 = icmp eq i32 %186, 0
  br label %341

341:                                              ; preds = %339, %397
  %342 = phi %"class.blink::NGInlineItem"* [ %337, %339 ], [ %398, %397 ]
  %343 = phi %"class.blink::NGInlineItem"* [ %177, %339 ], [ %342, %397 ]
  %344 = load i32, i32* %49, align 4
  %345 = load i32, i32* %48, align 8
  %346 = icmp eq i32 %344, %345
  br i1 %346, label %367, label %347, !prof !2

347:                                              ; preds = %341
  %348 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %349 = zext i32 %344 to i64
  %350 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %348, i64 %349
  %351 = bitcast %"class.blink::NGInlineItem"* %342 to i64*
  %352 = bitcast %"class.blink::NGInlineItem"* %350 to i64*
  %353 = load i64, i64* %351, align 8
  store i64 %353, i64* %352, align 8
  %354 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %343, i64 1, i32 2, i32 0
  %355 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %354, align 8
  %356 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %348, i64 %349, i32 2, i32 0
  store %"class.blink::ShapeResult"* %355, %"class.blink::ShapeResult"** %356, align 8
  %357 = icmp eq %"class.blink::ShapeResult"* %355, null
  br i1 %357, label %360, label %358

358:                                              ; preds = %347
  %359 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %355, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %359) #13
  br label %360

360:                                              ; preds = %358, %347
  %361 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %348, i64 %349, i32 3
  %362 = bitcast %"class.blink::LayoutObject"** %361 to i8*
  %363 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %343, i64 1, i32 3
  %364 = bitcast %"class.blink::LayoutObject"** %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %362, i8* align 8 %364, i64 16, i1 false) #13
  %365 = load i32, i32* %49, align 4
  %366 = add i32 %365, 1
  store i32 %366, i32* %49, align 4
  br label %369

367:                                              ; preds = %341
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1920"* nonnull %2, %"class.blink::NGInlineItem"* dereferenceable(32) %342) #13
  %368 = load i32, i32* %49, align 4
  br label %369

369:                                              ; preds = %360, %367
  %370 = phi i32 [ %366, %360 ], [ %368, %367 ]
  %371 = add i32 %370, -1
  %372 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* nonnull %2, i32 %371) #13
  br i1 %340, label %397, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %372, i64 0, i32 0
  %375 = load i32, i32* %374, align 8
  %376 = add i32 %375, %186
  store i32 %376, i32* %374, align 8
  %377 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %372, i64 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = add i32 %378, %186
  store i32 %379, i32* %377, align 4
  %380 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %372, i64 0, i32 2
  %381 = getelementptr inbounds %class.scoped_refptr.1923, %class.scoped_refptr.1923* %380, i64 0, i32 0
  %382 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %381, align 8
  %383 = icmp eq %"class.blink::ShapeResult"* %382, null
  br i1 %383, label %397, label %384

384:                                              ; preds = %373
  %385 = call %"class.blink::ShapeResult"* @_ZNK5blink11ShapeResult18CopyAdjustedOffsetEj(%"class.blink::ShapeResult"* nonnull %382, i32 %376) #13
  %386 = ptrtoint %"class.blink::ShapeResult"* %385 to i64
  %387 = bitcast %class.scoped_refptr.1923* %380 to i64*
  %388 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %381, align 8
  store i64 %386, i64* %387, align 8
  %389 = icmp eq %"class.blink::ShapeResult"* %388, null
  br i1 %389, label %397, label %390

390:                                              ; preds = %384
  %391 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %388, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %391) #13
  %392 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %388, i64 0, i32 0, i32 0, i32 0, i32 0
  %393 = load i32, i32* %392, align 4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %397

395:                                              ; preds = %390
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %388) #13
  %396 = bitcast %"class.blink::ShapeResult"* %388 to i8*
  call void @free(i8* %396) #13
  br label %397

397:                                              ; preds = %369, %373, %384, %390, %395
  %398 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %342, i64 1
  %399 = icmp eq %"class.blink::NGInlineItem"* %398, %77
  br i1 %399, label %400, label %341

400:                                              ; preds = %109, %181, %397, %60, %174, %336
  %401 = load i32, i32* %49, align 4
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %440

403:                                              ; preds = %400
  %404 = bitcast %"class.blink::NGInlineItem"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %404) #13
  %405 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %17, align 8
  %406 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %405, i64 0, i32 0, i32 1
  %407 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* %406, i32 0) #13
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %413, label %410

410:                                              ; preds = %403
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 1
  %412 = load i32, i32* %411, align 4
  br label %413

413:                                              ; preds = %403, %410
  %414 = phi i32 [ %412, %410 ], [ 0, %403 ]
  call void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"* nonnull %8, %"class.blink::NGInlineItem"* dereferenceable(32) %407, i32 0, i32 %414, %"class.blink::ShapeResult"* null) #13
  %415 = load i32, i32* %49, align 4
  %416 = load i32, i32* %48, align 8
  %417 = icmp eq i32 %415, %416
  br i1 %417, label %438, label %418, !prof !2

418:                                              ; preds = %413
  %419 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %420 = zext i32 %415 to i64
  %421 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %419, i64 %420
  %422 = bitcast %"class.blink::NGInlineItem"* %8 to i64*
  %423 = bitcast %"class.blink::NGInlineItem"* %421 to i64*
  %424 = load i64, i64* %422, align 8
  store i64 %424, i64* %423, align 8
  %425 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 0, i32 2, i32 0
  %426 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %425, align 8
  %427 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %419, i64 %420, i32 2, i32 0
  store %"class.blink::ShapeResult"* %426, %"class.blink::ShapeResult"** %427, align 8
  %428 = icmp eq %"class.blink::ShapeResult"* %426, null
  br i1 %428, label %431, label %429

429:                                              ; preds = %418
  %430 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %426, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %430) #13
  br label %431

431:                                              ; preds = %429, %418
  %432 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %419, i64 %420, i32 3
  %433 = bitcast %"class.blink::LayoutObject"** %432 to i8*
  %434 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 0, i32 3
  %435 = bitcast %"class.blink::LayoutObject"** %434 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %433, i8* align 8 %435, i64 16, i1 false) #13
  %436 = load i32, i32* %49, align 4
  %437 = add i32 %436, 1
  store i32 %437, i32* %49, align 4
  br label %439

438:                                              ; preds = %413
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1920"* nonnull %2, %"class.blink::NGInlineItem"* nonnull dereferenceable(32) %8) #13
  br label %439

439:                                              ; preds = %431, %438
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %404) #13
  br label %496

440:                                              ; preds = %400
  %441 = add i32 %401, -1
  %442 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* nonnull %2, i32 %441) #13
  %443 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %444 = icmp eq %"class.WTF::StringImpl"* %443, null
  br i1 %444, label %496, label %445

445:                                              ; preds = %440
  %446 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %442, i64 0, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %443, i64 0, i32 1
  %449 = load i32, i32* %448, align 4
  %450 = icmp ult i32 %447, %449
  br i1 %450, label %451, label %496

451:                                              ; preds = %445
  %452 = bitcast %"class.blink::NGInlineItem"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %452) #13
  %453 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %17, align 8
  %454 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %453, i64 0, i32 0, i32 1
  %455 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %453, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %456 = load i32, i32* %455, align 4
  %457 = add i32 %456, -1
  %458 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* %454, i32 %457) #13
  %459 = load i32, i32* %49, align 4
  %460 = add i32 %459, -1
  %461 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* nonnull %2, i32 %460) #13
  %462 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %461, i64 0, i32 1
  %463 = load i32, i32* %462, align 4
  %464 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %465 = icmp eq %"class.WTF::StringImpl"* %464, null
  br i1 %465, label %469, label %466

466:                                              ; preds = %451
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 1
  %468 = load i32, i32* %467, align 4
  br label %469

469:                                              ; preds = %451, %466
  %470 = phi i32 [ %468, %466 ], [ 0, %451 ]
  call void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"* nonnull %9, %"class.blink::NGInlineItem"* dereferenceable(32) %458, i32 %463, i32 %470, %"class.blink::ShapeResult"* null) #13
  %471 = load i32, i32* %49, align 4
  %472 = load i32, i32* %48, align 8
  %473 = icmp eq i32 %471, %472
  br i1 %473, label %494, label %474, !prof !2

474:                                              ; preds = %469
  %475 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %476 = zext i32 %471 to i64
  %477 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %475, i64 %476
  %478 = bitcast %"class.blink::NGInlineItem"* %9 to i64*
  %479 = bitcast %"class.blink::NGInlineItem"* %477 to i64*
  %480 = load i64, i64* %478, align 8
  store i64 %480, i64* %479, align 8
  %481 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %9, i64 0, i32 2, i32 0
  %482 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %481, align 8
  %483 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %475, i64 %476, i32 2, i32 0
  store %"class.blink::ShapeResult"* %482, %"class.blink::ShapeResult"** %483, align 8
  %484 = icmp eq %"class.blink::ShapeResult"* %482, null
  br i1 %484, label %487, label %485

485:                                              ; preds = %474
  %486 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %482, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %486) #13
  br label %487

487:                                              ; preds = %485, %474
  %488 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %475, i64 %476, i32 3
  %489 = bitcast %"class.blink::LayoutObject"** %488 to i8*
  %490 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %9, i64 0, i32 3
  %491 = bitcast %"class.blink::LayoutObject"** %490 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %489, i8* align 8 %491, i64 16, i1 false) #13
  %492 = load i32, i32* %49, align 4
  %493 = add i32 %492, 1
  store i32 %493, i32* %49, align 4
  br label %495

494:                                              ; preds = %469
  call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1920"* nonnull %2, %"class.blink::NGInlineItem"* nonnull dereferenceable(32) %9) #13
  br label %495

495:                                              ; preds = %487, %494
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %452) #13
  br label %496

496:                                              ; preds = %440, %445, %495, %439
  %497 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %17, align 8
  %498 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %497, i64 0, i32 0, i32 1
  %499 = bitcast %"class.WTF::Vector.1920"* %2 to i64*
  %500 = load i64, i64* %499, align 8
  %501 = bitcast %"class.WTF::Vector.1920"* %498 to i64*
  %502 = load i64, i64* %501, align 8
  store atomic i64 %502, i64* %499 monotonic, align 8
  store atomic i64 %500, i64* %501 monotonic, align 8
  %503 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %497, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %504 = load i32, i32* %503, align 4
  %505 = load i32, i32* %48, align 8
  store i32 %505, i32* %503, align 4
  store i32 %504, i32* %48, align 8
  %506 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %497, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = load i32, i32* %49, align 4
  store i32 %508, i32* %506, align 4
  store i32 %507, i32* %49, align 4
  %509 = load %"struct.blink::NGInlineNodeData"*, %"struct.blink::NGInlineNodeData"** %17, align 8
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %511, label %529, label %512

512:                                              ; preds = %496
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = load atomic i32, i32* %513 monotonic, align 4
  %515 = and i32 %514, 2
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %517, label %529

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 0
  %519 = load i32, i32* %518, align 4
  %520 = zext i32 %519 to i33
  %521 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %520, i33 1) #13
  %522 = extractvalue { i33, i1 } %521, 1
  %523 = extractvalue { i33, i1 } %521, 0
  %524 = icmp slt i33 %523, 0
  %525 = or i1 %522, %524
  br i1 %525, label %526, label %527, !prof !2

526:                                              ; preds = %517
  call void @llvm.trap() #13
  unreachable

527:                                              ; preds = %517
  %528 = trunc i33 %523 to i32
  store i32 %528, i32* %518, align 4
  br label %529

529:                                              ; preds = %527, %512, %496
  %530 = ptrtoint %"class.WTF::StringImpl"* %510 to i64
  %531 = bitcast %"struct.blink::NGInlineNodeData"* %509 to i64*
  %532 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %509, i64 0, i32 0, i32 0, i32 0, i32 0
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %532, align 8
  store i64 %530, i64* %531, align 8
  %534 = icmp eq %"class.WTF::StringImpl"* %533, null
  br i1 %534, label %548, label %535

535:                                              ; preds = %529
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load atomic i32, i32* %536 monotonic, align 4
  %538 = and i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  br i1 %539, label %542, label %544

542:                                              ; preds = %535
  %543 = add i32 %541, -1
  store i32 %543, i32* %540, align 4
  br label %544

544:                                              ; preds = %542, %535
  %545 = phi i32 [ %543, %542 ], [ %541, %535 ]
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %544
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %533) #13
  br label %548

548:                                              ; preds = %529, %544, %547
  %549 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %47, align 8
  %550 = icmp eq %"class.blink::NGInlineItem"* %549, null
  br i1 %550, label %567, label %551, !prof !3

551:                                              ; preds = %548
  %552 = bitcast %"class.blink::NGInlineItem"* %549 to i8*
  %553 = load i32, i32* %49, align 4
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %565, label %555, !prof !2

555:                                              ; preds = %551
  %556 = zext i32 %553 to i64
  %557 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %549, i64 %556
  br label %558

558:                                              ; preds = %558, %555
  %559 = phi %"class.blink::NGInlineItem"* [ %560, %558 ], [ %549, %555 ]
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* %559) #13
  %560 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %559, i64 1
  %561 = icmp eq %"class.blink::NGInlineItem"* %560, %557
  br i1 %561, label %562, label %558

562:                                              ; preds = %558
  store i32 0, i32* %49, align 4
  %563 = bitcast %"class.WTF::Vector.1920"* %2 to i8**
  %564 = load i8*, i8** %563, align 8
  br label %565

565:                                              ; preds = %562, %551
  %566 = phi i8* [ %564, %562 ], [ %552, %551 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %566) #13
  store %"class.blink::NGInlineItem"* null, %"class.blink::NGInlineItem"** %47, align 8
  br label %567

567:                                              ; preds = %548, %565
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEED1Ev(%"class.blink::NGInlineItemsBuilderTemplate"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"struct.blink::NGInlineNodeData"* @_ZNK5blink12NGInlineNode10EnsureDataEv(%"class.blink::NGInlineNode"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %3 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %3 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %5 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %5, i64 213
  %7 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %6, align 8
  %8 = tail call %"struct.blink::NGInlineNodeData"* %7(%"class.blink::LayoutBlockFlow"* %3) #13
  %9 = icmp eq %"struct.blink::NGInlineNodeData"* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 2048
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %14
  %21 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %4, align 8
  %22 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %21, i64 212
  %23 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %22, align 8
  %24 = tail call %"struct.blink::NGInlineNodeData"* %23(%"class.blink::LayoutBlockFlow"* %3) #13
  %25 = bitcast %"class.blink::LayoutBlockFlow"* %3 to void (%"class.blink::LayoutBlockFlow"*)***
  %26 = load void (%"class.blink::LayoutBlockFlow"*)**, void (%"class.blink::LayoutBlockFlow"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %26, i64 214
  %28 = load void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %27, align 8
  tail call void %28(%"class.blink::LayoutBlockFlow"* %3) #13
  br label %29

29:                                               ; preds = %20, %10, %1
  %30 = phi %"struct.blink::NGInlineNodeData"* [ %24, %20 ], [ null, %10 ], [ null, %1 ]
  tail call void @_ZNK5blink12NGInlineNode13PrepareLayoutENSt3__110unique_ptrINS_16NGInlineNodeDataENS1_14default_deleteIS3_EEEE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %30) #13
  br label %31

31:                                               ; preds = %14, %29
  %32 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  %33 = bitcast %"class.blink::LayoutBlockFlow"* %32 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %34 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %33, align 8
  %35 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %34, i64 213
  %36 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %35, align 8
  %37 = tail call %"struct.blink::NGInlineNodeData"* %36(%"class.blink::LayoutBlockFlow"* %32) #13
  ret %"struct.blink::NGInlineNodeData"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMapping"* @_ZNK5blink12NGInlineNode28ComputeOffsetMappingIfNeededEv(%"class.blink::NGInlineNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %3 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %3 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %5 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %5, i64 213
  %7 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %6, align 8
  %8 = tail call %"struct.blink::NGInlineNodeData"* %7(%"class.blink::LayoutBlockFlow"* %3) #13
  %9 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %8, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %9, align 8
  %11 = icmp eq %"class.blink::NGOffsetMapping"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  tail call void @_ZN5blink12NGInlineNode20ComputeOffsetMappingEPNS_15LayoutBlockFlowEPNS_16NGInlineNodeDataE(%"class.blink::LayoutBlockFlow"* %13, %"struct.blink::NGInlineNodeData"* %8)
  %14 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %9, align 8
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi %"class.blink::NGOffsetMapping"* [ %10, %1 ], [ %14, %12 ]
  ret %"class.blink::NGOffsetMapping"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12NGInlineNode20ComputeOffsetMappingEPNS_15LayoutBlockFlowEPNS_16NGInlineNodeDataE(%"class.blink::LayoutBlockFlow"*, %"struct.blink::NGInlineNodeData"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.1920", align 8
  %4 = alloca %"class.blink::NGInlineItemsBuilderTemplate.2018", align 8
  %5 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %5, align 8
  %7 = icmp eq %"struct.blink::SvgInlineNodeData"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %6, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %6, i64 0, i32 3, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, %"class.WTF::HashMap.1981"* null, %"class.WTF::HashMap.1981"* %9
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi %"class.WTF::HashMap.1981"* [ null, %2 ], [ %13, %8 ]
  %16 = bitcast %"class.WTF::Vector.1920"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %3, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %3, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #13
  %20 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = icmp eq %"class.blink::LayoutObject"* %21, null
  br i1 %22, label %41, label %23

23:                                               ; preds = %14, %23
  %24 = phi %"class.blink::LayoutObject"* [ %28, %23 ], [ %21, %14 ]
  %25 = phi i32 [ %26, %23 ], [ 0, %14 ]
  %26 = add i32 %25, 1
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 9
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = icmp eq %"class.blink::LayoutObject"* %28, null
  br i1 %29, label %30, label %23

30:                                               ; preds = %23
  %31 = shl i32 %26, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %41, label %33, !prof !2

33:                                               ; preds = %30
  %34 = zext i32 %31 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm(i64 %34) #13
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGInlineItemEEEPKcv, i64 0, i64 0)) #13
  %37 = ptrtoint i8* %36 to i64
  %38 = bitcast %"class.WTF::Vector.1920"* %3 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = lshr i64 %35, 5
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %18, align 8
  br label %41

41:                                               ; preds = %30, %14, %33
  %42 = bitcast %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %42) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 184, i1 false)
  %43 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 0
  store %"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBlockFlow"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 1
  store %"class.WTF::Vector.1920"* %3, %"class.WTF::Vector.1920"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 2, i32 1
  %47 = bitcast %union.anon.1997* %46 to i8*
  store i8 0, i8* %47, align 8
  %48 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 2, i32 2
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 2, i32 3
  store i8 1, i8* %49, align 4
  %50 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 2, i32 4
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 3
  call void @_ZN5blink22NGOffsetMappingBuilderC1Ev(%"class.blink::NGOffsetMappingBuilder"* %51) #13
  %52 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 4
  %53 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 6
  %54 = bitcast %"class.WTF::Vector.2019"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #13
  store %"class.WTF::HashMap.1981"* %15, %"class.WTF::HashMap.1981"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 7
  store i8 0, i8* %55, align 8
  %56 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 8
  store i8 0, i8* %56, align 1
  %57 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 9
  store i8 1, i8* %57, align 2
  %58 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 10
  store i8 1, i8* %58, align 1
  %59 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %4, i64 0, i32 11
  store i8 0, i8* %59, align 4
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %71, label %64

62:                                               ; preds = %64
  %63 = and i32 %67, 1073741823
  br label %71

64:                                               ; preds = %41, %64
  %65 = phi %"class.blink::LayoutObject"* [ %69, %64 ], [ %60, %41 ]
  %66 = phi i32 [ %67, %64 ], [ 0, %41 ]
  %67 = add i32 %66, 1
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 9
  %69 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %68, align 8
  %70 = icmp eq %"class.blink::LayoutObject"* %69, null
  br i1 %70, label %62, label %64

71:                                               ; preds = %41, %62
  %72 = phi i32 [ 0, %41 ], [ %63, %62 ]
  call void @_ZN5blink22NGOffsetMappingBuilder15ReserveCapacityEj(%"class.blink::NGOffsetMappingBuilder"* %51, i32 %72) #13
  call fastcc void @_ZN5blink12_GLOBAL__N_122CollectInlinesInternalINS_28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEEEEEvPT_PKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* nonnull %4)
  %73 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %76, label %100

76:                                               ; preds = %71
  %77 = call %"class.WTF::StringImpl"* @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE8ToStringEv(%"class.blink::NGInlineItemsBuilderTemplate.2018"* nonnull %4) #13
  %78 = ptrtoint %"class.WTF::StringImpl"* %77 to i64
  %79 = bitcast %"struct.blink::NGInlineNodeData"* %1 to i64*
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  store i64 %78, i64* %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %97, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #13
  br label %95

95:                                               ; preds = %94, %91
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  br label %97

97:                                               ; preds = %95, %76
  %98 = phi %"class.WTF::StringImpl"* [ %96, %95 ], [ %77, %76 ]
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %71, %97
  %101 = phi %"class.WTF::StringImpl"* [ %98, %97 ], [ %74, %71 ]
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #13
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %106
  call void @llvm.trap() #13
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %118

118:                                              ; preds = %97, %100, %116
  %119 = phi %"class.WTF::StringImpl"* [ null, %97 ], [ %101, %100 ], [ %101, %116 ]
  call void @_ZN5blink22NGOffsetMappingBuilder20SetDestinationStringEN3WTF6StringE(%"class.blink::NGOffsetMappingBuilder"* %51, %"class.WTF::StringImpl"* %119) #13
  %120 = call %"class.blink::NGOffsetMapping"* @_ZN5blink22NGOffsetMappingBuilder5BuildEv(%"class.blink::NGOffsetMappingBuilder"* %51) #13
  %121 = ptrtoint %"class.blink::NGOffsetMapping"* %120 to i64
  %122 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 3
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.1871", %"class.std::__1::unique_ptr.1871"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.1871"* %122 to i64*
  store i64 %121, i64* %125, align 8
  %126 = icmp eq %"class.blink::NGOffsetMapping"* %124, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %118
  call void @_ZN5blink15NGOffsetMappingD1Ev(%"class.blink::NGOffsetMapping"* nonnull %124) #13
  %128 = bitcast %"class.blink::NGOffsetMapping"* %124 to i8*
  call void @free(i8* %128) #13
  br label %129

129:                                              ; preds = %127, %118
  call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEED1Ev(%"class.blink::NGInlineItemsBuilderTemplate.2018"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %42) #13
  %130 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %17, align 8
  %131 = icmp eq %"class.blink::NGInlineItem"* %130, null
  br i1 %131, label %148, label %132, !prof !3

132:                                              ; preds = %129
  %133 = bitcast %"class.blink::NGInlineItem"* %130 to i8*
  %134 = load i32, i32* %19, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %146, label %136, !prof !2

136:                                              ; preds = %132
  %137 = zext i32 %134 to i64
  %138 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %130, i64 %137
  br label %139

139:                                              ; preds = %139, %136
  %140 = phi %"class.blink::NGInlineItem"* [ %141, %139 ], [ %130, %136 ]
  call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* %140) #13
  %141 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %140, i64 1
  %142 = icmp eq %"class.blink::NGInlineItem"* %141, %138
  br i1 %142, label %143, label %139

143:                                              ; preds = %139
  store i32 0, i32* %19, align 4
  %144 = bitcast %"class.WTF::Vector.1920"* %3 to i8**
  %145 = load i8*, i8** %144, align 8
  br label %146

146:                                              ; preds = %143, %132
  %147 = phi i8* [ %145, %143 ], [ %133, %132 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %147) #13
  store %"class.blink::NGInlineItem"* null, %"class.blink::NGInlineItem"** %17, align 8
  br label %148

148:                                              ; preds = %129, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  ret void
}

declare void @_ZN5blink22NGOffsetMappingBuilder15ReserveCapacityEj(%"class.blink::NGOffsetMappingBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122CollectInlinesInternalINS_28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEEEEEvPT_PKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::NGInlineItemsBuilderTemplate.2018", %"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, i64 0, i32 0
  %3 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE10EnterBlockEPKNS_13ComputedStyleE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::ComputedStyle"* %6) #13
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 1, i32 0
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*)***
  %12 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %12, i64 25
  %14 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::LayoutObject"* nonnull %8) #13
  br i1 %15, label %16, label %21, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 2, i32 6
  %18 = bitcast %"class.blink::UntracedMember"* %17 to %"class.blink::LayoutObject"**
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %43, label %21

21:                                               ; preds = %16, %10
  %22 = phi %"class.blink::LayoutObject"* [ %19, %16 ], [ %8, %10 ]
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = and i96 %25, 73786976294838206464
  %27 = icmp eq i96 %26, 0
  %28 = and i96 %25, 113336795588871485128704
  %29 = icmp eq i96 %28, 75557863725914323419136
  %30 = or i1 %27, %29
  br i1 %30, label %41, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = and i160 %36, 16528282690043758247936
  %38 = icmp eq i160 %37, 0
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %31
  %40 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* nonnull %22) #13
  br i1 %40, label %45, label %41, !prof !2

41:                                               ; preds = %39, %31, %21
  %42 = tail call %"class.blink::LayoutObject"* @_ZN5blink16LayoutNGListItem26FindSymbolMarkerLayoutTextEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %4) #13
  br label %50

43:                                               ; preds = %1, %16
  %44 = tail call %"class.blink::LayoutObject"* @_ZN5blink16LayoutNGListItem26FindSymbolMarkerLayoutTextEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %4) #13
  br label %151

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 9
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = tail call %"class.blink::LayoutObject"* @_ZN5blink16LayoutNGListItem26FindSymbolMarkerLayoutTextEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %4) #13
  %49 = icmp eq %"class.blink::LayoutObject"* %47, null
  br i1 %49, label %151, label %50

50:                                               ; preds = %41, %45
  %51 = phi %"class.blink::LayoutObject"* [ %42, %41 ], [ %48, %45 ]
  %52 = phi %"class.blink::LayoutObject"* [ %22, %41 ], [ %47, %45 ]
  br label %53

53:                                               ; preds = %50, %148
  %54 = phi %"class.blink::LayoutObject"* [ %149, %148 ], [ %52, %50 ]
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 4
  %56 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %55 to i96*
  %57 = load i96, i96* %56, align 4
  %58 = and i96 %57, 33554432
  %59 = icmp eq i96 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %53
  %61 = bitcast %"class.blink::LayoutObject"* %54 to %"class.blink::LayoutText"*
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE10AppendTextEPNS_10LayoutTextEPKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutText"* nonnull %61, %"struct.blink::NGInlineNodeData"* null) #13
  %62 = icmp eq %"class.blink::LayoutObject"* %51, %54
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE17SetIsSymbolMarkerEv(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0) #13
  br label %64

64:                                               ; preds = %63, %60
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE16ClearNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %54) #13
  br label %102

65:                                               ; preds = %53
  %66 = and i96 %57, 8388608
  %67 = icmp eq i96 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE14AppendFloatingEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %54) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE19ClearInlineFragmentEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %54) #13
  br label %102

69:                                               ; preds = %65
  %70 = and i96 %57, 113336795588871485128704
  %71 = icmp eq i96 %70, 75557863725914323419136
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE25AppendOutOfFlowPositionedEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %54) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE19ClearInlineFragmentEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %54) #13
  br label %102

73:                                               ; preds = %69
  %74 = and i96 %57, 1073741824
  %75 = icmp eq i96 %74, 0
  br i1 %75, label %95, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::LayoutObject"* %54 to i1 (%"class.blink::LayoutObject"*, i32)***
  %78 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %78, i64 92
  %80 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, align 8
  %81 = tail call zeroext i1 %80(%"class.blink::LayoutObject"* nonnull %54, i32 15) #13
  br i1 %81, label %92, label %82

82:                                               ; preds = %76
  %83 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %83, i64 92
  %85 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::LayoutObject"* nonnull %54, i32 36) #13
  br i1 %86, label %92, label %87

87:                                               ; preds = %82
  %88 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %88, i64 92
  %90 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::LayoutObject"* nonnull %54, i32 31) #13
  br i1 %91, label %92, label %93

92:                                               ; preds = %76, %82, %87
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE12AppendOpaqueENS_12NGInlineItem16NGInlineItemTypeEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, i32 7, %"class.blink::LayoutObject"* nonnull %54) #13
  br label %94

93:                                               ; preds = %87
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE18AppendAtomicInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %54) #13
  br label %94

94:                                               ; preds = %93, %92
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE19ClearInlineFragmentEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %54) #13
  br label %102

95:                                               ; preds = %73
  %96 = bitcast %"class.blink::LayoutObject"* %54 to %"class.blink::LayoutInline"*
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE29UpdateShouldCreateBoxFragmentEPNS_12LayoutInlineE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutInline"* %96) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE11EnterInlineEPNS_12LayoutInlineE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutInline"* %96) #13
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 1
  %98 = bitcast %"class.blink::LayoutObject"* %97 to %"class.blink::LayoutObject"**
  %99 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %98, align 8
  %100 = icmp eq %"class.blink::LayoutObject"* %99, null
  br i1 %100, label %101, label %148

101:                                              ; preds = %95
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE10ExitInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %54) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE16ClearNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %54) #13
  br label %102

102:                                              ; preds = %101, %68, %94, %72, %64
  %103 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 9
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %103, align 8
  %105 = icmp eq %"class.blink::LayoutObject"* %104, null
  br i1 %105, label %106, label %148

106:                                              ; preds = %102, %144
  %107 = phi %"class.blink::LayoutObject"* [ %140, %144 ], [ %54, %102 ]
  %108 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %107, i64 0, i32 7
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %108, align 8
  %110 = icmp eq %"class.blink::LayoutObject"* %109, null
  br i1 %110, label %151, label %111, !prof !2

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %107, i64 0, i32 4
  %113 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %112 to i96*
  %114 = load i96, i96* %113, align 4
  %115 = and i96 %114, 73786976294838206464
  %116 = icmp eq i96 %115, 0
  %117 = and i96 %114, 113336795588871485128704
  %118 = icmp eq i96 %117, 75557863725914323419136
  %119 = or i1 %116, %118
  br i1 %119, label %130, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %107, i64 0, i32 5, i32 0
  %122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %122, i64 0, i32 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = and i160 %125, 16528282690043758247936
  %127 = icmp eq i160 %126, 0
  br i1 %127, label %128, label %130, !prof !2

128:                                              ; preds = %120
  %129 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* nonnull %107) #13
  br i1 %129, label %136, label %130, !prof !2

130:                                              ; preds = %128, %120, %111
  %131 = bitcast %"class.blink::LayoutObject"* %109 to i1 (%"class.blink::LayoutObject"*)***
  %132 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %131, align 8
  %133 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %132, i64 25
  %134 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %133, align 8
  %135 = tail call zeroext i1 %134(%"class.blink::LayoutObject"* nonnull %109) #13
  br i1 %135, label %136, label %139, !prof !2

136:                                              ; preds = %130, %128
  %137 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 7
  %138 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %137, align 8
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi %"class.blink::LayoutObject"* [ %109, %130 ], [ %138, %136 ]
  %141 = icmp ne %"class.blink::LayoutObject"* %140, %4
  %142 = icmp ne %"class.blink::LayoutObject"* %140, null
  %143 = and i1 %141, %142
  br i1 %143, label %144, label %151

144:                                              ; preds = %139
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE10ExitInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %140) #13
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE16ClearNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0, %"class.blink::LayoutObject"* nonnull %140) #13
  %145 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %140, i64 0, i32 9
  %146 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %145, align 8
  %147 = icmp eq %"class.blink::LayoutObject"* %146, null
  br i1 %147, label %106, label %148

148:                                              ; preds = %144, %95, %102
  %149 = phi %"class.blink::LayoutObject"* [ %104, %102 ], [ %99, %95 ], [ %146, %144 ]
  %150 = icmp eq %"class.blink::LayoutObject"* %149, null
  br i1 %150, label %151, label %53

151:                                              ; preds = %148, %106, %139, %43, %45
  tail call void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE9ExitBlockEv(%"class.blink::NGInlineItemsBuilderTemplate.2018"* %0) #13
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE8ToStringEv(%"class.blink::NGInlineItemsBuilderTemplate.2018"*) local_unnamed_addr #2

declare void @_ZN5blink22NGOffsetMappingBuilder20SetDestinationStringEN3WTF6StringE(%"class.blink::NGOffsetMappingBuilder"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::NGOffsetMapping"* @_ZN5blink22NGOffsetMappingBuilder5BuildEv(%"class.blink::NGOffsetMappingBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEED1Ev(%"class.blink::NGInlineItemsBuilderTemplate.2018"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMapping"* @_ZN5blink12NGInlineNode16GetOffsetMappingEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"struct.blink::NGInlineNodeData", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 63
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %73, !prof !3

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %12, i64 92
  %14 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::LayoutObject"* %10, i32 30) #13
  br i1 %15, label %16, label %51

16:                                               ; preds = %9
  %17 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlockFlow"*)***
  %18 = load i1 (%"class.blink::LayoutBlockFlow"*)**, i1 (%"class.blink::LayoutBlockFlow"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %18, i64 216
  %20 = load i1 (%"class.blink::LayoutBlockFlow"*)*, i1 (%"class.blink::LayoutBlockFlow"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::LayoutBlockFlow"* %0) #13
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBlockFlow"*)***
  %24 = load void (%"class.blink::LayoutBlockFlow"*)**, void (%"class.blink::LayoutBlockFlow"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %24, i64 214
  %26 = load void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %25, align 8
  tail call void %26(%"class.blink::LayoutBlockFlow"* %0) #13
  br label %27

27:                                               ; preds = %16, %22
  %28 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %29 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %28, align 8
  %30 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %29, i64 213
  %31 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %30, align 8
  %32 = tail call %"struct.blink::NGInlineNodeData"* %31(%"class.blink::LayoutBlockFlow"* %0) #13
  %33 = icmp eq %"struct.blink::NGInlineNodeData"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %38, label %41

38:                                               ; preds = %34, %27
  %39 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 971, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0)) #13
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %41

41:                                               ; preds = %34, %38
  %42 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %28, align 8
  %43 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %42, i64 213
  %44 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %43, align 8
  %45 = call %"struct.blink::NGInlineNodeData"* %44(%"class.blink::LayoutBlockFlow"* %0) #13
  %46 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %45, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %46, align 8
  %48 = icmp eq %"class.blink::NGOffsetMapping"* %47, null
  br i1 %48, label %49, label %73

49:                                               ; preds = %41
  call void @_ZN5blink12NGInlineNode20ComputeOffsetMappingEPNS_15LayoutBlockFlowEPNS_16NGInlineNodeDataE(%"class.blink::LayoutBlockFlow"* %0, %"struct.blink::NGInlineNodeData"* %45) #13
  %50 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %46, align 8
  br label %73

51:                                               ; preds = %9
  %52 = tail call %"class.blink::NGOffsetMapping"* @_ZNK5blink15LayoutBlockFlow16GetOffsetMappingEv(%"class.blink::LayoutBlockFlow"* %0) #13
  %53 = icmp eq %"class.blink::NGOffsetMapping"* %52, null
  br i1 %53, label %54, label %73

54:                                               ; preds = %51
  %55 = bitcast %"struct.blink::NGInlineNodeData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %55) #13
  %56 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %3, i64 0, i32 3
  %57 = bitcast i8* %56 to i64*
  store i64 -6148914691236517206, i64* %57, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 56, i1 false) #13
  call void @_ZN5blink12NGInlineNode20ComputeOffsetMappingEPNS_15LayoutBlockFlowEPNS_16NGInlineNodeDataE(%"class.blink::LayoutBlockFlow"* %0, %"struct.blink::NGInlineNodeData"* nonnull %3)
  %58 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %3, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %58, align 8
  store %"class.blink::NGOffsetMapping"* null, %"class.blink::NGOffsetMapping"** %58, align 8
  tail call void @_ZN5blink15LayoutBlockFlow16SetOffsetMappingENSt3__110unique_ptrINS_15NGOffsetMappingENS1_14default_deleteIS3_EEEE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::NGOffsetMapping"* %59) #13
  %60 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %60, align 8
  store %"struct.blink::SvgInlineNodeData"* null, %"struct.blink::SvgInlineNodeData"** %60, align 8
  %62 = icmp eq %"struct.blink::SvgInlineNodeData"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  tail call void @_ZN5blink17SvgInlineNodeDataD2Ev(%"struct.blink::SvgInlineNodeData"* nonnull %61) #13
  %64 = bitcast %"struct.blink::SvgInlineNodeData"* %61 to i8*
  tail call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %63, %54
  %66 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %66, align 8
  store %"struct.blink::NGInlineItemsData"* null, %"struct.blink::NGInlineItemsData"** %66, align 8
  %68 = icmp eq %"struct.blink::NGInlineItemsData"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  tail call void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"* nonnull %67) #13
  %70 = bitcast %"struct.blink::NGInlineItemsData"* %67 to i8*
  tail call void @free(i8* %70) #13
  br label %71

71:                                               ; preds = %65, %69
  %72 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %3, i64 0, i32 0
  call void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"* nonnull %72) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %55) #13
  br label %73

73:                                               ; preds = %1, %49, %41, %51, %71
  %74 = phi %"class.blink::NGOffsetMapping"* [ %59, %71 ], [ %52, %51 ], [ null, %1 ], [ %47, %41 ], [ %50, %49 ]
  ret %"class.blink::NGOffsetMapping"* %74
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare %"class.blink::NGOffsetMapping"* @_ZNK5blink15LayoutBlockFlow16GetOffsetMappingEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #2

declare void @_ZN5blink15LayoutBlockFlow16SetOffsetMappingENSt3__110unique_ptrINS_15NGOffsetMappingENS1_14default_deleteIS3_EEEE(%"class.blink::LayoutBlockFlow"*, %"class.blink::NGOffsetMapping"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink32NGSvgTextLayoutAttributesBuilderC1ENS_12NGInlineNodeE(%"class.blink::NGSvgTextLayoutAttributesBuilder"*, %"class.blink::LayoutBox"*, i64) unnamed_addr #2

declare void @_ZN5blink32NGSvgTextLayoutAttributesBuilder5BuildERKN3WTF6StringERKNS1_6VectorINS_12NGInlineItemELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGSvgTextLayoutAttributesBuilder"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.1920"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink32NGSvgTextLayoutAttributesBuilder17CharacterDataListEv(%"class.WTF::Vector.1970"* sret, %"class.blink::NGSvgTextLayoutAttributesBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink32NGSvgTextLayoutAttributesBuilder19TextLengthRangeListEv(%"class.WTF::Vector.1976"* sret, %"class.blink::NGSvgTextLayoutAttributesBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink32NGSvgTextLayoutAttributesBuilder17TextPathRangeListEv(%"class.WTF::Vector.1976"* sret, %"class.blink::NGSvgTextLayoutAttributesBuilder"*) local_unnamed_addr #2

declare %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping18GetLastMappingUnitEj(%"class.blink::NGOffsetMapping"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink19NGOffsetMappingUnit34ConvertTextContentToFirstDOMOffsetEj(%"class.blink::NGOffsetMappingUnit"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode15SegmentBidiRunsEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* nocapture readonly, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NGBidiParagraph", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 3
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = and i8 %6, -3
  store i8 %10, i8* %5, align 8
  br label %58

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::NGBidiParagraph"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.blink::NGBidiParagraph", %"class.blink::NGBidiParagraph"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::NGBidiParagraph", %"class.blink::NGBidiParagraph"* %3, i64 0, i32 1
  %15 = bitcast %"class.blink::NGBidiParagraph"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  store %struct.UBiDi* null, %struct.UBiDi** %13, align 8
  store i8 0, i8* %14, align 8
  %16 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* %16) #13
  %17 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutObject"**
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = call zeroext i1 @_ZN5blink15NGBidiParagraph12SetParagraphERKN3WTF6StringERKNS_13ComputedStyleE(%"class.blink::NGBidiParagraph"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %16, %"class.blink::ComputedStyle"* dereferenceable(104) %20) #13
  br i1 %21, label %22, label %53

22:                                               ; preds = %11
  %23 = load i8, i8* %14, align 8
  %24 = load i8, i8* %5, align 8
  %25 = shl i8 %23, 1
  %26 = and i8 %25, 2
  %27 = and i8 %24, -3
  %28 = or i8 %27, %26
  store i8 %28, i8* %5, align 8
  %29 = load %struct.UBiDi*, %struct.UBiDi** %13, align 8
  %30 = call i32 @ubidi_getDirection_69(%struct.UBiDi* %29) #13
  %31 = icmp ne i32 %30, 2
  %32 = load i8, i8* %14, align 8
  %33 = icmp eq i8 %32, 0
  %34 = and i1 %31, %33
  br i1 %34, label %53, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %49, %35
  %39 = phi i32 [ 0, %35 ], [ %52, %49 ]
  %40 = phi i32 [ 0, %35 ], [ %50, %49 ]
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %38, %43
  %47 = phi i32 [ %45, %43 ], [ 0, %38 ]
  %48 = icmp ult i32 %40, %47
  br i1 %48, label %49, label %57

49:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %50 = call i32 @_ZNK5blink15NGBidiParagraph13GetLogicalRunEjPh(%"class.blink::NGBidiParagraph"* nonnull %3, i32 %40, i8* nonnull %4) #13
  %51 = load i8, i8* %4, align 1
  %52 = call i32 @_ZN5blink12NGInlineItem12SetBidiLevelERN3WTF6VectorIS0_Lj0ENS1_18PartitionAllocatorEEEjjh(%"class.WTF::Vector.1920"* dereferenceable(16) %36, i32 %39, i32 %50, i8 zeroext %51) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br label %38

53:                                               ; preds = %22, %11
  %54 = phi i8 [ -4, %11 ], [ -2, %22 ]
  %55 = load i8, i8* %5, align 8
  %56 = and i8 %55, %54
  store i8 %56, i8* %5, align 8
  br label %57

57:                                               ; preds = %46, %53
  call void @_ZN5blink15NGBidiParagraphD1Ev(%"class.blink::NGBidiParagraph"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  br label %58

58:                                               ; preds = %57, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode17SegmentScriptRunsEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* nocapture readnone, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::RunSegmenter::RunSegmenterRange", align 4
  %4 = alloca %"struct.blink::RunSegmenter::RunSegmenterRange", align 16
  %5 = alloca %"class.blink::RunSegmenter", align 8
  %6 = alloca %"class.blink::RunSegmenter", align 8
  %7 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %214, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %214, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %214, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %40, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 3
  %27 = load i8, i8* %26, align 8
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %25
  %31 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %3, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %3, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %3, i64 0, i32 2
  %35 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %3, i64 0, i32 3
  %36 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %3, i64 0, i32 4
  %37 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %3, i64 0, i32 1
  %38 = bitcast i32* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 -86, i64 16, i1 false)
  store i32 0, i32* %32, align 4
  %39 = load i32, i32* %12, align 4
  store i32 %39, i32* %33, align 4
  store i32 25, i32* %34, align 4
  store i32 0, i32* %35, align 4
  store i32 0, i32* %36, align 4
  call void @_ZN5blink12NGInlineItem14SetSegmentDataERKNS_12RunSegmenter17RunSegmenterRangeEPN3WTF6VectorIS0_Lj0ENS5_18PartitionAllocatorEEE(%"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull dereferenceable(20) %3, %"class.WTF::Vector.1920"* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %31) #13
  br label %214

40:                                               ; preds = %20, %25
  tail call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* %7) #13
  %41 = tail call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* %16, i32 0) #13
  %42 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %41, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = sub i32 %43, %45
  %47 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %47) #13
  %48 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %4, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %4, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %4, i64 0, i32 4
  %51 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %4 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, <4 x i32>* %51, align 16, !alias.scope !28
  store i32 0, i32* %50, align 16, !alias.scope !28
  %52 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 3
  %53 = load i8, i8* %52, align 8
  %54 = and i8 %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %139, label %56

56:                                               ; preds = %40
  %57 = load i32, i32* %17, align 4
  %58 = icmp ugt i32 %57, 1
  br i1 %58, label %59, label %145

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 2
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.1946", %"class.std::__1::unique_ptr.1946"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::unique_ptr.1946"* %60 to i64*
  %63 = bitcast %"class.blink::RunSegmenter"* %5 to i8*
  %64 = getelementptr inbounds %"class.blink::RunSegmenter", %"class.blink::RunSegmenter"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::RunSegmenter", %"class.blink::RunSegmenter"* %5, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::RunSegmenter", %"class.blink::RunSegmenter"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %67

67:                                               ; preds = %59, %133
  %68 = phi i32 [ 1, %59 ], [ %136, %133 ]
  %69 = phi i32 [ %46, %59 ], [ %135, %133 ]
  %70 = phi %"class.blink::NGInlineItem"* [ %41, %59 ], [ %134, %133 ]
  %71 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"* %16, i32 %68) #13
  %72 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %71, i64 0, i32 5
  %73 = load i32, i32* %72, align 4
  %74 = lshr i32 %73, 7
  %75 = trunc i32 %74 to i8
  %76 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %70, i64 0, i32 5
  %77 = load i32, i32* %76, align 4
  %78 = lshr i32 %77, 7
  %79 = trunc i32 %78 to i8
  %80 = icmp eq i8 %75, %79
  br i1 %80, label %81, label %88

81:                                               ; preds = %67
  %82 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %71, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %71, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %83, %69
  %87 = sub i32 %86, %85
  br label %133

88:                                               ; preds = %67
  %89 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %61, align 8
  %90 = icmp eq %"class.blink::NGInlineItemSegments"* %89, null
  br i1 %90, label %91, label %94

91:                                               ; preds = %88
  %92 = call noalias i8* @malloc(i64 32) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 32, i1 false) #13
  %93 = ptrtoint i8* %92 to i64
  store i64 %93, i64* %62, align 8
  br label %94

94:                                               ; preds = %88, %91
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %63) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 80, i1 false)
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i16*
  %99 = select i1 %96, i16* null, i16* %98
  %100 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %70, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  call void @_ZN5blink12RunSegmenterC1EPKDsjNS_15FontOrientationEj(%"class.blink::RunSegmenter"* nonnull %5, i16* %99, i32 %69, i32 0, i32 %101) #13
  %102 = call zeroext i1 @_ZN5blink12RunSegmenter7ConsumeEPNS0_17RunSegmenterRangeE(%"class.blink::RunSegmenter"* nonnull %5, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull %4) #13
  br i1 %102, label %103, label %106

103:                                              ; preds = %94, %103
  %104 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %61, align 8
  call void @_ZN5blink20NGInlineItemSegments6AppendIJRNS_12RunSegmenter17RunSegmenterRangeEEEEvDpOT_(%"class.blink::NGInlineItemSegments"* %104, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull dereferenceable(20) %4)
  %105 = call zeroext i1 @_ZN5blink12RunSegmenter7ConsumeEPNS0_17RunSegmenterRangeE(%"class.blink::RunSegmenter"* nonnull %5, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull %4) #13
  br i1 %105, label %103, label %106

106:                                              ; preds = %103, %94
  %107 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %71, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %71, i64 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = sub i32 %108, %110
  %112 = load %"class.blink::SymbolsIterator"*, %"class.blink::SymbolsIterator"** %64, align 8
  store %"class.blink::SymbolsIterator"* null, %"class.blink::SymbolsIterator"** %64, align 8
  %113 = icmp eq %"class.blink::SymbolsIterator"* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %106
  %115 = bitcast %"class.blink::SymbolsIterator"* %112 to i8*
  call void @free(i8* %115) #13
  br label %116

116:                                              ; preds = %114, %106
  %117 = load %"class.blink::OrientationIterator"*, %"class.blink::OrientationIterator"** %65, align 8
  store %"class.blink::OrientationIterator"* null, %"class.blink::OrientationIterator"** %65, align 8
  %118 = icmp eq %"class.blink::OrientationIterator"* %117, null
  br i1 %118, label %127, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.blink::OrientationIterator", %"class.blink::OrientationIterator"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %121 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %120, align 8
  store %"class.blink::UTF16TextIterator"* null, %"class.blink::UTF16TextIterator"** %120, align 8
  %122 = icmp eq %"class.blink::UTF16TextIterator"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = bitcast %"class.blink::UTF16TextIterator"* %121 to i8*
  call void @free(i8* %124) #13
  br label %125

125:                                              ; preds = %123, %119
  %126 = bitcast %"class.blink::OrientationIterator"* %117 to i8*
  call void @free(i8* %126) #13
  br label %127

127:                                              ; preds = %125, %116
  %128 = load %"class.blink::ScriptRunIterator"*, %"class.blink::ScriptRunIterator"** %66, align 8
  store %"class.blink::ScriptRunIterator"* null, %"class.blink::ScriptRunIterator"** %66, align 8
  %129 = icmp eq %"class.blink::ScriptRunIterator"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  call void @_ZN5blink17ScriptRunIteratorD2Ev(%"class.blink::ScriptRunIterator"* nonnull %128) #13
  %131 = bitcast %"class.blink::ScriptRunIterator"* %128 to i8*
  call void @free(i8* %131) #13
  br label %132

132:                                              ; preds = %127, %130
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %63) #13
  br label %133

133:                                              ; preds = %132, %81
  %134 = phi %"class.blink::NGInlineItem"* [ %70, %81 ], [ %71, %132 ]
  %135 = phi i32 [ %87, %81 ], [ %111, %132 ]
  %136 = add nuw i32 %68, 1
  %137 = load i32, i32* %17, align 4
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %67, label %145

139:                                              ; preds = %40
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %213, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  br label %145

145:                                              ; preds = %133, %56, %142
  %146 = phi %"class.blink::NGInlineItem"* [ %41, %142 ], [ %41, %56 ], [ %134, %133 ]
  %147 = phi i32 [ %144, %142 ], [ %46, %56 ], [ %135, %133 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %213, label %149

149:                                              ; preds = %145
  %150 = bitcast %"class.blink::RunSegmenter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %150) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 80, i1 false)
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 1
  %154 = bitcast %"class.WTF::StringImpl"* %153 to i16*
  %155 = select i1 %152, i16* null, i16* %154
  %156 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %146, i64 0, i32 0
  %157 = load i32, i32* %156, align 8
  call void @_ZN5blink12RunSegmenterC1EPKDsjNS_15FontOrientationEj(%"class.blink::RunSegmenter"* nonnull %6, i16* %155, i32 %147, i32 0, i32 %157) #13
  %158 = call zeroext i1 @_ZN5blink12RunSegmenter7ConsumeEPNS0_17RunSegmenterRangeE(%"class.blink::RunSegmenter"* nonnull %6, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull %4) #13
  %159 = load i32, i32* %48, align 16
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %172

161:                                              ; preds = %149
  %162 = load i32, i32* %49, align 4
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  br label %168

168:                                              ; preds = %161, %165
  %169 = phi i32 [ %167, %165 ], [ 0, %161 ]
  %170 = icmp eq i32 %162, %169
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZN5blink12NGInlineItem14SetSegmentDataERKNS_12RunSegmenter17RunSegmenterRangeEPN3WTF6VectorIS0_Lj0ENS5_18PartitionAllocatorEEE(%"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull dereferenceable(20) %4, %"class.WTF::Vector.1920"* %16) #13
  br label %188

172:                                              ; preds = %168, %149
  %173 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 2
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.1946", %"class.std::__1::unique_ptr.1946"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %174, align 8
  %176 = icmp eq %"class.blink::NGInlineItemSegments"* %175, null
  br i1 %176, label %177, label %182

177:                                              ; preds = %172
  %178 = call noalias i8* @malloc(i64 32) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 32, i1 false) #13
  %179 = ptrtoint i8* %178 to i64
  %180 = bitcast %"class.std::__1::unique_ptr.1946"* %173 to i64*
  store i64 %179, i64* %180, align 8
  %181 = bitcast i8* %178 to %"class.blink::NGInlineItemSegments"*
  br label %182

182:                                              ; preds = %172, %177
  %183 = phi %"class.blink::NGInlineItemSegments"* [ %175, %172 ], [ %181, %177 ]
  call void @_ZN5blink20NGInlineItemSegments6AppendIJRNS_12RunSegmenter17RunSegmenterRangeEEEEvDpOT_(%"class.blink::NGInlineItemSegments"* %183, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull dereferenceable(20) %4)
  %184 = call zeroext i1 @_ZN5blink12RunSegmenter7ConsumeEPNS0_17RunSegmenterRangeE(%"class.blink::RunSegmenter"* nonnull %6, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull %4) #13
  br i1 %184, label %185, label %188

185:                                              ; preds = %182, %185
  %186 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %174, align 8
  call void @_ZN5blink20NGInlineItemSegments6AppendIJRNS_12RunSegmenter17RunSegmenterRangeEEEEvDpOT_(%"class.blink::NGInlineItemSegments"* %186, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull dereferenceable(20) %4)
  %187 = call zeroext i1 @_ZN5blink12RunSegmenter7ConsumeEPNS0_17RunSegmenterRangeE(%"class.blink::RunSegmenter"* nonnull %6, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull %4) #13
  br i1 %187, label %185, label %188

188:                                              ; preds = %185, %182, %171
  %189 = getelementptr inbounds %"class.blink::RunSegmenter", %"class.blink::RunSegmenter"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %190 = load %"class.blink::SymbolsIterator"*, %"class.blink::SymbolsIterator"** %189, align 8
  store %"class.blink::SymbolsIterator"* null, %"class.blink::SymbolsIterator"** %189, align 8
  %191 = icmp eq %"class.blink::SymbolsIterator"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %188
  %193 = bitcast %"class.blink::SymbolsIterator"* %190 to i8*
  call void @free(i8* %193) #13
  br label %194

194:                                              ; preds = %192, %188
  %195 = getelementptr inbounds %"class.blink::RunSegmenter", %"class.blink::RunSegmenter"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %196 = load %"class.blink::OrientationIterator"*, %"class.blink::OrientationIterator"** %195, align 8
  store %"class.blink::OrientationIterator"* null, %"class.blink::OrientationIterator"** %195, align 8
  %197 = icmp eq %"class.blink::OrientationIterator"* %196, null
  br i1 %197, label %206, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::OrientationIterator", %"class.blink::OrientationIterator"* %196, i64 0, i32 0, i32 0, i32 0, i32 0
  %200 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %199, align 8
  store %"class.blink::UTF16TextIterator"* null, %"class.blink::UTF16TextIterator"** %199, align 8
  %201 = icmp eq %"class.blink::UTF16TextIterator"* %200, null
  br i1 %201, label %204, label %202

202:                                              ; preds = %198
  %203 = bitcast %"class.blink::UTF16TextIterator"* %200 to i8*
  call void @free(i8* %203) #13
  br label %204

204:                                              ; preds = %202, %198
  %205 = bitcast %"class.blink::OrientationIterator"* %196 to i8*
  call void @free(i8* %205) #13
  br label %206

206:                                              ; preds = %204, %194
  %207 = getelementptr inbounds %"class.blink::RunSegmenter", %"class.blink::RunSegmenter"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %208 = load %"class.blink::ScriptRunIterator"*, %"class.blink::ScriptRunIterator"** %207, align 8
  store %"class.blink::ScriptRunIterator"* null, %"class.blink::ScriptRunIterator"** %207, align 8
  %209 = icmp eq %"class.blink::ScriptRunIterator"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %206
  call void @_ZN5blink17ScriptRunIteratorD2Ev(%"class.blink::ScriptRunIterator"* nonnull %208) #13
  %211 = bitcast %"class.blink::ScriptRunIterator"* %208 to i8*
  call void @free(i8* %211) #13
  br label %212

212:                                              ; preds = %206, %210
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %150) #13
  br label %213

213:                                              ; preds = %139, %145, %212
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %47) #13
  br label %214

214:                                              ; preds = %2, %30, %213, %15, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode22SegmentFontOrientationEPNS_16NGInlineNodeDataE(%"class.blink::NGInlineNode"* nocapture readonly, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %5 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = trunc i96 %8 to i32
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %186, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %186, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* %16) #13
  %17 = load i32, i32* %12, align 4
  %18 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = udiv i32 %23, 10
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i32 [ %24, %21 ], [ 0, %15 ]
  %27 = add i32 %26, %17
  %28 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.1946", %"class.std::__1::unique_ptr.1946"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %29, align 8
  %31 = icmp eq %"class.blink::NGInlineItemSegments"* %30, null
  br i1 %31, label %67, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %30, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %34, %27
  br i1 %35, label %36, label %67, !prof !3

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %37, align 8
  %39 = icmp eq %"class.blink::NGInlineItemSegment"* %38, null
  %40 = zext i32 %27 to i64
  %41 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGInlineItemSegmentEEEmm(i64 %40) #13
  %42 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %41, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGInlineItemSegmentEEEPKcv, i64 0, i64 0)) #13
  br i1 %39, label %43, label %48

43:                                               ; preds = %36
  %44 = ptrtoint i8* %42 to i64
  %45 = bitcast %"class.blink::NGInlineItemSegments"* %30 to i64*
  store atomic i64 %44, i64* %45 monotonic, align 8
  %46 = lshr i64 %41, 3
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %33, align 8
  br label %67

48:                                               ; preds = %36
  %49 = lshr i64 %41, 3
  %50 = ptrtoint i8* %42 to i64
  %51 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %37, align 8
  %52 = icmp ne i8* %42, null
  %53 = icmp ne %"class.blink::NGInlineItemSegment"* %51, null
  %54 = and i1 %52, %53
  %55 = bitcast %"class.blink::NGInlineItemSegment"* %51 to i8*
  br i1 %54, label %56, label %63, !prof !3

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %30, i64 0, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = shl nuw nsw i64 %59, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* nonnull align 4 %55, i64 %60, i1 false) #13
  %61 = bitcast %"class.blink::NGInlineItemSegments"* %30 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %56, %48
  %64 = phi i8* [ %62, %56 ], [ %55, %48 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #13
  %65 = bitcast %"class.blink::NGInlineItemSegments"* %30 to i64*
  store atomic i64 %50, i64* %65 monotonic, align 8
  %66 = trunc i64 %49 to i32
  store i32 %66, i32* %33, align 8
  br label %67

67:                                               ; preds = %63, %43, %32, %25
  %68 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %68, align 8
  %70 = load i32, i32* %12, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %69, i64 %71
  %73 = icmp eq i32 %70, 0
  br i1 %73, label %186, label %74

74:                                               ; preds = %67
  %75 = bitcast %"class.std::__1::unique_ptr.1946"* %28 to i64*
  %76 = zext i32 %27 to i64
  %77 = bitcast i32* %3 to i8*
  br label %78

78:                                               ; preds = %74, %181
  %79 = phi %"class.blink::NGInlineItem"* [ %69, %74 ], [ %184, %181 ]
  %80 = phi i32 [ 0, %74 ], [ %183, %181 ]
  %81 = phi %"class.blink::NGInlineItemSegments"* [ %30, %74 ], [ %182, %181 ]
  %82 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %79, i64 0, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %181

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %79, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %79, i64 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %87, %89
  br i1 %90, label %181, label %91

91:                                               ; preds = %85
  %92 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %79)
  %93 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %94, i64 0, i32 1, i32 0, i32 0
  %96 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %96, i64 0, i32 1, i32 0, i32 12, i32 0
  %98 = bitcast %"struct.blink::FontDescription::BitFields"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 3
  %101 = icmp eq i64 %100, 2
  br i1 %101, label %102, label %181

102:                                              ; preds = %91
  %103 = icmp eq %"class.blink::NGInlineItemSegments"* %81, null
  br i1 %103, label %104, label %176

104:                                              ; preds = %102
  %105 = call noalias i8* @malloc(i64 32) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 32, i1 false) #13
  %106 = ptrtoint i8* %105 to i64
  %107 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %29, align 8
  store i64 %106, i64* %75, align 8
  %108 = icmp eq %"class.blink::NGInlineItemSegments"* %107, null
  %109 = bitcast i8* %105 to %"class.blink::NGInlineItemSegments"*
  br i1 %108, label %135, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = icmp eq i32* %112, null
  %114 = bitcast i32* %112 to i8*
  br i1 %113, label %121, label %115, !prof !3

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %107, i64 0, i32 1, i32 0, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %120, label %119, !prof !2

119:                                              ; preds = %115
  store i32 0, i32* %116, align 4
  br label %120

120:                                              ; preds = %119, %115
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %114) #13
  store i32* null, i32** %111, align 8
  br label %121

121:                                              ; preds = %120, %110
  %122 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %107, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %122, align 8
  %124 = icmp eq %"class.blink::NGInlineItemSegment"* %123, null
  %125 = bitcast %"class.blink::NGInlineItemSegment"* %123 to i8*
  br i1 %124, label %132, label %126, !prof !3

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %107, i64 0, i32 0, i32 0, i32 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %131, label %130, !prof !2

130:                                              ; preds = %126
  store i32 0, i32* %127, align 4
  br label %131

131:                                              ; preds = %130, %126
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %125) #13
  br label %132

132:                                              ; preds = %131, %121
  %133 = bitcast %"class.blink::NGInlineItemSegments"* %107 to i8*
  call void @free(i8* %133) #13
  %134 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %29, align 8
  br label %135

135:                                              ; preds = %132, %104
  %136 = phi %"class.blink::NGInlineItemSegments"* [ %134, %132 ], [ %109, %104 ]
  %137 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %136, i64 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = icmp ult i32 %138, %27
  br i1 %139, label %140, label %168, !prof !3

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %136, i64 0, i32 0, i32 0, i32 0, i32 0
  %142 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %141, align 8
  %143 = icmp eq %"class.blink::NGInlineItemSegment"* %142, null
  %144 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGInlineItemSegmentEEEmm(i64 %76) #13
  %145 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %144, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGInlineItemSegmentEEEPKcv, i64 0, i64 0)) #13
  %146 = ptrtoint i8* %145 to i64
  br i1 %143, label %147, label %149

147:                                              ; preds = %140
  %148 = bitcast %"class.blink::NGInlineItemSegments"* %136 to i64*
  store atomic i64 %146, i64* %148 monotonic, align 8
  br label %165

149:                                              ; preds = %140
  %150 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %141, align 8
  %151 = icmp ne i8* %145, null
  %152 = icmp ne %"class.blink::NGInlineItemSegment"* %150, null
  %153 = and i1 %151, %152
  %154 = bitcast %"class.blink::NGInlineItemSegment"* %150 to i8*
  br i1 %153, label %155, label %162, !prof !3

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %136, i64 0, i32 0, i32 0, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i64
  %159 = shl nuw nsw i64 %158, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %145, i8* nonnull align 4 %154, i64 %159, i1 false) #13
  %160 = bitcast %"class.blink::NGInlineItemSegments"* %136 to i8**
  %161 = load i8*, i8** %160, align 8
  br label %162

162:                                              ; preds = %155, %149
  %163 = phi i8* [ %161, %155 ], [ %154, %149 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %163) #13
  %164 = bitcast %"class.blink::NGInlineItemSegments"* %136 to i64*
  store atomic i64 %146, i64* %164 monotonic, align 8
  br label %165

165:                                              ; preds = %162, %147
  %166 = lshr i64 %144, 3
  %167 = trunc i64 %166 to i32
  store i32 %167, i32* %137, align 8
  br label %168

168:                                              ; preds = %165, %135
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #13
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %174, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  br label %174

174:                                              ; preds = %168, %171
  %175 = phi i32 [ %173, %171 ], [ 0, %168 ]
  store i32 %175, i32* %3, align 4
  call void @_ZN5blink20NGInlineItemSegments6AppendIJjRKNS_12NGInlineItemEEEEvDpOT_(%"class.blink::NGInlineItemSegments"* %136, i32* nonnull dereferenceable(4) %3, %"class.blink::NGInlineItem"* dereferenceable(32) %79)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #13
  br label %176

176:                                              ; preds = %102, %174
  %177 = phi %"class.blink::NGInlineItemSegments"* [ %81, %102 ], [ %136, %174 ]
  %178 = load i32, i32* %88, align 8
  %179 = load i32, i32* %86, align 4
  %180 = call i32 @_ZN5blink20NGInlineItemSegments26AppendMixedFontOrientationERKN3WTF6StringEjjj(%"class.blink::NGInlineItemSegments"* %177, %"class.WTF::String"* dereferenceable(8) %16, i32 %178, i32 %179, i32 %80) #13
  br label %181

181:                                              ; preds = %85, %176, %91, %78
  %182 = phi %"class.blink::NGInlineItemSegments"* [ %177, %176 ], [ %81, %91 ], [ %81, %85 ], [ %81, %78 ]
  %183 = phi i32 [ %180, %176 ], [ %80, %91 ], [ %80, %85 ], [ %80, %78 ]
  %184 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %79, i64 1
  %185 = icmp eq %"class.blink::NGInlineItem"* %184, %72
  br i1 %185, label %186, label %78

186:                                              ; preds = %181, %67, %11, %2
  ret void
}

declare void @_ZN5blink20NGInlineItemSegments16ComputeItemIndexERKN3WTF6VectorINS_12NGInlineItemELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGInlineItemSegments"*, %"class.WTF::Vector.1920"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink12NGInlineItem14SetSegmentDataERKNS_12RunSegmenter17RunSegmenterRangeEPN3WTF6VectorIS0_Lj0ENS5_18PartitionAllocatorEEE(%"struct.blink::RunSegmenter::RunSegmenterRange"* dereferenceable(20), %"class.WTF::Vector.1920"*) local_unnamed_addr #2

declare void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZN5blink12RunSegmenterC1EPKDsjNS_15FontOrientationEj(%"class.blink::RunSegmenter"*, i16*, i32, i32, i32) unnamed_addr #2

declare zeroext i1 @_ZN5blink12RunSegmenter7ConsumeEPNS0_17RunSegmenterRangeE(%"class.blink::RunSegmenter"*, %"struct.blink::RunSegmenter::RunSegmenterRange"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20NGInlineItemSegments6AppendIJRNS_12RunSegmenter17RunSegmenterRangeEEEEvDpOT_(%"class.blink::NGInlineItemSegments"*, %"struct.blink::RunSegmenter::RunSegmenterRange"* dereferenceable(20)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %47, !prof !2

8:                                                ; preds = %2
  %9 = add i32 %4, 1
  %10 = lshr i32 %4, 2
  %11 = add i32 %9, %10
  %12 = icmp ugt i32 %11, 4
  %13 = select i1 %12, i32 %11, i32 4
  %14 = icmp ugt i32 %13, %9
  %15 = select i1 %14, i32 %13, i32 %9
  %16 = icmp ult i32 %4, %15
  br i1 %16, label %17, label %47, !prof !3

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %18, align 8
  %20 = icmp eq %"class.blink::NGInlineItemSegment"* %19, null
  %21 = zext i32 %15 to i64
  %22 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGInlineItemSegmentEEEmm(i64 %21) #13
  %23 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %22, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGInlineItemSegmentEEEPKcv, i64 0, i64 0)) #13
  br i1 %20, label %24, label %29

24:                                               ; preds = %17
  %25 = ptrtoint i8* %23 to i64
  %26 = bitcast %"class.blink::NGInlineItemSegments"* %0 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = lshr i64 %22, 3
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %5, align 8
  br label %47

29:                                               ; preds = %17
  %30 = lshr i64 %22, 3
  %31 = ptrtoint i8* %23 to i64
  %32 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %18, align 8
  %33 = icmp ne i8* %23, null
  %34 = icmp ne %"class.blink::NGInlineItemSegment"* %32, null
  %35 = and i1 %33, %34
  %36 = bitcast %"class.blink::NGInlineItemSegment"* %32 to i8*
  br i1 %35, label %37, label %43, !prof !3

37:                                               ; preds = %29
  %38 = load i32, i32* %3, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* nonnull align 4 %36, i64 %40, i1 false) #13
  %41 = bitcast %"class.blink::NGInlineItemSegments"* %0 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %37, %29
  %44 = phi i8* [ %42, %37 ], [ %36, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %44) #13
  %45 = bitcast %"class.blink::NGInlineItemSegments"* %0 to i64*
  store atomic i64 %31, i64* %45 monotonic, align 8
  %46 = trunc i64 %30 to i32
  store i32 %46, i32* %5, align 8
  br label %47

47:                                               ; preds = %2, %8, %24, %43
  %48 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %48, align 8
  %50 = load i32, i32* %3, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::NGInlineItemSegment", %"class.blink::NGInlineItemSegment"* %49, i64 %51
  tail call void @_ZN5blink19NGInlineItemSegmentC1ERKNS_12RunSegmenter17RunSegmenterRangeE(%"class.blink::NGInlineItemSegment"* %52, %"struct.blink::RunSegmenter::RunSegmenterRange"* dereferenceable(20) %1) #13
  %53 = load i32, i32* %3, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 24
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 3
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  br i1 %6, label %44, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %20

13:                                               ; preds = %9, %13
  %14 = phi %"class.blink::LayoutObject"* [ %16, %13 ], [ %8, %9 ]
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 7
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %13, label %20

20:                                               ; preds = %13, %9
  %21 = phi %"class.blink::Node"* [ %11, %9 ], [ %18, %13 ]
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 59, i32 0, i32 0
  %27 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %27, i64 0, i32 31, i32 0, i32 0
  %29 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %29, i64 0, i32 0, i32 11
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %20
  %35 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.20, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #13
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  br label %37

37:                                               ; preds = %34, %20
  %38 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %29, i64 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %8) #13
  %43 = icmp eq %"class.blink::ComputedStyle"* %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %37, %41, %1
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  br label %47

47:                                               ; preds = %44, %41
  %48 = phi %"class.blink::ComputedStyle"* [ %42, %41 ], [ %46, %44 ]
  ret %"class.blink::ComputedStyle"* %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20NGInlineItemSegments6AppendIJjRKNS_12NGInlineItemEEEEvDpOT_(%"class.blink::NGInlineItemSegments"*, i32* dereferenceable(4), %"class.blink::NGInlineItem"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %48, !prof !2

9:                                                ; preds = %3
  %10 = add i32 %5, 1
  %11 = lshr i32 %5, 2
  %12 = add i32 %10, %11
  %13 = icmp ugt i32 %12, 4
  %14 = select i1 %13, i32 %12, i32 4
  %15 = icmp ugt i32 %14, %10
  %16 = select i1 %15, i32 %14, i32 %10
  %17 = icmp ult i32 %5, %16
  br i1 %17, label %18, label %48, !prof !3

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %19, align 8
  %21 = icmp eq %"class.blink::NGInlineItemSegment"* %20, null
  %22 = zext i32 %16 to i64
  %23 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGInlineItemSegmentEEEmm(i64 %22) #13
  %24 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %23, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGInlineItemSegmentEEEPKcv, i64 0, i64 0)) #13
  br i1 %21, label %25, label %30

25:                                               ; preds = %18
  %26 = ptrtoint i8* %24 to i64
  %27 = bitcast %"class.blink::NGInlineItemSegments"* %0 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = lshr i64 %23, 3
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %6, align 8
  br label %48

30:                                               ; preds = %18
  %31 = lshr i64 %23, 3
  %32 = ptrtoint i8* %24 to i64
  %33 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %19, align 8
  %34 = icmp ne i8* %24, null
  %35 = icmp ne %"class.blink::NGInlineItemSegment"* %33, null
  %36 = and i1 %34, %35
  %37 = bitcast %"class.blink::NGInlineItemSegment"* %33 to i8*
  br i1 %36, label %38, label %44, !prof !3

38:                                               ; preds = %30
  %39 = load i32, i32* %4, align 4
  %40 = zext i32 %39 to i64
  %41 = shl nuw nsw i64 %40, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* nonnull align 4 %37, i64 %41, i1 false) #13
  %42 = bitcast %"class.blink::NGInlineItemSegments"* %0 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %38, %30
  %45 = phi i8* [ %43, %38 ], [ %37, %30 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #13
  %46 = bitcast %"class.blink::NGInlineItemSegments"* %0 to i64*
  store atomic i64 %32, i64* %46 monotonic, align 8
  %47 = trunc i64 %31 to i32
  store i32 %47, i32* %6, align 8
  br label %48

48:                                               ; preds = %3, %9, %25, %44
  %49 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %49, align 8
  %51 = load i32, i32* %4, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::NGInlineItemSegment", %"class.blink::NGInlineItemSegment"* %50, i64 %52
  %54 = load i32, i32* %1, align 4
  tail call void @_ZN5blink19NGInlineItemSegmentC1EjRKNS_12NGInlineItemE(%"class.blink::NGInlineItemSegment"* %53, i32 %54, %"class.blink::NGInlineItem"* dereferenceable(32) %2) #13
  %55 = load i32, i32* %4, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %4, align 4
  ret void
}

declare i32 @_ZN5blink20NGInlineItemSegments26AppendMixedFontOrientationERKN3WTF6StringEjjj(%"class.blink::NGInlineItemSegments"*, %"class.WTF::String"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink15NGBidiParagraph12SetParagraphERKN3WTF6StringERKNS_13ComputedStyleE(%"class.blink::NGBidiParagraph"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare i32 @_ZNK5blink15NGBidiParagraph13GetLogicalRunEjPh(%"class.blink::NGBidiParagraph"*, i32, i8*) local_unnamed_addr #2

declare i32 @_ZN5blink12NGInlineItem12SetBidiLevelERN3WTF6VectorIS0_Lj0ENS1_18PartitionAllocatorEEEjjh(%"class.WTF::Vector.1920"* dereferenceable(16), i32, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15NGBidiParagraphD1Ev(%"class.blink::NGBidiParagraph"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink17NGLayoutInputNode9IsSvgTextEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2

declare dereferenceable(88) %"class.blink::Font"* @_ZNK5blink12NGInlineItem18FontWithSvgScalingEv(%"class.blink::NGInlineItem"*) local_unnamed_addr #2

declare i32 @_ZN5blink10ListMarker13WidthOfSymbolERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare %"class.blink::ShapeResult"* @_ZN5blink11ShapeResult15CreateForSpacesEPKNS_4FontENS_13TextDirectionEjjf(%"class.blink::Font"*, i8 zeroext, i32, i32, float) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE10SetSpacingERKNS_15FontDescriptionE(%"class.blink::ShapeResultSpacing"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN5blink11ShapeResult12ApplySpacingERNS_18ShapeResultSpacingIN3WTF6StringEEEi(%"class.blink::ShapeResult"*, %"class.blink::ShapeResultSpacing"* dereferenceable(40), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_135ShouldReportLetterSpacingUseCounterEPKNS_12LayoutObjectEbPKNS_15LayoutBlockFlowE(%"class.blink::LayoutObject"* nocapture readonly, i1 zeroext, %"class.blink::LayoutBlockFlow"*) unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.logging::CheckError", align 8
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %"class.blink::Length"*, align 8
  %22 = alloca %"class.blink::Length"*, align 8
  %23 = alloca %"class.logging::CheckError", align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  br i1 %1, label %26, label %101

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %30, label %37

30:                                               ; preds = %26, %30
  %31 = phi %"class.blink::LayoutObject"* [ %33, %30 ], [ %25, %26 ]
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 7
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 6, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %30, label %37

37:                                               ; preds = %30, %26
  %38 = phi %"class.blink::Node"* [ %28, %26 ], [ %35, %30 ]
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 59, i32 0, i32 0
  %44 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %44, i64 0, i32 31, i32 0, i32 0
  %46 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %46, i64 0, i32 0, i32 11
  %48 = load i8, i8* %47, align 8
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %37
  %52 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.20, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %51, %37
  %55 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %46, i64 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !4
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %25) #13
  %60 = icmp eq %"class.blink::ComputedStyle"* %59, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %58, %54
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 5, i32 0
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %62, align 8
  br label %64

64:                                               ; preds = %61, %58
  %65 = phi %"class.blink::ComputedStyle"* [ %63, %61 ], [ %59, %58 ]
  %66 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %70, label %77

70:                                               ; preds = %64, %70
  %71 = phi %"class.blink::LayoutObject"* [ %73, %70 ], [ %66, %64 ]
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 7
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 6, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %70, label %77

77:                                               ; preds = %70, %64
  %78 = phi %"class.blink::Node"* [ %68, %64 ], [ %75, %70 ]
  %79 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %78, i64 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::Document"*, %"class.blink::Document"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %82, i64 0, i32 59, i32 0, i32 0
  %84 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %84, i64 0, i32 31, i32 0, i32 0
  %86 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %86, i64 0, i32 0, i32 11
  %88 = load i8, i8* %87, align 8
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %77
  %92 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.20, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #13
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #13
  br label %94

94:                                               ; preds = %91, %77
  %95 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %86, i64 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 8, !range !4
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %105, label %98

98:                                               ; preds = %94
  %99 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %66) #13
  %100 = icmp eq %"class.blink::ComputedStyle"* %99, null
  br i1 %100, label %105, label %110

101:                                              ; preds = %3
  %102 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 5, i32 0
  %103 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %105

105:                                              ; preds = %94, %98, %101
  %106 = phi %"class.blink::LayoutObject"* [ %104, %101 ], [ %66, %98 ], [ %66, %94 ]
  %107 = phi %"class.blink::ComputedStyle"* [ %103, %101 ], [ %65, %98 ], [ %65, %94 ]
  %108 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %109 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %108, align 8
  br label %110

110:                                              ; preds = %105, %98
  %111 = phi %"class.blink::LayoutObject"* [ %66, %98 ], [ %106, %105 ]
  %112 = phi %"class.blink::ComputedStyle"* [ %65, %98 ], [ %107, %105 ]
  %113 = phi %"class.blink::ComputedStyle"* [ %99, %98 ], [ %109, %105 ]
  %114 = icmp eq %"class.blink::LayoutObject"* %25, %111
  br i1 %114, label %123, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %117, i64 0, i32 1, i32 0, i32 0
  %119 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %119, i64 0, i32 1, i32 0, i32 8
  %121 = load float, float* %120, align 8
  %122 = fcmp une float %121, 0.000000e+00
  br i1 %122, label %123, label %503

123:                                              ; preds = %110, %115
  %124 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 4
  %125 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %124 to i96*
  %126 = load i96, i96* %125, align 4
  %127 = and i96 %126, 2251799813685248
  %128 = icmp eq i96 %127, 0
  br i1 %128, label %129, label %148

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %131 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %130 to i96*
  %132 = load i96, i96* %131, align 4
  %133 = and i96 %132, 2251799813685248
  %134 = icmp eq i96 %133, 0
  br i1 %134, label %135, label %148

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 9
  %137 = bitcast [20 x i8]* %136 to i160*
  %138 = load i160, i160* %137, align 8
  %139 = lshr i160 %138, 58
  %140 = trunc i160 %139 to i32
  %141 = and i32 %140, 15
  switch i32 %141, label %148 [
    i32 7, label %145
    i32 8, label %142
    i32 0, label %498
    i32 4, label %498
  ]

142:                                              ; preds = %135
  %143 = and i160 %138, 41538374868278621028243970633760768
  %144 = icmp eq i160 %143, 0
  br i1 %144, label %148, label %498

145:                                              ; preds = %135
  %146 = and i160 %138, 41538374868278621028243970633760768
  %147 = icmp eq i160 %146, 0
  br i1 %147, label %498, label %148

148:                                              ; preds = %142, %129, %123, %135, %145
  br i1 %1, label %149, label %184

149:                                              ; preds = %148
  %150 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %151 = load %"class.blink::Node"*, %"class.blink::Node"** %150, align 8
  %152 = icmp eq %"class.blink::Node"* %151, null
  br i1 %152, label %153, label %160

153:                                              ; preds = %149, %153
  %154 = phi %"class.blink::LayoutObject"* [ %156, %153 ], [ %111, %149 ]
  %155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 7
  %156 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %156, i64 0, i32 6, i32 0, i32 0
  %158 = load %"class.blink::Node"*, %"class.blink::Node"** %157, align 8
  %159 = icmp eq %"class.blink::Node"* %158, null
  br i1 %159, label %153, label %160

160:                                              ; preds = %153, %149
  %161 = phi %"class.blink::Node"* [ %151, %149 ], [ %158, %153 ]
  %162 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %161, i64 0, i32 3, i32 0, i32 0
  %163 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %163, i64 0, i32 2, i32 0, i32 0
  %165 = load %"class.blink::Document"*, %"class.blink::Document"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %165, i64 0, i32 59, i32 0, i32 0
  %167 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %167, i64 0, i32 31, i32 0, i32 0
  %169 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %169, i64 0, i32 0, i32 11
  %171 = load i8, i8* %170, align 8
  %172 = and i8 %171, 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %160
  %175 = bitcast %"class.logging::CheckError"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %23, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.20, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #13
  %176 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %23) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #13
  br label %177

177:                                              ; preds = %174, %160
  %178 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %169, i64 0, i32 0, i32 0, i32 0
  %179 = load i8, i8* %178, align 8, !range !4
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %177
  %182 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %111) #13
  %183 = icmp eq %"class.blink::ComputedStyle"* %182, null
  br i1 %183, label %184, label %187

184:                                              ; preds = %148, %177, %181
  %185 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %186 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %185, align 8
  br label %187

187:                                              ; preds = %184, %181
  %188 = phi %"class.blink::ComputedStyle"* [ %182, %181 ], [ %186, %184 ]
  %189 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %188, i64 0, i32 0, i32 1, i32 0, i32 0
  %190 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %190, i64 0, i32 12
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %190, i64 0, i32 12, i32 2
  %193 = load i8, i8* %192, align 1
  %194 = icmp eq i8 %193, 2
  br i1 %194, label %195, label %216, !prof !3

195:                                              ; preds = %187
  %196 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %190, i64 0, i32 12, i32 3
  %197 = load i8, i8* %196, align 2, !range !4
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %195
  %200 = bitcast %"class.blink::Length"* %191 to float*
  %201 = load float, float* %200, align 4
  br label %206

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %191, i64 0, i32 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = sitofp i32 %204 to float
  br label %206

206:                                              ; preds = %202, %199
  %207 = phi float [ %201, %199 ], [ %205, %202 ]
  %208 = fmul float %207, 6.400000e+01
  %209 = fcmp ult float %208, 0xC1E0000000000000
  %210 = fcmp ugt float %208, 0x41DFFFFFE0000000
  %211 = fcmp ogt float %208, 0xC1E0000000000000
  %212 = select i1 %211, float %208, float 0xC1E0000000000000
  %213 = fptosi float %212 to i32
  %214 = select i1 %209, i32 0, i32 2147483647
  %215 = select i1 %210, i32 %214, i32 %213
  br label %218

216:                                              ; preds = %187
  %217 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %191, i32 6400) #13
  br label %218

218:                                              ; preds = %216, %206
  %219 = phi i32 [ %215, %206 ], [ %217, %216 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %503

221:                                              ; preds = %218
  %222 = bitcast %"class.logging::CheckError"* %18 to i8*
  %223 = bitcast %"class.blink::Length"** %14 to i8*
  %224 = bitcast %"class.blink::Length"** %15 to i8*
  %225 = bitcast %"class.blink::Length"** %16 to i8*
  %226 = bitcast %"class.blink::Length"** %17 to i8*
  %227 = bitcast %"class.blink::Length"** %10 to i8*
  %228 = bitcast %"class.blink::Length"** %11 to i8*
  %229 = bitcast %"class.blink::Length"** %12 to i8*
  %230 = bitcast %"class.blink::Length"** %13 to i8*
  %231 = bitcast %"class.blink::Length"** %6 to i8*
  %232 = bitcast %"class.blink::Length"** %7 to i8*
  %233 = bitcast %"class.blink::Length"** %8 to i8*
  %234 = bitcast %"class.blink::Length"** %9 to i8*
  %235 = bitcast %"class.blink::Length"** %19 to i8*
  %236 = bitcast %"class.blink::Length"** %20 to i8*
  %237 = bitcast %"class.blink::Length"** %21 to i8*
  %238 = bitcast %"class.blink::Length"** %22 to i8*
  br label %239

239:                                              ; preds = %493, %221
  %240 = phi i32 [ %490, %493 ], [ 0, %221 ]
  %241 = phi i32 [ %491, %493 ], [ 0, %221 ]
  %242 = phi %"class.blink::LayoutObject"* [ %495, %493 ], [ %25, %221 ]
  br i1 %1, label %243, label %277

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %242, i64 0, i32 6, i32 0, i32 0
  %245 = load %"class.blink::Node"*, %"class.blink::Node"** %244, align 8
  %246 = icmp eq %"class.blink::Node"* %245, null
  br i1 %246, label %247, label %254

247:                                              ; preds = %243, %247
  %248 = phi %"class.blink::LayoutObject"* [ %250, %247 ], [ %242, %243 ]
  %249 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %248, i64 0, i32 7
  %250 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %250, i64 0, i32 6, i32 0, i32 0
  %252 = load %"class.blink::Node"*, %"class.blink::Node"** %251, align 8
  %253 = icmp eq %"class.blink::Node"* %252, null
  br i1 %253, label %247, label %254

254:                                              ; preds = %247, %243
  %255 = phi %"class.blink::Node"* [ %245, %243 ], [ %252, %247 ]
  %256 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %255, i64 0, i32 3, i32 0, i32 0
  %257 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %257, i64 0, i32 2, i32 0, i32 0
  %259 = load %"class.blink::Document"*, %"class.blink::Document"** %258, align 8
  %260 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %259, i64 0, i32 59, i32 0, i32 0
  %261 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %260, align 8
  %262 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %261, i64 0, i32 31, i32 0, i32 0
  %263 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %263, i64 0, i32 0, i32 11
  %265 = load i8, i8* %264, align 8
  %266 = and i8 %265, 1
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %254
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %18, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.20, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #13
  %269 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %18) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #13
  br label %270

270:                                              ; preds = %268, %254
  %271 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %263, i64 0, i32 0, i32 0, i32 0
  %272 = load i8, i8* %271, align 8, !range !4
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %277, label %274

274:                                              ; preds = %270
  %275 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %242) #13
  %276 = icmp eq %"class.blink::ComputedStyle"* %275, null
  br i1 %276, label %277, label %280

277:                                              ; preds = %239, %270, %274
  %278 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %242, i64 0, i32 5, i32 0
  %279 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %278, align 8
  br label %280

280:                                              ; preds = %277, %274
  %281 = phi %"class.blink::ComputedStyle"* [ %275, %274 ], [ %279, %277 ]
  %282 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %281, i64 0, i32 0, i32 9
  %283 = bitcast [20 x i8]* %282 to i160*
  %284 = load i160, i160* %283, align 8
  %285 = and i160 %284, 133804471191183738849214309635890169035882496
  %286 = icmp eq i160 %285, 0
  br i1 %286, label %489, label %287

287:                                              ; preds = %280
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226)
  %288 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %281, i64 0, i32 0, i32 7, i32 0, i32 0
  %289 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %288, align 8, !noalias !31
  %290 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %289, i64 0, i32 12
  %291 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %289, i64 0, i32 11
  %292 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %289, i64 0, i32 9
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %289, i64 0, i32 10
  store %"class.blink::Length"* %290, %"class.blink::Length"** %14, align 8, !alias.scope !31
  store %"class.blink::Length"* %291, %"class.blink::Length"** %15, align 8, !alias.scope !31
  store %"class.blink::Length"* %292, %"class.blink::Length"** %16, align 8, !alias.scope !31
  store %"class.blink::Length"* %293, %"class.blink::Length"** %17, align 8, !alias.scope !31
  %294 = and i160 %284, 15211807202738752817960438464512
  %295 = icmp eq i160 %294, 0
  %296 = and i160 %284, 41538374868278621028243970633760768
  %297 = icmp eq i160 %296, 0
  %298 = select i1 %297, %"class.blink::Length"** %17, %"class.blink::Length"** %15
  %299 = select i1 %297, %"class.blink::Length"** %14, %"class.blink::Length"** %16
  %300 = select i1 %295, %"class.blink::Length"** %298, %"class.blink::Length"** %299
  %301 = load %"class.blink::Length"*, %"class.blink::Length"** %300, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226)
  %302 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %301, i64 0, i32 2
  %303 = load i8, i8* %302, align 1
  %304 = icmp eq i8 %303, 2
  br i1 %304, label %305, label %326, !prof !3

305:                                              ; preds = %287
  %306 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %301, i64 0, i32 3
  %307 = load i8, i8* %306, align 2, !range !4
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %312, label %309

309:                                              ; preds = %305
  %310 = bitcast %"class.blink::Length"* %301 to float*
  %311 = load float, float* %310, align 4
  br label %316

312:                                              ; preds = %305
  %313 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %301, i64 0, i32 0, i32 0
  %314 = load i32, i32* %313, align 4
  %315 = sitofp i32 %314 to float
  br label %316

316:                                              ; preds = %312, %309
  %317 = phi float [ %311, %309 ], [ %315, %312 ]
  %318 = fmul float %317, 6.400000e+01
  %319 = fcmp ult float %318, 0xC1E0000000000000
  %320 = fcmp ugt float %318, 0x41DFFFFFE0000000
  %321 = fcmp ogt float %318, 0xC1E0000000000000
  %322 = select i1 %321, float %318, float 0xC1E0000000000000
  %323 = fptosi float %322 to i32
  %324 = select i1 %319, i32 0, i32 2147483647
  %325 = select i1 %320, i32 %324, i32 %323
  br label %332

326:                                              ; preds = %287
  %327 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %301, i32 6400) #13
  %328 = load i160, i160* %283, align 8, !noalias !34
  %329 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %288, align 8, !noalias !34
  %330 = and i160 %328, 15211807202738752817960438464512
  %331 = and i160 %328, 41538374868278621028243970633760768
  br label %332

332:                                              ; preds = %326, %316
  %333 = phi i160 [ %296, %316 ], [ %331, %326 ]
  %334 = phi i160 [ %294, %316 ], [ %330, %326 ]
  %335 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %289, %316 ], [ %329, %326 ]
  %336 = phi i32 [ %325, %316 ], [ %327, %326 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230)
  %337 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %335, i64 0, i32 16
  %338 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %335, i64 0, i32 15
  %339 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %335, i64 0, i32 13
  %340 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %335, i64 0, i32 14
  store %"class.blink::Length"* %337, %"class.blink::Length"** %10, align 8, !alias.scope !34
  store %"class.blink::Length"* %338, %"class.blink::Length"** %11, align 8, !alias.scope !34
  store %"class.blink::Length"* %339, %"class.blink::Length"** %12, align 8, !alias.scope !34
  store %"class.blink::Length"* %340, %"class.blink::Length"** %13, align 8, !alias.scope !34
  %341 = icmp eq i160 %334, 0
  %342 = icmp eq i160 %333, 0
  %343 = select i1 %342, %"class.blink::Length"** %13, %"class.blink::Length"** %11
  %344 = select i1 %342, %"class.blink::Length"** %10, %"class.blink::Length"** %12
  %345 = select i1 %341, %"class.blink::Length"** %343, %"class.blink::Length"** %344
  %346 = load %"class.blink::Length"*, %"class.blink::Length"** %345, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230)
  %347 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %346, i64 0, i32 2
  %348 = load i8, i8* %347, align 1
  %349 = icmp eq i8 %348, 2
  br i1 %349, label %350, label %371, !prof !3

350:                                              ; preds = %332
  %351 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %346, i64 0, i32 3
  %352 = load i8, i8* %351, align 2, !range !4
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %357, label %354

354:                                              ; preds = %350
  %355 = bitcast %"class.blink::Length"* %346 to float*
  %356 = load float, float* %355, align 4
  br label %361

357:                                              ; preds = %350
  %358 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %346, i64 0, i32 0, i32 0
  %359 = load i32, i32* %358, align 4
  %360 = sitofp i32 %359 to float
  br label %361

361:                                              ; preds = %357, %354
  %362 = phi float [ %356, %354 ], [ %360, %357 ]
  %363 = fmul float %362, 6.400000e+01
  %364 = fcmp ult float %363, 0xC1E0000000000000
  %365 = fcmp ugt float %363, 0x41DFFFFFE0000000
  %366 = fcmp ogt float %363, 0xC1E0000000000000
  %367 = select i1 %366, float %363, float 0xC1E0000000000000
  %368 = fptosi float %367 to i32
  %369 = select i1 %364, i32 0, i32 2147483647
  %370 = select i1 %365, i32 %369, i32 %368
  br label %377

371:                                              ; preds = %332
  %372 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %346, i32 6400) #13
  %373 = load i160, i160* %283, align 8, !noalias !37
  %374 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %288, align 8, !noalias !37
  %375 = and i160 %373, 15211807202738752817960438464512
  %376 = and i160 %373, 41538374868278621028243970633760768
  br label %377

377:                                              ; preds = %371, %361
  %378 = phi i160 [ %333, %361 ], [ %376, %371 ]
  %379 = phi i160 [ %334, %361 ], [ %375, %371 ]
  %380 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %335, %361 ], [ %374, %371 ]
  %381 = phi i32 [ %370, %361 ], [ %372, %371 ]
  %382 = icmp slt i32 %381, 0
  %383 = select i1 %382, i32 -2147483648, i32 2147483647
  %384 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %336, i32 %381) #13
  %385 = extractvalue { i32, i1 } %384, 1
  %386 = extractvalue { i32, i1 } %384, 0
  %387 = select i1 %385, i32 %383, i32 %386, !prof !2
  %388 = icmp slt i32 %387, 0
  %389 = select i1 %388, i32 -2147483648, i32 2147483647
  %390 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %241, i32 %387) #13
  %391 = extractvalue { i32, i1 } %390, 1
  %392 = extractvalue { i32, i1 } %390, 0
  %393 = select i1 %391, i32 %389, i32 %392, !prof !2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234)
  %394 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %380, i64 0, i32 12
  %395 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %380, i64 0, i32 11
  %396 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %380, i64 0, i32 9
  %397 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %380, i64 0, i32 10
  store %"class.blink::Length"* %394, %"class.blink::Length"** %6, align 8, !alias.scope !37
  store %"class.blink::Length"* %395, %"class.blink::Length"** %7, align 8, !alias.scope !37
  store %"class.blink::Length"* %396, %"class.blink::Length"** %8, align 8, !alias.scope !37
  store %"class.blink::Length"* %397, %"class.blink::Length"** %9, align 8, !alias.scope !37
  %398 = icmp eq i160 %379, 0
  %399 = icmp eq i160 %378, 0
  %400 = select i1 %399, %"class.blink::Length"** %7, %"class.blink::Length"** %9
  %401 = select i1 %399, %"class.blink::Length"** %8, %"class.blink::Length"** %6
  %402 = select i1 %398, %"class.blink::Length"** %400, %"class.blink::Length"** %401
  %403 = load %"class.blink::Length"*, %"class.blink::Length"** %402, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234)
  %404 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %403, i64 0, i32 2
  %405 = load i8, i8* %404, align 1
  %406 = icmp eq i8 %405, 2
  br i1 %406, label %407, label %428, !prof !3

407:                                              ; preds = %377
  %408 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %403, i64 0, i32 3
  %409 = load i8, i8* %408, align 2, !range !4
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %414, label %411

411:                                              ; preds = %407
  %412 = bitcast %"class.blink::Length"* %403 to float*
  %413 = load float, float* %412, align 4
  br label %418

414:                                              ; preds = %407
  %415 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %403, i64 0, i32 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = sitofp i32 %416 to float
  br label %418

418:                                              ; preds = %414, %411
  %419 = phi float [ %413, %411 ], [ %417, %414 ]
  %420 = fmul float %419, 6.400000e+01
  %421 = fcmp ult float %420, 0xC1E0000000000000
  %422 = fcmp ugt float %420, 0x41DFFFFFE0000000
  %423 = fcmp ogt float %420, 0xC1E0000000000000
  %424 = select i1 %423, float %420, float 0xC1E0000000000000
  %425 = fptosi float %424 to i32
  %426 = select i1 %421, i32 0, i32 2147483647
  %427 = select i1 %422, i32 %426, i32 %425
  br label %434

428:                                              ; preds = %377
  %429 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %403, i32 6400) #13
  %430 = load i160, i160* %283, align 8, !noalias !40
  %431 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %288, align 8, !noalias !40
  %432 = and i160 %430, 15211807202738752817960438464512
  %433 = and i160 %430, 41538374868278621028243970633760768
  br label %434

434:                                              ; preds = %428, %418
  %435 = phi i160 [ %378, %418 ], [ %433, %428 ]
  %436 = phi i160 [ %379, %418 ], [ %432, %428 ]
  %437 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %380, %418 ], [ %431, %428 ]
  %438 = phi i32 [ %427, %418 ], [ %429, %428 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238)
  %439 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %437, i64 0, i32 16
  %440 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %437, i64 0, i32 15
  %441 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %437, i64 0, i32 13
  %442 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %437, i64 0, i32 14
  store %"class.blink::Length"* %439, %"class.blink::Length"** %19, align 8, !alias.scope !40
  store %"class.blink::Length"* %440, %"class.blink::Length"** %20, align 8, !alias.scope !40
  store %"class.blink::Length"* %441, %"class.blink::Length"** %21, align 8, !alias.scope !40
  store %"class.blink::Length"* %442, %"class.blink::Length"** %22, align 8, !alias.scope !40
  %443 = icmp eq i160 %436, 0
  %444 = icmp eq i160 %435, 0
  %445 = select i1 %444, %"class.blink::Length"** %20, %"class.blink::Length"** %22
  %446 = select i1 %444, %"class.blink::Length"** %21, %"class.blink::Length"** %19
  %447 = select i1 %443, %"class.blink::Length"** %445, %"class.blink::Length"** %446
  %448 = load %"class.blink::Length"*, %"class.blink::Length"** %447, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %237)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238)
  %449 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %448, i64 0, i32 2
  %450 = load i8, i8* %449, align 1
  %451 = icmp eq i8 %450, 2
  br i1 %451, label %452, label %473, !prof !3

452:                                              ; preds = %434
  %453 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %448, i64 0, i32 3
  %454 = load i8, i8* %453, align 2, !range !4
  %455 = icmp eq i8 %454, 0
  br i1 %455, label %459, label %456

456:                                              ; preds = %452
  %457 = bitcast %"class.blink::Length"* %448 to float*
  %458 = load float, float* %457, align 4
  br label %463

459:                                              ; preds = %452
  %460 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %448, i64 0, i32 0, i32 0
  %461 = load i32, i32* %460, align 4
  %462 = sitofp i32 %461 to float
  br label %463

463:                                              ; preds = %459, %456
  %464 = phi float [ %458, %456 ], [ %462, %459 ]
  %465 = fmul float %464, 6.400000e+01
  %466 = fcmp ult float %465, 0xC1E0000000000000
  %467 = fcmp ugt float %465, 0x41DFFFFFE0000000
  %468 = fcmp ogt float %465, 0xC1E0000000000000
  %469 = select i1 %468, float %465, float 0xC1E0000000000000
  %470 = fptosi float %469 to i32
  %471 = select i1 %466, i32 0, i32 2147483647
  %472 = select i1 %467, i32 %471, i32 %470
  br label %475

473:                                              ; preds = %434
  %474 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %448, i32 6400) #13
  br label %475

475:                                              ; preds = %473, %463
  %476 = phi i32 [ %472, %463 ], [ %474, %473 ]
  %477 = icmp slt i32 %476, 0
  %478 = select i1 %477, i32 -2147483648, i32 2147483647
  %479 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %438, i32 %476) #13
  %480 = extractvalue { i32, i1 } %479, 1
  %481 = extractvalue { i32, i1 } %479, 0
  %482 = select i1 %480, i32 %478, i32 %481, !prof !2
  %483 = icmp slt i32 %482, 0
  %484 = select i1 %483, i32 -2147483648, i32 2147483647
  %485 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %240, i32 %482) #13
  %486 = extractvalue { i32, i1 } %485, 1
  %487 = extractvalue { i32, i1 } %485, 0
  %488 = select i1 %486, i32 %484, i32 %487, !prof !2
  br label %489

489:                                              ; preds = %475, %280
  %490 = phi i32 [ %488, %475 ], [ %240, %280 ]
  %491 = phi i32 [ %393, %475 ], [ %241, %280 ]
  %492 = icmp eq %"class.blink::LayoutObject"* %242, %111
  br i1 %492, label %496, label %493

493:                                              ; preds = %489
  %494 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %242, i64 0, i32 7
  %495 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %494, align 8
  br label %239

496:                                              ; preds = %489
  %497 = icmp eq i32 %491, %490
  br i1 %497, label %498, label %503

498:                                              ; preds = %496, %142, %135, %135, %145
  %499 = call dereferenceable(16) %"class.WTF::Vector.254"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %112) #13
  %500 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %499, i64 0, i32 0, i32 0, i32 2
  %501 = load i32, i32* %500, align 4
  %502 = icmp ne i32 %501, 0
  ret i1 %502

503:                                              ; preds = %496, %218, %115
  %504 = phi i1 [ false, %115 ], [ true, %496 ], [ true, %218 ]
  ret i1 %504
}

declare void @_ZNK5blink11ShapeResult10CopyRangesEPKNS0_10ShapeRangeEj(%"class.blink::ShapeResult"*, %"struct.blink::ShapeResult::ShapeRange"*, i32) local_unnamed_addr #2

declare void @_ZN5blink10LayoutText14SetInlineItemsEPNS_12NGInlineItemES2_(%"class.blink::LayoutText"*, %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZNK5blink12NGInlineNode6LayoutERKNS_17NGConstraintSpaceEPKNS_12NGBreakTokenEPNS_26NGInlineChildLayoutContextE(%"class.blink::NGInlineNode"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBreakToken"*, %"class.blink::NGInlineChildLayoutContext"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::NGInlineLayoutAlgorithm", align 8
  %6 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %7 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %6, align 8
  %8 = bitcast %"class.blink::LayoutBlockFlow"* %7 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %9 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %9, i64 213
  %11 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %10, align 8
  %12 = tail call %"struct.blink::NGInlineNodeData"* %11(%"class.blink::LayoutBlockFlow"* %7) #13
  %13 = icmp eq %"struct.blink::NGInlineNodeData"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = and i96 %21, 2048
  %23 = icmp eq i96 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %18
  %25 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %8, align 8
  %26 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %25, i64 212
  %27 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %26, align 8
  %28 = tail call %"struct.blink::NGInlineNodeData"* %27(%"class.blink::LayoutBlockFlow"* %7) #13
  %29 = bitcast %"class.blink::LayoutBlockFlow"* %7 to void (%"class.blink::LayoutBlockFlow"*)***
  %30 = load void (%"class.blink::LayoutBlockFlow"*)**, void (%"class.blink::LayoutBlockFlow"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %30, i64 214
  %32 = load void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %31, align 8
  tail call void %32(%"class.blink::LayoutBlockFlow"* %7) #13
  br label %33

33:                                               ; preds = %24, %14, %4
  %34 = phi %"struct.blink::NGInlineNodeData"* [ %28, %24 ], [ null, %14 ], [ null, %4 ]
  tail call void @_ZNK5blink12NGInlineNode13PrepareLayoutENSt3__110unique_ptrINS_16NGInlineNodeDataENS1_14default_deleteIS3_EEEE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %34) #13
  br label %35

35:                                               ; preds = %18, %33
  %36 = bitcast %"class.blink::NGBreakToken"* %2 to %"class.blink::NGInlineBreakToken"*
  %37 = bitcast %"class.blink::NGInlineLayoutAlgorithm"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 424, i8* nonnull %37) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 424, i1 false)
  %38 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 0
  %39 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 1
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  call void @_ZN5blink23NGInlineLayoutAlgorithmC1ENS_12NGInlineNodeERKNS_17NGConstraintSpaceEPKNS_18NGInlineBreakTokenEPNS_26NGInlineChildLayoutContextE(%"class.blink::NGInlineLayoutAlgorithm"* nonnull %5, %"class.blink::LayoutBox"* %39, i64 %42, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::NGInlineBreakToken"* %36, %"class.blink::NGInlineChildLayoutContext"* %3) #13
  %43 = call %"class.blink::NGLayoutResult"* @_ZN5blink23NGInlineLayoutAlgorithm6LayoutEv(%"class.blink::NGInlineLayoutAlgorithm"* nonnull %5) #13
  call void @_ZN5blink23NGInlineLayoutAlgorithmD1Ev(%"class.blink::NGInlineLayoutAlgorithm"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 424, i8* nonnull %37) #13
  ret %"class.blink::NGLayoutResult"* %43
}

declare void @_ZN5blink23NGInlineLayoutAlgorithmC1ENS_12NGInlineNodeERKNS_17NGConstraintSpaceEPKNS_18NGInlineBreakTokenEPNS_26NGInlineChildLayoutContextE(%"class.blink::NGInlineLayoutAlgorithm"*, %"class.blink::LayoutBox"*, i64, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineChildLayoutContext"*) unnamed_addr #2

declare %"class.blink::NGLayoutResult"* @_ZN5blink23NGInlineLayoutAlgorithm6LayoutEv(%"class.blink::NGInlineLayoutAlgorithm"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink23NGInlineLayoutAlgorithmD1Ev(%"class.blink::NGInlineLayoutAlgorithm"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12NGInlineNode31TextContentForStickyImagesQuirkERKNS_17NGInlineItemsDataE(%"struct.blink::NGInlineItemsData"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca i8*, align 8
  %4 = alloca %"class.base::CheckedContiguousIterator.2366", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator.2366", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca i16*, align 8
  %8 = alloca %"class.base::CheckedContiguousIterator.2366", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator.2366", align 8
  %10 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %10, align 8
  %12 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %174, label %17

17:                                               ; preds = %1, %171
  %18 = phi %"class.blink::NGInlineItem"* [ %172, %171 ], [ %11, %1 ]
  %19 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %18, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %171

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %18, i64 0, i32 3
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %171, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::LayoutObject"* %24 to i1 (%"class.blink::LayoutObject"*, i32)***
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, i64 92
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* nonnull %24, i32 12) #13
  br i1 %31, label %32, label %171

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp eq %"class.WTF::StringImpl"* %34, null
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  br i1 %38, label %105, label %41

41:                                               ; preds = %32
  %42 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %43 = select i1 %39, i8* null, i8* %42
  br i1 %39, label %47, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  br label %47

47:                                               ; preds = %41, %44
  %48 = phi i32 [ %46, %44 ], [ 0, %41 ]
  %49 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %10, align 8
  %50 = load i32, i32* %12, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %49, i64 %51
  %53 = icmp ugt %"class.blink::NGInlineItem"* %18, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0)) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %47, %54
  %58 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %59 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %48, i8** nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #13
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i8*
  br label %68

68:                                               ; preds = %65, %61, %57
  %69 = phi i8* [ %67, %65 ], [ null, %61 ], [ null, %57 ]
  %70 = zext i32 %48 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %43, i64 %70, i1 false) #13
  %71 = bitcast %"class.base::CheckedContiguousIterator.2366"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #13
  %72 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false) #13
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2366"* nonnull %4, %"class.blink::NGInlineItem"* %18, %"class.blink::NGInlineItem"* %18, %"class.blink::NGInlineItem"* %52) #13
  %73 = bitcast %"class.base::CheckedContiguousIterator.2366"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13
  %74 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false) #13
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2366"* nonnull %5, %"class.blink::NGInlineItem"* %18, %"class.blink::NGInlineItem"* %52, %"class.blink::NGInlineItem"* %52) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2366"* nonnull %4, %"class.base::CheckedContiguousIterator.2366"* nonnull dereferenceable(24) %5) #13
  %75 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %72, align 8
  %76 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %74, align 8
  %77 = icmp eq %"class.blink::NGInlineItem"* %75, %76
  br i1 %77, label %103, label %78

78:                                               ; preds = %68, %98
  %79 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEdeEv(%"class.base::CheckedContiguousIterator.2366"* nonnull %4) #13
  %80 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %79, i64 0, i32 4
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 2
  br i1 %82, label %83, label %98

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %79, i64 0, i32 3
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %84, align 8
  %86 = icmp eq %"class.blink::LayoutObject"* %85, null
  br i1 %86, label %98, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.blink::LayoutObject"* %85 to i1 (%"class.blink::LayoutObject"*, i32)***
  %89 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %88, align 8
  %90 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %89, i64 92
  %91 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %90, align 8
  %92 = call zeroext i1 %91(%"class.blink::LayoutObject"* nonnull %85, i32 12) #13
  br i1 %92, label %93, label %98

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %79, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %69, i64 %96
  store i8 -96, i8* %97, align 1
  br label %98

98:                                               ; preds = %93, %87, %83, %78
  %99 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2366"* @_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEppEv(%"class.base::CheckedContiguousIterator.2366"* nonnull %4) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2366"* nonnull %4, %"class.base::CheckedContiguousIterator.2366"* nonnull dereferenceable(24) %5) #13
  %100 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %72, align 8
  %101 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %74, align 8
  %102 = icmp eq %"class.blink::NGInlineItem"* %100, %101
  br i1 %102, label %103, label %78

103:                                              ; preds = %98, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #13
  %104 = ptrtoint %"class.WTF::StringImpl"* %59 to i64
  br label %196

105:                                              ; preds = %32
  br i1 %39, label %109, label %106

106:                                              ; preds = %105
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  br label %109

109:                                              ; preds = %105, %106
  %110 = phi i32 [ %108, %106 ], [ 0, %105 ]
  %111 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %10, align 8
  %112 = load i32, i32* %12, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %111, i64 %113
  %115 = icmp ugt %"class.blink::NGInlineItem"* %18, %114
  br i1 %115, label %116, label %119

116:                                              ; preds = %109
  %117 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0)) #13
  %118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #13
  br label %119

119:                                              ; preds = %109, %116
  %120 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %121 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %110, i16** nonnull dereferenceable(8) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #13
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %130, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 1
  %129 = bitcast %"class.WTF::StringImpl"* %128 to i16*
  br label %130

130:                                              ; preds = %127, %123, %119
  %131 = phi i16* [ %129, %127 ], [ null, %123 ], [ null, %119 ]
  %132 = bitcast i16* %131 to i8*
  %133 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %134 = select i1 %39, i8* null, i8* %133
  %135 = zext i32 %110 to i64
  %136 = shl nuw nsw i64 %135, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %132, i8* align 2 %134, i64 %136, i1 false) #13
  %137 = bitcast %"class.base::CheckedContiguousIterator.2366"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #13
  %138 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 24, i1 false) #13
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2366"* nonnull %8, %"class.blink::NGInlineItem"* %18, %"class.blink::NGInlineItem"* %18, %"class.blink::NGInlineItem"* %114) #13
  %139 = bitcast %"class.base::CheckedContiguousIterator.2366"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #13
  %140 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %9, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 24, i1 false) #13
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2366"* nonnull %9, %"class.blink::NGInlineItem"* %18, %"class.blink::NGInlineItem"* %114, %"class.blink::NGInlineItem"* %114) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2366"* nonnull %8, %"class.base::CheckedContiguousIterator.2366"* nonnull dereferenceable(24) %9) #13
  %141 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %138, align 8
  %142 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %140, align 8
  %143 = icmp eq %"class.blink::NGInlineItem"* %141, %142
  br i1 %143, label %169, label %144

144:                                              ; preds = %130, %164
  %145 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEdeEv(%"class.base::CheckedContiguousIterator.2366"* nonnull %8) #13
  %146 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %145, i64 0, i32 4
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %147, 2
  br i1 %148, label %149, label %164

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %145, i64 0, i32 3
  %151 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %150, align 8
  %152 = icmp eq %"class.blink::LayoutObject"* %151, null
  br i1 %152, label %164, label %153

153:                                              ; preds = %149
  %154 = bitcast %"class.blink::LayoutObject"* %151 to i1 (%"class.blink::LayoutObject"*, i32)***
  %155 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %154, align 8
  %156 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %155, i64 92
  %157 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %156, align 8
  %158 = call zeroext i1 %157(%"class.blink::LayoutObject"* nonnull %151, i32 12) #13
  br i1 %158, label %159, label %164

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %145, i64 0, i32 0
  %161 = load i32, i32* %160, align 8
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds i16, i16* %131, i64 %162
  store i16 160, i16* %163, align 2
  br label %164

164:                                              ; preds = %159, %153, %149, %144
  %165 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2366"* @_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEppEv(%"class.base::CheckedContiguousIterator.2366"* nonnull %8) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2366"* nonnull %8, %"class.base::CheckedContiguousIterator.2366"* nonnull dereferenceable(24) %9) #13
  %166 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %138, align 8
  %167 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %140, align 8
  %168 = icmp eq %"class.blink::NGInlineItem"* %166, %167
  br i1 %168, label %169, label %144

169:                                              ; preds = %164, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #13
  %170 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  br label %196

171:                                              ; preds = %22, %26, %17
  %172 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %18, i64 1
  %173 = icmp eq %"class.blink::NGInlineItem"* %172, %15
  br i1 %173, label %174, label %17

174:                                              ; preds = %171, %1
  %175 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = ptrtoint %"class.WTF::StringImpl"* %176 to i64
  %178 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %178, label %196, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %196

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = zext i32 %186 to i33
  %188 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %187, i33 1) #13
  %189 = extractvalue { i33, i1 } %188, 1
  %190 = extractvalue { i33, i1 } %188, 0
  %191 = icmp slt i33 %190, 0
  %192 = or i1 %189, %191
  br i1 %192, label %193, label %194, !prof !2

193:                                              ; preds = %184
  tail call void @llvm.trap() #13
  unreachable

194:                                              ; preds = %184
  %195 = trunc i33 %190 to i32
  store i32 %195, i32* %185, align 4
  br label %196

196:                                              ; preds = %169, %103, %194, %179, %174
  %197 = phi i64 [ %177, %174 ], [ %177, %179 ], [ %177, %194 ], [ %170, %169 ], [ %104, %103 ]
  %198 = inttoptr i64 %197 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %198
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZNK5blink12NGInlineNode18ComputeMinMaxSizesENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputE(%"class.blink::NGInlineNode"*, i8 zeroext, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::MinMaxSizesFloatInput"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.2104", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.absl::optional.1636"*
  %8 = alloca i8, align 1
  %9 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %10 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %9, align 8
  %11 = bitcast %"class.blink::LayoutBlockFlow"* %10 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %12 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %12, i64 213
  %14 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %13, align 8
  %15 = tail call %"struct.blink::NGInlineNodeData"* %14(%"class.blink::LayoutBlockFlow"* %10) #13
  %16 = icmp eq %"struct.blink::NGInlineNodeData"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = and i96 %24, 2048
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %21
  %28 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %11, align 8
  %29 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %28, i64 212
  %30 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %29, align 8
  %31 = tail call %"struct.blink::NGInlineNodeData"* %30(%"class.blink::LayoutBlockFlow"* %10) #13
  %32 = bitcast %"class.blink::LayoutBlockFlow"* %10 to void (%"class.blink::LayoutBlockFlow"*)***
  %33 = load void (%"class.blink::LayoutBlockFlow"*)**, void (%"class.blink::LayoutBlockFlow"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %33, i64 214
  %35 = load void (%"class.blink::LayoutBlockFlow"*)*, void (%"class.blink::LayoutBlockFlow"*)** %34, align 8
  tail call void %35(%"class.blink::LayoutBlockFlow"* %10) #13
  br label %36

36:                                               ; preds = %27, %17, %4
  %37 = phi %"struct.blink::NGInlineNodeData"* [ %31, %27 ], [ null, %17 ], [ null, %4 ]
  tail call void @_ZNK5blink12NGInlineNode13PrepareLayoutENSt3__110unique_ptrINS_16NGInlineNodeDataENS1_14default_deleteIS3_EEEE(%"class.blink::NGInlineNode"* %0, %"struct.blink::NGInlineNodeData"* %37) #13
  br label %38

38:                                               ; preds = %21, %36
  %39 = bitcast %"class.WTF::Vector.2104"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.WTF::Vector.2104", %"class.WTF::Vector.2104"* %5, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 256, i1 false)
  %41 = getelementptr inbounds %"class.WTF::Vector.2104", %"class.WTF::Vector.2104"* %5, i64 0, i32 0, i32 1, i64 0
  %42 = bitcast %"class.WTF::Vector.2104"* %5 to i8**
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::Vector.2104", %"class.WTF::Vector.2104"* %5, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %43, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector.2104", %"class.WTF::Vector.2104"* %5, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %44, align 4
  %45 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  store i64 -6148914691236517376, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #13
  store i8 0, i8* %8, align 1
  %46 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 1
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = call fastcc i32 @_ZN5blinkL18ComputeContentSizeENS_12NGInlineNodeENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputENS_17NGLineBreakerModeEPN3WTF6VectorINS_10LayoutUnitELj64ENS9_18PartitionAllocatorEEEPN4absl8optionalISB_EEPb(%"class.blink::LayoutBox"* %47, i64 %50, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"struct.blink::MinMaxSizesFloatInput"* dereferenceable(8) %3, i32 1, %"class.WTF::Vector.2104"* nonnull %5, %"class.absl::optional.1636"* nonnull %7, i8* nonnull %8)
  %52 = load i8, i8* %45, align 8, !range !4
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  br label %61

57:                                               ; preds = %38
  %58 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %46, align 8
  %59 = load i64, i64* %49, align 8
  %60 = call fastcc i32 @_ZN5blinkL18ComputeContentSizeENS_12NGInlineNodeENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputENS_17NGLineBreakerModeEPN3WTF6VectorINS_10LayoutUnitELj64ENS9_18PartitionAllocatorEEEPN4absl8optionalISB_EEPb(%"class.blink::LayoutBox"* %58, i64 %59, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"struct.blink::MinMaxSizesFloatInput"* dereferenceable(8) %3, i32 2, %"class.WTF::Vector.2104"* nonnull %5, %"class.absl::optional.1636"* null, i8* null)
  br label %61

61:                                               ; preds = %57, %54
  %62 = phi i32 [ %56, %54 ], [ %60, %57 ]
  %63 = icmp slt i32 %62, %51
  %64 = select i1 %63, i32 %62, i32 %51
  %65 = load i8, i8* %8, align 1, !range !4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  %66 = load i32, i32* %44, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68, !prof !2

68:                                               ; preds = %61
  store i32 0, i32* %44, align 4
  br label %69

69:                                               ; preds = %68, %61
  %70 = getelementptr inbounds %"class.WTF::Vector.2104", %"class.WTF::Vector.2104"* %5, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %70, align 8
  %72 = bitcast i8* %41 to %"class.blink::LayoutUnit"*
  %73 = icmp eq %"class.blink::LayoutUnit"* %71, %72
  br i1 %73, label %76, label %74, !prof !3

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::Vector.2104", %"class.WTF::Vector.2104"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2105"* nonnull %75, %"class.blink::LayoutUnit"* %71) #13
  br label %76

76:                                               ; preds = %69, %74
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %39) #13
  %77 = zext i32 %62 to i64
  %78 = shl nuw i64 %77, 32
  %79 = zext i32 %64 to i64
  %80 = or i64 %78, %79
  %81 = insertvalue { i64, i8 } undef, i64 %80, 0
  %82 = insertvalue { i64, i8 } %81, i8 %65, 1
  ret { i64, i8 } %82
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blinkL18ComputeContentSizeENS_12NGInlineNodeENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputENS_17NGLineBreakerModeEPN3WTF6VectorINS_10LayoutUnitELj64ENS9_18PartitionAllocatorEEEPN4absl8optionalISB_EEPb(%"class.blink::LayoutBox"*, i64, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::MinMaxSizesFloatInput"* nocapture readonly dereferenceable(8), i32, %"class.WTF::Vector.2104"*, %"class.absl::optional.1636"* nocapture, i8*) unnamed_addr #0 {
  %9 = alloca %"struct.blink::NGInlineNode::FloatingObject", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca i32, align 4
  %14 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %15 = alloca %"class.blink::NGExclusionSpace", align 8
  %16 = alloca %"class.WTF::Vector.2266", align 8
  %17 = alloca %"struct.blink::NGLineLayoutOpportunity", align 4
  %18 = alloca %"class.blink::NGLineBreaker", align 8
  %19 = alloca %class.FloatsMaxSize, align 8
  %20 = alloca %"class.blink::NGLineInfo", align 8
  %21 = alloca %"class.blink::NGBlockNode", align 8
  %22 = alloca %"class.blink::NGMinMaxConstraintSpaceBuilder", align 16
  %23 = alloca %"class.blink::NGConstraintSpace", align 16
  %24 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %14, i64 0, i32 0
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %24, align 8
  %25 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %14, i64 0, i32 1
  store i64 %1, i64* %25, align 8
  %26 = bitcast { %"class.blink::LayoutBox"*, i64 }* %14 to %"class.blink::NGLayoutInputNode"*
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %27, align 8
  %29 = icmp eq i32 %4, 2
  %30 = select i1 %29, i32 2147483647, i32 0
  %31 = bitcast %"class.blink::NGExclusionSpace"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %32 = bitcast %"class.blink::NGExclusionSpace"* %15 to i64*
  store i64 0, i64* %32, align 8
  %33 = bitcast %"class.WTF::Vector.2266"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.WTF::Vector.2266", %"class.WTF::Vector.2266"* %16, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 192, i1 false)
  %35 = getelementptr inbounds %"class.WTF::Vector.2266", %"class.WTF::Vector.2266"* %16, i64 0, i32 0, i32 1, i64 0
  %36 = bitcast %"class.WTF::Vector.2266"* %16 to i8**
  store i8* %35, i8** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::Vector.2266", %"class.WTF::Vector.2266"* %16, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %37, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector.2266", %"class.WTF::Vector.2266"* %16, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %38, align 4
  %39 = bitcast %"struct.blink::NGLineLayoutOpportunity"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"struct.blink::NGLineLayoutOpportunity", %"struct.blink::NGLineLayoutOpportunity"* %17, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.blink::NGLineLayoutOpportunity", %"struct.blink::NGLineLayoutOpportunity"* %17, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"struct.blink::NGLineLayoutOpportunity", %"struct.blink::NGLineLayoutOpportunity"* %17, i64 0, i32 2, i32 0
  %43 = getelementptr inbounds %"struct.blink::NGLineLayoutOpportunity", %"struct.blink::NGLineLayoutOpportunity"* %17, i64 0, i32 3, i32 0
  %44 = getelementptr inbounds %"struct.blink::NGLineLayoutOpportunity", %"struct.blink::NGLineLayoutOpportunity"* %17, i64 0, i32 4, i32 0
  %45 = getelementptr inbounds %"struct.blink::NGLineLayoutOpportunity", %"struct.blink::NGLineLayoutOpportunity"* %17, i64 0, i32 5, i32 0
  store i32 0, i32* %40, align 4
  store i32 %30, i32* %41, align 4
  store i32 0, i32* %42, align 4
  store i32 %30, i32* %43, align 4
  store i32 0, i32* %44, align 4
  store i32 0, i32* %45, align 4
  store i32 0, i32* %13, align 4
  %46 = bitcast %"class.blink::NGLineBreaker"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %46) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 8 bitcast (<{ i32, i32, i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGLineLayoutOpportunity", %"class.blink::NGInlineNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.blink::NGInlineItemsData"*, %"class.WTF::String", %"class.blink::NGConstraintSpace"*, %"class.blink::NGExclusionSpace"*, %class.scoped_refptr.2076, %class.scoped_refptr, %"class.blink::LazyLineBreakIterator", %"class.blink::HarfBuzzShaper", %"class.blink::ShapeResultSpacing", i8, [7 x i8], %"class.blink::Hyphenation"*, { { { { i8, [3 x i8], %union.anon.2275 } } } }, i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.2280 } } } }, %"class.WTF::Vector.2266"*, i32, i32, %"class.WTF::Vector.2104"*, i8*, %"class.blink::NGInlineItem"*, i8, [7 x i8], %"class.WTF::Vector.2290", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.2300 } } } }, [4 x i8] }>* @__const._ZN5blinkL18ComputeContentSizeENS_12NGInlineNodeENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputENS_17NGLineBreakerModeEPN3WTF6VectorINS_10LayoutUnitELj64ENS9_18PartitionAllocatorEEEPN4absl8optionalISB_EEPb.line_breaker to i8*), i64 400, i1 false)
  call void @_ZN5blink13NGLineBreakerC1ENS_12NGInlineNodeENS_17NGLineBreakerModeERKNS_17NGConstraintSpaceERKNS_23NGLineLayoutOpportunityERKN3WTF6VectorINS_17NGPositionedFloatELj8ENS9_18PartitionAllocatorEEEjPKNS_18NGInlineBreakTokenEPNS_16NGExclusionSpaceE(%"class.blink::NGLineBreaker"* nonnull %18, %"class.blink::LayoutBox"* %0, i64 %1, i32 %4, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"struct.blink::NGLineLayoutOpportunity"* nonnull dereferenceable(24) %17, %"class.WTF::Vector.2266"* nonnull dereferenceable(208) %16, i32 0, %"class.blink::NGInlineBreakToken"* null, %"class.blink::NGExclusionSpace"* nonnull %15) #13
  call void @_ZN5blink13NGLineBreaker23SetIntrinsicSizeOutputsEPN3WTF6VectorINS_10LayoutUnitELj64ENS1_18PartitionAllocatorEEEPb(%"class.blink::NGLineBreaker"* nonnull %18, %"class.WTF::Vector.2104"* %5, i8* %7) #13
  %47 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %18, i64 0, i32 21
  %48 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %47, align 8
  %49 = bitcast %class.FloatsMaxSize* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %49) #13
  %50 = bitcast %class.FloatsMaxSize* %19 to i64*
  store i64 -6148914691236517206, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.blink::MinMaxSizesFloatInput", %"struct.blink::MinMaxSizesFloatInput"* %3, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.blink::MinMaxSizesFloatInput", %"struct.blink::MinMaxSizesFloatInput"* %3, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %54, 0
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %54) #13
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  %61 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %19, i64 0, i32 0, i32 0
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %19, i64 0, i32 1
  %63 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %19, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %64 = bitcast %"class.blink::HeapVector.2301"* %62 to i8**
  store i8* %63, i8** %64, align 8
  %65 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %65, align 8
  %66 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast i32* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %67, i8 0, i64 100, i1 false) #13
  %68 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %48, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = bitcast %"class.blink::NGInlineItem"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.blink::NGLineInfo"* %20 to i8*
  %72 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 2
  %73 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 2, i32 0, i32 1, i64 0
  %74 = bitcast %"class.WTF::Vector.2309"* %72 to i8**
  %75 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 2, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %77 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 3, i32 0, i32 0
  %78 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 11
  %79 = bitcast i32* %77 to i8*
  %80 = bitcast i32* %78 to i8*
  %81 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 5, i32 0
  %82 = getelementptr inbounds %"class.WTF::Vector.2309", %"class.WTF::Vector.2309"* %72, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.blink::NGBlockNode"* %21 to i8*
  %84 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %21, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %21, i64 0, i32 0, i32 1
  %86 = bitcast %"class.blink::NGBlockNode"* %21 to i64*
  %87 = bitcast %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22 to i8*
  %88 = bitcast %"class.blink::NGBlockNode"* %21 to %"class.blink::NGLayoutInputNode"*
  %89 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %90 = bitcast %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22 to i64*
  %91 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0, i32 2
  %92 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0, i32 5
  %95 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %97 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0
  %100 = bitcast %"class.blink::NGConstraintSpace"* %23 to i8*
  %101 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %23, i64 0, i32 1, i32 0
  %102 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %23, i64 0, i32 3, i32 0
  %103 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %23, i64 0, i32 2
  %104 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0, i32 0, i32 2
  %105 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.blink::NGExclusionSpace"* %104 to i64*
  %107 = bitcast %"class.blink::NGExclusionSpace"* %103 to i64*
  %108 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0, i32 0, i32 3, i32 0
  %109 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0, i32 0, i32 1, i32 0
  %110 = bitcast i8* %85 to i64*
  %111 = icmp eq i8* %7, null
  %112 = icmp eq i32 %4, 1
  %113 = bitcast %"class.blink::NGBlockNode"* %21 to %"class.blink::LayoutObject"**
  %114 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %19, i64 0, i32 1, i32 0
  %115 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %9 to i8*
  %116 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %9 to i64*
  %117 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %9, i64 0, i32 1
  %118 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %9, i64 0, i32 2, i32 0
  %119 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %114, i64 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22, i64 0, i32 0, i32 0, i32 1, i32 0
  %121 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %18, i64 0, i32 49
  %122 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 7, i32 0
  %123 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 2, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %48, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  %126 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  %127 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 9
  %128 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %48, i64 0, i32 1, i32 0, i32 0, i32 2
  %129 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  %130 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  %131 = bitcast %"class.logging::CheckError"* %12 to i8*
  %132 = bitcast i8* %73 to %"struct.blink::NGInlineItemResult"*
  %133 = getelementptr inbounds %"class.WTF::Vector.2309", %"class.WTF::Vector.2309"* %72, i64 0, i32 0
  %134 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %18, i64 0, i32 1
  %135 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %20, i64 0, i32 2, i32 0, i32 1, i64 0
  %136 = bitcast %"class.blink::NGBlockNode"* %21 to i8*
  %137 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %23, i64 0, i32 1
  %138 = bitcast %union.anon.1634* %137 to i8*
  %139 = bitcast %"class.blink::NGMinMaxConstraintSpaceBuilder"* %22 to <2 x i64>*
  %140 = bitcast %"class.blink::NGConstraintSpace"* %23 to <2 x i64>*
  br label %141

141:                                              ; preds = %630, %8
  %142 = phi i8 [ 1, %8 ], [ %625, %630 ]
  %143 = phi i64 [ %70, %8 ], [ %624, %630 ]
  %144 = phi i32 [ 0, %8 ], [ %623, %630 ]
  %145 = phi i32 [ 0, %8 ], [ %622, %630 ]
  %146 = phi i8 [ 1, %8 ], [ %620, %630 ]
  call void @llvm.lifetime.start.p0i8(i64 5208, i8* nonnull %71) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 5176, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #13
  store i8* %73, i8** %74, align 8
  store i32 32, i32* %75, align 8
  store i32 0, i32* %76, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 13, i1 false) #13
  call void @_ZN5blink13NGLineBreaker8NextLineEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* nonnull %18, %"class.blink::NGLineInfo"* nonnull %20) #13
  %147 = load i32, i32* %76, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %619, label %149

149:                                              ; preds = %141
  %150 = load i32, i32* %81, align 4
  %151 = icmp sgt i32 %150, 0
  %152 = select i1 %151, i32 %150, i32 0
  %153 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %82, align 8
  %154 = zext i32 %147 to i64
  %155 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %153, i64 %154
  %156 = load i32, i32* %13, align 4
  br label %158

157:                                              ; preds = %307
  store i32 %308, i32* %13, align 4
  br i1 %112, label %311, label %600

158:                                              ; preds = %149, %307
  %159 = phi i32 [ %156, %149 ], [ %308, %307 ]
  %160 = phi %"struct.blink::NGInlineItemResult"* [ %153, %149 ], [ %309, %307 ]
  %161 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %160, i64 0, i32 0
  %162 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %162, i64 0, i32 4
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %164, 5
  br i1 %165, label %166, label %307

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %162, i64 0, i32 3
  %168 = bitcast %"class.blink::LayoutObject"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 16, i1 false)
  store i64 %169, i64* %86, align 8
  store i8 -86, i8* %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %87) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -86, i64 40, i1 false)
  call void @_ZN5blink30NGMinMaxConstraintSpaceBuilderC2ERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_17NGLayoutInputNodeEb(%"class.blink::NGMinMaxConstraintSpaceBuilder"* nonnull %22, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %28, %"class.blink::NGLayoutInputNode"* nonnull dereferenceable(16) %88, i1 zeroext true)
  %170 = load i64, i64* %89, align 8
  %171 = lshr i64 %170, 32
  %172 = trunc i64 %171 to i32
  %173 = and i64 %170, -4294967296
  %174 = or i64 %173, 4294967232
  store i64 %174, i64* %90, align 16
  %175 = load i8, i8* %91, align 4, !range !4
  %176 = icmp eq i8 %175, 1
  br i1 %176, label %184, label %177, !prof !3

177:                                              ; preds = %166
  store i32 %172, i32* %92, align 16
  store i32 -64, i32* %93, align 4
  %178 = load i8, i8* %94, align 1, !range !4
  %179 = icmp ne i8 %178, 0
  %180 = icmp eq i32 %172, -64
  %181 = and i1 %180, %179
  br i1 %181, label %182, label %184

182:                                              ; preds = %177
  %183 = load i32, i32* %95, align 16
  store i32 %183, i32* %92, align 16
  br label %184

184:                                              ; preds = %166, %177, %182
  %185 = load i32, i32* %96, align 8
  %186 = lshr i32 %185, 28
  %187 = and i32 %186, 3
  switch i32 %187, label %188 [
    i32 0, label %189
    i32 1, label %196
    i32 2, label %191
    i32 3, label %192
  ]

188:                                              ; preds = %184
  unreachable

189:                                              ; preds = %184
  %190 = load i32, i32* %98, align 4
  br label %196

191:                                              ; preds = %184
  br label %196

192:                                              ; preds = %184
  %193 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %97, align 8
  %194 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %193, i64 0, i32 0, i32 1, i32 0
  %195 = load i32, i32* %194, align 4
  br label %196

196:                                              ; preds = %184, %189, %191, %192
  %197 = phi i32 [ %195, %192 ], [ -64, %191 ], [ %190, %189 ], [ 0, %184 ]
  %198 = zext i32 %197 to i64
  %199 = shl nuw i64 %198, 32
  %200 = or i64 %199, 4294967232
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %99, i64 %200) #13
  %201 = load i32, i32* %96, align 8
  %202 = lshr i32 %201, 30
  switch i32 %202, label %210 [
    i32 0, label %203
    i32 1, label %211
    i32 2, label %205
    i32 3, label %206
  ]

203:                                              ; preds = %196
  %204 = load i32, i32* %98, align 4
  br label %211

205:                                              ; preds = %196
  br label %211

206:                                              ; preds = %196
  %207 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %97, align 8
  %208 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %207, i64 0, i32 1, i32 0
  %209 = load i32, i32* %208, align 8
  br label %211

210:                                              ; preds = %196
  unreachable

211:                                              ; preds = %196, %203, %205, %206
  %212 = phi i32 [ %209, %206 ], [ -64, %205 ], [ %204, %203 ], [ 0, %196 ]
  %213 = zext i32 %212 to i64
  %214 = shl nuw i64 %213, 32
  %215 = or i64 %214, 4294967232
  call void @_ZN5blink24NGConstraintSpaceBuilder35SetReplacedPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %99, i64 %215) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 24, i1 false)
  %216 = load i64, i64* %106, align 16, !noalias !43
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %105, align 16, !noalias !43
  store i64 %216, i64* %107, align 16, !alias.scope !43
  %217 = load i32, i32* %108, align 8, !noalias !43
  store i32 %217, i32* %102, align 8, !alias.scope !43
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = load <2 x i64>, <2 x i64>* %139, align 16
  store <2 x i64> %220, <2 x i64>* %140, align 16
  br i1 %219, label %222, label %221

221:                                              ; preds = %211
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %109, align 8, !noalias !43
  br label %222

222:                                              ; preds = %211, %221
  %223 = call { i64, i8 } @_ZN5blink35ComputeMinAndMaxContentContributionERKNS_13ComputedStyleERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::ComputedStyle"* dereferenceable(104) %28, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %21, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %23, i64 0) #13
  %224 = extractvalue { i64, i8 } %223, 0
  %225 = trunc i64 %224 to i32
  %226 = lshr i64 %224, 32
  %227 = trunc i64 %226 to i32
  %228 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %84, align 8
  %229 = load i64, i64* %110, align 8
  %230 = call { i64, i64 } @_ZN5blink20ComputeMinMaxMarginsERKNS_13ComputedStyleENS_17NGLayoutInputNodeE(%"class.blink::ComputedStyle"* dereferenceable(104) %28, %"class.blink::LayoutBox"* %228, i64 %229) #13
  %231 = extractvalue { i64, i64 } %230, 0
  %232 = trunc i64 %231 to i32
  %233 = lshr i64 %231, 32
  %234 = trunc i64 %233 to i32
  %235 = icmp slt i32 %234, 0
  %236 = select i1 %235, i32 -2147483648, i32 2147483647
  %237 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %232, i32 %234) #13
  %238 = extractvalue { i32, i1 } %237, 1
  %239 = extractvalue { i32, i1 } %237, 0
  %240 = select i1 %238, i32 %236, i32 %239, !prof !2
  br i1 %111, label %245, label %241

241:                                              ; preds = %222
  %242 = extractvalue { i64, i8 } %223, 1
  %243 = load i8, i8* %7, align 1, !range !4
  %244 = or i8 %243, %242
  store i8 %244, i8* %7, align 1
  br label %245

245:                                              ; preds = %222, %241
  br i1 %112, label %246, label %255

246:                                              ; preds = %245
  %247 = icmp slt i32 %240, 0
  %248 = select i1 %247, i32 -2147483648, i32 2147483647
  %249 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %225, i32 %240) #13
  %250 = extractvalue { i32, i1 } %249, 1
  %251 = extractvalue { i32, i1 } %249, 0
  %252 = select i1 %250, i32 %248, i32 %251, !prof !2
  %253 = icmp slt i32 %159, %252
  %254 = select i1 %253, i32 %252, i32 %159
  br label %255

255:                                              ; preds = %245, %246
  %256 = phi i32 [ %254, %246 ], [ %159, %245 ]
  %257 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %113, align 8
  %258 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %257, i64 0, i32 5, i32 0
  %259 = bitcast %"class.blink::ComputedStyle"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = icmp slt i32 %240, 0
  %262 = select i1 %261, i32 -2147483648, i32 2147483647
  %263 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %227, i32 %240) #13
  %264 = extractvalue { i32, i1 } %263, 1
  %265 = extractvalue { i32, i1 } %263, 0
  %266 = select i1 %264, i32 %262, i32 %265, !prof !2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #13
  store i64 %260, i64* %116, align 8
  store %"class.blink::ComputedStyle"* %28, %"class.blink::ComputedStyle"** %117, align 8
  store i32 %266, i32* %118, align 8
  %267 = load i32, i32* %66, align 4
  %268 = load i32, i32* %65, align 8
  %269 = icmp eq i32 %267, %268
  br i1 %269, label %287, label %270, !prof !2

270:                                              ; preds = %255
  %271 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %119, align 8
  %272 = zext i32 %267 to i64
  %273 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %271, i64 %272
  %274 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* nonnull align 8 %115, i64 24, i1 false) #13
  %275 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %284, label %277

277:                                              ; preds = %270
  %278 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %279 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %278, i64 0, i32 1
  %280 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %279) #13
  %281 = icmp eq i8* %280, null
  br i1 %281, label %282, label %284, !prof !2

282:                                              ; preds = %277
  %283 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %279, i8* %283) #13
  br label %284

284:                                              ; preds = %282, %277, %270
  %285 = load i32, i32* %66, align 4
  %286 = add i32 %285, 1
  store i32 %286, i32* %66, align 4
  br label %288

287:                                              ; preds = %255
  call void @_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2304"* %114, %"struct.blink::NGInlineNode::FloatingObject"* nonnull dereferenceable(24) %9) #13
  br label %288

288:                                              ; preds = %284, %287
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #13
  %289 = load i32, i32* %102, align 8
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %297, label %292

292:                                              ; preds = %288
  %293 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %101, align 8
  %294 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %293, null
  br i1 %294, label %297, label %295

295:                                              ; preds = %292
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %293) #13
  %296 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %293 to i8*
  call void @free(i8* %296) #13
  br label %297

297:                                              ; preds = %288, %292, %295
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %103) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #13
  %298 = load i32, i32* %108, align 8
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %306, label %301

301:                                              ; preds = %297
  %302 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %120, align 8
  %303 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %302, null
  br i1 %303, label %306, label %304

304:                                              ; preds = %301
  call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %302) #13
  %305 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %302 to i8*
  call void @free(i8* %305) #13
  br label %306

306:                                              ; preds = %297, %301, %304
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* %104) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %87) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #13
  br label %307

307:                                              ; preds = %158, %306
  %308 = phi i32 [ %159, %158 ], [ %256, %306 ]
  %309 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %160, i64 1
  %310 = icmp eq %"struct.blink::NGInlineItemResult"* %309, %155
  br i1 %310, label %157, label %158

311:                                              ; preds = %157
  %312 = icmp slt i32 %308, %152
  %313 = select i1 %312, i32 %152, i32 %308
  store i32 %313, i32* %13, align 4
  %314 = and i8 %146, 1
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %602, label %316

316:                                              ; preds = %311
  %317 = load i8, i8* %121, align 4, !range !4
  %318 = icmp eq i8 %317, 0
  %319 = xor i8 %317, 1
  br i1 %318, label %320, label %602

320:                                              ; preds = %316
  %321 = icmp eq i8 %142, 0
  br i1 %321, label %330, label %322

322:                                              ; preds = %320
  %323 = load i32, i32* %122, align 4
  %324 = icmp slt i32 %323, 0
  %325 = select i1 %324, i32 -2147483648, i32 2147483647
  %326 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %145, i32 %323) #13
  %327 = extractvalue { i32, i1 } %326, 1
  %328 = extractvalue { i32, i1 } %326, 0
  %329 = select i1 %327, i32 %325, i32 %328, !prof !2
  br label %330

330:                                              ; preds = %322, %320
  %331 = phi i32 [ %145, %320 ], [ %329, %322 ]
  %332 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %123, align 8
  %333 = load i32, i32* %76, align 4
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %332, i64 %334
  %336 = icmp eq i32 %333, 0
  br i1 %336, label %619, label %340

337:                                              ; preds = %521
  %338 = and i8 %524, 1
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %602, label %527

340:                                              ; preds = %330, %521
  %341 = phi i64 [ %522, %521 ], [ %143, %330 ]
  %342 = phi i32 [ %523, %521 ], [ %331, %330 ]
  %343 = phi i8 [ %524, %521 ], [ 0, %330 ]
  %344 = phi %"struct.blink::NGInlineItemResult"* [ %525, %521 ], [ %332, %330 ]
  %345 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %344, i64 0, i32 0
  %346 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %345, align 8
  %347 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %346, i64 0, i32 4
  %348 = load i32, i32* %347, align 8
  switch i32 %348, label %512 [
    i32 0, label %521
    i32 2, label %349
    i32 1, label %364
  ]

349:                                              ; preds = %340
  %350 = load i64, i64* %69, align 8
  %351 = ptrtoint %"class.blink::NGInlineItem"* %346 to i64
  %352 = sub i64 %351, %350
  %353 = lshr exact i64 %352, 5
  %354 = trunc i64 %353 to i32
  %355 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2104"* %5, i32 %354) #13
  %356 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %355, i64 0, i32 0
  %357 = load i32, i32* %356, align 4
  %358 = icmp slt i32 %357, 0
  %359 = select i1 %358, i32 -2147483648, i32 2147483647
  %360 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %342, i32 %357) #13
  %361 = extractvalue { i32, i1 } %360, 1
  %362 = extractvalue { i32, i1 } %360, 0
  %363 = select i1 %361, i32 %359, i32 %362, !prof !2
  br label %521

364:                                              ; preds = %340
  %365 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %346, i64 0, i32 0
  %366 = load i32, i32* %365, align 8
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %512, label %369

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = icmp ugt i32 %371, %366
  br i1 %372, label %373, label %512

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 1
  br i1 %377, label %385, label %379

379:                                              ; preds = %373
  %380 = bitcast %"class.WTF::StringImpl"* %378 to i8*
  %381 = zext i32 %366 to i64
  %382 = getelementptr inbounds i8, i8* %380, i64 %381
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i16
  br label %390

385:                                              ; preds = %373
  %386 = bitcast %"class.WTF::StringImpl"* %378 to i16*
  %387 = zext i32 %366 to i64
  %388 = getelementptr inbounds i16, i16* %386, i64 %387
  %389 = load i16, i16* %388, align 2
  br label %390

390:                                              ; preds = %385, %379
  %391 = phi i16 [ %384, %379 ], [ %389, %385 ]
  switch i16 %391, label %512 [
    i16 10, label %521
    i16 9, label %392
  ]

392:                                              ; preds = %390
  %393 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %344, i64 0, i32 2, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %344, i64 0, i32 2, i32 0
  %396 = load i32, i32* %395, align 4
  %397 = sub i32 %394, %396
  %398 = inttoptr i64 %341 to %"class.blink::NGInlineItem"*
  %399 = icmp eq %"class.blink::NGInlineItem"* %346, %398
  br i1 %399, label %447, label %400

400:                                              ; preds = %392
  %401 = getelementptr %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %346, i64 -1
  %402 = bitcast %"class.blink::NGInlineItem"* %401 to i8*
  %403 = sub i64 0, %341
  %404 = getelementptr i8, i8* %402, i64 %403
  %405 = ptrtoint i8* %404 to i64
  %406 = lshr i64 %405, 5
  br label %407

407:                                              ; preds = %400, %439
  %408 = phi i32 [ %440, %439 ], [ %342, %400 ]
  %409 = phi %"class.blink::NGInlineItem"* [ %441, %439 ], [ %398, %400 ]
  %410 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %409, i64 0, i32 4
  %411 = load i32, i32* %410, align 8
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %439

413:                                              ; preds = %407
  %414 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %409, i64 0, i32 1
  %415 = load i32, i32* %414, align 4
  %416 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %409, i64 0, i32 0
  %417 = load i32, i32* %416, align 8
  %418 = icmp eq i32 %415, %417
  br i1 %418, label %439, label %419

419:                                              ; preds = %413
  %420 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %409, i64 0, i32 2, i32 0
  %421 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %420, align 8
  %422 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %421, i64 0, i32 1
  %423 = load float, float* %422, align 4
  %424 = fmul float %423, 6.400000e+01
  %425 = call float @llvm.ceil.f32(float %424) #13
  %426 = fcmp ult float %425, 0xC1E0000000000000
  %427 = fcmp ugt float %425, 0x41DFFFFFE0000000
  %428 = fcmp ogt float %425, 0xC1E0000000000000
  %429 = select i1 %428, float %425, float 0xC1E0000000000000
  %430 = fptosi float %429 to i32
  %431 = select i1 %426, i32 0, i32 2147483647
  %432 = select i1 %427, i32 %431, i32 %430
  %433 = icmp sgt i32 %432, 0
  %434 = select i1 %433, i32 %432, i32 0
  %435 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %408, i32 %434) #13
  %436 = extractvalue { i32, i1 } %435, 1
  %437 = extractvalue { i32, i1 } %435, 0
  %438 = select i1 %436, i32 2147483647, i32 %437, !prof !2
  br label %439

439:                                              ; preds = %419, %413, %407
  %440 = phi i32 [ %408, %413 ], [ %438, %419 ], [ %408, %407 ]
  %441 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %409, i64 1
  %442 = icmp eq %"class.blink::NGInlineItem"* %441, %346
  br i1 %442, label %443, label %407

443:                                              ; preds = %439
  %444 = getelementptr %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %398, i64 1
  %445 = getelementptr %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %444, i64 %406
  %446 = ptrtoint %"class.blink::NGInlineItem"* %445 to i64
  br label %447

447:                                              ; preds = %443, %392
  %448 = phi i64 [ %341, %392 ], [ %446, %443 ]
  %449 = phi i32 [ %342, %392 ], [ %440, %443 ]
  %450 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %346) #13
  %451 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %450, i64 0, i32 0, i32 0, i32 0, i32 0
  %452 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %451, align 8
  %453 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %452, i64 0, i32 1, i32 0, i32 0
  %454 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %453, align 8
  %455 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %454, i64 0, i32 1
  %456 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %455) #13
  %457 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %456, i64 0, i32 2
  %458 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %457, align 8
  %459 = icmp eq %"class.blink::SimpleFontData"* %458, null
  br i1 %459, label %460, label %463

460:                                              ; preds = %447
  %461 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %455, i64 0, i32 0
  %462 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %456, %"class.blink::FontDescription"* dereferenceable(80) %461) #13
  store %"class.blink::SimpleFontData"* %462, %"class.blink::SimpleFontData"** %457, align 8
  br label %463

463:                                              ; preds = %460, %447
  %464 = phi %"class.blink::SimpleFontData"* [ %458, %447 ], [ %462, %460 ]
  %465 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %450, i64 0, i32 0, i32 1, i32 0, i32 0
  %466 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %465, align 8
  %467 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %466, i64 0, i32 15
  %468 = sitofp i32 %449 to float
  %469 = fmul float %468, 1.562500e-02
  %470 = call float @_ZNK5blink4Font8TabWidthEPKNS_14SimpleFontDataERKNS_7TabSizeEf(%"class.blink::Font"* %455, %"class.blink::SimpleFontData"* %464, %"struct.blink::TabSize"* dereferenceable(8) %467, float %469) #13
  %471 = icmp ugt i32 %397, 1
  br i1 %471, label %472, label %495

472:                                              ; preds = %463
  %473 = icmp eq %"class.blink::SimpleFontData"* %464, null
  br i1 %473, label %486, label %474

474:                                              ; preds = %472
  %475 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %464, i64 0, i32 8
  %476 = load float, float* %475, align 4
  %477 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %466, i64 0, i32 15, i32 1
  %478 = load i8, i8* %477, align 4
  %479 = and i8 %478, 1
  %480 = icmp eq i8 %479, 0
  %481 = getelementptr inbounds %"struct.blink::TabSize", %"struct.blink::TabSize"* %467, i64 0, i32 0
  %482 = load float, float* %481, align 4
  %483 = fmul float %476, %482
  %484 = select i1 %480, float %482, float %483
  %485 = fcmp une float %484, 0.000000e+00
  br i1 %485, label %489, label %486

486:                                              ; preds = %474, %472
  %487 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %454, i64 0, i32 1, i32 0, i32 8
  %488 = load float, float* %487, align 8
  br label %489

489:                                              ; preds = %486, %474
  %490 = phi float [ %484, %474 ], [ %488, %486 ]
  %491 = add i32 %397, -1
  %492 = uitofp i32 %491 to float
  %493 = fmul float %490, %492
  %494 = fadd float %470, %493
  br label %495

495:                                              ; preds = %489, %463
  %496 = phi float [ %494, %489 ], [ %470, %463 ]
  %497 = fmul float %496, 6.400000e+01
  %498 = call float @llvm.ceil.f32(float %497) #13
  %499 = fcmp ult float %498, 0xC1E0000000000000
  %500 = fcmp ugt float %498, 0x41DFFFFFE0000000
  %501 = fcmp ogt float %498, 0xC1E0000000000000
  %502 = select i1 %501, float %498, float 0xC1E0000000000000
  %503 = fptosi float %502 to i32
  %504 = select i1 %499, i32 0, i32 2147483647
  %505 = select i1 %500, i32 %504, i32 %503
  %506 = icmp sgt i32 %505, 0
  %507 = select i1 %506, i32 %505, i32 0
  %508 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %449, i32 %507) #13
  %509 = extractvalue { i32, i1 } %508, 1
  %510 = extractvalue { i32, i1 } %508, 0
  %511 = select i1 %509, i32 2147483647, i32 %510, !prof !2
  br label %521

512:                                              ; preds = %390, %369, %364, %340
  %513 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %344, i64 0, i32 4, i32 0
  %514 = load i32, i32* %513, align 4
  %515 = icmp slt i32 %514, 0
  %516 = select i1 %515, i32 -2147483648, i32 2147483647
  %517 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %342, i32 %514) #13
  %518 = extractvalue { i32, i1 } %517, 1
  %519 = extractvalue { i32, i1 } %517, 0
  %520 = select i1 %518, i32 %516, i32 %519, !prof !2
  br label %521

521:                                              ; preds = %512, %495, %390, %349, %340
  %522 = phi i64 [ %341, %512 ], [ %448, %495 ], [ %341, %390 ], [ %341, %349 ], [ %341, %340 ]
  %523 = phi i32 [ %520, %512 ], [ %511, %495 ], [ %342, %390 ], [ %363, %349 ], [ %342, %340 ]
  %524 = phi i8 [ %343, %512 ], [ %343, %495 ], [ 1, %390 ], [ %343, %349 ], [ %343, %340 ]
  %525 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %344, i64 1
  %526 = icmp eq %"struct.blink::NGInlineItemResult"* %525, %335
  br i1 %526, label %337, label %340

527:                                              ; preds = %337
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %126, align 8
  %528 = load i32, i32* %127, align 4
  %529 = load i32, i32* %128, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #13
  %530 = icmp ugt i32 %528, %529
  br i1 %530, label %532, label %531

531:                                              ; preds = %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #13
  store i8* null, i8** %126, align 8
  br label %539

532:                                              ; preds = %527
  %533 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %528) #13
  %534 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %529) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %10, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i64 0, i64 0), i8* %533, i8* %534) #13
  %535 = load i8*, i8** %130, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #13
  store i8* %535, i8** %126, align 8
  %536 = icmp eq i8* %535, null
  br i1 %536, label %539, label %537

537:                                              ; preds = %532
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 1680, %"class.logging::CheckOpResult"* nonnull %11) #13
  %538 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #13
  br label %539

539:                                              ; preds = %537, %532, %531
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #13
  %540 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %68, align 8
  %541 = load i32, i32* %127, align 4
  %542 = zext i32 %541 to i64
  %543 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %540, i64 %542
  %544 = inttoptr i64 %522 to %"class.blink::NGInlineItem"*
  %545 = icmp eq %"class.blink::NGInlineItem"* %543, %544
  br i1 %545, label %594, label %546

546:                                              ; preds = %539
  %547 = getelementptr %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %540, i64 -1
  %548 = getelementptr %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %547, i64 %542, i32 0
  %549 = bitcast i32* %548 to i8*
  %550 = sub i64 0, %522
  %551 = getelementptr i8, i8* %549, i64 %550
  %552 = ptrtoint i8* %551 to i64
  %553 = lshr i64 %552, 5
  br label %554

554:                                              ; preds = %546, %586
  %555 = phi i32 [ %587, %586 ], [ %523, %546 ]
  %556 = phi %"class.blink::NGInlineItem"* [ %588, %586 ], [ %544, %546 ]
  %557 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %556, i64 0, i32 4
  %558 = load i32, i32* %557, align 8
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %586

560:                                              ; preds = %554
  %561 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %556, i64 0, i32 1
  %562 = load i32, i32* %561, align 4
  %563 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %556, i64 0, i32 0
  %564 = load i32, i32* %563, align 8
  %565 = icmp eq i32 %562, %564
  br i1 %565, label %586, label %566

566:                                              ; preds = %560
  %567 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %556, i64 0, i32 2, i32 0
  %568 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %567, align 8
  %569 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %568, i64 0, i32 1
  %570 = load float, float* %569, align 4
  %571 = fmul float %570, 6.400000e+01
  %572 = call float @llvm.ceil.f32(float %571) #13
  %573 = fcmp ult float %572, 0xC1E0000000000000
  %574 = fcmp ugt float %572, 0x41DFFFFFE0000000
  %575 = fcmp ogt float %572, 0xC1E0000000000000
  %576 = select i1 %575, float %572, float 0xC1E0000000000000
  %577 = fptosi float %576 to i32
  %578 = select i1 %573, i32 0, i32 2147483647
  %579 = select i1 %574, i32 %578, i32 %577
  %580 = icmp sgt i32 %579, 0
  %581 = select i1 %580, i32 %579, i32 0
  %582 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %555, i32 %581) #13
  %583 = extractvalue { i32, i1 } %582, 1
  %584 = extractvalue { i32, i1 } %582, 0
  %585 = select i1 %583, i32 2147483647, i32 %584, !prof !2
  br label %586

586:                                              ; preds = %566, %560, %554
  %587 = phi i32 [ %555, %560 ], [ %585, %566 ], [ %555, %554 ]
  %588 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %556, i64 1
  %589 = icmp eq %"class.blink::NGInlineItem"* %588, %543
  br i1 %589, label %590, label %554

590:                                              ; preds = %586
  %591 = getelementptr %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %544, i64 1
  %592 = getelementptr %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %591, i64 %553
  %593 = ptrtoint %"class.blink::NGInlineItem"* %592 to i64
  br label %594

594:                                              ; preds = %590, %539
  %595 = phi i64 [ %522, %539 ], [ %593, %590 ]
  %596 = phi i32 [ %523, %539 ], [ %587, %590 ]
  %597 = icmp sgt i32 %596, 0
  %598 = select i1 %597, i32 %596, i32 0
  %599 = call fastcc i32 @_ZZN5blinkL18ComputeContentSizeENS_12NGInlineNodeENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputENS_17NGLineBreakerModeEPN3WTF6VectorINS_10LayoutUnitELj64ENS9_18PartitionAllocatorEEEPN4absl8optionalISB_EEPbEN13FloatsMaxSize21ComputeMaxSizeForLineESB_SB_(%class.FloatsMaxSize* nonnull %19, i32 %598, i32 %144) #13
  br label %602

600:                                              ; preds = %157
  %601 = call fastcc i32 @_ZZN5blinkL18ComputeContentSizeENS_12NGInlineNodeENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputENS_17NGLineBreakerModeEPN3WTF6VectorINS_10LayoutUnitELj64ENS9_18PartitionAllocatorEEEPN4absl8optionalISB_EEPbEN13FloatsMaxSize21ComputeMaxSizeForLineESB_SB_(%class.FloatsMaxSize* nonnull %19, i32 %152, i32 %308)
  store i32 %601, i32* %13, align 4
  br label %602

602:                                              ; preds = %600, %316, %337, %594, %311
  %603 = phi i8 [ %142, %311 ], [ 1, %594 ], [ 0, %337 ], [ %142, %600 ], [ %142, %316 ]
  %604 = phi i64 [ %143, %311 ], [ %595, %594 ], [ %522, %337 ], [ %143, %600 ], [ %143, %316 ]
  %605 = phi i32 [ %144, %311 ], [ %599, %594 ], [ %144, %337 ], [ %144, %600 ], [ %144, %316 ]
  %606 = phi i32 [ %145, %311 ], [ 0, %594 ], [ %523, %337 ], [ %145, %600 ], [ %145, %316 ]
  %607 = phi i8 [ 0, %311 ], [ %319, %594 ], [ %319, %337 ], [ %146, %600 ], [ 0, %316 ]
  %608 = load i32, i32* %76, align 4
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %619, label %610, !prof !2

610:                                              ; preds = %602
  %611 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %82, align 8
  %612 = zext i32 %608 to i64
  %613 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %611, i64 %612
  br label %614

614:                                              ; preds = %614, %610
  %615 = phi %"struct.blink::NGInlineItemResult"* [ %616, %614 ], [ %611, %610 ]
  call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* %615) #13
  %616 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %615, i64 1
  %617 = icmp eq %"struct.blink::NGInlineItemResult"* %616, %613
  br i1 %617, label %618, label %614

618:                                              ; preds = %614
  store i32 0, i32* %76, align 4
  br label %619

619:                                              ; preds = %330, %141, %618, %602
  %620 = phi i8 [ %607, %618 ], [ %607, %602 ], [ %146, %141 ], [ 1, %330 ]
  %621 = phi i1 [ true, %618 ], [ true, %602 ], [ false, %141 ], [ true, %330 ]
  %622 = phi i32 [ %606, %618 ], [ %606, %602 ], [ %145, %141 ], [ %331, %330 ]
  %623 = phi i32 [ %605, %618 ], [ %605, %602 ], [ %144, %141 ], [ %144, %330 ]
  %624 = phi i64 [ %604, %618 ], [ %604, %602 ], [ %143, %141 ], [ %143, %330 ]
  %625 = phi i8 [ %603, %618 ], [ %603, %602 ], [ %142, %141 ], [ 0, %330 ]
  %626 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %82, align 8
  %627 = icmp eq %"struct.blink::NGInlineItemResult"* %626, %132
  br i1 %627, label %629, label %628, !prof !3

628:                                              ; preds = %619
  call void @_ZN3WTF12VectorBufferIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2310"* %133, %"struct.blink::NGInlineItemResult"* %626) #13
  br label %629

629:                                              ; preds = %619, %628
  call void @llvm.lifetime.end.p0i8(i64 5208, i8* nonnull %71) #13
  br i1 %621, label %630, label %636

630:                                              ; preds = %629
  %631 = load i32, i32* %134, align 4
  %632 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %47, align 8
  %633 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %632, i64 0, i32 1, i32 0, i32 0, i32 2
  %634 = load i32, i32* %633, align 4
  %635 = icmp ult i32 %631, %634
  br i1 %635, label %141, label %636

636:                                              ; preds = %630, %629
  %637 = icmp ne i32 %4, 1
  %638 = and i8 %620, 1
  %639 = icmp eq i8 %638, 0
  %640 = or i1 %637, %639
  br i1 %640, label %703, label %641

641:                                              ; preds = %636
  %642 = call zeroext i1 @_ZNK5blink17NGLayoutInputNode9IsSvgTextEv(%"class.blink::NGLayoutInputNode"* nonnull %26) #13
  br i1 %642, label %643, label %650

643:                                              ; preds = %641
  %644 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %645 = load i8, i8* %644, align 4, !range !4
  %646 = icmp eq i8 %645, 0
  %647 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %648 = load i32, i32* %13, align 4
  store i32 %648, i32* %647, align 4
  br i1 %646, label %649, label %703

649:                                              ; preds = %643
  store i8 1, i8* %644, align 4
  br label %703

650:                                              ; preds = %641
  %651 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %68, align 8
  %652 = load i32, i32* %128, align 4
  %653 = zext i32 %652 to i64
  %654 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %651, i64 %653
  %655 = inttoptr i64 %624 to %"class.blink::NGInlineItem"*
  %656 = icmp eq %"class.blink::NGInlineItem"* %654, %655
  br i1 %656, label %693, label %657

657:                                              ; preds = %650, %689
  %658 = phi i32 [ %690, %689 ], [ %622, %650 ]
  %659 = phi %"class.blink::NGInlineItem"* [ %691, %689 ], [ %655, %650 ]
  %660 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %659, i64 0, i32 4
  %661 = load i32, i32* %660, align 8
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %689

663:                                              ; preds = %657
  %664 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %659, i64 0, i32 1
  %665 = load i32, i32* %664, align 4
  %666 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %659, i64 0, i32 0
  %667 = load i32, i32* %666, align 8
  %668 = icmp eq i32 %665, %667
  br i1 %668, label %689, label %669

669:                                              ; preds = %663
  %670 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %659, i64 0, i32 2, i32 0
  %671 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %670, align 8
  %672 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %671, i64 0, i32 1
  %673 = load float, float* %672, align 4
  %674 = fmul float %673, 6.400000e+01
  %675 = call float @llvm.ceil.f32(float %674) #13
  %676 = fcmp ult float %675, 0xC1E0000000000000
  %677 = fcmp ugt float %675, 0x41DFFFFFE0000000
  %678 = fcmp ogt float %675, 0xC1E0000000000000
  %679 = select i1 %678, float %675, float 0xC1E0000000000000
  %680 = fptosi float %679 to i32
  %681 = select i1 %676, i32 0, i32 2147483647
  %682 = select i1 %677, i32 %681, i32 %680
  %683 = icmp sgt i32 %682, 0
  %684 = select i1 %683, i32 %682, i32 0
  %685 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %658, i32 %684) #13
  %686 = extractvalue { i32, i1 } %685, 1
  %687 = extractvalue { i32, i1 } %685, 0
  %688 = select i1 %686, i32 2147483647, i32 %687, !prof !2
  br label %689

689:                                              ; preds = %669, %663, %657
  %690 = phi i32 [ %658, %663 ], [ %688, %669 ], [ %658, %657 ]
  %691 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %659, i64 1
  %692 = icmp eq %"class.blink::NGInlineItem"* %691, %654
  br i1 %692, label %693, label %657

693:                                              ; preds = %689, %650
  %694 = phi i32 [ %622, %650 ], [ %690, %689 ]
  %695 = icmp sgt i32 %694, 0
  %696 = select i1 %695, i32 %694, i32 0
  %697 = call fastcc i32 @_ZZN5blinkL18ComputeContentSizeENS_12NGInlineNodeENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputENS_17NGLineBreakerModeEPN3WTF6VectorINS_10LayoutUnitELj64ENS9_18PartitionAllocatorEEEPN4absl8optionalISB_EEPbEN13FloatsMaxSize21ComputeMaxSizeForLineESB_SB_(%class.FloatsMaxSize* nonnull %19, i32 %696, i32 %623) #13
  %698 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %699 = load i8, i8* %698, align 4, !range !4
  %700 = icmp eq i8 %699, 0
  %701 = getelementptr inbounds %"class.absl::optional.1636", %"class.absl::optional.1636"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %697, i32* %701, align 4
  br i1 %700, label %702, label %703

702:                                              ; preds = %693
  store i8 1, i8* %698, align 4
  br label %703

703:                                              ; preds = %702, %693, %649, %643, %636
  %704 = load i32, i32* %66, align 4
  %705 = icmp eq i32 %704, 0
  %706 = getelementptr inbounds %"class.blink::HeapVector.2301", %"class.blink::HeapVector.2301"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %707 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %706, align 8
  br i1 %705, label %708, label %710, !prof !2

708:                                              ; preds = %703
  %709 = bitcast i8* %63 to %"struct.blink::NGInlineNode::FloatingObject"*
  br label %716

710:                                              ; preds = %703
  %711 = icmp ne %"struct.blink::NGInlineNode::FloatingObject"* %707, null
  %712 = bitcast i8* %63 to %"struct.blink::NGInlineNode::FloatingObject"*
  %713 = icmp ne %"struct.blink::NGInlineNode::FloatingObject"* %707, %712
  %714 = and i1 %711, %713
  br i1 %714, label %716, label %715

715:                                              ; preds = %710
  store i32 0, i32* %66, align 4
  br label %716

716:                                              ; preds = %708, %715, %710
  %717 = phi %"struct.blink::NGInlineNode::FloatingObject"* [ %709, %708 ], [ %712, %715 ], [ %712, %710 ]
  %718 = icmp eq %"struct.blink::NGInlineNode::FloatingObject"* %707, %717
  br i1 %718, label %721, label %719, !prof !3

719:                                              ; preds = %716
  %720 = getelementptr inbounds %"class.blink::HeapVector.2301", %"class.blink::HeapVector.2301"* %62, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2305"* %720, %"struct.blink::NGInlineNode::FloatingObject"* %707) #13
  br label %721

721:                                              ; preds = %716, %719
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %49) #13
  call void @_ZN5blink13NGLineBreakerD1Ev(%"class.blink::NGLineBreaker"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13
  %722 = load i32, i32* %38, align 4
  %723 = icmp eq i32 %722, 0
  %724 = getelementptr inbounds %"class.WTF::Vector.2266", %"class.WTF::Vector.2266"* %16, i64 0, i32 0, i32 0, i32 0
  br i1 %723, label %745, label %725, !prof !2

725:                                              ; preds = %721
  %726 = load %"struct.blink::NGPositionedFloat"*, %"struct.blink::NGPositionedFloat"** %724, align 8
  %727 = zext i32 %722 to i64
  %728 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %726, i64 %727
  br label %729

729:                                              ; preds = %741, %725
  %730 = phi %"struct.blink::NGPositionedFloat"* [ %742, %741 ], [ %726, %725 ]
  %731 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %730, i64 0, i32 0, i32 0
  %732 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %731, align 8
  %733 = icmp eq %"class.blink::NGLayoutResult"* %732, null
  br i1 %733, label %741, label %734

734:                                              ; preds = %729
  %735 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %732, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %735) #13
  %736 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %732, i64 0, i32 0, i32 0, i32 0, i32 0
  %737 = load i32, i32* %736, align 4
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %739, label %741

739:                                              ; preds = %734
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %732) #13
  %740 = bitcast %"class.blink::NGLayoutResult"* %732 to i8*
  call void @free(i8* %740) #13
  br label %741

741:                                              ; preds = %739, %734, %729
  %742 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %730, i64 1
  %743 = icmp eq %"struct.blink::NGPositionedFloat"* %742, %728
  br i1 %743, label %744, label %729

744:                                              ; preds = %741
  store i32 0, i32* %38, align 4
  br label %745

745:                                              ; preds = %744, %721
  %746 = load %"struct.blink::NGPositionedFloat"*, %"struct.blink::NGPositionedFloat"** %724, align 8
  %747 = bitcast i8* %35 to %"struct.blink::NGPositionedFloat"*
  %748 = icmp eq %"struct.blink::NGPositionedFloat"* %746, %747
  br i1 %748, label %751, label %749, !prof !3

749:                                              ; preds = %745
  %750 = getelementptr inbounds %"class.WTF::Vector.2266", %"class.WTF::Vector.2266"* %16, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink17NGPositionedFloatELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2267"* nonnull %750, %"struct.blink::NGPositionedFloat"* %746) #13
  br label %751

751:                                              ; preds = %745, %749
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %33) #13
  call void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  %752 = load i32, i32* %13, align 4
  ret i32 %752
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12NGInlineNode17UseFirstLineStyleEv(%"class.blink::NGInlineNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::NGInlineNode", %"class.blink::NGInlineNode"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutBox"* %4, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %4, i64 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %10, %12
  %13 = phi %"class.blink::LayoutObject"* [ %15, %12 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 7
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %6
  %20 = phi %"class.blink::Node"* [ %8, %6 ], [ %17, %12 ]
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %24, i64 0, i32 59, i32 0, i32 0
  %26 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %26, i64 0, i32 31, i32 0, i32 0
  %28 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %28, i64 0, i32 0, i32 11
  %30 = load i8, i8* %29, align 8
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %19
  %34 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.20, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %19, %33
  %37 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %28, i64 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !4
  %39 = icmp ne i8 %38, 0
  br label %40

40:                                               ; preds = %1, %36
  %41 = phi i1 [ false, %1 ], [ %39, %36 ]
  ret i1 %41
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink12NGInlineNode16CheckConsistencyEv(%"class.blink::NGInlineNode"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12NGInlineNode45ShouldReportLetterSpacingUseCounterForTestingEPKNS_12LayoutObjectEbPKNS_15LayoutBlockFlowE(%"class.blink::NGInlineNode"* nocapture readnone, %"class.blink::LayoutObject"* nocapture readonly, i1 zeroext, %"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_135ShouldReportLetterSpacingUseCounterEPKNS_12LayoutObjectEbPKNS_15LayoutBlockFlowE(%"class.blink::LayoutObject"* %1, i1 zeroext %2, %"class.blink::LayoutBlockFlow"* %3)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.1970"* @_ZNK5blink12NGInlineNode20SvgCharacterDataListEv(%"class.blink::NGInlineNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %3 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %3 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %5 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %5, i64 213
  %7 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %6, align 8
  %8 = tail call %"struct.blink::NGInlineNodeData"* %7(%"class.blink::LayoutBlockFlow"* %3) #13
  %9 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %10, i64 0, i32 0
  ret %"class.WTF::Vector.1970"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.1976"* @_ZNK5blink12NGInlineNode22SvgTextLengthRangeListEv(%"class.blink::NGInlineNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %3 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %3 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %5 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %5, i64 213
  %7 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %6, align 8
  %8 = tail call %"struct.blink::NGInlineNodeData"* %7(%"class.blink::LayoutBlockFlow"* %3) #13
  %9 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %10, i64 0, i32 1
  ret %"class.WTF::Vector.1976"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.1976"* @_ZNK5blink12NGInlineNode20SvgTextPathRangeListEv(%"class.blink::NGInlineNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::NGInlineNode"* %0 to %"class.blink::LayoutBlockFlow"**
  %3 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %2, align 8
  %4 = bitcast %"class.blink::LayoutBlockFlow"* %3 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %5 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %5, i64 213
  %7 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %6, align 8
  %8 = tail call %"struct.blink::NGInlineNodeData"* %7(%"class.blink::LayoutBlockFlow"* %3) #13
  %9 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::SvgInlineNodeData"*, %"struct.blink::SvgInlineNodeData"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %10, i64 0, i32 2
  ret %"class.WTF::Vector.1976"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12NGInlineNode22NeedsShapingForTestingERKNS_12NGInlineItemE(%"class.blink::NGInlineItem"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %18

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %18, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 2, i32 0
  %13 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %12, align 8
  %14 = icmp eq %"class.blink::ShapeResult"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = tail call zeroext i1 @_ZNK5blink11ShapeResult18IsStartSafeToBreakEv(%"class.blink::ShapeResult"* nonnull %13) #13
  %17 = xor i1 %16, true
  br label %18

18:                                               ; preds = %1, %5, %11, %15
  %19 = phi i1 [ false, %1 ], [ false, %5 ], [ true, %11 ], [ %17, %15 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12NGInlineNode8ToStringEv(%"class.blink::NGInlineNode"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink8Document21NeedsLayoutTreeUpdateEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor8MismatchERKNS_17NGInlineItemsDataES3_(%"struct.blink::NGInlineItemsData"* dereferenceable(40), %"struct.blink::NGInlineItemsData"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::span.2203", align 8
  %4 = alloca %"class.base::span.2203", align 8
  %5 = alloca %"class.base::span.2204", align 8
  %6 = alloca %"class.base::span.2204", align 8
  %7 = alloca %"class.base::span.2203", align 8
  %8 = alloca %"class.base::span.2204", align 8
  %9 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %51, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.base::span.2203"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %3, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %23 = bitcast %"class.base::span.2203"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = load i32, i32* %22, align 4
  %25 = zext i32 %24 to i64
  store i64 %25, i64* %19, align 8
  %26 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %17
  %32 = bitcast %"class.base::span.2203"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %4, i64 0, i32 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %4, i64 0, i32 1
  %39 = bitcast i8** %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %39, align 8
  %40 = call i32 @_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKhLm18446744073709551615EEES5_EEjRKT_RKT0_(%"class.base::span.2203"* nonnull dereferenceable(16) %3, %"class.base::span.2203"* nonnull dereferenceable(16) %4)
  br label %85

41:                                               ; preds = %17
  %42 = bitcast %"class.base::span.2204"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %5, i64 0, i32 0, i32 0
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %5, i64 0, i32 1
  %49 = bitcast i16** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %49, align 8
  %50 = call i32 @_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKhLm18446744073709551615EEENS3_IKDsLm18446744073709551615EEEEEjRKT_RKT0_(%"class.base::span.2203"* nonnull dereferenceable(16) %3, %"class.base::span.2204"* nonnull dereferenceable(16) %5)
  br label %85

51:                                               ; preds = %2
  %52 = bitcast %"class.base::span.2204"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #13
  %53 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %6, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %6, i64 0, i32 1
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %57 = bitcast %"class.base::span.2204"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 16, i1 false)
  %58 = load i32, i32* %56, align 4
  %59 = zext i32 %58 to i64
  store i64 %59, i64* %53, align 8
  %60 = bitcast i16** %54 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %51
  %66 = bitcast %"class.base::span.2203"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #13
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %7, i64 0, i32 0, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %7, i64 0, i32 1
  %73 = bitcast i8** %72 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %73, align 8
  %74 = call i32 @_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKDsLm18446744073709551615EEENS3_IKhLm18446744073709551615EEEEEjRKT_RKT0_(%"class.base::span.2204"* nonnull dereferenceable(16) %6, %"class.base::span.2203"* nonnull dereferenceable(16) %7)
  br label %85

75:                                               ; preds = %51
  %76 = bitcast %"class.base::span.2204"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #13
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %8, i64 0, i32 0, i32 0
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %8, i64 0, i32 1
  %83 = bitcast i16** %82 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %83, align 8
  %84 = call i32 @_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKDsLm18446744073709551615EEES5_EEjRKT_RKT0_(%"class.base::span.2204"* nonnull dereferenceable(16) %6, %"class.base::span.2204"* nonnull dereferenceable(16) %8)
  br label %85

85:                                               ; preds = %65, %75, %31, %41
  %86 = phi i8* [ %42, %41 ], [ %32, %31 ], [ %76, %75 ], [ %66, %65 ]
  %87 = phi i8* [ %18, %41 ], [ %18, %31 ], [ %52, %75 ], [ %52, %65 ]
  %88 = phi i32 [ %50, %41 ], [ %40, %31 ], [ %84, %75 ], [ %74, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndERKNS_17NGInlineItemsDataES3_j(%"struct.blink::NGInlineItemsData"* dereferenceable(40), %"struct.blink::NGInlineItemsData"* dereferenceable(40), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.base::span.2203", align 8
  %5 = alloca %"class.base::span.2203", align 8
  %6 = alloca %"class.base::span.2203", align 8
  %7 = alloca %"class.base::span.2203", align 8
  %8 = alloca %"class.base::span.2204", align 8
  %9 = alloca %"class.base::span.2204", align 8
  %10 = alloca %"class.base::span.2204", align 8
  %11 = alloca %"class.base::span.2204", align 8
  %12 = alloca %"class.base::span.2203", align 8
  %13 = alloca %"class.base::span.2203", align 8
  %14 = alloca %"class.base::span.2204", align 8
  %15 = alloca %"class.base::span.2204", align 8
  %16 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sub i32 %21, %2
  %25 = sub i32 %23, %2
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %83, label %30

30:                                               ; preds = %3
  %31 = bitcast %"class.base::span.2203"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %4, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %4, i64 0, i32 1
  %34 = bitcast %"class.base::span.2203"* %5 to i8*
  %35 = bitcast %"class.base::span.2203"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %37 = load i32, i32* %20, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %5, i64 0, i32 0, i32 0
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %5, i64 0, i32 1
  %41 = bitcast i8** %40 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %41, align 8
  %42 = zext i32 %24 to i64
  %43 = zext i32 %2 to i64
  %44 = call { i64, i8* } @_ZNK4base4spanIKhLm18446744073709551615EE7subspanEmm(%"class.base::span.2203"* nonnull %5, i64 %42, i64 %43) #13
  %45 = extractvalue { i64, i8* } %44, 0
  store i64 %45, i64* %32, align 8
  %46 = extractvalue { i64, i8* } %44, 1
  store i8* %46, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %30
  %52 = bitcast %"class.base::span.2203"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #13
  %53 = bitcast %"class.base::span.2203"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #13
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %55 = load i32, i32* %22, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %7, i64 0, i32 0, i32 0
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %7, i64 0, i32 1
  %59 = bitcast i8** %58 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %59, align 8
  %60 = zext i32 %25 to i64
  %61 = call { i64, i8* } @_ZNK4base4spanIKhLm18446744073709551615EE7subspanEmm(%"class.base::span.2203"* nonnull %7, i64 %60, i64 %43) #13
  %62 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %6, i64 0, i32 0, i32 0
  %63 = extractvalue { i64, i8* } %61, 0
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %6, i64 0, i32 1
  %65 = extractvalue { i64, i8* } %61, 1
  store i8* %65, i8** %64, align 8
  %66 = call i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKhLm18446744073709551615EEES5_EEjRKT_RKT0_(%"class.base::span.2203"* nonnull dereferenceable(16) %4, %"class.base::span.2203"* nonnull dereferenceable(16) %6)
  br label %136

67:                                               ; preds = %30
  %68 = bitcast %"class.base::span.2204"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #13
  %69 = bitcast %"class.base::span.2204"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #13
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %71 = load i32, i32* %22, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %9, i64 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %9, i64 0, i32 1
  %75 = bitcast i16** %74 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %75, align 8
  %76 = zext i32 %25 to i64
  %77 = call { i64, i16* } @_ZNK4base4spanIKDsLm18446744073709551615EE7subspanEmm(%"class.base::span.2204"* nonnull %9, i64 %76, i64 %43) #13
  %78 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %8, i64 0, i32 0, i32 0
  %79 = extractvalue { i64, i16* } %77, 0
  store i64 %79, i64* %78, align 8
  %80 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %8, i64 0, i32 1
  %81 = extractvalue { i64, i16* } %77, 1
  store i16* %81, i16** %80, align 8
  %82 = call i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKhLm18446744073709551615EEENS3_IKDsLm18446744073709551615EEEEEjRKT_RKT0_(%"class.base::span.2203"* nonnull dereferenceable(16) %4, %"class.base::span.2204"* nonnull dereferenceable(16) %8)
  br label %136

83:                                               ; preds = %3
  %84 = bitcast %"class.base::span.2204"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #13
  %85 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %10, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %10, i64 0, i32 1
  %87 = bitcast %"class.base::span.2204"* %11 to i8*
  %88 = bitcast %"class.base::span.2204"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %90 = load i32, i32* %20, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %11, i64 0, i32 0, i32 0
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %11, i64 0, i32 1
  %94 = bitcast i16** %93 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %89, %"class.WTF::StringImpl"** %94, align 8
  %95 = zext i32 %24 to i64
  %96 = zext i32 %2 to i64
  %97 = call { i64, i16* } @_ZNK4base4spanIKDsLm18446744073709551615EE7subspanEmm(%"class.base::span.2204"* nonnull %11, i64 %95, i64 %96) #13
  %98 = extractvalue { i64, i16* } %97, 0
  store i64 %98, i64* %85, align 8
  %99 = extractvalue { i64, i16* } %97, 1
  store i16* %99, i16** %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %83
  %105 = bitcast %"class.base::span.2203"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #13
  %106 = bitcast %"class.base::span.2203"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #13
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %108 = load i32, i32* %22, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %13, i64 0, i32 0, i32 0
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %13, i64 0, i32 1
  %112 = bitcast i8** %111 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %112, align 8
  %113 = zext i32 %25 to i64
  %114 = call { i64, i8* } @_ZNK4base4spanIKhLm18446744073709551615EE7subspanEmm(%"class.base::span.2203"* nonnull %13, i64 %113, i64 %96) #13
  %115 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %12, i64 0, i32 0, i32 0
  %116 = extractvalue { i64, i8* } %114, 0
  store i64 %116, i64* %115, align 8
  %117 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %12, i64 0, i32 1
  %118 = extractvalue { i64, i8* } %114, 1
  store i8* %118, i8** %117, align 8
  %119 = call i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKDsLm18446744073709551615EEENS3_IKhLm18446744073709551615EEEEEjRKT_RKT0_(%"class.base::span.2204"* nonnull dereferenceable(16) %10, %"class.base::span.2203"* nonnull dereferenceable(16) %12)
  br label %136

120:                                              ; preds = %83
  %121 = bitcast %"class.base::span.2204"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #13
  %122 = bitcast %"class.base::span.2204"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #13
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %124 = load i32, i32* %22, align 4
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %15, i64 0, i32 0, i32 0
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %15, i64 0, i32 1
  %128 = bitcast i16** %127 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %128, align 8
  %129 = zext i32 %25 to i64
  %130 = call { i64, i16* } @_ZNK4base4spanIKDsLm18446744073709551615EE7subspanEmm(%"class.base::span.2204"* nonnull %15, i64 %129, i64 %96) #13
  %131 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %14, i64 0, i32 0, i32 0
  %132 = extractvalue { i64, i16* } %130, 0
  store i64 %132, i64* %131, align 8
  %133 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %14, i64 0, i32 1
  %134 = extractvalue { i64, i16* } %130, 1
  store i16* %134, i16** %133, align 8
  %135 = call i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKDsLm18446744073709551615EEES5_EEjRKT_RKT0_(%"class.base::span.2204"* nonnull dereferenceable(16) %10, %"class.base::span.2204"* nonnull dereferenceable(16) %14)
  br label %136

136:                                              ; preds = %104, %120, %51, %67
  %137 = phi i8* [ %69, %67 ], [ %53, %51 ], [ %122, %120 ], [ %106, %104 ]
  %138 = phi i8* [ %68, %67 ], [ %52, %51 ], [ %121, %120 ], [ %105, %104 ]
  %139 = phi i8* [ %31, %67 ], [ %31, %51 ], [ %84, %120 ], [ %84, %104 ]
  %140 = phi i32 [ %82, %67 ], [ %66, %51 ], [ %135, %120 ], [ %119, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #13
  ret i32 %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink22NGInlineNodeDataEditor14CopyItemBeforeERKNS_12NGInlineItemEj(%"class.blink::NGInlineItem"* noalias sret, %"class.blink::NGInlineNodeDataEditor"*, %"class.blink::NGInlineItem"* dereferenceable(32), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %2, i64 0, i32 2, i32 0
  %8 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %7, align 8
  %9 = icmp eq %"class.blink::ShapeResult"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %8, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = add i32 %3, -1
  %16 = icmp ugt i32 %15, %6
  br i1 %16, label %17, label %22

17:                                               ; preds = %14
  tail call void @_ZNK5blink11ShapeResult18EnsurePositionDataEv(%"class.blink::ShapeResult"* nonnull %8) #13
  %18 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %7, align 8
  %19 = tail call i32 @_ZNK5blink11ShapeResult31CachedPreviousSafeToBreakOffsetEj(%"class.blink::ShapeResult"* %18, i32 %15) #13
  %20 = load i32, i32* %5, align 8
  %21 = icmp eq i32 %20, %19
  br i1 %21, label %22, label %24

22:                                               ; preds = %4, %10, %14, %17
  %23 = phi i32 [ %20, %17 ], [ %6, %14 ], [ %6, %10 ], [ %6, %4 ]
  tail call void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %2, i32 %23, i32 %3, %"class.blink::ShapeResult"* null) #13
  br label %27

24:                                               ; preds = %17
  %25 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %7, align 8
  %26 = tail call %"class.blink::ShapeResult"* @_ZNK5blink11ShapeResult8SubRangeEjj(%"class.blink::ShapeResult"* %25, i32 %20, i32 %19) #13
  tail call void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %2, i32 %20, i32 %19, %"class.blink::ShapeResult"* %26) #13
  br label %27

27:                                               ; preds = %24, %22
  ret void
}

declare void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"* dereferenceable(32), i32, i32, %"class.blink::ShapeResult"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink22NGInlineNodeDataEditor13CopyItemAfterERKNS_12NGInlineItemEj(%"class.blink::NGInlineItem"* noalias sret, %"class.blink::NGInlineNodeDataEditor"*, %"class.blink::NGInlineItem"* dereferenceable(32), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %2, i64 0, i32 2, i32 0
  %8 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %7, align 8
  %9 = icmp eq %"class.blink::ShapeResult"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %8, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = add i32 %3, 1
  %16 = icmp ult i32 %15, %6
  br i1 %16, label %17, label %22

17:                                               ; preds = %14
  tail call void @_ZNK5blink11ShapeResult18EnsurePositionDataEv(%"class.blink::ShapeResult"* nonnull %8) #13
  %18 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %7, align 8
  %19 = tail call i32 @_ZNK5blink11ShapeResult27CachedNextSafeToBreakOffsetEj(%"class.blink::ShapeResult"* %18, i32 %15) #13
  %20 = load i32, i32* %5, align 4
  %21 = icmp eq i32 %20, %19
  br i1 %21, label %22, label %24

22:                                               ; preds = %4, %10, %14, %17
  %23 = phi i32 [ %20, %17 ], [ %6, %14 ], [ %6, %10 ], [ %6, %4 ]
  tail call void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %2, i32 %3, i32 %23, %"class.blink::ShapeResult"* null) #13
  br label %27

24:                                               ; preds = %17
  %25 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %7, align 8
  %26 = tail call %"class.blink::ShapeResult"* @_ZNK5blink11ShapeResult8SubRangeEjj(%"class.blink::ShapeResult"* %25, i32 %19, i32 %20) #13
  tail call void @_ZN5blink12NGInlineItemC1ERKS0_jj13scoped_refptrIKNS_11ShapeResultEE(%"class.blink::NGInlineItem"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %2, i32 %19, i32 %20, %"class.blink::ShapeResult"* %26) #13
  br label %27

27:                                               ; preds = %24, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKhLm18446744073709551615EEES5_EEjRKT_RKT0_(%"class.base::span.2203"* dereferenceable(16), %"class.base::span.2203"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"struct.std::__1::pair.2205", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = bitcast %"struct.std::__1::pair.2205"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"struct.std::__1::pair.2205", %"struct.std::__1::pair.2205"* %7, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::pair.2205", %"struct.std::__1::pair.2205"* %7, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::pair.2205"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = load i8*, i8** %16, align 8, !noalias !48
  %19 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8, !noalias !48
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %8, i8* %18, i8* %18, i8* %21) #13
  %22 = load i8*, i8** %16, align 8, !noalias !51
  %23 = load i64, i64* %19, align 8, !noalias !51
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %9, i8* %22, i8* %24, i8* %24) #13
  %25 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %1, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8, !noalias !54
  %27 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %1, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !noalias !54
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %10, i8* %26, i8* %26, i8* %29) #13
  %30 = load i8*, i8** %25, align 8, !noalias !57
  %31 = load i64, i64* %27, align 8, !noalias !57
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %11, i8* %30, i8* %32, i8* %32) #13
  %33 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  %34 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  %35 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  %36 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  %37 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13, !noalias !60
  %38 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13, !noalias !60
  %39 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #13, !noalias !60
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13, !noalias !60
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %33, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %34, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %35, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %36, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #13, !noalias !63
  %41 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8, !noalias !63
  %43 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8, !noalias !63
  %45 = icmp eq i8* %42, %44
  br i1 %45, label %65, label %46

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %48 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  br label %49

49:                                               ; preds = %59, %46
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %3) #13, !noalias !63
  %50 = load i8*, i8** %47, align 8, !noalias !63
  %51 = load i8*, i8** %48, align 8, !noalias !63
  %52 = icmp eq i8* %50, %51
  br i1 %52, label %65, label %53

53:                                               ; preds = %49
  %54 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6) #13, !noalias !63
  %55 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4) #13, !noalias !63
  %56 = load i8, i8* %54, align 1, !noalias !63
  %57 = load i8, i8* %55, align 1, !noalias !63
  %58 = icmp eq i8 %56, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %53
  %60 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEppEv(%"class.base::CheckedContiguousIterator"* nonnull %6) #13, !noalias !63
  %61 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4) #13, !noalias !63
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #13, !noalias !63
  %62 = load i8*, i8** %41, align 8, !noalias !63
  %63 = load i8*, i8** %43, align 8, !noalias !63
  %64 = icmp eq i8* %62, %63
  br i1 %64, label %65, label %49

65:                                               ; preds = %49, %53, %59, %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %37, i64 24, i1 false) #13
  %66 = getelementptr inbounds %"struct.std::__1::pair.2205", %"struct.std::__1::pair.2205"* %7, i64 0, i32 1
  %67 = bitcast %"class.base::CheckedContiguousIterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %39, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13, !noalias !60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13, !noalias !60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13, !noalias !60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13, !noalias !60
  %68 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #13
  %69 = load i8*, i8** %16, align 8, !noalias !66
  %70 = load i64, i64* %19, align 8, !noalias !66
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %12, i8* %69, i8* %69, i8* %71) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %14, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %12) #13
  %72 = bitcast i8** %15 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %12, i64 0, i32 1
  %75 = bitcast i8** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %73, %76
  %78 = trunc i64 %77 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #13
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKhLm18446744073709551615EEENS3_IKDsLm18446744073709551615EEEEEjRKT_RKT0_(%"class.base::span.2203"* dereferenceable(16), %"class.base::span.2204"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"struct.std::__1::pair.2206", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = bitcast %"struct.std::__1::pair.2206"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"struct.std::__1::pair.2206", %"struct.std::__1::pair.2206"* %7, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::pair.2206", %"struct.std::__1::pair.2206"* %7, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::pair.2206"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = load i8*, i8** %16, align 8, !noalias !69
  %19 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8, !noalias !69
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %8, i8* %18, i8* %18, i8* %21) #13
  %22 = load i8*, i8** %16, align 8, !noalias !72
  %23 = load i64, i64* %19, align 8, !noalias !72
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %9, i8* %22, i8* %24, i8* %24) #13
  %25 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %1, i64 0, i32 1
  %26 = load i16*, i16** %25, align 8, !noalias !75
  %27 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %1, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !noalias !75
  %29 = getelementptr inbounds i16, i16* %26, i64 %28
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %10, i16* %26, i16* %26, i16* %29) #13
  %30 = load i16*, i16** %25, align 8, !noalias !78
  %31 = load i64, i64* %27, align 8, !noalias !78
  %32 = getelementptr inbounds i16, i16* %30, i64 %31
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %11, i16* %30, i16* %32, i16* %32) #13
  %33 = bitcast %"class.base::CheckedContiguousIterator.2207"* %11 to i8*
  %34 = bitcast %"class.base::CheckedContiguousIterator.2207"* %10 to i8*
  %35 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  %36 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  %37 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13, !noalias !81
  %38 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13, !noalias !81
  %39 = bitcast %"class.base::CheckedContiguousIterator.2207"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #13, !noalias !81
  %40 = bitcast %"class.base::CheckedContiguousIterator.2207"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13, !noalias !81
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %33, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %34, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %35, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %36, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #13, !noalias !84
  %41 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8, !noalias !84
  %43 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8, !noalias !84
  %45 = icmp eq i8* %42, %44
  br i1 %45, label %67, label %46

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %4, i64 0, i32 1
  %48 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %3, i64 0, i32 1
  br label %49

49:                                               ; preds = %61, %46
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %4, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %3) #13, !noalias !84
  %50 = load i16*, i16** %47, align 8, !noalias !84
  %51 = load i16*, i16** %48, align 8, !noalias !84
  %52 = icmp eq i16* %50, %51
  br i1 %52, label %67, label %53

53:                                               ; preds = %49
  %54 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6) #13, !noalias !84
  %55 = call dereferenceable(2) i16* @_ZNK4base25CheckedContiguousIteratorIKDsEdeEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %4) #13, !noalias !84
  %56 = load i8, i8* %54, align 1, !noalias !84
  %57 = zext i8 %56 to i32
  %58 = load i16, i16* %55, align 2, !noalias !84
  %59 = zext i16 %58 to i32
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %53
  %62 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEppEv(%"class.base::CheckedContiguousIterator"* nonnull %6) #13, !noalias !84
  %63 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEppEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %4) #13, !noalias !84
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #13, !noalias !84
  %64 = load i8*, i8** %41, align 8, !noalias !84
  %65 = load i8*, i8** %43, align 8, !noalias !84
  %66 = icmp eq i8* %64, %65
  br i1 %66, label %67, label %49

67:                                               ; preds = %49, %53, %61, %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %37, i64 24, i1 false) #13
  %68 = getelementptr inbounds %"struct.std::__1::pair.2206", %"struct.std::__1::pair.2206"* %7, i64 0, i32 1
  %69 = bitcast %"class.base::CheckedContiguousIterator.2207"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %39, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13, !noalias !81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13, !noalias !81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13, !noalias !81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13, !noalias !81
  %70 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #13
  %71 = load i8*, i8** %16, align 8, !noalias !87
  %72 = load i64, i64* %19, align 8, !noalias !87
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %12, i8* %71, i8* %71, i8* %73) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %14, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %12) #13
  %74 = bitcast i8** %15 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %12, i64 0, i32 1
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %75, %78
  %80 = trunc i64 %79 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #13
  ret i32 %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKDsLm18446744073709551615EEENS3_IKhLm18446744073709551615EEEEEjRKT_RKT0_(%"class.base::span.2204"* dereferenceable(16), %"class.base::span.2203"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %7 = alloca %"struct.std::__1::pair.2211", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %13 = bitcast %"struct.std::__1::pair.2211"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"struct.std::__1::pair.2211", %"struct.std::__1::pair.2211"* %7, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::pair.2211", %"struct.std::__1::pair.2211"* %7, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::pair.2211"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = load i16*, i16** %16, align 8, !noalias !90
  %19 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8, !noalias !90
  %21 = getelementptr inbounds i16, i16* %18, i64 %20
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %8, i16* %18, i16* %18, i16* %21) #13
  %22 = load i16*, i16** %16, align 8, !noalias !93
  %23 = load i64, i64* %19, align 8, !noalias !93
  %24 = getelementptr inbounds i16, i16* %22, i64 %23
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %9, i16* %22, i16* %24, i16* %24) #13
  %25 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %1, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8, !noalias !96
  %27 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %1, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !noalias !96
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %10, i8* %26, i8* %26, i8* %29) #13
  %30 = load i8*, i8** %25, align 8, !noalias !99
  %31 = load i64, i64* %27, align 8, !noalias !99
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %11, i8* %30, i8* %32, i8* %32) #13
  %33 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  %34 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  %35 = bitcast %"class.base::CheckedContiguousIterator.2207"* %9 to i8*
  %36 = bitcast %"class.base::CheckedContiguousIterator.2207"* %8 to i8*
  %37 = bitcast %"class.base::CheckedContiguousIterator.2207"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13, !noalias !102
  %38 = bitcast %"class.base::CheckedContiguousIterator.2207"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13, !noalias !102
  %39 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #13, !noalias !102
  %40 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13, !noalias !102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %33, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %34, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %35, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %36, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %6, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %5) #13, !noalias !105
  %41 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %6, i64 0, i32 1
  %42 = load i16*, i16** %41, align 8, !noalias !105
  %43 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %5, i64 0, i32 1
  %44 = load i16*, i16** %43, align 8, !noalias !105
  %45 = icmp eq i16* %42, %44
  br i1 %45, label %67, label %46

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %48 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  br label %49

49:                                               ; preds = %61, %46
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %3) #13, !noalias !105
  %50 = load i8*, i8** %47, align 8, !noalias !105
  %51 = load i8*, i8** %48, align 8, !noalias !105
  %52 = icmp eq i8* %50, %51
  br i1 %52, label %67, label %53

53:                                               ; preds = %49
  %54 = call dereferenceable(2) i16* @_ZNK4base25CheckedContiguousIteratorIKDsEdeEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %6) #13, !noalias !105
  %55 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4) #13, !noalias !105
  %56 = load i16, i16* %54, align 2, !noalias !105
  %57 = zext i16 %56 to i32
  %58 = load i8, i8* %55, align 1, !noalias !105
  %59 = zext i8 %58 to i32
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %53
  %62 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEppEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %6) #13, !noalias !105
  %63 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4) #13, !noalias !105
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %6, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %5) #13, !noalias !105
  %64 = load i16*, i16** %41, align 8, !noalias !105
  %65 = load i16*, i16** %43, align 8, !noalias !105
  %66 = icmp eq i16* %64, %65
  br i1 %66, label %67, label %49

67:                                               ; preds = %49, %53, %61, %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %37, i64 24, i1 false) #13
  %68 = getelementptr inbounds %"struct.std::__1::pair.2211", %"struct.std::__1::pair.2211"* %7, i64 0, i32 1
  %69 = bitcast %"class.base::CheckedContiguousIterator"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %39, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13, !noalias !102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13, !noalias !102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13, !noalias !102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13, !noalias !102
  %70 = bitcast %"class.base::CheckedContiguousIterator.2207"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #13
  %71 = load i16*, i16** %16, align 8, !noalias !108
  %72 = load i64, i64* %19, align 8, !noalias !108
  %73 = getelementptr inbounds i16, i16* %71, i64 %72
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %12, i16* %71, i16* %71, i16* %73) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %14, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %12) #13
  %74 = bitcast i16** %15 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %12, i64 0, i32 1
  %77 = bitcast i16** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %75, %78
  %80 = lshr exact i64 %79, 1
  %81 = trunc i64 %80 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #13
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor16MismatchInternalIN4base4spanIKDsLm18446744073709551615EEES5_EEjRKT_RKT0_(%"class.base::span.2204"* dereferenceable(16), %"class.base::span.2204"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %7 = alloca %"struct.std::__1::pair.2213", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %13 = bitcast %"struct.std::__1::pair.2213"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"struct.std::__1::pair.2213", %"struct.std::__1::pair.2213"* %7, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.std::__1::pair.2213", %"struct.std::__1::pair.2213"* %7, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 1
  %17 = bitcast %"struct.std::__1::pair.2213"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = load i16*, i16** %16, align 8, !noalias !111
  %19 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8, !noalias !111
  %21 = getelementptr inbounds i16, i16* %18, i64 %20
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %8, i16* %18, i16* %18, i16* %21) #13
  %22 = load i16*, i16** %16, align 8, !noalias !114
  %23 = load i64, i64* %19, align 8, !noalias !114
  %24 = getelementptr inbounds i16, i16* %22, i64 %23
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %9, i16* %22, i16* %24, i16* %24) #13
  %25 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %1, i64 0, i32 1
  %26 = load i16*, i16** %25, align 8, !noalias !117
  %27 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %1, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !noalias !117
  %29 = getelementptr inbounds i16, i16* %26, i64 %28
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %10, i16* %26, i16* %26, i16* %29) #13
  %30 = load i16*, i16** %25, align 8, !noalias !120
  %31 = load i64, i64* %27, align 8, !noalias !120
  %32 = getelementptr inbounds i16, i16* %30, i64 %31
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %11, i16* %30, i16* %32, i16* %32) #13
  %33 = bitcast %"class.base::CheckedContiguousIterator.2207"* %11 to i8*
  %34 = bitcast %"class.base::CheckedContiguousIterator.2207"* %10 to i8*
  %35 = bitcast %"class.base::CheckedContiguousIterator.2207"* %9 to i8*
  %36 = bitcast %"class.base::CheckedContiguousIterator.2207"* %8 to i8*
  %37 = bitcast %"class.base::CheckedContiguousIterator.2207"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13, !noalias !123
  %38 = bitcast %"class.base::CheckedContiguousIterator.2207"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13, !noalias !123
  %39 = bitcast %"class.base::CheckedContiguousIterator.2207"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #13, !noalias !123
  %40 = bitcast %"class.base::CheckedContiguousIterator.2207"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13, !noalias !123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %33, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %34, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %35, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %36, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %6, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %5) #13, !noalias !126
  %41 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %6, i64 0, i32 1
  %42 = load i16*, i16** %41, align 8, !noalias !126
  %43 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %5, i64 0, i32 1
  %44 = load i16*, i16** %43, align 8, !noalias !126
  %45 = icmp eq i16* %42, %44
  br i1 %45, label %65, label %46

46:                                               ; preds = %2
  %47 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %4, i64 0, i32 1
  %48 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %3, i64 0, i32 1
  br label %49

49:                                               ; preds = %59, %46
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %4, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %3) #13, !noalias !126
  %50 = load i16*, i16** %47, align 8, !noalias !126
  %51 = load i16*, i16** %48, align 8, !noalias !126
  %52 = icmp eq i16* %50, %51
  br i1 %52, label %65, label %53

53:                                               ; preds = %49
  %54 = call dereferenceable(2) i16* @_ZNK4base25CheckedContiguousIteratorIKDsEdeEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %6) #13, !noalias !126
  %55 = call dereferenceable(2) i16* @_ZNK4base25CheckedContiguousIteratorIKDsEdeEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %4) #13, !noalias !126
  %56 = load i16, i16* %54, align 2, !noalias !126
  %57 = load i16, i16* %55, align 2, !noalias !126
  %58 = icmp eq i16 %56, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %53
  %60 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEppEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %6) #13, !noalias !126
  %61 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEppEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %4) #13, !noalias !126
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %6, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %5) #13, !noalias !126
  %62 = load i16*, i16** %41, align 8, !noalias !126
  %63 = load i16*, i16** %43, align 8, !noalias !126
  %64 = icmp eq i16* %62, %63
  br i1 %64, label %65, label %49

65:                                               ; preds = %49, %53, %59, %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %37, i64 24, i1 false) #13
  %66 = getelementptr inbounds %"struct.std::__1::pair.2213", %"struct.std::__1::pair.2213"* %7, i64 0, i32 1
  %67 = bitcast %"class.base::CheckedContiguousIterator.2207"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %39, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13, !noalias !123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13, !noalias !123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #13, !noalias !123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13, !noalias !123
  %68 = bitcast %"class.base::CheckedContiguousIterator.2207"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #13
  %69 = load i16*, i16** %16, align 8, !noalias !129
  %70 = load i64, i64* %19, align 8, !noalias !129
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %12, i16* %69, i16* %69, i16* %71) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %14, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %12) #13
  %72 = bitcast i16** %15 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %12, i64 0, i32 1
  %75 = bitcast i16** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %73, %76
  %78 = lshr exact i64 %77, 1
  %79 = trunc i64 %78 to i32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #13
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i8*, i8** %7, align 8
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i8*, i8** %7, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i8*, i8** %11, align 8
  %15 = load i8*, i8** %12, align 8
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %20, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i8*, i8** %32, align 8
  %36 = load i8*, i8** %33, align 8
  %37 = icmp eq i8* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i8** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %42 = bitcast i8** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %43) #13
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #13
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #13
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"*, i8*, i8*, i8*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %14 = ptrtoint i8* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8* %2 to i64
  %18 = bitcast i8** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast i8** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %30 = bitcast i8** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8*, i8** %8, align 8
  %43 = load i8*, i8** %9, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %49 = bitcast i8** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(2) i16* @_ZNK4base25CheckedContiguousIteratorIKDsEdeEv(%"class.base::CheckedContiguousIterator.2207"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i16*, i16** %7, align 8
  %11 = load i16*, i16** %8, align 8
  %12 = icmp eq i16* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i16** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %17 = bitcast i16** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i16*, i16** %7, align 8
  ret i16* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEppEv(%"class.base::CheckedContiguousIterator.2207"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i16*, i16** %7, align 8
  %11 = load i16*, i16** %8, align 8
  %12 = icmp eq i16* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i16** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %17 = bitcast i16** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i16*, i16** %7, align 8
  %27 = getelementptr inbounds i16, i16* %26, i64 1
  store i16* %27, i16** %7, align 8
  ret %"class.base::CheckedContiguousIterator.2207"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"*, %"class.base::CheckedContiguousIterator.2207"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i16*, i16** %11, align 8
  %15 = load i16*, i16** %12, align 8
  %16 = icmp eq i16* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator.2207"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %21 = bitcast %"class.base::CheckedContiguousIterator.2207"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %20, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i16*, i16** %32, align 8
  %36 = load i16*, i16** %33, align 8
  %37 = icmp eq i16* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i16** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %42 = bitcast i16** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %43) #13
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #13
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i16**
  %4 = load i16*, i16** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZStlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKDs(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i16* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZStlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKDs(%"class.std::__1::basic_ostream"* dereferenceable(160), i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"*, i16*, i16*, i16*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i16*, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i16*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i16* %1, i16** %7, align 8
  store i16* %2, i16** %8, align 8
  store i16* %3, i16** %9, align 8
  %14 = ptrtoint i16* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator.2207"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 1
  %17 = ptrtoint i16* %2 to i64
  %18 = bitcast i16** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 2
  %20 = ptrtoint i16* %3 to i64
  %21 = bitcast i16** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i16* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i16** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %30 = bitcast i16** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i16*, i16** %8, align 8
  %43 = load i16*, i16** %9, align 8
  %44 = icmp ugt i16* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i16** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %49 = bitcast i16** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8* } @_ZNK4base4spanIKhLm18446744073709551615EE7subspanEmm(%"class.base::span.2203"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #13
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %12 = load i64, i64* %6, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %7, %3 ], [ %12, %9 ]
  %15 = icmp eq i64 %2, -1
  %16 = sub i64 %14, %1
  br i1 %15, label %22, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %16, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0)) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %13, %19, %17
  %23 = phi i64 [ %2, %17 ], [ %2, %19 ], [ %16, %13 ]
  %24 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %1
  %27 = insertvalue { i64, i8* } undef, i64 %23, 0
  %28 = insertvalue { i64, i8* } %27, i8* %26, 1
  ret { i64, i8* } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKhLm18446744073709551615EEES5_EEjRKT_RKT0_(%"class.base::span.2203"* dereferenceable(16), %"class.base::span.2203"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = alloca %"class.std::__1::reverse_iterator", align 8
  %14 = alloca %"class.std::__1::reverse_iterator", align 8
  %15 = alloca %"class.std::__1::reverse_iterator", align 8
  %16 = alloca %"class.std::__1::reverse_iterator", align 8
  %17 = alloca %"class.base::CheckedContiguousIterator", align 8
  %18 = alloca %"class.base::CheckedContiguousIterator", align 8
  %19 = alloca %"class.base::CheckedContiguousIterator", align 8
  %20 = alloca %"class.base::CheckedContiguousIterator", align 8
  %21 = alloca %"class.base::CheckedContiguousIterator", align 8
  %22 = alloca %"class.base::CheckedContiguousIterator", align 8
  %23 = alloca %"class.base::CheckedContiguousIterator", align 8
  %24 = alloca %"class.base::CheckedContiguousIterator", align 8
  %25 = alloca %"struct.std::__1::pair.2215", align 8
  %26 = alloca %"class.std::__1::reverse_iterator", align 8
  %27 = alloca %"class.std::__1::reverse_iterator", align 8
  %28 = alloca %"class.std::__1::reverse_iterator", align 8
  %29 = alloca %"class.std::__1::reverse_iterator", align 8
  %30 = alloca %"class.std::__1::reverse_iterator", align 8
  %31 = bitcast %"struct.std::__1::pair.2215"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %31)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 96, i1 false)
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8, !noalias !132
  %35 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8, !noalias !132
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %24, i8* %34, i8* %37, i8* %37) #13, !noalias !137
  %38 = bitcast %"class.base::CheckedContiguousIterator"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %32, i64 24, i1 false) #13, !noalias !137
  %39 = bitcast %"class.std::__1::reverse_iterator"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %32, i64 24, i1 false) #13
  %40 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %26, i64 0, i32 1
  %41 = bitcast %"class.base::CheckedContiguousIterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %38, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %42 = bitcast %"class.base::CheckedContiguousIterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42)
  %43 = load i8*, i8** %33, align 8, !noalias !138
  %44 = load i64, i64* %35, align 8, !noalias !138
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %22, i8* %43, i8* %43, i8* %45) #13, !noalias !143
  %46 = bitcast %"class.base::CheckedContiguousIterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %42, i64 24, i1 false) #13, !noalias !143
  %47 = bitcast %"class.std::__1::reverse_iterator"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* nonnull align 8 %42, i64 24, i1 false) #13
  %48 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %27, i64 0, i32 1
  %49 = bitcast %"class.base::CheckedContiguousIterator"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %46, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42)
  %50 = bitcast %"class.base::CheckedContiguousIterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %1, i64 0, i32 1
  %52 = load i8*, i8** %51, align 8, !noalias !144
  %53 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %1, i64 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !144
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %20, i8* %52, i8* %55, i8* %55) #13, !noalias !149
  %56 = bitcast %"class.base::CheckedContiguousIterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %50, i64 24, i1 false) #13, !noalias !149
  %57 = bitcast %"class.std::__1::reverse_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %50, i64 24, i1 false) #13
  %58 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %28, i64 0, i32 1
  %59 = bitcast %"class.base::CheckedContiguousIterator"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* nonnull align 8 %56, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50)
  %60 = bitcast %"class.base::CheckedContiguousIterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60)
  %61 = load i8*, i8** %51, align 8, !noalias !150
  %62 = load i64, i64* %53, align 8, !noalias !150
  %63 = getelementptr inbounds i8, i8* %61, i64 %62
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %18, i8* %61, i8* %61, i8* %63) #13, !noalias !155
  %64 = bitcast %"class.base::CheckedContiguousIterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %60, i64 24, i1 false) #13, !noalias !155
  %65 = bitcast %"class.std::__1::reverse_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* nonnull align 8 %60, i64 24, i1 false) #13
  %66 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %29, i64 0, i32 1
  %67 = bitcast %"class.base::CheckedContiguousIterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %64, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60)
  %68 = bitcast %"class.std::__1::reverse_iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #13, !noalias !156
  %69 = bitcast %"class.std::__1::reverse_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %69)
  %70 = bitcast %"class.std::__1::reverse_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %70) #13, !noalias !156
  %71 = bitcast %"class.std::__1::reverse_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %71)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %65, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %57, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* nonnull align 8 %47, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* nonnull align 8 %39, i64 48, i1 false)
  %72 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  %73 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  %74 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13, !noalias !159
  %75 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %16, i64 0, i32 1
  %76 = bitcast %"class.base::CheckedContiguousIterator"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %76, i64 24, i1 false) #13, !noalias !159
  %77 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13, !noalias !159
  %78 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %15, i64 0, i32 1
  %79 = bitcast %"class.base::CheckedContiguousIterator"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %79, i64 24, i1 false) #13, !noalias !159
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %11, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %12) #13, !noalias !159
  %80 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %11, i64 0, i32 1
  %81 = load i8*, i8** %80, align 8, !noalias !159
  %82 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %12, i64 0, i32 1
  %83 = load i8*, i8** %82, align 8, !noalias !159
  %84 = icmp eq i8* %81, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13, !noalias !159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13, !noalias !159
  br i1 %84, label %112, label %85

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %14, i64 0, i32 1
  %87 = bitcast %"class.base::CheckedContiguousIterator"* %86 to i8*
  %88 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  %89 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %13, i64 0, i32 1
  %90 = bitcast %"class.base::CheckedContiguousIterator"* %89 to i8*
  %91 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %9, i64 0, i32 1
  %92 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %93 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  br label %94

94:                                               ; preds = %106, %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13, !noalias !159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 %87, i64 24, i1 false) #13, !noalias !159
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13, !noalias !159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 %90, i64 24, i1 false) #13, !noalias !159
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %9, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %10) #13, !noalias !159
  %95 = load i8*, i8** %91, align 8, !noalias !159
  %96 = load i8*, i8** %92, align 8, !noalias !159
  %97 = icmp eq i8* %95, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13, !noalias !159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13, !noalias !159
  br i1 %97, label %112, label %98

98:                                               ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13, !noalias !159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %76, i64 24, i1 false) #13, !noalias !159
  %99 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEmmEv(%"class.base::CheckedContiguousIterator"* nonnull %8) #13, !noalias !159
  %100 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* %99) #13, !noalias !159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13, !noalias !159
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #13, !noalias !159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %87, i64 24, i1 false) #13, !noalias !159
  %101 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEmmEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #13, !noalias !159
  %102 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* %101) #13, !noalias !159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13, !noalias !159
  %103 = load i8, i8* %100, align 1, !noalias !159
  %104 = load i8, i8* %102, align 1, !noalias !159
  %105 = icmp eq i8 %103, %104
  br i1 %105, label %106, label %112

106:                                              ; preds = %98
  %107 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEmmEv(%"class.base::CheckedContiguousIterator"* %75) #13, !noalias !159
  %108 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEmmEv(%"class.base::CheckedContiguousIterator"* %86) #13, !noalias !159
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13, !noalias !159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %76, i64 24, i1 false) #13, !noalias !159
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13, !noalias !159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %79, i64 24, i1 false) #13, !noalias !159
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %11, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %12) #13, !noalias !159
  %109 = load i8*, i8** %80, align 8, !noalias !159
  %110 = load i8*, i8** %82, align 8, !noalias !159
  %111 = icmp eq i8* %109, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13, !noalias !159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13, !noalias !159
  br i1 %111, label %112, label %94

112:                                              ; preds = %94, %98, %106, %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %68, i64 48, i1 false) #13
  %113 = getelementptr inbounds %"struct.std::__1::pair.2215", %"struct.std::__1::pair.2215"* %25, i64 0, i32 1
  %114 = bitcast %"class.std::__1::reverse_iterator"* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* nonnull align 8 %70, i64 48, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #13, !noalias !156
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %70) #13, !noalias !156
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %71)
  %115 = bitcast %"class.std::__1::reverse_iterator"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %115)
  %116 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116)
  %117 = load i8*, i8** %33, align 8, !noalias !162
  %118 = load i64, i64* %35, align 8, !noalias !162
  %119 = getelementptr inbounds i8, i8* %117, i64 %118
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %6, i8* %117, i8* %119, i8* %119) #13, !noalias !167
  %120 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* nonnull align 8 %116, i64 24, i1 false) #13, !noalias !167
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 8 %116, i64 24, i1 false) #13
  %121 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %30, i64 0, i32 1
  %122 = bitcast %"class.base::CheckedContiguousIterator"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* nonnull align 8 %120, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116)
  %123 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %123, i8* align 8 %122, i64 24, i1 false) #13
  %124 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #13
  %125 = getelementptr inbounds %"struct.std::__1::pair.2215", %"struct.std::__1::pair.2215"* %25, i64 0, i32 0, i32 1
  %126 = bitcast %"class.base::CheckedContiguousIterator"* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 8 %126, i64 24, i1 false) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #13
  %127 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  %128 = bitcast i8** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %131 = bitcast i8** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %129, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #13
  %134 = trunc i64 %133 to i32
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %115)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %31)
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKhLm18446744073709551615EEENS3_IKDsLm18446744073709551615EEEEEjRKT_RKT0_(%"class.base::span.2203"* dereferenceable(16), %"class.base::span.2204"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %14 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %15 = alloca %"class.std::__1::reverse_iterator", align 8
  %16 = alloca %"class.std::__1::reverse_iterator", align 8
  %17 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %18 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %19 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %20 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %21 = alloca %"class.base::CheckedContiguousIterator", align 8
  %22 = alloca %"class.base::CheckedContiguousIterator", align 8
  %23 = alloca %"class.base::CheckedContiguousIterator", align 8
  %24 = alloca %"class.base::CheckedContiguousIterator", align 8
  %25 = alloca %"struct.std::__1::pair.2217", align 8
  %26 = alloca %"class.std::__1::reverse_iterator", align 8
  %27 = alloca %"class.std::__1::reverse_iterator", align 8
  %28 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %29 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %30 = alloca %"class.std::__1::reverse_iterator", align 8
  %31 = bitcast %"struct.std::__1::pair.2217"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %31)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 96, i1 false)
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8, !noalias !168
  %35 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %0, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8, !noalias !168
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %24, i8* %34, i8* %37, i8* %37) #13, !noalias !173
  %38 = bitcast %"class.base::CheckedContiguousIterator"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %32, i64 24, i1 false) #13, !noalias !173
  %39 = bitcast %"class.std::__1::reverse_iterator"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %32, i64 24, i1 false) #13
  %40 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %26, i64 0, i32 1
  %41 = bitcast %"class.base::CheckedContiguousIterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %38, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %42 = bitcast %"class.base::CheckedContiguousIterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42)
  %43 = load i8*, i8** %33, align 8, !noalias !174
  %44 = load i64, i64* %35, align 8, !noalias !174
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %22, i8* %43, i8* %43, i8* %45) #13, !noalias !179
  %46 = bitcast %"class.base::CheckedContiguousIterator"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %42, i64 24, i1 false) #13, !noalias !179
  %47 = bitcast %"class.std::__1::reverse_iterator"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* nonnull align 8 %42, i64 24, i1 false) #13
  %48 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %27, i64 0, i32 1
  %49 = bitcast %"class.base::CheckedContiguousIterator"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %46, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42)
  %50 = bitcast %"class.base::CheckedContiguousIterator.2207"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %1, i64 0, i32 1
  %52 = load i16*, i16** %51, align 8, !noalias !180
  %53 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %1, i64 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !180
  %55 = getelementptr inbounds i16, i16* %52, i64 %54
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %20, i16* %52, i16* %55, i16* %55) #13, !noalias !185
  %56 = bitcast %"class.base::CheckedContiguousIterator.2207"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %50, i64 24, i1 false) #13, !noalias !185
  %57 = bitcast %"class.std::__1::reverse_iterator.2218"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %50, i64 24, i1 false) #13
  %58 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %28, i64 0, i32 1
  %59 = bitcast %"class.base::CheckedContiguousIterator.2207"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* nonnull align 8 %56, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50)
  %60 = bitcast %"class.base::CheckedContiguousIterator.2207"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60)
  %61 = load i16*, i16** %51, align 8, !noalias !186
  %62 = load i64, i64* %53, align 8, !noalias !186
  %63 = getelementptr inbounds i16, i16* %61, i64 %62
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %18, i16* %61, i16* %61, i16* %63) #13, !noalias !191
  %64 = bitcast %"class.base::CheckedContiguousIterator.2207"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %60, i64 24, i1 false) #13, !noalias !191
  %65 = bitcast %"class.std::__1::reverse_iterator.2218"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* nonnull align 8 %60, i64 24, i1 false) #13
  %66 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %29, i64 0, i32 1
  %67 = bitcast %"class.base::CheckedContiguousIterator.2207"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %64, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60)
  %68 = bitcast %"class.std::__1::reverse_iterator"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #13, !noalias !192
  %69 = bitcast %"class.std::__1::reverse_iterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %69)
  %70 = bitcast %"class.std::__1::reverse_iterator.2218"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %70) #13, !noalias !192
  %71 = bitcast %"class.std::__1::reverse_iterator.2218"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %71)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %65, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %57, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* nonnull align 8 %47, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* nonnull align 8 %39, i64 48, i1 false)
  %72 = bitcast %"class.base::CheckedContiguousIterator.2207"* %9 to i8*
  %73 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  %74 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13, !noalias !195
  %75 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %16, i64 0, i32 1
  %76 = bitcast %"class.base::CheckedContiguousIterator"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %76, i64 24, i1 false) #13, !noalias !195
  %77 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13, !noalias !195
  %78 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %15, i64 0, i32 1
  %79 = bitcast %"class.base::CheckedContiguousIterator"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %79, i64 24, i1 false) #13, !noalias !195
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %11, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %12) #13, !noalias !195
  %80 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %11, i64 0, i32 1
  %81 = load i8*, i8** %80, align 8, !noalias !195
  %82 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %12, i64 0, i32 1
  %83 = load i8*, i8** %82, align 8, !noalias !195
  %84 = icmp eq i8* %81, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13, !noalias !195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13, !noalias !195
  br i1 %84, label %114, label %85

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %14, i64 0, i32 1
  %87 = bitcast %"class.base::CheckedContiguousIterator.2207"* %86 to i8*
  %88 = bitcast %"class.base::CheckedContiguousIterator.2207"* %10 to i8*
  %89 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %13, i64 0, i32 1
  %90 = bitcast %"class.base::CheckedContiguousIterator.2207"* %89 to i8*
  %91 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %9, i64 0, i32 1
  %92 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %10, i64 0, i32 1
  %93 = bitcast %"class.base::CheckedContiguousIterator.2207"* %7 to i8*
  br label %94

94:                                               ; preds = %108, %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13, !noalias !195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 %87, i64 24, i1 false) #13, !noalias !195
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13, !noalias !195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 %90, i64 24, i1 false) #13, !noalias !195
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %9, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %10) #13, !noalias !195
  %95 = load i16*, i16** %91, align 8, !noalias !195
  %96 = load i16*, i16** %92, align 8, !noalias !195
  %97 = icmp eq i16* %95, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13, !noalias !195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13, !noalias !195
  br i1 %97, label %114, label %98

98:                                               ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13, !noalias !195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %76, i64 24, i1 false) #13, !noalias !195
  %99 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEmmEv(%"class.base::CheckedContiguousIterator"* nonnull %8) #13, !noalias !195
  %100 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* %99) #13, !noalias !195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13, !noalias !195
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #13, !noalias !195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %87, i64 24, i1 false) #13, !noalias !195
  %101 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEmmEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %7) #13, !noalias !195
  %102 = call dereferenceable(2) i16* @_ZNK4base25CheckedContiguousIteratorIKDsEdeEv(%"class.base::CheckedContiguousIterator.2207"* %101) #13, !noalias !195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13, !noalias !195
  %103 = load i8, i8* %100, align 1, !noalias !195
  %104 = zext i8 %103 to i32
  %105 = load i16, i16* %102, align 2, !noalias !195
  %106 = zext i16 %105 to i32
  %107 = icmp eq i32 %104, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %98
  %109 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEmmEv(%"class.base::CheckedContiguousIterator"* %75) #13, !noalias !195
  %110 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEmmEv(%"class.base::CheckedContiguousIterator.2207"* %86) #13, !noalias !195
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13, !noalias !195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %76, i64 24, i1 false) #13, !noalias !195
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13, !noalias !195
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %79, i64 24, i1 false) #13, !noalias !195
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %11, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %12) #13, !noalias !195
  %111 = load i8*, i8** %80, align 8, !noalias !195
  %112 = load i8*, i8** %82, align 8, !noalias !195
  %113 = icmp eq i8* %111, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13, !noalias !195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13, !noalias !195
  br i1 %113, label %114, label %94

114:                                              ; preds = %94, %98, %108, %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %68, i64 48, i1 false) #13
  %115 = getelementptr inbounds %"struct.std::__1::pair.2217", %"struct.std::__1::pair.2217"* %25, i64 0, i32 1
  %116 = bitcast %"class.std::__1::reverse_iterator.2218"* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* nonnull align 8 %70, i64 48, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #13, !noalias !192
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %70) #13, !noalias !192
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %71)
  %117 = bitcast %"class.std::__1::reverse_iterator"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %117)
  %118 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118)
  %119 = load i8*, i8** %33, align 8, !noalias !198
  %120 = load i64, i64* %35, align 8, !noalias !198
  %121 = getelementptr inbounds i8, i8* %119, i64 %120
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %6, i8* %119, i8* %121, i8* %121) #13, !noalias !203
  %122 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %122, i8* nonnull align 8 %118, i64 24, i1 false) #13, !noalias !203
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* nonnull align 8 %118, i64 24, i1 false) #13
  %123 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %30, i64 0, i32 1
  %124 = bitcast %"class.base::CheckedContiguousIterator"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* nonnull align 8 %122, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118)
  %125 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %125, i8* align 8 %124, i64 24, i1 false) #13
  %126 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"struct.std::__1::pair.2217", %"struct.std::__1::pair.2217"* %25, i64 0, i32 0, i32 1
  %128 = bitcast %"class.base::CheckedContiguousIterator"* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %128, i64 24, i1 false) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %3, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %4) #13
  %129 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  %130 = bitcast i8** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %133 = bitcast i8** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %131, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #13
  %136 = trunc i64 %135 to i32
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %117)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %31)
  ret i32 %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i16* } @_ZNK4base4spanIKDsLm18446744073709551615EE7subspanEmm(%"class.base::span.2204"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #13
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %12 = load i64, i64* %6, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %7, %3 ], [ %12, %9 ]
  %15 = icmp eq i64 %2, -1
  %16 = sub i64 %14, %1
  br i1 %15, label %22, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %16, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0)) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %13, %19, %17
  %23 = phi i64 [ %2, %17 ], [ %2, %19 ], [ %16, %13 ]
  %24 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 1
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds i16, i16* %25, i64 %1
  %27 = insertvalue { i64, i16* } undef, i64 %23, 0
  %28 = insertvalue { i64, i16* } %27, i16* %26, 1
  ret { i64, i16* } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKDsLm18446744073709551615EEENS3_IKhLm18446744073709551615EEEEEjRKT_RKT0_(%"class.base::span.2204"* dereferenceable(16), %"class.base::span.2203"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %13 = alloca %"class.std::__1::reverse_iterator", align 8
  %14 = alloca %"class.std::__1::reverse_iterator", align 8
  %15 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %16 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %17 = alloca %"class.base::CheckedContiguousIterator", align 8
  %18 = alloca %"class.base::CheckedContiguousIterator", align 8
  %19 = alloca %"class.base::CheckedContiguousIterator", align 8
  %20 = alloca %"class.base::CheckedContiguousIterator", align 8
  %21 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %22 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %23 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %24 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %25 = alloca %"struct.std::__1::pair.2220", align 8
  %26 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %27 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %28 = alloca %"class.std::__1::reverse_iterator", align 8
  %29 = alloca %"class.std::__1::reverse_iterator", align 8
  %30 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %31 = bitcast %"struct.std::__1::pair.2220"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %31)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 96, i1 false)
  %32 = bitcast %"class.base::CheckedContiguousIterator.2207"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 1
  %34 = load i16*, i16** %33, align 8, !noalias !204
  %35 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8, !noalias !204
  %37 = getelementptr inbounds i16, i16* %34, i64 %36
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %24, i16* %34, i16* %37, i16* %37) #13, !noalias !209
  %38 = bitcast %"class.base::CheckedContiguousIterator.2207"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %32, i64 24, i1 false) #13, !noalias !209
  %39 = bitcast %"class.std::__1::reverse_iterator.2218"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %32, i64 24, i1 false) #13
  %40 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %26, i64 0, i32 1
  %41 = bitcast %"class.base::CheckedContiguousIterator.2207"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %38, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %42 = bitcast %"class.base::CheckedContiguousIterator.2207"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42)
  %43 = load i16*, i16** %33, align 8, !noalias !210
  %44 = load i64, i64* %35, align 8, !noalias !210
  %45 = getelementptr inbounds i16, i16* %43, i64 %44
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %22, i16* %43, i16* %43, i16* %45) #13, !noalias !215
  %46 = bitcast %"class.base::CheckedContiguousIterator.2207"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %42, i64 24, i1 false) #13, !noalias !215
  %47 = bitcast %"class.std::__1::reverse_iterator.2218"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* nonnull align 8 %42, i64 24, i1 false) #13
  %48 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %27, i64 0, i32 1
  %49 = bitcast %"class.base::CheckedContiguousIterator.2207"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %46, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42)
  %50 = bitcast %"class.base::CheckedContiguousIterator"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %1, i64 0, i32 1
  %52 = load i8*, i8** %51, align 8, !noalias !216
  %53 = getelementptr inbounds %"class.base::span.2203", %"class.base::span.2203"* %1, i64 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !216
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %20, i8* %52, i8* %55, i8* %55) #13, !noalias !221
  %56 = bitcast %"class.base::CheckedContiguousIterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %50, i64 24, i1 false) #13, !noalias !221
  %57 = bitcast %"class.std::__1::reverse_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %50, i64 24, i1 false) #13
  %58 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %28, i64 0, i32 1
  %59 = bitcast %"class.base::CheckedContiguousIterator"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* nonnull align 8 %56, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50)
  %60 = bitcast %"class.base::CheckedContiguousIterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60)
  %61 = load i8*, i8** %51, align 8, !noalias !222
  %62 = load i64, i64* %53, align 8, !noalias !222
  %63 = getelementptr inbounds i8, i8* %61, i64 %62
  call void @_ZN4base25CheckedContiguousIteratorIKhEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %18, i8* %61, i8* %61, i8* %63) #13, !noalias !227
  %64 = bitcast %"class.base::CheckedContiguousIterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %60, i64 24, i1 false) #13, !noalias !227
  %65 = bitcast %"class.std::__1::reverse_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* nonnull align 8 %60, i64 24, i1 false) #13
  %66 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %29, i64 0, i32 1
  %67 = bitcast %"class.base::CheckedContiguousIterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %64, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60)
  %68 = bitcast %"class.std::__1::reverse_iterator.2218"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #13, !noalias !228
  %69 = bitcast %"class.std::__1::reverse_iterator.2218"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %69)
  %70 = bitcast %"class.std::__1::reverse_iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %70) #13, !noalias !228
  %71 = bitcast %"class.std::__1::reverse_iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %71)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %65, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %57, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* nonnull align 8 %47, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* nonnull align 8 %39, i64 48, i1 false)
  %72 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  %73 = bitcast %"class.base::CheckedContiguousIterator.2207"* %8 to i8*
  %74 = bitcast %"class.base::CheckedContiguousIterator.2207"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13, !noalias !231
  %75 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %16, i64 0, i32 1
  %76 = bitcast %"class.base::CheckedContiguousIterator.2207"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %76, i64 24, i1 false) #13, !noalias !231
  %77 = bitcast %"class.base::CheckedContiguousIterator.2207"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13, !noalias !231
  %78 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %15, i64 0, i32 1
  %79 = bitcast %"class.base::CheckedContiguousIterator.2207"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %79, i64 24, i1 false) #13, !noalias !231
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %11, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %12) #13, !noalias !231
  %80 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %11, i64 0, i32 1
  %81 = load i16*, i16** %80, align 8, !noalias !231
  %82 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %12, i64 0, i32 1
  %83 = load i16*, i16** %82, align 8, !noalias !231
  %84 = icmp eq i16* %81, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13, !noalias !231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13, !noalias !231
  br i1 %84, label %114, label %85

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %14, i64 0, i32 1
  %87 = bitcast %"class.base::CheckedContiguousIterator"* %86 to i8*
  %88 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  %89 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %13, i64 0, i32 1
  %90 = bitcast %"class.base::CheckedContiguousIterator"* %89 to i8*
  %91 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %9, i64 0, i32 1
  %92 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %93 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  br label %94

94:                                               ; preds = %108, %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13, !noalias !231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 %87, i64 24, i1 false) #13, !noalias !231
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13, !noalias !231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 %90, i64 24, i1 false) #13, !noalias !231
  call void @_ZNK4base25CheckedContiguousIteratorIKhE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %9, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %10) #13, !noalias !231
  %95 = load i8*, i8** %91, align 8, !noalias !231
  %96 = load i8*, i8** %92, align 8, !noalias !231
  %97 = icmp eq i8* %95, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13, !noalias !231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13, !noalias !231
  br i1 %97, label %114, label %98

98:                                               ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13, !noalias !231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %76, i64 24, i1 false) #13, !noalias !231
  %99 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEmmEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %8) #13, !noalias !231
  %100 = call dereferenceable(2) i16* @_ZNK4base25CheckedContiguousIteratorIKDsEdeEv(%"class.base::CheckedContiguousIterator.2207"* %99) #13, !noalias !231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13, !noalias !231
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #13, !noalias !231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %87, i64 24, i1 false) #13, !noalias !231
  %101 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEmmEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #13, !noalias !231
  %102 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKhEdeEv(%"class.base::CheckedContiguousIterator"* %101) #13, !noalias !231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13, !noalias !231
  %103 = load i16, i16* %100, align 2, !noalias !231
  %104 = zext i16 %103 to i32
  %105 = load i8, i8* %102, align 1, !noalias !231
  %106 = zext i8 %105 to i32
  %107 = icmp eq i32 %104, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %98
  %109 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEmmEv(%"class.base::CheckedContiguousIterator.2207"* %75) #13, !noalias !231
  %110 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEmmEv(%"class.base::CheckedContiguousIterator"* %86) #13, !noalias !231
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13, !noalias !231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %76, i64 24, i1 false) #13, !noalias !231
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13, !noalias !231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %79, i64 24, i1 false) #13, !noalias !231
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %11, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %12) #13, !noalias !231
  %111 = load i16*, i16** %80, align 8, !noalias !231
  %112 = load i16*, i16** %82, align 8, !noalias !231
  %113 = icmp eq i16* %111, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13, !noalias !231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13, !noalias !231
  br i1 %113, label %114, label %94

114:                                              ; preds = %94, %98, %108, %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %68, i64 48, i1 false) #13
  %115 = getelementptr inbounds %"struct.std::__1::pair.2220", %"struct.std::__1::pair.2220"* %25, i64 0, i32 1
  %116 = bitcast %"class.std::__1::reverse_iterator"* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* nonnull align 8 %70, i64 48, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #13, !noalias !228
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %70) #13, !noalias !228
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %71)
  %117 = bitcast %"class.std::__1::reverse_iterator.2218"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %117)
  %118 = bitcast %"class.base::CheckedContiguousIterator.2207"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118)
  %119 = load i16*, i16** %33, align 8, !noalias !234
  %120 = load i64, i64* %35, align 8, !noalias !234
  %121 = getelementptr inbounds i16, i16* %119, i64 %120
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %6, i16* %119, i16* %121, i16* %121) #13, !noalias !239
  %122 = bitcast %"class.base::CheckedContiguousIterator.2207"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %122, i8* nonnull align 8 %118, i64 24, i1 false) #13, !noalias !239
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* nonnull align 8 %118, i64 24, i1 false) #13
  %123 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %30, i64 0, i32 1
  %124 = bitcast %"class.base::CheckedContiguousIterator.2207"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* nonnull align 8 %122, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118)
  %125 = bitcast %"class.base::CheckedContiguousIterator.2207"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %125, i8* align 8 %124, i64 24, i1 false) #13
  %126 = bitcast %"class.base::CheckedContiguousIterator.2207"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"struct.std::__1::pair.2220", %"struct.std::__1::pair.2220"* %25, i64 0, i32 0, i32 1
  %128 = bitcast %"class.base::CheckedContiguousIterator.2207"* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %128, i64 24, i1 false) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %3, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %4) #13
  %129 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %3, i64 0, i32 1
  %130 = bitcast i16** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %4, i64 0, i32 1
  %133 = bitcast i16** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %131, %134
  %136 = lshr exact i64 %135, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #13
  %137 = trunc i64 %136 to i32
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %117)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %31)
  ret i32 %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22NGInlineNodeDataEditor15MismatchFromEndIN4base4spanIKDsLm18446744073709551615EEES5_EEjRKT_RKT0_(%"class.base::span.2204"* dereferenceable(16), %"class.base::span.2204"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %13 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %14 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %15 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %16 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %17 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %18 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %19 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %20 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %21 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %22 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %23 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %24 = alloca %"class.base::CheckedContiguousIterator.2207", align 8
  %25 = alloca %"struct.std::__1::pair.2221", align 8
  %26 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %27 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %28 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %29 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %30 = alloca %"class.std::__1::reverse_iterator.2218", align 8
  %31 = bitcast %"struct.std::__1::pair.2221"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %31)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 96, i1 false)
  %32 = bitcast %"class.base::CheckedContiguousIterator.2207"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 1
  %34 = load i16*, i16** %33, align 8, !noalias !240
  %35 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %0, i64 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8, !noalias !240
  %37 = getelementptr inbounds i16, i16* %34, i64 %36
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %24, i16* %34, i16* %37, i16* %37) #13, !noalias !245
  %38 = bitcast %"class.base::CheckedContiguousIterator.2207"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %32, i64 24, i1 false) #13, !noalias !245
  %39 = bitcast %"class.std::__1::reverse_iterator.2218"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %32, i64 24, i1 false) #13
  %40 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %26, i64 0, i32 1
  %41 = bitcast %"class.base::CheckedContiguousIterator.2207"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %38, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %42 = bitcast %"class.base::CheckedContiguousIterator.2207"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42)
  %43 = load i16*, i16** %33, align 8, !noalias !246
  %44 = load i64, i64* %35, align 8, !noalias !246
  %45 = getelementptr inbounds i16, i16* %43, i64 %44
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %22, i16* %43, i16* %43, i16* %45) #13, !noalias !251
  %46 = bitcast %"class.base::CheckedContiguousIterator.2207"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %42, i64 24, i1 false) #13, !noalias !251
  %47 = bitcast %"class.std::__1::reverse_iterator.2218"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* nonnull align 8 %42, i64 24, i1 false) #13
  %48 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %27, i64 0, i32 1
  %49 = bitcast %"class.base::CheckedContiguousIterator.2207"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %46, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42)
  %50 = bitcast %"class.base::CheckedContiguousIterator.2207"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %1, i64 0, i32 1
  %52 = load i16*, i16** %51, align 8, !noalias !252
  %53 = getelementptr inbounds %"class.base::span.2204", %"class.base::span.2204"* %1, i64 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8, !noalias !252
  %55 = getelementptr inbounds i16, i16* %52, i64 %54
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %20, i16* %52, i16* %55, i16* %55) #13, !noalias !257
  %56 = bitcast %"class.base::CheckedContiguousIterator.2207"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %50, i64 24, i1 false) #13, !noalias !257
  %57 = bitcast %"class.std::__1::reverse_iterator.2218"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %50, i64 24, i1 false) #13
  %58 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %28, i64 0, i32 1
  %59 = bitcast %"class.base::CheckedContiguousIterator.2207"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* nonnull align 8 %56, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50)
  %60 = bitcast %"class.base::CheckedContiguousIterator.2207"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60)
  %61 = load i16*, i16** %51, align 8, !noalias !258
  %62 = load i64, i64* %53, align 8, !noalias !258
  %63 = getelementptr inbounds i16, i16* %61, i64 %62
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %18, i16* %61, i16* %61, i16* %63) #13, !noalias !263
  %64 = bitcast %"class.base::CheckedContiguousIterator.2207"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %60, i64 24, i1 false) #13, !noalias !263
  %65 = bitcast %"class.std::__1::reverse_iterator.2218"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* nonnull align 8 %60, i64 24, i1 false) #13
  %66 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %29, i64 0, i32 1
  %67 = bitcast %"class.base::CheckedContiguousIterator.2207"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %64, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60)
  %68 = bitcast %"class.std::__1::reverse_iterator.2218"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #13, !noalias !264
  %69 = bitcast %"class.std::__1::reverse_iterator.2218"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %69)
  %70 = bitcast %"class.std::__1::reverse_iterator.2218"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %70) #13, !noalias !264
  %71 = bitcast %"class.std::__1::reverse_iterator.2218"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %71)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %65, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 %57, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* nonnull align 8 %47, i64 48, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* nonnull align 8 %39, i64 48, i1 false)
  %72 = bitcast %"class.base::CheckedContiguousIterator.2207"* %9 to i8*
  %73 = bitcast %"class.base::CheckedContiguousIterator.2207"* %8 to i8*
  %74 = bitcast %"class.base::CheckedContiguousIterator.2207"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13, !noalias !267
  %75 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %16, i64 0, i32 1
  %76 = bitcast %"class.base::CheckedContiguousIterator.2207"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %76, i64 24, i1 false) #13, !noalias !267
  %77 = bitcast %"class.base::CheckedContiguousIterator.2207"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13, !noalias !267
  %78 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %15, i64 0, i32 1
  %79 = bitcast %"class.base::CheckedContiguousIterator.2207"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %79, i64 24, i1 false) #13, !noalias !267
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %11, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %12) #13, !noalias !267
  %80 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %11, i64 0, i32 1
  %81 = load i16*, i16** %80, align 8, !noalias !267
  %82 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %12, i64 0, i32 1
  %83 = load i16*, i16** %82, align 8, !noalias !267
  %84 = icmp eq i16* %81, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13, !noalias !267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13, !noalias !267
  br i1 %84, label %112, label %85

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %14, i64 0, i32 1
  %87 = bitcast %"class.base::CheckedContiguousIterator.2207"* %86 to i8*
  %88 = bitcast %"class.base::CheckedContiguousIterator.2207"* %10 to i8*
  %89 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %13, i64 0, i32 1
  %90 = bitcast %"class.base::CheckedContiguousIterator.2207"* %89 to i8*
  %91 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %9, i64 0, i32 1
  %92 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %10, i64 0, i32 1
  %93 = bitcast %"class.base::CheckedContiguousIterator.2207"* %7 to i8*
  br label %94

94:                                               ; preds = %106, %85
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13, !noalias !267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 %87, i64 24, i1 false) #13, !noalias !267
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13, !noalias !267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 %90, i64 24, i1 false) #13, !noalias !267
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %9, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %10) #13, !noalias !267
  %95 = load i16*, i16** %91, align 8, !noalias !267
  %96 = load i16*, i16** %92, align 8, !noalias !267
  %97 = icmp eq i16* %95, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13, !noalias !267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13, !noalias !267
  br i1 %97, label %112, label %98

98:                                               ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #13, !noalias !267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %76, i64 24, i1 false) #13, !noalias !267
  %99 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEmmEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %8) #13, !noalias !267
  %100 = call dereferenceable(2) i16* @_ZNK4base25CheckedContiguousIteratorIKDsEdeEv(%"class.base::CheckedContiguousIterator.2207"* %99) #13, !noalias !267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #13, !noalias !267
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #13, !noalias !267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %87, i64 24, i1 false) #13, !noalias !267
  %101 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEmmEv(%"class.base::CheckedContiguousIterator.2207"* nonnull %7) #13, !noalias !267
  %102 = call dereferenceable(2) i16* @_ZNK4base25CheckedContiguousIteratorIKDsEdeEv(%"class.base::CheckedContiguousIterator.2207"* %101) #13, !noalias !267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #13, !noalias !267
  %103 = load i16, i16* %100, align 2, !noalias !267
  %104 = load i16, i16* %102, align 2, !noalias !267
  %105 = icmp eq i16 %103, %104
  br i1 %105, label %106, label %112

106:                                              ; preds = %98
  %107 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEmmEv(%"class.base::CheckedContiguousIterator.2207"* %75) #13, !noalias !267
  %108 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEmmEv(%"class.base::CheckedContiguousIterator.2207"* %86) #13, !noalias !267
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #13, !noalias !267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %76, i64 24, i1 false) #13, !noalias !267
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #13, !noalias !267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %79, i64 24, i1 false) #13, !noalias !267
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %11, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %12) #13, !noalias !267
  %109 = load i16*, i16** %80, align 8, !noalias !267
  %110 = load i16*, i16** %82, align 8, !noalias !267
  %111 = icmp eq i16* %109, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #13, !noalias !267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #13, !noalias !267
  br i1 %111, label %112, label %94

112:                                              ; preds = %94, %98, %106, %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %68, i64 48, i1 false) #13
  %113 = getelementptr inbounds %"struct.std::__1::pair.2221", %"struct.std::__1::pair.2221"* %25, i64 0, i32 1
  %114 = bitcast %"class.std::__1::reverse_iterator.2218"* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* nonnull align 8 %70, i64 48, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #13, !noalias !264
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %69)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %70) #13, !noalias !264
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %71)
  %115 = bitcast %"class.std::__1::reverse_iterator.2218"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %115)
  %116 = bitcast %"class.base::CheckedContiguousIterator.2207"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116)
  %117 = load i16*, i16** %33, align 8, !noalias !270
  %118 = load i64, i64* %35, align 8, !noalias !270
  %119 = getelementptr inbounds i16, i16* %117, i64 %118
  call void @_ZN4base25CheckedContiguousIteratorIKDsEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator.2207"* nonnull %6, i16* %117, i16* %119, i16* %119) #13, !noalias !275
  %120 = bitcast %"class.base::CheckedContiguousIterator.2207"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* nonnull align 8 %116, i64 24, i1 false) #13, !noalias !275
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 8 %116, i64 24, i1 false) #13
  %121 = getelementptr inbounds %"class.std::__1::reverse_iterator.2218", %"class.std::__1::reverse_iterator.2218"* %30, i64 0, i32 1
  %122 = bitcast %"class.base::CheckedContiguousIterator.2207"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* nonnull align 8 %120, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116)
  %123 = bitcast %"class.base::CheckedContiguousIterator.2207"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %123, i8* align 8 %122, i64 24, i1 false) #13
  %124 = bitcast %"class.base::CheckedContiguousIterator.2207"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #13
  %125 = getelementptr inbounds %"struct.std::__1::pair.2221", %"struct.std::__1::pair.2221"* %25, i64 0, i32 0, i32 1
  %126 = bitcast %"class.base::CheckedContiguousIterator.2207"* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 8 %126, i64 24, i1 false) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKDsE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator.2207"* nonnull %3, %"class.base::CheckedContiguousIterator.2207"* nonnull dereferenceable(24) %4) #13
  %127 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %3, i64 0, i32 1
  %128 = bitcast i16** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %4, i64 0, i32 1
  %131 = bitcast i16** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %129, %132
  %134 = lshr exact i64 %133, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #13
  %135 = trunc i64 %134 to i32
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %115)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %31)
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKhEmmEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %17 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 122, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i8*, i8** %7, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 -1
  store i8* %27, i8** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator.2207"* @_ZN4base25CheckedContiguousIteratorIKDsEmmEv(%"class.base::CheckedContiguousIterator.2207"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2207", %"class.base::CheckedContiguousIterator.2207"* %0, i64 0, i32 0
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i16*, i16** %7, align 8
  %11 = load i16*, i16** %8, align 8
  %12 = icmp eq i16* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i16** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %17 = bitcast %"class.base::CheckedContiguousIterator.2207"* %0 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKDsEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 122, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i16*, i16** %7, align 8
  %27 = getelementptr inbounds i16, i16* %26, i64 -1
  store i16* %27, i16** %7, align 8
  ret %"class.base::CheckedContiguousIterator.2207"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1920"*, %"class.blink::NGInlineItem"* dereferenceable(32)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1920"* %0, i32 %5, %"class.blink::NGInlineItem"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 %10
  %12 = bitcast %"class.blink::NGInlineItem"* %6 to i64*
  %13 = bitcast %"class.blink::NGInlineItem"* %11 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 0, i32 2, i32 0
  %16 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 %10, i32 2, i32 0
  store %"class.blink::ShapeResult"* %16, %"class.blink::ShapeResult"** %17, align 8
  %18 = icmp eq %"class.blink::ShapeResult"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #13
  br label %21

21:                                               ; preds = %2, %19
  %22 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 %10, i32 3
  %23 = bitcast %"class.blink::LayoutObject"** %22 to i8*
  %24 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 0, i32 3
  %25 = bitcast %"class.blink::LayoutObject"** %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %25, i64 16, i1 false) #13
  %26 = load i32, i32* %3, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %3, align 4
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1920"*, i32, %"class.blink::NGInlineItem"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %4, align 8
  %6 = icmp ugt %"class.blink::NGInlineItem"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %5, i64 %10
  %12 = icmp ugt %"class.blink::NGInlineItem"* %11, %2
  br i1 %12, label %35, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %66, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::NGInlineItem"* %5, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGInlineItemEEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.1920"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %66

34:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1920"* %0, i32 %22) #13
  br label %66

35:                                               ; preds = %7
  %36 = ptrtoint %"class.blink::NGInlineItem"* %2 to i64
  %37 = ptrtoint %"class.blink::NGInlineItem"* %5 to i64
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 5
  %40 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = lshr i32 %41, 2
  %43 = add i32 %41, 1
  %44 = add i32 %43, %42
  %45 = icmp ugt i32 %44, 4
  %46 = select i1 %45, i32 %44, i32 4
  %47 = icmp ugt i32 %46, %1
  %48 = select i1 %47, i32 %46, i32 %1
  %49 = icmp ult i32 %41, %48
  br i1 %49, label %50, label %63, !prof !3

50:                                               ; preds = %35
  %51 = icmp eq %"class.blink::NGInlineItem"* %5, null
  br i1 %51, label %52, label %61

52:                                               ; preds = %50
  %53 = zext i32 %48 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm(i64 %53) #13
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGInlineItemEEEPKcv, i64 0, i64 0)) #13
  %56 = ptrtoint i8* %55 to i64
  %57 = bitcast %"class.WTF::Vector.1920"* %0 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = lshr i64 %54, 5
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %40, align 8
  %60 = bitcast i8* %55 to %"class.blink::NGInlineItem"*
  br label %63

61:                                               ; preds = %50
  tail call void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1920"* %0, i32 %48) #13
  %62 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %4, align 8
  br label %63

63:                                               ; preds = %35, %52, %61
  %64 = phi %"class.blink::NGInlineItem"* [ %5, %35 ], [ %60, %52 ], [ %62, %61 ]
  %65 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %64, i64 %39
  br label %66

66:                                               ; preds = %34, %26, %13, %63
  %67 = phi %"class.blink::NGInlineItem"* [ %65, %63 ], [ %2, %13 ], [ %2, %26 ], [ %2, %34 ]
  ret %"class.blink::NGInlineItem"* %67
}

declare %"class.blink::ShapeResult"* @_ZNK5blink11ShapeResult8SubRangeEjj(%"class.blink::ShapeResult"*, i32, i32) local_unnamed_addr #2

declare void @_ZNK5blink11ShapeResult18EnsurePositionDataEv(%"class.blink::ShapeResult"*) local_unnamed_addr #2

declare i32 @_ZNK5blink11ShapeResult31CachedPreviousSafeToBreakOffsetEj(%"class.blink::ShapeResult"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1920"*, %"class.blink::NGInlineItem"* dereferenceable(32)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1920"* %0, i32 %5, %"class.blink::NGInlineItem"* %1) #13
  %7 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 %10
  %12 = bitcast %"class.blink::NGInlineItem"* %6 to i64*
  %13 = bitcast %"class.blink::NGInlineItem"* %11 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 0, i32 2, i32 0
  %16 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 %10, i32 2, i32 0
  store %"class.blink::ShapeResult"* %16, %"class.blink::ShapeResult"** %17, align 8
  %18 = icmp eq %"class.blink::ShapeResult"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #13
  br label %21

21:                                               ; preds = %2, %19
  %22 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 %10, i32 3
  %23 = bitcast %"class.blink::LayoutObject"** %22 to i8*
  %24 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 0, i32 3
  %25 = bitcast %"class.blink::LayoutObject"** %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %25, i64 16, i1 false) #13
  %26 = load i32, i32* %3, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1920"*, %"class.blink::NGInlineItem"* dereferenceable(32)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1920"* %0, i32 %5, %"class.blink::NGInlineItem"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 %10
  %12 = bitcast %"class.blink::NGInlineItem"* %6 to i64*
  %13 = bitcast %"class.blink::NGInlineItem"* %11 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 0, i32 2, i32 0
  %16 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 %10, i32 2, i32 0
  store %"class.blink::ShapeResult"* %16, %"class.blink::ShapeResult"** %17, align 8
  %18 = icmp eq %"class.blink::ShapeResult"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #13
  br label %21

21:                                               ; preds = %2, %19
  %22 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %8, i64 %10, i32 3
  %23 = bitcast %"class.blink::LayoutObject"** %22 to i8*
  %24 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 0, i32 3
  %25 = bitcast %"class.blink::LayoutObject"** %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %25, i64 16, i1 false) #13
  %26 = load i32, i32* %3, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %3, align 4
  ret void
}

declare i32 @_ZNK5blink11ShapeResult27CachedNextSafeToBreakOffsetEj(%"class.blink::ShapeResult"*, i32) local_unnamed_addr #2

declare %"class.blink::ShapeResult"* @_ZNK5blink11ShapeResult18CopyAdjustedOffsetEj(%"class.blink::ShapeResult"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1920"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %24, i64 %25
  ret %"class.blink::NGInlineItem"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"*, i32) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ScriptRunIteratorD2Ev(%"class.blink::ScriptRunIterator"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::Vector.2038"*, %"class.WTF::Vector.2038"** %2, align 8
  store %"class.WTF::Vector.2038"* null, %"class.WTF::Vector.2038"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector.2038"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %3, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !2

9:                                                ; preds = %5
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %3, i64 0, i32 0, i32 1, i64 0
  %14 = bitcast i8* %13 to i32*
  %15 = icmp eq i32* %12, %14
  br i1 %15, label %18, label %16, !prof !3

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %3, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.2039"* %17, i32* %12) #13
  br label %18

18:                                               ; preds = %16, %10
  store i32* null, i32** %11, align 8
  %19 = bitcast %"class.WTF::Vector.2038"* %3 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %19) #13
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::Vector.2038"*, %"class.WTF::Vector.2038"** %21, align 8
  store %"class.WTF::Vector.2038"* null, %"class.WTF::Vector.2038"** %21, align 8
  %23 = icmp eq %"class.WTF::Vector.2038"* %22, null
  br i1 %23, label %39, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %22, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !2

28:                                               ; preds = %24
  store i32 0, i32* %25, align 4
  br label %29

29:                                               ; preds = %28, %24
  %30 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %22, i64 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %22, i64 0, i32 0, i32 1, i64 0
  %33 = bitcast i8* %32 to i32*
  %34 = icmp eq i32* %31, %33
  br i1 %34, label %37, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %22, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.2039"* %36, i32* %31) #13
  br label %37

37:                                               ; preds = %35, %29
  store i32* null, i32** %30, align 8
  %38 = bitcast %"class.WTF::Vector.2038"* %22 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %38) #13
  br label %39

39:                                               ; preds = %20, %37
  %40 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4
  %41 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %39
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %39
  %46 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %40, i64 0, i32 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %49 = bitcast i8* %48 to i32*
  %50 = icmp eq i32* %47, %49
  br i1 %50, label %53, label %51, !prof !3

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::Vector.2038", %"class.WTF::Vector.2038"* %40, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.2039"* %52, i32* %47) #13
  br label %53

53:                                               ; preds = %45, %51
  store i32* null, i32** %46, align 8
  %54 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.blink::ScriptRunIterator::BracketRec"*, %"struct.blink::ScriptRunIterator::BracketRec"** %54, align 8
  %56 = icmp eq %"struct.blink::ScriptRunIterator::BracketRec"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %55 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %58) #13
  store %"struct.blink::ScriptRunIterator::BracketRec"* null, %"struct.blink::ScriptRunIterator::BracketRec"** %54, align 8
  br label %59

59:                                               ; preds = %53, %57
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.2039"*, i32*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGInlineItemSegmentEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i32 @ubidi_getDirection_69(%struct.UBiDi*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4FonteqERKS0_(%"class.blink::Font"*, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink11ShapeResult18IsStartSafeToBreakEv(%"class.blink::ShapeResult"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::ShapeResult"* @_ZN5blink12_GLOBAL__N_117ReusingTextShaper7ReshapeERKNS_12NGInlineItemEjj(%"class.blink::(anonymous namespace)::ReusingTextShaper"*, %"class.blink::NGInlineItem"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::RunSegmenter::RunSegmenterRange", align 8
  %6 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 7
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = tail call dereferenceable(88) %"class.blink::Font"* @_ZNK5blink12NGInlineItem18FontWithSvgScalingEv(%"class.blink::NGInlineItem"* %1) #13
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ReusingTextShaper", %"class.blink::(anonymous namespace)::ReusingTextShaper"* %0, i64 0, i32 0
  %13 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %14, align 8
  %16 = icmp eq %"class.blink::NGInlineItemSegments"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::ReusingTextShaper", %"class.blink::(anonymous namespace)::ReusingTextShaper"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = bitcast %"class.blink::NGInlineItem"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = ptrtoint %"class.blink::NGInlineItem"* %1 to i64
  %23 = sub i64 %22, %21
  %24 = lshr exact i64 %23, 5
  %25 = trunc i64 %24 to i32
  %26 = tail call %"class.blink::ShapeResult"* @_ZNK5blink20NGInlineItemSegments9ShapeTextEPKNS_14HarfBuzzShaperEPKNS_4FontENS_13TextDirectionEjjj(%"class.blink::NGInlineItemSegments"* nonnull %15, %"class.blink::HarfBuzzShaper"* %18, %"class.blink::Font"* %11, i8 zeroext %10, i32 %2, i32 %3, i32 %25) #13
  br label %40

27:                                               ; preds = %4
  %28 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %5, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 0
  %31 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 20, i1 false)
  %32 = load i32, i32* %30, align 8, !noalias !276
  %33 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %34 = load i32, i32* %33, align 4, !noalias !276
  %35 = load i32, i32* %6, align 4, !noalias !276
  %36 = lshr i32 %35, 15
  %37 = and i32 %36, 2047
  call void @_ZN5blink19NGInlineItemSegment17UnpackSegmentDataEjjj(%"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull sret %5, i32 %32, i32 %34, i32 %37) #13
  store i32 %3, i32* %29, align 4
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::ReusingTextShaper", %"class.blink::(anonymous namespace)::ReusingTextShaper"* %0, i64 0, i32 2
  %39 = call %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionEjjNS_12RunSegmenter17RunSegmenterRangeE(%"class.blink::HarfBuzzShaper"* %38, %"class.blink::Font"* %11, i8 zeroext %10, i32 %2, i32 %3, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull byval(%"struct.blink::RunSegmenter::RunSegmenterRange") align 8 %5) #13
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %28) #13
  br label %40

40:                                               ; preds = %27, %17
  %41 = phi %"class.blink::ShapeResult"* [ %26, %17 ], [ %39, %27 ]
  ret %"class.blink::ShapeResult"* %41
}

declare void @_ZNK5blink11ShapeResult9CopyRangeEjjPS0_(%"class.blink::ShapeResult"*, i32, i32, %"class.blink::ShapeResult"*) local_unnamed_addr #2

declare %"class.blink::ShapeResult"* @_ZNK5blink20NGInlineItemSegments9ShapeTextEPKNS_14HarfBuzzShaperEPKNS_4FontENS_13TextDirectionEjjj(%"class.blink::NGInlineItemSegments"*, %"class.blink::HarfBuzzShaper"*, %"class.blink::Font"*, i8 zeroext, i32, i32, i32) local_unnamed_addr #2

declare %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionEjjNS_12RunSegmenter17RunSegmenterRangeE(%"class.blink::HarfBuzzShaper"*, %"class.blink::Font"*, i8 zeroext, i32, i32, %"struct.blink::RunSegmenter::RunSegmenterRange"* byval(%"struct.blink::RunSegmenter::RunSegmenterRange") align 8) local_unnamed_addr #2

declare void @_ZN5blink19NGInlineItemSegment17UnpackSegmentDataEjjj(%"struct.blink::RunSegmenter::RunSegmenterRange"* sret, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink11ShapeResultELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.2247"*, %"class.blink::ShapeResult"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2247", %"class.WTF::Vector.2247"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2247", %"class.WTF::Vector.2247"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ShapeResult"**, %"class.blink::ShapeResult"*** %6, align 8
  %8 = icmp ugt %"class.blink::ShapeResult"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %7, i64 %10
  %12 = icmp ugt %"class.blink::ShapeResult"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2247", %"class.WTF::Vector.2247"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::ShapeResult"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11ShapeResultEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11ShapeResultEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2247"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::ShapeResult"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::ShapeResult"**, %"class.blink::ShapeResult"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::ShapeResult"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::ShapeResult"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.2247"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.2247"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::ShapeResult"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::ShapeResult"** %1 to i64
  %56 = ptrtoint %"class.blink::ShapeResult"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2247", %"class.WTF::Vector.2247"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::ShapeResult"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11ShapeResultEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11ShapeResultEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2247"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::ShapeResult"**, %"class.blink::ShapeResult"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::ShapeResult"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::ShapeResult"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.2247"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.2247"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::ShapeResult"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::ShapeResult"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::ShapeResult"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::ShapeResult"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %100, i64 %103
  %105 = bitcast %"class.blink::ShapeResult"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::ShapeResult"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink11ShapeResultEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::ShapeResult"** @_ZNK3WTF6VectorIPKN5blink11ShapeResultELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2247"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2247", %"class.WTF::Vector.2247"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2247", %"class.WTF::Vector.2247"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ShapeResult"**, %"class.blink::ShapeResult"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %24, i64 %25
  ret %"class.blink::ShapeResult"** %26
}

declare dereferenceable(16) %"class.WTF::Vector.254"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

declare void @_ZN5blink11ShapeResultC1E13scoped_refptrIKNS_14SimpleFontDataEEjjNS_13TextDirectionE(%"class.blink::ShapeResult"*, %"class.blink::SimpleFontData"*, i32, i32, i8 zeroext) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2072"*, %"struct.blink::ShapeResult::ShapeRange"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"struct.blink::ShapeResult::ShapeRange"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !2

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1998"* %17, i8* nonnull dereferenceable(1) %3) #13
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !2

49:                                               ; preds = %42
  %50 = bitcast %union.anon.1997* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.1997* %43 to %"class.WTF::Vector.2003"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2003"* %57, i16* nonnull dereferenceable(2) %4) #13
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1998"*, i8* dereferenceable(1)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1998"* %0, i32 %5) #13
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1998"* %0, i32 %5) #13
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1998"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1998"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.1998"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1998"* %0, i32 %27) #13
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1998"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.1998"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.1998"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #13
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1999"* %18, i8* nonnull %6) #13
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #13
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1999"* %46, i8* %42) #13
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.1998"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.1998", %"class.WTF::Vector.1998"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1999"*, i8*) local_unnamed_addr #11 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #13
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2003"*, i16* dereferenceable(2)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2003"* %0, i32 %5) #13
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2003"* %0, i32 %5) #13
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2003"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2003"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2003"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2003"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2003"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2003"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2003"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2004"* %19, i16* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #13
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2004"* %53, i16* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2003"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2003", %"class.WTF::Vector.2003"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2004"*, i16*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink13NGLineBreakerC1ENS_12NGInlineNodeENS_17NGLineBreakerModeERKNS_17NGConstraintSpaceERKNS_23NGLineLayoutOpportunityERKN3WTF6VectorINS_17NGPositionedFloatELj8ENS9_18PartitionAllocatorEEEjPKNS_18NGInlineBreakTokenEPNS_16NGExclusionSpaceE(%"class.blink::NGLineBreaker"*, %"class.blink::LayoutBox"*, i64, i32, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGLineLayoutOpportunity"* dereferenceable(24), %"class.WTF::Vector.2266"* dereferenceable(208), i32, %"class.blink::NGInlineBreakToken"*, %"class.blink::NGExclusionSpace"*) unnamed_addr #2

declare void @_ZN5blink13NGLineBreaker23SetIntrinsicSizeOutputsEPN3WTF6VectorINS_10LayoutUnitELj64ENS1_18PartitionAllocatorEEEPb(%"class.blink::NGLineBreaker"*, %"class.WTF::Vector.2104"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink13NGLineBreaker8NextLineEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30NGMinMaxConstraintSpaceBuilderC2ERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_17NGLayoutInputNodeEb(%"class.blink::NGMinMaxConstraintSpaceBuilder"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::NGLayoutInputNode"* dereferenceable(16), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::NGLayoutInputNode"* %3 to %"class.blink::LayoutObject"**
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 102
  %15 = trunc i160 %14 to i16
  %16 = and i16 %15, 3
  %17 = lshr i160 %13, 108
  %18 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = zext i1 %4 to i8
  %21 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %25 = shl nuw nsw i16 %16, 4
  %26 = trunc i160 %17 to i16
  %27 = and i16 %26, 128
  %28 = bitcast %union.anon.1634* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #13
  %29 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 2
  %31 = and i32 %19, 112
  %32 = icmp ne i32 %31, 0
  %33 = icmp eq i16 %16, 0
  %34 = xor i1 %32, %33
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %30, align 4
  %36 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 3
  store i8 %20, i8* %36, align 1
  %37 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %37, align 2
  %38 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 5
  store i8 1, i8* %38, align 1
  %39 = zext i1 %4 to i32
  %40 = shl nuw nsw i32 %39, 10
  %41 = select i1 %34, i32 0, i32 2048
  %42 = or i16 %25, %27
  %43 = zext i16 %42 to i32
  %44 = or i32 %40, %43
  %45 = or i32 %44, %41
  store i32 %45, i32* %24, align 8
  %46 = load i32, i32* %18, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %67, label %49

49:                                               ; preds = %5
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %51 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %50, align 8
  %52 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %51, i64 0, i32 6
  %53 = load i16, i16* %52, align 8
  %54 = and i16 %53, 512
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %49
  %57 = tail call noalias i8* @malloc(i64 88) #13
  %58 = getelementptr inbounds i8, i8* %57, i64 24
  %59 = bitcast i8* %58 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 24, i1 false) #13
  store i32 -64, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %57, i64 28
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %57, i64 32
  %63 = bitcast i8* %62 to i16*
  %64 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %65 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %64 to i8**
  store i8* %57, i8** %65, align 8
  %66 = or i32 %45, 1
  store i32 %66, i32* %24, align 8
  store i16 512, i16* %63, align 8
  br label %67

67:                                               ; preds = %5, %49, %56
  %68 = getelementptr inbounds %"class.blink::NGLayoutInputNode", %"class.blink::NGLayoutInputNode"* %3, i64 0, i32 0
  %69 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::NGLayoutInputNode", %"class.blink::NGLayoutInputNode"* %3, i64 0, i32 1
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  tail call void @_ZN5blink39SetOrthogonalFallbackInlineSizeIfNeededERKNS_13ComputedStyleENS_17NGLayoutInputNodeEPNS_24NGConstraintSpaceBuilderE(%"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::LayoutBox"* %69, i64 %72, %"class.blink::NGConstraintSpaceBuilder"* %6) #13
  %73 = load i32, i32* %24, align 8
  %74 = or i32 %73, 65536
  store i32 %74, i32* %24, align 8
  %75 = load i32, i32* %18, align 8
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %126, label %78

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %80 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %79, align 8
  %81 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %80, i64 0, i32 6
  %82 = load i16, i16* %81, align 8
  %83 = and i16 %82, 1024
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %126, label %85

85:                                               ; preds = %78
  %86 = load i8, i8* %70, align 8
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %98

89:                                               ; preds = %85
  %90 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %68, align 8
  %91 = bitcast %"class.blink::LayoutBox"* %90 to i1 (%"class.blink::LayoutBox"*)***
  %92 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %92, i64 182
  %94 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %93, align 8
  %95 = tail call zeroext i1 %94(%"class.blink::LayoutBox"* %90) #13
  br i1 %95, label %126, label %96

96:                                               ; preds = %89
  %97 = load i32, i32* %24, align 8
  br label %98

98:                                               ; preds = %96, %85
  %99 = phi i32 [ %97, %96 ], [ %74, %85 ]
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %104 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %103, align 8
  br label %121

105:                                              ; preds = %98
  %106 = tail call noalias i8* @malloc(i64 88) #13
  %107 = bitcast %union.anon.1634* %23 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds i8, i8* %106, i64 16
  %110 = bitcast i8* %109 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %106, i8 0, i64 16, i1 false) #13
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %106, i64 24
  %112 = bitcast i8* %111 to i32*
  store i32 -64, i32* %112, align 4
  %113 = getelementptr inbounds i8, i8* %106, i64 28
  %114 = bitcast i8* %113 to i32*
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds i8, i8* %106, i64 32
  %116 = bitcast i8* %115 to i16*
  store i16 0, i16* %116, align 8
  %117 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %118 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %117 to i8**
  store i8* %106, i8** %118, align 8
  %119 = or i32 %99, 1
  store i32 %119, i32* %24, align 8
  %120 = bitcast i8* %106 to %"struct.blink::NGConstraintSpace::RareData"*
  br label %121

121:                                              ; preds = %102, %105
  %122 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %104, %102 ], [ %120, %105 ]
  %123 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %122, i64 0, i32 6
  %124 = load i16, i16* %123, align 8
  %125 = or i16 %124, 1024
  store i16 %125, i16* %123, align 8
  br label %126

126:                                              ; preds = %78, %67, %121, %89
  ret void
}

declare { i64, i8 } @_ZN5blink35ComputeMinAndMaxContentContributionERKNS_13ComputedStyleERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), i64) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink20ComputeMinMaxMarginsERKNS_13ComputedStyleENS_17NGLayoutInputNodeE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutBox"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZZN5blinkL18ComputeContentSizeENS_12NGInlineNodeENS_11WritingModeERKNS_17NGConstraintSpaceERKNS_21MinMaxSizesFloatInputENS_17NGLineBreakerModeEPN3WTF6VectorINS_10LayoutUnitELj64ENS9_18PartitionAllocatorEEEPN4absl8optionalISB_EEPbEN13FloatsMaxSize21ComputeMaxSizeForLineESB_SB_(%class.FloatsMaxSize* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = icmp slt i32 %2, %1
  %9 = select i1 %8, i32 %1, i32 %2
  br label %106

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %11, align 8
  %13 = zext i32 %5 to i64
  %14 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %12, i64 %13
  %15 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %0, i64 0, i32 0, i32 0
  br label %28

16:                                               ; preds = %102
  %17 = getelementptr inbounds %class.FloatsMaxSize, %class.FloatsMaxSize* %0, i64 0, i32 0, i32 0
  %18 = icmp slt i32 %82, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %82) #13
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  %24 = icmp slt i32 %73, %23
  %25 = select i1 %24, i32 %23, i32 %73
  store i32 0, i32* %17, align 8
  %26 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %12 to i8*
  %27 = mul nuw nsw i64 %13, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %26, i64 %27) #13
  store i32 0, i32* %4, align 4
  br label %106

28:                                               ; preds = %10, %102
  %29 = phi i32 [ %2, %10 ], [ %73, %102 ]
  %30 = phi %"struct.blink::NGInlineNode::FloatingObject"* [ %12, %10 ], [ %104, %102 ]
  %31 = phi i32 [ 0, %10 ], [ %103, %102 ]
  %32 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %30, i64 0, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %30, i64 0, i32 1
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = lshr i160 %37, 68
  %39 = trunc i160 %38 to i32
  %40 = and i32 %39, 7
  %41 = add nsw i32 %40, -3
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %43, label %53

43:                                               ; preds = %28
  %44 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 41538374868278621028243970633760768
  %49 = icmp eq i160 %48, 0
  %50 = icmp ne i32 %40, 3
  %51 = xor i1 %50, %49
  %52 = select i1 %51, i32 1, i32 2
  br label %53

53:                                               ; preds = %28, %43
  %54 = phi i32 [ %52, %43 ], [ %40, %28 ]
  %55 = icmp eq i32 %31, 1
  %56 = or i32 %54, 4
  %57 = icmp eq i32 %56, 5
  %58 = and i1 %55, %57
  br i1 %58, label %62, label %59

59:                                               ; preds = %53
  %60 = icmp eq i32 %31, 2
  br i1 %60, label %61, label %72

61:                                               ; preds = %59
  switch i32 %54, label %72 [
    i32 5, label %62
    i32 2, label %62
  ]

62:                                               ; preds = %61, %61, %53
  %63 = load i32, i32* %15, align 4
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %63) #13
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  %70 = icmp slt i32 %29, %69
  %71 = select i1 %70, i32 %69, i32 %29
  store i32 0, i32* %15, align 8
  br label %72

72:                                               ; preds = %61, %62, %59
  %73 = phi i32 [ %29, %61 ], [ %71, %62 ], [ %29, %59 ]
  %74 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %30, i64 0, i32 2, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %75, 0
  %77 = select i1 %76, i32 %75, i32 0
  %78 = load i32, i32* %15, align 4
  %79 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %78, i32 %77) #13
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 2147483647, i32 %81, !prof !2
  store i32 %82, i32* %15, align 4
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %85 = bitcast [20 x i8]* %84 to i160*
  %86 = load i160, i160* %85, align 8
  %87 = lshr i160 %86, 71
  %88 = trunc i160 %87 to i32
  %89 = and i32 %88, 7
  %90 = add nsw i32 %89, -3
  %91 = icmp ult i32 %90, 2
  br i1 %91, label %92, label %102

92:                                               ; preds = %72
  %93 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %93, i64 0, i32 0, i32 9
  %95 = bitcast [20 x i8]* %94 to i160*
  %96 = load i160, i160* %95, align 8
  %97 = and i160 %96, 41538374868278621028243970633760768
  %98 = icmp eq i160 %97, 0
  %99 = icmp ne i32 %89, 3
  %100 = xor i1 %99, %98
  %101 = select i1 %100, i32 1, i32 2
  br label %102

102:                                              ; preds = %72, %92
  %103 = phi i32 [ %101, %92 ], [ %89, %72 ]
  %104 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %30, i64 1
  %105 = icmp eq %"struct.blink::NGInlineNode::FloatingObject"* %104, %14
  br i1 %105, label %16, label %28

106:                                              ; preds = %16, %7
  %107 = phi i32 [ %9, %7 ], [ %25, %16 ]
  ret i32 %107
}

; Function Attrs: nounwind
declare void @_ZN5blink13NGLineBreakerD1Ev(%"class.blink::NGLineBreaker"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16NGExclusionSpaceD2Ev(%"class.blink::NGExclusionSpace"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %2, align 8
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %2, align 8
  %4 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %3, null
  br i1 %4, label %65, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %3, i64 0, i32 6
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.1751", %"class.std::__1::unique_ptr.1751"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %7, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %7, align 8
  %9 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.1751"* %6 to %"struct.std::__1::default_delete.1774"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"* %11, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %8) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %3, i64 0, i32 0, i32 0
  %14 = load %"class.base::RefCountedData.1735"*, %"class.base::RefCountedData.1735"** %13, align 8
  %15 = icmp eq %"class.base::RefCountedData.1735"* %14, null
  br i1 %15, label %63, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %63

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %14, i64 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %22, align 8
  %24 = icmp eq %class.scoped_refptr.1740* %23, null
  br i1 %24, label %61, label %25, !prof !3

25:                                               ; preds = %20
  %26 = bitcast %class.scoped_refptr.1740* %23 to i8*
  %27 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %14, i64 0, i32 1, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %59, label %30, !prof !2

30:                                               ; preds = %25
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %23, i64 %31
  br label %33

33:                                               ; preds = %53, %30
  %34 = phi %class.scoped_refptr.1740* [ %54, %53 ], [ %23, %30 ]
  %35 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %34, i64 0, i32 0
  %36 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %35, align 8
  %37 = icmp eq %"struct.blink::NGExclusion"* %36, null
  br i1 %37, label %53, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %36, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #13
  %40 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %53

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %36, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %44, i64 8
  %46 = bitcast %"class.base::RefCounted.1742"* %45 to %"struct.blink::NGExclusionShapeData"**
  %47 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %46, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %46, align 8
  %48 = icmp eq %"struct.blink::NGExclusionShapeData"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = bitcast %"struct.blink::NGExclusionShapeData"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %49, %43
  %52 = bitcast %"struct.blink::NGExclusion"* %36 to i8*
  tail call void @free(i8* %52) #13
  br label %53

53:                                               ; preds = %51, %38, %33
  %54 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %34, i64 1
  %55 = icmp eq %class.scoped_refptr.1740* %54, %32
  br i1 %55, label %56, label %33

56:                                               ; preds = %53
  store i32 0, i32* %27, align 4
  %57 = bitcast %"class.WTF::Vector.1737"* %21 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %25
  %60 = phi i8* [ %58, %56 ], [ %26, %25 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #13
  br label %61

61:                                               ; preds = %20, %59
  %62 = bitcast %"class.base::RefCountedData.1735"* %14 to i8*
  tail call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %61, %16, %12
  %64 = bitcast %"class.blink::NGExclusionSpaceInternal"* %3 to i8*
  tail call void @free(i8* %64) #13
  br label %65

65:                                               ; preds = %1, %63
  ret void
}

declare void @_ZN5blink39SetOrthogonalFallbackInlineSizeIfNeededERKNS_13ComputedStyleENS_17NGLayoutInputNodeEPNS_24NGConstraintSpaceBuilderE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutBox"*, i64, %"class.blink::NGConstraintSpaceBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #2

declare void @_ZN5blink24NGConstraintSpaceBuilder35SetReplacedPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2304"*, %"struct.blink::NGInlineNode::FloatingObject"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGInlineNode::FloatingObject"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGInlineNode::FloatingObject"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2304"* %0, i32 %5) #13
  %14 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.blink::NGInlineNode::FloatingObject"* %1 to i64
  %17 = ptrtoint %"struct.blink::NGInlineNode::FloatingObject"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2304"* %0, i32 %5) #13
  %20 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %6, align 8
  %21 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"struct.blink::NGInlineNode::FloatingObject"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"struct.blink::NGInlineNode::FloatingObject"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::NGInlineNode::FloatingObject", %"struct.blink::NGInlineNode::FloatingObject"* %23, i64 %26
  %28 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %27 to i8*
  %29 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #13
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %22
  %33 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %34 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %33, i64 0, i32 1
  %35 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %34) #13
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %32
  %38 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %34, i8* %38) #13
  br label %39

39:                                               ; preds = %22, %32, %37
  %40 = load i32, i32* %3, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %3, align 4
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2304"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2304"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2304"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %8, align 8
  %10 = icmp eq %"struct.blink::NGInlineNode::FloatingObject"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_12NGInlineNode14FloatingObjectEEEmm(i64 %14) #13
  %16 = udiv i64 %15, 24
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.2304"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #13
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.2304"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 4, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"struct.blink::NGInlineNode::FloatingObject"*
  %33 = icmp eq %"struct.blink::NGInlineNode::FloatingObject"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 5
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_12NGInlineNode14FloatingObjectEEEmm(i64 %37) #13
  %39 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %8, align 8
  %40 = icmp eq %"struct.blink::NGInlineNode::FloatingObject"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 96, %34 ]
  %43 = phi %"struct.blink::NGInlineNode::FloatingObject"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #13
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = udiv i64 %42, 24
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #13
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #13
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #13
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #13
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2304"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2304"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %38

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %5, align 8
  %7 = icmp eq %"struct.blink::NGInlineNode::FloatingObject"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NGInlineNode::FloatingObject"*
  %10 = icmp eq %"struct.blink::NGInlineNode::FloatingObject"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2304"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %90

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.2304"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %6 to i8*
  %26 = mul nuw nsw i64 %19, 24
  br i1 %24, label %37, label %27, !prof !2

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #13
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %27
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #13
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #13
  br label %37

37:                                               ; preds = %16, %35, %30, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #13
  tail call void @_ZN3WTF12VectorBufferIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2305"* %20, %"struct.blink::NGInlineNode::FloatingObject"* nonnull %6) #13
  br label %90

38:                                               ; preds = %2
  %39 = zext i32 %1 to i64
  %40 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_12NGInlineNode14FloatingObjectEEEmm(i64 %39) #13
  %41 = udiv i64 %40, 24
  %42 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE4CallEm(i64 %41) #13
  %43 = ptrtoint %"class.blink::HeapVectorBacking"* %42 to i64
  %44 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 2
  %47 = icmp ne %"class.blink::HeapVectorBacking"* %42, null
  %48 = icmp ne %"struct.blink::NGInlineNode::FloatingObject"* %45, null
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %69, !prof !3

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 1, i64 0
  %52 = bitcast i8* %51 to %"struct.blink::NGInlineNode::FloatingObject"*
  %53 = icmp eq %"struct.blink::NGInlineNode::FloatingObject"* %45, %52
  %54 = load i32, i32* %46, align 4
  %55 = zext i32 %54 to i64
  %56 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %45 to i8*
  %57 = mul nuw nsw i64 %55, 24
  %58 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %42, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %58, i8* nonnull %56, i64 %57) #13
  br i1 %53, label %59, label %69

59:                                               ; preds = %50
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %59
  %63 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %64 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %63, i64 0, i32 1
  %65 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %64) #13
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %62
  %68 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %64, i8* %68) #13
  br label %69

69:                                               ; preds = %38, %50, %59, %62, %67
  %70 = bitcast %"class.WTF::Vector.2304"* %0 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = load i32, i32* %46, align 4
  %73 = zext i32 %72 to i64
  %74 = mul nuw nsw i64 %73, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %71, i64 %74) #13
  %75 = load %"struct.blink::NGInlineNode::FloatingObject"*, %"struct.blink::NGInlineNode::FloatingObject"** %44, align 8
  %76 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 1, i64 0
  %77 = bitcast i8* %76 to %"struct.blink::NGInlineNode::FloatingObject"*
  %78 = icmp eq %"struct.blink::NGInlineNode::FloatingObject"* %75, %77
  br i1 %78, label %81, label %79, !prof !3

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2305"* %80, %"struct.blink::NGInlineNode::FloatingObject"* %75) #13
  br label %81

81:                                               ; preds = %69, %79
  %82 = bitcast %"class.WTF::Vector.2304"* %0 to i64*
  store atomic i64 %43, i64* %82 monotonic, align 8
  %83 = trunc i64 %41 to i32
  %84 = getelementptr inbounds %"class.WTF::Vector.2304", %"class.WTF::Vector.2304"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %83, i32* %84, align 8
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %42, i64 0, i32 0
  %89 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #13
  br label %90

90:                                               ; preds = %87, %81, %37, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_12NGInlineNode14FloatingObjectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.26, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS2_EEE14AllocateObjectIS6_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS2_EEE14AllocateObjectIS6_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #13
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %34, i8* %35) #13
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #13
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #13
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #13
  br label %29

29:                                               ; preds = %22, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_12NGInlineNode14FloatingObjectEN3WTF12VectorTraitsIS3_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink12NGInlineNode14FloatingObjectELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2305"*, %"struct.blink::NGInlineNode::FloatingObject"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"struct.blink::NGInlineNode::FloatingObject"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %128 [
    i32 5, label %118
    i32 4, label %62
    i32 3, label %6
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %8 = bitcast %union.anon.1635* %7 to %"class.blink::NGTableConstraintSpaceData"**
  %9 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %8, align 8
  %10 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %9, null
  br i1 %10, label %128, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #13
  %13 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %128

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  %19 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %18, null
  %20 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !3

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !2

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #13
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  %30 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %29, null
  %31 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %29 to i8*
  br i1 %30, label %38, label %32, !prof !3

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !2

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #13
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  %41 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %40, null
  %42 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !3

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #13
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %50, align 8
  %52 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51, null
  %53 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51 to i8*
  br i1 %52, label %60, label %54, !prof !3

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !2

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #13
  br label %60

60:                                               ; preds = %49, %59
  %61 = bitcast %"class.blink::NGTableConstraintSpaceData"* %9 to i8*
  tail call void @free(i8* %61) #13
  br label %128

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %64 = bitcast %union.anon.1635* %63 to %"class.blink::NGTableConstraintSpaceData"**
  %65 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %64, align 8
  %66 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %65, null
  br i1 %66, label %128, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #13
  %69 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %128

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  %75 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %74, null
  %76 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !3

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !2

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #13
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  br label %83

83:                                               ; preds = %82, %72
  %84 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  %86 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %85, null
  %87 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %85 to i8*
  br i1 %86, label %94, label %88, !prof !3

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #13
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  br label %94

94:                                               ; preds = %93, %83
  %95 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  %97 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %96, null
  %98 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %96 to i8*
  br i1 %97, label %105, label %99, !prof !3

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103, !prof !2

103:                                              ; preds = %99
  store i32 0, i32* %100, align 4
  br label %104

104:                                              ; preds = %103, %99
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #13
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  br label %105

105:                                              ; preds = %104, %94
  %106 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %106, align 8
  %108 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107, null
  %109 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107 to i8*
  br i1 %108, label %116, label %110, !prof !3

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114, !prof !2

114:                                              ; preds = %110
  store i32 0, i32* %111, align 4
  br label %115

115:                                              ; preds = %114, %110
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #13
  br label %116

116:                                              ; preds = %105, %115
  %117 = bitcast %"class.blink::NGTableConstraintSpaceData"* %65 to i8*
  tail call void @free(i8* %117) #13
  br label %128

118:                                              ; preds = %1
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %120 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %119, align 8
  %121 = icmp eq %"class.blink::SerializedScriptValue"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %120) #13
  %127 = bitcast %"class.blink::SerializedScriptValue"* %120 to i8*
  tail call void @free(i8* %127) #13
  br label %128

128:                                              ; preds = %126, %122, %118, %116, %67, %62, %60, %11, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::LayoutUnit"* @_ZNK3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2104"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2104", %"class.WTF::Vector.2104"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2104", %"class.WTF::Vector.2104"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 %25
  ret %"class.blink::LayoutUnit"* %26
}

declare float @_ZNK5blink4Font8TabWidthEPKNS_14SimpleFontDataERKNS_7TabSizeEf(%"class.blink::Font"*, %"class.blink::SimpleFontData"*, %"struct.blink::TabSize"* dereferenceable(8), float) local_unnamed_addr #2

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %6, align 8
  %8 = icmp eq %"class.blink::NGLayoutResult"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #13
  %11 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %7) #13
  %15 = bitcast %"class.blink::NGLayoutResult"* %7 to i8*
  tail call void @free(i8* %15) #13
  br label %16

16:                                               ; preds = %14, %9, %5
  store i8 0, i8* %2, align 8
  br label %17

17:                                               ; preds = %1, %16
  %18 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 9, i32 0
  %19 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %18, align 8
  %20 = icmp eq %"class.blink::NGLayoutResult"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #13
  %23 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %19) #13
  %27 = bitcast %"class.blink::NGLayoutResult"* %19 to i8*
  tail call void @free(i8* %27) #13
  br label %28

28:                                               ; preds = %17, %21, %26
  %29 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 8, i32 0
  %30 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %29, align 8
  %31 = icmp eq %"class.blink::ShapeResult"* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %30, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %33) #13
  %34 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %30) #13
  %38 = bitcast %"class.blink::ShapeResult"* %30 to i8*
  tail call void @free(i8* %38) #13
  br label %39

39:                                               ; preds = %28, %32, %37
  %40 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 7, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #13
  br label %56

56:                                               ; preds = %39, %52, %55
  %57 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 6, i32 0
  %58 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %57, align 8
  %59 = icmp eq %"class.blink::ShapeResultView"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #13
  %62 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %58) #13
  %66 = bitcast %"class.blink::ShapeResultView"* %58 to i8*
  tail call void @free(i8* %66) #13
  br label %67

67:                                               ; preds = %56, %60, %65
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2310"*, %"struct.blink::NGInlineItemResult"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"struct.blink::NGInlineItemResult"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink17NGPositionedFloatELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2267"*, %"struct.blink::NGPositionedFloat"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"struct.blink::NGPositionedFloat"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !2

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !3

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #13
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !3

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #13
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #13
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #13
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #13
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #13
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !2

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #13
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #13
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #13
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !2

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !3

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #13
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !2

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !3

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #13
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !3

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #13
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #13
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1740* %4, null
  br i1 %5, label %42, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1740* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.1740* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #13
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted.1742"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #13
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.1740* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector.1737"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #13
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %44, align 8
  %46 = icmp eq %class.scoped_refptr.1740* %45, null
  br i1 %46, label %83, label %47, !prof !3

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.1740* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !2

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.1740* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #13
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted.1742"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #13
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.1740* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector.1737"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #13
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2105"*, %"class.blink::LayoutUnit"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutUnit"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1920"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %36

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1920"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %34, label %14

14:                                               ; preds = %4, %26
  %15 = phi %"class.blink::NGInlineItem"* [ %32, %26 ], [ %6, %4 ]
  %16 = phi %"class.blink::NGInlineItem"* [ %31, %26 ], [ null, %4 ]
  %17 = bitcast %"class.blink::NGInlineItem"* %15 to i64*
  %18 = bitcast %"class.blink::NGInlineItem"* %16 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %15, i64 0, i32 2, i32 0
  %21 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %16, i64 0, i32 2, i32 0
  store %"class.blink::ShapeResult"* %21, %"class.blink::ShapeResult"** %22, align 8
  %23 = icmp eq %"class.blink::ShapeResult"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %21, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #13
  br label %26

26:                                               ; preds = %24, %14
  %27 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %16, i64 0, i32 3
  %28 = bitcast %"class.blink::LayoutObject"** %27 to i8*
  %29 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %15, i64 0, i32 3
  %30 = bitcast %"class.blink::LayoutObject"** %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %30, i64 16, i1 false) #13
  tail call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* %15) #13
  %31 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %16, i64 1
  %32 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %15, i64 1
  %33 = icmp eq %"class.blink::NGInlineItem"* %32, %10
  br i1 %33, label %34, label %14

34:                                               ; preds = %26, %4
  %35 = bitcast %"class.blink::NGInlineItem"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %35) #13
  br label %81

36:                                               ; preds = %2
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12NGInlineItemEEEmm(i64 %37) #13
  %39 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12NGInlineItemEEEPKcv, i64 0, i64 0)) #13
  %40 = lshr i64 %38, 5
  %41 = ptrtoint i8* %39 to i64
  %42 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %43, i64 %46
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %36
  %50 = bitcast %"class.blink::NGInlineItem"* %43 to i8*
  br label %76

51:                                               ; preds = %36
  %52 = bitcast i8* %39 to %"class.blink::NGInlineItem"*
  br label %53

53:                                               ; preds = %51, %65
  %54 = phi %"class.blink::NGInlineItem"* [ %71, %65 ], [ %43, %51 ]
  %55 = phi %"class.blink::NGInlineItem"* [ %70, %65 ], [ %52, %51 ]
  %56 = bitcast %"class.blink::NGInlineItem"* %54 to i64*
  %57 = bitcast %"class.blink::NGInlineItem"* %55 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %54, i64 0, i32 2, i32 0
  %60 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %55, i64 0, i32 2, i32 0
  store %"class.blink::ShapeResult"* %60, %"class.blink::ShapeResult"** %61, align 8
  %62 = icmp eq %"class.blink::ShapeResult"* %60, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %64) #13
  br label %65

65:                                               ; preds = %63, %53
  %66 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %55, i64 0, i32 3
  %67 = bitcast %"class.blink::LayoutObject"** %66 to i8*
  %68 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %54, i64 0, i32 3
  %69 = bitcast %"class.blink::LayoutObject"** %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %69, i64 16, i1 false) #13
  tail call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* %54) #13
  %70 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %55, i64 1
  %71 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %54, i64 1
  %72 = icmp eq %"class.blink::NGInlineItem"* %71, %47
  br i1 %72, label %73, label %53

73:                                               ; preds = %65
  %74 = bitcast %"class.WTF::Vector.1920"* %0 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %49, %73
  %77 = phi i8* [ %75, %73 ], [ %50, %49 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #13
  %78 = bitcast %"class.WTF::Vector.1920"* %0 to i64*
  store atomic i64 %41, i64* %78 monotonic, align 8
  %79 = trunc i64 %40 to i32
  %80 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %79, i32* %80, align 8
  br label %81

81:                                               ; preds = %76, %34
  ret void
}

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE10EnterBlockEPKNS_13ComputedStyleE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare %"class.blink::LayoutObject"* @_ZN5blink16LayoutNGListItem26FindSymbolMarkerLayoutTextEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE10AppendTextEPNS_10LayoutTextEPKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::LayoutText"*, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE17SetIsSymbolMarkerEv(%"class.blink::NGInlineItemsBuilderTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE16ClearNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE14AppendFloatingEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE19ClearInlineFragmentEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE25AppendOutOfFlowPositionedEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE12AppendOpaqueENS_12NGInlineItem16NGInlineItemTypeEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"*, i32, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE18AppendAtomicInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE29UpdateShouldCreateBoxFragmentEPNS_12LayoutInlineE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::LayoutInline"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE11EnterInlineEPNS_12LayoutInlineE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::LayoutInline"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE10ExitInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_25EmptyOffsetMappingBuilderEE9ExitBlockEv(%"class.blink::NGInlineItemsBuilderTemplate"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink22NGOffsetMappingBuilderC1Ev(%"class.blink::NGOffsetMappingBuilder"*) unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE10EnterBlockEPKNS_13ComputedStyleE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE10AppendTextEPNS_10LayoutTextEPKNS_16NGInlineNodeDataE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::LayoutText"*, %"struct.blink::NGInlineNodeData"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE17SetIsSymbolMarkerEv(%"class.blink::NGInlineItemsBuilderTemplate.2018"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE16ClearNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE14AppendFloatingEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE19ClearInlineFragmentEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE25AppendOutOfFlowPositionedEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE12AppendOpaqueENS_12NGInlineItem16NGInlineItemTypeEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, i32, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE18AppendAtomicInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE29UpdateShouldCreateBoxFragmentEPNS_12LayoutInlineE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::LayoutInline"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE11EnterInlineEPNS_12LayoutInlineE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::LayoutInline"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE10ExitInlineEPNS_12LayoutObjectE(%"class.blink::NGInlineItemsBuilderTemplate.2018"*, %"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink28NGInlineItemsBuilderTemplateINS_22NGOffsetMappingBuilderEE9ExitBlockEv(%"class.blink::NGInlineItemsBuilderTemplate.2018"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15NGOffsetMappingD1Ev(%"class.blink::NGOffsetMapping"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGInlineItemsDataD2Ev(%"struct.blink::NGInlineItemsData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.blink::NGOffsetMapping"*, %"class.blink::NGOffsetMapping"** %2, align 8
  store %"class.blink::NGOffsetMapping"* null, %"class.blink::NGOffsetMapping"** %2, align 8
  %4 = icmp eq %"class.blink::NGOffsetMapping"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink15NGOffsetMappingD1Ev(%"class.blink::NGOffsetMapping"* nonnull %3) #13
  %6 = bitcast %"class.blink::NGOffsetMapping"* %3 to i8*
  tail call void @free(i8* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %8, align 8
  store %"class.blink::NGInlineItemSegments"* null, %"class.blink::NGInlineItemSegments"** %8, align 8
  %10 = icmp eq %"class.blink::NGInlineItemSegments"* %9, null
  br i1 %10, label %35, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  %15 = bitcast i32* %13 to i8*
  br i1 %14, label %22, label %16, !prof !3

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %9, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #13
  store i32* null, i32** %12, align 8
  br label %22

22:                                               ; preds = %21, %11
  %23 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGInlineItemSegment"*, %"class.blink::NGInlineItemSegment"** %23, align 8
  %25 = icmp eq %"class.blink::NGInlineItemSegment"* %24, null
  %26 = bitcast %"class.blink::NGInlineItemSegment"* %24 to i8*
  br i1 %25, label %33, label %27, !prof !3

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::NGInlineItemSegments", %"class.blink::NGInlineItemSegments"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #13
  br label %33

33:                                               ; preds = %32, %22
  %34 = bitcast %"class.blink::NGInlineItemSegments"* %9 to i8*
  tail call void @free(i8* %34) #13
  br label %35

35:                                               ; preds = %7, %33
  %36 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %37, align 8
  %39 = icmp eq %"class.blink::NGInlineItem"* %38, null
  br i1 %39, label %57, label %40, !prof !3

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::NGInlineItem"* %38 to i8*
  %42 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %55, label %45, !prof !2

45:                                               ; preds = %40
  %46 = zext i32 %43 to i64
  %47 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %38, i64 %46
  br label %48

48:                                               ; preds = %48, %45
  %49 = phi %"class.blink::NGInlineItem"* [ %50, %48 ], [ %38, %45 ]
  tail call void @_ZN5blink12NGInlineItemD1Ev(%"class.blink::NGInlineItem"* %49) #13
  %50 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %49, i64 1
  %51 = icmp eq %"class.blink::NGInlineItem"* %50, %47
  br i1 %51, label %52, label %48

52:                                               ; preds = %48
  store i32 0, i32* %42, align 4
  %53 = bitcast %"class.WTF::Vector.1920"* %36 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %40
  %56 = phi i8* [ %54, %52 ], [ %41, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #13
  store %"class.blink::NGInlineItem"* null, %"class.blink::NGInlineItem"** %37, align 8
  br label %57

57:                                               ; preds = %35, %55
  %58 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #13
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17SvgInlineNodeDataD2Ev(%"struct.blink::SvgInlineNodeData"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.1985"*, %"struct.WTF::KeyValuePair.1985"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.1985"* %3, null
  br i1 %4, label %32, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %27, %9
  %12 = phi i64 [ 0, %9 ], [ %28, %27 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %3, i64 %12, i32 0
  %14 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutText"* %14, inttoptr (i64 -1 to %"class.blink::LayoutText"*)
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  %20 = bitcast i32* %18 to i8*
  br i1 %19, label %27, label %21, !prof !3

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %3, i64 %12, i32 1, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !2

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #13
  store i32* null, i32** %17, align 8
  br label %27

27:                                               ; preds = %26, %16, %11
  %28 = add nuw nsw i64 %12, 1
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %30, label %11

30:                                               ; preds = %27, %5
  %31 = bitcast %"struct.WTF::KeyValuePair.1985"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #13
  store %"struct.WTF::KeyValuePair.1985"* null, %"struct.WTF::KeyValuePair.1985"** %2, align 8
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::SvgTextContentRange"*, %"struct.blink::SvgTextContentRange"** %33, align 8
  %35 = icmp eq %"struct.blink::SvgTextContentRange"* %34, null
  %36 = bitcast %"struct.blink::SvgTextContentRange"* %34 to i8*
  br i1 %35, label %43, label %37, !prof !3

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37
  store i32 0, i32* %38, align 4
  br label %42

42:                                               ; preds = %41, %37
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #13
  store %"struct.blink::SvgTextContentRange"* null, %"struct.blink::SvgTextContentRange"** %33, align 8
  br label %43

43:                                               ; preds = %32, %42
  %44 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::SvgTextContentRange"*, %"struct.blink::SvgTextContentRange"** %44, align 8
  %46 = icmp eq %"struct.blink::SvgTextContentRange"* %45, null
  %47 = bitcast %"struct.blink::SvgTextContentRange"* %45 to i8*
  br i1 %46, label %54, label %48, !prof !3

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52, !prof !2

52:                                               ; preds = %48
  store i32 0, i32* %49, align 4
  br label %53

53:                                               ; preds = %52, %48
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #13
  store %"struct.blink::SvgTextContentRange"* null, %"struct.blink::SvgTextContentRange"** %44, align 8
  br label %54

54:                                               ; preds = %43, %53
  %55 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"struct.std::__1::pair.1973"*, %"struct.std::__1::pair.1973"** %55, align 8
  %57 = icmp eq %"struct.std::__1::pair.1973"* %56, null
  %58 = bitcast %"struct.std::__1::pair.1973"* %56 to i8*
  br i1 %57, label %65, label %59, !prof !3

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.blink::SvgInlineNodeData", %"struct.blink::SvgInlineNodeData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !2

63:                                               ; preds = %59
  store i32 0, i32* %60, align 4
  br label %64

64:                                               ; preds = %63, %59
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %58) #13
  store %"struct.std::__1::pair.1973"* null, %"struct.std::__1::pair.1973"** %55, align 8
  br label %65

65:                                               ; preds = %54, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1985"*, i8 } @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E6insertINS_17HashMapTranslatorISH_SC_S7_EES4_S8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_(%"class.WTF::HashTable.1982"*, %"class.blink::LayoutText"** dereferenceable(8), %"class.WTF::Vector.1954"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1985"*, %"struct.WTF::KeyValuePair.1985"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1985"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1985"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E6ExpandEPS9_(%"class.WTF::HashTable.1982"* %0, %"struct.WTF::KeyValuePair.1985"* null)
  %9 = load %"struct.WTF::KeyValuePair.1985"*, %"struct.WTF::KeyValuePair.1985"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1985"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutText"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutText"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutText"*
  br i1 %42, label %78, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutText"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1985"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1985"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutText"* %59, %43
  br i1 %64, label %122, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutText"* %59, inttoptr (i64 -1 to %"class.blink::LayoutText"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1985"* %60, %"struct.WTF::KeyValuePair.1985"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutText"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1985"* %67, null
  br i1 %77, label %78, label %81

78:                                               ; preds = %10, %76
  %79 = phi %"struct.WTF::KeyValuePair.1985"* [ %72, %76 ], [ %39, %10 ]
  %80 = bitcast %"struct.WTF::KeyValuePair.1985"* %79 to i64*
  br label %94

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %67, i64 0, i32 1
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %67, i64 0, i32 1, i32 0, i32 0, i32 1
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %67, i64 0, i32 1, i32 0, i32 0, i32 2
  %85 = bitcast %"class.WTF::Vector.1954"* %82 to i64*
  %86 = bitcast %"struct.WTF::KeyValuePair.1985"* %67 to i64*
  store i64 0, i64* %86, align 8
  store atomic i64 0, i64* %85 monotonic, align 8
  store i32 0, i32* %83, align 4
  store i32 0, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, 2147483647
  %90 = and i32 %89, 2147483647
  %91 = and i32 %88, -2147483648
  %92 = or i32 %90, %91
  store i32 %92, i32* %87, align 8
  %93 = load i64, i64* %16, align 8
  br label %94

94:                                               ; preds = %78, %81
  %95 = phi i64* [ %80, %78 ], [ %86, %81 ]
  %96 = phi i64 [ %17, %78 ], [ %93, %81 ]
  %97 = phi %"struct.WTF::KeyValuePair.1985"* [ %79, %78 ], [ %67, %81 ]
  store i64 %96, i64* %95, align 8
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %97, i64 0, i32 1
  %99 = bitcast %"class.WTF::Vector.1954"* %2 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.WTF::Vector.1954"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store atomic i64 %102, i64* %99 monotonic, align 8
  store atomic i64 %100, i64* %101 monotonic, align 8
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %97, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %2, i64 0, i32 0, i32 0, i32 1
  %105 = load i32, i32* %103, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %103, align 4
  store i32 %105, i32* %104, align 4
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %97, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %2, i64 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %107, align 4
  %110 = load i32, i32* %108, align 4
  store i32 %110, i32* %107, align 4
  store i32 %109, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = add i32 %115, %113
  %117 = shl i32 %116, 1
  %118 = load i32, i32* %12, align 8
  %119 = icmp ult i32 %117, %118
  br i1 %119, label %122, label %120

120:                                              ; preds = %94
  %121 = tail call %"struct.WTF::KeyValuePair.1985"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E6ExpandEPS9_(%"class.WTF::HashTable.1982"* %0, %"struct.WTF::KeyValuePair.1985"* %97)
  br label %122

122:                                              ; preds = %58, %94, %120
  %123 = phi i8 [ 1, %94 ], [ 1, %120 ], [ 0, %58 ]
  %124 = phi %"struct.WTF::KeyValuePair.1985"* [ %97, %94 ], [ %121, %120 ], [ %60, %58 ]
  %125 = insertvalue { %"struct.WTF::KeyValuePair.1985"*, i8 } undef, %"struct.WTF::KeyValuePair.1985"* %124, 0
  %126 = insertvalue { %"struct.WTF::KeyValuePair.1985"*, i8 } %125, i8 %123, 1
  ret { %"struct.WTF::KeyValuePair.1985"*, i8 } %126
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1985"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E6ExpandEPS9_(%"class.WTF::HashTable.1982"*, %"struct.WTF::KeyValuePair.1985"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.32, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink10LayoutTextENS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1985"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %62, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %59, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %60, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %44
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %44, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %44, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %44, i32 1, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.1954"* %47 to i64*
  %51 = bitcast %"struct.WTF::KeyValuePair.1985"* %46 to i64*
  store i64 0, i64* %51, align 8
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %48, align 4
  store i32 0, i32* %49, align 4
  %52 = or i64 %44, 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %52
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %52, i32 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %52, i32 1, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %52, i32 1, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector.1954"* %54 to i64*
  %58 = bitcast %"struct.WTF::KeyValuePair.1985"* %53 to i64*
  store i64 0, i64* %58, align 8
  store atomic i64 0, i64* %57 monotonic, align 8
  store i32 0, i32* %55, align 4
  store i32 0, i32* %56, align 4
  %59 = add nuw nsw i64 %44, 2
  %60 = add i64 %45, -2
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %38
  %63 = phi i64 [ 0, %38 ], [ %59, %43 ]
  %64 = icmp eq i64 %39, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %63
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %63, i32 1
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %63, i32 1, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %36, i64 %63, i32 1, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::Vector.1954"* %67 to i64*
  %71 = bitcast %"struct.WTF::KeyValuePair.1985"* %66 to i64*
  store i64 0, i64* %71, align 8
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %68, align 4
  store i32 0, i32* %69, align 4
  br label %72

72:                                               ; preds = %65, %62, %31
  %73 = call %"struct.WTF::KeyValuePair.1985"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E8RehashToEPS9_jSJ_(%"class.WTF::HashTable.1982"* %0, %"struct.WTF::KeyValuePair.1985"* %36, i32 %32, %"struct.WTF::KeyValuePair.1985"* %1) #13
  ret %"struct.WTF::KeyValuePair.1985"* %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1985"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E8RehashToEPS9_jSJ_(%"class.WTF::HashTable.1982"*, %"struct.WTF::KeyValuePair.1985"*, i32, %"struct.WTF::KeyValuePair.1985"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1982", align 8
  %6 = bitcast %"class.WTF::HashTable.1982"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1982"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1985"* %1, %"struct.WTF::KeyValuePair.1985"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1985"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1982"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1982"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1985"*, %"struct.WTF::KeyValuePair.1985"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1985"* %22 to i64
  br label %66

24:                                               ; preds = %113
  %25 = bitcast %"class.WTF::HashTable.1982"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1982"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %114, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1985"* [ null, %16 ], [ %117, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %115, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1985"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %35, i64 %42, i32 0
  %44 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutText"* %44, inttoptr (i64 -1 to %"class.blink::LayoutText"*)
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  %50 = bitcast i32* %48 to i8*
  br i1 %49, label %57, label %51, !prof !3

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %35, i64 %42, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !2

55:                                               ; preds = %51
  store i32 0, i32* %52, align 4
  br label %56

56:                                               ; preds = %55, %51
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #13
  store i32* null, i32** %47, align 8
  br label %57

57:                                               ; preds = %56, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.1985"* %33

66:                                               ; preds = %21, %113
  %67 = phi i64 [ %114, %113 ], [ %23, %21 ]
  %68 = phi i32 [ %115, %113 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.1985"* [ %116, %113 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair.1985"* [ %117, %113 ], [ null, %21 ]
  %71 = phi i32 [ %118, %113 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %69, i64 %72
  %74 = bitcast %"struct.WTF::KeyValuePair.1985"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %76 [
    i64 -1, label %113
    i64 0, label %113
  ]

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %73, i64 0, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.1985"*, i8 } @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E16LookupForWritingERKS4_(%"class.WTF::HashTable.1982"* nonnull %5, %"class.blink::LayoutText"** dereferenceable(8) %77) #13
  %79 = extractvalue { %"struct.WTF::KeyValuePair.1985"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %79, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = icmp eq i32* %81, null
  %83 = bitcast i32* %81 to i8*
  br i1 %82, label %90, label %84, !prof !3

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %79, i64 0, i32 1, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88, !prof !2

88:                                               ; preds = %84
  store i32 0, i32* %85, align 4
  br label %89

89:                                               ; preds = %88, %84
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #13
  store i32* null, i32** %80, align 8
  br label %90

90:                                               ; preds = %76, %89
  %91 = load i64, i64* %74, align 8
  %92 = bitcast %"struct.WTF::KeyValuePair.1985"* %79 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %79, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %69, i64 %72, i32 1
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %79, i64 0, i32 1, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %79, i64 0, i32 1, i32 0, i32 0, i32 2
  %97 = bitcast %"class.WTF::Vector.1954"* %94 to i64*
  %98 = bitcast %"class.WTF::Vector.1954"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #13
  %99 = load i64, i64* %97, align 8
  %100 = bitcast %"class.WTF::Vector.1954"* %93 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %69, i64 %72, i32 1, i32 0, i32 0, i32 1
  %102 = load i32, i32* %95, align 4
  %103 = load i32, i32* %101, align 4
  store i32 %103, i32* %95, align 4
  store i32 %102, i32* %101, align 4
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %69, i64 %72, i32 1, i32 0, i32 0, i32 2
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %96, align 4
  store i32 %105, i32* %104, align 4
  %107 = load %"struct.WTF::KeyValuePair.1985"*, %"struct.WTF::KeyValuePair.1985"** %15, align 8
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %107, i64 %72
  %109 = icmp eq %"struct.WTF::KeyValuePair.1985"* %108, %3
  %110 = select i1 %109, %"struct.WTF::KeyValuePair.1985"* %79, %"struct.WTF::KeyValuePair.1985"* %70
  %111 = load i32, i32* %12, align 8
  %112 = ptrtoint %"struct.WTF::KeyValuePair.1985"* %107 to i64
  br label %113

113:                                              ; preds = %66, %66, %90
  %114 = phi i64 [ %67, %66 ], [ %112, %90 ], [ %67, %66 ]
  %115 = phi i32 [ %68, %66 ], [ %111, %90 ], [ %68, %66 ]
  %116 = phi %"struct.WTF::KeyValuePair.1985"* [ %69, %66 ], [ %107, %90 ], [ %69, %66 ]
  %117 = phi %"struct.WTF::KeyValuePair.1985"* [ %70, %66 ], [ %110, %90 ], [ %70, %66 ]
  %118 = add i32 %71, 1
  %119 = icmp eq i32 %118, %115
  br i1 %119, label %24, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1985"*, i8 } @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NS_6VectorIjLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS8_EEEESF_S7_E16LookupForWritingERKS4_(%"class.WTF::HashTable.1982"*, %"class.blink::LayoutText"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1985"*, %"struct.WTF::KeyValuePair.1985"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1982", %"class.WTF::HashTable.1982"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutText"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1985"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutText"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutText"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1985"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.1985"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1985"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1985"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1985"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutText"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutText"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutText"* %63, inttoptr (i64 -1 to %"class.blink::LayoutText"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.1985"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1985", %"struct.WTF::KeyValuePair.1985"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutText"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.1985"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.1985"*, i8 } undef, %"struct.WTF::KeyValuePair.1985"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.1985"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.1985"*, i8 } %85
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.1954"*, i32* dereferenceable(4)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1954"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.1954"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.1954"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1954", %"class.WTF::Vector.1954"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1954"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.1954"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.1954"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN5blink19NGInlineItemSegmentC1ERKNS_12RunSegmenter17RunSegmenterRangeE(%"class.blink::NGInlineItemSegment"*, %"struct.blink::RunSegmenter::RunSegmenterRange"* dereferenceable(20)) unnamed_addr #2

declare void @_ZN5blink19NGInlineItemSegmentC1EjRKNS_12NGInlineItemE(%"class.blink::NGInlineItemSegment"*, i32, %"class.blink::NGInlineItem"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ShapeResult10ShapeRangeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2071"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::ShapeResult::ShapeRange"*, %"struct.blink::ShapeResult::ShapeRange"** %31, align 8
  %33 = icmp eq %"struct.blink::ShapeResult::ShapeRange"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 32
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ShapeResult10ShapeRangeEEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ShapeResult10ShapeRangeEEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2071"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 4
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2071"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 32, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2071"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2071"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::ShapeResult::ShapeRange"*, %"struct.blink::ShapeResult::ShapeRange"** %5, align 8
  %7 = icmp eq %"struct.blink::ShapeResult::ShapeRange"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::ShapeResult::ShapeRange"*
  %10 = icmp eq %"struct.blink::ShapeResult::ShapeRange"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2071"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2071"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"struct.blink::ShapeResult::ShapeRange"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2072"* %19, %"struct.blink::ShapeResult::ShapeRange"* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11ShapeResult10ShapeRangeEEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11ShapeResult10ShapeRangeEEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 4
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::ShapeResult::ShapeRange"*, %"struct.blink::ShapeResult::ShapeRange"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"struct.blink::ShapeResult::ShapeRange"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"struct.blink::ShapeResult::ShapeRange"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #13
  %46 = load %"struct.blink::ShapeResult::ShapeRange"*, %"struct.blink::ShapeResult::ShapeRange"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"struct.blink::ShapeResult::ShapeRange"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"struct.blink::ShapeResult::ShapeRange"*
  %51 = icmp eq %"struct.blink::ShapeResult::ShapeRange"* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink11ShapeResult10ShapeRangeELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2072"* %53, %"struct.blink::ShapeResult::ShapeRange"* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2071"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2071", %"class.WTF::Vector.2071"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.1920"*, %"class.blink::NGInlineItem"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = tail call %"class.blink::NGInlineItem"* @_ZN3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1920"* %0, i32 %9, %"class.blink::NGInlineItem"* %1) #13
  %15 = load i32, i32* %7, align 4
  br label %16

16:                                               ; preds = %13, %3
  %17 = phi i32 [ %15, %13 ], [ %8, %3 ]
  %18 = phi %"class.blink::NGInlineItem"* [ %14, %13 ], [ %1, %3 ]
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %9, %17
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* %25, i8* %26) #13
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %34 = zext i32 %2 to i64
  %35 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %18, i64 %34
  %36 = icmp eq i32 %2, 0
  br i1 %36, label %63, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::Vector.1920", %"class.WTF::Vector.1920"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %38, align 8
  %40 = load i32, i32* %7, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %39, i64 %41
  br label %43

43:                                               ; preds = %37, %55
  %44 = phi %"class.blink::NGInlineItem"* [ %60, %55 ], [ %42, %37 ]
  %45 = phi %"class.blink::NGInlineItem"* [ %61, %55 ], [ %18, %37 ]
  %46 = bitcast %"class.blink::NGInlineItem"* %45 to i64*
  %47 = bitcast %"class.blink::NGInlineItem"* %44 to i64*
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %45, i64 0, i32 2, i32 0
  %50 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %44, i64 0, i32 2, i32 0
  store %"class.blink::ShapeResult"* %50, %"class.blink::ShapeResult"** %51, align 8
  %52 = icmp eq %"class.blink::ShapeResult"* %50, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %43
  %54 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %50, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %54) #13
  br label %55

55:                                               ; preds = %53, %43
  %56 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %44, i64 0, i32 3
  %57 = bitcast %"class.blink::LayoutObject"** %56 to i8*
  %58 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %45, i64 0, i32 3
  %59 = bitcast %"class.blink::LayoutObject"** %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %59, i64 16, i1 false) #13
  %60 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %44, i64 1
  %61 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %45, i64 1
  %62 = icmp eq %"class.blink::NGInlineItem"* %61, %35
  br i1 %62, label %63, label %43

63:                                               ; preds = %55, %33
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEdeEv(%"class.base::CheckedContiguousIterator.2366"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  %11 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %8, align 8
  %12 = icmp eq %"class.blink::NGInlineItem"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGInlineItem"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"class.blink::NGInlineItem"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  ret %"class.blink::NGInlineItem"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator.2366"* @_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEppEv(%"class.base::CheckedContiguousIterator.2366"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  %11 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %8, align 8
  %12 = icmp eq %"class.blink::NGInlineItem"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGInlineItem"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"class.blink::NGInlineItem"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  %27 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %26, i64 1
  store %"class.blink::NGInlineItem"* %27, %"class.blink::NGInlineItem"** %7, align 8
  ret %"class.base::CheckedContiguousIterator.2366"* %0
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2366"*, %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.blink::NGInlineItem"*, align 8
  %8 = alloca %"class.blink::NGInlineItem"*, align 8
  %9 = alloca %"class.blink::NGInlineItem"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::NGInlineItem"* %1, %"class.blink::NGInlineItem"** %7, align 8
  store %"class.blink::NGInlineItem"* %2, %"class.blink::NGInlineItem"** %8, align 8
  store %"class.blink::NGInlineItem"* %3, %"class.blink::NGInlineItem"** %9, align 8
  %14 = ptrtoint %"class.blink::NGInlineItem"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator.2366"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.blink::NGInlineItem"* %2 to i64
  %18 = bitcast %"class.blink::NGInlineItem"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.blink::NGInlineItem"* %3 to i64
  %21 = bitcast %"class.blink::NGInlineItem"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.blink::NGInlineItem"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.blink::NGInlineItem"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %30 = bitcast %"class.blink::NGInlineItem"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %8, align 8
  %43 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %9, align 8
  %44 = icmp ugt %"class.blink::NGInlineItem"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.blink::NGInlineItem"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %49 = bitcast %"class.blink::NGInlineItem"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink12NGInlineItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2366"*, %"class.base::CheckedContiguousIterator.2366"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %11, align 8
  %15 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %12, align 8
  %16 = icmp eq %"class.blink::NGInlineItem"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator.2366"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %21 = bitcast %"class.base::CheckedContiguousIterator.2366"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %20, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2366", %"class.base::CheckedContiguousIterator.2366"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %32, align 8
  %36 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %33, align 8
  %37 = icmp eq %"class.blink::NGInlineItem"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::NGInlineItem"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %42 = bitcast %"class.blink::NGInlineItem"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink12NGInlineItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %43) #13
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #13
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink12_GLOBAL__N_117ReusingTextShaper27CollectReusableShapeResultsEjjNS_13TextDirectionE: argument 0"}
!25 = distinct !{!25, !"_ZN5blink12_GLOBAL__N_117ReusingTextShaper27CollectReusableShapeResultsEjjNS_13TextDirectionE"}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN5blink12RunSegmenter9NullRangeEj: argument 0"}
!30 = distinct !{!30, !"_ZN5blink12RunSegmenter9NullRangeEj"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!42 = distinct !{!42, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!45 = distinct !{!45, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
!46 = distinct !{!46, !47, !"_ZN5blink30NGMinMaxConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!47 = distinct !{!47, !"_ZN5blink30NGMinMaxConstraintSpaceBuilder17ToConstraintSpaceEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!50 = distinct !{!50, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!53 = distinct !{!53, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!56 = distinct !{!56, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!59 = distinct !{!59, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKhEES4_EENS_4pairIT_T0_EES6_S6_S7_S7_: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKhEES4_EENS_4pairIT_T0_EES6_S6_S7_S7_"}
!63 = !{!64, !61}
!64 = distinct !{!64, !65, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKhEES4_NS_10__equal_toIhhEEEENS_4pairIT_T0_EES8_S8_S9_S9_T1_: argument 0"}
!65 = distinct !{!65, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKhEES4_NS_10__equal_toIhhEEEENS_4pairIT_T0_EES8_S8_S9_S9_T1_"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!68 = distinct !{!68, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!71 = distinct !{!71, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!74 = distinct !{!74, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!77 = distinct !{!77, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!80 = distinct !{!80, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKhEENS2_IKDsEEEENS_4pairIT_T0_EES8_S8_S9_S9_: argument 0"}
!83 = distinct !{!83, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKhEENS2_IKDsEEEENS_4pairIT_T0_EES8_S8_S9_S9_"}
!84 = !{!85, !82}
!85 = distinct !{!85, !86, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKhEENS2_IKDsEENS_10__equal_toIhDsEEEENS_4pairIT_T0_EESA_SA_SB_SB_T1_: argument 0"}
!86 = distinct !{!86, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKhEENS2_IKDsEENS_10__equal_toIhDsEEEENS_4pairIT_T0_EESA_SA_SB_SB_T1_"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!89 = distinct !{!89, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!92 = distinct !{!92, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!95 = distinct !{!95, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!98 = distinct !{!98, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!101 = distinct !{!101, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKDsEENS2_IKhEEEENS_4pairIT_T0_EES8_S8_S9_S9_: argument 0"}
!104 = distinct !{!104, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKDsEENS2_IKhEEEENS_4pairIT_T0_EES8_S8_S9_S9_"}
!105 = !{!106, !103}
!106 = distinct !{!106, !107, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKDsEENS2_IKhEENS_10__equal_toIDshEEEENS_4pairIT_T0_EESA_SA_SB_SB_T1_: argument 0"}
!107 = distinct !{!107, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKDsEENS2_IKhEENS_10__equal_toIDshEEEENS_4pairIT_T0_EESA_SA_SB_SB_T1_"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!110 = distinct !{!110, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!113 = distinct !{!113, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!116 = distinct !{!116, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!119 = distinct !{!119, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!122 = distinct !{!122, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKDsEES4_EENS_4pairIT_T0_EES6_S6_S7_S7_: argument 0"}
!125 = distinct !{!125, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKDsEES4_EENS_4pairIT_T0_EES6_S6_S7_S7_"}
!126 = !{!127, !124}
!127 = distinct !{!127, !128, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKDsEES4_NS_10__equal_toIDsDsEEEENS_4pairIT_T0_EES8_S8_S9_S9_T1_: argument 0"}
!128 = distinct !{!128, !"_ZNSt3__18mismatchIN4base25CheckedContiguousIteratorIKDsEES4_NS_10__equal_toIDsDsEEEENS_4pairIT_T0_EES8_S8_S9_S9_T1_"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!131 = distinct !{!131, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!132 = !{!133, !135}
!133 = distinct !{!133, !134, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!134 = distinct !{!134, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!135 = distinct !{!135, !136, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv: argument 0"}
!136 = distinct !{!136, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv"}
!137 = !{!135}
!138 = !{!139, !141}
!139 = distinct !{!139, !140, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!140 = distinct !{!140, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!141 = distinct !{!141, !142, !"_ZNK4base4spanIKhLm18446744073709551615EE4rendEv: argument 0"}
!142 = distinct !{!142, !"_ZNK4base4spanIKhLm18446744073709551615EE4rendEv"}
!143 = !{!141}
!144 = !{!145, !147}
!145 = distinct !{!145, !146, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!146 = distinct !{!146, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!147 = distinct !{!147, !148, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv: argument 0"}
!148 = distinct !{!148, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv"}
!149 = !{!147}
!150 = !{!151, !153}
!151 = distinct !{!151, !152, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!152 = distinct !{!152, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!153 = distinct !{!153, !154, !"_ZNK4base4spanIKhLm18446744073709551615EE4rendEv: argument 0"}
!154 = distinct !{!154, !"_ZNK4base4spanIKhLm18446744073709551615EE4rendEv"}
!155 = !{!153}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKhEEEES6_EENS_4pairIT_T0_EES8_S8_S9_S9_: argument 0"}
!158 = distinct !{!158, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKhEEEES6_EENS_4pairIT_T0_EES8_S8_S9_S9_"}
!159 = !{!160, !157}
!160 = distinct !{!160, !161, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKhEEEES6_NS_10__equal_toIhhEEEENS_4pairIT_T0_EESA_SA_SB_SB_T1_: argument 0"}
!161 = distinct !{!161, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKhEEEES6_NS_10__equal_toIhhEEEENS_4pairIT_T0_EESA_SA_SB_SB_T1_"}
!162 = !{!163, !165}
!163 = distinct !{!163, !164, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!164 = distinct !{!164, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!165 = distinct !{!165, !166, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv: argument 0"}
!166 = distinct !{!166, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv"}
!167 = !{!165}
!168 = !{!169, !171}
!169 = distinct !{!169, !170, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!170 = distinct !{!170, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!171 = distinct !{!171, !172, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv: argument 0"}
!172 = distinct !{!172, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv"}
!173 = !{!171}
!174 = !{!175, !177}
!175 = distinct !{!175, !176, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!176 = distinct !{!176, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!177 = distinct !{!177, !178, !"_ZNK4base4spanIKhLm18446744073709551615EE4rendEv: argument 0"}
!178 = distinct !{!178, !"_ZNK4base4spanIKhLm18446744073709551615EE4rendEv"}
!179 = !{!177}
!180 = !{!181, !183}
!181 = distinct !{!181, !182, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!182 = distinct !{!182, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!183 = distinct !{!183, !184, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv: argument 0"}
!184 = distinct !{!184, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv"}
!185 = !{!183}
!186 = !{!187, !189}
!187 = distinct !{!187, !188, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!188 = distinct !{!188, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!189 = distinct !{!189, !190, !"_ZNK4base4spanIKDsLm18446744073709551615EE4rendEv: argument 0"}
!190 = distinct !{!190, !"_ZNK4base4spanIKDsLm18446744073709551615EE4rendEv"}
!191 = !{!189}
!192 = !{!193}
!193 = distinct !{!193, !194, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKhEEEENS1_INS3_IKDsEEEEEENS_4pairIT_T0_EESB_SB_SC_SC_: argument 0"}
!194 = distinct !{!194, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKhEEEENS1_INS3_IKDsEEEEEENS_4pairIT_T0_EESB_SB_SC_SC_"}
!195 = !{!196, !193}
!196 = distinct !{!196, !197, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKhEEEENS1_INS3_IKDsEEEENS_10__equal_toIhDsEEEENS_4pairIT_T0_EESD_SD_SE_SE_T1_: argument 0"}
!197 = distinct !{!197, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKhEEEENS1_INS3_IKDsEEEENS_10__equal_toIhDsEEEENS_4pairIT_T0_EESD_SD_SE_SE_T1_"}
!198 = !{!199, !201}
!199 = distinct !{!199, !200, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!200 = distinct !{!200, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!201 = distinct !{!201, !202, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv: argument 0"}
!202 = distinct !{!202, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv"}
!203 = !{!201}
!204 = !{!205, !207}
!205 = distinct !{!205, !206, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!206 = distinct !{!206, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!207 = distinct !{!207, !208, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv: argument 0"}
!208 = distinct !{!208, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv"}
!209 = !{!207}
!210 = !{!211, !213}
!211 = distinct !{!211, !212, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!212 = distinct !{!212, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!213 = distinct !{!213, !214, !"_ZNK4base4spanIKDsLm18446744073709551615EE4rendEv: argument 0"}
!214 = distinct !{!214, !"_ZNK4base4spanIKDsLm18446744073709551615EE4rendEv"}
!215 = !{!213}
!216 = !{!217, !219}
!217 = distinct !{!217, !218, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv: argument 0"}
!218 = distinct !{!218, !"_ZNK4base4spanIKhLm18446744073709551615EE3endEv"}
!219 = distinct !{!219, !220, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv: argument 0"}
!220 = distinct !{!220, !"_ZNK4base4spanIKhLm18446744073709551615EE6rbeginEv"}
!221 = !{!219}
!222 = !{!223, !225}
!223 = distinct !{!223, !224, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv: argument 0"}
!224 = distinct !{!224, !"_ZNK4base4spanIKhLm18446744073709551615EE5beginEv"}
!225 = distinct !{!225, !226, !"_ZNK4base4spanIKhLm18446744073709551615EE4rendEv: argument 0"}
!226 = distinct !{!226, !"_ZNK4base4spanIKhLm18446744073709551615EE4rendEv"}
!227 = !{!225}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKDsEEEENS1_INS3_IKhEEEEEENS_4pairIT_T0_EESB_SB_SC_SC_: argument 0"}
!230 = distinct !{!230, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKDsEEEENS1_INS3_IKhEEEEEENS_4pairIT_T0_EESB_SB_SC_SC_"}
!231 = !{!232, !229}
!232 = distinct !{!232, !233, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKDsEEEENS1_INS3_IKhEEEENS_10__equal_toIDshEEEENS_4pairIT_T0_EESD_SD_SE_SE_T1_: argument 0"}
!233 = distinct !{!233, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKDsEEEENS1_INS3_IKhEEEENS_10__equal_toIDshEEEENS_4pairIT_T0_EESD_SD_SE_SE_T1_"}
!234 = !{!235, !237}
!235 = distinct !{!235, !236, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!236 = distinct !{!236, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!237 = distinct !{!237, !238, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv: argument 0"}
!238 = distinct !{!238, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv"}
!239 = !{!237}
!240 = !{!241, !243}
!241 = distinct !{!241, !242, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!242 = distinct !{!242, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!243 = distinct !{!243, !244, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv: argument 0"}
!244 = distinct !{!244, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv"}
!245 = !{!243}
!246 = !{!247, !249}
!247 = distinct !{!247, !248, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!248 = distinct !{!248, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!249 = distinct !{!249, !250, !"_ZNK4base4spanIKDsLm18446744073709551615EE4rendEv: argument 0"}
!250 = distinct !{!250, !"_ZNK4base4spanIKDsLm18446744073709551615EE4rendEv"}
!251 = !{!249}
!252 = !{!253, !255}
!253 = distinct !{!253, !254, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!254 = distinct !{!254, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!255 = distinct !{!255, !256, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv: argument 0"}
!256 = distinct !{!256, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv"}
!257 = !{!255}
!258 = !{!259, !261}
!259 = distinct !{!259, !260, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv: argument 0"}
!260 = distinct !{!260, !"_ZNK4base4spanIKDsLm18446744073709551615EE5beginEv"}
!261 = distinct !{!261, !262, !"_ZNK4base4spanIKDsLm18446744073709551615EE4rendEv: argument 0"}
!262 = distinct !{!262, !"_ZNK4base4spanIKDsLm18446744073709551615EE4rendEv"}
!263 = !{!261}
!264 = !{!265}
!265 = distinct !{!265, !266, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKDsEEEES6_EENS_4pairIT_T0_EES8_S8_S9_S9_: argument 0"}
!266 = distinct !{!266, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKDsEEEES6_EENS_4pairIT_T0_EES8_S8_S9_S9_"}
!267 = !{!268, !265}
!268 = distinct !{!268, !269, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKDsEEEES6_NS_10__equal_toIDsDsEEEENS_4pairIT_T0_EESA_SA_SB_SB_T1_: argument 0"}
!269 = distinct !{!269, !"_ZNSt3__18mismatchINS_16reverse_iteratorIN4base25CheckedContiguousIteratorIKDsEEEES6_NS_10__equal_toIDsDsEEEENS_4pairIT_T0_EESA_SA_SB_SB_T1_"}
!270 = !{!271, !273}
!271 = distinct !{!271, !272, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv: argument 0"}
!272 = distinct !{!272, !"_ZNK4base4spanIKDsLm18446744073709551615EE3endEv"}
!273 = distinct !{!273, !274, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv: argument 0"}
!274 = distinct !{!274, !"_ZNK4base4spanIKDsLm18446744073709551615EE6rbeginEv"}
!275 = !{!273}
!276 = !{!277}
!277 = distinct !{!277, !278, !"_ZNK5blink12NGInlineItem23CreateRunSegmenterRangeEv: argument 0"}
!278 = distinct !{!278, !"_ZNK5blink12NGInlineItem23CreateRunSegmenterRangeEv"}
