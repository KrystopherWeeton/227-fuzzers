; ModuleID = '../../base/task/thread_pool/environment_config.cc'
source_filename = "../../base/task/thread_pool/environment_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }

@_ZZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEvE45can_use_background_priority_for_worker_thread = internal global i8 0, align 1
@_ZGVZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEvE45can_use_background_priority_for_worker_thread = internal global i64 0, align 8
@_ZN8switches27kEnableBackgroundThreadPoolE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEvE45can_use_background_priority_for_worker_thread to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %19, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEvE45can_use_background_priority_for_worker_thread) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN4base11CommandLine28InitializedForCurrentProcessEv() #4
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #4
  %10 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches27kEnableBackgroundThreadPoolE, i64 0, i64 0)) #4
  br i1 %10, label %16, label %11

11:                                               ; preds = %8, %6
  %12 = tail call zeroext i1 @_ZN4base8internal8LockImpl28PriorityInheritanceAvailableEv() #4
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZN4base14PlatformThread25CanIncreaseThreadPriorityENS_14ThreadPriorityE(i32 1) #4
  %15 = zext i1 %14 to i8
  br label %16

16:                                               ; preds = %8, %11, %13
  %17 = phi i8 [ 1, %8 ], [ 0, %11 ], [ %15, %13 ]
  store i8 %17, i8* @_ZZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEvE45can_use_background_priority_for_worker_thread, align 1
  %18 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEvE45can_use_background_priority_for_worker_thread)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEvE45can_use_background_priority_for_worker_thread) #4
  br label %19

19:                                               ; preds = %3, %16, %0
  %20 = load i8, i8* @_ZZN4base8internal39CanUseBackgroundPriorityForWorkerThreadEvE45can_use_background_priority_for_worker_thread, align 1, !range !3
  %21 = icmp ne i8 %20, 0
  ret i1 %21
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base11CommandLine28InitializedForCurrentProcessEv() local_unnamed_addr #3

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base14PlatformThread25CanIncreaseThreadPriorityENS_14ThreadPriorityE(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4base8internal8LockImpl28PriorityInheritanceAvailableEv() local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
