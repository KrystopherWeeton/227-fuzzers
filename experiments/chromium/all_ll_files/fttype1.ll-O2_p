; ModuleID = '../../third_party/freetype/src/src/base/fttype1.c'
source_filename = "../../third_party/freetype/src/src/base/fttype1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.PS_FontInfoRec_ = type { i8*, i8*, i8*, i8*, i8*, i64, i8, i16, i16 }
%struct.PS_PrivateRec_ = type { i32, i32, i8, i8, i8, i8, [14 x i16], [10 x i16], [14 x i16], [10 x i16], i64, i32, i32, [1 x i16], [1 x i16], i8, i8, i8, i8, [13 x i16], [13 x i16], i64, i64, i64, [2 x i16] }

@.str = private unnamed_addr constant [16 x i8] c"postscript-info\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_PS_Font_Info(%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.PS_FontInfoRec_* %1, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %8 = bitcast %struct.FT_DriverRec_** %7 to %struct.FT_ModuleRec_**
  %9 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %9, i64 0, i32 0
  %11 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %11, i64 0, i32 8
  %13 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %12, align 8
  %14 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %6
  %16 = tail call i8* %13(%struct.FT_ModuleRec_* %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #1
  %17 = icmp eq i8* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = bitcast i8* %16 to i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)**
  %20 = load i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)** %19, align 8
  %21 = icmp eq i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = tail call i32 %20(%struct.FT_FaceRec_* nonnull %0, %struct.PS_FontInfoRec_* nonnull %1) #1
  br label %24

24:                                               ; preds = %6, %22, %18, %15, %4, %2
  %25 = phi i32 [ 35, %2 ], [ 6, %4 ], [ %23, %22 ], [ 6, %18 ], [ 6, %15 ], [ 6, %6 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Has_PS_Glyph_Names(%struct.FT_FaceRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %5 = bitcast %struct.FT_DriverRec_** %4 to %struct.FT_ModuleRec_**
  %6 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %6, i64 0, i32 0
  %8 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %8, i64 0, i32 8
  %10 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %9, align 8
  %11 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %3
  %13 = tail call i8* %10(%struct.FT_ModuleRec_* %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #1
  %14 = icmp eq i8* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8, i8* %13, i64 16
  %17 = bitcast i8* %16 to i32 (%struct.FT_FaceRec_*)**
  %18 = load i32 (%struct.FT_FaceRec_*)*, i32 (%struct.FT_FaceRec_*)** %17, align 8
  %19 = icmp eq i32 (%struct.FT_FaceRec_*)* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = tail call i32 %18(%struct.FT_FaceRec_* nonnull %0) #1
  br label %22

22:                                               ; preds = %3, %15, %12, %1, %20
  %23 = phi i32 [ %21, %20 ], [ 0, %15 ], [ 0, %12 ], [ 0, %1 ], [ 0, %3 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_PS_Font_Private(%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.PS_PrivateRec_* %1, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %8 = bitcast %struct.FT_DriverRec_** %7 to %struct.FT_ModuleRec_**
  %9 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %9, i64 0, i32 0
  %11 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %11, i64 0, i32 8
  %13 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %12, align 8
  %14 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %6
  %16 = tail call i8* %13(%struct.FT_ModuleRec_* %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #1
  %17 = icmp eq i8* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %16, i64 24
  %20 = bitcast i8* %19 to i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)**
  %21 = load i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)** %20, align 8
  %22 = icmp eq i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = tail call i32 %21(%struct.FT_FaceRec_* nonnull %0, %struct.PS_PrivateRec_* nonnull %1) #1
  br label %25

25:                                               ; preds = %6, %23, %18, %15, %4, %2
  %26 = phi i32 [ 35, %2 ], [ 6, %4 ], [ %24, %23 ], [ 6, %18 ], [ 6, %15 ], [ 6, %6 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Get_PS_Font_Value(%struct.FT_FaceRec_*, i32, i32, i8*, i64) local_unnamed_addr #0 {
  %6 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %9 = bitcast %struct.FT_DriverRec_** %8 to %struct.FT_ModuleRec_**
  %10 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %10, i64 0, i32 0
  %12 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %12, i64 0, i32 8
  %14 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %13, align 8
  %15 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %7
  %17 = tail call i8* %14(%struct.FT_ModuleRec_* %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #1
  %18 = icmp eq i8* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %17, i64 32
  %21 = bitcast i8* %20 to i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)**
  %22 = load i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)*, i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)** %21, align 8
  %23 = icmp eq i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = tail call i64 %22(%struct.FT_FaceRec_* nonnull %0, i32 %1, i32 %2, i8* %3, i64 %4) #1
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  br label %28

28:                                               ; preds = %7, %19, %16, %5, %24
  %29 = phi i64 [ %27, %24 ], [ 0, %19 ], [ 0, %16 ], [ 0, %5 ], [ 0, %7 ]
  ret i64 %29
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
