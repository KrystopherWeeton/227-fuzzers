; ModuleID = '../../net/ftp/ftp_directory_listing_parser_windows.cc'
source_filename = "../../net/ftp/ftp_directory_listing_parser_windows.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.net::FtpDirectoryListingEntry"*, %"struct.net::FtpDirectoryListingEntry"*, %"class.std::__1::__compressed_pair.17" }
%"struct.net::FtpDirectoryListingEntry" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string.8", i64, %"class.base::Time" }
%"class.std::__1::basic_string.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.11 }
%union.anon.11 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.net::FtpDirectoryListingEntry"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::allocator.20" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.12 }
%struct.anon.12 = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__16vectorIN3net24FtpDirectoryListingEntryENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__19allocatorIN3net24FtpDirectoryListingEntryEE9constructIS2_JRKS2_EEEvPT_DpOT0_ = comdat any

@.str = private unnamed_addr constant [2 x i16] [i16 32, i16 0], align 2
@.str.1 = private unnamed_addr constant [6 x i8] c"<DIR>\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net31ParseFtpDirectoryListingWindowsERKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEEPNS1_INS_24FtpDirectoryListingEntryENS5_ISC_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.6"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"struct.net::FtpDirectoryListingEntry", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %203, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::vector"* %3 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %25 = bitcast %"class.std::__1::basic_string"** %17 to i64*
  %26 = bitcast %"class.std::__1::vector"* %3 to i64*
  %27 = bitcast %"struct.net::FtpDirectoryListingEntry"* %5 to i8*
  %28 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %5, i64 0, i32 3
  %30 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %5, i64 0, i32 4
  %31 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %32 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %5, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %32 to i8**
  %36 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %37 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 2
  %41 = bitcast %"class.std::__1::__compressed_pair.17"* %40 to %"class.std::__1::allocator.20"*
  %42 = bitcast %"struct.net::FtpDirectoryListingEntry"** %38 to i64*
  %43 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %5, i64 0, i32 2
  %44 = bitcast %"class.std::__1::basic_string.8"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::vector"* %3 to i8**
  %48 = bitcast %"class.std::__1::vector"* %3 to i8*
  br label %49

49:                                               ; preds = %13, %196
  %50 = phi i64 [ %11, %13 ], [ %199, %196 ]
  %51 = phi i64 [ 0, %13 ], [ %197, %196 ]
  %52 = inttoptr i64 %50 to %"class.std::__1::basic_string"*
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 %51
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 %51, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  br label %63

61:                                               ; preds = %49
  %62 = zext i8 %56 to i64
  br label %63

63:                                               ; preds = %58, %61
  %64 = phi i64 [ %60, %58 ], [ %62, %61 ]
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %196, label %66

66:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  %67 = load i8, i8* %55, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i16*, i16** %69, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %53 to i16*
  %72 = select i1 %68, i16* %70, i16* %71
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 %51, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %67 to i64
  %76 = select i1 %68, i64 %74, i64 %75
  call void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string"* nonnull sret %4, i16* %72, i64 %76, i1 zeroext false) #8
  %77 = load i8, i8* %20, align 1
  %78 = load i16*, i16** %21, align 8
  %79 = load i64, i64* %23, align 8
  %80 = zext i8 %77 to i64
  %81 = icmp slt i8 %77, 0
  %82 = select i1 %81, i16* %78, i16* %22
  %83 = select i1 %81, i64 %79, i64 %80
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %3, i16* %82, i64 %83, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #8
  %84 = load i8, i8* %20, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %66
  %87 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %87) #9
  br label %88

88:                                               ; preds = %66, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  %89 = load i64, i64* %25, align 8
  %90 = load i64, i64* %26, align 8
  %91 = sub i64 %89, %90
  %92 = sdiv exact i64 %91, 24
  %93 = icmp ult i64 %92, 3
  %94 = inttoptr i64 %90 to %"class.std::__1::basic_string"*
  br i1 %93, label %171, label %95

95:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %27) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 72, i1 false)
  call void @_ZN3net24FtpDirectoryListingEntryC1Ev(%"struct.net::FtpDirectoryListingEntry"* nonnull %5) #8
  %96 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 2
  %98 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i16*, i16** %102, align 8
  %104 = bitcast %"class.std::__1::basic_string"* %97 to i16*
  %105 = select i1 %101, i16* %103, i16* %104
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = zext i8 %100 to i64
  %109 = select i1 %101, i64 %107, i64 %108
  %110 = call zeroext i1 @_ZN4base11EqualsASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_IcNS2_IcEEEE(i16* %105, i64 %109, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #8
  br i1 %110, label %111, label %112

111:                                              ; preds = %95
  store i32 2, i32* %28, align 8
  store i64 -1, i64* %29, align 8
  br label %132

112:                                              ; preds = %95
  store i32 1, i32* %28, align 8
  %113 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 2
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %115, i64 0, i32 1, i32 1
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8
  %121 = bitcast %"class.std::__1::basic_string"* %114 to i16*
  %122 = select i1 %118, i16* %120, i16* %121
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = zext i8 %117 to i64
  %126 = select i1 %118, i64 %124, i64 %125
  %127 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPl(i16* %122, i64 %126, i64* %29) #8
  %128 = xor i1 %127, true
  %129 = load i64, i64* %29, align 8
  %130 = icmp slt i64 %129, 0
  %131 = or i1 %130, %128
  br i1 %131, label %158, label %132

132:                                              ; preds = %112, %111
  %133 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 1
  %135 = call zeroext i1 @_ZN3net7FtpUtil24WindowsDateListingToTimeERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_PN4base4TimeE(%"class.std::__1::basic_string"* dereferenceable(24) %133, %"class.std::__1::basic_string"* dereferenceable(24) %134, %"class.base::Time"* %30) #8
  br i1 %135, label %136, label %158

136:                                              ; preds = %132
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %137 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %137, i64 %51
  call void @_ZN3net7FtpUtil25GetStringPartAfterColumnsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEi(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %138, i32 3) #8
  %139 = load i8, i8* %34, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %136
  %142 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %142) #9
  br label %143

143:                                              ; preds = %141, %136
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %31, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  %144 = load i8, i8* %34, align 1
  %145 = icmp slt i8 %144, 0
  %146 = load i64, i64* %37, align 8
  %147 = zext i8 %144 to i64
  %148 = select i1 %145, i64 %146, i64 %147
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %158, label %150

150:                                              ; preds = %143
  %151 = load %"struct.net::FtpDirectoryListingEntry"*, %"struct.net::FtpDirectoryListingEntry"** %38, align 8
  %152 = load %"struct.net::FtpDirectoryListingEntry"*, %"struct.net::FtpDirectoryListingEntry"** %39, align 8
  %153 = icmp eq %"struct.net::FtpDirectoryListingEntry"* %151, %152
  br i1 %153, label %157, label %154

154:                                              ; preds = %150
  call void @_ZNSt3__19allocatorIN3net24FtpDirectoryListingEntryEE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.std::__1::allocator.20"* %41, %"struct.net::FtpDirectoryListingEntry"* %151, %"struct.net::FtpDirectoryListingEntry"* nonnull dereferenceable(72) %5) #8
  %155 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %151, i64 1
  %156 = ptrtoint %"struct.net::FtpDirectoryListingEntry"* %155 to i64
  store i64 %156, i64* %42, align 8
  br label %158

157:                                              ; preds = %150
  call void @_ZNSt3__16vectorIN3net24FtpDirectoryListingEntryENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.6"* %1, %"struct.net::FtpDirectoryListingEntry"* nonnull dereferenceable(72) %5) #8
  br label %158

158:                                              ; preds = %157, %154, %112, %143, %132
  %159 = phi i32 [ 1, %112 ], [ 1, %132 ], [ 4, %143 ], [ 0, %154 ], [ 0, %157 ]
  %160 = load i8, i8* %45, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %163) #9
  br label %164

164:                                              ; preds = %162, %158
  %165 = load i8, i8* %34, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %164
  %168 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %168) #9
  br label %169

169:                                              ; preds = %164, %167
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %27) #8
  %170 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  br label %171

171:                                              ; preds = %88, %169
  %172 = phi %"class.std::__1::basic_string"* [ %94, %88 ], [ %170, %169 ]
  %173 = phi i32 [ 1, %88 ], [ %159, %169 ]
  %174 = icmp eq %"class.std::__1::basic_string"* %172, null
  br i1 %174, label %195, label %175

175:                                              ; preds = %171
  %176 = bitcast %"class.std::__1::basic_string"* %172 to i8*
  %177 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %178 = icmp eq %"class.std::__1::basic_string"* %177, %172
  br i1 %178, label %193, label %179

179:                                              ; preds = %175, %189
  %180 = phi %"class.std::__1::basic_string"* [ %181, %189 ], [ %177, %175 ]
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 -1
  %182 = bitcast %"class.std::__1::basic_string"* %181 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %182, i64 0, i32 1, i32 1
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %179
  %187 = bitcast %"class.std::__1::basic_string"* %181 to i8**
  %188 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %188) #9
  br label %189

189:                                              ; preds = %186, %179
  %190 = icmp eq %"class.std::__1::basic_string"* %181, %172
  br i1 %190, label %191, label %179

191:                                              ; preds = %189
  %192 = load i8*, i8** %47, align 8
  br label %193

193:                                              ; preds = %191, %175
  %194 = phi i8* [ %192, %191 ], [ %176, %175 ]
  store %"class.std::__1::basic_string"* %172, %"class.std::__1::basic_string"** %17, align 8
  call void @_ZdlPv(i8* %194) #9
  br label %195

195:                                              ; preds = %171, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  switch i32 %173, label %203 [
    i32 0, label %196
    i32 4, label %196
  ]

196:                                              ; preds = %195, %63, %195
  %197 = add nuw i64 %51, 1
  %198 = load i64, i64* %8, align 8
  %199 = load i64, i64* %10, align 8
  %200 = sub i64 %198, %199
  %201 = sdiv exact i64 %200, 24
  %202 = icmp ult i64 %197, %201
  br i1 %202, label %49, label %203

203:                                              ; preds = %195, %196, %2
  %204 = phi i1 [ true, %2 ], [ true, %196 ], [ false, %195 ]
  ret i1 %204
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base18CollapseWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEb(%"class.std::__1::basic_string"* sret, i16*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3net24FtpDirectoryListingEntryC1Ev(%"struct.net::FtpDirectoryListingEntry"*) unnamed_addr #2

declare zeroext i1 @_ZN4base11EqualsASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_IcNS2_IcEEEE(i16*, i64, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEPl(i16*, i64, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net7FtpUtil24WindowsDateListingToTimeERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_PN4base4TimeE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Time"*) local_unnamed_addr #2

declare void @_ZN3net7FtpUtil25GetStringPartAfterColumnsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEi(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net24FtpDirectoryListingEntryENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.6"*, %"struct.net::FtpDirectoryListingEntry"* dereferenceable(72)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.17"* %3 to %"class.std::__1::allocator.20"*
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.net::FtpDirectoryListingEntry"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 72
  %12 = add nsw i64 %11, 1
  %13 = icmp ugt i64 %12, 256204778801521550
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #10
  unreachable

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"struct.net::FtpDirectoryListingEntry"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %9
  %21 = sdiv exact i64 %20, 72
  %22 = icmp ult i64 %21, 128102389400760775
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = shl nsw i64 %21, 1
  %25 = icmp ult i64 %24, %12
  %26 = select i1 %25, i64 %12, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %16, %23
  %29 = phi i64 [ %26, %23 ], [ 256204778801521550, %16 ]
  %30 = mul i64 %29, 72
  %31 = tail call i8* @_Znwm(i64 %30) #9
  %32 = bitcast i8* %31 to %"struct.net::FtpDirectoryListingEntry"*
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi i64 [ %29, %28 ], [ 0, %23 ]
  %35 = phi %"struct.net::FtpDirectoryListingEntry"* [ %32, %28 ], [ null, %23 ]
  %36 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %35, i64 %11
  %37 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %35, i64 %34
  %38 = ptrtoint %"struct.net::FtpDirectoryListingEntry"* %37 to i64
  tail call void @_ZNSt3__19allocatorIN3net24FtpDirectoryListingEntryEE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.std::__1::allocator.20"* %4, %"struct.net::FtpDirectoryListingEntry"* %36, %"struct.net::FtpDirectoryListingEntry"* dereferenceable(72) %1) #8
  %39 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %36, i64 1
  %40 = ptrtoint %"struct.net::FtpDirectoryListingEntry"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %42 = load %"struct.net::FtpDirectoryListingEntry"*, %"struct.net::FtpDirectoryListingEntry"** %41, align 8
  %43 = load %"struct.net::FtpDirectoryListingEntry"*, %"struct.net::FtpDirectoryListingEntry"** %5, align 8
  %44 = icmp eq %"struct.net::FtpDirectoryListingEntry"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %33
  %46 = ptrtoint %"struct.net::FtpDirectoryListingEntry"* %42 to i64
  br label %71

47:                                               ; preds = %33, %47
  %48 = phi %"struct.net::FtpDirectoryListingEntry"* [ %66, %47 ], [ %36, %33 ]
  %49 = phi %"struct.net::FtpDirectoryListingEntry"* [ %50, %47 ], [ %43, %33 ]
  %50 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %49, i64 -1
  %51 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %48, i64 -1, i32 0
  %52 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %50, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  store i32 %53, i32* %51, align 8
  %54 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %48, i64 -1, i32 1
  %55 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %49, i64 -1, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #8
  %58 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %48, i64 -1, i32 2
  %59 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %49, i64 -1, i32 2
  %60 = bitcast %"class.std::__1::basic_string.8"* %58 to i8*
  %61 = bitcast %"class.std::__1::basic_string.8"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #8
  %62 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %48, i64 -1, i32 3
  %63 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %49, i64 -1, i32 3
  %64 = bitcast i64* %62 to i8*
  %65 = bitcast i64* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false) #8
  %66 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %48, i64 -1
  %67 = icmp eq %"struct.net::FtpDirectoryListingEntry"* %50, %42
  br i1 %67, label %68, label %47

68:                                               ; preds = %47
  %69 = load i64, i64* %8, align 8
  %70 = load %"struct.net::FtpDirectoryListingEntry"*, %"struct.net::FtpDirectoryListingEntry"** %5, align 8
  br label %71

71:                                               ; preds = %45, %68
  %72 = phi %"struct.net::FtpDirectoryListingEntry"* [ %42, %45 ], [ %70, %68 ]
  %73 = phi %"struct.net::FtpDirectoryListingEntry"* [ %36, %45 ], [ %66, %68 ]
  %74 = phi i64 [ %46, %45 ], [ %69, %68 ]
  %75 = ptrtoint %"struct.net::FtpDirectoryListingEntry"* %73 to i64
  store i64 %75, i64* %8, align 8
  store i64 %40, i64* %6, align 8
  store i64 %38, i64* %18, align 8
  %76 = inttoptr i64 %74 to %"struct.net::FtpDirectoryListingEntry"*
  %77 = icmp eq %"struct.net::FtpDirectoryListingEntry"* %72, %76
  br i1 %77, label %100, label %78

78:                                               ; preds = %71, %98
  %79 = phi %"struct.net::FtpDirectoryListingEntry"* [ %80, %98 ], [ %72, %71 ]
  %80 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %79, i64 -1, i32 2
  %82 = bitcast %"class.std::__1::basic_string.8"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  tail call void @_ZdlPv(i8* %88) #9
  br label %89

89:                                               ; preds = %86, %78
  %90 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %79, i64 -1, i32 1
  %91 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %89
  %96 = bitcast %"class.std::__1::basic_string"* %90 to i8**
  %97 = load i8*, i8** %96, align 8
  tail call void @_ZdlPv(i8* %97) #9
  br label %98

98:                                               ; preds = %95, %89
  %99 = icmp eq %"struct.net::FtpDirectoryListingEntry"* %80, %76
  br i1 %99, label %100, label %78

100:                                              ; preds = %98, %71
  %101 = icmp eq i64 %74, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %100
  %103 = inttoptr i64 %74 to i8*
  tail call void @_ZdlPv(i8* %103) #9
  br label %104

104:                                              ; preds = %100, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__19allocatorIN3net24FtpDirectoryListingEntryEE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.std::__1::allocator.20"*, %"struct.net::FtpDirectoryListingEntry"*, %"struct.net::FtpDirectoryListingEntry"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %2, i64 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #8
  br label %191

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 11
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %24 = trunc i64 %20 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  br label %44

27:                                               ; preds = %16
  %28 = icmp ugt i64 %20, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #10
  unreachable

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %20, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #10
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #9
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %43, align 8
  br label %44

44:                                               ; preds = %36, %22
  %45 = phi i16* [ %23, %22 ], [ %39, %36 ]
  %46 = add nuw nsw i64 %20, 1
  %47 = add i64 %20, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %20, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %18, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %18, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = sub i64 %46, %57
  %59 = getelementptr i16, i16* %18, i64 %57
  %60 = getelementptr i16, i16* %45, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %18, i64 %69
  %72 = getelementptr i16, i16* %45, i64 %69
  %73 = bitcast i16* %71 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = getelementptr i16, i16* %71, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !2
  %78 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !5, !noalias !2
  %79 = getelementptr i16, i16* %72, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !5, !noalias !2
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %18, i64 %81
  %83 = getelementptr i16, i16* %45, i64 %81
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !2
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !5, !noalias !2
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !5, !noalias !2
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %18, i64 %92
  %94 = getelementptr i16, i16* %45, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !2
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !5, !noalias !2
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !5, !noalias !2
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %18, i64 %103
  %105 = getelementptr i16, i16* %45, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !2
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !5, !noalias !2
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !5, !noalias !2
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !7

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %18, i64 %121
  %124 = getelementptr i16, i16* %45, i64 %121
  %125 = bitcast i16* %123 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = getelementptr i16, i16* %123, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !2
  %130 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !5, !noalias !2
  %131 = getelementptr i16, i16* %124, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !5, !noalias !2
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !9

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %191, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %58, %136 ]
  %140 = phi i16* [ %18, %49 ], [ %18, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %60, %136 ]
  %142 = add i64 %139, -1
  %143 = and i64 %139, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i64 [ %151, %145 ], [ %139, %138 ]
  %147 = phi i16* [ %153, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %152, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %147, align 2
  store i16 %150, i16* %148, align 2
  %151 = add i64 %146, -1
  %152 = getelementptr inbounds i16, i16* %148, i64 1
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !11

156:                                              ; preds = %145, %138
  %157 = phi i64 [ %139, %138 ], [ %151, %145 ]
  %158 = phi i16* [ %140, %138 ], [ %153, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %152, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi i64 [ %187, %161 ], [ %157, %156 ]
  %163 = phi i16* [ %189, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %188, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %163, align 2
  store i16 %165, i16* %164, align 2
  %166 = getelementptr inbounds i16, i16* %164, i64 1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %164, i64 2
  %170 = getelementptr inbounds i16, i16* %163, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %164, i64 3
  %173 = getelementptr inbounds i16, i16* %163, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %164, i64 4
  %176 = getelementptr inbounds i16, i16* %163, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %164, i64 5
  %179 = getelementptr inbounds i16, i16* %163, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %164, i64 6
  %182 = getelementptr inbounds i16, i16* %163, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %164, i64 7
  %185 = getelementptr inbounds i16, i16* %163, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %162, -8
  %188 = getelementptr inbounds i16, i16* %164, i64 8
  %189 = getelementptr inbounds i16, i16* %163, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %191, label %161, !llvm.loop !12

191:                                              ; preds = %156, %161, %136, %13
  %192 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %1, i64 0, i32 2
  %193 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %2, i64 0, i32 2
  %194 = bitcast %"class.std::__1::basic_string.8"* %193 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %191
  %199 = bitcast %"class.std::__1::basic_string.8"* %192 to i8*
  %200 = bitcast %"class.std::__1::basic_string.8"* %193 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 8 %200, i64 24, i1 false) #8
  br label %206

201:                                              ; preds = %191
  %202 = getelementptr inbounds %"class.std::__1::basic_string.8", %"class.std::__1::basic_string.8"* %193, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.8"* %192, i8* %203, i64 %205) #8
  br label %206

206:                                              ; preds = %198, %201
  %207 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %1, i64 0, i32 3
  %208 = getelementptr inbounds %"struct.net::FtpDirectoryListingEntry", %"struct.net::FtpDirectoryListingEntry"* %2, i64 0, i32 3
  %209 = bitcast i64* %207 to i8*
  %210 = bitcast i64* %208 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %210, i64 16, i1 false) #8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.8"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
