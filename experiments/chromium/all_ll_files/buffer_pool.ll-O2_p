; ModuleID = '../../third_party/libgav1/src/src/buffer_pool.cc'
source_filename = "../../third_party/libgav1/src/src/buffer_pool.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"class.libgav1::RefCountedBuffer" = type { %"class.libgav1::BufferPool"*, i8, i8*, %"class.libgav1::YuvBuffer", i8, %"class.std::__1::mutex", i8, i32, %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.libgav1::SegmentationMap", %"struct.std::__1::array", [8 x i8], %"struct.libgav1::SymbolDecoderContext", %"struct.std::__1::array.12", %"struct.std::__1::array.13", %"struct.libgav1::Segmentation", %"struct.libgav1::FilmGrainParams", %"struct.libgav1::ReferenceInfo", [16 x i8] }
%"class.libgav1::BufferPool" = type { %"class.std::__1::mutex", %"class.libgav1::Vector", %"class.libgav1::InternalFrameBufferList", i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, void (i8*, i8*)*, i8* }
%"class.libgav1::Vector" = type { %"class.libgav1::internal::VectorBase" }
%"class.libgav1::internal::VectorBase" = type { %"class.libgav1::RefCountedBuffer"**, i64, i64 }
%"class.libgav1::InternalFrameBufferList" = type { %"class.libgav1::Vector.0" }
%"class.libgav1::Vector.0" = type { %"class.libgav1::internal::VectorBase.1" }
%"class.libgav1::internal::VectorBase.1" = type { %"class.std::__1::unique_ptr"*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.libgav1::InternalFrameBufferList::Buffer"* }
%"struct.libgav1::InternalFrameBufferList::Buffer" = type <{ %"class.std::__1::unique_ptr.36", i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%struct.Libgav1FrameBuffer = type { [3 x i8*], [3 x i32], i8* }
%"class.libgav1::YuvBuffer" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i8], [3 x i8*], %"class.std::__1::unique_ptr.2", i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.4, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.4 = type { i64 }
%"class.libgav1::SegmentationMap" = type { i32, i32, %"class.std::__1::unique_ptr.6", %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"struct.std::__1::array" = type { [8 x %"struct.libgav1::GlobalMotion"] }
%"struct.libgav1::GlobalMotion" = type { i8, [6 x i32], i16, i16, i16, i16 }
%"struct.libgav1::SymbolDecoderContext" = type { [5 x [4 x [11 x i16]]], [8 x i8], [3 x [9 x i16]], [10 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [5 x i16], [22 x i8], [5 x i16], [22 x i8], [4 x [5 x i16]], [24 x i8], [3 x i16], [26 x i8], [5 x [5 x [14 x i16]]], [4 x i8], [4 x [14 x i16]], [16 x i8], [8 x [8 x i16]], [2 x [13 x [15 x i16]]], [20 x i8], [9 x i16], [14 x i8], [6 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [6 x i16], [20 x i8], [4 x [3 x [4 x i16]]], [21 x [3 x i16]], [2 x i8], [5 x [13 x [3 x i16]]], [26 x i8], [3 x [4 x [17 x i16]]], [8 x i8], [2 x [4 x [13 x [17 x i16]]]], [16 x i8], [2 x [2 x [6 x i16]]], [16 x i8], [2 x [2 x [7 x i16]]], [8 x i8], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [24 x i8], [2 x [2 x [10 x i16]]], [16 x i8], [2 x [11 x i16]], [20 x i8], [2 x [12 x i16]], [16 x i8], [5 x [2 x [9 x [3 x i16]]]], [4 x i8], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [24 x i8], [5 x [2 x [21 x [5 x i16]]]], [12 x i8], [2 x [3 x [3 x i16]]], [28 x i8], [4 x i16], [24 x i8], [3 x i16], [26 x i8], [3 x i16], [26 x i8], [7 x [3 x [3 x i16]]], [2 x i8], [7 x [8 x i16]], [16 x i8], [2 x [3 x i16]], [20 x i8], [7 x [8 x i16]], [16 x i8], [2 x [7 x [5 x [9 x i16]]]], [20 x i8], [4 x [3 x i16]], [8 x i8], [5 x [3 x i16]], [2 x i8], [5 x [3 x i16]], [2 x i8], [2 x [3 x [3 x [3 x i16]]]], [20 x i8], [3 x [2 x [3 x i16]]], [28 x i8], [3 x [6 x [3 x i16]]], [20 x i8], [8 x [9 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [2 x [3 x i16]], [20 x i8], [6 x [3 x i16]], [28 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [5 x i16]], [2 x i8], [22 x [3 x i16]], [28 x i8], [22 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [22 x [4 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [6 x [3 x i16]], [28 x i8], [22 x [3 x i16]], [28 x i8], [16 x [4 x i16]], [2 x [5 x i16]], [12 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [12 x i16]]], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [2 x [5 x i16]]]], [16 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [10 x [3 x i16]]]], [16 x i8], [2 x [2 x [5 x i16]]], [24 x i8], [2 x [2 x [3 x i16]]], [8 x i8] }
%"struct.std::__1::array.12" = type { [8 x i8] }
%"struct.std::__1::array.13" = type { [2 x i8] }
%"struct.libgav1::Segmentation" = type { i8, i8, i8, i8, i8, i8, [8 x [8 x i8]], [8 x [8 x i16]], [8 x i8], [8 x i8] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array.14", %"struct.std::__1::array.12", %"struct.std::__1::array.12", %"struct.std::__1::array.15", %"struct.std::__1::array.16", %"class.libgav1::Array2D", %"class.libgav1::Array2D.24" }
%"struct.std::__1::array.14" = type { [8 x i8] }
%"struct.std::__1::array.15" = type { [8 x i8] }
%"struct.std::__1::array.16" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr.17", i64, i64, %"class.libgav1::Array2DView.23" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i8* }
%"class.libgav1::Array2DView.23" = type { i32, i32, i8* }
%"class.libgav1::Array2D.24" = type { %"class.std::__1::unique_ptr.25", i64, i64, %"class.libgav1::Array2DView.32" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon.28 }
%union.anon.28 = type { i32 }
%"class.libgav1::Array2DView.32" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.libgav1::ObuFrameHeader" = type { i16, i16, i64, [7 x i16], i32, i32, i32, i32, i32, i32, i32, %"struct.libgav1::LoopRestoration", [32 x i32], i32, %"struct.std::__1::array", %"struct.libgav1::TileInfo", %"struct.libgav1::QuantizerParameters", %"struct.libgav1::Segmentation", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, %"struct.libgav1::Delta", %"struct.libgav1::Delta", [7 x i8], [8 x i8], %"struct.libgav1::LoopFilter", %"struct.libgav1::Cdef", %"struct.libgav1::FilmGrainParams" }
%"struct.libgav1::LoopRestoration" = type { [3 x i8], [3 x i32] }
%"struct.libgav1::TileInfo" = type { i8, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32, [65 x i32], [65 x i32], i16, i8 }
%"struct.libgav1::QuantizerParameters" = type { i8, [3 x i8], [3 x i8], i8, [3 x i8] }
%"struct.libgav1::Delta" = type { i8, i8, i8 }
%"struct.libgav1::LoopFilter" = type { %"struct.std::__1::array.33", i8, i8, i8, %"struct.std::__1::array.12", %"struct.std::__1::array.13" }
%"struct.std::__1::array.33" = type { [4 x i8] }
%"struct.libgav1::Cdef" = type { i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x i8] }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.libgav1::RefCountedBuffer"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { void (%"class.libgav1::RefCountedBuffer"*)* }
%"class.std::type_info" = type { i32 (...)**, i8* }

$_ZN7libgav113ReferenceInfo5ResetEii = comdat any

$_ZN7libgav18internal10VectorBaseIPNS_16RefCountedBufferEE9push_backERKS3_b = comdat any

$_ZN7libgav18internal10VectorBaseINSt3__110unique_ptrINS_23InternalFrameBufferList6BufferENS2_14default_deleteIS5_EEEEE5eraseEPS8_SA_ = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEEE = comdat any

@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZTVNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [41 x i8] c"unique_lock::lock: references null mutex\00", align 1

@_ZN7libgav116RefCountedBufferC1Ev = hidden unnamed_addr alias void (%"class.libgav1::RefCountedBuffer"*), void (%"class.libgav1::RefCountedBuffer"*)* @_ZN7libgav116RefCountedBufferC2Ev
@_ZN7libgav116RefCountedBufferD1Ev = hidden unnamed_addr alias void (%"class.libgav1::RefCountedBuffer"*), void (%"class.libgav1::RefCountedBuffer"*)* @_ZN7libgav116RefCountedBufferD2Ev
@_ZN7libgav110BufferPoolC1EPF17Libgav1StatusCodePvi18Libgav1ImageFormatiiiiiiiEPFS1_S2_iS3_iiiiiiiP18Libgav1FrameBufferEPFvS2_S2_ES2_ = hidden unnamed_addr alias void (%"class.libgav1::BufferPool"*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, void (i8*, i8*)*, i8*), void (%"class.libgav1::BufferPool"*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, void (i8*, i8*)*, i8*)* @_ZN7libgav110BufferPoolC2EPF17Libgav1StatusCodePvi18Libgav1ImageFormatiiiiiiiEPFS1_S2_iS3_iiiiiiiP18Libgav1FrameBufferEPFvS2_S2_ES2_
@_ZN7libgav110BufferPoolD1Ev = hidden unnamed_addr alias void (%"class.libgav1::BufferPool"*), void (%"class.libgav1::BufferPool"*)* @_ZN7libgav110BufferPoolD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav116RefCountedBufferC2Ev(%"class.libgav1::RefCountedBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 0
  store %"class.libgav1::BufferPool"* null, %"class.libgav1::BufferPool"** %2, align 32
  %3 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 2
  store i8* null, i8** %4, align 16
  %5 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 3, i32 3
  %8 = getelementptr %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 3, i32 13, i64 0
  %9 = bitcast i32* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 76, i1 false) #12
  %10 = bitcast i8** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 42, i1 false) #12
  %11 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 4
  store i8 0, i8* %11, align 32
  %12 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 7
  %14 = bitcast %"class.std::__1::mutex"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 41, i1 false)
  store i32 -1, i32* %13, align 4
  %15 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 8
  %16 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 13
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 14
  store i8 0, i8* %17, align 16
  %18 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 15
  %19 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 30, i32 0
  %20 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 31, i32 20
  %21 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 32, i32 5
  %22 = bitcast %"class.libgav1::Array2D"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 80, i1 false) #12
  %23 = bitcast %"class.std::__1::condition_variable"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 146, i1 false)
  %24 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 356, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 2 %19, i8 0, i64 367, i1 false)
  %25 = bitcast i16* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %25, i8 0, i64 18, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav116RefCountedBufferD2Ev(%"class.libgav1::RefCountedBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 32, i32 6, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.libgav1::MotionVector"*, %"struct.libgav1::MotionVector"** %2, align 8
  store %"struct.libgav1::MotionVector"* null, %"struct.libgav1::MotionVector"** %2, align 8
  %4 = icmp eq %"struct.libgav1::MotionVector"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.libgav1::MotionVector"* %3 to i8*
  tail call void @_ZdaPv(i8* nonnull %6) #12
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 32, i32 5, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8* null, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZdaPv(i8* nonnull %9) #13
  br label %12

12:                                               ; preds = %7, %11
  %13 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 24, i32 2, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8* null, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_ZdaPv(i8* nonnull %14) #13
  br label %17

17:                                               ; preds = %12, %16
  %18 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 10
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %18) #12
  %19 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 9
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %19) #12
  %20 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 8
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %20) #12
  %21 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 3, i32 14, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  store i8* null, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  tail call void @_ZdaPv(i8* nonnull %22) #13
  br label %25

25:                                               ; preds = %17, %24
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav116RefCountedBuffer7ReallocEibiiiiiiii(%"class.libgav1::RefCountedBuffer"*, i32, i1 zeroext, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %12 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 0
  %13 = load %"class.libgav1::BufferPool"*, %"class.libgav1::BufferPool"** %12, align 32
  %14 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %13, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %14) #12
  %15 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 3
  %16 = trunc i32 %5 to i8
  %17 = trunc i32 %6 to i8
  %18 = load %"class.libgav1::BufferPool"*, %"class.libgav1::BufferPool"** %12, align 32
  %19 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %18, i64 0, i32 4
  %20 = load i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)** %19, align 8
  %21 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %18, i64 0, i32 6
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 2
  %24 = tail call zeroext i1 @_ZN7libgav19YuvBuffer7ReallocEibiiaaiiiiPF17Libgav1StatusCodePvi18Libgav1ImageFormatiiiiiiiP18Libgav1FrameBufferES2_PS2_(%"class.libgav1::YuvBuffer"* %15, i32 %1, i1 zeroext %2, i32 %3, i32 %4, i8 signext %16, i8 signext %17, i32 %7, i32 %8, i32 %9, i32 %10, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)* %20, i8* %22, i8** %23) #12
  br i1 %24, label %25, label %27

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 1
  store i8 1, i8* %26, align 8
  br label %27

27:                                               ; preds = %11, %25
  %28 = phi i1 [ true, %25 ], [ false, %11 ]
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %14) #12
  ret i1 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN7libgav19YuvBuffer7ReallocEibiiaaiiiiPF17Libgav1StatusCodePvi18Libgav1ImageFormatiiiiiiiP18Libgav1FrameBufferES2_PS2_(%"class.libgav1::YuvBuffer"*, i32, i1 zeroext, i32, i32, i8 signext, i8 signext, i32, i32, i32, i32, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, i8*, i8**) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav116RefCountedBuffer18SetFrameDimensionsERKNS_14ObuFrameHeaderE(%"class.libgav1::RefCountedBuffer"*, %"struct.libgav1::ObuFrameHeader"* nocapture readonly dereferenceable(2080)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 10
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 15
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 16
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 17
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 8
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 18
  store i32 %13, i32* %14, align 32
  %15 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 9
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 19
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 21
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 20
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 34
  %25 = load i8, i8* %24, align 2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %40, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 20
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, -3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %40, label %32

32:                                               ; preds = %27
  %33 = ashr i32 %19, 1
  %34 = ashr i32 %22, 1
  %35 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 32
  %36 = tail call zeroext i1 @_ZN7libgav113ReferenceInfo5ResetEii(%"struct.libgav1::ReferenceInfo"* %35, i32 %33, i32 %34)
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = load i32, i32* %20, align 4
  %39 = load i32, i32* %23, align 8
  br label %40

40:                                               ; preds = %37, %2, %27
  %41 = phi i32 [ %39, %37 ], [ %22, %2 ], [ %22, %27 ]
  %42 = phi i32 [ %38, %37 ], [ %19, %2 ], [ %19, %27 ]
  %43 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 24
  %44 = tail call zeroext i1 @_ZN7libgav115SegmentationMap8AllocateEii(%"class.libgav1::SegmentationMap"* %43, i32 %42, i32 %41) #12
  br label %45

45:                                               ; preds = %32, %40
  %46 = phi i1 [ %44, %40 ], [ false, %32 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7libgav113ReferenceInfo5ResetEii(%"struct.libgav1::ReferenceInfo"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 5
  %5 = mul nsw i32 %2, %1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 5, i32 2
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 5, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %6
  br i1 %10, label %11, label %27

11:                                               ; preds = %3
  %12 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %6, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 0, i64 %6, i1 false) #12
  br label %15

15:                                               ; preds = %14, %11
  %16 = getelementptr inbounds %"class.libgav1::Array2D", %"class.libgav1::Array2D"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  store i8* %12, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  tail call void @_ZdaPv(i8* nonnull %17) #13
  %20 = load i8*, i8** %16, align 8
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi i8* [ %20, %19 ], [ %12, %15 ]
  %23 = icmp eq i8* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %21
  %25 = ptrtoint i8* %22 to i64
  %26 = load i64, i64* %7, align 8
  store i64 %26, i64* %8, align 8
  br label %33

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.libgav1::Array2D", %"class.libgav1::Array2D"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %6, i1 false) #12
  %30 = bitcast %"class.libgav1::Array2D"* %4 to i64*
  %31 = load i64, i64* %30, align 8
  br label %33

32:                                               ; preds = %21
  store i64 0, i64* %8, align 8
  br label %70

33:                                               ; preds = %24, %27
  %34 = phi i64 [ %25, %24 ], [ %31, %27 ]
  %35 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 5, i32 3, i32 0
  store i32 %1, i32* %35, align 8
  %36 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 5, i32 3, i32 1
  store i32 %2, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 5, i32 3, i32 2
  %38 = bitcast i8** %37 to i64*
  store i64 %34, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 6
  %40 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 6, i32 2
  store i64 %6, i64* %40, align 8
  %41 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 4) #12
  %42 = extractvalue { i64, i1 } %41, 1
  %43 = extractvalue { i64, i1 } %41, 0
  %44 = select i1 %42, i64 -1, i64 %43
  %45 = icmp ugt i64 %44, 1073741824
  br i1 %45, label %48, label %46

46:                                               ; preds = %33
  %47 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %44, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  br label %48

48:                                               ; preds = %46, %33
  %49 = phi i8* [ %47, %46 ], [ null, %33 ]
  %50 = getelementptr inbounds %"class.libgav1::Array2D.24", %"class.libgav1::Array2D.24"* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"struct.libgav1::MotionVector"*, %"struct.libgav1::MotionVector"** %50, align 8
  %52 = bitcast %"class.libgav1::Array2D.24"* %39 to i8**
  store i8* %49, i8** %52, align 8
  %53 = icmp eq %"struct.libgav1::MotionVector"* %51, null
  %54 = bitcast i8* %49 to %"struct.libgav1::MotionVector"*
  br i1 %53, label %58, label %55

55:                                               ; preds = %48
  %56 = bitcast %"struct.libgav1::MotionVector"* %51 to i8*
  tail call void @_ZdaPv(i8* nonnull %56) #12
  %57 = load %"struct.libgav1::MotionVector"*, %"struct.libgav1::MotionVector"** %50, align 8
  br label %58

58:                                               ; preds = %55, %48
  %59 = phi %"struct.libgav1::MotionVector"* [ %57, %55 ], [ %54, %48 ]
  %60 = icmp eq %"struct.libgav1::MotionVector"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = load i64, i64* %40, align 8
  %63 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 6, i32 3, i32 0
  store i32 %1, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 6, i32 3, i32 1
  store i32 %2, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 6, i32 3, i32 2
  store %"struct.libgav1::MotionVector"* %59, %"struct.libgav1::MotionVector"** %65, align 8
  br label %66

66:                                               ; preds = %58, %61
  %67 = phi i64 [ %62, %61 ], [ 0, %58 ]
  %68 = phi i1 [ true, %61 ], [ false, %58 ]
  %69 = getelementptr inbounds %"struct.libgav1::ReferenceInfo", %"struct.libgav1::ReferenceInfo"* %0, i64 0, i32 6, i32 1
  store i64 %67, i64* %69, align 8
  br label %70

70:                                               ; preds = %32, %66
  %71 = phi i1 [ false, %32 ], [ %68, %66 ]
  ret i1 %71
}

declare zeroext i1 @_ZN7libgav115SegmentationMap8AllocateEii(%"class.libgav1::SegmentationMap"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav116RefCountedBuffer16SetGlobalMotionsERKNSt3__15arrayINS_12GlobalMotionELm8EEE(%"class.libgav1::RefCountedBuffer"* nocapture, %"struct.std::__1::array"* nocapture readonly dereferenceable(288)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 25, i32 0, i64 1, i32 1, i64 0
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 1, i32 1, i64 0
  %6 = bitcast i32* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 25, i32 0, i64 2, i32 1, i64 0
  %8 = bitcast i32* %7 to i8*
  %9 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 2, i32 1, i64 0
  %10 = bitcast i32* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %10, i64 24, i1 false)
  %11 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 25, i32 0, i64 3, i32 1, i64 0
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 3, i32 1, i64 0
  %14 = bitcast i32* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %14, i64 24, i1 false)
  %15 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 25, i32 0, i64 4, i32 1, i64 0
  %16 = bitcast i32* %15 to i8*
  %17 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 4, i32 1, i64 0
  %18 = bitcast i32* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %18, i64 24, i1 false)
  %19 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 25, i32 0, i64 5, i32 1, i64 0
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 5, i32 1, i64 0
  %22 = bitcast i32* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %22, i64 24, i1 false)
  %23 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 25, i32 0, i64 6, i32 1, i64 0
  %24 = bitcast i32* %23 to i8*
  %25 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 6, i32 1, i64 0
  %26 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %26, i64 24, i1 false)
  %27 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 25, i32 0, i64 7, i32 1, i64 0
  %28 = bitcast i32* %27 to i8*
  %29 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %1, i64 0, i32 0, i64 7, i32 1, i64 0
  %30 = bitcast i32* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %30, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav116RefCountedBuffer15SetFrameContextERKNS_20SymbolDecoderContextE(%"class.libgav1::RefCountedBuffer"*, %"struct.libgav1::SymbolDecoderContext"* nocapture readonly dereferenceable(20352)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 27
  %4 = bitcast %"struct.libgav1::SymbolDecoderContext"* %3 to i8*
  %5 = bitcast %"struct.libgav1::SymbolDecoderContext"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 32 %4, i8* align 32 %5, i64 20344, i1 false)
  tail call void @_ZN7libgav120SymbolDecoderContext23ResetIntraFrameYModeCdfEv(%"struct.libgav1::SymbolDecoderContext"* %3) #12
  tail call void @_ZN7libgav120SymbolDecoderContext13ResetCountersEv(%"struct.libgav1::SymbolDecoderContext"* %3) #12
  ret void
}

declare void @_ZN7libgav120SymbolDecoderContext23ResetIntraFrameYModeCdfEv(%"struct.libgav1::SymbolDecoderContext"*) local_unnamed_addr #3

declare void @_ZN7libgav120SymbolDecoderContext13ResetCountersEv(%"struct.libgav1::SymbolDecoderContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7libgav116RefCountedBuffer25GetSegmentationParametersEPNS_12SegmentationE(%"class.libgav1::RefCountedBuffer"* nocapture readonly, %"struct.libgav1::Segmentation"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.libgav1::Segmentation", %"struct.libgav1::Segmentation"* %1, i64 0, i32 6, i64 0, i64 0
  %4 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 30, i32 6, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %3, i8* align 2 %4, i64 64, i1 false) #12
  %5 = getelementptr inbounds %"struct.libgav1::Segmentation", %"struct.libgav1::Segmentation"* %1, i64 0, i32 7, i64 0
  %6 = bitcast [8 x i16]* %5 to i8*
  %7 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 30, i32 7, i64 0
  %8 = bitcast [8 x i16]* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %6, i8* align 2 %8, i64 128, i1 false) #12
  %9 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 30, i32 4
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = getelementptr inbounds %"struct.libgav1::Segmentation", %"struct.libgav1::Segmentation"* %1, i64 0, i32 4
  store i8 %10, i8* %11, align 2
  %12 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 30, i32 5
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %"struct.libgav1::Segmentation", %"struct.libgav1::Segmentation"* %1, i64 0, i32 5
  store i8 %13, i8* %14, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav116RefCountedBuffer25SetSegmentationParametersERKNS_12SegmentationE(%"class.libgav1::RefCountedBuffer"* nocapture, %"struct.libgav1::Segmentation"* nocapture readonly dereferenceable(214)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 30, i32 6, i64 0, i64 0
  %4 = getelementptr inbounds %"struct.libgav1::Segmentation", %"struct.libgav1::Segmentation"* %1, i64 0, i32 6, i64 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %3, i8* align 2 %4, i64 64, i1 false) #12
  %5 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 30, i32 7, i64 0
  %6 = bitcast [8 x i16]* %5 to i8*
  %7 = getelementptr inbounds %"struct.libgav1::Segmentation", %"struct.libgav1::Segmentation"* %1, i64 0, i32 7, i64 0
  %8 = bitcast [8 x i16]* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %6, i8* align 2 %8, i64 128, i1 false) #12
  %9 = getelementptr inbounds %"struct.libgav1::Segmentation", %"struct.libgav1::Segmentation"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 30, i32 4
  store i8 %10, i8* %11, align 2
  %12 = getelementptr inbounds %"struct.libgav1::Segmentation", %"struct.libgav1::Segmentation"* %1, i64 0, i32 5
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 30, i32 5
  store i8 %13, i8* %14, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7libgav116RefCountedBuffer13SetBufferPoolEPNS_10BufferPoolE(%"class.libgav1::RefCountedBuffer"* nocapture, %"class.libgav1::BufferPool"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 0
  store %"class.libgav1::BufferPool"* %1, %"class.libgav1::BufferPool"** %3, align 32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav116RefCountedBuffer18ReturnToBufferPoolEPS0_(%"class.libgav1::RefCountedBuffer"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 0
  %3 = load %"class.libgav1::BufferPool"*, %"class.libgav1::BufferPool"** %2, align 32
  %4 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %3, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %4) #12
  %5 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 4
  store i8 0, i8* %5, align 32
  %6 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %3, i64 0, i32 5
  %11 = load void (i8*, i8*)*, void (i8*, i8*)** %10, align 8
  %12 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %3, i64 0, i32 6
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %0, i64 0, i32 2
  %15 = load i8*, i8** %14, align 16
  tail call void %11(i8* %13, i8* %15) #12
  store i8 0, i8* %6, align 8
  br label %16

16:                                               ; preds = %1, %9
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110BufferPool18ReturnUnusedBufferEPNS_16RefCountedBufferE(%"class.libgav1::BufferPool"*, %"class.libgav1::RefCountedBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %3) #12
  %4 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %1, i64 0, i32 4
  store i8 0, i8* %4, align 32
  %5 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 5
  %10 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8
  %11 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 6
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 16
  tail call void %10(i8* %12, i8* %14) #12
  store i8 0, i8* %5, align 8
  br label %15

15:                                               ; preds = %2, %8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110BufferPoolC2EPF17Libgav1StatusCodePvi18Libgav1ImageFormatiiiiiiiEPFS1_S2_iS3_iiiiiiiP18Libgav1FrameBufferEPFvS2_S2_ES2_(%"class.libgav1::BufferPool"*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, void (i8*, i8*)*, i8*) unnamed_addr #0 align 2 {
  %6 = icmp eq i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)* %2, null
  %7 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 3
  %8 = bitcast %"class.libgav1::BufferPool"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 88, i1 false)
  br i1 %6, label %11, label %9

9:                                                ; preds = %5
  store i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)* %1, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %7, align 8
  %10 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 6
  store i8* %4, i8** %10, align 8
  br label %15

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 2
  store i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)* @OnInternalFrameBufferSizeChanged, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %7, align 8
  %13 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 6
  %14 = bitcast i8** %13 to %"class.libgav1::InternalFrameBufferList"**
  store %"class.libgav1::InternalFrameBufferList"* %12, %"class.libgav1::InternalFrameBufferList"** %14, align 8
  br label %15

15:                                               ; preds = %11, %9
  %16 = phi i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)* [ @GetInternalFrameBuffer, %11 ], [ %2, %9 ]
  %17 = phi void (i8*, i8*)* [ @ReleaseInternalFrameBuffer, %11 ], [ %3, %9 ]
  %18 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 4
  store i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)* %16, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)** %18, align 8
  %19 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 5
  store void (i8*, i8*)* %17, void (i8*, i8*)** %19, align 8
  ret void
}

declare i32 @OnInternalFrameBufferSizeChanged(i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32) #3

declare i32 @GetInternalFrameBuffer(i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*) #3

declare void @ReleaseInternalFrameBuffer(i8*, i8*) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110BufferPoolD2Ev(%"class.libgav1::BufferPool"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %2, i64 0, i32 0
  %4 = load %"class.libgav1::RefCountedBuffer"**, %"class.libgav1::RefCountedBuffer"*** %3, align 8
  %5 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 1, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %4, i64 %6
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %25

9:                                                ; preds = %31, %1
  %10 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.libgav1::InternalFrameBufferList", %"class.libgav1::InternalFrameBufferList"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.libgav1::InternalFrameBufferList", %"class.libgav1::InternalFrameBufferList"* %10, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %14 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 %15
  tail call void @_ZN7libgav18internal10VectorBaseINSt3__110unique_ptrINS_23InternalFrameBufferList6BufferENS2_14default_deleteIS5_EEEEE5eraseEPS8_SA_(%"class.libgav1::internal::VectorBase.1"* %11, %"class.std::__1::unique_ptr"* %13, %"class.std::__1::unique_ptr"* %16) #12
  %17 = bitcast %"class.libgav1::InternalFrameBufferList"* %10 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @free(i8* %18) #12
  %19 = load i64, i64* %5, align 8
  %20 = shl nuw i64 %19, 3
  %21 = ashr exact i64 %20, 3
  %22 = sub i64 %19, %21
  store i64 %22, i64* %5, align 8
  %23 = bitcast %"class.libgav1::internal::VectorBase"* %2 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @free(i8* %24) #12
  ret void

25:                                               ; preds = %1, %31
  %26 = phi %"class.libgav1::RefCountedBuffer"** [ %32, %31 ], [ %4, %1 ]
  %27 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %26, align 8
  %28 = icmp eq %"class.libgav1::RefCountedBuffer"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  tail call void @_ZN7libgav116RefCountedBufferD2Ev(%"class.libgav1::RefCountedBuffer"* nonnull %27) #12
  %30 = bitcast %"class.libgav1::RefCountedBuffer"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %26, i64 1
  %33 = icmp eq %"class.libgav1::RefCountedBuffer"** %32, %7
  br i1 %33, label %9, label %25
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7libgav110BufferPool24OnFrameBufferSizeChangedEi18Libgav1ImageFormatiiiiii(%"class.libgav1::BufferPool"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 3
  %11 = load i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)** %10, align 8
  %12 = icmp eq i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 6
  %15 = load i8*, i8** %14, align 8
  %16 = tail call i32 %11(i8* %15, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 16) #12
  %17 = icmp eq i32 %16, 0
  br label %18

18:                                               ; preds = %9, %13
  %19 = phi i1 [ %17, %13 ], [ true, %9 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } @_ZN7libgav110BufferPool13GetFreeBufferEv(%"class.libgav1::BufferPool"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.libgav1::RefCountedBuffer"*, align 8
  %3 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %3) #12
  %4 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %4, i64 0, i32 0
  %6 = load %"class.libgav1::RefCountedBuffer"**, %"class.libgav1::RefCountedBuffer"*** %5, align 8
  %7 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 1, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %6, i64 %8
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %33, label %13

11:                                               ; preds = %13
  %12 = icmp eq %"class.libgav1::RefCountedBuffer"** %19, %9
  br i1 %12, label %33, label %13

13:                                               ; preds = %1, %11
  %14 = phi %"class.libgav1::RefCountedBuffer"** [ %19, %11 ], [ %6, %1 ]
  %15 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %14, align 8
  %16 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %15, i64 0, i32 4
  %17 = load i8, i8* %16, align 32, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = getelementptr inbounds %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %14, i64 1
  br i1 %18, label %20, label %11

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %15, i64 0, i32 4
  store i8 1, i8* %21, align 32
  %22 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %15, i64 0, i32 7
  store i32 -1, i32* %22, align 4
  %23 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %15, i64 0, i32 6
  store i8 0, i8* %23, align 16
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %3) #12
  %24 = tail call i8* @_Znwm(i64 40) #13
  %25 = ptrtoint %"class.libgav1::RefCountedBuffer"* %15 to i64
  %26 = bitcast i8* %24 to i32 (...)***
  %27 = getelementptr inbounds i8, i8* %24, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 24
  %29 = bitcast i8* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 32
  %31 = bitcast i8* %30 to i64*
  store i64 ptrtoint (void (%"class.libgav1::RefCountedBuffer"*)* @_ZN7libgav116RefCountedBuffer18ReturnToBufferPoolEPS0_ to i64), i64* %31, align 8
  %32 = bitcast i8* %24 to %"class.std::__1::__shared_weak_count"*
  br label %84

33:                                               ; preds = %11, %1
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %3) #12
  %34 = bitcast %"class.libgav1::RefCountedBuffer"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store %"class.libgav1::RefCountedBuffer"* inttoptr (i64 -6148914691236517206 to %"class.libgav1::RefCountedBuffer"*), %"class.libgav1::RefCountedBuffer"** %2, align 8
  %35 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 21632, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  store %"class.libgav1::RefCountedBuffer"* null, %"class.libgav1::RefCountedBuffer"** %2, align 8
  br label %81

38:                                               ; preds = %33
  %39 = bitcast i8* %35 to %"class.libgav1::BufferPool"**
  %40 = getelementptr inbounds i8, i8* %35, i64 8
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds i8, i8* %35, i64 16
  %42 = bitcast i8* %41 to i8**
  store i8* null, i8** %42, align 16
  %43 = getelementptr inbounds i8, i8* %35, i64 24
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %35, i64 28
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds i8, i8* %35, i64 32
  %47 = getelementptr i8, i8* %35, i64 112
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 76, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 42, i1 false) #12
  %48 = getelementptr inbounds i8, i8* %35, i64 160
  %49 = getelementptr inbounds i8, i8* %35, i64 168
  %50 = getelementptr inbounds i8, i8* %35, i64 212
  %51 = bitcast i8* %50 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 40, i1 false) #12
  %52 = getelementptr inbounds i8, i8* %35, i64 216
  %53 = getelementptr inbounds i8, i8* %35, i64 364
  %54 = bitcast i8* %53 to i32*
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %35, i64 368
  store i8 0, i8* %55, align 16
  %56 = getelementptr inbounds i8, i8* %35, i64 372
  %57 = getelementptr inbounds i8, i8* %35, i64 21098
  %58 = getelementptr inbounds i8, i8* %35, i64 21466
  %59 = getelementptr inbounds i8, i8* %35, i64 21536
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 80, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 146, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 356, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %57, i8 0, i64 367, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %58, i8 0, i64 18, i1 false) #12
  %60 = bitcast %"class.libgav1::RefCountedBuffer"** %2 to i8**
  store i8* %35, i8** %60, align 8
  store %"class.libgav1::BufferPool"* %0, %"class.libgav1::BufferPool"** %39, align 32
  store i8 1, i8* %48, align 32
  store i32 -1, i32* %51, align 4
  %61 = getelementptr inbounds i8, i8* %35, i64 208
  store i8 0, i8* %61, align 16
  %62 = icmp eq %"class.libgav1::BufferPool"* %0, null
  br i1 %62, label %63, label %64

63:                                               ; preds = %38
  tail call void @_ZNSt3__120__throw_system_errorEiPKc(i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable

64:                                               ; preds = %38
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %3) #12
  %65 = call zeroext i1 @_ZN7libgav18internal10VectorBaseIPNS_16RefCountedBufferEE9push_backERKS3_b(%"class.libgav1::internal::VectorBase"* %4, %"class.libgav1::RefCountedBuffer"** nonnull dereferenceable(8) %2, i1 zeroext true)
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* nonnull %3) #12
  %66 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %2, align 8
  br i1 %65, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp eq %"class.libgav1::RefCountedBuffer"* %66, null
  br i1 %68, label %81, label %69

69:                                               ; preds = %67
  call void @_ZN7libgav116RefCountedBufferD2Ev(%"class.libgav1::RefCountedBuffer"* nonnull %66) #12
  %70 = bitcast %"class.libgav1::RefCountedBuffer"* %66 to i8*
  call void @_ZdlPv(i8* %70) #13
  br label %81

71:                                               ; preds = %64
  %72 = call i8* @_Znwm(i64 40) #13
  %73 = ptrtoint %"class.libgav1::RefCountedBuffer"* %66 to i64
  %74 = bitcast i8* %72 to i32 (...)***
  %75 = getelementptr inbounds i8, i8* %72, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %76 = getelementptr inbounds i8, i8* %72, i64 24
  %77 = bitcast i8* %76 to i64*
  store i64 %73, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %72, i64 32
  %79 = bitcast i8* %78 to i64*
  store i64 ptrtoint (void (%"class.libgav1::RefCountedBuffer"*)* @_ZN7libgav116RefCountedBuffer18ReturnToBufferPoolEPS0_ to i64), i64* %79, align 8
  %80 = bitcast i8* %72 to %"class.std::__1::__shared_weak_count"*
  br label %81

81:                                               ; preds = %67, %69, %37, %71
  %82 = phi %"class.std::__1::__shared_weak_count"* [ %80, %71 ], [ null, %37 ], [ null, %69 ], [ null, %67 ]
  %83 = phi %"class.libgav1::RefCountedBuffer"* [ %66, %71 ], [ null, %37 ], [ null, %69 ], [ null, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %84

84:                                               ; preds = %81, %20
  %85 = phi %"class.std::__1::__shared_weak_count"* [ %82, %81 ], [ %32, %20 ]
  %86 = phi %"class.libgav1::RefCountedBuffer"* [ %83, %81 ], [ %15, %20 ]
  %87 = insertvalue { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.libgav1::RefCountedBuffer"* %86, 0
  %88 = insertvalue { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } %87, %"class.std::__1::__shared_weak_count"* %85, 1
  ret { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* } %88
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7libgav18internal10VectorBaseIPNS_16RefCountedBufferEE9push_backERKS3_b(%"class.libgav1::internal::VectorBase"*, %"class.libgav1::RefCountedBuffer"** dereferenceable(8), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  br i1 %8, label %44, label %9

9:                                                ; preds = %3
  br i1 %2, label %10, label %54

10:                                               ; preds = %9
  %11 = add i64 %5, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %44, label %13

13:                                               ; preds = %10
  %14 = icmp ult i64 %11, 17
  br i1 %14, label %29, label %15

15:                                               ; preds = %13
  %16 = lshr i64 %5, 1
  %17 = or i64 %16, %5
  %18 = lshr i64 %17, 2
  %19 = or i64 %18, %17
  %20 = lshr i64 %19, 4
  %21 = or i64 %20, %19
  %22 = lshr i64 %21, 8
  %23 = or i64 %22, %21
  %24 = lshr i64 %23, 16
  %25 = or i64 %24, %23
  %26 = lshr i64 %25, 32
  %27 = or i64 %26, %25
  %28 = add i64 %27, 1
  br label %29

29:                                               ; preds = %13, %15
  %30 = phi i64 [ %28, %15 ], [ 16, %13 ]
  %31 = icmp ult i64 %7, %30
  br i1 %31, label %32, label %44

32:                                               ; preds = %29
  %33 = shl i64 %30, 3
  %34 = tail call noalias i8* @malloc(i64 %33) #12
  %35 = icmp eq i8* %34, null
  br i1 %35, label %54, label %36

36:                                               ; preds = %32
  %37 = icmp eq i64 %5, 0
  %38 = bitcast %"class.libgav1::internal::VectorBase"* %0 to i8**
  %39 = load i8*, i8** %38, align 8
  br i1 %37, label %42, label %40

40:                                               ; preds = %36
  %41 = shl i64 %5, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %39, i64 %41, i1 false) #12
  br label %42

42:                                               ; preds = %40, %36
  tail call void @free(i8* %39) #12
  store i8* %34, i8** %38, align 8
  store i64 %30, i64* %6, align 8
  %43 = load i64, i64* %4, align 8
  br label %44

44:                                               ; preds = %10, %29, %42, %3
  %45 = phi i64 [ -1, %10 ], [ %5, %29 ], [ %43, %42 ], [ %5, %3 ]
  %46 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %0, i64 0, i32 0
  %47 = load %"class.libgav1::RefCountedBuffer"**, %"class.libgav1::RefCountedBuffer"*** %46, align 8
  %48 = getelementptr inbounds %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %47, i64 %45
  %49 = bitcast %"class.libgav1::RefCountedBuffer"** %1 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.libgav1::RefCountedBuffer"** %48 to i64*
  store i64 %50, i64* %51, align 8
  %52 = load i64, i64* %4, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %4, align 8
  br label %54

54:                                               ; preds = %32, %9, %44
  %55 = phi i1 [ true, %44 ], [ false, %9 ], [ false, %32 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110BufferPool5AbortEv(%"class.libgav1::BufferPool"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %2) #12
  %3 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.libgav1::RefCountedBuffer"**, %"class.libgav1::RefCountedBuffer"*** %3, align 8
  %5 = getelementptr inbounds %"class.libgav1::BufferPool", %"class.libgav1::BufferPool"* %0, i64 0, i32 1, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %4, i64 %6
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %22, %1
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #12
  ret void

10:                                               ; preds = %1, %22
  %11 = phi %"class.libgav1::RefCountedBuffer"** [ %23, %22 ], [ %4, %1 ]
  %12 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %11, align 8
  %13 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %12, i64 0, i32 4
  %14 = load i8, i8* %13, align 32, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %12, i64 0, i32 5
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %17) #12
  %18 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %12, i64 0, i32 11
  store i8 1, i8* %18, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %17) #12
  %19 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %12, i64 0, i32 9
  tail call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %19) #12
  %20 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %12, i64 0, i32 10
  tail call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %20) #12
  %21 = getelementptr inbounds %"class.libgav1::RefCountedBuffer", %"class.libgav1::RefCountedBuffer"* %12, i64 0, i32 8
  tail call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %21) #12
  br label %22

22:                                               ; preds = %10, %16
  %23 = getelementptr inbounds %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %11, i64 1
  %24 = icmp eq %"class.libgav1::RefCountedBuffer"** %23, %7
  br i1 %24, label %9, label %10
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7libgav18internal10VectorBaseINSt3__110unique_ptrINS_23InternalFrameBufferList6BufferENS2_14default_deleteIS5_EEEEE5eraseEPS8_SA_(%"class.libgav1::internal::VectorBase.1"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.std::__1::unique_ptr"* %1, %2
  br i1 %4, label %5, label %12

5:                                                ; preds = %24, %3
  %6 = getelementptr inbounds %"class.libgav1::internal::VectorBase.1", %"class.libgav1::internal::VectorBase.1"* %0, i64 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = getelementptr inbounds %"class.libgav1::internal::VectorBase.1", %"class.libgav1::internal::VectorBase.1"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %9
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %2
  br i1 %11, label %50, label %27

12:                                               ; preds = %3, %24
  %13 = phi %"class.std::__1::unique_ptr"* [ %25, %24 ], [ %1, %3 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.libgav1::InternalFrameBufferList::Buffer"*, %"struct.libgav1::InternalFrameBufferList::Buffer"** %14, align 8
  store %"struct.libgav1::InternalFrameBufferList::Buffer"* null, %"struct.libgav1::InternalFrameBufferList::Buffer"** %14, align 8
  %16 = icmp eq %"struct.libgav1::InternalFrameBufferList::Buffer"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.libgav1::InternalFrameBufferList::Buffer", %"struct.libgav1::InternalFrameBufferList::Buffer"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  store i8* null, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @free(i8* nonnull %19) #12
  br label %22

22:                                               ; preds = %21, %17
  %23 = bitcast %"struct.libgav1::InternalFrameBufferList::Buffer"* %15 to i8*
  tail call void @_ZdlPv(i8* nonnull %23) #12
  br label %24

24:                                               ; preds = %12, %22
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 1
  %26 = icmp eq %"class.std::__1::unique_ptr"* %25, %2
  br i1 %26, label %5, label %12

27:                                               ; preds = %5, %43
  %28 = phi %"class.std::__1::unique_ptr"* [ %45, %43 ], [ %1, %5 ]
  %29 = phi %"class.std::__1::unique_ptr"* [ %44, %43 ], [ %2, %5 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  store %"struct.libgav1::InternalFrameBufferList::Buffer"* null, %"struct.libgav1::InternalFrameBufferList::Buffer"** %30, align 8
  %33 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load %"struct.libgav1::InternalFrameBufferList::Buffer"*, %"struct.libgav1::InternalFrameBufferList::Buffer"** %30, align 8
  store %"struct.libgav1::InternalFrameBufferList::Buffer"* null, %"struct.libgav1::InternalFrameBufferList::Buffer"** %30, align 8
  %35 = icmp eq %"struct.libgav1::InternalFrameBufferList::Buffer"* %34, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.libgav1::InternalFrameBufferList::Buffer", %"struct.libgav1::InternalFrameBufferList::Buffer"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  store i8* null, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @free(i8* nonnull %38) #12
  br label %41

41:                                               ; preds = %40, %36
  %42 = bitcast %"struct.libgav1::InternalFrameBufferList::Buffer"* %34 to i8*
  tail call void @_ZdlPv(i8* nonnull %42) #12
  br label %43

43:                                               ; preds = %27, %41
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %46 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %47 = load i64, i64* %8, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %47
  %49 = icmp eq %"class.std::__1::unique_ptr"* %44, %48
  br i1 %49, label %50, label %27

50:                                               ; preds = %43, %5
  %51 = phi i64 [ %9, %5 ], [ %47, %43 ]
  %52 = ptrtoint %"class.std::__1::unique_ptr"* %2 to i64
  %53 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 3
  %56 = sub i64 %51, %55
  store i64 %56, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #2

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNSt3__120__throw_system_errorEiPKc(i32, i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #12
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load void (%"class.libgav1::RefCountedBuffer"*)*, void (%"class.libgav1::RefCountedBuffer"*)** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::RefCountedBuffer"** %4, align 8
  tail call void %3(%"class.libgav1::RefCountedBuffer"* %5) #12
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN7libgav116RefCountedBufferEPFvS3_ENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
