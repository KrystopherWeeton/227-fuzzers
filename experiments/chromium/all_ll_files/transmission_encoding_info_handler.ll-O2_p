; ModuleID = '../../third_party/blink/renderer/platform/peerconnection/transmission_encoding_info_handler.cc'
source_filename = "../../third_party/blink/renderer/platform/peerconnection/transmission_encoding_info_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::TransmissionEncodingInfoHandler>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::TransmissionEncodingInfoHandler>::InstanceStorage" = type { %"class.blink::TransmissionEncodingInfoHandler"* }
%"class.blink::TransmissionEncodingInfoHandler" = type { %"class.WTF::HashSet", %"class.WTF::HashSet", i8, [7 x i8] }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.webrtc::VideoEncoderFactory" = type { i32 (...)** }
%"class.base::CPU" = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::Platform" = type { i32 (...)** }
%"class.media::GpuVideoAcceleratorFactories" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"*, %"class.std::__1::__compressed_pair.15" }
%"struct.webrtc::SdpVideoFormat" = type { %"class.std::__1::basic_string", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.webrtc::SdpVideoFormat"* }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::AudioEncoderFactory"* }
%"class.webrtc::AudioEncoderFactory" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"*, %"class.std::__1::__compressed_pair.22" }
%"struct.webrtc::AudioCodecSpec" = type { %"struct.webrtc::SdpAudioFormat", %"struct.webrtc::AudioCodecInfo" }
%"struct.webrtc::SdpAudioFormat" = type { %"class.std::__1::basic_string", i32, i64, %"class.std::__1::map" }
%"struct.webrtc::AudioCodecInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.webrtc::AudioCodecSpec"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.blink::WebVideoConfiguration" = type { %"class.blink::WebString", %"class.blink::WebString", i32, i32, i32, double, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.28 }
%union.anon.28 = type { %"class.blink::WebString" }
%"struct.blink::WebMediaConfiguration" = type { i32, [4 x i8], %"class.absl::optional.29", %"class.absl::optional.44" }
%"class.absl::optional.29" = type { %"class.absl::optional_internal::optional_data.30" }
%"class.absl::optional_internal::optional_data.30" = type { %"class.absl::optional_internal::optional_data_base.31" }
%"class.absl::optional_internal::optional_data_base.31" = type { %"class.absl::optional_internal::optional_data_dtor_base.32" }
%"class.absl::optional_internal::optional_data_dtor_base.32" = type { i8, [7 x i8], %union.anon.33 }
%union.anon.33 = type { %"struct.blink::WebAudioConfiguration" }
%"struct.blink::WebAudioConfiguration" = type <{ %"class.blink::WebString", %"class.blink::WebString", %"class.blink::WebString", %"class.absl::optional.34", %"class.absl::optional.34", %"class.absl::optional.39", [6 x i8] }>
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { i32 }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { i8 }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"struct.blink::WebVideoConfiguration" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.50" }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.blink::WebMediaCapabilitiesInfo"* }
%"struct.blink::WebMediaCapabilitiesInfo" = type { i8, i8, i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

@_ZZN5blink31TransmissionEncodingInfoHandler8InstanceEvE10s_instance = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink31TransmissionEncodingInfoHandler8InstanceEvE10s_instance = internal global i64 0, align 8
@.str = private unnamed_addr constant [7 x i8] c"video/\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"audio/\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"vp8\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink31TransmissionEncodingInfoHandlerC1Ev = hidden unnamed_addr alias void (%"class.blink::TransmissionEncodingInfoHandler"*), void (%"class.blink::TransmissionEncodingInfoHandler"*)* @_ZN5blink31TransmissionEncodingInfoHandlerC2Ev
@_ZN5blink31TransmissionEncodingInfoHandlerC1ENSt3__110unique_ptrIN6webrtc19VideoEncoderFactoryENS1_14default_deleteIS4_EEEEb = hidden unnamed_addr alias void (%"class.blink::TransmissionEncodingInfoHandler"*, %"class.webrtc::VideoEncoderFactory"*, i1), void (%"class.blink::TransmissionEncodingInfoHandler"*, %"class.webrtc::VideoEncoderFactory"*, i1)* @_ZN5blink31TransmissionEncodingInfoHandlerC2ENSt3__110unique_ptrIN6webrtc19VideoEncoderFactoryENS1_14default_deleteIS4_EEEEb
@_ZN5blink31TransmissionEncodingInfoHandlerD1Ev = hidden unnamed_addr alias void (%"class.blink::TransmissionEncodingInfoHandler"*), void (%"class.blink::TransmissionEncodingInfoHandler"*)* @_ZN5blink31TransmissionEncodingInfoHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransmissionEncodingInfoHandler"* @_ZN5blink31TransmissionEncodingInfoHandler8InstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink31TransmissionEncodingInfoHandler8InstanceEvE10s_instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink31TransmissionEncodingInfoHandler8InstanceEvE10s_instance) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 56) #11
  %8 = bitcast i8* %7 to %"class.blink::TransmissionEncodingInfoHandler"*
  tail call void @_ZN5blink31TransmissionEncodingInfoHandlerC2Ev(%"class.blink::TransmissionEncodingInfoHandler"* nonnull %8) #10
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink31TransmissionEncodingInfoHandler8InstanceEvE10s_instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink31TransmissionEncodingInfoHandler8InstanceEvE10s_instance) #10
  br label %9

9:                                                ; preds = %3, %6, %0
  %10 = load %"class.blink::TransmissionEncodingInfoHandler"*, %"class.blink::TransmissionEncodingInfoHandler"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink31TransmissionEncodingInfoHandler8InstanceEvE10s_instance, i64 0, i32 0, i32 0), align 8
  ret %"class.blink::TransmissionEncodingInfoHandler"* %10
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31TransmissionEncodingInfoHandlerC2Ev(%"class.blink::TransmissionEncodingInfoHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::CPU", align 8
  %3 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #10
  %4 = bitcast %"class.blink::Platform"* %3 to %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)***
  %5 = load %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)**, %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)*, %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)** %5, i64 98
  %7 = load %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)*, %"class.media::GpuVideoAcceleratorFactories"* (%"class.blink::Platform"*)** %6, align 8
  %8 = tail call %"class.media::GpuVideoAcceleratorFactories"* %7(%"class.blink::Platform"* %3) #10
  %9 = tail call %"class.webrtc::VideoEncoderFactory"* @_ZN5blink27CreateHWVideoEncoderFactoryEPN5media28GpuVideoAcceleratorFactoriesE(%"class.media::GpuVideoAcceleratorFactories"* %8) #10
  %10 = tail call i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() #10
  %11 = icmp sgt i32 %10, 3
  br i1 %11, label %37, label %12

12:                                               ; preds = %1
  %13 = icmp slt i32 %10, 2
  br i1 %13, label %37, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.base::CPU"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %15) #10
  call void @_ZN4base3CPUC1Ev(%"class.base::CPU"* nonnull %2) #10
  %16 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 14
  %17 = load i8, i8* %16, align 2, !range !3
  %18 = icmp ne i8 %17, 0
  %19 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 25
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %24, %14
  %28 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 24
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %33, %27
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %15) #10
  br label %37

37:                                               ; preds = %1, %12, %36
  %38 = phi i1 [ %18, %36 ], [ true, %1 ], [ false, %12 ]
  call void @_ZN5blink31TransmissionEncodingInfoHandlerC2ENSt3__110unique_ptrIN6webrtc19VideoEncoderFactoryENS1_14default_deleteIS4_EEEEb(%"class.blink::TransmissionEncodingInfoHandler"* %0, %"class.webrtc::VideoEncoderFactory"* %9, i1 zeroext %38)
  ret void
}

declare %"class.webrtc::VideoEncoderFactory"* @_ZN5blink27CreateHWVideoEncoderFactoryEPN5media28GpuVideoAcceleratorFactoriesE(%"class.media::GpuVideoAcceleratorFactories"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31TransmissionEncodingInfoHandlerC2ENSt3__110unique_ptrIN6webrtc19VideoEncoderFactoryENS1_14default_deleteIS4_EEEEb(%"class.blink::TransmissionEncodingInfoHandler"*, %"class.webrtc::VideoEncoderFactory"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.rtc::scoped_refptr", align 8
  %8 = alloca %"class.std::__1::vector.20", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = zext i1 %2 to i8
  %12 = bitcast %"class.blink::TransmissionEncodingInfoHandler"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #10
  %13 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 1
  %14 = bitcast %"class.WTF::HashSet"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #10
  %15 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 2
  store i8 %11, i8* %15, align 8
  %16 = icmp eq %"class.webrtc::VideoEncoderFactory"* %1, null
  br i1 %16, label %104, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %21 = bitcast %"class.webrtc::VideoEncoderFactory"* %1 to void (%"class.std::__1::vector"*, %"class.webrtc::VideoEncoderFactory"*)***
  %22 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = load void (%"class.std::__1::vector"*, %"class.webrtc::VideoEncoderFactory"*)**, void (%"class.std::__1::vector"*, %"class.webrtc::VideoEncoderFactory"*)*** %21, align 8
  %24 = load void (%"class.std::__1::vector"*, %"class.webrtc::VideoEncoderFactory"*)*, void (%"class.std::__1::vector"*, %"class.webrtc::VideoEncoderFactory"*)** %23, align 8
  call void %24(%"class.std::__1::vector"* nonnull sret %4, %"class.webrtc::VideoEncoderFactory"* nonnull %1) #10
  %25 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %19, align 8
  %26 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %20, align 8
  %27 = icmp eq %"struct.webrtc::SdpVideoFormat"* %25, %26
  br i1 %27, label %36, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.WTF::String"* %5 to i8*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %31 = bitcast %"class.WTF::String"* %6 to i8*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 0, i32 0
  br label %53

34:                                               ; preds = %101
  %35 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %19, align 8
  br label %36

36:                                               ; preds = %34, %17
  %37 = phi %"struct.webrtc::SdpVideoFormat"* [ %35, %34 ], [ %25, %17 ]
  %38 = icmp eq %"struct.webrtc::SdpVideoFormat"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = bitcast %"struct.webrtc::SdpVideoFormat"* %37 to i8*
  %41 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %20, align 8
  %42 = icmp eq %"struct.webrtc::SdpVideoFormat"* %41, %37
  br i1 %42, label %50, label %43

43:                                               ; preds = %39, %43
  %44 = phi %"struct.webrtc::SdpVideoFormat"* [ %45, %43 ], [ %41, %39 ]
  %45 = getelementptr inbounds %"struct.webrtc::SdpVideoFormat", %"struct.webrtc::SdpVideoFormat"* %44, i64 -1
  call void @_ZN6webrtc14SdpVideoFormatD1Ev(%"struct.webrtc::SdpVideoFormat"* %45) #10
  %46 = icmp eq %"struct.webrtc::SdpVideoFormat"* %45, %37
  br i1 %46, label %47, label %43

47:                                               ; preds = %43
  %48 = bitcast %"class.std::__1::vector"* %4 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %39
  %51 = phi i8* [ %49, %47 ], [ %40, %39 ]
  store %"struct.webrtc::SdpVideoFormat"* %37, %"struct.webrtc::SdpVideoFormat"** %20, align 8
  call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %36, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  br label %104

53:                                               ; preds = %28, %101
  %54 = phi %"struct.webrtc::SdpVideoFormat"* [ %25, %28 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  %55 = bitcast %"struct.webrtc::SdpVideoFormat"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"struct.webrtc::SdpVideoFormat", %"struct.webrtc::SdpVideoFormat"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"struct.webrtc::SdpVideoFormat"* %54 to i8*
  %62 = select i1 %58, i8* %60, i8* %61
  %63 = getelementptr inbounds %"struct.webrtc::SdpVideoFormat", %"struct.webrtc::SdpVideoFormat"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %57 to i64
  %66 = select i1 %58, i64 %64, i64 %65
  %67 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %62, i64 %66) #10
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %32, align 8
  %68 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %6) #10
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %30, align 8
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %53
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #10
  br label %84

84:                                               ; preds = %53, %80, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  %85 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %33, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #10
  br label %101

101:                                              ; preds = %84, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  %102 = getelementptr inbounds %"struct.webrtc::SdpVideoFormat", %"struct.webrtc::SdpVideoFormat"* %54, i64 1
  %103 = icmp eq %"struct.webrtc::SdpVideoFormat"* %102, %26
  br i1 %103, label %34, label %53

104:                                              ; preds = %3, %52
  %105 = bitcast %"class.rtc::scoped_refptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #10
  %106 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %7, i64 0, i32 0
  store %"class.webrtc::AudioEncoderFactory"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::AudioEncoderFactory"*), %"class.webrtc::AudioEncoderFactory"** %106, align 8
  call void @_ZN5blink31CreateWebrtcAudioEncoderFactoryEv(%"class.rtc::scoped_refptr"* nonnull sret %7) #10
  %107 = bitcast %"class.std::__1::vector.20"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #10
  %108 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %8, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %8, i64 0, i32 0, i32 1
  %110 = bitcast %"class.std::__1::vector.20"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 24, i1 false)
  %111 = load %"class.webrtc::AudioEncoderFactory"*, %"class.webrtc::AudioEncoderFactory"** %106, align 8
  %112 = bitcast %"class.webrtc::AudioEncoderFactory"* %111 to void (%"class.std::__1::vector.20"*, %"class.webrtc::AudioEncoderFactory"*)***
  %113 = load void (%"class.std::__1::vector.20"*, %"class.webrtc::AudioEncoderFactory"*)**, void (%"class.std::__1::vector.20"*, %"class.webrtc::AudioEncoderFactory"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.std::__1::vector.20"*, %"class.webrtc::AudioEncoderFactory"*)*, void (%"class.std::__1::vector.20"*, %"class.webrtc::AudioEncoderFactory"*)** %113, i64 4
  %115 = load void (%"class.std::__1::vector.20"*, %"class.webrtc::AudioEncoderFactory"*)*, void (%"class.std::__1::vector.20"*, %"class.webrtc::AudioEncoderFactory"*)** %114, align 8
  call void %115(%"class.std::__1::vector.20"* nonnull sret %8, %"class.webrtc::AudioEncoderFactory"* %111) #10
  %116 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %108, align 8
  %117 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %109, align 8
  %118 = icmp eq %"struct.webrtc::AudioCodecSpec"* %116, %117
  br i1 %118, label %127, label %119

119:                                              ; preds = %104
  %120 = bitcast %"class.WTF::String"* %9 to i8*
  %121 = bitcast %"class.WTF::String"* %10 to i8*
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %13, i64 0, i32 0
  br label %161

125:                                              ; preds = %209
  %126 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %108, align 8
  br label %127

127:                                              ; preds = %125, %104
  %128 = phi %"struct.webrtc::AudioCodecSpec"* [ %126, %125 ], [ %116, %104 ]
  %129 = icmp eq %"struct.webrtc::AudioCodecSpec"* %128, null
  br i1 %129, label %144, label %130

130:                                              ; preds = %127
  %131 = bitcast %"struct.webrtc::AudioCodecSpec"* %128 to i8*
  %132 = load %"struct.webrtc::AudioCodecSpec"*, %"struct.webrtc::AudioCodecSpec"** %109, align 8
  %133 = icmp eq %"struct.webrtc::AudioCodecSpec"* %132, %128
  br i1 %133, label %142, label %134

134:                                              ; preds = %130, %134
  %135 = phi %"struct.webrtc::AudioCodecSpec"* [ %136, %134 ], [ %132, %130 ]
  %136 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %135, i64 -1
  %137 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %136, i64 0, i32 0
  call void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"* %137) #10
  %138 = icmp eq %"struct.webrtc::AudioCodecSpec"* %136, %128
  br i1 %138, label %139, label %134

139:                                              ; preds = %134
  %140 = bitcast %"class.std::__1::vector.20"* %8 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %130
  %143 = phi i8* [ %141, %139 ], [ %131, %130 ]
  store %"struct.webrtc::AudioCodecSpec"* %128, %"struct.webrtc::AudioCodecSpec"** %109, align 8
  call void @_ZdlPv(i8* %143) #11
  br label %144

144:                                              ; preds = %127, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #10
  %145 = load %"class.webrtc::AudioEncoderFactory"*, %"class.webrtc::AudioEncoderFactory"** %106, align 8
  %146 = icmp eq %"class.webrtc::AudioEncoderFactory"* %145, null
  br i1 %146, label %154, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.webrtc::AudioEncoderFactory", %"class.webrtc::AudioEncoderFactory"* %145, i64 0, i32 0
  %149 = bitcast %"class.webrtc::AudioEncoderFactory"* %145 to i32 (%"class.rtc::RefCountInterface"*)***
  %150 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %149, align 8
  %151 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %150, i64 1
  %152 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %151, align 8
  %153 = call i32 %152(%"class.rtc::RefCountInterface"* %148) #10
  br label %154

154:                                              ; preds = %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #10
  br i1 %16, label %160, label %155

155:                                              ; preds = %154
  %156 = bitcast %"class.webrtc::VideoEncoderFactory"* %1 to void (%"class.webrtc::VideoEncoderFactory"*)***
  %157 = load void (%"class.webrtc::VideoEncoderFactory"*)**, void (%"class.webrtc::VideoEncoderFactory"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.webrtc::VideoEncoderFactory"*)*, void (%"class.webrtc::VideoEncoderFactory"*)** %157, i64 7
  %159 = load void (%"class.webrtc::VideoEncoderFactory"*)*, void (%"class.webrtc::VideoEncoderFactory"*)** %158, align 8
  call void %159(%"class.webrtc::VideoEncoderFactory"* nonnull %1) #10
  br label %160

160:                                              ; preds = %154, %155
  ret void

161:                                              ; preds = %119, %209
  %162 = phi %"struct.webrtc::AudioCodecSpec"* [ %116, %119 ], [ %210, %209 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #10
  %163 = bitcast %"struct.webrtc::AudioCodecSpec"* %162 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  %167 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = bitcast %"struct.webrtc::AudioCodecSpec"* %162 to i8*
  %170 = select i1 %166, i8* %168, i8* %169
  %171 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = zext i8 %165 to i64
  %174 = select i1 %166, i64 %172, i64 %173
  %175 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %170, i64 %174) #10
  store %"class.WTF::StringImpl"* %175, %"class.WTF::StringImpl"** %122, align 8
  %176 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %10) #10
  store %"class.WTF::StringImpl"* %176, %"class.WTF::StringImpl"** %123, align 8
  %177 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %124, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %161
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #10
  br label %193

193:                                              ; preds = %161, %189, %192
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #10
  br label %209

209:                                              ; preds = %193, %205, %208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #10
  %210 = getelementptr inbounds %"struct.webrtc::AudioCodecSpec", %"struct.webrtc::AudioCodecSpec"* %162, i64 1
  %211 = icmp eq %"struct.webrtc::AudioCodecSpec"* %210, %117
  br i1 %211, label %125, label %161
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #3

declare void @_ZN5blink31CreateWebrtcAudioEncoderFactoryEv(%"class.rtc::scoped_refptr"* sret) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31TransmissionEncodingInfoHandlerD2Ev(%"class.blink::TransmissionEncodingInfoHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::String"*, %"class.WTF::String"** %2, align 8
  %4 = icmp eq %"class.WTF::String"* %3, null
  br i1 %4, label %37, label %5, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %32, %9
  %12 = phi i64 [ 0, %9 ], [ %33, %32 ]
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 %12
  %14 = bitcast %"class.WTF::String"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %"class.WTF::StringImpl"*
  %17 = ptrtoint i8* %15 to i64
  switch i64 %17, label %18 [
    i64 -1, label %32
    i64 0, label %32
  ]

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = bitcast i8* %15 to i32*
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %18
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %18
  %29 = phi i32 [ %27, %26 ], [ %25, %18 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %32

32:                                               ; preds = %31, %28, %11, %11
  %33 = add nuw nsw i64 %12, 1
  %34 = icmp eq i64 %33, %10
  br i1 %34, label %35, label %11

35:                                               ; preds = %32, %5
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %2, align 8
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::String"*, %"class.WTF::String"** %38, align 8
  %40 = icmp eq %"class.WTF::String"* %39, null
  br i1 %40, label %73, label %41, !prof !4

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %71, label %45

45:                                               ; preds = %41
  %46 = zext i32 %43 to i64
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi i64 [ 0, %45 ], [ %69, %68 ]
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 %48
  %50 = bitcast %"class.WTF::String"* %49 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast i8* %51 to %"class.WTF::StringImpl"*
  %53 = ptrtoint i8* %51 to i64
  switch i64 %53, label %54 [
    i64 -1, label %68
    i64 0, label %68
  ]

54:                                               ; preds = %47
  %55 = getelementptr inbounds i8, i8* %51, i64 8
  %56 = bitcast i8* %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = bitcast i8* %51 to i32*
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %54
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %54
  %65 = phi i32 [ %63, %62 ], [ %61, %54 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %68

68:                                               ; preds = %67, %64, %47, %47
  %69 = add nuw nsw i64 %48, 1
  %70 = icmp eq i64 %69, %46
  br i1 %70, label %71, label %47

71:                                               ; preds = %68, %41
  %72 = bitcast %"class.WTF::String"* %39 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %38, align 8
  br label %73

73:                                               ; preds = %37, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink31TransmissionEncodingInfoHandler33ExtractSupportedCodecFromMimeTypeERKN3WTF6StringE(%"class.blink::TransmissionEncodingInfoHandler"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %10 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 6, i32* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  br label %64

17:                                               ; preds = %2
  %18 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  br i1 %18, label %22, label %19

19:                                               ; preds = %17
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  br label %64

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %23, align 8
  %24 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 6, i32 -1) #10
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %23, align 8
  %25 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %29, i64* %30, align 8
  br label %39

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %37 = bitcast i8** %36 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

39:                                               ; preds = %31, %27
  %40 = phi i64 [ %38, %31 ], [ %29, %27 ]
  %41 = phi i32 [ %34, %31 ], [ 0, %27 ]
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %41, i32* %42, align 8
  %43 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #10
  %44 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %40, i64* %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 3, i32* %46, align 8
  %47 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br i1 %47, label %106, label %48

48:                                               ; preds = %39
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %105, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %105

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #10
  br label %105

64:                                               ; preds = %19, %16
  %65 = phi %"class.WTF::StringImpl"* [ %21, %19 ], [ null, %16 ]
  %66 = phi i64 [ %20, %19 ], [ %9, %16 ]
  %67 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #10
  %68 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %66, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 6, i32* %70, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %71, label %72, label %73

72:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #10
  br label %105

73:                                               ; preds = %64
  %74 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %65, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #10
  br i1 %74, label %75, label %105

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %76, align 8
  %77 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 6, i32 -1) #10
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 1
  %79 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %78, i64 0, i32 0
  %80 = call { %"class.WTF::String"*, %"class.WTF::String"* } @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %79, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %81 = extractvalue { %"class.WTF::String"*, %"class.WTF::String"* } %80, 0
  %82 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %78, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::String"*, %"class.WTF::String"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 1, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 %86
  %88 = icmp eq %"class.WTF::String"* %81, %87
  br i1 %88, label %89, label %106

89:                                               ; preds = %75
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #10
  br label %105

105:                                              ; preds = %89, %101, %104, %48, %60, %63, %72, %73
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #10
  br label %106

106:                                              ; preds = %75, %39, %105
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  ret %"class.WTF::StringImpl"* %108
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink31TransmissionEncodingInfoHandler20CanCpuEncodeSmoothlyERKNS_21WebVideoConfigurationE(%"class.blink::TransmissionEncodingInfoHandler"* nocapture readonly, %"struct.blink::WebVideoConfiguration"* nocapture readonly dereferenceable(88)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.blink::WebVideoConfiguration", %"struct.blink::WebVideoConfiguration"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.blink::WebVideoConfiguration", %"struct.blink::WebVideoConfiguration"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = mul i32 %6, %4
  %8 = icmp ult i32 %7, 921600
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i1 [ %12, %9 ], [ true, %2 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink31TransmissionEncodingInfoHandler12EncodingInfoERKNS_21WebMediaConfigurationEN4base12OnceCallbackIFvNSt3__110unique_ptrINS_24WebMediaCapabilitiesInfoENS6_14default_deleteIS8_EEEEEEE(%"class.blink::TransmissionEncodingInfoHandler"*, %"struct.blink::WebMediaConfiguration"* dereferenceable(160), %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.55", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.std::__1::unique_ptr.55", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = tail call i8* @_Znwm(i64 3) #11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 0, i64 3, i1 false) #10
  %14 = getelementptr inbounds %"struct.blink::WebMediaConfiguration", %"struct.blink::WebMediaConfiguration"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %42

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"struct.blink::WebMediaConfiguration", %"struct.blink::WebMediaConfiguration"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %39

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::unique_ptr.55"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %4, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr.55"* %4 to i8**
  store i8* %13, i8** %24, align 8
  %25 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %31 = inttoptr i64 %28 to %"class.base::internal::BindStateBase"*
  %32 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %31, i64 0, i32 1
  %33 = bitcast void ()** %32 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.55"*)**
  %34 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.55"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.55"*)** %33, align 8
  call void %34(%"class.base::internal::BindStateBase"* %31, %"class.std::__1::unique_ptr.55"* nonnull dereferenceable(8) %4) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %35 = load %"struct.blink::WebMediaCapabilitiesInfo"*, %"struct.blink::WebMediaCapabilitiesInfo"** %23, align 8
  store %"struct.blink::WebMediaCapabilitiesInfo"* null, %"struct.blink::WebMediaCapabilitiesInfo"** %23, align 8
  %36 = icmp eq %"struct.blink::WebMediaCapabilitiesInfo"* %35, null
  br i1 %36, label %232, label %37

37:                                               ; preds = %21
  %38 = getelementptr inbounds %"struct.blink::WebMediaCapabilitiesInfo", %"struct.blink::WebMediaCapabilitiesInfo"* %35, i64 0, i32 0
  call void @_ZdlPv(i8* %38) #11
  br label %232

39:                                               ; preds = %17
  %40 = getelementptr inbounds i8, i8* %13, i64 2
  store i8 1, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %13, i64 1
  store i8 1, i8* %41, align 1
  store i8 1, i8* %13, align 1
  br label %142

42:                                               ; preds = %3
  %43 = getelementptr inbounds i8, i8* %13, i64 2
  store i8 1, i8* %43, align 1
  %44 = getelementptr inbounds i8, i8* %13, i64 1
  store i8 1, i8* %44, align 1
  store i8 1, i8* %13, align 1
  %45 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %46, align 8
  %47 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  %48 = getelementptr inbounds %"struct.blink::WebMediaConfiguration", %"struct.blink::WebMediaConfiguration"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %49 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %48) #10
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %9) #10
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %46, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #10
  br label %67

67:                                               ; preds = %42, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  %68 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %69, align 8
  %70 = call %"class.WTF::StringImpl"* @_ZNK5blink31TransmissionEncodingInfoHandler33ExtractSupportedCodecFromMimeTypeERKN3WTF6StringE(%"class.blink::TransmissionEncodingInfoHandler"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %8)
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %72, label %73

72:                                               ; preds = %67
  store i8 0, i8* %13, align 1
  store i8 0, i8* %44, align 1
  store i8 0, i8* %43, align 1
  br label %122

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i8
  store i8 %78, i8* %13, align 1
  br i1 %76, label %104, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 0, i32 0
  %81 = call { %"class.WTF::String"*, %"class.WTF::String"* } @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"* %80, %"class.WTF::String"* nonnull dereferenceable(8) %10) #10
  %82 = extractvalue { %"class.WTF::String"*, %"class.WTF::String"* } %81, 0
  %83 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::String"*, %"class.WTF::String"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 %87
  %89 = icmp eq %"class.WTF::String"* %82, %88
  br i1 %89, label %90, label %104

90:                                               ; preds = %79
  %91 = getelementptr inbounds %"struct.blink::WebMediaConfiguration", %"struct.blink::WebMediaConfiguration"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"struct.blink::WebMediaConfiguration", %"struct.blink::WebMediaConfiguration"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = mul i32 %94, %92
  %96 = icmp ult i32 %95, 921600
  br i1 %96, label %101, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.blink::TransmissionEncodingInfoHandler", %"class.blink::TransmissionEncodingInfoHandler"* %0, i64 0, i32 2
  %99 = load i8, i8* %98, align 8, !range !3
  %100 = icmp ne i8 %99, 0
  br label %101

101:                                              ; preds = %90, %97
  %102 = phi i1 [ %100, %97 ], [ true, %90 ]
  %103 = zext i1 %102 to i8
  br label %104

104:                                              ; preds = %79, %73, %101
  %105 = phi i8 [ 0, %73 ], [ %103, %101 ], [ 1, %79 ]
  %106 = phi i8 [ 0, %73 ], [ 0, %101 ], [ 1, %79 ]
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  store i8 %105, i8* %44, align 1
  store i8 %106, i8* %43, align 1
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #10
  br label %122

122:                                              ; preds = %72, %104, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #10
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #10
  br label %138

138:                                              ; preds = %137, %134, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %139 = getelementptr inbounds %"struct.blink::WebMediaConfiguration", %"struct.blink::WebMediaConfiguration"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %140 = load i8, i8* %139, align 8, !range !3
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %214, label %142

142:                                              ; preds = %39, %138
  %143 = phi i8* [ %40, %39 ], [ %43, %138 ]
  %144 = phi i8* [ %41, %39 ], [ %44, %138 ]
  %145 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #10
  %146 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %147 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #10
  %148 = getelementptr inbounds %"struct.blink::WebMediaConfiguration", %"struct.blink::WebMediaConfiguration"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %149 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %148) #10
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %150, align 8
  %151 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %12) #10
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %146, align 8
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %142
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #10
  br label %167

167:                                              ; preds = %142, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #10
  %168 = call %"class.WTF::StringImpl"* @_ZNK5blink31TransmissionEncodingInfoHandler33ExtractSupportedCodecFromMimeTypeERKN3WTF6StringE(%"class.blink::TransmissionEncodingInfoHandler"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %11)
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %175, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = icmp ne i32 %172, 0
  %174 = zext i1 %173 to i8
  br label %175

175:                                              ; preds = %167, %170
  %176 = phi i1 [ true, %167 ], [ false, %170 ]
  %177 = phi i8 [ 0, %167 ], [ %174, %170 ]
  %178 = load i8, i8* %13, align 1, !range !3
  %179 = and i8 %178, %177
  store i8 %179, i8* %13, align 1
  %180 = load i8, i8* %144, align 1, !range !3
  %181 = and i8 %180, %179
  store i8 %181, i8* %144, align 1
  %182 = load i8, i8* %143, align 1, !range !3
  %183 = and i8 %182, %179
  store i8 %183, i8* %143, align 1
  br i1 %176, label %197, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #10
  br label %197

197:                                              ; preds = %175, %193, %196
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #10
  br label %213

213:                                              ; preds = %197, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #10
  br label %214

214:                                              ; preds = %138, %213
  %215 = bitcast %"class.std::__1::unique_ptr.55"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215)
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %6, i64 0, i32 0, i32 0, i32 0
  %217 = bitcast %"class.std::__1::unique_ptr.55"* %6 to i8**
  store i8* %13, i8** %217, align 8
  %218 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #10
  %219 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %220 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %221, i64* %222, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %219, align 8
  %223 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %224 = inttoptr i64 %221 to %"class.base::internal::BindStateBase"*
  %225 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %224, i64 0, i32 1
  %226 = bitcast void ()** %225 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.55"*)**
  %227 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.55"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.55"*)** %226, align 8
  call void %227(%"class.base::internal::BindStateBase"* %224, %"class.std::__1::unique_ptr.55"* nonnull dereferenceable(8) %6) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %223) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #10
  %228 = load %"struct.blink::WebMediaCapabilitiesInfo"*, %"struct.blink::WebMediaCapabilitiesInfo"** %216, align 8
  store %"struct.blink::WebMediaCapabilitiesInfo"* null, %"struct.blink::WebMediaCapabilitiesInfo"** %216, align 8
  %229 = icmp eq %"struct.blink::WebMediaCapabilitiesInfo"* %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %214
  %231 = getelementptr inbounds %"struct.blink::WebMediaCapabilitiesInfo", %"struct.blink::WebMediaCapabilitiesInfo"* %228, i64 0, i32 0
  call void @_ZdlPv(i8* %231) #11
  br label %232

232:                                              ; preds = %230, %214, %37, %21
  %233 = phi i8* [ %22, %21 ], [ %22, %37 ], [ %215, %214 ], [ %215, %230 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233)
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #3

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #3

declare i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() local_unnamed_addr #3

declare void @_ZN4base3CPUC1Ev(%"class.base::CPU"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, %"class.WTF::String"* } @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #10
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %22
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %59, %52 ]
  %43 = phi %"class.WTF::String"* [ %23, %27 ], [ %57, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %46 = bitcast %"class.WTF::String"* %43 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %42, %"class.WTF::StringImpl"* %50) #10
  br i1 %51, label %61, label %52

52:                                               ; preds = %49, %41
  %53 = icmp eq i64 %45, 0
  %54 = select i1 %53, i64 %40, i64 %45
  %55 = add i64 %54, %44
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %56
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %49
  %62 = icmp eq %"class.WTF::String"* %43, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"class.WTF::String"* [ %43, %69 ], [ %68, %63 ]
  %76 = phi %"class.WTF::String"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"class.WTF::String"*, %"class.WTF::String"* } undef, %"class.WTF::String"* %75, 0
  %78 = insertvalue { %"class.WTF::String"*, %"class.WTF::String"* } %77, %"class.WTF::String"* %76, 1
  ret { %"class.WTF::String"*, %"class.WTF::String"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6webrtc14SdpVideoFormatD1Ev(%"struct.webrtc::SdpVideoFormat"*) unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #10
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #10
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !5

97:                                               ; preds = %88
  tail call void @llvm.trap() #10
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #10
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #10
  ret %"class.WTF::String"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #10
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #10
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #10
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #10
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #10
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: nounwind
declare void @_ZN6webrtc14SdpAudioFormatD1Ev(%"struct.webrtc::SdpAudioFormat"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #10
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %70, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #10
  br i1 %57, label %115, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %24, %68
  %71 = phi %"class.WTF::String"* [ %64, %68 ], [ %28, %24 ]
  %72 = bitcast %"class.WTF::String"* %71 to i64*
  br label %81

73:                                               ; preds = %68
  %74 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %70, %73
  %82 = phi i64* [ %72, %70 ], [ %74, %73 ]
  %83 = phi %"class.WTF::String"* [ %71, %70 ], [ %59, %73 ]
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %85 = bitcast %"class.WTF::String"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %84, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store i64 %86, i64* %82, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #10
  br label %103

103:                                              ; preds = %81, %99, %102
  %104 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %83)
  br label %115

115:                                              ; preds = %55, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %55 ]
  %117 = phi %"class.WTF::String"* [ %83, %103 ], [ %114, %113 ], [ %48, %55 ]
  %118 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %117, 0
  %119 = insertvalue { %"class.WTF::String"*, i8 } %118, i8 %116, 1
  ret { %"class.WTF::String"*, i8 } %119
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
