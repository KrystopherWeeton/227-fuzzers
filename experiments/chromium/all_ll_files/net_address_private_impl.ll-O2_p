; ModuleID = '../../ppapi/shared_impl/private/net_address_private_impl.cc'
source_filename = "../../ppapi/shared_impl/private/net_address_private_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.PPB_NetAddress_Private_0_1 = type { i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)*, i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)*, { i64, i64 } (i32, %struct.PP_NetAddress_Private*, i32)*, i32 (%struct.PP_NetAddress_Private*, i16, %struct.PP_NetAddress_Private*)*, void (i32, %struct.PP_NetAddress_Private*)* }
%struct.PP_NetAddress_Private = type { i32, [128 x i8] }
%struct.PPB_NetAddress_Private_1_0 = type { i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)*, i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)*, { i64, i64 } (i32, %struct.PP_NetAddress_Private*, i32)*, i32 (%struct.PP_NetAddress_Private*, i16, %struct.PP_NetAddress_Private*)*, void (i32, %struct.PP_NetAddress_Private*)*, i32 (%struct.PP_NetAddress_Private*)*, i16 (%struct.PP_NetAddress_Private*)*, i32 (%struct.PP_NetAddress_Private*, i8*, i16)* }
%struct.PPB_NetAddress_Private_1_1 = type { i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)*, i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)*, { i64, i64 } (i32, %struct.PP_NetAddress_Private*, i32)*, i32 (%struct.PP_NetAddress_Private*, i16, %struct.PP_NetAddress_Private*)*, void (i32, %struct.PP_NetAddress_Private*)*, i32 (%struct.PP_NetAddress_Private*)*, i16 (%struct.PP_NetAddress_Private*)*, i32 (%struct.PP_NetAddress_Private*, i8*, i16)*, i32 (%struct.PP_NetAddress_Private*)*, void (i8*, i16, %struct.PP_NetAddress_Private*)*, void (i8*, i32, i16, %struct.PP_NetAddress_Private*)* }
%struct.sockaddr = type { i16, [14 x i8] }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.PP_NetAddress_IPv4 = type { i16, [4 x i8] }
%struct.PP_NetAddress_IPv6 = type { i16, [16 x i8] }
%"struct.ppapi::(anonymous namespace)::NetAddress" = type { i8, i8, i16, i32, i32, [16 x i8] }

@_ZN5ppapi12_GLOBAL__N_133net_address_private_interface_0_1E = internal constant %struct.PPB_NetAddress_Private_0_1 { i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_18AreEqualEPK21PP_NetAddress_PrivateS3_, i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_113AreHostsEqualEPK21PP_NetAddress_PrivateS3_, { i64, i64 } (i32, %struct.PP_NetAddress_Private*, i32)* @_ZN5ppapi12_GLOBAL__N_18DescribeEiPK21PP_NetAddress_Private7PP_Bool, i32 (%struct.PP_NetAddress_Private*, i16, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_111ReplacePortEPK21PP_NetAddress_PrivatetPS1_, void (i32, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_113GetAnyAddressE7PP_BoolP21PP_NetAddress_Private }, align 8
@_ZN5ppapi12_GLOBAL__N_133net_address_private_interface_1_0E = internal constant %struct.PPB_NetAddress_Private_1_0 { i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_18AreEqualEPK21PP_NetAddress_PrivateS3_, i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_113AreHostsEqualEPK21PP_NetAddress_PrivateS3_, { i64, i64 } (i32, %struct.PP_NetAddress_Private*, i32)* @_ZN5ppapi12_GLOBAL__N_18DescribeEiPK21PP_NetAddress_Private7PP_Bool, i32 (%struct.PP_NetAddress_Private*, i16, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_111ReplacePortEPK21PP_NetAddress_PrivatetPS1_, void (i32, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_113GetAnyAddressE7PP_BoolP21PP_NetAddress_Private, i32 (%struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_19GetFamilyEPK21PP_NetAddress_Private, i16 (%struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_17GetPortEPK21PP_NetAddress_Private, i32 (%struct.PP_NetAddress_Private*, i8*, i16)* @_ZN5ppapi12_GLOBAL__N_110GetAddressEPK21PP_NetAddress_PrivatePvt }, align 8
@_ZN5ppapi12_GLOBAL__N_133net_address_private_interface_1_1E = internal constant %struct.PPB_NetAddress_Private_1_1 { i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_18AreEqualEPK21PP_NetAddress_PrivateS3_, i32 (%struct.PP_NetAddress_Private*, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_113AreHostsEqualEPK21PP_NetAddress_PrivateS3_, { i64, i64 } (i32, %struct.PP_NetAddress_Private*, i32)* @_ZN5ppapi12_GLOBAL__N_18DescribeEiPK21PP_NetAddress_Private7PP_Bool, i32 (%struct.PP_NetAddress_Private*, i16, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_111ReplacePortEPK21PP_NetAddress_PrivatetPS1_, void (i32, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_113GetAnyAddressE7PP_BoolP21PP_NetAddress_Private, i32 (%struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_19GetFamilyEPK21PP_NetAddress_Private, i16 (%struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_17GetPortEPK21PP_NetAddress_Private, i32 (%struct.PP_NetAddress_Private*, i8*, i16)* @_ZN5ppapi12_GLOBAL__N_110GetAddressEPK21PP_NetAddress_PrivatePvt, i32 (%struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_110GetScopeIDEPK21PP_NetAddress_Private, void (i8*, i16, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_121CreateFromIPv4AddressEPKhtP21PP_NetAddress_Private, void (i8*, i32, i16, %struct.PP_NetAddress_Private*)* @_ZN5ppapi12_GLOBAL__N_121CreateFromIPv6AddressEPKhjtP21PP_NetAddress_Private }, align 8
@.str = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"::%u.%u.%u.%u\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"::ffff:%u.%u.%u.%u\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c":%x\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"%%%u\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"]:%u\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"%u.%u.%u.%u\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c":%u\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.PPB_NetAddress_Private_0_1* @_ZN5ppapi5thunk35GetPPB_NetAddress_Private_0_1_ThunkEv() local_unnamed_addr #0 {
  ret %struct.PPB_NetAddress_Private_0_1* @_ZN5ppapi12_GLOBAL__N_133net_address_private_interface_0_1E
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.PPB_NetAddress_Private_1_0* @_ZN5ppapi5thunk35GetPPB_NetAddress_Private_1_0_ThunkEv() local_unnamed_addr #0 {
  ret %struct.PPB_NetAddress_Private_1_0* @_ZN5ppapi12_GLOBAL__N_133net_address_private_interface_1_0E
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.PPB_NetAddress_Private_1_1* @_ZN5ppapi5thunk35GetPPB_NetAddress_Private_1_1_ThunkEv() local_unnamed_addr #0 {
  ret %struct.PPB_NetAddress_Private_1_1* @_ZN5ppapi12_GLOBAL__N_133net_address_private_interface_1_1E
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5ppapi21NetAddressPrivateImpl18ValidateNetAddressERK21PP_NetAddress_Private(%struct.PP_NetAddress_Private* readonly dereferenceable(132)) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %struct.PP_NetAddress_Private* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 28
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %9 = icmp eq i8* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = load i8, i8* %8, align 4, !range !2
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %1, %3, %7, %10
  %14 = phi i1 [ false, %7 ], [ %12, %10 ], [ false, %3 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi21NetAddressPrivateImpl20SockaddrToNetAddressEPK8sockaddrjP21PP_NetAddress_Private(%struct.sockaddr* readonly, i32, %struct.PP_NetAddress_Private*) local_unnamed_addr #2 align 2 {
  %4 = icmp ne %struct.sockaddr* %0, null
  %5 = icmp ne i32 %1, 0
  %6 = and i1 %4, %5
  %7 = icmp ne %struct.PP_NetAddress_Private* %2, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %47

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 0
  store i32 28, i32* %10, align 4
  %11 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 28, i1 false) #8
  %12 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 0
  %13 = load i16, i16* %12, align 2
  switch i16 %13, label %47 [
    i16 2, label %14
    i16 10, label %27
  ]

14:                                               ; preds = %9
  store i8 1, i8* %11, align 4
  %15 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 1
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1
  %17 = bitcast [14 x i8]* %16 to i16*
  %18 = load i16, i16* %17, align 2
  %19 = tail call i16 @llvm.bswap.i16(i16 %18) #8
  %20 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 2
  %21 = bitcast i8* %20 to i16*
  store i16 %19, i16* %21, align 2
  %22 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 12
  %23 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 2
  %24 = bitcast i8* %23 to i32*
  %25 = bitcast i8* %22 to i32*
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  br label %47

27:                                               ; preds = %9
  store i8 1, i8* %11, align 4
  %28 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 1
  store i8 1, i8* %28, align 1
  %29 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1
  %30 = bitcast [14 x i8]* %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = tail call i16 @llvm.bswap.i16(i16 %31) #8
  %33 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 2
  %34 = bitcast i8* %33 to i16*
  store i16 %32, i16* %34, align 2
  %35 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 2
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 4
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 4
  %40 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 1, i32 1, i64 6
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 %42, i32* %44, align 4
  %45 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 12
  %46 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i64 0, i32 1, i64 6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 16, i1 false)
  br label %47

47:                                               ; preds = %9, %27, %14, %3
  %48 = phi i1 [ false, %3 ], [ false, %9 ], [ true, %27 ], [ true, %14 ]
  ret i1 %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi21NetAddressPrivateImpl22IPEndPointToNetAddressERKN3net14IPAddressBytesEtP21PP_NetAddress_Private(%"class.net::IPAddressBytes"* dereferenceable(17), i16 zeroext, %struct.PP_NetAddress_Private*) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %struct.PP_NetAddress_Private* %2, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 0
  store i32 28, i32* %6, align 4
  %7 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 28, i1 false) #8
  %8 = getelementptr inbounds %"class.net::IPAddressBytes", %"class.net::IPAddressBytes"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %30 [
    i8 4, label %10
    i8 16, label %20
  ]

10:                                               ; preds = %5
  store i8 1, i8* %7, align 4
  %11 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 1
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 2
  %13 = bitcast i8* %12 to i16*
  store i16 %1, i16* %13, align 2
  %14 = load i8, i8* %8, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %10
  %17 = zext i8 %14 to i64
  %18 = getelementptr inbounds %"class.net::IPAddressBytes", %"class.net::IPAddressBytes"* %0, i64 0, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 12
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %18, i64 %17, i1 false) #8
  br label %30

20:                                               ; preds = %5
  store i8 1, i8* %7, align 4
  %21 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 1
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 2
  %23 = bitcast i8* %22 to i16*
  store i16 %1, i16* %23, align 2
  %24 = load i8, i8* %8, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %20
  %27 = zext i8 %24 to i64
  %28 = getelementptr inbounds %"class.net::IPAddressBytes", %"class.net::IPAddressBytes"* %0, i64 0, i32 0, i32 0, i64 0
  %29 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 12
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %28, i64 %27, i1 false) #8
  br label %30

30:                                               ; preds = %26, %20, %16, %10, %5, %3
  %31 = phi i1 [ false, %3 ], [ false, %5 ], [ true, %10 ], [ true, %16 ], [ true, %20 ], [ true, %26 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi21NetAddressPrivateImpl22NetAddressToIPEndPointERK21PP_NetAddress_PrivatePN3net14IPAddressBytesEPt(%struct.PP_NetAddress_Private* dereferenceable(132), %"class.net::IPAddressBytes"*, i16*) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %"class.net::IPAddressBytes"* %1, null
  %5 = icmp eq i16* %2, null
  %6 = or i1 %4, %5
  %7 = icmp eq %struct.PP_NetAddress_Private* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %28, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 28
  br i1 %12, label %13, label %28

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %15 = icmp eq i8* %14, null
  %16 = load i8, i8* %14, align 4
  %17 = icmp eq i8 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %28, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 2
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  store i16 %22, i16* %2, align 2
  %23 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 1
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i64 4, i64 16
  %27 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 12
  tail call void @_ZN3net14IPAddressBytes6AssignEPKhm(%"class.net::IPAddressBytes"* nonnull %1, i8* %27, i64 %26) #8
  br label %28

28:                                               ; preds = %3, %9, %13, %19
  %29 = phi i1 [ false, %3 ], [ true, %19 ], [ false, %13 ], [ false, %9 ]
  ret i1 %29
}

declare void @_ZN3net14IPAddressBytes6AssignEPKhm(%"class.net::IPAddressBytes"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi21NetAddressPrivateImpl18DescribeNetAddressERK21PP_NetAddress_Privateb(%"class.std::__1::basic_string"* noalias sret, %struct.PP_NetAddress_Private* readonly dereferenceable(132), i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %struct.PP_NetAddress_Private* %1, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 28
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 0
  %11 = icmp eq i8* %10, null
  %12 = load i8, i8* %10, align 4
  %13 = icmp eq i8 %12, 0
  %14 = or i1 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %3, %5, %9
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #8
  br label %227

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 1
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %208, label %21

21:                                               ; preds = %17
  %22 = zext i1 %2 to i64
  %23 = zext i1 %2 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 -86, i64 24, i1 false) #8, !alias.scope !3
  store i8 %23, i8* %25, align 1, !alias.scope !3
  br i1 %2, label %27, label %28

27:                                               ; preds = %21
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 1 getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 %22, i1 false) #8
  br label %28

28:                                               ; preds = %27, %21
  %29 = getelementptr inbounds i8, i8* %26, i64 %22
  store i8 0, i8* %29, align 1, !alias.scope !3
  %30 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 12
  %31 = bitcast i8* %30 to i16*
  %32 = load i16, i16* %31, align 2, !noalias !3
  %33 = icmp eq i16 %32, 0
  %34 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 14
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 2
  br i1 %33, label %37, label %73

37:                                               ; preds = %28
  %38 = icmp eq i16 %36, 0
  br i1 %38, label %39, label %73

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 16
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 2, !noalias !3
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %73

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 18
  %46 = bitcast i8* %45 to i16*
  %47 = load i16, i16* %46, align 2, !noalias !3
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %49, label %73

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 20
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2, !noalias !3
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %73

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 22
  %56 = bitcast i8* %55 to i16*
  %57 = load i16, i16* %56, align 2, !noalias !3
  switch i16 %57, label %73 [
    i16 0, label %58
    i16 -1, label %58
  ]

58:                                               ; preds = %54, %54
  %59 = icmp eq i16 %57, 0
  %60 = select i1 %59, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)
  %61 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 24
  %62 = load i8, i8* %61, align 4, !noalias !3
  %63 = zext i8 %62 to i32
  %64 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 25
  %65 = load i8, i8* %64, align 1, !noalias !3
  %66 = zext i8 %65 to i32
  %67 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 26
  %68 = load i8, i8* %67, align 2, !noalias !3
  %69 = zext i8 %68 to i32
  %70 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 27
  %71 = load i8, i8* %70, align 1, !noalias !3
  %72 = zext i8 %71 to i32
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* %60, i32 %63, i32 %66, i32 %69, i32 %72) #8
  br label %105

73:                                               ; preds = %28, %54, %49, %44, %39, %37
  %74 = phi i16 [ 0, %54 ], [ 0, %49 ], [ 0, %44 ], [ 0, %39 ], [ %36, %37 ], [ %36, %28 ]
  %75 = phi i32 [ 1, %54 ], [ 1, %49 ], [ 1, %44 ], [ 1, %39 ], [ 1, %37 ], [ 0, %28 ]
  %76 = icmp eq i16 %74, 0
  %77 = xor i32 %75, 1
  %78 = add nuw nsw i32 %75, 1
  %79 = select i1 %76, i32 %77, i32 0
  %80 = select i1 %76, i32 %78, i32 %75
  %81 = select i1 %76, i32 %78, i32 0
  %82 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 16
  %83 = bitcast i8* %82 to i16*
  %84 = load i16, i16* %83, align 2, !noalias !3
  %85 = icmp eq i16 %84, 0
  br i1 %85, label %117, label %124

86:                                               ; preds = %204, %100
  %87 = phi i32 [ 0, %204 ], [ %103, %100 ]
  %88 = phi i1 [ false, %204 ], [ %101, %100 ]
  %89 = icmp eq i32 %87, %205
  %90 = and i1 %207, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  %92 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #8
  br label %100

93:                                               ; preds = %86
  %94 = sext i32 %87 to i64
  %95 = getelementptr inbounds i16, i16* %31, i64 %94
  %96 = load i16, i16* %95, align 2, !noalias !3
  %97 = tail call i16 @llvm.bswap.i16(i16 %96) #8
  %98 = select i1 %88, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)
  %99 = zext i16 %97 to i32
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* %98, i32 %99) #8
  br label %100

100:                                              ; preds = %93, %91
  %101 = phi i1 [ false, %91 ], [ true, %93 ]
  %102 = phi i32 [ %206, %91 ], [ 1, %93 ]
  %103 = add nsw i32 %102, %87
  %104 = icmp slt i32 %103, 8
  br i1 %104, label %86, label %105

105:                                              ; preds = %100, %58
  %106 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 8
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 4, !noalias !3
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %105
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i32 %108) #8
  br label %111

111:                                              ; preds = %110, %105
  br i1 %2, label %112, label %227

112:                                              ; preds = %111
  %113 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 2
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2, !noalias !3
  %116 = zext i16 %115 to i32
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i32 %116) #8
  br label %227

117:                                              ; preds = %73
  %118 = icmp eq i32 %81, 0
  %119 = select i1 %118, i32 2, i32 %79
  %120 = add nuw nsw i32 %81, 1
  %121 = icmp ult i32 %81, %80
  %122 = select i1 %121, i32 %79, i32 %119
  %123 = select i1 %121, i32 %80, i32 %120
  br label %124

124:                                              ; preds = %117, %73
  %125 = phi i32 [ %79, %73 ], [ %122, %117 ]
  %126 = phi i32 [ %80, %73 ], [ %123, %117 ]
  %127 = phi i32 [ %79, %73 ], [ %119, %117 ]
  %128 = phi i32 [ 0, %73 ], [ %120, %117 ]
  %129 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 18
  %130 = bitcast i8* %129 to i16*
  %131 = load i16, i16* %130, align 2, !noalias !3
  %132 = icmp eq i16 %131, 0
  br i1 %132, label %133, label %140

133:                                              ; preds = %124
  %134 = icmp eq i32 %128, 0
  %135 = select i1 %134, i32 3, i32 %127
  %136 = add nuw nsw i32 %128, 1
  %137 = icmp slt i32 %128, %126
  %138 = select i1 %137, i32 %125, i32 %135
  %139 = select i1 %137, i32 %126, i32 %136
  br label %140

140:                                              ; preds = %133, %124
  %141 = phi i32 [ %125, %124 ], [ %138, %133 ]
  %142 = phi i32 [ %126, %124 ], [ %139, %133 ]
  %143 = phi i32 [ %127, %124 ], [ %135, %133 ]
  %144 = phi i32 [ 0, %124 ], [ %136, %133 ]
  %145 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 20
  %146 = bitcast i8* %145 to i16*
  %147 = load i16, i16* %146, align 2, !noalias !3
  %148 = icmp eq i16 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %140
  %150 = icmp eq i32 %144, 0
  %151 = select i1 %150, i32 4, i32 %143
  %152 = add nuw nsw i32 %144, 1
  %153 = icmp slt i32 %144, %142
  %154 = select i1 %153, i32 %141, i32 %151
  %155 = select i1 %153, i32 %142, i32 %152
  br label %156

156:                                              ; preds = %149, %140
  %157 = phi i32 [ %141, %140 ], [ %154, %149 ]
  %158 = phi i32 [ %142, %140 ], [ %155, %149 ]
  %159 = phi i32 [ %143, %140 ], [ %151, %149 ]
  %160 = phi i32 [ 0, %140 ], [ %152, %149 ]
  %161 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 22
  %162 = bitcast i8* %161 to i16*
  %163 = load i16, i16* %162, align 2, !noalias !3
  %164 = icmp eq i16 %163, 0
  br i1 %164, label %165, label %172

165:                                              ; preds = %156
  %166 = icmp eq i32 %160, 0
  %167 = select i1 %166, i32 5, i32 %159
  %168 = add nuw nsw i32 %160, 1
  %169 = icmp slt i32 %160, %158
  %170 = select i1 %169, i32 %157, i32 %167
  %171 = select i1 %169, i32 %158, i32 %168
  br label %172

172:                                              ; preds = %165, %156
  %173 = phi i32 [ %157, %156 ], [ %170, %165 ]
  %174 = phi i32 [ %158, %156 ], [ %171, %165 ]
  %175 = phi i32 [ %159, %156 ], [ %167, %165 ]
  %176 = phi i32 [ 0, %156 ], [ %168, %165 ]
  %177 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 24
  %178 = bitcast i8* %177 to i16*
  %179 = load i16, i16* %178, align 2, !noalias !3
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %181, label %188

181:                                              ; preds = %172
  %182 = icmp eq i32 %176, 0
  %183 = select i1 %182, i32 6, i32 %175
  %184 = add nuw nsw i32 %176, 1
  %185 = icmp slt i32 %176, %174
  %186 = select i1 %185, i32 %173, i32 %183
  %187 = select i1 %185, i32 %174, i32 %184
  br label %188

188:                                              ; preds = %181, %172
  %189 = phi i32 [ %173, %172 ], [ %186, %181 ]
  %190 = phi i32 [ %174, %172 ], [ %187, %181 ]
  %191 = phi i32 [ %175, %172 ], [ %183, %181 ]
  %192 = phi i32 [ 0, %172 ], [ %184, %181 ]
  %193 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 26
  %194 = bitcast i8* %193 to i16*
  %195 = load i16, i16* %194, align 2, !noalias !3
  %196 = icmp eq i16 %195, 0
  br i1 %196, label %197, label %204

197:                                              ; preds = %188
  %198 = icmp eq i32 %192, 0
  %199 = select i1 %198, i32 7, i32 %191
  %200 = add nuw nsw i32 %192, 1
  %201 = icmp slt i32 %192, %190
  %202 = select i1 %201, i32 %189, i32 %199
  %203 = select i1 %201, i32 %190, i32 %200
  br label %204

204:                                              ; preds = %197, %188
  %205 = phi i32 [ %189, %188 ], [ %202, %197 ]
  %206 = phi i32 [ %190, %188 ], [ %203, %197 ]
  %207 = icmp sgt i32 %206, 1
  br label %86

208:                                              ; preds = %17
  %209 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 12
  %210 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 -86, i64 24, i1 false) #8, !alias.scope !6
  %211 = load i8, i8* %209, align 4, !noalias !6
  %212 = zext i8 %211 to i32
  %213 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 13
  %214 = load i8, i8* %213, align 1, !noalias !6
  %215 = zext i8 %214 to i32
  %216 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 14
  %217 = load i8, i8* %216, align 2, !noalias !6
  %218 = zext i8 %217 to i32
  %219 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 15
  %220 = load i8, i8* %219, align 1, !noalias !6
  %221 = zext i8 %220 to i32
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i32 %212, i32 %215, i32 %218, i32 %221) #8
  br i1 %2, label %222, label %227

222:                                              ; preds = %208
  %223 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 2
  %224 = bitcast i8* %223 to i16*
  %225 = load i16, i16* %224, align 2, !noalias !6
  %226 = zext i16 %225 to i32
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i32 %226) #8
  br label %227

227:                                              ; preds = %222, %208, %112, %111, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi21NetAddressPrivateImpl13GetAnyAddressE7PP_BoolP21PP_NetAddress_Private(i32, %struct.PP_NetAddress_Private*) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %struct.PP_NetAddress_Private* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 0
  store i32 28, i32* %5, align 4
  %6 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 28, i1 false) #8
  store i8 1, i8* %6, align 4
  %7 = icmp eq i32 %0, 1
  %8 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 1
  %9 = zext i1 %7 to i8
  store i8 %9, i8* %8, align 1
  br label %10

10:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5ppapi12_GLOBAL__N_113GetAnyAddressE7PP_BoolP21PP_NetAddress_Private(i32, %struct.PP_NetAddress_Private*) #2 {
  %3 = icmp eq %struct.PP_NetAddress_Private* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 0
  store i32 28, i32* %5, align 4
  %6 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 28, i1 false) #8
  store i8 1, i8* %6, align 4
  %7 = icmp eq i32 %0, 1
  %8 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 1
  %9 = zext i1 %7 to i8
  store i8 %9, i8* %8, align 1
  br label %10

10:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi21NetAddressPrivateImpl38CreateNetAddressPrivateFromIPv4AddressERK18PP_NetAddress_IPv4P21PP_NetAddress_Private(%struct.PP_NetAddress_IPv4* nocapture readonly dereferenceable(6), %struct.PP_NetAddress_Private*) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %struct.PP_NetAddress_Private* %1, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.PP_NetAddress_IPv4, %struct.PP_NetAddress_IPv4* %0, i64 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = tail call i16 @llvm.bswap.i16(i16 %6) #8
  %8 = getelementptr inbounds %struct.PP_NetAddress_IPv4, %struct.PP_NetAddress_IPv4* %0, i64 0, i32 1, i64 0
  %9 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 0
  store i32 28, i32* %9, align 4
  %10 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 0
  %11 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %10, align 4
  %12 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 1
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 2
  %14 = bitcast i8* %13 to i16*
  store i16 %7, i16* %14, align 2
  %15 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 12
  %16 = bitcast i8* %8 to i32*
  %17 = bitcast i8* %15 to i32*
  %18 = load i32, i32* %16, align 1
  store i32 %18, i32* %17, align 4
  br label %19

19:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5ppapi12_GLOBAL__N_121CreateFromIPv4AddressEPKhtP21PP_NetAddress_Private(i8* nocapture readonly, i16 zeroext, %struct.PP_NetAddress_Private*) #2 {
  %4 = icmp eq %struct.PP_NetAddress_Private* %2, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 0
  store i32 28, i32* %6, align 4
  %7 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 0
  %8 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %7, align 4
  %9 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 1
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 2
  %11 = bitcast i8* %10 to i16*
  store i16 %1, i16* %11, align 2
  %12 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 12
  %13 = bitcast i8* %0 to i32*
  %14 = bitcast i8* %12 to i32*
  %15 = load i32, i32* %13, align 1
  store i32 %15, i32* %14, align 4
  br label %16

16:                                               ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi21NetAddressPrivateImpl38CreateNetAddressPrivateFromIPv6AddressERK18PP_NetAddress_IPv6P21PP_NetAddress_Private(%struct.PP_NetAddress_IPv6* nocapture readonly dereferenceable(18), %struct.PP_NetAddress_Private*) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %struct.PP_NetAddress_Private* %1, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.PP_NetAddress_IPv6, %struct.PP_NetAddress_IPv6* %0, i64 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = tail call i16 @llvm.bswap.i16(i16 %6) #8
  %8 = getelementptr inbounds %struct.PP_NetAddress_IPv6, %struct.PP_NetAddress_IPv6* %0, i64 0, i32 1, i64 0
  %9 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 0
  store i32 28, i32* %9, align 4
  %10 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 0
  %11 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %10, align 4
  %12 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 1
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 2
  %14 = bitcast i8* %13 to i16*
  store i16 %7, i16* %14, align 2
  %15 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 8
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 1 %8, i64 16, i1 false) #8
  br label %18

18:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5ppapi12_GLOBAL__N_121CreateFromIPv6AddressEPKhjtP21PP_NetAddress_Private(i8* nocapture readonly, i32, i16 zeroext, %struct.PP_NetAddress_Private*) #2 {
  %5 = icmp eq %struct.PP_NetAddress_Private* %3, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %3, i64 0, i32 0
  store i32 28, i32* %7, align 4
  %8 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %3, i64 0, i32 1, i64 0
  %9 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %3, i64 0, i32 1, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %8, align 4
  %10 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %3, i64 0, i32 1, i64 1
  store i8 1, i8* %10, align 1
  %11 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %3, i64 0, i32 1, i64 2
  %12 = bitcast i8* %11 to i16*
  store i16 %2, i16* %12, align 2
  %13 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %3, i64 0, i32 1, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %1, i32* %14, align 4
  %15 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %3, i64 0, i32 1, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 1 %0, i64 16, i1 false)
  br label %16

16:                                               ; preds = %4, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5ppapi21NetAddressPrivateImpl30GetFamilyFromNetAddressPrivateERK21PP_NetAddress_Private(%struct.PP_NetAddress_Private* readonly dereferenceable(132)) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %struct.PP_NetAddress_Private* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 28
  br i1 %6, label %7, label %18

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %9 = icmp eq i8* %8, null
  %10 = load i8, i8* %8, align 4
  %11 = icmp eq i8 %10, 0
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 1
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i32 1, i32 2
  br label %18

18:                                               ; preds = %1, %3, %7, %13
  %19 = phi i32 [ %17, %13 ], [ 0, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i32 %19
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi21NetAddressPrivateImpl38DescribeNetAddressPrivateAsIPv4AddressERK21PP_NetAddress_PrivateP18PP_NetAddress_IPv4(%struct.PP_NetAddress_Private* readonly dereferenceable(132), %struct.PP_NetAddress_IPv4*) local_unnamed_addr #5 align 2 {
  %3 = icmp eq %struct.PP_NetAddress_IPv4* %1, null
  %4 = icmp eq %struct.PP_NetAddress_Private* %0, null
  %5 = or i1 %4, %3
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 28
  br i1 %9, label %10, label %31

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %12 = icmp eq i8* %11, null
  %13 = load i8, i8* %11, align 4
  %14 = icmp eq i8 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %31, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 1
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %31

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 2
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #8
  %25 = getelementptr inbounds %struct.PP_NetAddress_IPv4, %struct.PP_NetAddress_IPv4* %1, i64 0, i32 0
  store i16 %24, i16* %25, align 2
  %26 = getelementptr inbounds %struct.PP_NetAddress_IPv4, %struct.PP_NetAddress_IPv4* %1, i64 0, i32 1, i64 0
  %27 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = bitcast i8* %26 to i32*
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %29, align 2
  br label %31

31:                                               ; preds = %6, %10, %20, %16, %2
  %32 = phi i1 [ false, %2 ], [ true, %20 ], [ false, %16 ], [ false, %10 ], [ false, %6 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi21NetAddressPrivateImpl38DescribeNetAddressPrivateAsIPv6AddressERK21PP_NetAddress_PrivateP18PP_NetAddress_IPv6(%struct.PP_NetAddress_Private* readonly dereferenceable(132), %struct.PP_NetAddress_IPv6*) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %struct.PP_NetAddress_IPv6* %1, null
  %4 = icmp eq %struct.PP_NetAddress_Private* %0, null
  %5 = or i1 %4, %3
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 28
  br i1 %9, label %10, label %28

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %12 = icmp eq i8* %11, null
  %13 = load i8, i8* %11, align 4
  %14 = icmp eq i8 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %28, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 1
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 2
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = tail call i16 @llvm.bswap.i16(i16 %23) #8
  %25 = getelementptr inbounds %struct.PP_NetAddress_IPv6, %struct.PP_NetAddress_IPv6* %1, i64 0, i32 0
  store i16 %24, i16* %25, align 2
  %26 = getelementptr inbounds %struct.PP_NetAddress_IPv6, %struct.PP_NetAddress_IPv6* %1, i64 0, i32 1, i64 0
  %27 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %26, i8* align 4 %27, i64 16, i1 false)
  br label %28

28:                                               ; preds = %6, %10, %20, %16, %2
  %29 = phi i1 [ false, %2 ], [ true, %20 ], [ false, %16 ], [ false, %10 ], [ false, %6 ]
  ret i1 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN5ppapi12_GLOBAL__N_18AreEqualEPK21PP_NetAddress_PrivateS3_(%struct.PP_NetAddress_Private* readonly, %struct.PP_NetAddress_Private* readonly) #1 {
  %3 = icmp eq %struct.PP_NetAddress_Private* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 28
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %10 = bitcast i8* %9 to %"struct.ppapi::(anonymous namespace)::NetAddress"*
  br label %11

11:                                               ; preds = %8, %4, %2
  %12 = phi %"struct.ppapi::(anonymous namespace)::NetAddress"* [ %10, %8 ], [ null, %4 ], [ null, %2 ]
  %13 = icmp eq %struct.PP_NetAddress_Private* %1, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 28
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 0
  %20 = bitcast i8* %19 to %"struct.ppapi::(anonymous namespace)::NetAddress"*
  br label %21

21:                                               ; preds = %18, %14, %11
  %22 = phi %"struct.ppapi::(anonymous namespace)::NetAddress"* [ %20, %18 ], [ null, %14 ], [ null, %11 ]
  %23 = icmp eq %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, null
  br i1 %23, label %90, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = icmp eq %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, null
  %29 = or i1 %28, %27
  br i1 %29, label %90, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 0
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %90, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 1
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 1
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %36, %38
  br i1 %39, label %40, label %90

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %90

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 4
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %52, label %90

52:                                               ; preds = %46
  %53 = icmp eq i8 %36, 0
  %54 = select i1 %53, i64 4, i64 16
  br label %57

55:                                               ; preds = %57
  %56 = icmp ult i64 %64, %54
  br i1 %56, label %57, label %65

57:                                               ; preds = %55, %52
  %58 = phi i64 [ 0, %52 ], [ %64, %55 ]
  %59 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 5, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 5, i64 %58
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %60, %62
  %64 = add nuw nsw i64 %58, 1
  br i1 %63, label %55, label %90

65:                                               ; preds = %55
  br i1 %3, label %73, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 28
  br i1 %69, label %70, label %73

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %72 = bitcast i8* %71 to %"struct.ppapi::(anonymous namespace)::NetAddress"*
  br label %73

73:                                               ; preds = %65, %66, %70
  %74 = phi %"struct.ppapi::(anonymous namespace)::NetAddress"* [ %72, %70 ], [ null, %66 ], [ null, %65 ]
  br i1 %13, label %82, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 28
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 0
  %81 = bitcast i8* %80 to %"struct.ppapi::(anonymous namespace)::NetAddress"*
  br label %82

82:                                               ; preds = %73, %75, %79
  %83 = phi %"struct.ppapi::(anonymous namespace)::NetAddress"* [ %81, %79 ], [ null, %75 ], [ null, %73 ]
  %84 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %74, i64 0, i32 2
  %85 = load i16, i16* %84, align 2
  %86 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %83, i64 0, i32 2
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %85, %87
  %89 = zext i1 %88 to i32
  br label %90

90:                                               ; preds = %57, %21, %34, %40, %46, %24, %30, %82
  %91 = phi i32 [ %89, %82 ], [ 0, %30 ], [ 0, %24 ], [ 0, %46 ], [ 0, %40 ], [ 0, %34 ], [ 0, %21 ], [ 0, %57 ]
  ret i32 %91
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN5ppapi12_GLOBAL__N_113AreHostsEqualEPK21PP_NetAddress_PrivateS3_(%struct.PP_NetAddress_Private* readonly, %struct.PP_NetAddress_Private* readonly) #1 {
  %3 = icmp eq %struct.PP_NetAddress_Private* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 28
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %10 = bitcast i8* %9 to %"struct.ppapi::(anonymous namespace)::NetAddress"*
  br label %11

11:                                               ; preds = %2, %4, %8
  %12 = phi %"struct.ppapi::(anonymous namespace)::NetAddress"* [ %10, %8 ], [ null, %4 ], [ null, %2 ]
  %13 = icmp eq %struct.PP_NetAddress_Private* %1, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 28
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %1, i64 0, i32 1, i64 0
  %20 = bitcast i8* %19 to %"struct.ppapi::(anonymous namespace)::NetAddress"*
  br label %21

21:                                               ; preds = %11, %14, %18
  %22 = phi %"struct.ppapi::(anonymous namespace)::NetAddress"* [ %20, %18 ], [ null, %14 ], [ null, %11 ]
  %23 = icmp eq %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, null
  br i1 %23, label %65, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = icmp eq %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, null
  %29 = or i1 %28, %27
  br i1 %29, label %65, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 0
  %32 = load i8, i8* %31, align 4, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %65, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 1
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 1
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %36, %38
  br i1 %39, label %40, label %65

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %65

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 4
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %52, label %65

52:                                               ; preds = %46
  %53 = icmp eq i8 %36, 0
  %54 = select i1 %53, i64 4, i64 16
  br label %57

55:                                               ; preds = %57
  %56 = icmp ult i64 %64, %54
  br i1 %56, label %57, label %65

57:                                               ; preds = %52, %55
  %58 = phi i64 [ 0, %52 ], [ %64, %55 ]
  %59 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %12, i64 0, i32 5, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = getelementptr inbounds %"struct.ppapi::(anonymous namespace)::NetAddress", %"struct.ppapi::(anonymous namespace)::NetAddress"* %22, i64 0, i32 5, i64 %58
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %60, %62
  %64 = add nuw nsw i64 %58, 1
  br i1 %63, label %55, label %65

65:                                               ; preds = %57, %55, %30, %24, %21, %34, %40, %46
  %66 = phi i32 [ 0, %30 ], [ 0, %24 ], [ 0, %46 ], [ 0, %40 ], [ 0, %34 ], [ 0, %21 ], [ 1, %55 ], [ 0, %57 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZN5ppapi12_GLOBAL__N_18DescribeEiPK21PP_NetAddress_Private7PP_Bool(i32, %struct.PP_NetAddress_Private* readonly, i32) #2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = icmp ne i32 %2, 0
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN5ppapi21NetAddressPrivateImpl18DescribeNetAddressERK21PP_NetAddress_Privateb(%"class.std::__1::basic_string"* nonnull sret %4, %struct.PP_NetAddress_Private* dereferenceable(132) %1, i1 zeroext %8)
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = load i64, i64* %7, align 8
  %15 = zext i8 %12 to i64
  %16 = select i1 %13, i64 %14, i64 %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %3
  call void @_ZN5ppapi9ProxyLock7AcquireEv() #8
  %19 = call { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #8
  %20 = extractvalue { i64, i64 } %19, 0
  %21 = extractvalue { i64, i64 } %19, 1
  call void @_ZN5ppapi9ProxyLock7ReleaseEv() #8
  %22 = load i8, i8* %11, align 1
  br label %23

23:                                               ; preds = %3, %18
  %24 = phi i8 [ %22, %18 ], [ %12, %3 ]
  %25 = phi i64 [ %20, %18 ], [ 0, %3 ]
  %26 = phi i64 [ %21, %18 ], [ -6148914694099828736, %3 ]
  %27 = icmp slt i8 %24, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  %31 = insertvalue { i64, i64 } undef, i64 %25, 0
  %32 = insertvalue { i64, i64 } %31, i64 %26, 1
  ret { i64, i64 } %32
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5ppapi12_GLOBAL__N_111ReplacePortEPK21PP_NetAddress_PrivatetPS1_(%struct.PP_NetAddress_Private* readonly, i16 zeroext, %struct.PP_NetAddress_Private*) #2 {
  %4 = icmp eq %struct.PP_NetAddress_Private* %0, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 28
  br i1 %8, label %9, label %22

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %11 = icmp eq i8* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %9
  %13 = load i8, i8* %10, align 4, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = icmp ne %struct.PP_NetAddress_Private* %2, null
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 0
  store i32 28, i32* %18, align 4
  %19 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* nonnull align 4 %10, i64 28, i1 false)
  %20 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %2, i64 0, i32 1, i64 2
  %21 = bitcast i8* %20 to i16*
  store i16 %1, i16* %21, align 2
  br label %22

22:                                               ; preds = %3, %5, %9, %12, %17
  %23 = phi i32 [ 1, %17 ], [ 0, %12 ], [ 0, %9 ], [ 0, %5 ], [ 0, %3 ]
  ret i32 %23
}

declare { i64, i64 } @_ZN5ppapi9StringVar13StringToPPVarERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN5ppapi9ProxyLock7AcquireEv() local_unnamed_addr #4

declare void @_ZN5ppapi9ProxyLock7ReleaseEv() local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN5ppapi12_GLOBAL__N_19GetFamilyEPK21PP_NetAddress_Private(%struct.PP_NetAddress_Private* readonly) #1 {
  %2 = icmp eq %struct.PP_NetAddress_Private* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 28
  br i1 %6, label %7, label %18

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7
  %11 = load i8, i8* %8, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 1
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i32 1, i32 2
  br label %18

18:                                               ; preds = %10, %1, %3, %7, %13
  %19 = phi i32 [ %17, %13 ], [ 0, %10 ], [ 0, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i32 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i16 @_ZN5ppapi12_GLOBAL__N_17GetPortEPK21PP_NetAddress_Private(%struct.PP_NetAddress_Private* readonly) #1 {
  %2 = icmp eq %struct.PP_NetAddress_Private* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 28
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %9 = icmp eq i8* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %7
  %11 = load i8, i8* %8, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 2
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 2
  br label %17

17:                                               ; preds = %10, %1, %3, %7, %13
  %18 = phi i16 [ %16, %13 ], [ 0, %10 ], [ 0, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i16 %18
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5ppapi12_GLOBAL__N_110GetAddressEPK21PP_NetAddress_PrivatePvt(%struct.PP_NetAddress_Private* readonly, i8* nocapture, i16 zeroext) #2 {
  %4 = icmp eq %struct.PP_NetAddress_Private* %0, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 28
  br i1 %8, label %9, label %24

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %11 = icmp eq i8* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %9
  %13 = load i8, i8* %10, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 1
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i64 4, i64 16
  %20 = zext i16 %2 to i64
  %21 = icmp ugt i64 %19, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 4 %23, i64 %19, i1 false)
  br label %24

24:                                               ; preds = %12, %3, %5, %9, %22, %15
  %25 = phi i32 [ 0, %12 ], [ 1, %22 ], [ 0, %15 ], [ 0, %9 ], [ 0, %5 ], [ 0, %3 ]
  ret i32 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN5ppapi12_GLOBAL__N_110GetScopeIDEPK21PP_NetAddress_Private(%struct.PP_NetAddress_Private* readonly) #1 {
  %2 = icmp eq %struct.PP_NetAddress_Private* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 28
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 0
  %9 = icmp eq i8* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %7
  %11 = load i8, i8* %8, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.PP_NetAddress_Private, %struct.PP_NetAddress_Private* %0, i64 0, i32 1, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %10, %1, %3, %7, %13
  %18 = phi i32 [ %16, %13 ], [ 0, %10 ], [ 0, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i32 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5ppapi12_GLOBAL__N_126ConvertIPv6AddressToStringEPKNS0_10NetAddressEb: argument 0"}
!5 = distinct !{!5, !"_ZN5ppapi12_GLOBAL__N_126ConvertIPv6AddressToStringEPKNS0_10NetAddressEb"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5ppapi12_GLOBAL__N_126ConvertIPv4AddressToStringEPKNS0_10NetAddressEb: argument 0"}
!8 = distinct !{!8, !"_ZN5ppapi12_GLOBAL__N_126ConvertIPv4AddressToStringEPKNS0_10NetAddressEb"}
