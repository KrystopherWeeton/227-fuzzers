; ModuleID = '../../chrome/utility/importer/bookmark_html_reader.cc'
source_filename = "../../chrome/utility/importer/bookmark_html_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.55" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry*, %"class.std::__1::__compressed_pair.20" }
%struct.ImportedBookmarkEntry = type { i8, i8, %class.GURL, %"class.std::__1::vector.4", %"class.std::__1::basic_string.6", %"class.base::Time" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::basic_string.6"* }
%"class.std::__1::basic_string.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %struct.ImportedBookmarkEntry* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"*, %"class.std::__1::__compressed_pair.27" }
%"struct.importer::SearchEngineInfo" = type { %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.importer::SearchEngineInfo"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"*, %"class.std::__1::__compressed_pair.49" }
%"struct.favicon_base::FaviconUsageData" = type { %class.GURL, %"class.std::__1::vector.34", %"class.std::__1::set" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { i8*, i8*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i8* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i64 }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.favicon_base::FaviconUsageData"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.10 }
%struct.anon.10 = type { %"struct.std::__1::__padding.11", i8 }
%"struct.std::__1::__padding.11" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%struct.TemplateURLData = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %class.GURL, i8, %"class.std::__1::vector.56", i64, %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.56", %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6", %"class.std::__1::basic_string" }
%class.TemplateURL = type { %struct.TemplateURLData, %"class.std::__1::vector.63", %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %"class.std::__1::unique_ptr.84", i32, i32 }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %class.TemplateURLRef*, %class.TemplateURLRef*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %class.TemplateURLRef* }
%class.TemplateURLRef = type <{ %class.TemplateURL*, i32, [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::vector.65", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.72", i8, [7 x i8] }>
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %"struct.TemplateURLRef::Replacement"*, %"struct.TemplateURLRef::Replacement"*, %"class.std::__1::__compressed_pair.67" }
%"struct.TemplateURLRef::Replacement" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.TemplateURLRef::Replacement"* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.TemplateURLRef::PostParam"*, %"struct.TemplateURLRef::PostParam"*, %"class.std::__1::__compressed_pair.74" }
%"struct.TemplateURLRef::PostParam" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.TemplateURLRef::PostParam"* }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.TemplateURL::AssociatedExtensionInfo"* }
%"struct.TemplateURL::AssociatedExtensionInfo" = type <{ %"class.std::__1::basic_string", %"class.base::Time", i8, [7 x i8] }>
%class.SearchTermsData = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %class.GURL }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignINS_11__wrap_iterIPS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueEvE4typeESE_SE_ = comdat any

$_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE25__emplace_unique_key_argsIS1_JRKS1_EEENS_4pairINS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN12favicon_base16FaviconUsageDataENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN8importer16SearchEngineInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN8importer16SearchEngineInfoC2ERKS0_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZZN20bookmark_html_reader19ImportBookmarksFileEN4base17RepeatingCallbackIFbvEEENS1_IFbRK4GURLEEERKNS0_8FilePathEPNSt3__16vectorI21ImportedBookmarkEntryNSC_9allocatorISE_EEEEPNSD_IN8importer16SearchEngineInfoENSF_ISK_EEEEPNSD_IN12favicon_base16FaviconUsageDataENSF_ISP_EEEEE6kHrTag = internal constant [5 x i8] c"<HR>\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"<DL>\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"</DL>\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"%25s\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"<META\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"CONTENT=\22\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"content=\22\00", align 1
@_ZZN20bookmark_html_reader8internal20ParseCharsetFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_E8kCharset = internal constant [9 x i8] c"charset=\00", align 1
@_ZZN20bookmark_html_reader8internal23ParseFolderNameFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEPbPN4base4TimeEE11kFolderOpen = internal constant [4 x i8] c"<H3\00", align 1
@_ZZN20bookmark_html_reader8internal23ParseFolderNameFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEPbPN4base4TimeEE12kFolderClose = internal constant [6 x i8] c"</H3>\00", align 1
@_ZZN20bookmark_html_reader8internal23ParseFolderNameFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEPbPN4base4TimeEE23kToolbarFolderAttribute = internal unnamed_addr constant [24 x i8] c"PERSONAL_TOOLBAR_FOLDER\00", align 16
@.str.10 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E9kItemOpen = internal constant [3 x i8] c"<A\00", align 1
@_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E10kItemClose = internal constant [5 x i8] c"</A>\00", align 1
@_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E17kFeedURLAttribute = internal unnamed_addr constant [8 x i8] c"FEEDURL\00", align 1
@_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E21kShortcutURLAttribute = internal unnamed_addr constant [12 x i8] c"SHORTCUTURL\00", align 1
@_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E18kPostDataAttribute = internal unnamed_addr constant [10 x i8] c"POST_DATA\00", align 1
@_ZZN20bookmark_html_reader8internal28ParseMinimumBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLE9kItemOpen = internal constant [3 x i8] c"<A\00", align 1
@_ZZN20bookmark_html_reader8internal28ParseMinimumBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLE10kItemClose = internal constant [3 x i8] c"</\00", align 1
@_ZN3url11kDataSchemeE = external constant [0 x i8], align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"made-up-favicon:\00", align 1
@_ZZN20bookmark_html_readerL7stripDtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE6kDtTag = internal constant [5 x i8] c"<DT>\00", align 1
@_ZZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_E6kQuote = internal constant [2 x i8] c"\22\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"=\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20bookmark_html_reader19ImportBookmarksFileEN4base17RepeatingCallbackIFbvEEENS1_IFbRK4GURLEEERKNS0_8FilePathEPNSt3__16vectorI21ImportedBookmarkEntryNSC_9allocatorISE_EEEEPNSD_IN8importer16SearchEngineInfoENSF_ISK_EEEEPNSD_IN12favicon_base16FaviconUsageDataENSF_ISP_EEEE(%"class.base::RepeatingCallback"* nocapture readonly, %"class.base::RepeatingCallback.55"* nocapture readonly, %"class.base::FilePath"* dereferenceable(24), %"class.std::__1::vector"*, %"class.std::__1::vector.25"*, %"class.std::__1::vector.32"*) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"struct.favicon_base::FaviconUsageData", align 8
  %11 = alloca %class.GURL, align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::vector.56", align 8
  %16 = alloca %"class.std::__1::basic_string.6", align 8
  %17 = alloca i8, align 1
  %18 = alloca %"class.base::Time", align 8
  %19 = alloca %"class.std::__1::vector.4", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string.6", align 8
  %23 = alloca %"class.std::__1::basic_string.6", align 8
  %24 = alloca %class.GURL, align 8
  %25 = alloca %class.GURL, align 8
  %26 = alloca %"class.base::Time", align 8
  %27 = alloca %"class.std::__1::basic_string.6", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"struct.importer::SearchEngineInfo", align 8
  %30 = alloca %"class.std::__1::basic_string.6", align 8
  %31 = alloca %struct.ImportedBookmarkEntry, align 8
  %32 = alloca %"class.std::__1::basic_string.6", align 8
  %33 = alloca %struct.ImportedBookmarkEntry, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #12
  %37 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull %14) #12
  %38 = bitcast %"class.std::__1::vector.56"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %15, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %15, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = bitcast %"class.std::__1::vector.56"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  %44 = load i8, i8* %42, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i8*, i8** %35, align 8
  %47 = select i1 %45, i8* %46, i8* %34
  %48 = load i64, i64* %36, align 8
  %49 = zext i8 %44 to i64
  %50 = select i1 %45, i64 %48, i64 %49
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.56"* nonnull sret %15, i8* %47, i64 %50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #12
  %51 = bitcast %"class.std::__1::basic_string.6"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  %52 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  store i8 0, i8* %17, align 1
  %54 = bitcast %"class.base::Time"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %18, i64 0, i32 0, i32 0
  store i64 0, i64* %55, align 8
  %56 = bitcast %"class.std::__1::vector.4"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  %57 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %19, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %19, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 24, i1 false) #12
  %60 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false)
  store i8 5, i8* %63, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #12
  %65 = getelementptr inbounds i8, i8* %60, i64 5
  store i8 0, i8* %65, align 1
  %66 = bitcast %"class.std::__1::basic_string"** %40 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.56"* %15 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %67, %69
  br i1 %70, label %1151, label %71

71:                                               ; preds = %6
  %72 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = bitcast %"class.std::__1::basic_string.6"* %22 to i8*
  %79 = bitcast %"class.std::__1::basic_string.6"* %23 to i8*
  %80 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast %class.GURL* %24 to i8*
  %82 = bitcast %class.GURL* %25 to i8*
  %83 = bitcast %"class.base::Time"* %26 to i8*
  %84 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %26, i64 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::basic_string.6"* %27 to i8*
  %86 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::basic_string.6"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  %92 = bitcast %"class.std::__1::basic_string.6"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = bitcast %"struct.importer::SearchEngineInfo"* %29 to i8*
  %95 = bitcast %"class.std::__1::basic_string.6"* %30 to i8*
  %96 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = bitcast %"struct.importer::SearchEngineInfo"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = bitcast %"struct.importer::SearchEngineInfo"* %29 to i8**
  %101 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %29, i64 0, i32 1
  %102 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %29, i64 0, i32 2
  %103 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %4, i64 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"struct.importer::SearchEngineInfo"** %103 to i64*
  %106 = bitcast %"class.std::__1::basic_string.6"* %102 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = bitcast %"class.std::__1::basic_string.6"* %102 to i8**
  %109 = bitcast %"class.std::__1::basic_string.6"* %101 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = bitcast %"class.std::__1::basic_string.6"* %101 to i8**
  %112 = getelementptr inbounds %"class.base::RepeatingCallback.55", %"class.base::RepeatingCallback.55"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::basic_string.6"* %32 to i8*
  %114 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %116 = bitcast %"class.std::__1::basic_string.6"* %32 to i8**
  %117 = bitcast %"class.std::__1::basic_string.6"* %32 to i16*
  %118 = bitcast %"class.std::__1::basic_string.6"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %118, i64 0, i32 1, i32 1
  %120 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %33, i64 0, i32 0
  %121 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %33, i64 0, i32 1
  %122 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %33, i64 0, i32 5, i32 0, i32 0
  %123 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %33, i64 0, i32 4
  %124 = bitcast %"class.std::__1::basic_string.6"** %58 to i64*
  %125 = bitcast %"class.std::__1::vector.4"* %19 to i64*
  %126 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %33, i64 0, i32 3
  %127 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %129 = bitcast %struct.ImportedBookmarkEntry** %127 to i64*
  %130 = bitcast %"class.std::__1::basic_string.6"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %130, i64 0, i32 1, i32 1
  %132 = bitcast %"class.std::__1::basic_string.6"* %16 to i16*
  %133 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %31, i64 0, i32 0
  %134 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %31, i64 0, i32 5, i32 0, i32 0
  %135 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %31, i64 0, i32 2
  %136 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %31, i64 0, i32 4
  %137 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %31, i64 0, i32 3
  %138 = icmp eq %"class.std::__1::vector.32"* %5, null
  %139 = getelementptr inbounds %class.GURL, %class.GURL* %24, i64 0, i32 1
  %140 = getelementptr inbounds %class.GURL, %class.GURL* %25, i64 0, i32 1
  %141 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = bitcast %"struct.favicon_base::FaviconUsageData"* %10 to i8*
  %151 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %10, i64 0, i32 1
  %152 = bitcast %class.GURL* %11 to i8*
  %153 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %154 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %155 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %158 = bitcast i64* %157 to i8*
  %159 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %163 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %10, i64 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %10, i64 0, i32 2, i32 0
  %166 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %5, i64 0, i32 0, i32 1
  %167 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %168 = bitcast %"struct.favicon_base::FaviconUsageData"** %166 to i64*
  %169 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = bitcast %"class.std::__1::basic_string.6"* %27 to i8**
  %174 = bitcast %"class.std::__1::basic_string.6"* %23 to i8**
  %175 = bitcast %"class.std::__1::basic_string.6"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %175, i64 0, i32 1, i32 1
  %177 = bitcast %"class.std::__1::basic_string.6"* %22 to i8**
  %178 = bitcast %"class.std::__1::basic_string.6"* %32 to i8*
  br label %179

179:                                              ; preds = %71, %1139
  %180 = phi i8 [ 1, %71 ], [ %1133, %1139 ]
  %181 = phi i8 [ 0, %71 ], [ %1132, %1139 ]
  %182 = phi i8 [ 0, %71 ], [ %1131, %1139 ]
  %183 = phi i64 [ 0, %71 ], [ %1130, %1139 ]
  %184 = phi i64 [ 0, %71 ], [ %1140, %1139 ]
  %185 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %72, align 8
  %186 = icmp eq %"class.base::internal::BindStateBase"* %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %185, i64 0, i32 1
  %189 = bitcast void ()** %188 to i1 (%"class.base::internal::BindStateBase"*)**
  %190 = load i1 (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*)** %189, align 8
  %191 = call zeroext i1 %190(%"class.base::internal::BindStateBase"* nonnull %185) #12
  br i1 %191, label %1146, label %192

192:                                              ; preds = %187, %179
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 24, i1 false) #12
  %193 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %194 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 %184
  %195 = bitcast %"class.std::__1::basic_string"* %194 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %195, i64 0, i32 1, i32 0
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = bitcast %"class.std::__1::basic_string"* %194 to i8*
  %202 = select i1 %198, i8* %200, i8* %201
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 %184, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = zext i8 %197 to i64
  %206 = select i1 %198, i64 %204, i64 %205
  %207 = call zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %202, i64 %206, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, %"class.std::__1::basic_string"* nonnull %21) #12
  %208 = load i8, i8* %77, align 1
  %209 = icmp slt i8 %208, 0
  %210 = load i8*, i8** %74, align 8
  %211 = select i1 %209, i8* %210, i8* %73
  %212 = load i64, i64* %75, align 8
  %213 = zext i8 %208 to i64
  %214 = select i1 %209, i64 %212, i64 %213
  %215 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %211, i64 %214, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN20bookmark_html_reader19ImportBookmarksFileEN4base17RepeatingCallbackIFbvEEENS1_IFbRK4GURLEEERKNS0_8FilePathEPNSt3__16vectorI21ImportedBookmarkEntryNSC_9allocatorISE_EEEEPNSD_IN8importer16SearchEngineInfoENSF_ISK_EEEEPNSD_IN12favicon_base16FaviconUsageDataENSF_ISP_EEEEE6kHrTag, i64 0, i64 0), i64 4, i32 1) #12
  br i1 %215, label %216, label %233

216:                                              ; preds = %192, %216
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* nonnull %21, i64 0, i64 4) #12
  %217 = load i8, i8* %77, align 1
  %218 = icmp slt i8 %217, 0
  %219 = load i8*, i8** %74, align 8
  %220 = select i1 %218, i8* %219, i8* %73
  %221 = load i64, i64* %75, align 8
  %222 = zext i8 %217 to i64
  %223 = select i1 %218, i64 %221, i64 %222
  %224 = call zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %220, i64 %223, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, %"class.std::__1::basic_string"* nonnull %21) #12
  %225 = load i8, i8* %77, align 1
  %226 = icmp slt i8 %225, 0
  %227 = load i8*, i8** %74, align 8
  %228 = select i1 %226, i8* %227, i8* %73
  %229 = load i64, i64* %75, align 8
  %230 = zext i8 %225 to i64
  %231 = select i1 %226, i64 %229, i64 %230
  %232 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %228, i64 %231, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN20bookmark_html_reader19ImportBookmarksFileEN4base17RepeatingCallbackIFbvEEENS1_IFbRK4GURLEEERKNS0_8FilePathEPNSt3__16vectorI21ImportedBookmarkEntryNSC_9allocatorISE_EEEEPNSD_IN8importer16SearchEngineInfoENSF_ISK_EEEEPNSD_IN12favicon_base16FaviconUsageDataENSF_ISP_EEEEE6kHrTag, i64 0, i64 0), i64 4, i32 1) #12
  br i1 %232, label %216, label %233

233:                                              ; preds = %216, %192
  %234 = call zeroext i1 @_ZN20bookmark_html_reader8internal20ParseCharsetFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.std::__1::basic_string"* nonnull %20)
  br i1 %234, label %1128, label %235

235:                                              ; preds = %233
  %236 = call zeroext i1 @_ZN20bookmark_html_reader8internal23ParseFolderNameFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEPbPN4base4TimeE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20, %"class.std::__1::basic_string.6"* nonnull %16, i8* nonnull %17, %"class.base::Time"* nonnull %18)
  br i1 %236, label %1128, label %237

237:                                              ; preds = %235
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %81) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %24) #12
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %82) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %25) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #12
  store i64 0, i64* %84, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #12
  %238 = call zeroext i1 @_ZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20, %"class.std::__1::basic_string.6"* nonnull %22, %class.GURL* nonnull %24, %class.GURL* nonnull %25, %"class.std::__1::basic_string.6"* nonnull %23, %"class.base::Time"* nonnull %26, %"class.std::__1::basic_string.6"* nonnull %27)
  br i1 %238, label %241, label %239

239:                                              ; preds = %237
  %240 = call zeroext i1 @_ZN20bookmark_html_reader8internal28ParseMinimumBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURL(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20, %"class.std::__1::basic_string.6"* nonnull %22, %class.GURL* nonnull %24)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 24, i1 false) #12
  br i1 %240, label %242, label %631

241:                                              ; preds = %237
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 24, i1 false) #12
  br label %242

242:                                              ; preds = %241, %239
  %243 = load i8, i8* %91, align 1
  %244 = icmp slt i8 %243, 0
  %245 = load i64, i64* %86, align 8
  %246 = zext i8 %243 to i64
  %247 = select i1 %244, i64 %245, i64 %246
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %296

249:                                              ; preds = %242
  %250 = call zeroext i1 @_ZN20bookmark_html_reader26CanImportURLAsSearchEngineERK4GURLPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%class.GURL* nonnull dereferenceable(120) %24, %"class.std::__1::basic_string"* nonnull %28)
  br i1 %250, label %251, label %296

251:                                              ; preds = %249
  %252 = load i8, i8* %93, align 1
  %253 = icmp slt i8 %252, 0
  %254 = load i64, i64* %80, align 8
  %255 = zext i8 %252 to i64
  %256 = select i1 %253, i64 %254, i64 %255
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %296, label %258

258:                                              ; preds = %251
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %94) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 72, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #12
  %259 = load i8, i8* %97, align 1
  %260 = icmp slt i8 %259, 0
  %261 = load i8*, i8** %88, align 8
  %262 = select i1 %260, i8* %261, i8* %87
  %263 = load i64, i64* %89, align 8
  %264 = zext i8 %259 to i64
  %265 = select i1 %260, i64 %263, i64 %264
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.6"* nonnull sret %30, i8* %262, i64 %265) #12
  %266 = load i8, i8* %99, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %258
  %269 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %269) #13
  br label %270

270:                                              ; preds = %268, %258
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %94, i8* nonnull align 8 %95, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #12
  %271 = call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %101, %"class.std::__1::basic_string.6"* nonnull dereferenceable(24) %23)
  %272 = call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %102, %"class.std::__1::basic_string.6"* nonnull dereferenceable(24) %22)
  %273 = load %"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"** %103, align 8
  %274 = load %"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"** %104, align 8
  %275 = icmp eq %"struct.importer::SearchEngineInfo"* %273, %274
  br i1 %275, label %279, label %276

276:                                              ; preds = %270
  call void @_ZN8importer16SearchEngineInfoC2ERKS0_(%"struct.importer::SearchEngineInfo"* %273, %"struct.importer::SearchEngineInfo"* nonnull dereferenceable(72) %29) #12
  %277 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %273, i64 1
  %278 = ptrtoint %"struct.importer::SearchEngineInfo"* %277 to i64
  store i64 %278, i64* %105, align 8
  br label %280

279:                                              ; preds = %270
  call void @_ZNSt3__16vectorIN8importer16SearchEngineInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.25"* %4, %"struct.importer::SearchEngineInfo"* nonnull dereferenceable(72) %29) #12
  br label %280

280:                                              ; preds = %276, %279
  %281 = load i8, i8* %107, align 1
  %282 = icmp slt i8 %281, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %280
  %284 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %284) #13
  br label %285

285:                                              ; preds = %283, %280
  %286 = load i8, i8* %110, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %290

288:                                              ; preds = %285
  %289 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %289) #13
  br label %290

290:                                              ; preds = %288, %285
  %291 = load i8, i8* %99, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %295

293:                                              ; preds = %290
  %294 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %294) #13
  br label %295

295:                                              ; preds = %290, %293
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %94) #12
  br label %1102

296:                                              ; preds = %251, %249, %242
  %297 = load i8, i8* %91, align 1
  %298 = icmp slt i8 %297, 0
  %299 = load i64, i64* %86, align 8
  %300 = zext i8 %297 to i64
  %301 = select i1 %298, i64 %299, i64 %300
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %631

303:                                              ; preds = %296
  %304 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %112, align 8
  %305 = icmp eq %"class.base::internal::BindStateBase"* %304, null
  br i1 %305, label %311, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %304, i64 0, i32 1
  %308 = bitcast void ()** %307 to i1 (%"class.base::internal::BindStateBase"*, %class.GURL*)**
  %309 = load i1 (%"class.base::internal::BindStateBase"*, %class.GURL*)*, i1 (%"class.base::internal::BindStateBase"*, %class.GURL*)** %308, align 8
  %310 = call zeroext i1 %309(%"class.base::internal::BindStateBase"* nonnull %304, %class.GURL* nonnull dereferenceable(120) %24) #12
  br i1 %310, label %311, label %631

311:                                              ; preds = %306, %303
  %312 = load i64, i64* %124, align 8
  %313 = load i64, i64* %125, align 8
  %314 = sub i64 %312, %313
  %315 = sdiv exact i64 %314, 24
  %316 = icmp ugt i64 %183, %315
  br i1 %316, label %317, label %321

317:                                              ; preds = %311
  %318 = inttoptr i64 %312 to %"class.std::__1::basic_string.6"*
  %319 = inttoptr i64 %313 to %"class.std::__1::basic_string.6"*
  %320 = icmp eq %"class.std::__1::basic_string.6"* %319, %318
  br i1 %320, label %321, label %1102

321:                                              ; preds = %317, %311
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %133) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 184, i1 false)
  call void @_ZN21ImportedBookmarkEntryC1Ev(%struct.ImportedBookmarkEntry* nonnull %31) #12
  %322 = load i64, i64* %84, align 8
  store i64 %322, i64* %134, align 8
  %323 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %135, %class.GURL* nonnull dereferenceable(120) %24) #12
  %324 = call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %136, %"class.std::__1::basic_string.6"* nonnull dereferenceable(24) %22)
  %325 = icmp eq i64 %183, 0
  br i1 %325, label %330, label %326

326:                                              ; preds = %321
  store i8 1, i8* %133, align 8
  %327 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %57, align 8
  %328 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %327, i64 -1
  %329 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %328, i64 %183
  br label %532

330:                                              ; preds = %321
  %331 = and i8 %181, 1
  %332 = icmp ne i8 %331, 0
  %333 = and i8 %182, 1
  %334 = icmp eq i8 %333, 0
  %335 = or i1 %334, %332
  br i1 %335, label %529, label %336

336:                                              ; preds = %330
  %337 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %58, align 8
  %338 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %59, align 8
  %339 = icmp eq %"class.std::__1::basic_string.6"* %337, %338
  br i1 %339, label %522, label %340

340:                                              ; preds = %336
  %341 = load i8, i8* %131, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %345, label %343

343:                                              ; preds = %340
  %344 = bitcast %"class.std::__1::basic_string.6"* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %344, i8* nonnull align 8 %51, i64 24, i1 false) #12
  br label %519

345:                                              ; preds = %340
  %346 = load i16*, i16** %52, align 8
  %347 = load i64, i64* %53, align 8
  %348 = icmp ult i64 %347, 11
  br i1 %348, label %349, label %354

349:                                              ; preds = %345
  %350 = bitcast %"class.std::__1::basic_string.6"* %337 to i16*
  %351 = trunc i64 %347 to i8
  %352 = bitcast %"class.std::__1::basic_string.6"* %337 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %353 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %352, i64 0, i32 1, i32 1
  store i8 %351, i8* %353, align 1
  br label %371

354:                                              ; preds = %345
  %355 = icmp ugt i64 %347, 9223372036854775791
  br i1 %355, label %356, label %358

356:                                              ; preds = %354
  %357 = bitcast %"class.std::__1::basic_string.6"* %337 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %357) #14
  unreachable

358:                                              ; preds = %354
  %359 = add nuw nsw i64 %347, 8
  %360 = and i64 %359, -8
  %361 = icmp slt i64 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %358
  call void @abort() #14
  unreachable

363:                                              ; preds = %358
  %364 = shl i64 %360, 1
  %365 = call i8* @_Znwm(i64 %364) #13
  %366 = bitcast i8* %365 to i16*
  %367 = bitcast %"class.std::__1::basic_string.6"* %337 to i8**
  store i8* %365, i8** %367, align 8
  %368 = or i64 %360, -9223372036854775808
  %369 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %347, i64* %370, align 8
  br label %371

371:                                              ; preds = %363, %349
  %372 = phi i16* [ %350, %349 ], [ %366, %363 ]
  %373 = add nuw nsw i64 %347, 1
  %374 = add i64 %347, 1
  %375 = icmp ult i64 %374, 16
  br i1 %375, label %466, label %376

376:                                              ; preds = %371
  %377 = getelementptr i16, i16* %372, i64 1
  %378 = getelementptr i16, i16* %377, i64 %347
  %379 = getelementptr i16, i16* %346, i64 1
  %380 = getelementptr i16, i16* %379, i64 %347
  %381 = icmp ult i16* %372, %380
  %382 = icmp ult i16* %346, %378
  %383 = and i1 %381, %382
  br i1 %383, label %466, label %384

384:                                              ; preds = %376
  %385 = and i64 %374, -16
  %386 = sub i64 %373, %385
  %387 = getelementptr i16, i16* %346, i64 %385
  %388 = getelementptr i16, i16* %372, i64 %385
  %389 = add i64 %385, -16
  %390 = lshr exact i64 %389, 4
  %391 = add nuw nsw i64 %390, 1
  %392 = and i64 %391, 3
  %393 = icmp ult i64 %389, 48
  br i1 %393, label %445, label %394

394:                                              ; preds = %384
  %395 = sub nsw i64 %391, %392
  br label %396

396:                                              ; preds = %396, %394
  %397 = phi i64 [ 0, %394 ], [ %442, %396 ]
  %398 = phi i64 [ %395, %394 ], [ %443, %396 ]
  %399 = getelementptr i16, i16* %346, i64 %397
  %400 = getelementptr i16, i16* %372, i64 %397
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !2
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !2
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !5, !noalias !2
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !5, !noalias !2
  %409 = or i64 %397, 16
  %410 = getelementptr i16, i16* %346, i64 %409
  %411 = getelementptr i16, i16* %372, i64 %409
  %412 = bitcast i16* %410 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !2
  %414 = getelementptr i16, i16* %410, i64 8
  %415 = bitcast i16* %414 to <8 x i16>*
  %416 = load <8 x i16>, <8 x i16>* %415, align 2, !alias.scope !2
  %417 = bitcast i16* %411 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %417, align 2, !alias.scope !5, !noalias !2
  %418 = getelementptr i16, i16* %411, i64 8
  %419 = bitcast i16* %418 to <8 x i16>*
  store <8 x i16> %416, <8 x i16>* %419, align 2, !alias.scope !5, !noalias !2
  %420 = or i64 %397, 32
  %421 = getelementptr i16, i16* %346, i64 %420
  %422 = getelementptr i16, i16* %372, i64 %420
  %423 = bitcast i16* %421 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !2
  %425 = getelementptr i16, i16* %421, i64 8
  %426 = bitcast i16* %425 to <8 x i16>*
  %427 = load <8 x i16>, <8 x i16>* %426, align 2, !alias.scope !2
  %428 = bitcast i16* %422 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %428, align 2, !alias.scope !5, !noalias !2
  %429 = getelementptr i16, i16* %422, i64 8
  %430 = bitcast i16* %429 to <8 x i16>*
  store <8 x i16> %427, <8 x i16>* %430, align 2, !alias.scope !5, !noalias !2
  %431 = or i64 %397, 48
  %432 = getelementptr i16, i16* %346, i64 %431
  %433 = getelementptr i16, i16* %372, i64 %431
  %434 = bitcast i16* %432 to <8 x i16>*
  %435 = load <8 x i16>, <8 x i16>* %434, align 2, !alias.scope !2
  %436 = getelementptr i16, i16* %432, i64 8
  %437 = bitcast i16* %436 to <8 x i16>*
  %438 = load <8 x i16>, <8 x i16>* %437, align 2, !alias.scope !2
  %439 = bitcast i16* %433 to <8 x i16>*
  store <8 x i16> %435, <8 x i16>* %439, align 2, !alias.scope !5, !noalias !2
  %440 = getelementptr i16, i16* %433, i64 8
  %441 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %438, <8 x i16>* %441, align 2, !alias.scope !5, !noalias !2
  %442 = add i64 %397, 64
  %443 = add i64 %398, -4
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %445, label %396, !llvm.loop !7

445:                                              ; preds = %396, %384
  %446 = phi i64 [ 0, %384 ], [ %442, %396 ]
  %447 = icmp eq i64 %392, 0
  br i1 %447, label %464, label %448

448:                                              ; preds = %445, %448
  %449 = phi i64 [ %461, %448 ], [ %446, %445 ]
  %450 = phi i64 [ %462, %448 ], [ %392, %445 ]
  %451 = getelementptr i16, i16* %346, i64 %449
  %452 = getelementptr i16, i16* %372, i64 %449
  %453 = bitcast i16* %451 to <8 x i16>*
  %454 = load <8 x i16>, <8 x i16>* %453, align 2, !alias.scope !2
  %455 = getelementptr i16, i16* %451, i64 8
  %456 = bitcast i16* %455 to <8 x i16>*
  %457 = load <8 x i16>, <8 x i16>* %456, align 2, !alias.scope !2
  %458 = bitcast i16* %452 to <8 x i16>*
  store <8 x i16> %454, <8 x i16>* %458, align 2, !alias.scope !5, !noalias !2
  %459 = getelementptr i16, i16* %452, i64 8
  %460 = bitcast i16* %459 to <8 x i16>*
  store <8 x i16> %457, <8 x i16>* %460, align 2, !alias.scope !5, !noalias !2
  %461 = add i64 %449, 16
  %462 = add i64 %450, -1
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %464, label %448, !llvm.loop !9

464:                                              ; preds = %448, %445
  %465 = icmp eq i64 %374, %385
  br i1 %465, label %519, label %466

466:                                              ; preds = %464, %376, %371
  %467 = phi i64 [ %373, %376 ], [ %373, %371 ], [ %386, %464 ]
  %468 = phi i16* [ %346, %376 ], [ %346, %371 ], [ %387, %464 ]
  %469 = phi i16* [ %372, %376 ], [ %372, %371 ], [ %388, %464 ]
  %470 = add i64 %467, -1
  %471 = and i64 %467, 7
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %484, label %473

473:                                              ; preds = %466, %473
  %474 = phi i64 [ %479, %473 ], [ %467, %466 ]
  %475 = phi i16* [ %481, %473 ], [ %468, %466 ]
  %476 = phi i16* [ %480, %473 ], [ %469, %466 ]
  %477 = phi i64 [ %482, %473 ], [ %471, %466 ]
  %478 = load i16, i16* %475, align 2
  store i16 %478, i16* %476, align 2
  %479 = add i64 %474, -1
  %480 = getelementptr inbounds i16, i16* %476, i64 1
  %481 = getelementptr inbounds i16, i16* %475, i64 1
  %482 = add i64 %477, -1
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %484, label %473, !llvm.loop !11

484:                                              ; preds = %473, %466
  %485 = phi i64 [ %467, %466 ], [ %479, %473 ]
  %486 = phi i16* [ %468, %466 ], [ %481, %473 ]
  %487 = phi i16* [ %469, %466 ], [ %480, %473 ]
  %488 = icmp ult i64 %470, 7
  br i1 %488, label %519, label %489

489:                                              ; preds = %484, %489
  %490 = phi i64 [ %515, %489 ], [ %485, %484 ]
  %491 = phi i16* [ %517, %489 ], [ %486, %484 ]
  %492 = phi i16* [ %516, %489 ], [ %487, %484 ]
  %493 = load i16, i16* %491, align 2
  store i16 %493, i16* %492, align 2
  %494 = getelementptr inbounds i16, i16* %492, i64 1
  %495 = getelementptr inbounds i16, i16* %491, i64 1
  %496 = load i16, i16* %495, align 2
  store i16 %496, i16* %494, align 2
  %497 = getelementptr inbounds i16, i16* %492, i64 2
  %498 = getelementptr inbounds i16, i16* %491, i64 2
  %499 = load i16, i16* %498, align 2
  store i16 %499, i16* %497, align 2
  %500 = getelementptr inbounds i16, i16* %492, i64 3
  %501 = getelementptr inbounds i16, i16* %491, i64 3
  %502 = load i16, i16* %501, align 2
  store i16 %502, i16* %500, align 2
  %503 = getelementptr inbounds i16, i16* %492, i64 4
  %504 = getelementptr inbounds i16, i16* %491, i64 4
  %505 = load i16, i16* %504, align 2
  store i16 %505, i16* %503, align 2
  %506 = getelementptr inbounds i16, i16* %492, i64 5
  %507 = getelementptr inbounds i16, i16* %491, i64 5
  %508 = load i16, i16* %507, align 2
  store i16 %508, i16* %506, align 2
  %509 = getelementptr inbounds i16, i16* %492, i64 6
  %510 = getelementptr inbounds i16, i16* %491, i64 6
  %511 = load i16, i16* %510, align 2
  store i16 %511, i16* %509, align 2
  %512 = getelementptr inbounds i16, i16* %492, i64 7
  %513 = getelementptr inbounds i16, i16* %491, i64 7
  %514 = load i16, i16* %513, align 2
  store i16 %514, i16* %512, align 2
  %515 = add i64 %490, -8
  %516 = getelementptr inbounds i16, i16* %492, i64 8
  %517 = getelementptr inbounds i16, i16* %491, i64 8
  %518 = icmp eq i64 %515, 0
  br i1 %518, label %519, label %489, !llvm.loop !12

519:                                              ; preds = %484, %489, %464, %343
  %520 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %337, i64 1
  %521 = ptrtoint %"class.std::__1::basic_string.6"* %520 to i64
  store i64 %521, i64* %124, align 8
  br label %523

522:                                              ; preds = %336
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.4"* nonnull %19, %"class.std::__1::basic_string.6"* nonnull dereferenceable(24) %16) #12
  br label %523

523:                                              ; preds = %519, %522
  %524 = load i8, i8* %131, align 1
  %525 = icmp slt i8 %524, 0
  br i1 %525, label %526, label %528

526:                                              ; preds = %523
  %527 = load i16*, i16** %52, align 8
  store i16 0, i16* %527, align 2
  store i64 0, i64* %53, align 8
  br label %529

528:                                              ; preds = %523
  store i16 0, i16* %132, align 8
  store i8 0, i8* %131, align 1
  br label %529

529:                                              ; preds = %528, %526, %330
  %530 = phi i8 [ %182, %330 ], [ 0, %526 ], [ 0, %528 ]
  %531 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %57, align 8
  br label %532

532:                                              ; preds = %529, %326
  %533 = phi %"class.std::__1::basic_string.6"* [ %531, %529 ], [ %329, %326 ]
  %534 = phi i8 [ %530, %529 ], [ %182, %326 ]
  %535 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %58, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignINS_11__wrap_iterIPS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueEvE4typeESE_SE_(%"class.std::__1::vector.4"* %137, %"class.std::__1::basic_string.6"* %533, %"class.std::__1::basic_string.6"* %535)
  %536 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %127, align 8
  %537 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %128, align 8
  %538 = icmp eq %struct.ImportedBookmarkEntry* %536, %537
  br i1 %538, label %542, label %539

539:                                              ; preds = %532
  call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %536, %struct.ImportedBookmarkEntry* nonnull dereferenceable(184) %31) #12
  %540 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %536, i64 1
  %541 = ptrtoint %struct.ImportedBookmarkEntry* %540 to i64
  store i64 %541, i64* %129, align 8
  br label %543

542:                                              ; preds = %532
  call void @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"* %3, %struct.ImportedBookmarkEntry* nonnull dereferenceable(184) %31) #12
  br label %543

543:                                              ; preds = %539, %542
  %544 = load i8, i8* %139, align 8
  %545 = icmp eq i8 %544, 0
  %546 = or i1 %138, %545
  %547 = load i8, i8* %140, align 8
  %548 = icmp eq i8 %547, 0
  %549 = or i1 %546, %548
  br i1 %549, label %630, label %550

550:                                              ; preds = %543
  %551 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0)) #12
  %552 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %25, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0), i64 %551) #12
  br i1 %552, label %553, label %630

553:                                              ; preds = %550
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 0, i64 24, i1 false) #12
  %554 = call zeroext i1 @_ZN3net7DataURL5ParseERK4GURLPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_SB_(%class.GURL* nonnull dereferenceable(120) %25, %"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* nonnull %9) #12
  br i1 %554, label %555, label %614

555:                                              ; preds = %553
  %556 = load i8, i8* %149, align 1
  %557 = icmp slt i8 %556, 0
  %558 = load i64, i64* %147, align 8
  %559 = zext i8 %556 to i64
  %560 = select i1 %557, i64 %558, i64 %559
  %561 = icmp eq i64 %560, 0
  br i1 %561, label %614, label %562

562:                                              ; preds = %555
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %150) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 168, i1 false) #12
  call void @_ZN12favicon_base16FaviconUsageDataC1Ev(%"struct.favicon_base::FaviconUsageData"* nonnull %10) #12
  %563 = load i8, i8* %149, align 1
  %564 = icmp slt i8 %563, 0
  %565 = load i8*, i8** %146, align 8
  %566 = load i64, i64* %147, align 8
  %567 = zext i8 %563 to i64
  %568 = select i1 %564, i8* %565, i8* %145
  %569 = select i1 %564, i64 %566, i64 %567
  %570 = call zeroext i1 @_ZN8importer15ReencodeFaviconEPKhmPNSt3__16vectorIhNS2_9allocatorIhEEEE(i8* %568, i64 %569, %"class.std::__1::vector.34"* %151) #12
  br i1 %570, label %571, label %613

571:                                              ; preds = %562
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %152) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #12
  store i8 16, i8* %156, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %154, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i64 16, i1 false) #12
  store i8 0, i8* %158, align 8
  %572 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %24) #12
  %573 = bitcast %"class.std::__1::basic_string"* %572 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %574 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %573, i64 0, i32 1, i32 0
  %575 = load i8, i8* %574, align 1, !noalias !13
  %576 = icmp slt i8 %575, 0
  %577 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %572, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %578 = load i8*, i8** %577, align 8, !noalias !13
  %579 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %572, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %580 = load i64, i64* %579, align 8, !noalias !13
  %581 = bitcast %"class.std::__1::basic_string"* %572 to i8*
  %582 = zext i8 %575 to i64
  %583 = select i1 %576, i8* %578, i8* %581
  %584 = select i1 %576, i64 %580, i64 %582
  %585 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %13, i8* %583, i64 %584) #12, !noalias !13
  %586 = bitcast %"class.std::__1::basic_string"* %585 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %153, i8* align 8 %586, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %586, i8 0, i64 24, i1 false) #12, !noalias !13
  %587 = load i8, i8* %160, align 1
  %588 = icmp slt i8 %587, 0
  %589 = load i8*, i8** %161, align 8
  %590 = select i1 %588, i8* %589, i8* %153
  %591 = load i64, i64* %162, align 8
  %592 = zext i8 %587 to i64
  %593 = select i1 %588, i64 %591, i64 %592
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %11, i8* %590, i64 %593) #12
  %594 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %163, %class.GURL* nonnull dereferenceable(120) %11) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %11) #12
  %595 = load i8, i8* %160, align 1
  %596 = icmp slt i8 %595, 0
  br i1 %596, label %597, label %599

597:                                              ; preds = %571
  %598 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %598) #13
  br label %599

599:                                              ; preds = %597, %571
  %600 = load i8, i8* %156, align 1
  %601 = icmp slt i8 %600, 0
  br i1 %601, label %602, label %604

602:                                              ; preds = %599
  %603 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %603) #13
  br label %604

604:                                              ; preds = %602, %599
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %152) #12
  %605 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE25__emplace_unique_key_argsIS1_JRKS1_EEENS_4pairINS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %165, %class.GURL* nonnull dereferenceable(120) %24, %class.GURL* nonnull dereferenceable(120) %24) #12
  %606 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %166, align 8
  %607 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %167, align 8
  %608 = icmp eq %"struct.favicon_base::FaviconUsageData"* %606, %607
  br i1 %608, label %612, label %609

609:                                              ; preds = %604
  call void @_ZN12favicon_base16FaviconUsageDataC1ERKS0_(%"struct.favicon_base::FaviconUsageData"* %606, %"struct.favicon_base::FaviconUsageData"* nonnull dereferenceable(168) %10) #12
  %610 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %606, i64 1
  %611 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %610 to i64
  store i64 %611, i64* %168, align 8
  br label %613

612:                                              ; preds = %604
  call void @_ZNSt3__16vectorIN12favicon_base16FaviconUsageDataENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.32"* nonnull %5, %"struct.favicon_base::FaviconUsageData"* nonnull dereferenceable(168) %10) #12
  br label %613

613:                                              ; preds = %612, %609, %562
  call void @_ZN12favicon_base16FaviconUsageDataD1Ev(%"struct.favicon_base::FaviconUsageData"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %150) #12
  br label %614

614:                                              ; preds = %613, %555, %553
  %615 = load i8, i8* %149, align 1
  %616 = icmp slt i8 %615, 0
  br i1 %616, label %617, label %619

617:                                              ; preds = %614
  %618 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %618) #13
  br label %619

619:                                              ; preds = %617, %614
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #12
  %620 = load i8, i8* %170, align 1
  %621 = icmp slt i8 %620, 0
  br i1 %621, label %622, label %624

622:                                              ; preds = %619
  %623 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %623) #13
  br label %624

624:                                              ; preds = %622, %619
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #12
  %625 = load i8, i8* %172, align 1
  %626 = icmp slt i8 %625, 0
  br i1 %626, label %627, label %629

627:                                              ; preds = %624
  %628 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %628) #13
  br label %629

629:                                              ; preds = %627, %624
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #12
  br label %630

630:                                              ; preds = %629, %550, %543
  call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %133) #12
  br label %1102

631:                                              ; preds = %239, %306, %296
  %632 = phi i8 [ 0, %306 ], [ 0, %296 ], [ %180, %239 ]
  %633 = load i8, i8* %77, align 1
  %634 = icmp slt i8 %633, 0
  %635 = load i8*, i8** %74, align 8
  %636 = select i1 %634, i8* %635, i8* %73
  %637 = load i64, i64* %75, align 8
  %638 = zext i8 %633 to i64
  %639 = select i1 %634, i64 %637, i64 %638
  %640 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %636, i64 %639, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4, i32 1) #12
  br i1 %640, label %641, label %848

641:                                              ; preds = %631
  %642 = and i8 %182, 1
  %643 = icmp eq i8 %642, 0
  br i1 %643, label %837, label %644

644:                                              ; preds = %641
  %645 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %58, align 8
  %646 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %59, align 8
  %647 = icmp eq %"class.std::__1::basic_string.6"* %645, %646
  br i1 %647, label %830, label %648

648:                                              ; preds = %644
  %649 = load i8, i8* %131, align 1
  %650 = icmp slt i8 %649, 0
  br i1 %650, label %653, label %651

651:                                              ; preds = %648
  %652 = bitcast %"class.std::__1::basic_string.6"* %645 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %652, i8* nonnull align 8 %51, i64 24, i1 false) #12
  br label %827

653:                                              ; preds = %648
  %654 = load i16*, i16** %52, align 8
  %655 = load i64, i64* %53, align 8
  %656 = icmp ult i64 %655, 11
  br i1 %656, label %657, label %662

657:                                              ; preds = %653
  %658 = bitcast %"class.std::__1::basic_string.6"* %645 to i16*
  %659 = trunc i64 %655 to i8
  %660 = bitcast %"class.std::__1::basic_string.6"* %645 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %661 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %660, i64 0, i32 1, i32 1
  store i8 %659, i8* %661, align 1
  br label %679

662:                                              ; preds = %653
  %663 = icmp ugt i64 %655, 9223372036854775791
  br i1 %663, label %664, label %666

664:                                              ; preds = %662
  %665 = bitcast %"class.std::__1::basic_string.6"* %645 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %665) #14
  unreachable

666:                                              ; preds = %662
  %667 = add nuw nsw i64 %655, 8
  %668 = and i64 %667, -8
  %669 = icmp slt i64 %668, 0
  br i1 %669, label %670, label %671

670:                                              ; preds = %666
  call void @abort() #14
  unreachable

671:                                              ; preds = %666
  %672 = shl i64 %668, 1
  %673 = call i8* @_Znwm(i64 %672) #13
  %674 = bitcast i8* %673 to i16*
  %675 = bitcast %"class.std::__1::basic_string.6"* %645 to i8**
  store i8* %673, i8** %675, align 8
  %676 = or i64 %668, -9223372036854775808
  %677 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %645, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %676, i64* %677, align 8
  %678 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %645, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %655, i64* %678, align 8
  br label %679

679:                                              ; preds = %671, %657
  %680 = phi i16* [ %658, %657 ], [ %674, %671 ]
  %681 = add nuw nsw i64 %655, 1
  %682 = add i64 %655, 1
  %683 = icmp ult i64 %682, 16
  br i1 %683, label %774, label %684

684:                                              ; preds = %679
  %685 = getelementptr i16, i16* %680, i64 1
  %686 = getelementptr i16, i16* %685, i64 %655
  %687 = getelementptr i16, i16* %654, i64 1
  %688 = getelementptr i16, i16* %687, i64 %655
  %689 = icmp ult i16* %680, %688
  %690 = icmp ult i16* %654, %686
  %691 = and i1 %689, %690
  br i1 %691, label %774, label %692

692:                                              ; preds = %684
  %693 = and i64 %682, -16
  %694 = sub i64 %681, %693
  %695 = getelementptr i16, i16* %654, i64 %693
  %696 = getelementptr i16, i16* %680, i64 %693
  %697 = add i64 %693, -16
  %698 = lshr exact i64 %697, 4
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 3
  %701 = icmp ult i64 %697, 48
  br i1 %701, label %753, label %702

702:                                              ; preds = %692
  %703 = sub nsw i64 %699, %700
  br label %704

704:                                              ; preds = %704, %702
  %705 = phi i64 [ 0, %702 ], [ %750, %704 ]
  %706 = phi i64 [ %703, %702 ], [ %751, %704 ]
  %707 = getelementptr i16, i16* %654, i64 %705
  %708 = getelementptr i16, i16* %680, i64 %705
  %709 = bitcast i16* %707 to <8 x i16>*
  %710 = load <8 x i16>, <8 x i16>* %709, align 2, !alias.scope !16
  %711 = getelementptr i16, i16* %707, i64 8
  %712 = bitcast i16* %711 to <8 x i16>*
  %713 = load <8 x i16>, <8 x i16>* %712, align 2, !alias.scope !16
  %714 = bitcast i16* %708 to <8 x i16>*
  store <8 x i16> %710, <8 x i16>* %714, align 2, !alias.scope !19, !noalias !16
  %715 = getelementptr i16, i16* %708, i64 8
  %716 = bitcast i16* %715 to <8 x i16>*
  store <8 x i16> %713, <8 x i16>* %716, align 2, !alias.scope !19, !noalias !16
  %717 = or i64 %705, 16
  %718 = getelementptr i16, i16* %654, i64 %717
  %719 = getelementptr i16, i16* %680, i64 %717
  %720 = bitcast i16* %718 to <8 x i16>*
  %721 = load <8 x i16>, <8 x i16>* %720, align 2, !alias.scope !16
  %722 = getelementptr i16, i16* %718, i64 8
  %723 = bitcast i16* %722 to <8 x i16>*
  %724 = load <8 x i16>, <8 x i16>* %723, align 2, !alias.scope !16
  %725 = bitcast i16* %719 to <8 x i16>*
  store <8 x i16> %721, <8 x i16>* %725, align 2, !alias.scope !19, !noalias !16
  %726 = getelementptr i16, i16* %719, i64 8
  %727 = bitcast i16* %726 to <8 x i16>*
  store <8 x i16> %724, <8 x i16>* %727, align 2, !alias.scope !19, !noalias !16
  %728 = or i64 %705, 32
  %729 = getelementptr i16, i16* %654, i64 %728
  %730 = getelementptr i16, i16* %680, i64 %728
  %731 = bitcast i16* %729 to <8 x i16>*
  %732 = load <8 x i16>, <8 x i16>* %731, align 2, !alias.scope !16
  %733 = getelementptr i16, i16* %729, i64 8
  %734 = bitcast i16* %733 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !16
  %736 = bitcast i16* %730 to <8 x i16>*
  store <8 x i16> %732, <8 x i16>* %736, align 2, !alias.scope !19, !noalias !16
  %737 = getelementptr i16, i16* %730, i64 8
  %738 = bitcast i16* %737 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %738, align 2, !alias.scope !19, !noalias !16
  %739 = or i64 %705, 48
  %740 = getelementptr i16, i16* %654, i64 %739
  %741 = getelementptr i16, i16* %680, i64 %739
  %742 = bitcast i16* %740 to <8 x i16>*
  %743 = load <8 x i16>, <8 x i16>* %742, align 2, !alias.scope !16
  %744 = getelementptr i16, i16* %740, i64 8
  %745 = bitcast i16* %744 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !16
  %747 = bitcast i16* %741 to <8 x i16>*
  store <8 x i16> %743, <8 x i16>* %747, align 2, !alias.scope !19, !noalias !16
  %748 = getelementptr i16, i16* %741, i64 8
  %749 = bitcast i16* %748 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %749, align 2, !alias.scope !19, !noalias !16
  %750 = add i64 %705, 64
  %751 = add i64 %706, -4
  %752 = icmp eq i64 %751, 0
  br i1 %752, label %753, label %704, !llvm.loop !21

753:                                              ; preds = %704, %692
  %754 = phi i64 [ 0, %692 ], [ %750, %704 ]
  %755 = icmp eq i64 %700, 0
  br i1 %755, label %772, label %756

756:                                              ; preds = %753, %756
  %757 = phi i64 [ %769, %756 ], [ %754, %753 ]
  %758 = phi i64 [ %770, %756 ], [ %700, %753 ]
  %759 = getelementptr i16, i16* %654, i64 %757
  %760 = getelementptr i16, i16* %680, i64 %757
  %761 = bitcast i16* %759 to <8 x i16>*
  %762 = load <8 x i16>, <8 x i16>* %761, align 2, !alias.scope !16
  %763 = getelementptr i16, i16* %759, i64 8
  %764 = bitcast i16* %763 to <8 x i16>*
  %765 = load <8 x i16>, <8 x i16>* %764, align 2, !alias.scope !16
  %766 = bitcast i16* %760 to <8 x i16>*
  store <8 x i16> %762, <8 x i16>* %766, align 2, !alias.scope !19, !noalias !16
  %767 = getelementptr i16, i16* %760, i64 8
  %768 = bitcast i16* %767 to <8 x i16>*
  store <8 x i16> %765, <8 x i16>* %768, align 2, !alias.scope !19, !noalias !16
  %769 = add i64 %757, 16
  %770 = add i64 %758, -1
  %771 = icmp eq i64 %770, 0
  br i1 %771, label %772, label %756, !llvm.loop !22

772:                                              ; preds = %756, %753
  %773 = icmp eq i64 %682, %693
  br i1 %773, label %827, label %774

774:                                              ; preds = %772, %684, %679
  %775 = phi i64 [ %681, %684 ], [ %681, %679 ], [ %694, %772 ]
  %776 = phi i16* [ %654, %684 ], [ %654, %679 ], [ %695, %772 ]
  %777 = phi i16* [ %680, %684 ], [ %680, %679 ], [ %696, %772 ]
  %778 = add i64 %775, -1
  %779 = and i64 %775, 7
  %780 = icmp eq i64 %779, 0
  br i1 %780, label %792, label %781

781:                                              ; preds = %774, %781
  %782 = phi i64 [ %787, %781 ], [ %775, %774 ]
  %783 = phi i16* [ %789, %781 ], [ %776, %774 ]
  %784 = phi i16* [ %788, %781 ], [ %777, %774 ]
  %785 = phi i64 [ %790, %781 ], [ %779, %774 ]
  %786 = load i16, i16* %783, align 2
  store i16 %786, i16* %784, align 2
  %787 = add i64 %782, -1
  %788 = getelementptr inbounds i16, i16* %784, i64 1
  %789 = getelementptr inbounds i16, i16* %783, i64 1
  %790 = add i64 %785, -1
  %791 = icmp eq i64 %790, 0
  br i1 %791, label %792, label %781, !llvm.loop !23

792:                                              ; preds = %781, %774
  %793 = phi i64 [ %775, %774 ], [ %787, %781 ]
  %794 = phi i16* [ %776, %774 ], [ %789, %781 ]
  %795 = phi i16* [ %777, %774 ], [ %788, %781 ]
  %796 = icmp ult i64 %778, 7
  br i1 %796, label %827, label %797

797:                                              ; preds = %792, %797
  %798 = phi i64 [ %823, %797 ], [ %793, %792 ]
  %799 = phi i16* [ %825, %797 ], [ %794, %792 ]
  %800 = phi i16* [ %824, %797 ], [ %795, %792 ]
  %801 = load i16, i16* %799, align 2
  store i16 %801, i16* %800, align 2
  %802 = getelementptr inbounds i16, i16* %800, i64 1
  %803 = getelementptr inbounds i16, i16* %799, i64 1
  %804 = load i16, i16* %803, align 2
  store i16 %804, i16* %802, align 2
  %805 = getelementptr inbounds i16, i16* %800, i64 2
  %806 = getelementptr inbounds i16, i16* %799, i64 2
  %807 = load i16, i16* %806, align 2
  store i16 %807, i16* %805, align 2
  %808 = getelementptr inbounds i16, i16* %800, i64 3
  %809 = getelementptr inbounds i16, i16* %799, i64 3
  %810 = load i16, i16* %809, align 2
  store i16 %810, i16* %808, align 2
  %811 = getelementptr inbounds i16, i16* %800, i64 4
  %812 = getelementptr inbounds i16, i16* %799, i64 4
  %813 = load i16, i16* %812, align 2
  store i16 %813, i16* %811, align 2
  %814 = getelementptr inbounds i16, i16* %800, i64 5
  %815 = getelementptr inbounds i16, i16* %799, i64 5
  %816 = load i16, i16* %815, align 2
  store i16 %816, i16* %814, align 2
  %817 = getelementptr inbounds i16, i16* %800, i64 6
  %818 = getelementptr inbounds i16, i16* %799, i64 6
  %819 = load i16, i16* %818, align 2
  store i16 %819, i16* %817, align 2
  %820 = getelementptr inbounds i16, i16* %800, i64 7
  %821 = getelementptr inbounds i16, i16* %799, i64 7
  %822 = load i16, i16* %821, align 2
  store i16 %822, i16* %820, align 2
  %823 = add i64 %798, -8
  %824 = getelementptr inbounds i16, i16* %800, i64 8
  %825 = getelementptr inbounds i16, i16* %799, i64 8
  %826 = icmp eq i64 %823, 0
  br i1 %826, label %827, label %797, !llvm.loop !24

827:                                              ; preds = %792, %797, %772, %651
  %828 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %645, i64 1
  %829 = ptrtoint %"class.std::__1::basic_string.6"* %828 to i64
  store i64 %829, i64* %124, align 8
  br label %831

830:                                              ; preds = %644
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.4"* nonnull %19, %"class.std::__1::basic_string.6"* nonnull dereferenceable(24) %16) #12
  br label %831

831:                                              ; preds = %827, %830
  %832 = load i8, i8* %131, align 1
  %833 = icmp slt i8 %832, 0
  br i1 %833, label %834, label %836

834:                                              ; preds = %831
  %835 = load i16*, i16** %52, align 8
  store i16 0, i16* %835, align 2
  store i64 0, i64* %53, align 8
  br label %837

836:                                              ; preds = %831
  store i16 0, i16* %132, align 8
  store i8 0, i8* %131, align 1
  br label %837

837:                                              ; preds = %836, %834, %641
  %838 = phi i8 [ %182, %641 ], [ 0, %834 ], [ 0, %836 ]
  %839 = load i8, i8* %17, align 1, !range !25
  %840 = icmp eq i8 %839, 0
  %841 = icmp ne i64 %183, 0
  %842 = or i1 %841, %840
  br i1 %842, label %1102, label %843

843:                                              ; preds = %837
  %844 = load i64, i64* %124, align 8
  %845 = load i64, i64* %125, align 8
  %846 = sub i64 %844, %845
  %847 = sdiv exact i64 %846, 24
  br label %1102

848:                                              ; preds = %631
  %849 = load i8, i8* %77, align 1
  %850 = icmp slt i8 %849, 0
  %851 = load i8*, i8** %74, align 8
  %852 = select i1 %850, i8* %851, i8* %73
  %853 = load i64, i64* %75, align 8
  %854 = zext i8 %849 to i64
  %855 = select i1 %850, i64 %853, i64 %854
  %856 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %852, i64 %855, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, i32 1) #12
  br i1 %856, label %857, label %1102

857:                                              ; preds = %848
  %858 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %57, align 8
  %859 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %58, align 8
  %860 = icmp eq %"class.std::__1::basic_string.6"* %858, %859
  br i1 %860, label %1102, label %861

861:                                              ; preds = %857
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #12
  %862 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %859, i64 -1
  %863 = bitcast %"class.std::__1::basic_string.6"* %862 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %864 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %863, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 -86, i64 24, i1 false)
  %865 = load i8, i8* %864, align 1
  %866 = icmp slt i8 %865, 0
  br i1 %866, label %869, label %867

867:                                              ; preds = %861
  %868 = bitcast %"class.std::__1::basic_string.6"* %862 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %113, i8* align 8 %868, i64 24, i1 false) #12
  br label %1041

869:                                              ; preds = %861
  %870 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %862, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %871 = load i16*, i16** %870, align 8
  %872 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %859, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %873 = load i64, i64* %872, align 8
  %874 = icmp ult i64 %873, 11
  br i1 %874, label %875, label %877

875:                                              ; preds = %869
  %876 = trunc i64 %873 to i8
  store i8 %876, i8* %119, align 1
  br label %891

877:                                              ; preds = %869
  %878 = icmp ugt i64 %873, 9223372036854775791
  br i1 %878, label %879, label %881

879:                                              ; preds = %877
  %880 = bitcast %"class.std::__1::basic_string.6"* %32 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %880) #14
  unreachable

881:                                              ; preds = %877
  %882 = add nuw nsw i64 %873, 8
  %883 = and i64 %882, -8
  %884 = icmp slt i64 %883, 0
  br i1 %884, label %885, label %886

885:                                              ; preds = %881
  call void @abort() #14
  unreachable

886:                                              ; preds = %881
  %887 = shl i64 %883, 1
  %888 = call i8* @_Znwm(i64 %887) #13
  %889 = bitcast i8* %888 to i16*
  store i8* %888, i8** %116, align 8
  %890 = or i64 %883, -9223372036854775808
  store i64 %890, i64* %115, align 8
  store i64 %873, i64* %114, align 8
  br label %891

891:                                              ; preds = %886, %875
  %892 = phi i16* [ %117, %875 ], [ %889, %886 ]
  %893 = add nuw nsw i64 %873, 1
  %894 = add i64 %873, 1
  %895 = icmp ult i64 %894, 16
  br i1 %895, label %986, label %896

896:                                              ; preds = %891
  %897 = getelementptr i16, i16* %892, i64 1
  %898 = getelementptr i16, i16* %897, i64 %873
  %899 = getelementptr i16, i16* %871, i64 1
  %900 = getelementptr i16, i16* %899, i64 %873
  %901 = icmp ult i16* %892, %900
  %902 = icmp ult i16* %871, %898
  %903 = and i1 %901, %902
  br i1 %903, label %986, label %904

904:                                              ; preds = %896
  %905 = and i64 %894, -16
  %906 = sub i64 %893, %905
  %907 = getelementptr i16, i16* %871, i64 %905
  %908 = getelementptr i16, i16* %892, i64 %905
  %909 = add i64 %905, -16
  %910 = lshr exact i64 %909, 4
  %911 = add nuw nsw i64 %910, 1
  %912 = and i64 %911, 3
  %913 = icmp ult i64 %909, 48
  br i1 %913, label %965, label %914

914:                                              ; preds = %904
  %915 = sub nsw i64 %911, %912
  br label %916

916:                                              ; preds = %916, %914
  %917 = phi i64 [ 0, %914 ], [ %962, %916 ]
  %918 = phi i64 [ %915, %914 ], [ %963, %916 ]
  %919 = getelementptr i16, i16* %871, i64 %917
  %920 = getelementptr i16, i16* %892, i64 %917
  %921 = bitcast i16* %919 to <8 x i16>*
  %922 = load <8 x i16>, <8 x i16>* %921, align 2, !alias.scope !26
  %923 = getelementptr i16, i16* %919, i64 8
  %924 = bitcast i16* %923 to <8 x i16>*
  %925 = load <8 x i16>, <8 x i16>* %924, align 2, !alias.scope !26
  %926 = bitcast i16* %920 to <8 x i16>*
  store <8 x i16> %922, <8 x i16>* %926, align 2, !alias.scope !29, !noalias !26
  %927 = getelementptr i16, i16* %920, i64 8
  %928 = bitcast i16* %927 to <8 x i16>*
  store <8 x i16> %925, <8 x i16>* %928, align 2, !alias.scope !29, !noalias !26
  %929 = or i64 %917, 16
  %930 = getelementptr i16, i16* %871, i64 %929
  %931 = getelementptr i16, i16* %892, i64 %929
  %932 = bitcast i16* %930 to <8 x i16>*
  %933 = load <8 x i16>, <8 x i16>* %932, align 2, !alias.scope !26
  %934 = getelementptr i16, i16* %930, i64 8
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !26
  %937 = bitcast i16* %931 to <8 x i16>*
  store <8 x i16> %933, <8 x i16>* %937, align 2, !alias.scope !29, !noalias !26
  %938 = getelementptr i16, i16* %931, i64 8
  %939 = bitcast i16* %938 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %939, align 2, !alias.scope !29, !noalias !26
  %940 = or i64 %917, 32
  %941 = getelementptr i16, i16* %871, i64 %940
  %942 = getelementptr i16, i16* %892, i64 %940
  %943 = bitcast i16* %941 to <8 x i16>*
  %944 = load <8 x i16>, <8 x i16>* %943, align 2, !alias.scope !26
  %945 = getelementptr i16, i16* %941, i64 8
  %946 = bitcast i16* %945 to <8 x i16>*
  %947 = load <8 x i16>, <8 x i16>* %946, align 2, !alias.scope !26
  %948 = bitcast i16* %942 to <8 x i16>*
  store <8 x i16> %944, <8 x i16>* %948, align 2, !alias.scope !29, !noalias !26
  %949 = getelementptr i16, i16* %942, i64 8
  %950 = bitcast i16* %949 to <8 x i16>*
  store <8 x i16> %947, <8 x i16>* %950, align 2, !alias.scope !29, !noalias !26
  %951 = or i64 %917, 48
  %952 = getelementptr i16, i16* %871, i64 %951
  %953 = getelementptr i16, i16* %892, i64 %951
  %954 = bitcast i16* %952 to <8 x i16>*
  %955 = load <8 x i16>, <8 x i16>* %954, align 2, !alias.scope !26
  %956 = getelementptr i16, i16* %952, i64 8
  %957 = bitcast i16* %956 to <8 x i16>*
  %958 = load <8 x i16>, <8 x i16>* %957, align 2, !alias.scope !26
  %959 = bitcast i16* %953 to <8 x i16>*
  store <8 x i16> %955, <8 x i16>* %959, align 2, !alias.scope !29, !noalias !26
  %960 = getelementptr i16, i16* %953, i64 8
  %961 = bitcast i16* %960 to <8 x i16>*
  store <8 x i16> %958, <8 x i16>* %961, align 2, !alias.scope !29, !noalias !26
  %962 = add i64 %917, 64
  %963 = add i64 %918, -4
  %964 = icmp eq i64 %963, 0
  br i1 %964, label %965, label %916, !llvm.loop !31

965:                                              ; preds = %916, %904
  %966 = phi i64 [ 0, %904 ], [ %962, %916 ]
  %967 = icmp eq i64 %912, 0
  br i1 %967, label %984, label %968

968:                                              ; preds = %965, %968
  %969 = phi i64 [ %981, %968 ], [ %966, %965 ]
  %970 = phi i64 [ %982, %968 ], [ %912, %965 ]
  %971 = getelementptr i16, i16* %871, i64 %969
  %972 = getelementptr i16, i16* %892, i64 %969
  %973 = bitcast i16* %971 to <8 x i16>*
  %974 = load <8 x i16>, <8 x i16>* %973, align 2, !alias.scope !26
  %975 = getelementptr i16, i16* %971, i64 8
  %976 = bitcast i16* %975 to <8 x i16>*
  %977 = load <8 x i16>, <8 x i16>* %976, align 2, !alias.scope !26
  %978 = bitcast i16* %972 to <8 x i16>*
  store <8 x i16> %974, <8 x i16>* %978, align 2, !alias.scope !29, !noalias !26
  %979 = getelementptr i16, i16* %972, i64 8
  %980 = bitcast i16* %979 to <8 x i16>*
  store <8 x i16> %977, <8 x i16>* %980, align 2, !alias.scope !29, !noalias !26
  %981 = add i64 %969, 16
  %982 = add i64 %970, -1
  %983 = icmp eq i64 %982, 0
  br i1 %983, label %984, label %968, !llvm.loop !32

984:                                              ; preds = %968, %965
  %985 = icmp eq i64 %894, %905
  br i1 %985, label %1039, label %986

986:                                              ; preds = %984, %896, %891
  %987 = phi i64 [ %893, %896 ], [ %893, %891 ], [ %906, %984 ]
  %988 = phi i16* [ %871, %896 ], [ %871, %891 ], [ %907, %984 ]
  %989 = phi i16* [ %892, %896 ], [ %892, %891 ], [ %908, %984 ]
  %990 = add i64 %987, -1
  %991 = and i64 %987, 7
  %992 = icmp eq i64 %991, 0
  br i1 %992, label %1004, label %993

993:                                              ; preds = %986, %993
  %994 = phi i64 [ %999, %993 ], [ %987, %986 ]
  %995 = phi i16* [ %1001, %993 ], [ %988, %986 ]
  %996 = phi i16* [ %1000, %993 ], [ %989, %986 ]
  %997 = phi i64 [ %1002, %993 ], [ %991, %986 ]
  %998 = load i16, i16* %995, align 2
  store i16 %998, i16* %996, align 2
  %999 = add i64 %994, -1
  %1000 = getelementptr inbounds i16, i16* %996, i64 1
  %1001 = getelementptr inbounds i16, i16* %995, i64 1
  %1002 = add i64 %997, -1
  %1003 = icmp eq i64 %1002, 0
  br i1 %1003, label %1004, label %993, !llvm.loop !33

1004:                                             ; preds = %993, %986
  %1005 = phi i64 [ %987, %986 ], [ %999, %993 ]
  %1006 = phi i16* [ %988, %986 ], [ %1001, %993 ]
  %1007 = phi i16* [ %989, %986 ], [ %1000, %993 ]
  %1008 = icmp ult i64 %990, 7
  br i1 %1008, label %1039, label %1009

1009:                                             ; preds = %1004, %1009
  %1010 = phi i64 [ %1035, %1009 ], [ %1005, %1004 ]
  %1011 = phi i16* [ %1037, %1009 ], [ %1006, %1004 ]
  %1012 = phi i16* [ %1036, %1009 ], [ %1007, %1004 ]
  %1013 = load i16, i16* %1011, align 2
  store i16 %1013, i16* %1012, align 2
  %1014 = getelementptr inbounds i16, i16* %1012, i64 1
  %1015 = getelementptr inbounds i16, i16* %1011, i64 1
  %1016 = load i16, i16* %1015, align 2
  store i16 %1016, i16* %1014, align 2
  %1017 = getelementptr inbounds i16, i16* %1012, i64 2
  %1018 = getelementptr inbounds i16, i16* %1011, i64 2
  %1019 = load i16, i16* %1018, align 2
  store i16 %1019, i16* %1017, align 2
  %1020 = getelementptr inbounds i16, i16* %1012, i64 3
  %1021 = getelementptr inbounds i16, i16* %1011, i64 3
  %1022 = load i16, i16* %1021, align 2
  store i16 %1022, i16* %1020, align 2
  %1023 = getelementptr inbounds i16, i16* %1012, i64 4
  %1024 = getelementptr inbounds i16, i16* %1011, i64 4
  %1025 = load i16, i16* %1024, align 2
  store i16 %1025, i16* %1023, align 2
  %1026 = getelementptr inbounds i16, i16* %1012, i64 5
  %1027 = getelementptr inbounds i16, i16* %1011, i64 5
  %1028 = load i16, i16* %1027, align 2
  store i16 %1028, i16* %1026, align 2
  %1029 = getelementptr inbounds i16, i16* %1012, i64 6
  %1030 = getelementptr inbounds i16, i16* %1011, i64 6
  %1031 = load i16, i16* %1030, align 2
  store i16 %1031, i16* %1029, align 2
  %1032 = getelementptr inbounds i16, i16* %1012, i64 7
  %1033 = getelementptr inbounds i16, i16* %1011, i64 7
  %1034 = load i16, i16* %1033, align 2
  store i16 %1034, i16* %1032, align 2
  %1035 = add i64 %1010, -8
  %1036 = getelementptr inbounds i16, i16* %1012, i64 8
  %1037 = getelementptr inbounds i16, i16* %1011, i64 8
  %1038 = icmp eq i64 %1035, 0
  br i1 %1038, label %1039, label %1009, !llvm.loop !34

1039:                                             ; preds = %1004, %1009, %984
  %1040 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %58, align 8
  br label %1041

1041:                                             ; preds = %1039, %867
  %1042 = phi %"class.std::__1::basic_string.6"* [ %1040, %1039 ], [ %859, %867 ]
  %1043 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1042, i64 -1
  %1044 = bitcast %"class.std::__1::basic_string.6"* %1043 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1045 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1044, i64 0, i32 1, i32 1
  %1046 = load i8, i8* %1045, align 1
  %1047 = icmp slt i8 %1046, 0
  br i1 %1047, label %1048, label %1051

1048:                                             ; preds = %1041
  %1049 = bitcast %"class.std::__1::basic_string.6"* %1043 to i8**
  %1050 = load i8*, i8** %1049, align 8
  call void @_ZdlPv(i8* %1050) #13
  br label %1051

1051:                                             ; preds = %1041, %1048
  store %"class.std::__1::basic_string.6"* %1043, %"class.std::__1::basic_string.6"** %58, align 8
  %1052 = and i8 %632, 1
  %1053 = icmp eq i8 %1052, 0
  %1054 = ptrtoint %"class.std::__1::basic_string.6"* %1043 to i64
  br i1 %1053, label %1089, label %1055

1055:                                             ; preds = %1051
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %120) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 184, i1 false)
  call void @_ZN21ImportedBookmarkEntryC1Ev(%struct.ImportedBookmarkEntry* nonnull %33) #12
  store i8 1, i8* %121, align 1
  %1056 = load i64, i64* %55, align 8
  store i64 %1056, i64* %122, align 8
  %1057 = call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %123, %"class.std::__1::basic_string.6"* nonnull dereferenceable(24) %32)
  %1058 = icmp eq i64 %183, 0
  br i1 %1058, label %1077, label %1059

1059:                                             ; preds = %1055
  %1060 = load i64, i64* %124, align 8
  %1061 = load i64, i64* %125, align 8
  %1062 = sub i64 %1060, %1061
  %1063 = sdiv exact i64 %1062, 24
  %1064 = icmp ugt i64 %183, %1063
  br i1 %1064, label %1087, label %1065

1065:                                             ; preds = %1059
  %1066 = inttoptr i64 %1060 to %"class.std::__1::basic_string.6"*
  %1067 = inttoptr i64 %1061 to %"class.std::__1::basic_string.6"*
  store i8 1, i8* %120, align 8
  %1068 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1067, i64 -1
  %1069 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1068, i64 %183
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignINS_11__wrap_iterIPS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueEvE4typeESE_SE_(%"class.std::__1::vector.4"* %126, %"class.std::__1::basic_string.6"* %1069, %"class.std::__1::basic_string.6"* %1066)
  %1070 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %127, align 8
  %1071 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %128, align 8
  %1072 = icmp eq %struct.ImportedBookmarkEntry* %1070, %1071
  br i1 %1072, label %1076, label %1073

1073:                                             ; preds = %1065
  call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %1070, %struct.ImportedBookmarkEntry* nonnull dereferenceable(184) %33) #12
  %1074 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1070, i64 1
  %1075 = ptrtoint %struct.ImportedBookmarkEntry* %1074 to i64
  store i64 %1075, i64* %129, align 8
  br label %1087

1076:                                             ; preds = %1065
  call void @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"* %3, %struct.ImportedBookmarkEntry* nonnull dereferenceable(184) %33) #12
  br label %1087

1077:                                             ; preds = %1055
  %1078 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %57, align 8
  %1079 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %58, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignINS_11__wrap_iterIPS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueEvE4typeESE_SE_(%"class.std::__1::vector.4"* %126, %"class.std::__1::basic_string.6"* %1078, %"class.std::__1::basic_string.6"* %1079)
  %1080 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %127, align 8
  %1081 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %128, align 8
  %1082 = icmp eq %struct.ImportedBookmarkEntry* %1080, %1081
  br i1 %1082, label %1086, label %1083

1083:                                             ; preds = %1077
  call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %1080, %struct.ImportedBookmarkEntry* nonnull dereferenceable(184) %33) #12
  %1084 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1080, i64 1
  %1085 = ptrtoint %struct.ImportedBookmarkEntry* %1084 to i64
  store i64 %1085, i64* %129, align 8
  br label %1087

1086:                                             ; preds = %1077
  call void @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"* %3, %struct.ImportedBookmarkEntry* nonnull dereferenceable(184) %33) #12
  br label %1087

1087:                                             ; preds = %1086, %1083, %1076, %1073, %1059
  call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %120) #12
  %1088 = load i64, i64* %124, align 8
  br label %1089

1089:                                             ; preds = %1051, %1087
  %1090 = phi i64 [ %1088, %1087 ], [ %1054, %1051 ]
  %1091 = phi i8 [ 0, %1087 ], [ %632, %1051 ]
  %1092 = load i64, i64* %125, align 8
  %1093 = sub i64 %1090, %1092
  %1094 = sdiv exact i64 %1093, 24
  %1095 = icmp ugt i64 %183, %1094
  %1096 = select i1 %1095, i64 0, i64 %183
  %1097 = load i8, i8* %119, align 1
  %1098 = icmp slt i8 %1097, 0
  br i1 %1098, label %1099, label %1101

1099:                                             ; preds = %1089
  %1100 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %1100) #13
  br label %1101

1101:                                             ; preds = %1089, %1099
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #12
  br label %1102

1102:                                             ; preds = %1101, %848, %837, %843, %857, %317, %630, %295
  %1103 = phi i32 [ 4, %630 ], [ 4, %295 ], [ 2, %317 ], [ 2, %857 ], [ 0, %843 ], [ 0, %837 ], [ 0, %848 ], [ 0, %1101 ]
  %1104 = phi i64 [ %183, %630 ], [ %183, %295 ], [ %183, %317 ], [ %183, %857 ], [ %847, %843 ], [ %183, %837 ], [ %183, %848 ], [ %1096, %1101 ]
  %1105 = phi i8 [ %534, %630 ], [ %182, %295 ], [ %182, %317 ], [ %182, %857 ], [ %838, %843 ], [ %838, %837 ], [ %182, %848 ], [ %182, %1101 ]
  %1106 = phi i8 [ %181, %630 ], [ %181, %295 ], [ %181, %317 ], [ %181, %857 ], [ 1, %843 ], [ 1, %837 ], [ %181, %848 ], [ %181, %1101 ]
  %1107 = phi i8 [ 0, %630 ], [ %180, %295 ], [ 0, %317 ], [ %632, %857 ], [ 1, %843 ], [ 1, %837 ], [ %632, %848 ], [ %1091, %1101 ]
  %1108 = load i8, i8* %97, align 1
  %1109 = icmp slt i8 %1108, 0
  br i1 %1109, label %1110, label %1112

1110:                                             ; preds = %1102
  %1111 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %1111) #13
  br label %1112

1112:                                             ; preds = %1102, %1110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #12
  %1113 = load i8, i8* %91, align 1
  %1114 = icmp slt i8 %1113, 0
  br i1 %1114, label %1115, label %1117

1115:                                             ; preds = %1112
  %1116 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %1116) #13
  br label %1117

1117:                                             ; preds = %1112, %1115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %82) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %81) #12
  %1118 = load i8, i8* %93, align 1
  %1119 = icmp slt i8 %1118, 0
  br i1 %1119, label %1120, label %1122

1120:                                             ; preds = %1117
  %1121 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %1121) #13
  br label %1122

1122:                                             ; preds = %1117, %1120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #12
  %1123 = load i8, i8* %176, align 1
  %1124 = icmp slt i8 %1123, 0
  br i1 %1124, label %1125, label %1127

1125:                                             ; preds = %1122
  %1126 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %1126) #13
  br label %1127

1127:                                             ; preds = %1122, %1125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #12
  br label %1128

1128:                                             ; preds = %235, %233, %1127
  %1129 = phi i32 [ %1103, %1127 ], [ 4, %233 ], [ 4, %235 ]
  %1130 = phi i64 [ %1104, %1127 ], [ %183, %233 ], [ %183, %235 ]
  %1131 = phi i8 [ %1105, %1127 ], [ %182, %233 ], [ 1, %235 ]
  %1132 = phi i8 [ %1106, %1127 ], [ %181, %233 ], [ %181, %235 ]
  %1133 = phi i8 [ %1107, %1127 ], [ %180, %233 ], [ %180, %235 ]
  %1134 = load i8, i8* %77, align 1
  %1135 = icmp slt i8 %1134, 0
  br i1 %1135, label %1136, label %1138

1136:                                             ; preds = %1128
  %1137 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %1137) #13
  br label %1138

1138:                                             ; preds = %1128, %1136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #12
  switch i32 %1129, label %1146 [
    i32 0, label %1139
    i32 4, label %1139
  ]

1139:                                             ; preds = %1138, %1138
  %1140 = add nuw i64 %184, 1
  %1141 = load i64, i64* %66, align 8
  %1142 = load i64, i64* %68, align 8
  %1143 = sub i64 %1141, %1142
  %1144 = sdiv exact i64 %1143, 24
  %1145 = icmp ult i64 %1140, %1144
  br i1 %1145, label %179, label %1146

1146:                                             ; preds = %1138, %187, %1139
  %1147 = load i8, i8* %63, align 1
  %1148 = icmp slt i8 %1147, 0
  br i1 %1148, label %1149, label %1151

1149:                                             ; preds = %1146
  %1150 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %1150) #13
  br label %1151

1151:                                             ; preds = %6, %1146, %1149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  %1152 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %57, align 8
  %1153 = icmp eq %"class.std::__1::basic_string.6"* %1152, null
  br i1 %1153, label %1175, label %1154

1154:                                             ; preds = %1151
  %1155 = bitcast %"class.std::__1::basic_string.6"* %1152 to i8*
  %1156 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %58, align 8
  %1157 = icmp eq %"class.std::__1::basic_string.6"* %1156, %1152
  br i1 %1157, label %1173, label %1158

1158:                                             ; preds = %1154, %1168
  %1159 = phi %"class.std::__1::basic_string.6"* [ %1160, %1168 ], [ %1156, %1154 ]
  %1160 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1159, i64 -1
  %1161 = bitcast %"class.std::__1::basic_string.6"* %1160 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1162 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1161, i64 0, i32 1, i32 1
  %1163 = load i8, i8* %1162, align 1
  %1164 = icmp slt i8 %1163, 0
  br i1 %1164, label %1165, label %1168

1165:                                             ; preds = %1158
  %1166 = bitcast %"class.std::__1::basic_string.6"* %1160 to i8**
  %1167 = load i8*, i8** %1166, align 8
  call void @_ZdlPv(i8* %1167) #13
  br label %1168

1168:                                             ; preds = %1165, %1158
  %1169 = icmp eq %"class.std::__1::basic_string.6"* %1160, %1152
  br i1 %1169, label %1170, label %1158

1170:                                             ; preds = %1168
  %1171 = bitcast %"class.std::__1::vector.4"* %19 to i8**
  %1172 = load i8*, i8** %1171, align 8
  br label %1173

1173:                                             ; preds = %1170, %1154
  %1174 = phi i8* [ %1172, %1170 ], [ %1155, %1154 ]
  store %"class.std::__1::basic_string.6"* %1152, %"class.std::__1::basic_string.6"** %58, align 8
  call void @_ZdlPv(i8* %1174) #13
  br label %1175

1175:                                             ; preds = %1151, %1173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  %1176 = bitcast %"class.std::__1::basic_string.6"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1177 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1176, i64 0, i32 1, i32 1
  %1178 = load i8, i8* %1177, align 1
  %1179 = icmp slt i8 %1178, 0
  br i1 %1179, label %1180, label %1183

1180:                                             ; preds = %1175
  %1181 = bitcast %"class.std::__1::basic_string.6"* %16 to i8**
  %1182 = load i8*, i8** %1181, align 8
  call void @_ZdlPv(i8* %1182) #13
  br label %1183

1183:                                             ; preds = %1175, %1180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  %1184 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %1185 = icmp eq %"class.std::__1::basic_string"* %1184, null
  br i1 %1185, label %1207, label %1186

1186:                                             ; preds = %1183
  %1187 = bitcast %"class.std::__1::basic_string"* %1184 to i8*
  %1188 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %1189 = icmp eq %"class.std::__1::basic_string"* %1188, %1184
  br i1 %1189, label %1205, label %1190

1190:                                             ; preds = %1186, %1200
  %1191 = phi %"class.std::__1::basic_string"* [ %1192, %1200 ], [ %1188, %1186 ]
  %1192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1191, i64 -1
  %1193 = bitcast %"class.std::__1::basic_string"* %1192 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1193, i64 0, i32 1, i32 0
  %1195 = load i8, i8* %1194, align 1
  %1196 = icmp slt i8 %1195, 0
  br i1 %1196, label %1197, label %1200

1197:                                             ; preds = %1190
  %1198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1199 = load i8*, i8** %1198, align 8
  call void @_ZdlPv(i8* %1199) #13
  br label %1200

1200:                                             ; preds = %1197, %1190
  %1201 = icmp eq %"class.std::__1::basic_string"* %1192, %1184
  br i1 %1201, label %1202, label %1190

1202:                                             ; preds = %1200
  %1203 = bitcast %"class.std::__1::vector.56"* %15 to i8**
  %1204 = load i8*, i8** %1203, align 8
  br label %1205

1205:                                             ; preds = %1202, %1186
  %1206 = phi i8* [ %1204, %1202 ], [ %1187, %1186 ]
  store %"class.std::__1::basic_string"* %1184, %"class.std::__1::basic_string"** %40, align 8
  call void @_ZdlPv(i8* %1206) #13
  br label %1207

1207:                                             ; preds = %1183, %1205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  %1208 = load i8, i8* %42, align 1
  %1209 = icmp slt i8 %1208, 0
  br i1 %1209, label %1210, label %1212

1210:                                             ; preds = %1207
  %1211 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %1211) #13
  br label %1212

1212:                                             ; preds = %1207, %1210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.56"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20bookmark_html_reader8internal20ParseCharsetFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %6 to i64
  %15 = select i1 %7, i64 %13, i64 %14
  %16 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %11, i64 %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64 5, i32 1) #12
  br i1 %16, label %17, label %116

17:                                               ; preds = %2
  %18 = load i8, i8* %5, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %8, align 8
  %21 = select i1 %19, i8* %20, i8* %10
  %22 = load i64, i64* %12, align 8
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i64 %22, i64 %23
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  %26 = ptrtoint i8* %25 to i64
  %27 = ptrtoint i8* %21 to i64
  %28 = icmp slt i64 %24, 9
  br i1 %28, label %116, label %29

29:                                               ; preds = %17, %40
  %30 = phi i64 [ %43, %40 ], [ %24, %17 ]
  %31 = phi i8* [ %41, %40 ], [ %21, %17 ]
  %32 = add nsw i64 %30, -8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %51, label %34

34:                                               ; preds = %29
  %35 = tail call i8* @memchr(i8* %31, i32 67, i64 %32) #12
  %36 = icmp eq i8* %35, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %34
  %38 = tail call i32 @bcmp(i8* nonnull %35, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i64 9) #12
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds i8, i8* %35, i64 1
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %26, %42
  %44 = icmp slt i64 %43, 9
  br i1 %44, label %51, label %29

45:                                               ; preds = %37
  %46 = ptrtoint i8* %35 to i64
  %47 = icmp eq i8* %35, %25
  %48 = sub i64 %46, %27
  %49 = icmp eq i64 %48, -1
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %76

51:                                               ; preds = %40, %34, %29, %45
  br i1 %28, label %116, label %52

52:                                               ; preds = %51, %63
  %53 = phi i64 [ %66, %63 ], [ %24, %51 ]
  %54 = phi i8* [ %64, %63 ], [ %21, %51 ]
  %55 = add nsw i64 %53, -8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %116, label %57

57:                                               ; preds = %52
  %58 = tail call i8* @memchr(i8* %54, i32 99, i64 %55) #12
  %59 = icmp eq i8* %58, null
  br i1 %59, label %116, label %60

60:                                               ; preds = %57
  %61 = tail call i32 @bcmp(i8* nonnull %58, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i64 9) #12
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds i8, i8* %58, i64 1
  %65 = ptrtoint i8* %64 to i64
  %66 = sub i64 %26, %65
  %67 = icmp slt i64 %66, 9
  br i1 %67, label %116, label %52

68:                                               ; preds = %60
  %69 = ptrtoint i8* %58 to i64
  %70 = icmp eq i8* %58, %25
  %71 = sub i64 %69, %27
  %72 = icmp eq i64 %71, -1
  %73 = or i1 %70, %72
  %74 = icmp slt i64 %24, 8
  %75 = or i1 %73, %74
  br i1 %75, label %116, label %78

76:                                               ; preds = %45
  %77 = icmp slt i64 %24, 8
  br i1 %77, label %116, label %78

78:                                               ; preds = %68, %76
  br label %79

79:                                               ; preds = %78, %90
  %80 = phi i64 [ %93, %90 ], [ %24, %78 ]
  %81 = phi i8* [ %91, %90 ], [ %21, %78 ]
  %82 = add nsw i64 %80, -7
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %116, label %84

84:                                               ; preds = %79
  %85 = tail call i8* @memchr(i8* %81, i32 99, i64 %82) #12
  %86 = icmp eq i8* %85, null
  br i1 %86, label %116, label %87

87:                                               ; preds = %84
  %88 = tail call i32 @bcmp(i8* nonnull %85, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZN20bookmark_html_reader8internal20ParseCharsetFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_E8kCharset, i64 0, i64 0), i64 8) #12
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds i8, i8* %85, i64 1
  %92 = ptrtoint i8* %91 to i64
  %93 = sub i64 %26, %92
  %94 = icmp slt i64 %93, 8
  br i1 %94, label %116, label %79

95:                                               ; preds = %87
  %96 = ptrtoint i8* %85 to i64
  %97 = icmp eq i8* %85, %25
  %98 = sub i64 %96, %27
  %99 = icmp eq i64 %98, -1
  %100 = or i1 %97, %99
  br i1 %100, label %116, label %101

101:                                              ; preds = %95
  %102 = add i64 %98, 8
  %103 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 34, i64 %102) #12
  %104 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #12
  %105 = sub i64 %103, %102
  %106 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %102, i64 %105, %"class.std::__1::allocator"* dereferenceable(1) %106) #12
  %107 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %101
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #13
  br label %114

114:                                              ; preds = %111, %101
  %115 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %104, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #12
  br label %116

116:                                              ; preds = %63, %57, %52, %90, %84, %79, %17, %76, %51, %95, %68, %114, %2
  %117 = phi i1 [ false, %2 ], [ true, %114 ], [ false, %68 ], [ false, %95 ], [ false, %51 ], [ false, %76 ], [ false, %17 ], [ false, %79 ], [ false, %84 ], [ false, %90 ], [ false, %52 ], [ false, %57 ], [ false, %63 ]
  ret i1 %117
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20bookmark_html_reader8internal23ParseFolderNameFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEPbPN4base4TimeE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string.6"*, i8* nocapture, %"class.base::Time"* nocapture) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string.6", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN20bookmark_html_readerL7stripDtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  %18 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = load i8*, i8** %15, align 8
  %23 = select i1 %21, i8* %22, i8* %14
  %24 = load i64, i64* %16, align 8
  %25 = zext i8 %20 to i64
  %26 = select i1 %21, i64 %24, i64 %25
  %27 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %23, i64 %26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN20bookmark_html_reader8internal23ParseFolderNameFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEPbPN4base4TimeEE11kFolderOpen, i64 0, i64 0), i64 3, i32 0) #12
  br i1 %27, label %28, label %186

28:                                               ; preds = %5
  %29 = load i8, i8* %19, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %15, align 8
  %32 = select i1 %30, i8* %31, i8* %14
  %33 = load i64, i64* %16, align 8
  %34 = zext i8 %29 to i64
  %35 = select i1 %30, i64 %33, i64 %34
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = ptrtoint i8* %32 to i64
  %39 = icmp slt i64 %35, 5
  br i1 %39, label %60, label %40

40:                                               ; preds = %28, %51
  %41 = phi i64 [ %54, %51 ], [ %35, %28 ]
  %42 = phi i8* [ %52, %51 ], [ %32, %28 ]
  %43 = add nsw i64 %41, -4
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %40
  %46 = call i8* @memchr(i8* %42, i32 60, i64 %43) #12
  %47 = icmp eq i8* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %45
  %49 = call i32 @bcmp(i8* nonnull %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZN20bookmark_html_reader8internal23ParseFolderNameFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEPbPN4base4TimeEE12kFolderClose, i64 0, i64 0), i64 5) #12
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds i8, i8* %46, i64 1
  %53 = ptrtoint i8* %52 to i64
  %54 = sub i64 %37, %53
  %55 = icmp slt i64 %54, 5
  br i1 %55, label %60, label %40

56:                                               ; preds = %48
  %57 = ptrtoint i8* %46 to i64
  %58 = icmp eq i8* %46, %36
  %59 = sub i64 %57, %38
  br i1 %58, label %60, label %62

60:                                               ; preds = %51, %45, %40, %28, %56
  %61 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* nonnull %6, i8 signext 62, i64 -1) #12
  br label %186

62:                                               ; preds = %56
  %63 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* nonnull %6, i8 signext 62, i64 %59) #12
  %64 = icmp eq i64 %59, -1
  br i1 %64, label %186, label %65

65:                                               ; preds = %62
  %66 = add i64 %63, 1
  %67 = icmp ult i64 %66, 4
  br i1 %67, label %186, label %68

68:                                               ; preds = %65
  %69 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #12
  %70 = sub i64 %59, %66
  %71 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 %66, i64 %70, %"class.std::__1::allocator"* nonnull dereferenceable(1) %71) #12
  %72 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = select i1 %75, i8* %77, i8* %69
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %74 to i64
  %82 = select i1 %75, i64 %80, i64 %81
  %83 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %90 = select i1 %86, i8* %88, i8* %89
  %91 = call zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8* %78, i64 %82, i8* %90, i32 1, %"class.std::__1::basic_string.6"* %2) #12
  %92 = load i8, i8* %73, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %68
  %95 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %68, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #12
  %97 = bitcast %"class.std::__1::basic_string.6"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #12
  %98 = bitcast %"class.std::__1::basic_string.6"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i16*, i16** %102, align 8
  %104 = bitcast %"class.std::__1::basic_string.6"* %2 to i16*
  %105 = select i1 %101, i16* %103, i16* %104
  %106 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = zext i8 %100 to i64
  %109 = select i1 %101, i64 %107, i64 %108
  call void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %8, i16* %105, i64 %109) #12
  %110 = load i8, i8* %99, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %96
  %113 = bitcast %"class.std::__1::basic_string.6"* %2 to i8**
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #13
  br label %115

115:                                              ; preds = %96, %112
  %116 = bitcast %"class.std::__1::basic_string.6"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* nonnull align 8 %97, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #12
  %117 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #12
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = add i64 %63, -4
  %120 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 4, i64 %119, %"class.std::__1::allocator"* nonnull dereferenceable(1) %71) #12
  %121 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #12
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 24, i1 false) #12
  %124 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #12
  %125 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  store i8 8, i8* %126, align 1
  %127 = bitcast %"class.std::__1::basic_string"* %11 to i64*
  store i64 4995689648572613697, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = bitcast i64* %128 to i8*
  store i8 0, i8* %129, align 8
  %130 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, %"class.std::__1::basic_string"* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #12
  br i1 %130, label %131, label %150

131:                                              ; preds = %115
  %132 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #12
  store i64 -6148914691236517206, i64* %12, align 8
  %133 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  %137 = load i8*, i8** %122, align 8
  %138 = select i1 %136, i8* %137, i8* %121
  %139 = load i64, i64* %123, align 8
  %140 = zext i8 %135 to i64
  %141 = select i1 %136, i64 %139, i64 %140
  %142 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %138, i64 %141, i64* nonnull %12) #12
  %143 = load i64, i64* %12, align 8
  %144 = add i64 %143, -1
  %145 = icmp ult i64 %144, 4294967295
  br i1 %145, label %146, label %149

146:                                              ; preds = %131
  %147 = call i64 @_ZN4base4Time9FromTimeTEl(i64 %143) #12
  %148 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %147, i64* %148, align 8
  br label %149

149:                                              ; preds = %146, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #12
  br label %150

150:                                              ; preds = %149, %115
  %151 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #12
  %152 = call i8* @_Znwm(i64 32) #13
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %152, i8** %153, align 8
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %155 = bitcast i64* %154 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %155, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %152, i8* align 16 getelementptr inbounds ([24 x i8], [24 x i8]* @_ZZN20bookmark_html_reader8internal23ParseFolderNameFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEPbPN4base4TimeEE23kToolbarFolderAttribute, i64 0, i64 0), i64 23, i1 false) #12
  %156 = getelementptr inbounds i8, i8* %152, i64 23
  store i8 0, i8* %156, align 1
  %157 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, %"class.std::__1::basic_string"* nonnull %10)
  br i1 %157, label %158, label %170

158:                                              ; preds = %150
  %159 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  %163 = load i8*, i8** %122, align 8
  %164 = select i1 %162, i8* %163, i8* %121
  %165 = load i64, i64* %123, align 8
  %166 = zext i8 %161 to i64
  %167 = select i1 %162, i64 %165, i64 %166
  %168 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %164, i64 %167, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #12
  %169 = zext i1 %168 to i8
  br label %170

170:                                              ; preds = %158, %150
  %171 = phi i8 [ 0, %150 ], [ %169, %158 ]
  call void @_ZdlPv(i8* nonnull %152) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #12
  store i8 %171, i8* %3, align 1
  %172 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %170
  %177 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %177) #13
  br label %178

178:                                              ; preds = %170, %176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #12
  %179 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  %181 = load i8, i8* %180, align 1
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %178
  %184 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %178, %183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  br label %186

186:                                              ; preds = %60, %185, %65, %62, %5
  %187 = phi i1 [ false, %5 ], [ true, %185 ], [ false, %65 ], [ false, %62 ], [ false, %60 ]
  %188 = load i8, i8* %19, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %186
  %191 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %191) #13
  br label %192

192:                                              ; preds = %186, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret i1 %187
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string.6"*, %class.GURL*, %class.GURL*, %"class.std::__1::basic_string.6"*, %"class.base::Time"* nocapture, %"class.std::__1::basic_string.6"*) local_unnamed_addr #0 {
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %class.GURL, align 8
  %11 = alloca %class.GURL, align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string.6", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string.6", align 8
  %19 = alloca %"class.std::__1::basic_string.6", align 8
  %20 = alloca %class.GURL, align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %class.GURL, align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string.6", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca i64, align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string.6", align 8
  %29 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN20bookmark_html_readerL7stripDtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  %33 = bitcast %"class.std::__1::basic_string.6"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %8
  %38 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i16*, i16** %38, align 8
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %40, align 8
  br label %43

41:                                               ; preds = %8
  %42 = bitcast %"class.std::__1::basic_string.6"* %2 to i16*
  store i16 0, i16* %42, align 2
  store i8 0, i8* %34, align 1
  br label %43

43:                                               ; preds = %37, %41
  %44 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %44) #12
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %10) #12
  %45 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %3, %class.GURL* nonnull dereferenceable(120) %10) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %44) #12
  %46 = bitcast %class.GURL* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %46) #12
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %11) #12
  %47 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %4, %class.GURL* nonnull dereferenceable(120) %11) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %46) #12
  %48 = bitcast %"class.std::__1::basic_string.6"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  store i16 0, i16* %54, align 2
  %55 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %55, align 8
  br label %58

56:                                               ; preds = %43
  %57 = bitcast %"class.std::__1::basic_string.6"* %5 to i16*
  store i16 0, i16* %57, align 2
  store i8 0, i8* %49, align 1
  br label %58

58:                                               ; preds = %52, %56
  %59 = bitcast %"class.std::__1::basic_string.6"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i16*, i16** %64, align 8
  store i16 0, i16* %65, align 2
  %66 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %66, align 8
  br label %69

67:                                               ; preds = %58
  %68 = bitcast %"class.std::__1::basic_string.6"* %7 to i16*
  store i16 0, i16* %68, align 2
  store i8 0, i8* %60, align 1
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  store i64 0, i64* %70, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = load i8*, i8** %30, align 8
  %76 = select i1 %74, i8* %75, i8* %29
  %77 = load i64, i64* %31, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %76, i64 %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E9kItemOpen, i64 0, i64 0), i64 2, i32 0) #12
  br i1 %80, label %81, label %376

81:                                               ; preds = %69
  %82 = load i8, i8* %72, align 1
  %83 = icmp slt i8 %82, 0
  %84 = load i8*, i8** %30, align 8
  %85 = select i1 %83, i8* %84, i8* %29
  %86 = load i64, i64* %31, align 8
  %87 = zext i8 %82 to i64
  %88 = select i1 %83, i64 %86, i64 %87
  %89 = getelementptr inbounds i8, i8* %85, i64 %88
  %90 = ptrtoint i8* %89 to i64
  %91 = ptrtoint i8* %85 to i64
  %92 = icmp slt i64 %88, 4
  br i1 %92, label %113, label %93

93:                                               ; preds = %81, %104
  %94 = phi i64 [ %107, %104 ], [ %88, %81 ]
  %95 = phi i8* [ %105, %104 ], [ %85, %81 ]
  %96 = add nsw i64 %94, -3
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %93
  %99 = call i8* @memchr(i8* %95, i32 60, i64 %96) #12
  %100 = icmp eq i8* %99, null
  br i1 %100, label %113, label %101

101:                                              ; preds = %98
  %102 = call i32 @bcmp(i8* nonnull %99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E10kItemClose, i64 0, i64 0), i64 4) #12
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds i8, i8* %99, i64 1
  %106 = ptrtoint i8* %105 to i64
  %107 = sub i64 %90, %106
  %108 = icmp slt i64 %107, 4
  br i1 %108, label %113, label %93

109:                                              ; preds = %101
  %110 = ptrtoint i8* %99 to i64
  %111 = icmp eq i8* %99, %89
  %112 = sub i64 %110, %91
  br i1 %111, label %113, label %115

113:                                              ; preds = %104, %98, %93, %81, %109
  %114 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* nonnull %9, i8 signext 62, i64 -1) #12
  br label %376

115:                                              ; preds = %109
  %116 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* nonnull %9, i8 signext 62, i64 %112) #12
  %117 = icmp eq i64 %112, -1
  br i1 %117, label %376, label %118

118:                                              ; preds = %115
  %119 = add i64 %116, 1
  %120 = icmp ult i64 %119, 3
  br i1 %120, label %376, label %121

121:                                              ; preds = %118
  %122 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #12
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = add i64 %116, -3
  %125 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::allocator"*
  %126 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i64 3, i64 %124, %"class.std::__1::allocator"* nonnull dereferenceable(1) %125) #12
  %127 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #12
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 24, i1 false) #12
  %130 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #12
  %131 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  store i8 7, i8* %132, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E17kFeedURLAttribute, i64 0, i64 0), i64 7, i1 false) #12
  %133 = getelementptr inbounds i8, i8* %130, i64 7
  store i8 0, i8* %133, align 1
  %134 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, %"class.std::__1::basic_string"* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #12
  br i1 %134, label %360, label %135

135:                                              ; preds = %121
  %136 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #12
  %137 = sub i64 %112, %119
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i64 %119, i64 %137, %"class.std::__1::allocator"* nonnull dereferenceable(1) %125) #12
  %138 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = select i1 %141, i8* %143, i8* %136
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = zext i8 %140 to i64
  %148 = select i1 %141, i64 %146, i64 %147
  %149 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %156 = select i1 %152, i8* %154, i8* %155
  %157 = call zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8* %144, i64 %148, i8* %156, i32 1, %"class.std::__1::basic_string.6"* %2) #12
  %158 = load i8, i8* %139, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %135
  %161 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %161) #13
  br label %162

162:                                              ; preds = %135, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #12
  %163 = bitcast %"class.std::__1::basic_string.6"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #12
  %164 = load i8, i8* %34, align 1
  %165 = icmp slt i8 %164, 0
  %166 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load i16*, i16** %166, align 8
  %168 = bitcast %"class.std::__1::basic_string.6"* %2 to i16*
  %169 = select i1 %165, i16* %167, i16* %168
  %170 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %171 = load i64, i64* %170, align 8
  %172 = zext i8 %164 to i64
  %173 = select i1 %165, i64 %171, i64 %172
  call void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %16, i16* %169, i64 %173) #12
  %174 = load i8, i8* %34, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %162
  %177 = bitcast %"class.std::__1::basic_string.6"* %2 to i8**
  %178 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %178) #13
  br label %179

179:                                              ; preds = %162, %176
  %180 = bitcast %"class.std::__1::basic_string.6"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* nonnull align 8 %163, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #12
  %181 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #12
  %182 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  store i8 4, i8* %183, align 1
  %184 = bitcast %"class.std::__1::basic_string"* %17 to i32*
  store i32 1178948168, i32* %184, align 8
  %185 = getelementptr inbounds i8, i8* %181, i64 4
  store i8 0, i8* %185, align 4
  %186 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17, %"class.std::__1::basic_string"* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #12
  br i1 %186, label %187, label %237

187:                                              ; preds = %179
  %188 = bitcast %"class.std::__1::basic_string.6"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #12
  %189 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 0, i64 24, i1 false) #12
  %191 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  %195 = load i8*, i8** %128, align 8
  %196 = select i1 %194, i8* %195, i8* %127
  %197 = load i64, i64* %129, align 8
  %198 = zext i8 %193 to i64
  %199 = select i1 %194, i64 %197, i64 %198
  %200 = load i8, i8* %150, align 1
  %201 = icmp slt i8 %200, 0
  %202 = load i8*, i8** %153, align 8
  %203 = select i1 %201, i8* %202, i8* %155
  %204 = call zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8* %196, i64 %199, i8* %203, i32 1, %"class.std::__1::basic_string.6"* nonnull %18) #12
  %205 = bitcast %"class.std::__1::basic_string.6"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #12
  %206 = bitcast %"class.std::__1::basic_string.6"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  %210 = load i16*, i16** %189, align 8
  %211 = bitcast %"class.std::__1::basic_string.6"* %18 to i16*
  %212 = select i1 %209, i16* %210, i16* %211
  %213 = load i64, i64* %190, align 8
  %214 = zext i8 %208 to i64
  %215 = select i1 %209, i64 %213, i64 %214
  call void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %19, i16* %212, i64 %215) #12
  %216 = load i8, i8* %207, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %187
  %219 = bitcast %"class.std::__1::basic_string.6"* %18 to i8**
  %220 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %220) #13
  br label %221

221:                                              ; preds = %218, %187
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %188, i8* nonnull align 8 %205, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #12
  %222 = bitcast %class.GURL* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %222) #12
  %223 = load i8, i8* %207, align 1
  %224 = icmp slt i8 %223, 0
  %225 = load i16*, i16** %189, align 8
  %226 = select i1 %224, i16* %225, i16* %211
  %227 = load i64, i64* %190, align 8
  %228 = zext i8 %223 to i64
  %229 = select i1 %224, i64 %227, i64 %228
  call void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL* nonnull %20, i16* %226, i64 %229) #12
  %230 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %3, %class.GURL* nonnull dereferenceable(120) %20) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %222) #12
  %231 = load i8, i8* %207, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %221
  %234 = bitcast %"class.std::__1::basic_string.6"* %18 to i8**
  %235 = load i8*, i8** %234, align 8
  call void @_ZdlPv(i8* %235) #13
  br label %236

236:                                              ; preds = %221, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #12
  br label %237

237:                                              ; preds = %179, %236
  %238 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #12
  %239 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  store i8 4, i8* %240, align 1
  %241 = bitcast %"class.std::__1::basic_string"* %21 to i32*
  store i32 1313817417, i32* %241, align 8
  %242 = getelementptr inbounds i8, i8* %238, i64 4
  store i8 0, i8* %242, align 4
  %243 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21, %"class.std::__1::basic_string"* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #12
  br i1 %243, label %244, label %256

244:                                              ; preds = %237
  %245 = bitcast %class.GURL* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %245) #12
  %246 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %246, i64 0, i32 1, i32 0
  %248 = load i8, i8* %247, align 1
  %249 = icmp slt i8 %248, 0
  %250 = load i8*, i8** %128, align 8
  %251 = select i1 %249, i8* %250, i8* %127
  %252 = load i64, i64* %129, align 8
  %253 = zext i8 %248 to i64
  %254 = select i1 %249, i64 %252, i64 %253
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %22, i8* %251, i64 %254) #12
  %255 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %4, %class.GURL* nonnull dereferenceable(120) %22) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %245) #12
  br label %256

256:                                              ; preds = %237, %244
  %257 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #12
  %258 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %258, i64 0, i32 1, i32 0
  store i8 11, i8* %259, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %257, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E21kShortcutURLAttribute, i64 0, i64 0), i64 11, i1 false) #12
  %260 = getelementptr inbounds i8, i8* %257, i64 11
  store i8 0, i8* %260, align 1
  %261 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23, %"class.std::__1::basic_string"* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #12
  br i1 %261, label %262, label %295

262:                                              ; preds = %256
  %263 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %263, i64 0, i32 1, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  %267 = load i8*, i8** %128, align 8
  %268 = select i1 %266, i8* %267, i8* %127
  %269 = load i64, i64* %129, align 8
  %270 = zext i8 %265 to i64
  %271 = select i1 %266, i64 %269, i64 %270
  %272 = load i8, i8* %150, align 1
  %273 = icmp slt i8 %272, 0
  %274 = load i8*, i8** %153, align 8
  %275 = select i1 %273, i8* %274, i8* %155
  %276 = call zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8* %268, i64 %271, i8* %275, i32 1, %"class.std::__1::basic_string.6"* %5) #12
  %277 = bitcast %"class.std::__1::basic_string.6"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #12
  %278 = load i8, i8* %49, align 1
  %279 = icmp slt i8 %278, 0
  %280 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load i16*, i16** %280, align 8
  %282 = bitcast %"class.std::__1::basic_string.6"* %5 to i16*
  %283 = select i1 %279, i16* %281, i16* %282
  %284 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %285 = load i64, i64* %284, align 8
  %286 = zext i8 %278 to i64
  %287 = select i1 %279, i64 %285, i64 %286
  call void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %24, i16* %283, i64 %287) #12
  %288 = load i8, i8* %49, align 1
  %289 = icmp slt i8 %288, 0
  br i1 %289, label %290, label %293

290:                                              ; preds = %262
  %291 = bitcast %"class.std::__1::basic_string.6"* %5 to i8**
  %292 = load i8*, i8** %291, align 8
  call void @_ZdlPv(i8* %292) #13
  br label %293

293:                                              ; preds = %290, %262
  %294 = bitcast %"class.std::__1::basic_string.6"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* nonnull align 8 %277, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #12
  br label %295

295:                                              ; preds = %256, %293
  %296 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %296) #12
  %297 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  store i8 8, i8* %298, align 1
  %299 = bitcast %"class.std::__1::basic_string"* %25 to i64*
  store i64 4995689648572613697, i64* %299, align 8
  %300 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %301 = bitcast i64* %300 to i8*
  store i8 0, i8* %301, align 8
  %302 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25, %"class.std::__1::basic_string"* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %296) #12
  br i1 %302, label %303, label %321

303:                                              ; preds = %295
  %304 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #12
  store i64 -6148914691236517206, i64* %26, align 8
  %305 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %306 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %305, i64 0, i32 1, i32 0
  %307 = load i8, i8* %306, align 1
  %308 = icmp slt i8 %307, 0
  %309 = load i8*, i8** %128, align 8
  %310 = select i1 %308, i8* %309, i8* %127
  %311 = load i64, i64* %129, align 8
  %312 = zext i8 %307 to i64
  %313 = select i1 %308, i64 %311, i64 %312
  %314 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %310, i64 %313, i64* nonnull %26) #12
  %315 = load i64, i64* %26, align 8
  %316 = add i64 %315, -1
  %317 = icmp ult i64 %316, 4294967295
  br i1 %317, label %318, label %320

318:                                              ; preds = %303
  %319 = call i64 @_ZN4base4Time9FromTimeTEl(i64 %315) #12
  store i64 %319, i64* %70, align 8
  br label %320

320:                                              ; preds = %318, %303
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #12
  br label %321

321:                                              ; preds = %295, %320
  %322 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %322) #12
  %323 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %324 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %323, i64 0, i32 1, i32 0
  store i8 9, i8* %324, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %322, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @_ZZN20bookmark_html_reader8internal21ParseBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLSF_SD_PN4base4TimeESD_E18kPostDataAttribute, i64 0, i64 0), i64 9, i1 false) #12
  %325 = getelementptr inbounds i8, i8* %322, i64 9
  store i8 0, i8* %325, align 1
  %326 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27, %"class.std::__1::basic_string"* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %322) #12
  br i1 %326, label %327, label %360

327:                                              ; preds = %321
  %328 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  %330 = load i8, i8* %329, align 1
  %331 = icmp slt i8 %330, 0
  %332 = load i8*, i8** %128, align 8
  %333 = select i1 %331, i8* %332, i8* %127
  %334 = load i64, i64* %129, align 8
  %335 = zext i8 %330 to i64
  %336 = select i1 %331, i64 %334, i64 %335
  %337 = load i8, i8* %150, align 1
  %338 = icmp slt i8 %337, 0
  %339 = load i8*, i8** %153, align 8
  %340 = select i1 %338, i8* %339, i8* %155
  %341 = call zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8* %333, i64 %336, i8* %340, i32 1, %"class.std::__1::basic_string.6"* %7) #12
  %342 = bitcast %"class.std::__1::basic_string.6"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %342) #12
  %343 = load i8, i8* %60, align 1
  %344 = icmp slt i8 %343, 0
  %345 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i16*, i16** %345, align 8
  %347 = bitcast %"class.std::__1::basic_string.6"* %7 to i16*
  %348 = select i1 %344, i16* %346, i16* %347
  %349 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %350 = load i64, i64* %349, align 8
  %351 = zext i8 %343 to i64
  %352 = select i1 %344, i64 %350, i64 %351
  call void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %28, i16* %348, i64 %352) #12
  %353 = load i8, i8* %60, align 1
  %354 = icmp slt i8 %353, 0
  br i1 %354, label %355, label %358

355:                                              ; preds = %327
  %356 = bitcast %"class.std::__1::basic_string.6"* %7 to i8**
  %357 = load i8*, i8** %356, align 8
  call void @_ZdlPv(i8* %357) #13
  br label %358

358:                                              ; preds = %355, %327
  %359 = bitcast %"class.std::__1::basic_string.6"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %359, i8* nonnull align 8 %342, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %342) #12
  br label %360

360:                                              ; preds = %321, %358, %121
  %361 = phi i1 [ false, %121 ], [ true, %358 ], [ true, %321 ]
  %362 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %363 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %362, i64 0, i32 1, i32 0
  %364 = load i8, i8* %363, align 1
  %365 = icmp slt i8 %364, 0
  br i1 %365, label %366, label %368

366:                                              ; preds = %360
  %367 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %367) #13
  br label %368

368:                                              ; preds = %360, %366
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #12
  %369 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %370 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %369, i64 0, i32 1, i32 0
  %371 = load i8, i8* %370, align 1
  %372 = icmp slt i8 %371, 0
  br i1 %372, label %373, label %375

373:                                              ; preds = %368
  %374 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %374) #13
  br label %375

375:                                              ; preds = %368, %373
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #12
  br label %376

376:                                              ; preds = %113, %375, %118, %115, %69
  %377 = phi i1 [ false, %69 ], [ %361, %375 ], [ false, %118 ], [ false, %115 ], [ false, %113 ]
  %378 = load i8, i8* %72, align 1
  %379 = icmp slt i8 %378, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %376
  %381 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %381) #13
  br label %382

382:                                              ; preds = %376, %380
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  ret i1 %377
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20bookmark_html_reader8internal28ParseMinimumBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURL(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string.6"*, %class.GURL*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string.6", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string.6", align 8
  %14 = alloca %"class.std::__1::basic_string.6", align 8
  %15 = alloca %class.GURL, align 8
  %16 = alloca %class.GURL, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN20bookmark_html_readerL7stripDtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  %21 = bitcast %"class.std::__1::basic_string.6"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  store i16 0, i16* %27, align 2
  %28 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %28, align 8
  br label %31

29:                                               ; preds = %4
  %30 = bitcast %"class.std::__1::basic_string.6"* %2 to i16*
  store i16 0, i16* %30, align 2
  store i8 0, i8* %22, align 1
  br label %31

31:                                               ; preds = %25, %29
  %32 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %32) #12
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %6) #12
  %33 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %3, %class.GURL* nonnull dereferenceable(120) %6) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %32) #12
  %34 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i8*, i8** %18, align 8
  %39 = select i1 %37, i8* %38, i8* %17
  %40 = load i64, i64* %19, align 8
  %41 = zext i8 %36 to i64
  %42 = select i1 %37, i64 %40, i64 %41
  %43 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %39, i64 %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN20bookmark_html_reader8internal28ParseMinimumBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLE9kItemOpen, i64 0, i64 0), i64 2, i32 1) #12
  br i1 %43, label %44, label %237

44:                                               ; preds = %31
  %45 = load i8, i8* %35, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i8*, i8** %18, align 8
  %48 = select i1 %46, i8* %47, i8* %17
  %49 = load i64, i64* %19, align 8
  %50 = zext i8 %45 to i64
  %51 = select i1 %46, i64 %49, i64 %50
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  %53 = ptrtoint i8* %52 to i64
  %54 = ptrtoint i8* %48 to i64
  %55 = icmp slt i64 %51, 2
  br i1 %55, label %76, label %56

56:                                               ; preds = %44, %67
  %57 = phi i64 [ %70, %67 ], [ %51, %44 ]
  %58 = phi i8* [ %68, %67 ], [ %48, %44 ]
  %59 = add nsw i64 %57, -1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %56
  %62 = call i8* @memchr(i8* %58, i32 60, i64 %59) #12
  %63 = icmp eq i8* %62, null
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = call i32 @bcmp(i8* nonnull %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN20bookmark_html_reader8internal28ParseMinimumBookmarkFromLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_PNS2_IDsNS3_IDsEENS5_IDsEEEEP4GURLE10kItemClose, i64 0, i64 0), i64 2) #12
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds i8, i8* %62, i64 1
  %69 = ptrtoint i8* %68 to i64
  %70 = sub i64 %53, %69
  %71 = icmp slt i64 %70, 2
  br i1 %71, label %76, label %56

72:                                               ; preds = %64
  %73 = ptrtoint i8* %62 to i64
  %74 = icmp eq i8* %62, %52
  %75 = sub i64 %73, %54
  br i1 %74, label %76, label %78

76:                                               ; preds = %67, %61, %56, %44, %72
  %77 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* nonnull %5, i8 signext 62, i64 -1) #12
  br label %237

78:                                               ; preds = %72
  %79 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"* nonnull %5, i8 signext 62, i64 %75) #12
  %80 = icmp eq i64 %75, -1
  br i1 %80, label %237, label %81

81:                                               ; preds = %78
  %82 = add i64 %79, 1
  %83 = icmp ult i64 %82, 3
  br i1 %83, label %237, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #12
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = add i64 %79, -3
  %88 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::allocator"*
  %89 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i64 3, i64 %87, %"class.std::__1::allocator"* nonnull dereferenceable(1) %88) #12
  %90 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = sub i64 %75, %82
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i64 %82, i64 %91, %"class.std::__1::allocator"* nonnull dereferenceable(1) %88) #12
  %92 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = select i1 %95, i8* %97, i8* %90
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = zext i8 %94 to i64
  %102 = select i1 %95, i64 %100, i64 %101
  %103 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %110 = select i1 %106, i8* %108, i8* %109
  %111 = call zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8* %98, i64 %102, i8* %110, i32 1, %"class.std::__1::basic_string.6"* %2) #12
  %112 = load i8, i8* %93, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %84
  %115 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %115) #13
  br label %116

116:                                              ; preds = %84, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  %117 = bitcast %"class.std::__1::basic_string.6"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #12
  %118 = load i8, i8* %22, align 1
  %119 = icmp slt i8 %118, 0
  %120 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i16*, i16** %120, align 8
  %122 = bitcast %"class.std::__1::basic_string.6"* %2 to i16*
  %123 = select i1 %119, i16* %121, i16* %122
  %124 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = zext i8 %118 to i64
  %127 = select i1 %119, i64 %125, i64 %126
  call void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %9, i16* %123, i64 %127) #12
  %128 = load i8, i8* %22, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %116
  %131 = bitcast %"class.std::__1::basic_string.6"* %2 to i8**
  %132 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %132) #13
  br label %133

133:                                              ; preds = %130, %116
  %134 = bitcast %"class.std::__1::basic_string.6"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 8 %117, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  %135 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #12
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 0, i64 24, i1 false) #12
  %138 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #12
  %139 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  store i8 4, i8* %140, align 1
  %141 = bitcast %"class.std::__1::basic_string"* %11 to i32*
  store i32 1178948168, i32* %141, align 8
  %142 = getelementptr inbounds i8, i8* %138, i64 4
  store i8 0, i8* %142, align 4
  %143 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, %"class.std::__1::basic_string"* nonnull %10)
  br i1 %143, label %144, label %145

144:                                              ; preds = %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #12
  br label %154

145:                                              ; preds = %133
  %146 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #12
  %147 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  store i8 4, i8* %148, align 1
  %149 = bitcast %"class.std::__1::basic_string"* %12 to i32*
  store i32 1717924456, i32* %149, align 8
  %150 = getelementptr inbounds i8, i8* %146, i64 4
  store i8 0, i8* %150, align 4
  %151 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #12
  br i1 %151, label %154, label %152

152:                                              ; preds = %145
  %153 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %222

154:                                              ; preds = %144, %145
  %155 = load i8, i8* %104, align 1
  %156 = icmp slt i8 %155, 0
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = zext i8 %155 to i64
  %160 = select i1 %156, i64 %158, i64 %159
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %210, label %162

162:                                              ; preds = %154
  %163 = bitcast %"class.std::__1::basic_string.6"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #12
  %164 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 24, i1 false) #12
  %166 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = load i8, i8* %167, align 1
  %169 = icmp slt i8 %168, 0
  %170 = load i8*, i8** %136, align 8
  %171 = select i1 %169, i8* %170, i8* %135
  %172 = load i64, i64* %137, align 8
  %173 = zext i8 %168 to i64
  %174 = select i1 %169, i64 %172, i64 %173
  %175 = load i8*, i8** %107, align 8
  %176 = select i1 %156, i8* %175, i8* %109
  %177 = call zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8* %171, i64 %174, i8* %176, i32 1, %"class.std::__1::basic_string.6"* nonnull %13) #12
  %178 = bitcast %"class.std::__1::basic_string.6"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #12
  %179 = bitcast %"class.std::__1::basic_string.6"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %179, i64 0, i32 1, i32 1
  %181 = load i8, i8* %180, align 1
  %182 = icmp slt i8 %181, 0
  %183 = load i16*, i16** %164, align 8
  %184 = bitcast %"class.std::__1::basic_string.6"* %13 to i16*
  %185 = select i1 %182, i16* %183, i16* %184
  %186 = load i64, i64* %165, align 8
  %187 = zext i8 %181 to i64
  %188 = select i1 %182, i64 %186, i64 %187
  call void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* nonnull sret %14, i16* %185, i64 %188) #12
  %189 = load i8, i8* %180, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %162
  %192 = bitcast %"class.std::__1::basic_string.6"* %13 to i8**
  %193 = load i8*, i8** %192, align 8
  call void @_ZdlPv(i8* %193) #13
  br label %194

194:                                              ; preds = %191, %162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %163, i8* nonnull align 8 %178, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #12
  %195 = bitcast %class.GURL* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %195) #12
  %196 = load i8, i8* %180, align 1
  %197 = icmp slt i8 %196, 0
  %198 = load i16*, i16** %164, align 8
  %199 = select i1 %197, i16* %198, i16* %184
  %200 = load i64, i64* %165, align 8
  %201 = zext i8 %196 to i64
  %202 = select i1 %197, i64 %200, i64 %201
  call void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL* nonnull %15, i16* %199, i64 %202) #12
  %203 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %3, %class.GURL* nonnull dereferenceable(120) %15) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %195) #12
  %204 = load i8, i8* %180, align 1
  %205 = icmp slt i8 %204, 0
  br i1 %205, label %206, label %209

206:                                              ; preds = %194
  %207 = bitcast %"class.std::__1::basic_string.6"* %13 to i8**
  %208 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %208) #13
  br label %209

209:                                              ; preds = %194, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #12
  br label %222

210:                                              ; preds = %154
  %211 = bitcast %class.GURL* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %211) #12
  %212 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  %216 = load i8*, i8** %136, align 8
  %217 = select i1 %215, i8* %216, i8* %135
  %218 = load i64, i64* %137, align 8
  %219 = zext i8 %214 to i64
  %220 = select i1 %215, i64 %218, i64 %219
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %16, i8* %217, i64 %220) #12
  %221 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %3, %class.GURL* nonnull dereferenceable(120) %16) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %211) #12
  br label %222

222:                                              ; preds = %152, %209, %210
  %223 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %153, %152 ], [ %166, %209 ], [ %212, %210 ]
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %222
  %228 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %228) #13
  br label %229

229:                                              ; preds = %222, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #12
  %230 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %236

234:                                              ; preds = %229
  %235 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %235) #13
  br label %236

236:                                              ; preds = %229, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #12
  br label %237

237:                                              ; preds = %76, %236, %81, %78, %31
  %238 = phi i1 [ false, %31 ], [ true, %236 ], [ false, %81 ], [ false, %78 ], [ false, %76 ]
  %239 = load i8, i8* %35, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %243

241:                                              ; preds = %237
  %242 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %242) #13
  br label %243

243:                                              ; preds = %237, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  ret i1 %238
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20bookmark_html_reader26CanImportURLAsSearchEngineERK4GURLPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%class.GURL* nocapture readonly dereferenceable(120), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string.6", align 8
  %6 = alloca %struct.TemplateURLData, align 8
  %7 = alloca %class.TemplateURL, align 8
  %8 = alloca %class.SearchTermsData, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = load i8, i8* %13, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %2
  %18 = bitcast %class.GURL* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %18, i64 24, i1 false) #12
  br label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %21, i64 %23) #12
  br label %24

24:                                               ; preds = %17, %19
  %25 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i64, i64* %11, align 8
  %30 = zext i8 %27 to i64
  %31 = select i1 %28, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %86, label %33

33:                                               ; preds = %24
  call void @_ZN4base28ReplaceSubstringsAfterOffsetEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmNS_16BasicStringPieceIcS3_EES9_(%"class.std::__1::basic_string"* nonnull %3, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #12
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #12
  %35 = bitcast %"class.std::__1::basic_string.6"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  %36 = load i8, i8* %26, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i8*, i8** %10, align 8
  %39 = select i1 %37, i8* %38, i8* %9
  %40 = load i64, i64* %11, align 8
  %41 = zext i8 %36 to i64
  %42 = select i1 %37, i64 %40, i64 %41
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.6"* nonnull sret %5, i8* %39, i64 %42) #12
  call void @_ZN14TemplateURLRef18DisplayURLToURLRefERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string.6"* nonnull dereferenceable(24) %5) #12
  %43 = load i8, i8* %26, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %33
  %46 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %45, %33
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %34, i64 24, i1 false) #12
  %48 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  store i8 0, i8* %49, align 1
  store i8 0, i8* %34, align 8
  %50 = bitcast %"class.std::__1::basic_string.6"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %50, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::basic_string.6"* %5 to i8**
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %47, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #12
  %58 = bitcast %struct.TemplateURLData* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 848, i8* nonnull %58) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 848, i1 false)
  call void @_ZN15TemplateURLDataC1Ev(%struct.TemplateURLData* nonnull %6) #12
  call void @_ZN15TemplateURLData6SetURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%struct.TemplateURLData* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %59 = icmp eq %"class.std::__1::basic_string"* %3, %1
  br i1 %59, label %81, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i8, i8* %26, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %64, label %74, label %67

67:                                               ; preds = %60
  br i1 %66, label %70, label %68

68:                                               ; preds = %67
  %69 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %9, i64 24, i1 false) #12
  br label %81

70:                                               ; preds = %67
  %71 = load i8*, i8** %10, align 8
  %72 = load i64, i64* %11, align 8
  %73 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %1, i8* %71, i64 %72) #12
  br label %81

74:                                               ; preds = %60
  %75 = load i8*, i8** %10, align 8
  %76 = load i64, i64* %11, align 8
  %77 = zext i8 %65 to i64
  %78 = select i1 %66, i8* %75, i8* %9
  %79 = select i1 %66, i64 %76, i64 %77
  %80 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %1, i8* %78, i64 %79) #12
  br label %81

81:                                               ; preds = %57, %68, %70, %74
  %82 = bitcast %class.TemplateURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2104, i8* nonnull %82) #12
  call void @_ZN11TemplateURLC1ERK15TemplateURLDataNS_4TypeE(%class.TemplateURL* nonnull %7, %struct.TemplateURLData* nonnull dereferenceable(848) %6, i32 1) #12
  %83 = bitcast %class.SearchTermsData* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #12
  call void @_ZN15SearchTermsDataC1Ev(%class.SearchTermsData* nonnull %8) #12
  %84 = call zeroext i1 @_ZNK11TemplateURL19SupportsReplacementERK15SearchTermsData(%class.TemplateURL* nonnull %7, %class.SearchTermsData* nonnull dereferenceable(8) %8) #12
  call void @_ZN15SearchTermsDataD1Ev(%class.SearchTermsData* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #12
  call void @_ZN11TemplateURLD1Ev(%class.TemplateURL* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 2104, i8* nonnull %82) #12
  call void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 848, i8* nonnull %58) #12
  %85 = load i8, i8* %26, align 1
  br label %86

86:                                               ; preds = %24, %81
  %87 = phi i8 [ %85, %81 ], [ %27, %24 ]
  %88 = phi i1 [ %84, %81 ], [ false, %24 ]
  %89 = icmp slt i8 %87, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  ret i1 %88
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.6"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.6"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.6"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.6"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.6"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.6"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.6"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.6"*
  %35 = icmp ugt %"class.std::__1::basic_string.6"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !35
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !35
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !38, !noalias !35
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !38, !noalias !35
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !35
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !35
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !38, !noalias !35
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !38, !noalias !35
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !35
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !35
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !38, !noalias !35
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !38, !noalias !35
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !35
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !35
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !38, !noalias !35
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !38, !noalias !35
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !40

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !35
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !35
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !38, !noalias !35
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !38, !noalias !35
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !41

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !42

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !43

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.6"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #13
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !44
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !44
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !47, !noalias !44
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !47, !noalias !44
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !44
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !44
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !47, !noalias !44
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !47, !noalias !44
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !44
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !44
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !47, !noalias !44
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !47, !noalias !44
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !44
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !44
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !47, !noalias !44
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !47, !noalias !44
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !49

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !44
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !44
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !47, !noalias !44
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !47, !noalias !44
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !50

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !51

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !52

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.6"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.6"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !53
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !53
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !56, !noalias !53
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !56, !noalias !53
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !53
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !53
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !56, !noalias !53
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !56, !noalias !53
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !53
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !53
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !56, !noalias !53
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !56, !noalias !53
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !53
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !53
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !56, !noalias !53
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !56, !noalias !53
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !58

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !53
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !53
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !56, !noalias !53
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !56, !noalias !53
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !59

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !60

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !61

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.6"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.6"* %0
}

declare void @_ZN21ImportedBookmarkEntryC1Ev(%struct.ImportedBookmarkEntry*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignINS_11__wrap_iterIPS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueEvE4typeESE_SE_(%"class.std::__1::vector.4"*, %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string.6"* %1 to i64
  %5 = ptrtoint %"class.std::__1::basic_string.6"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string.6"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string.6"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string.6"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string.6"* %24, %"class.std::__1::basic_string.6"* %2
  %26 = icmp eq %"class.std::__1::basic_string.6"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string.6"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string.6"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string.6"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.6"* %28, %"class.std::__1::basic_string.6"* dereferenceable(24) %29) #12
  %31 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string.6"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string.6"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string.6"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string.6"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string.6"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string.6"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string.6"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string.6"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string.6"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #12
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string.6"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string.6"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string.6"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #14
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #14
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #13
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string.6"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !62
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !62
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !65, !noalias !62
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !65, !noalias !62
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !62
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !62
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !65, !noalias !62
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !65, !noalias !62
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !62
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !62
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !65, !noalias !62
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !65, !noalias !62
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !62
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !62
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !65, !noalias !62
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !65, !noalias !62
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !67

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !62
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !62
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !65, !noalias !62
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !65, !noalias !62
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !68

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !69

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !70

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string.6"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string.6"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string.6"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string.6"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string.6"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string.6"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #13
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string.6"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string.6"* %35, %"class.std::__1::basic_string.6"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string.6"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string.6"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string.6"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string.6"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #13
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string.6"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.4"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string.6"* %16, %"class.std::__1::basic_string.6"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #13
  %275 = bitcast %"class.std::__1::vector.4"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #12
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #14
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #13
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string.6"*
  %293 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string.6"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector.4"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %292, i64 %289
  store %"class.std::__1::basic_string.6"* %296, %"class.std::__1::basic_string.6"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string.6"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string.6"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string.6"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string.6"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string.6"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string.6"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string.6"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #12
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string.6"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string.6"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string.6"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #14
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #14
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #13
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string.6"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !71
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !71
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !74, !noalias !71
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !74, !noalias !71
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !71
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !71
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !74, !noalias !71
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !74, !noalias !71
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !71
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !71
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !74, !noalias !71
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !74, !noalias !71
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !71
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !71
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !74, !noalias !71
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !74, !noalias !71
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !76

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !71
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !71
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !74, !noalias !71
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !74, !noalias !71
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !77

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !78

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !79

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string.6"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string.6"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: nounwind
declare void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare void @_ZN4base28ReplaceSubstringsAfterOffsetEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEmNS_16BasicStringPieceIcS3_EES9_(%"class.std::__1::basic_string"*, i64, i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN14TemplateURLRef18DisplayURLToURLRefERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string.6"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN15TemplateURLDataC1Ev(%struct.TemplateURLData*) unnamed_addr #2

declare void @_ZN15TemplateURLData6SetURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN11TemplateURLC1ERK15TemplateURLDataNS_4TypeE(%class.TemplateURL*, %struct.TemplateURLData* dereferenceable(848), i32) unnamed_addr #2

declare zeroext i1 @_ZNK11TemplateURL19SupportsReplacementERK15SearchTermsData(%class.TemplateURL*, %class.SearchTermsData* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN15SearchTermsDataC1Ev(%class.SearchTermsData*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15SearchTermsDataD1Ev(%class.SearchTermsData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11TemplateURLD1Ev(%class.TemplateURL*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN20bookmark_html_readerL7stripDtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  %8 = load i8, i8* %6, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #12
  br label %19

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %15, i64 %17) #12
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %19

19:                                               ; preds = %10, %13
  %20 = phi i8* [ %11, %10 ], [ %18, %13 ]
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i8*, i8** %3, align 8
  %26 = select i1 %24, i8* %25, i8* %20
  %27 = load i64, i64* %4, align 8
  %28 = zext i8 %23 to i64
  %29 = select i1 %24, i64 %27, i64 %28
  %30 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %26, i64 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN20bookmark_html_readerL7stripDtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE6kDtTag, i64 0, i64 0), i64 4, i32 1) #12
  br i1 %30, label %31, label %40

31:                                               ; preds = %19
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 0, i64 4) #12
  %32 = load i8, i8* %22, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i8*, i8** %3, align 8
  %35 = select i1 %33, i8* %34, i8* %20
  %36 = load i64, i64* %4, align 8
  %37 = zext i8 %32 to i64
  %38 = select i1 %33, i64 %36, i64 %37
  %39 = tail call zeroext i1 @_ZN4base10TrimStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %35, i64 %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, %"class.std::__1::basic_string"* %0) #12
  br label %40

40:                                               ; preds = %19, %31
  ret void
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN4base15CodepageToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKcNS_23OnStringConversionError4TypeEPNS1_12basic_stringIDsNS2_IDsEENS1_9allocatorIDsEEEE(i8*, i64, i8*, i32, %"class.std::__1::basic_string.6"*) local_unnamed_addr #2

declare void @_ZN3net15UnescapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.6"* sret, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #12, !alias.scope !80
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1, !noalias !80
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = zext i8 %14 to i64
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %22 = select i1 %15, i64 %17, i64 %20
  %23 = select i1 %15, i8* %19, i8* %21
  %24 = add i64 %22, 1
  %25 = icmp ugt i64 %24, -17
  br i1 %25, label %26, label %28

26:                                               ; preds = %3
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #14
  unreachable

28:                                               ; preds = %3
  %29 = icmp ult i64 %24, 23
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = add nuw i64 %22, 17
  %32 = and i64 %31, -16
  %33 = tail call i8* @_Znwm(i64 %32) #13
  store i8* %33, i8** %9, align 8, !alias.scope !80
  %34 = or i64 %32, -9223372036854775808
  store i64 %34, i64* %11, align 8, !alias.scope !80
  store i64 %22, i64* %10, align 8, !alias.scope !80
  br label %40

35:                                               ; preds = %28
  %36 = trunc i64 %22 to i8
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1, !alias.scope !80
  %39 = icmp eq i64 %22, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %30, %35
  %41 = phi i8* [ %33, %30 ], [ %8, %35 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* align 1 %23, i64 %22, i1 false) #12
  br label %42

42:                                               ; preds = %35, %40
  %43 = phi i8* [ %8, %35 ], [ %41, %40 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %22
  store i8 0, i8* %44, align 1
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #12
  %46 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZZN12_GLOBAL__N_112GetAttributeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_PS6_E6kQuote, i64 0, i64 0)) #12, !noalias !83
  %47 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %47, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #12, !noalias !83
  %48 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %55 = select i1 %51, i8* %53, i8* %54
  %56 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %58 to i64
  %65 = select i1 %59, i8* %61, i8* %7
  %66 = select i1 %59, i64 %63, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %105, label %68

68:                                               ; preds = %42
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %50 to i64
  %72 = select i1 %51, i64 %70, i64 %71
  %73 = getelementptr inbounds i8, i8* %55, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = ptrtoint i8* %55 to i64
  %76 = icmp slt i64 %72, %66
  br i1 %76, label %99, label %77

77:                                               ; preds = %68
  %78 = load i8, i8* %65, align 1
  %79 = zext i8 %78 to i32
  br label %80

80:                                               ; preds = %94, %77
  %81 = phi i64 [ %97, %94 ], [ %72, %77 ]
  %82 = phi i8* [ %95, %94 ], [ %55, %77 ]
  %83 = sub nsw i64 %81, %66
  %84 = add nsw i64 %83, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %99, label %86

86:                                               ; preds = %80
  %87 = call i8* @memchr(i8* %82, i32 %79, i64 %84) #12
  %88 = icmp eq i8* %87, null
  br i1 %88, label %99, label %89

89:                                               ; preds = %86
  %90 = call i32 @bcmp(i8* nonnull %87, i8* %65, i64 %66) #12
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  %93 = ptrtoint i8* %87 to i64
  br label %99

94:                                               ; preds = %89
  %95 = getelementptr inbounds i8, i8* %87, i64 1
  %96 = ptrtoint i8* %95 to i64
  %97 = sub i64 %74, %96
  %98 = icmp slt i64 %97, %66
  br i1 %98, label %99, label %80

99:                                               ; preds = %94, %86, %80, %92, %68
  %100 = phi i64 [ %74, %68 ], [ %93, %92 ], [ %74, %80 ], [ %74, %86 ], [ %74, %94 ]
  %101 = phi i8* [ %73, %68 ], [ %87, %92 ], [ %73, %80 ], [ %73, %86 ], [ %73, %94 ]
  %102 = icmp eq i8* %101, %73
  %103 = sub i64 %100, %75
  %104 = select i1 %102, i64 -1, i64 %103
  br label %105

105:                                              ; preds = %42, %99
  %106 = phi i64 [ 0, %42 ], [ %104, %99 ]
  br i1 %59, label %107, label %108

107:                                              ; preds = %105
  call void @_ZdlPv(i8* %61) #13
  br label %108

108:                                              ; preds = %105, %107
  %109 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %114) #13
  br label %115

115:                                              ; preds = %108, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  %116 = icmp eq i64 %106, -1
  br i1 %116, label %165, label %117

117:                                              ; preds = %115
  %118 = load i8, i8* %13, align 1
  %119 = icmp slt i8 %118, 0
  %120 = load i64, i64* %16, align 8
  %121 = zext i8 %118 to i64
  %122 = select i1 %119, i64 %120, i64 %121
  %123 = add i64 %106, 2
  %124 = add i64 %123, %122
  %125 = add i64 %124, 1
  %126 = load i8, i8* %49, align 1
  %127 = icmp slt i8 %126, 0
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %126 to i64
  %131 = select i1 %127, i64 %129, i64 %130
  %132 = icmp ult i64 %125, %131
  br i1 %132, label %133, label %149

133:                                              ; preds = %117
  %134 = load i8*, i8** %52, align 8
  %135 = select i1 %127, i8* %134, i8* %54
  br label %136

136:                                              ; preds = %133, %146
  %137 = phi i64 [ %125, %133 ], [ %147, %146 ]
  %138 = phi i64 [ %124, %133 ], [ %137, %146 ]
  %139 = getelementptr inbounds i8, i8* %135, i64 %137
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 34
  br i1 %141, label %142, label %146

142:                                              ; preds = %136
  %143 = getelementptr inbounds i8, i8* %135, i64 %138
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 92
  br i1 %145, label %146, label %149

146:                                              ; preds = %142, %136
  %147 = add nuw i64 %137, 1
  %148 = icmp ult i64 %147, %131
  br i1 %148, label %136, label %149

149:                                              ; preds = %146, %142, %117
  %150 = phi i64 [ %125, %117 ], [ %137, %142 ], [ %147, %146 ]
  %151 = icmp eq i64 %150, %131
  br i1 %151, label %165, label %152

152:                                              ; preds = %149
  %153 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #12
  %154 = sub i64 %150, %124
  %155 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %124, i64 %154, %"class.std::__1::allocator"* dereferenceable(1) %155) #12
  %156 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %152
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %160, %152
  %164 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* nonnull align 8 %153, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #12
  br label %165

165:                                              ; preds = %163, %149, %115
  %166 = phi i1 [ false, %115 ], [ true, %163 ], [ false, %149 ]
  ret i1 %166
}

declare zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8*, i64, i64*) local_unnamed_addr #2

declare i64 @_ZN4base4Time9FromTimeTEl(i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

declare void @_ZN4GURLC1EN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%class.GURL*, i16*, i64) unnamed_addr #2

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3net7DataURL5ParseERK4GURLPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_SB_(%class.GURL* dereferenceable(120), %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN12favicon_base16FaviconUsageDataC1Ev(%"struct.favicon_base::FaviconUsageData"*) unnamed_addr #2

declare zeroext i1 @_ZN8importer15ReencodeFaviconEPKhmPNSt3__16vectorIhNS2_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector.34"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12favicon_base16FaviconUsageDataD1Ev(%"struct.favicon_base::FaviconUsageData"*) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE25__emplace_unique_key_argsIS1_JRKS1_EEENS_4pairINS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %1, %class.GURL* dereferenceable(120) %13) #12
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %13, %class.GURL* dereferenceable(120) %1) #12
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 152) #13, !noalias !86
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast i8* %45 to %class.GURL*
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %46, %class.GURL* dereferenceable(120) %2) #12, !noalias !86
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #12
  %65 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

declare zeroext i1 @_ZNK4GURLltERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !25
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !25
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12favicon_base16FaviconUsageDataENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.32"*, %"struct.favicon_base::FaviconUsageData"* dereferenceable(168)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.favicon_base::FaviconUsageData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.32"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 168
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 109802048057794950
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.favicon_base::FaviconUsageData"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 168
  %20 = icmp ult i64 %19, 54901024028897475
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 109802048057794950, %14 ]
  %28 = mul i64 %27, 168
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.favicon_base::FaviconUsageData"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.favicon_base::FaviconUsageData"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %33, i64 %32
  %36 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %35 to i64
  tail call void @_ZN12favicon_base16FaviconUsageDataC1ERKS0_(%"struct.favicon_base::FaviconUsageData"* %34, %"struct.favicon_base::FaviconUsageData"* dereferenceable(168) %1) #12
  %37 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %34, i64 1
  %38 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %39, align 8
  %41 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %3, align 8
  %42 = icmp eq %"struct.favicon_base::FaviconUsageData"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.favicon_base::FaviconUsageData"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.favicon_base::FaviconUsageData"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %47, i64 -1
  tail call void @_ZN12favicon_base16FaviconUsageDataC1ERKS0_(%"struct.favicon_base::FaviconUsageData"* %48, %"struct.favicon_base::FaviconUsageData"* dereferenceable(168) %49) #12
  %50 = icmp eq %"struct.favicon_base::FaviconUsageData"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.favicon_base::FaviconUsageData"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.favicon_base::FaviconUsageData"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.favicon_base::FaviconUsageData"*
  %60 = icmp eq %"struct.favicon_base::FaviconUsageData"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.favicon_base::FaviconUsageData"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %62, i64 -1
  tail call void @_ZN12favicon_base16FaviconUsageDataD1Ev(%"struct.favicon_base::FaviconUsageData"* %63) #12
  %64 = icmp eq %"struct.favicon_base::FaviconUsageData"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN12favicon_base16FaviconUsageDataC1ERKS0_(%"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"* dereferenceable(168)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.6"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.6"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.6"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.6"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !89
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !89
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !92, !noalias !89
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !92, !noalias !89
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !89
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !89
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !92, !noalias !89
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !92, !noalias !89
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !89
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !89
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !92, !noalias !89
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !92, !noalias !89
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !89
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !89
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !92, !noalias !89
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !92, !noalias !89
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !94

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !89
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !89
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !92, !noalias !89
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !92, !noalias !89
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !95

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !96

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !97

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !98

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !99

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !100

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !102
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !102
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !105, !noalias !102
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !105, !noalias !102
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !102
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !102
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !105, !noalias !102
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !105, !noalias !102
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !102
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !102
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !105, !noalias !102
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !105, !noalias !102
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !102
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !102
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !105, !noalias !102
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !105, !noalias !102
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !107

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !102
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !102
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !105, !noalias !102
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !105, !noalias !102
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !108

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !109

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !110

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.6"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8importer16SearchEngineInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.25"*, %"struct.importer::SearchEngineInfo"* dereferenceable(72)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.importer::SearchEngineInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.importer::SearchEngineInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.importer::SearchEngineInfo"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.importer::SearchEngineInfo"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %33, i64 %32
  %36 = ptrtoint %"struct.importer::SearchEngineInfo"* %35 to i64
  tail call void @_ZN8importer16SearchEngineInfoC2ERKS0_(%"struct.importer::SearchEngineInfo"* %34, %"struct.importer::SearchEngineInfo"* dereferenceable(72) %1) #12
  %37 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %34, i64 1
  %38 = ptrtoint %"struct.importer::SearchEngineInfo"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"** %39, align 8
  %41 = load %"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"** %3, align 8
  %42 = icmp eq %"struct.importer::SearchEngineInfo"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.importer::SearchEngineInfo"* %40 to i64
  br label %64

45:                                               ; preds = %31, %45
  %46 = phi %"struct.importer::SearchEngineInfo"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.importer::SearchEngineInfo"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %47, i64 -1
  %50 = bitcast %"struct.importer::SearchEngineInfo"* %48 to i8*
  %51 = bitcast %"struct.importer::SearchEngineInfo"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #12
  %52 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %46, i64 -1, i32 1
  %53 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %47, i64 -1, i32 1
  %54 = bitcast %"class.std::__1::basic_string.6"* %52 to i8*
  %55 = bitcast %"class.std::__1::basic_string.6"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  %56 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %46, i64 -1, i32 2
  %57 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %47, i64 -1, i32 2
  %58 = bitcast %"class.std::__1::basic_string.6"* %56 to i8*
  %59 = bitcast %"class.std::__1::basic_string.6"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #12
  %60 = icmp eq %"struct.importer::SearchEngineInfo"* %49, %40
  br i1 %60, label %61, label %45

61:                                               ; preds = %45
  %62 = load i64, i64* %6, align 8
  %63 = load %"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"** %3, align 8
  br label %64

64:                                               ; preds = %43, %61
  %65 = phi %"struct.importer::SearchEngineInfo"* [ %40, %43 ], [ %63, %61 ]
  %66 = phi %"struct.importer::SearchEngineInfo"* [ %34, %43 ], [ %48, %61 ]
  %67 = phi i64 [ %44, %43 ], [ %62, %61 ]
  %68 = ptrtoint %"struct.importer::SearchEngineInfo"* %66 to i64
  store i64 %68, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %69 = inttoptr i64 %67 to %"struct.importer::SearchEngineInfo"*
  %70 = icmp eq %"struct.importer::SearchEngineInfo"* %65, %69
  br i1 %70, label %101, label %71

71:                                               ; preds = %64, %99
  %72 = phi %"struct.importer::SearchEngineInfo"* [ %73, %99 ], [ %65, %64 ]
  %73 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %72, i64 -1
  %74 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %72, i64 -1, i32 2
  %75 = bitcast %"class.std::__1::basic_string.6"* %74 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %71
  %80 = bitcast %"class.std::__1::basic_string.6"* %74 to i8**
  %81 = load i8*, i8** %80, align 8
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %79, %71
  %83 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %72, i64 -1, i32 1
  %84 = bitcast %"class.std::__1::basic_string.6"* %83 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = bitcast %"class.std::__1::basic_string.6"* %83 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %88, %82
  %92 = bitcast %"struct.importer::SearchEngineInfo"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = bitcast %"struct.importer::SearchEngineInfo"* %73 to i8**
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %96, %91
  %100 = icmp eq %"struct.importer::SearchEngineInfo"* %73, %69
  br i1 %100, label %101, label %71

101:                                              ; preds = %99, %64
  %102 = icmp eq i64 %67, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %101
  %104 = inttoptr i64 %67 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %101, %103
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8importer16SearchEngineInfoC2ERKS0_(%"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"* dereferenceable(72)) unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"struct.importer::SearchEngineInfo"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.importer::SearchEngineInfo"* %0 to i8*
  %9 = bitcast %"struct.importer::SearchEngineInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #12
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.importer::SearchEngineInfo"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.importer::SearchEngineInfo"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.importer::SearchEngineInfo"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #14
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #14
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.importer::SearchEngineInfo"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !111
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !111
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !114, !noalias !111
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !114, !noalias !111
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !111
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !111
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !114, !noalias !111
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !114, !noalias !111
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !111
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !111
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !114, !noalias !111
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !114, !noalias !111
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !111
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !111
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !114, !noalias !111
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !114, !noalias !111
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !116

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !111
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !111
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !114, !noalias !111
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !114, !noalias !111
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !117

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !118

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !119

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string.6"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string.6"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string.6"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #12
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string.6"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string.6"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string.6"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #14
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #14
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #13
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string.6"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !120
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !120
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !123, !noalias !120
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !123, !noalias !120
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !120
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !120
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !123, !noalias !120
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !123, !noalias !120
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !120
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !120
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !123, !noalias !120
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !123, !noalias !120
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !120
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !120
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !123, !noalias !120
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !123, !noalias !120
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !125

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !120
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !120
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !123, !noalias !120
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !123, !noalias !120
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !126

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !127

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !128

370:                                              ; preds = %335, %340, %315, %192
  %371 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %0, i64 0, i32 2
  %372 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %1, i64 0, i32 2
  %373 = bitcast %"class.std::__1::basic_string.6"* %372 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %374 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %373, i64 0, i32 1, i32 1
  %375 = load i8, i8* %374, align 1
  %376 = icmp slt i8 %375, 0
  br i1 %376, label %380, label %377

377:                                              ; preds = %370
  %378 = bitcast %"class.std::__1::basic_string.6"* %371 to i8*
  %379 = bitcast %"class.std::__1::basic_string.6"* %372 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %378, i8* align 8 %379, i64 24, i1 false) #12
  br label %555

380:                                              ; preds = %370
  %381 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %372, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = load i16*, i16** %381, align 8
  %383 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %384 = load i64, i64* %383, align 8
  %385 = icmp ult i64 %384, 11
  br i1 %385, label %386, label %391

386:                                              ; preds = %380
  %387 = bitcast %"class.std::__1::basic_string.6"* %371 to i16*
  %388 = trunc i64 %384 to i8
  %389 = bitcast %"class.std::__1::basic_string.6"* %371 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %389, i64 0, i32 1, i32 1
  store i8 %388, i8* %390, align 1
  br label %408

391:                                              ; preds = %380
  %392 = icmp ugt i64 %384, 9223372036854775791
  br i1 %392, label %393, label %395

393:                                              ; preds = %391
  %394 = bitcast %"class.std::__1::basic_string.6"* %371 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %394) #14
  unreachable

395:                                              ; preds = %391
  %396 = add nuw nsw i64 %384, 8
  %397 = and i64 %396, -8
  %398 = icmp slt i64 %397, 0
  br i1 %398, label %399, label %400

399:                                              ; preds = %395
  tail call void @abort() #14
  unreachable

400:                                              ; preds = %395
  %401 = shl i64 %397, 1
  %402 = tail call i8* @_Znwm(i64 %401) #13
  %403 = bitcast i8* %402 to i16*
  %404 = bitcast %"class.std::__1::basic_string.6"* %371 to i8**
  store i8* %402, i8** %404, align 8
  %405 = or i64 %397, -9223372036854775808
  %406 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %405, i64* %406, align 8
  %407 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %384, i64* %407, align 8
  br label %408

408:                                              ; preds = %400, %386
  %409 = phi i16* [ %387, %386 ], [ %403, %400 ]
  %410 = add nuw nsw i64 %384, 1
  %411 = add i64 %384, 1
  %412 = icmp ult i64 %411, 16
  br i1 %412, label %502, label %413

413:                                              ; preds = %408
  %414 = add i64 %384, 1
  %415 = getelementptr i16, i16* %409, i64 %414
  %416 = getelementptr i16, i16* %382, i64 %414
  %417 = icmp ult i16* %409, %416
  %418 = icmp ult i16* %382, %415
  %419 = and i1 %417, %418
  br i1 %419, label %502, label %420

420:                                              ; preds = %413
  %421 = and i64 %411, -16
  %422 = sub i64 %410, %421
  %423 = getelementptr i16, i16* %382, i64 %421
  %424 = getelementptr i16, i16* %409, i64 %421
  %425 = add i64 %421, -16
  %426 = lshr exact i64 %425, 4
  %427 = add nuw nsw i64 %426, 1
  %428 = and i64 %427, 3
  %429 = icmp ult i64 %425, 48
  br i1 %429, label %481, label %430

430:                                              ; preds = %420
  %431 = sub nsw i64 %427, %428
  br label %432

432:                                              ; preds = %432, %430
  %433 = phi i64 [ 0, %430 ], [ %478, %432 ]
  %434 = phi i64 [ %431, %430 ], [ %479, %432 ]
  %435 = getelementptr i16, i16* %382, i64 %433
  %436 = getelementptr i16, i16* %409, i64 %433
  %437 = bitcast i16* %435 to <8 x i16>*
  %438 = load <8 x i16>, <8 x i16>* %437, align 2, !alias.scope !129
  %439 = getelementptr i16, i16* %435, i64 8
  %440 = bitcast i16* %439 to <8 x i16>*
  %441 = load <8 x i16>, <8 x i16>* %440, align 2, !alias.scope !129
  %442 = bitcast i16* %436 to <8 x i16>*
  store <8 x i16> %438, <8 x i16>* %442, align 2, !alias.scope !132, !noalias !129
  %443 = getelementptr i16, i16* %436, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  store <8 x i16> %441, <8 x i16>* %444, align 2, !alias.scope !132, !noalias !129
  %445 = or i64 %433, 16
  %446 = getelementptr i16, i16* %382, i64 %445
  %447 = getelementptr i16, i16* %409, i64 %445
  %448 = bitcast i16* %446 to <8 x i16>*
  %449 = load <8 x i16>, <8 x i16>* %448, align 2, !alias.scope !129
  %450 = getelementptr i16, i16* %446, i64 8
  %451 = bitcast i16* %450 to <8 x i16>*
  %452 = load <8 x i16>, <8 x i16>* %451, align 2, !alias.scope !129
  %453 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %449, <8 x i16>* %453, align 2, !alias.scope !132, !noalias !129
  %454 = getelementptr i16, i16* %447, i64 8
  %455 = bitcast i16* %454 to <8 x i16>*
  store <8 x i16> %452, <8 x i16>* %455, align 2, !alias.scope !132, !noalias !129
  %456 = or i64 %433, 32
  %457 = getelementptr i16, i16* %382, i64 %456
  %458 = getelementptr i16, i16* %409, i64 %456
  %459 = bitcast i16* %457 to <8 x i16>*
  %460 = load <8 x i16>, <8 x i16>* %459, align 2, !alias.scope !129
  %461 = getelementptr i16, i16* %457, i64 8
  %462 = bitcast i16* %461 to <8 x i16>*
  %463 = load <8 x i16>, <8 x i16>* %462, align 2, !alias.scope !129
  %464 = bitcast i16* %458 to <8 x i16>*
  store <8 x i16> %460, <8 x i16>* %464, align 2, !alias.scope !132, !noalias !129
  %465 = getelementptr i16, i16* %458, i64 8
  %466 = bitcast i16* %465 to <8 x i16>*
  store <8 x i16> %463, <8 x i16>* %466, align 2, !alias.scope !132, !noalias !129
  %467 = or i64 %433, 48
  %468 = getelementptr i16, i16* %382, i64 %467
  %469 = getelementptr i16, i16* %409, i64 %467
  %470 = bitcast i16* %468 to <8 x i16>*
  %471 = load <8 x i16>, <8 x i16>* %470, align 2, !alias.scope !129
  %472 = getelementptr i16, i16* %468, i64 8
  %473 = bitcast i16* %472 to <8 x i16>*
  %474 = load <8 x i16>, <8 x i16>* %473, align 2, !alias.scope !129
  %475 = bitcast i16* %469 to <8 x i16>*
  store <8 x i16> %471, <8 x i16>* %475, align 2, !alias.scope !132, !noalias !129
  %476 = getelementptr i16, i16* %469, i64 8
  %477 = bitcast i16* %476 to <8 x i16>*
  store <8 x i16> %474, <8 x i16>* %477, align 2, !alias.scope !132, !noalias !129
  %478 = add i64 %433, 64
  %479 = add i64 %434, -4
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %432, !llvm.loop !134

481:                                              ; preds = %432, %420
  %482 = phi i64 [ 0, %420 ], [ %478, %432 ]
  %483 = icmp eq i64 %428, 0
  br i1 %483, label %500, label %484

484:                                              ; preds = %481, %484
  %485 = phi i64 [ %497, %484 ], [ %482, %481 ]
  %486 = phi i64 [ %498, %484 ], [ %428, %481 ]
  %487 = getelementptr i16, i16* %382, i64 %485
  %488 = getelementptr i16, i16* %409, i64 %485
  %489 = bitcast i16* %487 to <8 x i16>*
  %490 = load <8 x i16>, <8 x i16>* %489, align 2, !alias.scope !129
  %491 = getelementptr i16, i16* %487, i64 8
  %492 = bitcast i16* %491 to <8 x i16>*
  %493 = load <8 x i16>, <8 x i16>* %492, align 2, !alias.scope !129
  %494 = bitcast i16* %488 to <8 x i16>*
  store <8 x i16> %490, <8 x i16>* %494, align 2, !alias.scope !132, !noalias !129
  %495 = getelementptr i16, i16* %488, i64 8
  %496 = bitcast i16* %495 to <8 x i16>*
  store <8 x i16> %493, <8 x i16>* %496, align 2, !alias.scope !132, !noalias !129
  %497 = add i64 %485, 16
  %498 = add i64 %486, -1
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %500, label %484, !llvm.loop !135

500:                                              ; preds = %484, %481
  %501 = icmp eq i64 %411, %421
  br i1 %501, label %555, label %502

502:                                              ; preds = %500, %413, %408
  %503 = phi i64 [ %410, %413 ], [ %410, %408 ], [ %422, %500 ]
  %504 = phi i16* [ %382, %413 ], [ %382, %408 ], [ %423, %500 ]
  %505 = phi i16* [ %409, %413 ], [ %409, %408 ], [ %424, %500 ]
  %506 = add i64 %503, -1
  %507 = and i64 %503, 7
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %520, label %509

509:                                              ; preds = %502, %509
  %510 = phi i64 [ %515, %509 ], [ %503, %502 ]
  %511 = phi i16* [ %517, %509 ], [ %504, %502 ]
  %512 = phi i16* [ %516, %509 ], [ %505, %502 ]
  %513 = phi i64 [ %518, %509 ], [ %507, %502 ]
  %514 = load i16, i16* %511, align 2
  store i16 %514, i16* %512, align 2
  %515 = add i64 %510, -1
  %516 = getelementptr inbounds i16, i16* %512, i64 1
  %517 = getelementptr inbounds i16, i16* %511, i64 1
  %518 = add i64 %513, -1
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %520, label %509, !llvm.loop !136

520:                                              ; preds = %509, %502
  %521 = phi i64 [ %503, %502 ], [ %515, %509 ]
  %522 = phi i16* [ %504, %502 ], [ %517, %509 ]
  %523 = phi i16* [ %505, %502 ], [ %516, %509 ]
  %524 = icmp ult i64 %506, 7
  br i1 %524, label %555, label %525

525:                                              ; preds = %520, %525
  %526 = phi i64 [ %551, %525 ], [ %521, %520 ]
  %527 = phi i16* [ %553, %525 ], [ %522, %520 ]
  %528 = phi i16* [ %552, %525 ], [ %523, %520 ]
  %529 = load i16, i16* %527, align 2
  store i16 %529, i16* %528, align 2
  %530 = getelementptr inbounds i16, i16* %528, i64 1
  %531 = getelementptr inbounds i16, i16* %527, i64 1
  %532 = load i16, i16* %531, align 2
  store i16 %532, i16* %530, align 2
  %533 = getelementptr inbounds i16, i16* %528, i64 2
  %534 = getelementptr inbounds i16, i16* %527, i64 2
  %535 = load i16, i16* %534, align 2
  store i16 %535, i16* %533, align 2
  %536 = getelementptr inbounds i16, i16* %528, i64 3
  %537 = getelementptr inbounds i16, i16* %527, i64 3
  %538 = load i16, i16* %537, align 2
  store i16 %538, i16* %536, align 2
  %539 = getelementptr inbounds i16, i16* %528, i64 4
  %540 = getelementptr inbounds i16, i16* %527, i64 4
  %541 = load i16, i16* %540, align 2
  store i16 %541, i16* %539, align 2
  %542 = getelementptr inbounds i16, i16* %528, i64 5
  %543 = getelementptr inbounds i16, i16* %527, i64 5
  %544 = load i16, i16* %543, align 2
  store i16 %544, i16* %542, align 2
  %545 = getelementptr inbounds i16, i16* %528, i64 6
  %546 = getelementptr inbounds i16, i16* %527, i64 6
  %547 = load i16, i16* %546, align 2
  store i16 %547, i16* %545, align 2
  %548 = getelementptr inbounds i16, i16* %528, i64 7
  %549 = getelementptr inbounds i16, i16* %527, i64 7
  %550 = load i16, i16* %549, align 2
  store i16 %550, i16* %548, align 2
  %551 = add i64 %526, -8
  %552 = getelementptr inbounds i16, i16* %528, i64 8
  %553 = getelementptr inbounds i16, i16* %527, i64 8
  %554 = icmp eq i64 %551, 0
  br i1 %554, label %555, label %525, !llvm.loop !137

555:                                              ; preds = %520, %525, %500, %377
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.4"*, %"class.std::__1::basic_string.6"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.6"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string.6"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string.6"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string.6"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string.6"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string.6"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string.6"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string.6"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %219

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string.6"* %34 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.std::__1::basic_string.6"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %72

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string.6"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %58) #14
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @abort() #14
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = tail call i8* @_Znwm(i64 %65) #13
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.std::__1::basic_string.6"* %34 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  %70 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %71, align 8
  br label %72

72:                                               ; preds = %64, %50
  %73 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %74 = add nuw nsw i64 %48, 1
  %75 = add i64 %48, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %166, label %77

77:                                               ; preds = %72
  %78 = add i64 %48, 1
  %79 = getelementptr i16, i16* %73, i64 %78
  %80 = getelementptr i16, i16* %46, i64 %78
  %81 = icmp ult i16* %73, %80
  %82 = icmp ult i16* %46, %79
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %77
  %85 = and i64 %75, -16
  %86 = sub i64 %74, %85
  %87 = getelementptr i16, i16* %46, i64 %85
  %88 = getelementptr i16, i16* %73, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %46, i64 %97
  %100 = getelementptr i16, i16* %73, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !138
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !138
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !141, !noalias !138
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !141, !noalias !138
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %46, i64 %109
  %111 = getelementptr i16, i16* %73, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !138
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !138
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !141, !noalias !138
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !141, !noalias !138
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %46, i64 %120
  %122 = getelementptr i16, i16* %73, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !138
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !138
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !141, !noalias !138
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !141, !noalias !138
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %46, i64 %131
  %133 = getelementptr i16, i16* %73, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !138
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !138
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !141, !noalias !138
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !141, !noalias !138
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !143

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %46, i64 %149
  %152 = getelementptr i16, i16* %73, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !138
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !138
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !141, !noalias !138
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !141, !noalias !138
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !144

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %75, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %77, %72
  %167 = phi i64 [ %74, %77 ], [ %74, %72 ], [ %86, %164 ]
  %168 = phi i16* [ %46, %77 ], [ %46, %72 ], [ %87, %164 ]
  %169 = phi i16* [ %73, %77 ], [ %73, %72 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !145

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !146

219:                                              ; preds = %184, %189, %164, %41
  %220 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %34, i64 1
  %221 = ptrtoint %"class.std::__1::basic_string.6"* %220 to i64
  %222 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %223 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %222, align 8
  %224 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %3, align 8
  %225 = icmp eq %"class.std::__1::basic_string.6"* %224, %223
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = ptrtoint %"class.std::__1::basic_string.6"* %223 to i64
  br label %239

228:                                              ; preds = %219, %228
  %229 = phi %"class.std::__1::basic_string.6"* [ %231, %228 ], [ %34, %219 ]
  %230 = phi %"class.std::__1::basic_string.6"* [ %232, %228 ], [ %224, %219 ]
  %231 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %229, i64 -1
  %232 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %230, i64 -1
  %233 = bitcast %"class.std::__1::basic_string.6"* %231 to i8*
  %234 = bitcast %"class.std::__1::basic_string.6"* %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 24, i1 false) #12
  %235 = icmp eq %"class.std::__1::basic_string.6"* %232, %223
  br i1 %235, label %236, label %228

236:                                              ; preds = %228
  %237 = load i64, i64* %6, align 8
  %238 = load %"class.std::__1::basic_string.6"*, %"class.std::__1::basic_string.6"** %3, align 8
  br label %239

239:                                              ; preds = %226, %236
  %240 = phi %"class.std::__1::basic_string.6"* [ %223, %226 ], [ %238, %236 ]
  %241 = phi %"class.std::__1::basic_string.6"* [ %34, %226 ], [ %231, %236 ]
  %242 = phi i64 [ %227, %226 ], [ %237, %236 ]
  %243 = ptrtoint %"class.std::__1::basic_string.6"* %241 to i64
  store i64 %243, i64* %6, align 8
  store i64 %221, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %244 = inttoptr i64 %242 to %"class.std::__1::basic_string.6"*
  %245 = icmp eq %"class.std::__1::basic_string.6"* %240, %244
  br i1 %245, label %258, label %246

246:                                              ; preds = %239, %256
  %247 = phi %"class.std::__1::basic_string.6"* [ %248, %256 ], [ %240, %239 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string.6", %"class.std::__1::basic_string.6"* %247, i64 -1
  %249 = bitcast %"class.std::__1::basic_string.6"* %248 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::basic_string.6"* %248 to i8**
  %255 = load i8*, i8** %254, align 8
  tail call void @_ZdlPv(i8* %255) #13
  br label %256

256:                                              ; preds = %253, %246
  %257 = icmp eq %"class.std::__1::basic_string.6"* %248, %244
  br i1 %257, label %258, label %246

258:                                              ; preds = %256, %239
  %259 = icmp eq i64 %242, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = inttoptr i64 %242 to i8*
  tail call void @_ZdlPv(i8* %261) #13
  br label %262

262:                                              ; preds = %258, %260
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"*, %struct.ImportedBookmarkEntry* dereferenceable(184)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %struct.ImportedBookmarkEntry** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 184
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 100254043878856258
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %struct.ImportedBookmarkEntry** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 184
  %20 = icmp ult i64 %19, 50127021939428129
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 100254043878856258, %14 ]
  %28 = mul i64 %27, 184
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %struct.ImportedBookmarkEntry*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %struct.ImportedBookmarkEntry* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %33, i64 %9
  %35 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %33, i64 %32
  %36 = ptrtoint %struct.ImportedBookmarkEntry* %35 to i64
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %34, %struct.ImportedBookmarkEntry* dereferenceable(184) %1) #12
  %37 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %34, i64 1
  %38 = ptrtoint %struct.ImportedBookmarkEntry* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %39, align 8
  %41 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %3, align 8
  %42 = icmp eq %struct.ImportedBookmarkEntry* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %struct.ImportedBookmarkEntry* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %struct.ImportedBookmarkEntry* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %struct.ImportedBookmarkEntry* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %46, i64 -1
  %49 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %47, i64 -1
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %48, %struct.ImportedBookmarkEntry* dereferenceable(184) %49) #12
  %50 = icmp eq %struct.ImportedBookmarkEntry* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %39, align 8
  %53 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %3, align 8
  %54 = ptrtoint %struct.ImportedBookmarkEntry* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %struct.ImportedBookmarkEntry* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %struct.ImportedBookmarkEntry* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %57, i64 -1
  tail call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* %58) #12
  %59 = icmp eq %struct.ImportedBookmarkEntry* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %struct.ImportedBookmarkEntry* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %struct.ImportedBookmarkEntry* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %61, i64 0, i32 0
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

declare void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry* dereferenceable(184)) unnamed_addr #2

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !8}
!22 = distinct !{!22, !10}
!23 = distinct !{!23, !10}
!24 = distinct !{!24, !8}
!25 = !{i8 0, i8 2}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !8}
!32 = distinct !{!32, !10}
!33 = distinct !{!33, !10}
!34 = distinct !{!34, !8}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !8}
!41 = distinct !{!41, !10}
!42 = distinct !{!42, !10}
!43 = distinct !{!43, !8}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !8}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !10}
!52 = distinct !{!52, !8}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !8}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !8}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !8}
!68 = distinct !{!68, !10}
!69 = distinct !{!69, !10}
!70 = distinct !{!70, !8}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !8}
!77 = distinct !{!77, !10}
!78 = distinct !{!78, !10}
!79 = distinct !{!79, !8}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_"}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !8}
!95 = distinct !{!95, !10}
!96 = distinct !{!96, !10}
!97 = distinct !{!97, !8}
!98 = distinct !{!98, !8}
!99 = distinct !{!99, !10}
!100 = distinct !{!100, !101, !8}
!101 = !{!"llvm.loop.unroll.runtime.disable"}
!102 = !{!103}
!103 = distinct !{!103, !104}
!104 = distinct !{!104, !"LVerDomain"}
!105 = !{!106}
!106 = distinct !{!106, !104}
!107 = distinct !{!107, !8}
!108 = distinct !{!108, !10}
!109 = distinct !{!109, !10}
!110 = distinct !{!110, !8}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = distinct !{!116, !8}
!117 = distinct !{!117, !10}
!118 = distinct !{!118, !10}
!119 = distinct !{!119, !8}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !8}
!126 = distinct !{!126, !10}
!127 = distinct !{!127, !10}
!128 = distinct !{!128, !8}
!129 = !{!130}
!130 = distinct !{!130, !131}
!131 = distinct !{!131, !"LVerDomain"}
!132 = !{!133}
!133 = distinct !{!133, !131}
!134 = distinct !{!134, !8}
!135 = distinct !{!135, !10}
!136 = distinct !{!136, !10}
!137 = distinct !{!137, !8}
!138 = !{!139}
!139 = distinct !{!139, !140}
!140 = distinct !{!140, !"LVerDomain"}
!141 = !{!142}
!142 = distinct !{!142, !140}
!143 = distinct !{!143, !8}
!144 = distinct !{!144, !10}
!145 = distinct !{!145, !10}
!146 = distinct !{!146, !8}
