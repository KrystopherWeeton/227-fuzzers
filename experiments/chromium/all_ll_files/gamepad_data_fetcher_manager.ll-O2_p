; ModuleID = '../../device/gamepad/gamepad_data_fetcher_manager.cc'
source_filename = "../../device/gamepad/gamepad_data_fetcher_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::GamepadDataFetcherManager" = type { %"class.std::__1::vector", %"class.device::GamepadProvider"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"**, %"class.std::__1::__compressed_pair" }
%"class.device::GamepadDataFetcherFactory" = type { i32 (...)** }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.device::GamepadDataFetcherFactory"** }
%"class.device::GamepadProvider" = type { %"class.device::GamepadPadStateProvider", %"class.base::SystemMonitor::DevicesChangedObserver", %"class.base::TimeDelta", %"class.base::Lock", i8, i8, %"class.base::Lock", %"class.std::__1::vector.4", %"class.base::Lock", i8, i8, i8, %"class.std::__1::vector.11", %"class.base::Lock", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.device::GamepadConnectionChangeClient"* }
%"class.device::GamepadPadStateProvider" = type { i32 (...)**, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.device::PadState"* }
%"struct.device::PadState" = type { i32, i32, i8, i8, i8, i8, %"class.device::Gamepad", void (%"class.device::Gamepad"*, %"class.device::Gamepad"*)*, i32, i32 }
%"class.device::Gamepad" = type <{ i8, i8, [128 x i16], [2 x i8], i64, i32, i32, [16 x double], i32, [32 x %"class.device::GamepadButton"], %"class.device::GamepadHapticActuator", i32, %"class.device::GamepadPose", i32, i32, i8, [3 x i8] }>
%"class.device::GamepadButton" = type <{ i8, i8, i8, i8, double }>
%"class.device::GamepadHapticActuator" = type { i8, i32 }
%"class.device::GamepadPose" = type { i8, i8, i8, %"class.device::GamepadQuaternion", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector" }
%"class.device::GamepadQuaternion" = type { i8, float, float, float, float }
%"class.device::GamepadVector" = type { i8, float, float, float }
%"class.base::SystemMonitor::DevicesChangedObserver" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.device::GamepadDataFetcher"* }
%"class.device::GamepadDataFetcher" = type { i32 (...)**, %"class.device::GamepadPadStateProvider"* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::unique_ptr.13"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.device::GamepadSharedBuffer"* }
%"class.device::GamepadSharedBuffer" = type { %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.device::SharedMemorySeqLockBuffer"* }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.device::SharedMemorySeqLockBuffer" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::Thread"* }
%"class.base::Thread" = type opaque
%"class.device::GamepadConnectionChangeClient" = type { i32 (...)** }
%"class.device::GamepadPlatformDataFetcherLinux::Factory" = type { %"class.device::GamepadDataFetcherFactory", %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.device::GamepadDataFetcherFactoryImpl" = type { %"class.device::GamepadDataFetcherFactory" }
%"class.device::NintendoDataFetcher" = type { %"class.device::GamepadDataFetcher", %"class.device::mojom::HidManagerClient", i32, [4 x i8], %"class.std::__1::unordered_map", %"class.mojo::Remote", %"class.mojo::AssociatedReceiver", %"class.base::WeakPtrFactory.233" }
%"class.device::mojom::HidManagerClient" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.38", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i64 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { float }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.226" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.57, %"class.std::__1::unique_ptr.176", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr, i32 }>
%class.scoped_refptr.57 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.138", %"class.absl::optional.143", %"class.absl::optional.100", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.167", i8, [7 x i8], %class.scoped_refptr, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.58" }>
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.76 }
%class.scoped_refptr.76 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.77", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.77" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.78" }
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr, %"class.std::__1::unique_ptr.85", %"class.absl::optional", %"struct.std::__1::atomic.96", i8, i8, i8, i8, i32, i32, %"class.absl::optional.100", %"class.std::__1::unique_ptr.105", i8, i64, %class.scoped_refptr.134, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.137" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.84", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr, i8, %"class.mojo::ScopedHandleBase.88", %class.scoped_refptr.89, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.90" }
%"class.mojo::ScopedHandleBase.88" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.89 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.90" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.94 }
%union.anon.94 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.95", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.95" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i8 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.108", i8, i64, %class.scoped_refptr.109, %class.scoped_refptr.130 }
%"class.base::RepeatingCallback.108" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.109 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.119", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::map.119" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%class.scoped_refptr.130 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.134 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.234", [4 x i8], %"class.base::RepeatingCallback.179", %class.scoped_refptr, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.235", [4 x i8] }>
%"class.base::RefCountedThreadSafe.234" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.179" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.235" = type { %"struct.std::__1::__atomic_base.236" }
%"struct.std::__1::__atomic_base.236" = type { %"struct.std::__1::__atomic_base.237" }
%"struct.std::__1::__atomic_base.237" = type { %"struct.std::__1::__cxx_atomic_impl.238" }
%"struct.std::__1::__cxx_atomic_impl.238" = type { %"struct.std::__1::__cxx_atomic_base_impl.239" }
%"struct.std::__1::__cxx_atomic_base_impl.239" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.137" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, [7 x i8], %union.anon.147 }
%union.anon.147 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, %union.anon.104 }
%union.anon.104 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.152 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.152 = type { %"class.std::__1::map.155" }
%"class.std::__1::map.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.166"*, i64 }
%"class.std::__1::unique_ptr.166" = type opaque
%"class.std::__1::map.167" = type { %"class.std::__1::__tree.168" }
%"class.std::__1::__tree.168" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.179", %"class.base::OnceCallback.180", %"class.absl::optional.181", %"class.absl::optional.186", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.193", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.201", %"class.std::__1::map.212", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.221", i8, %class.scoped_refptr, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.222" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.180" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.181" = type { %"class.absl::optional_internal::optional_data.182" }
%"class.absl::optional_internal::optional_data.182" = type { %"class.absl::optional_internal::optional_data_base.183" }
%"class.absl::optional_internal::optional_data_base.183" = type { %"class.absl::optional_internal::optional_data_dtor_base.184" }
%"class.absl::optional_internal::optional_data_dtor_base.184" = type { i8, %union.anon.185 }
%union.anon.185 = type { %"class.base::TimeDelta" }
%"class.absl::optional.186" = type { %"class.absl::optional_internal::optional_data.187" }
%"class.absl::optional_internal::optional_data.187" = type { %"class.absl::optional_internal::optional_data_base.188" }
%"class.absl::optional_internal::optional_data_base.188" = type { %"class.absl::optional_internal::optional_data_dtor_base.189" }
%"class.absl::optional_internal::optional_data_dtor_base.189" = type { i8, %union.anon.190 }
%union.anon.190 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.191" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.191" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.192 }
%class.scoped_refptr.192 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.196", %class.scoped_refptr.197 }
%"class.base::RepeatingCallback.196" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.197 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.58", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.201" = type { %"class.std::__1::__tree.202" }
%"class.std::__1::__tree.202" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::map.212" = type { %"class.std::__1::__tree.213" }
%"class.std::__1::__tree.213" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.base::OnceCallback.221" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.222" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.device::mojom::HidManagerProxy"* }
%"class.device::mojom::HidManagerProxy" = type { %"class.device::mojom::HidManager", %"class.mojo::MessageReceiverWithResponder"* }
%"class.device::mojom::HidManager" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.device::mojom::HidManagerClientStub", %"class.base::WeakPtrFactory.232" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.176" }
%"class.device::mojom::HidManagerClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.device::mojom::HidManagerClient"* }
%"class.base::WeakPtrFactory.232" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.233" = type { %"class.base::internal::WeakPtrFactoryBase" }

$_ZN6device25GamepadDataFetcherFactoryD2Ev = comdat any

$_ZN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EED0Ev = comdat any

$_ZN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EE17CreateDataFetcherEv = comdat any

$_ZN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EE6sourceEv = comdat any

$_ZTVN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EEE = comdat any

@_ZN6device12_GLOBAL__N_130g_gamepad_data_fetcher_managerE = internal unnamed_addr global %"class.device::GamepadDataFetcherManager"* null, align 8
@_ZTVN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::GamepadDataFetcherFactory"*)* @_ZN6device25GamepadDataFetcherFactoryD2Ev to i8*), i8* bitcast (void (%"class.device::GamepadDataFetcherFactoryImpl"*)* @_ZN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EED0Ev to i8*), i8* bitcast (%"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactoryImpl"*)* @_ZN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EE17CreateDataFetcherEv to i8*), i8* bitcast (i32 (%"class.device::GamepadDataFetcherFactoryImpl"*)* @_ZN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EE6sourceEv to i8*)] }, comdat, align 8

@_ZN6device25GamepadDataFetcherManagerC1Ev = hidden unnamed_addr alias void (%"class.device::GamepadDataFetcherManager"*), void (%"class.device::GamepadDataFetcherManager"*)* @_ZN6device25GamepadDataFetcherManagerC2Ev
@_ZN6device25GamepadDataFetcherManagerD1Ev = hidden unnamed_addr alias void (%"class.device::GamepadDataFetcherManager"*), void (%"class.device::GamepadDataFetcherManager"*)* @_ZN6device25GamepadDataFetcherManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device30AddGamepadPlatformDataFetchersEPNS_25GamepadDataFetcherManagerE(%"class.device::GamepadDataFetcherManager"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 16) #8
  %3 = bitcast i8* %2 to %"class.device::GamepadPlatformDataFetcherLinux::Factory"*
  %4 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #9
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SequencedTaskRunner"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %1, %8
  tail call void @_ZN6device31GamepadPlatformDataFetcherLinux7FactoryC1E13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.device::GamepadPlatformDataFetcherLinux::Factory"* nonnull %3, %"class.base::SequencedTaskRunner"* %6) #9
  %12 = bitcast i8* %2 to %"class.device::GamepadDataFetcherFactory"*
  tail call void @_ZN6device25GamepadDataFetcherManager10AddFactoryEPNS_25GamepadDataFetcherFactoryE(%"class.device::GamepadDataFetcherManager"* %0, %"class.device::GamepadDataFetcherFactory"* nonnull %12)
  %13 = tail call i8* @_Znwm(i64 8) #8
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = bitcast i8* %13 to %"class.device::GamepadDataFetcherFactory"*
  tail call void @_ZN6device25GamepadDataFetcherFactoryC2Ev(%"class.device::GamepadDataFetcherFactory"* nonnull %15) #9
  %16 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  tail call void @_ZN6device25GamepadDataFetcherManager10AddFactoryEPNS_25GamepadDataFetcherFactoryE(%"class.device::GamepadDataFetcherManager"* %0, %"class.device::GamepadDataFetcherFactory"* nonnull %15)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device25GamepadDataFetcherManager10AddFactoryEPNS_25GamepadDataFetcherFactoryE(%"class.device::GamepadDataFetcherManager"*, %"class.device::GamepadDataFetcherFactory"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.device::GamepadDataFetcherFactory"* %1 to i64
  %4 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"*** %4, align 8
  %6 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"*** %6, align 8
  %8 = icmp eq %"class.device::GamepadDataFetcherFactory"** %5, %7
  %9 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %7 to i64
  br i1 %8, label %15, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.device::GamepadDataFetcherFactory"** %5 to i64*
  store i64 %3, i64* %11, align 8
  %12 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %5, i64 1
  %13 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %12 to i64
  %14 = bitcast %"class.device::GamepadDataFetcherFactory"*** %4 to i64*
  store i64 %13, i64* %14, align 8
  br label %72

15:                                               ; preds = %2
  %16 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %5 to i64
  %17 = bitcast %"class.device::GamepadDataFetcherFactory"*** %4 to i64*
  %18 = bitcast %"class.device::GamepadDataFetcherManager"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = icmp ugt i64 %22, 2305843009213693951
  br i1 %23, label %24, label %26

24:                                               ; preds = %15
  %25 = bitcast %"class.device::GamepadDataFetcherManager"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #10
  unreachable

26:                                               ; preds = %15
  %27 = bitcast %"class.device::GamepadDataFetcherFactory"*** %6 to i64*
  %28 = sub i64 %9, %19
  %29 = ashr exact i64 %28, 3
  %30 = icmp ult i64 %29, 1152921504606846975
  br i1 %30, label %31, label %39

31:                                               ; preds = %26
  %32 = ashr exact i64 %28, 2
  %33 = icmp ult i64 %32, %22
  %34 = select i1 %33, i64 %22, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = icmp ugt i64 %34, 2305843009213693951
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  tail call void @abort() #10
  unreachable

39:                                               ; preds = %36, %26
  %40 = phi i64 [ %34, %36 ], [ 2305843009213693951, %26 ]
  %41 = shl i64 %40, 3
  %42 = tail call i8* @_Znwm(i64 %41) #8
  %43 = bitcast i8* %42 to %"class.device::GamepadDataFetcherFactory"**
  br label %44

44:                                               ; preds = %39, %31
  %45 = phi i64 [ %40, %39 ], [ 0, %31 ]
  %46 = phi %"class.device::GamepadDataFetcherFactory"** [ %43, %39 ], [ null, %31 ]
  %47 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %46, i64 %21
  %48 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %46, i64 %45
  %49 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %48 to i64
  %50 = bitcast %"class.device::GamepadDataFetcherFactory"** %47 to i64*
  store i64 %3, i64* %50, align 8
  %51 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %47, i64 1
  %52 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %51 to i64
  %53 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"*** %53, align 8
  %55 = load i64, i64* %17, align 8
  %56 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %54 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = sub nsw i64 0, %58
  %60 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %47, i64 %59
  %61 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %60 to i64
  %62 = icmp sgt i64 %57, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %44
  %64 = bitcast %"class.device::GamepadDataFetcherFactory"** %60 to i8*
  %65 = bitcast %"class.device::GamepadDataFetcherFactory"** %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %57, i1 false) #9
  %66 = load %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"*** %53, align 8
  br label %67

67:                                               ; preds = %63, %44
  %68 = phi %"class.device::GamepadDataFetcherFactory"** [ %54, %44 ], [ %66, %63 ]
  store i64 %61, i64* %18, align 8
  store i64 %52, i64* %17, align 8
  store i64 %49, i64* %27, align 8
  %69 = icmp eq %"class.device::GamepadDataFetcherFactory"** %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.device::GamepadDataFetcherFactory"** %68 to i8*
  tail call void @_ZdlPv(i8* %71) #8
  br label %72

72:                                               ; preds = %10, %67, %70
  %73 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 1
  %74 = load %"class.device::GamepadProvider"*, %"class.device::GamepadProvider"** %73, align 8
  %75 = icmp eq %"class.device::GamepadProvider"* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.device::GamepadDataFetcherFactory"* %1 to %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)***
  %78 = load %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)**, %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)*** %77, align 8
  %79 = getelementptr inbounds %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)*, %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)** %78, i64 2
  %80 = load %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)*, %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)** %79, align 8
  %81 = tail call %"class.device::GamepadDataFetcher"* %80(%"class.device::GamepadDataFetcherFactory"* %1) #9
  tail call void @_ZN6device15GamepadProvider21AddGamepadDataFetcherENSt3__110unique_ptrINS_18GamepadDataFetcherENS1_14default_deleteIS3_EEEE(%"class.device::GamepadProvider"* nonnull %74, %"class.device::GamepadDataFetcher"* %81) #9
  br label %82

82:                                               ; preds = %72, %76
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #2

declare void @_ZN6device31GamepadPlatformDataFetcherLinux7FactoryC1E13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.device::GamepadPlatformDataFetcherLinux::Factory"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device25GamepadDataFetcherManagerC2Ev(%"class.device::GamepadDataFetcherManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.device::GamepadDataFetcherManager"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device25GamepadDataFetcherManagerD2Ev(%"class.device::GamepadDataFetcherManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"*** %2, align 8
  %4 = icmp eq %"class.device::GamepadDataFetcherFactory"** %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %3 to i64
  %7 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.device::GamepadDataFetcherFactory"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.device::GamepadDataFetcherFactory"** %3 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.device::GamepadDataFetcherManager"* @_ZN6device25GamepadDataFetcherManager11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.device::GamepadDataFetcherManager"*, %"class.device::GamepadDataFetcherManager"** @_ZN6device12_GLOBAL__N_130g_gamepad_data_fetcher_managerE, align 8
  %2 = icmp eq %"class.device::GamepadDataFetcherManager"* %1, null
  br i1 %2, label %3, label %7

3:                                                ; preds = %0
  %4 = tail call i8* @_Znwm(i64 32) #8
  %5 = bitcast i8* %4 to %"class.device::GamepadDataFetcherManager"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 32, i1 false) #9
  store i8* %4, i8** bitcast (%"class.device::GamepadDataFetcherManager"** @_ZN6device12_GLOBAL__N_130g_gamepad_data_fetcher_managerE to i8**), align 8
  tail call void @_ZN6device30AddGamepadPlatformDataFetchersEPNS_25GamepadDataFetcherManagerE(%"class.device::GamepadDataFetcherManager"* nonnull %5)
  %6 = load %"class.device::GamepadDataFetcherManager"*, %"class.device::GamepadDataFetcherManager"** @_ZN6device12_GLOBAL__N_130g_gamepad_data_fetcher_managerE, align 8
  br label %7

7:                                                ; preds = %0, %3
  %8 = phi %"class.device::GamepadDataFetcherManager"* [ %1, %0 ], [ %6, %3 ]
  ret %"class.device::GamepadDataFetcherManager"* %8
}

declare void @_ZN6device15GamepadProvider21AddGamepadDataFetcherENSt3__110unique_ptrINS_18GamepadDataFetcherENS1_14default_deleteIS3_EEEE(%"class.device::GamepadProvider"*, %"class.device::GamepadDataFetcher"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device25GamepadDataFetcherManager19RemoveSourceFactoryENS_13GamepadSourceE(%"class.device::GamepadDataFetcherManager"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 1
  %4 = load %"class.device::GamepadProvider"*, %"class.device::GamepadProvider"** %3, align 8
  %5 = icmp eq %"class.device::GamepadProvider"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN6device15GamepadProvider30RemoveSourceGamepadDataFetcherENS_13GamepadSourceE(%"class.device::GamepadProvider"* nonnull %4, i32 %1) #9
  br label %7

7:                                                ; preds = %2, %6
  %8 = bitcast %"class.device::GamepadDataFetcherManager"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"*** %10, align 8
  %12 = inttoptr i64 %9 to %"class.device::GamepadDataFetcherFactory"**
  %13 = icmp eq %"class.device::GamepadDataFetcherFactory"** %11, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.device::GamepadDataFetcherFactory"*** %10 to i64*
  br label %17

16:                                               ; preds = %51, %7
  ret void

17:                                               ; preds = %14, %51
  %18 = phi %"class.device::GamepadDataFetcherFactory"** [ %12, %14 ], [ %54, %51 ]
  %19 = phi i64 [ %9, %14 ], [ %53, %51 ]
  %20 = load %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %18, align 8
  %21 = bitcast %"class.device::GamepadDataFetcherFactory"* %20 to i32 (%"class.device::GamepadDataFetcherFactory"*)***
  %22 = load i32 (%"class.device::GamepadDataFetcherFactory"*)**, i32 (%"class.device::GamepadDataFetcherFactory"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.device::GamepadDataFetcherFactory"*)*, i32 (%"class.device::GamepadDataFetcherFactory"*)** %22, i64 3
  %24 = load i32 (%"class.device::GamepadDataFetcherFactory"*)*, i32 (%"class.device::GamepadDataFetcherFactory"*)** %23, align 8
  %25 = tail call i32 %24(%"class.device::GamepadDataFetcherFactory"* %20) #9
  %26 = icmp eq i32 %25, %1
  br i1 %26, label %27, label %47

27:                                               ; preds = %17
  %28 = load %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %18, align 8
  %29 = icmp eq %"class.device::GamepadDataFetcherFactory"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.device::GamepadDataFetcherFactory"* %28 to void (%"class.device::GamepadDataFetcherFactory"*)***
  %32 = load void (%"class.device::GamepadDataFetcherFactory"*)**, void (%"class.device::GamepadDataFetcherFactory"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.device::GamepadDataFetcherFactory"*)*, void (%"class.device::GamepadDataFetcherFactory"*)** %32, i64 1
  %34 = load void (%"class.device::GamepadDataFetcherFactory"*)*, void (%"class.device::GamepadDataFetcherFactory"*)** %33, align 8
  tail call void %34(%"class.device::GamepadDataFetcherFactory"* nonnull %28) #9
  br label %35

35:                                               ; preds = %30, %27
  %36 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %18, i64 1
  %37 = load i64, i64* %15, align 8
  %38 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %36 to i64
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = inttoptr i64 %19 to i8*
  %44 = bitcast %"class.device::GamepadDataFetcherFactory"** %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 %39, i1 false) #9
  br label %45

45:                                               ; preds = %35, %42
  %46 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %18, i64 %40
  store %"class.device::GamepadDataFetcherFactory"** %46, %"class.device::GamepadDataFetcherFactory"*** %10, align 8
  br label %51

47:                                               ; preds = %17
  %48 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %18, i64 1
  %49 = ptrtoint %"class.device::GamepadDataFetcherFactory"** %48 to i64
  %50 = load %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"*** %10, align 8
  br label %51

51:                                               ; preds = %47, %45
  %52 = phi %"class.device::GamepadDataFetcherFactory"** [ %46, %45 ], [ %50, %47 ]
  %53 = phi i64 [ %19, %45 ], [ %49, %47 ]
  %54 = inttoptr i64 %53 to %"class.device::GamepadDataFetcherFactory"**
  %55 = icmp eq %"class.device::GamepadDataFetcherFactory"** %52, %54
  br i1 %55, label %16, label %17
}

declare void @_ZN6device15GamepadProvider30RemoveSourceGamepadDataFetcherENS_13GamepadSourceE(%"class.device::GamepadProvider"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device25GamepadDataFetcherManager18InitializeProviderEPNS_15GamepadProviderE(%"class.device::GamepadDataFetcherManager"* nocapture, %"class.device::GamepadProvider"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 1
  store %"class.device::GamepadProvider"* %1, %"class.device::GamepadProvider"** %3, align 8
  %4 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"*** %4, align 8
  %6 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.device::GamepadDataFetcherFactory"**, %"class.device::GamepadDataFetcherFactory"*** %6, align 8
  %8 = icmp eq %"class.device::GamepadDataFetcherFactory"** %5, %7
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = load %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %5, align 8
  %11 = bitcast %"class.device::GamepadDataFetcherFactory"* %10 to %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)***
  %12 = load %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)**, %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)*, %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)** %12, i64 2
  %14 = load %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)*, %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)** %13, align 8
  %15 = tail call %"class.device::GamepadDataFetcher"* %14(%"class.device::GamepadDataFetcherFactory"* %10) #9
  tail call void @_ZN6device15GamepadProvider21AddGamepadDataFetcherENSt3__110unique_ptrINS_18GamepadDataFetcherENS1_14default_deleteIS3_EEEE(%"class.device::GamepadProvider"* %1, %"class.device::GamepadDataFetcher"* %15) #9
  %16 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %5, i64 1
  %17 = icmp eq %"class.device::GamepadDataFetcherFactory"** %16, %7
  br i1 %17, label %18, label %19

18:                                               ; preds = %19, %9, %2
  ret void

19:                                               ; preds = %9, %19
  %20 = phi %"class.device::GamepadDataFetcherFactory"** [ %28, %19 ], [ %16, %9 ]
  %21 = load %"class.device::GamepadProvider"*, %"class.device::GamepadProvider"** %3, align 8
  %22 = load %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %20, align 8
  %23 = bitcast %"class.device::GamepadDataFetcherFactory"* %22 to %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)***
  %24 = load %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)**, %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)*, %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)** %24, i64 2
  %26 = load %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)*, %"class.device::GamepadDataFetcher"* (%"class.device::GamepadDataFetcherFactory"*)** %25, align 8
  %27 = tail call %"class.device::GamepadDataFetcher"* %26(%"class.device::GamepadDataFetcherFactory"* %22) #9
  tail call void @_ZN6device15GamepadProvider21AddGamepadDataFetcherENSt3__110unique_ptrINS_18GamepadDataFetcherENS1_14default_deleteIS3_EEEE(%"class.device::GamepadProvider"* %21, %"class.device::GamepadDataFetcher"* %27) #9
  %28 = getelementptr inbounds %"class.device::GamepadDataFetcherFactory"*, %"class.device::GamepadDataFetcherFactory"** %20, i64 1
  %29 = icmp eq %"class.device::GamepadDataFetcherFactory"** %28, %7
  br i1 %29, label %18, label %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6device25GamepadDataFetcherManager13ClearProviderEv(%"class.device::GamepadDataFetcherManager"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDataFetcherManager", %"class.device::GamepadDataFetcherManager"* %0, i64 0, i32 1
  store %"class.device::GamepadProvider"* null, %"class.device::GamepadProvider"** %2, align 8
  ret void
}

declare void @_ZN6device25GamepadDataFetcherFactoryC2Ev(%"class.device::GamepadDataFetcherFactory"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device25GamepadDataFetcherFactoryD2Ev(%"class.device::GamepadDataFetcherFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EED0Ev(%"class.device::GamepadDataFetcherFactoryImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.device::GamepadDataFetcherFactoryImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.device::GamepadDataFetcher"* @_ZN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EE17CreateDataFetcherEv(%"class.device::GamepadDataFetcherFactoryImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 176) #8
  %3 = bitcast i8* %2 to %"class.device::NintendoDataFetcher"*
  tail call void @_ZN6device19NintendoDataFetcherC1Ev(%"class.device::NintendoDataFetcher"* nonnull %3) #9
  %4 = bitcast i8* %2 to %"class.device::GamepadDataFetcher"*
  ret %"class.device::GamepadDataFetcher"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6device29GamepadDataFetcherFactoryImplINS_19NintendoDataFetcherELNS_13GamepadSourceE8EE6sourceEv(%"class.device::GamepadDataFetcherFactoryImpl"*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN6device19NintendoDataFetcherC1Ev(%"class.device::NintendoDataFetcher"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
