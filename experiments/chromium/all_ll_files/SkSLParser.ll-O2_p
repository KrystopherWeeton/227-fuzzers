; ModuleID = '../../third_party/skia/src/sksl/SkSLParser.cpp'
source_filename = "../../third_party/skia/src/sksl/SkSLParser.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.SkSL::Parser" = type { %"struct.SkSL::StringFragment", %"class.SkSL::Lexer", i32, %"struct.SkSL::Token", %"class.SkSL::SymbolTable"*, %"class.SkSL::ErrorReporter"*, %"class.std::__1::unique_ptr.42" }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::Lexer" = type { i8*, i32, i32 }
%"struct.SkSL::Token" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkSL::ASTFile"* }
%"struct.SkSL::ASTFile" = type <{ %"class.std::__1::vector.45", %"class.SkSL::ASTNode::ID", [4 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.47" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.45"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.SkSL::ASTNode"* }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector", i8, %"class.std::__1::vector.25", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.SkSL::Symbol"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector.55", i32, i32, %"class.std::__1::vector.62", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.64" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.SkSL::Type::Field"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::unique_ptr.19"* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.std::__1::unique_ptr.27"*, %"class.std::__1::unique_ptr.27"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr.27"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.89" }
%"struct.std::__1::pair.89" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.SkSL::String"* }
%"class.std::__1::tuple.96" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.SkSL::ASTNode::SectionData" = type { %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment" }
%"class.SkSL::AutoDepth" = type <{ %"class.SkSL::Parser"*, i32, [4 x i8] }>
%"class.SkSL::Operator" = type { i32 }
%class.anon.75 = type { %"class.SkSL::Parser"*, %"class.SkSL::ASTNode::ID"* }
%"struct.SkSL::ASTNode::VarData" = type <{ %"struct.SkSL::StringFragment", i8, [7 x i8] }>
%"struct.SkSL::Parser::VarDeclarationsPrefix" = type { %"struct.SkSL::Modifiers", %"class.SkSL::ASTNode::ID", %"struct.SkSL::Token" }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZN4SkSL6Parser10createNodeIJiNS_7ASTNode4KindEEEENS2_2IDEDpOT_ = comdat any

$_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS3_11SectionDataEEEENS3_2IDEDpOT_ = comdat any

$_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERNS_9ModifiersEEEENS3_2IDEDpOT_ = comdat any

$_ZN4SkSL6Parser10createNodeIJRKiNS_7ASTNode4KindEEEENS4_2IDEDpOT_ = comdat any

$_ZNK4SkSL9Modifiers11descriptionEv = comdat any

$_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_ = comdat any

$_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERlEEENS3_2IDEDpOT_ = comdat any

$_ZN4SkSL9AutoDepth8increaseEv = comdat any

$_ZN4SkSL6Parser10createNodeIJiNS_7ASTNode4KindERlEEENS2_2IDEDpOT_ = comdat any

$_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERbEEENS3_2IDEDpOT_ = comdat any

$_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_ = comdat any

$_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERfEEENS3_2IDEDpOT_ = comdat any

$_ZN4SkSL4TypeD2Ev = comdat any

$_ZN4SkSL4TypeD0Ev = comdat any

$_ZNK4SkSL4Type11descriptionEv = comdat any

$_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNK4SkSL6Layout11descriptionEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZTVN4SkSL4TypeE = comdat any

@_ZN4SkSL6Parser12layoutTokensE = hidden local_unnamed_addr global %"class.std::__1::unordered_map"* null, align 8
@.str.1 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"binding\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"builtin\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"input_attachment_index\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"origin_upper_left\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"blend_support_all_equations\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"push_constant\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"line_strip\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"lines_adjacency\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"triangles\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"triangle_strip\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"triangles_adjacency\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"max_vertices\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"invocations\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"srgb_unpremul\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"ctype\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"SkPMColor4f\00", align 1
@_ZZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterEE20layoutMapInitialized = internal global i8 0, align 1
@_ZGVZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterEE20layoutMapInitialized = internal global i64 0, align 8
@.str.25 = private unnamed_addr constant [14 x i8] c"invalid token\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"expected \00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c", but found '\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"an identifier\00", align 1
@.str.30 = private unnamed_addr constant [41 x i8] c"expected an identifier, but found type '\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"a directive\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"#extension\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"':'\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"unsupported directive '\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"a section token\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"')'\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"'{'\00", align 1
@.str.38 = private unnamed_addr constant [42 x i8] c"reached end of file while parsing section\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"'enum'\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"'class'\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"','\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"';'\00", align 1
@.str.43 = private unnamed_addr constant [38 x i8] c"expected a declaration, but found ';'\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"'struct'\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"modifier '\00", align 1
@.str.47 = private unnamed_addr constant [37 x i8] c"' is not permitted on a struct field\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"opaque type '\00", align 1
@.str.49 = private unnamed_addr constant [31 x i8] c"' is not permitted in a struct\00", align 1
@.str.50 = private unnamed_addr constant [46 x i8] c"array size in struct field must be a constant\00", align 1
@.str.51 = private unnamed_addr constant [22 x i8] c"array size is invalid\00", align 1
@.str.52 = private unnamed_addr constant [48 x i8] c"initializers are not permitted on struct fields\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"'}'\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"struct '\00", align 1
@.str.55 = private unnamed_addr constant [34 x i8] c"' must contain at least one field\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"' is too deeply nested\00", align 1
@.str.57 = private unnamed_addr constant [43 x i8] c"multi-dimensional arrays are not supported\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"a positive integer\00", align 1
@.str.59 = private unnamed_addr constant [26 x i8] c"array size is too large: \00", align 1
@.str.60 = private unnamed_addr constant [4 x i8] c"']'\00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"'='\00", align 1
@.str.62 = private unnamed_addr constant [23 x i8] c"a non-negative integer\00", align 1
@.str.63 = private unnamed_addr constant [31 x i8] c"value in layout is too large: \00", align 1
@.str.64 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.65 = private unnamed_addr constant [41 x i8] c"reached end of file while parsing layout\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"unsupported ctype\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"'('\00", align 1
@.str.68 = private unnamed_addr constant [34 x i8] c"' is not a valid layout qualifier\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"a type\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"no type named '\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c"interface block '\00", align 1
@.str.72 = private unnamed_addr constant [35 x i8] c"' must contain at least one member\00", align 1
@.str.73 = private unnamed_addr constant [5 x i8] c"'if'\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"'do'\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"'while'\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"'case'\00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c"'switch'\00", align 1
@.str.78 = private unnamed_addr constant [10 x i8] c"'default'\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"'for'\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c"'return'\00", align 1
@.str.81 = private unnamed_addr constant [8 x i8] c"'break'\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"'continue'\00", align 1
@.str.83 = private unnamed_addr constant [36 x i8] c"expected '}', but found end of file\00", align 1
@.str.84 = private unnamed_addr constant [40 x i8] c"']' to complete array access expression\00", align 1
@.str.85 = private unnamed_addr constant [16 x i8] c"invalid swizzle\00", align 1
@.str.86 = private unnamed_addr constant [36 x i8] c"')' to complete function parameters\00", align 1
@.str.87 = private unnamed_addr constant [40 x i8] c"expected expression suffix, but found '\00", align 1
@.str.88 = private unnamed_addr constant [27 x i8] c"')' to complete expression\00", align 1
@.str.89 = private unnamed_addr constant [33 x i8] c"expected expression, but found '\00", align 1
@.str.90 = private unnamed_addr constant [16 x i8] c"integer literal\00", align 1
@.str.91 = private unnamed_addr constant [23 x i8] c"integer is too large: \00", align 1
@.str.92 = private unnamed_addr constant [14 x i8] c"float literal\00", align 1
@.str.93 = private unnamed_addr constant [36 x i8] c"floating-point value is too large: \00", align 1
@.str.94 = private unnamed_addr constant [40 x i8] c"expected 'true' or 'false', but found '\00", align 1
@.str.95 = private unnamed_addr constant [11 x i8] c"identifier\00", align 1
@.str.97 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@_ZTVN4SkSL4TypeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Type"*)* @_ZNK4SkSL4Type11descriptionEv to i8*)] }, comdat, align 8
@.str.98 = private unnamed_addr constant [9 x i8] c"uniform \00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"const \00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"flat \00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c"noperspective \00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"sk_has_side_effects \00", align 1
@.str.103 = private unnamed_addr constant [10 x i8] c"noinline \00", align 1
@.str.104 = private unnamed_addr constant [7 x i8] c"inout \00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"in \00", align 1
@.str.106 = private unnamed_addr constant [5 x i8] c"out \00", align 1
@.str.107 = private unnamed_addr constant [12 x i8] c"location = \00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"offset = \00", align 1
@.str.109 = private unnamed_addr constant [11 x i8] c"binding = \00", align 1
@.str.110 = private unnamed_addr constant [9 x i8] c"index = \00", align 1
@.str.111 = private unnamed_addr constant [7 x i8] c"set = \00", align 1
@.str.112 = private unnamed_addr constant [11 x i8] c"builtin = \00", align 1
@.str.113 = private unnamed_addr constant [26 x i8] c"input_attachment_index = \00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"max_vertices = \00", align 1
@.str.115 = private unnamed_addr constant [15 x i8] c"invocations = \00", align 1
@.str.116 = private unnamed_addr constant [8 x i8] c"when = \00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"layout (\00", align 1
@.str.118 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.119 = private unnamed_addr constant [16 x i8] c"/* key */ const\00", align 1
@.str.121 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.122 = private unnamed_addr constant [19 x i8] c"layout qualifier '\00", align 1
@.str.123 = private unnamed_addr constant [25 x i8] c"' appears more than once\00", align 1
@.str.124 = private unnamed_addr constant [52 x i8] c"only one primitive-type layout qualifier is allowed\00", align 1
@.str.125 = private unnamed_addr constant [25 x i8] c"exceeded max parse depth\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@switch.table._ZN4SkSL6Parser9modifiersEv = private unnamed_addr constant [10 x i32] [i32 2, i32 4, i32 6, i32 8, i32 1, i32 16, i32 32, i32 256, i32 512, i32 64], align 4
@switch.table._ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE = private unnamed_addr constant [34 x i32] [i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 0, i32 4, i32 0, i32 6, i32 1, i32 0, i32 2, i32 3, i32 9, i32 5, i32 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 1, i32 8], align 4

@_ZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterE = hidden unnamed_addr alias void (%"class.SkSL::Parser"*, i8*, i64, %"class.SkSL::SymbolTable"*, %"class.SkSL::ErrorReporter"*), void (%"class.SkSL::Parser"*, i8*, i64, %"class.SkSL::SymbolTable"*, %"class.SkSL::ErrorReporter"*)* @_ZN4SkSL6ParserC2EPKcmRNS_11SymbolTableERNS_13ErrorReporterE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL6Parser13InitLayoutMapEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::tuple", align 8
  %2 = alloca %"class.std::__1::tuple.96", align 1
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.96", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.96", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple.96", align 1
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.96", align 1
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"class.std::__1::tuple.96", align 1
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple.96", align 1
  %15 = alloca %"class.std::__1::tuple", align 8
  %16 = alloca %"class.std::__1::tuple.96", align 1
  %17 = alloca %"class.std::__1::tuple", align 8
  %18 = alloca %"class.std::__1::tuple.96", align 1
  %19 = alloca %"class.std::__1::tuple", align 8
  %20 = alloca %"class.std::__1::tuple.96", align 1
  %21 = alloca %"class.std::__1::tuple", align 8
  %22 = alloca %"class.std::__1::tuple.96", align 1
  %23 = alloca %"class.std::__1::tuple", align 8
  %24 = alloca %"class.std::__1::tuple.96", align 1
  %25 = alloca %"class.std::__1::tuple", align 8
  %26 = alloca %"class.std::__1::tuple.96", align 1
  %27 = alloca %"class.std::__1::tuple", align 8
  %28 = alloca %"class.std::__1::tuple.96", align 1
  %29 = alloca %"class.std::__1::tuple", align 8
  %30 = alloca %"class.std::__1::tuple.96", align 1
  %31 = alloca %"class.std::__1::tuple", align 8
  %32 = alloca %"class.std::__1::tuple.96", align 1
  %33 = alloca %"class.std::__1::tuple", align 8
  %34 = alloca %"class.std::__1::tuple.96", align 1
  %35 = alloca %"class.std::__1::tuple", align 8
  %36 = alloca %"class.std::__1::tuple.96", align 1
  %37 = alloca %"class.std::__1::tuple", align 8
  %38 = alloca %"class.std::__1::tuple.96", align 1
  %39 = alloca %"class.std::__1::tuple", align 8
  %40 = alloca %"class.std::__1::tuple.96", align 1
  %41 = alloca %"class.std::__1::tuple", align 8
  %42 = alloca %"class.std::__1::tuple.96", align 1
  %43 = alloca %"class.std::__1::tuple", align 8
  %44 = alloca %"class.std::__1::tuple.96", align 1
  %45 = alloca %"class.std::__1::tuple", align 8
  %46 = alloca %"class.std::__1::tuple.96", align 1
  %47 = alloca %"class.std::__1::tuple", align 8
  %48 = alloca %"class.std::__1::tuple.96", align 1
  %49 = alloca %"class.std::__1::tuple", align 8
  %50 = alloca %"class.std::__1::tuple.96", align 1
  %51 = alloca %"class.SkSL::String", align 8
  %52 = alloca %"class.SkSL::String", align 8
  %53 = alloca %"class.SkSL::String", align 8
  %54 = alloca %"class.SkSL::String", align 8
  %55 = alloca %"class.SkSL::String", align 8
  %56 = alloca %"class.SkSL::String", align 8
  %57 = alloca %"class.SkSL::String", align 8
  %58 = alloca %"class.SkSL::String", align 8
  %59 = alloca %"class.SkSL::String", align 8
  %60 = alloca %"class.SkSL::String", align 8
  %61 = alloca %"class.SkSL::String", align 8
  %62 = alloca %"class.SkSL::String", align 8
  %63 = alloca %"class.SkSL::String", align 8
  %64 = alloca %"class.SkSL::String", align 8
  %65 = alloca %"class.SkSL::String", align 8
  %66 = alloca %"class.SkSL::String", align 8
  %67 = alloca %"class.SkSL::String", align 8
  %68 = alloca %"class.SkSL::String", align 8
  %69 = alloca %"class.SkSL::String", align 8
  %70 = alloca %"class.SkSL::String", align 8
  %71 = alloca %"class.SkSL::String", align 8
  %72 = alloca %"class.SkSL::String", align 8
  %73 = alloca %"class.SkSL::String", align 8
  %74 = alloca %"class.SkSL::String", align 8
  %75 = alloca %"class.SkSL::String", align 8
  %76 = tail call i8* @_Znwm(i64 40) #14
  %77 = getelementptr inbounds i8, i8* %76, i64 32
  %78 = bitcast i8* %77 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %78, align 4
  store i8* %76, i8** bitcast (%"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE to i8**), align 8
  %79 = bitcast %"class.SkSL::String"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #15
  %80 = bitcast %"class.SkSL::String"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 8, i8* %81, align 1
  %82 = bitcast %"class.SkSL::String"* %51 to i64*
  store i64 7957695015157985132, i64* %82, align 8
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = bitcast i64* %83 to i8*
  store i8 0, i8* %84, align 8
  %85 = bitcast i8* %76 to %"class.std::__1::__hash_table"*
  %86 = bitcast %"class.std::__1::tuple"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #15
  %87 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %49, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %51, %"class.SkSL::String"** %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %50, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %88) #15
  %89 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %85, %"class.SkSL::String"* nonnull dereferenceable(24) %51, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %49, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %50) #15
  %90 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %89, 0
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %90, i64 5
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %88) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #15
  store i32 0, i32* %92, align 4
  %93 = load i8, i8* %81, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %0
  %96 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %0, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #15
  %99 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %100 = bitcast %"class.SkSL::String"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #15
  %101 = bitcast %"class.SkSL::String"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  store i8 6, i8* %102, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 6, i1 false) #15
  %103 = getelementptr inbounds i8, i8* %100, i64 6
  store i8 0, i8* %103, align 2
  %104 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %99, i64 0, i32 0
  %105 = bitcast %"class.std::__1::tuple"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #15
  %106 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %47, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %52, %"class.SkSL::String"** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %48, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #15
  %108 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %104, %"class.SkSL::String"* nonnull dereferenceable(24) %52, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %47, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %48) #15
  %109 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %109, i64 5
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #15
  store i32 1, i32* %111, align 4
  %112 = load i8, i8* %102, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %98
  %115 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %98, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #15
  %118 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %119 = bitcast %"class.SkSL::String"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #15
  %120 = bitcast %"class.SkSL::String"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  store i8 7, i8* %121, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7, i1 false) #15
  %122 = getelementptr inbounds i8, i8* %119, i64 7
  store i8 0, i8* %122, align 1
  %123 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %118, i64 0, i32 0
  %124 = bitcast %"class.std::__1::tuple"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #15
  %125 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %45, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %53, %"class.SkSL::String"** %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %46, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %126) #15
  %127 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %123, %"class.SkSL::String"* nonnull dereferenceable(24) %53, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %45, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %46) #15
  %128 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %127, 0
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %128, i64 5
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %126) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #15
  store i32 2, i32* %130, align 4
  %131 = load i8, i8* %121, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %117
  %134 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #14
  br label %136

136:                                              ; preds = %117, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #15
  %137 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %138 = bitcast %"class.SkSL::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #15
  %139 = bitcast %"class.SkSL::String"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  store i8 5, i8* %140, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %138, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5, i1 false) #15
  %141 = getelementptr inbounds i8, i8* %138, i64 5
  store i8 0, i8* %141, align 1
  %142 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %137, i64 0, i32 0
  %143 = bitcast %"class.std::__1::tuple"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #15
  %144 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %43, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %54, %"class.SkSL::String"** %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %44, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %145) #15
  %146 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %142, %"class.SkSL::String"* nonnull dereferenceable(24) %54, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %43, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %44) #15
  %147 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %146, 0
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %147, i64 5
  %149 = bitcast %"struct.std::__1::__hash_node_base"* %148 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %145) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #15
  store i32 3, i32* %149, align 4
  %150 = load i8, i8* %140, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %136
  %153 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %154) #14
  br label %155

155:                                              ; preds = %136, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #15
  %156 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %157 = bitcast %"class.SkSL::String"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #15
  %158 = bitcast %"class.SkSL::String"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %158, i64 0, i32 1, i32 0
  store i8 3, i8* %159, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %157, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3, i1 false) #15
  %160 = getelementptr inbounds i8, i8* %157, i64 3
  store i8 0, i8* %160, align 1
  %161 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %156, i64 0, i32 0
  %162 = bitcast %"class.std::__1::tuple"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #15
  %163 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %41, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %55, %"class.SkSL::String"** %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %42, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %164) #15
  %165 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %161, %"class.SkSL::String"* nonnull dereferenceable(24) %55, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %41, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %42) #15
  %166 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %165, 0
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %166, i64 5
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %164) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #15
  store i32 4, i32* %168, align 4
  %169 = load i8, i8* %159, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %155
  %172 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  call void @_ZdlPv(i8* %173) #14
  br label %174

174:                                              ; preds = %155, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #15
  %175 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %176 = bitcast %"class.SkSL::String"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #15
  %177 = bitcast %"class.SkSL::String"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  store i8 7, i8* %178, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %176, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7, i1 false) #15
  %179 = getelementptr inbounds i8, i8* %176, i64 7
  store i8 0, i8* %179, align 1
  %180 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %175, i64 0, i32 0
  %181 = bitcast %"class.std::__1::tuple"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #15
  %182 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %39, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %56, %"class.SkSL::String"** %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %40, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %183) #15
  %184 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %180, %"class.SkSL::String"* nonnull dereferenceable(24) %56, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %39, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %40) #15
  %185 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %184, 0
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %185, i64 5
  %187 = bitcast %"struct.std::__1::__hash_node_base"* %186 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %183) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #15
  store i32 5, i32* %187, align 4
  %188 = load i8, i8* %178, align 1
  %189 = icmp slt i8 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %174
  %191 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  call void @_ZdlPv(i8* %192) #14
  br label %193

193:                                              ; preds = %174, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #15
  %194 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %195 = bitcast %"class.SkSL::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #15
  %196 = bitcast %"class.SkSL::String"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  store i8 22, i8* %197, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %195, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i64 22, i1 false) #15
  %198 = getelementptr inbounds i8, i8* %195, i64 22
  store i8 0, i8* %198, align 2
  %199 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %194, i64 0, i32 0
  %200 = bitcast %"class.std::__1::tuple"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #15
  %201 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %37, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %57, %"class.SkSL::String"** %201, align 8
  %202 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %38, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %202) #15
  %203 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %199, %"class.SkSL::String"* nonnull dereferenceable(24) %57, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %37, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %38) #15
  %204 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %203, 0
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %204, i64 5
  %206 = bitcast %"struct.std::__1::__hash_node_base"* %205 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %202) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #15
  store i32 6, i32* %206, align 4
  %207 = load i8, i8* %197, align 1
  %208 = icmp slt i8 %207, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %193
  %210 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %211) #14
  br label %212

212:                                              ; preds = %193, %209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #15
  %213 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %214 = bitcast %"class.SkSL::String"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #15
  %215 = bitcast %"class.SkSL::String"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  store i8 17, i8* %216, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %214, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i64 17, i1 false) #15
  %217 = getelementptr inbounds i8, i8* %214, i64 17
  store i8 0, i8* %217, align 1
  %218 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %213, i64 0, i32 0
  %219 = bitcast %"class.std::__1::tuple"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #15
  %220 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %35, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %58, %"class.SkSL::String"** %220, align 8
  %221 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %36, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %221) #15
  %222 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %218, %"class.SkSL::String"* nonnull dereferenceable(24) %58, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %35, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %36) #15
  %223 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %222, 0
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %223, i64 5
  %225 = bitcast %"struct.std::__1::__hash_node_base"* %224 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %221) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #15
  store i32 7, i32* %225, align 4
  %226 = load i8, i8* %216, align 1
  %227 = icmp slt i8 %226, 0
  br i1 %227, label %228, label %231

228:                                              ; preds = %212
  %229 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8
  call void @_ZdlPv(i8* %230) #14
  br label %231

231:                                              ; preds = %212, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #15
  %232 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %233 = bitcast %"class.SkSL::String"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #15
  %234 = call i8* @_Znwm(i64 32) #14
  %235 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %234, i8** %235, align 8
  %236 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %237 = bitcast i64* %236 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %237, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %234, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i64 27, i1 false) #15
  %238 = getelementptr inbounds i8, i8* %234, i64 27
  store i8 0, i8* %238, align 1
  %239 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %232, i64 0, i32 0
  %240 = bitcast %"class.std::__1::tuple"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #15
  %241 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %33, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %59, %"class.SkSL::String"** %241, align 8
  %242 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %34, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %242) #15
  %243 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %239, %"class.SkSL::String"* nonnull dereferenceable(24) %59, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %33, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %34) #15
  %244 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %243, 0
  %245 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %244, i64 5
  %246 = bitcast %"struct.std::__1::__hash_node_base"* %245 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %242) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #15
  store i32 8, i32* %246, align 4
  %247 = bitcast %"class.SkSL::String"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %231
  %252 = load i8*, i8** %235, align 8
  call void @_ZdlPv(i8* %252) #14
  br label %253

253:                                              ; preds = %231, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #15
  %254 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %255 = bitcast %"class.SkSL::String"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %255) #15
  %256 = bitcast %"class.SkSL::String"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %256, i64 0, i32 1, i32 0
  store i8 13, i8* %257, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %255, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i64 13, i1 false) #15
  %258 = getelementptr inbounds i8, i8* %255, i64 13
  store i8 0, i8* %258, align 1
  %259 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %254, i64 0, i32 0
  %260 = bitcast %"class.std::__1::tuple"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #15
  %261 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %31, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %60, %"class.SkSL::String"** %261, align 8
  %262 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %32, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %262) #15
  %263 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %259, %"class.SkSL::String"* nonnull dereferenceable(24) %60, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %31, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %32) #15
  %264 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %263, 0
  %265 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %264, i64 5
  %266 = bitcast %"struct.std::__1::__hash_node_base"* %265 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %262) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #15
  store i32 9, i32* %266, align 4
  %267 = load i8, i8* %257, align 1
  %268 = icmp slt i8 %267, 0
  br i1 %268, label %269, label %272

269:                                              ; preds = %253
  %270 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load i8*, i8** %270, align 8
  call void @_ZdlPv(i8* %271) #14
  br label %272

272:                                              ; preds = %253, %269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %255) #15
  %273 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %274 = bitcast %"class.SkSL::String"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %274) #15
  %275 = bitcast %"class.SkSL::String"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  store i8 6, i8* %276, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %274, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6, i1 false) #15
  %277 = getelementptr inbounds i8, i8* %274, i64 6
  store i8 0, i8* %277, align 2
  %278 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %273, i64 0, i32 0
  %279 = bitcast %"class.std::__1::tuple"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #15
  %280 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %61, %"class.SkSL::String"** %280, align 8
  %281 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %281) #15
  %282 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %278, %"class.SkSL::String"* nonnull dereferenceable(24) %61, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %29, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %30) #15
  %283 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %282, 0
  %284 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %283, i64 5
  %285 = bitcast %"struct.std::__1::__hash_node_base"* %284 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %281) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #15
  store i32 10, i32* %285, align 4
  %286 = load i8, i8* %276, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %272
  %289 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  call void @_ZdlPv(i8* %290) #14
  br label %291

291:                                              ; preds = %272, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %274) #15
  %292 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %293 = bitcast %"class.SkSL::String"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %293) #15
  %294 = bitcast %"class.SkSL::String"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %295 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %294, i64 0, i32 1, i32 0
  store i8 5, i8* %295, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %293, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i64 5, i1 false) #15
  %296 = getelementptr inbounds i8, i8* %293, i64 5
  store i8 0, i8* %296, align 1
  %297 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %292, i64 0, i32 0
  %298 = bitcast %"class.std::__1::tuple"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %298) #15
  %299 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %27, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %62, %"class.SkSL::String"** %299, align 8
  %300 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %28, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %300) #15
  %301 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %297, %"class.SkSL::String"* nonnull dereferenceable(24) %62, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %27, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %28) #15
  %302 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %301, 0
  %303 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %302, i64 5
  %304 = bitcast %"struct.std::__1::__hash_node_base"* %303 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %300) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %298) #15
  store i32 11, i32* %304, align 4
  %305 = load i8, i8* %295, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %291
  %308 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #14
  br label %310

310:                                              ; preds = %291, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %293) #15
  %311 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %312 = bitcast %"class.SkSL::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %312) #15
  %313 = bitcast %"class.SkSL::String"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %313, i64 0, i32 1, i32 0
  store i8 10, i8* %314, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %312, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i64 10, i1 false) #15
  %315 = getelementptr inbounds i8, i8* %312, i64 10
  store i8 0, i8* %315, align 2
  %316 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %311, i64 0, i32 0
  %317 = bitcast %"class.std::__1::tuple"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %317) #15
  %318 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %25, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %63, %"class.SkSL::String"** %318, align 8
  %319 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %26, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %319) #15
  %320 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %316, %"class.SkSL::String"* nonnull dereferenceable(24) %63, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %25, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %26) #15
  %321 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %320, 0
  %322 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %321, i64 5
  %323 = bitcast %"struct.std::__1::__hash_node_base"* %322 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %319) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %317) #15
  store i32 12, i32* %323, align 4
  %324 = load i8, i8* %314, align 1
  %325 = icmp slt i8 %324, 0
  br i1 %325, label %326, label %329

326:                                              ; preds = %310
  %327 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load i8*, i8** %327, align 8
  call void @_ZdlPv(i8* %328) #14
  br label %329

329:                                              ; preds = %310, %326
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %312) #15
  %330 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %331 = bitcast %"class.SkSL::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %331) #15
  %332 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %333 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %332, i64 0, i32 1, i32 0
  store i8 15, i8* %333, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %331, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i64 15, i1 false) #15
  %334 = getelementptr inbounds i8, i8* %331, i64 15
  store i8 0, i8* %334, align 1
  %335 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %330, i64 0, i32 0
  %336 = bitcast %"class.std::__1::tuple"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %336) #15
  %337 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %23, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %64, %"class.SkSL::String"** %337, align 8
  %338 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %24, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %338) #15
  %339 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %335, %"class.SkSL::String"* nonnull dereferenceable(24) %64, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %23, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %24) #15
  %340 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %339, 0
  %341 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %340, i64 5
  %342 = bitcast %"struct.std::__1::__hash_node_base"* %341 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %338) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %336) #15
  store i32 13, i32* %342, align 4
  %343 = load i8, i8* %333, align 1
  %344 = icmp slt i8 %343, 0
  br i1 %344, label %345, label %348

345:                                              ; preds = %329
  %346 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load i8*, i8** %346, align 8
  call void @_ZdlPv(i8* %347) #14
  br label %348

348:                                              ; preds = %329, %345
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %331) #15
  %349 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %350 = bitcast %"class.SkSL::String"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %350) #15
  %351 = bitcast %"class.SkSL::String"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %352 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %351, i64 0, i32 1, i32 0
  store i8 9, i8* %352, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %350, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9, i1 false) #15
  %353 = getelementptr inbounds i8, i8* %350, i64 9
  store i8 0, i8* %353, align 1
  %354 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %349, i64 0, i32 0
  %355 = bitcast %"class.std::__1::tuple"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %355) #15
  %356 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %21, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %65, %"class.SkSL::String"** %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %22, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %357) #15
  %358 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %354, %"class.SkSL::String"* nonnull dereferenceable(24) %65, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %21, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %22) #15
  %359 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %358, 0
  %360 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %359, i64 5
  %361 = bitcast %"struct.std::__1::__hash_node_base"* %360 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %357) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %355) #15
  store i32 14, i32* %361, align 4
  %362 = load i8, i8* %352, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %348
  %365 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  call void @_ZdlPv(i8* %366) #14
  br label %367

367:                                              ; preds = %348, %364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %350) #15
  %368 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %369 = bitcast %"class.SkSL::String"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #15
  %370 = bitcast %"class.SkSL::String"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %371 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %370, i64 0, i32 1, i32 0
  store i8 14, i8* %371, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %369, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i64 14, i1 false) #15
  %372 = getelementptr inbounds i8, i8* %369, i64 14
  store i8 0, i8* %372, align 2
  %373 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %368, i64 0, i32 0
  %374 = bitcast %"class.std::__1::tuple"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %374) #15
  %375 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %66, %"class.SkSL::String"** %375, align 8
  %376 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %376) #15
  %377 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %373, %"class.SkSL::String"* nonnull dereferenceable(24) %66, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %19, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %20) #15
  %378 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %377, 0
  %379 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %378, i64 5
  %380 = bitcast %"struct.std::__1::__hash_node_base"* %379 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %376) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #15
  store i32 15, i32* %380, align 4
  %381 = load i8, i8* %371, align 1
  %382 = icmp slt i8 %381, 0
  br i1 %382, label %383, label %386

383:                                              ; preds = %367
  %384 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8
  call void @_ZdlPv(i8* %385) #14
  br label %386

386:                                              ; preds = %367, %383
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #15
  %387 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %388 = bitcast %"class.SkSL::String"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %388) #15
  %389 = bitcast %"class.SkSL::String"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %389, i64 0, i32 1, i32 0
  store i8 19, i8* %390, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %388, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i64 19, i1 false) #15
  %391 = getelementptr inbounds i8, i8* %388, i64 19
  store i8 0, i8* %391, align 1
  %392 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %387, i64 0, i32 0
  %393 = bitcast %"class.std::__1::tuple"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %393) #15
  %394 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %67, %"class.SkSL::String"** %394, align 8
  %395 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %395) #15
  %396 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %392, %"class.SkSL::String"* nonnull dereferenceable(24) %67, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %17, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %18) #15
  %397 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %396, 0
  %398 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %397, i64 5
  %399 = bitcast %"struct.std::__1::__hash_node_base"* %398 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %395) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %393) #15
  store i32 16, i32* %399, align 4
  %400 = load i8, i8* %390, align 1
  %401 = icmp slt i8 %400, 0
  br i1 %401, label %402, label %405

402:                                              ; preds = %386
  %403 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = load i8*, i8** %403, align 8
  call void @_ZdlPv(i8* %404) #14
  br label %405

405:                                              ; preds = %386, %402
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %388) #15
  %406 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %407 = bitcast %"class.SkSL::String"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %407) #15
  %408 = bitcast %"class.SkSL::String"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %409 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %408, i64 0, i32 1, i32 0
  store i8 12, i8* %409, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %407, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i64 12, i1 false) #15
  %410 = getelementptr inbounds i8, i8* %407, i64 12
  store i8 0, i8* %410, align 4
  %411 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %406, i64 0, i32 0
  %412 = bitcast %"class.std::__1::tuple"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %412) #15
  %413 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %68, %"class.SkSL::String"** %413, align 8
  %414 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %414) #15
  %415 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %411, %"class.SkSL::String"* nonnull dereferenceable(24) %68, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %15, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %16) #15
  %416 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %415, 0
  %417 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %416, i64 5
  %418 = bitcast %"struct.std::__1::__hash_node_base"* %417 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %414) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %412) #15
  store i32 17, i32* %418, align 4
  %419 = load i8, i8* %409, align 1
  %420 = icmp slt i8 %419, 0
  br i1 %420, label %421, label %424

421:                                              ; preds = %405
  %422 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load i8*, i8** %422, align 8
  call void @_ZdlPv(i8* %423) #14
  br label %424

424:                                              ; preds = %405, %421
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %407) #15
  %425 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %426 = bitcast %"class.SkSL::String"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %426) #15
  %427 = bitcast %"class.SkSL::String"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %428 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %427, i64 0, i32 1, i32 0
  store i8 11, i8* %428, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %426, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i64 11, i1 false) #15
  %429 = getelementptr inbounds i8, i8* %426, i64 11
  store i8 0, i8* %429, align 1
  %430 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %425, i64 0, i32 0
  %431 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %431) #15
  %432 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %69, %"class.SkSL::String"** %432, align 8
  %433 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %433) #15
  %434 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %430, %"class.SkSL::String"* nonnull dereferenceable(24) %69, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %14) #15
  %435 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %434, 0
  %436 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %435, i64 5
  %437 = bitcast %"struct.std::__1::__hash_node_base"* %436 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %433) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %431) #15
  store i32 18, i32* %437, align 4
  %438 = load i8, i8* %428, align 1
  %439 = icmp slt i8 %438, 0
  br i1 %439, label %440, label %443

440:                                              ; preds = %424
  %441 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load i8*, i8** %441, align 8
  call void @_ZdlPv(i8* %442) #14
  br label %443

443:                                              ; preds = %424, %440
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %426) #15
  %444 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %445 = bitcast %"class.SkSL::String"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %445) #15
  %446 = bitcast %"class.SkSL::String"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %447 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %446, i64 0, i32 1, i32 0
  store i8 4, i8* %447, align 1
  %448 = bitcast %"class.SkSL::String"* %70 to i32*
  store i32 1852139639, i32* %448, align 8
  %449 = getelementptr inbounds i8, i8* %445, i64 4
  store i8 0, i8* %449, align 4
  %450 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %444, i64 0, i32 0
  %451 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %451) #15
  %452 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %70, %"class.SkSL::String"** %452, align 8
  %453 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %453) #15
  %454 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %450, %"class.SkSL::String"* nonnull dereferenceable(24) %70, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %12) #15
  %455 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %454, 0
  %456 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %455, i64 5
  %457 = bitcast %"struct.std::__1::__hash_node_base"* %456 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %453) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %451) #15
  store i32 19, i32* %457, align 4
  %458 = load i8, i8* %447, align 1
  %459 = icmp slt i8 %458, 0
  br i1 %459, label %460, label %463

460:                                              ; preds = %443
  %461 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load i8*, i8** %461, align 8
  call void @_ZdlPv(i8* %462) #14
  br label %463

463:                                              ; preds = %443, %460
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %445) #15
  %464 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %465 = bitcast %"class.SkSL::String"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %465) #15
  %466 = bitcast %"class.SkSL::String"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %467 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %466, i64 0, i32 1, i32 0
  store i8 3, i8* %467, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %465, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0), i64 3, i1 false) #15
  %468 = getelementptr inbounds i8, i8* %465, i64 3
  store i8 0, i8* %468, align 1
  %469 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %464, i64 0, i32 0
  %470 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %470) #15
  %471 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %71, %"class.SkSL::String"** %471, align 8
  %472 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %472) #15
  %473 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %469, %"class.SkSL::String"* nonnull dereferenceable(24) %71, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %10) #15
  %474 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %473, 0
  %475 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %474, i64 5
  %476 = bitcast %"struct.std::__1::__hash_node_base"* %475 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %472) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %470) #15
  store i32 20, i32* %476, align 4
  %477 = load i8, i8* %467, align 1
  %478 = icmp slt i8 %477, 0
  br i1 %478, label %479, label %482

479:                                              ; preds = %463
  %480 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %481 = load i8*, i8** %480, align 8
  call void @_ZdlPv(i8* %481) #14
  br label %482

482:                                              ; preds = %463, %479
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %465) #15
  %483 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %484 = bitcast %"class.SkSL::String"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %484) #15
  %485 = bitcast %"class.SkSL::String"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %486 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %485, i64 0, i32 1, i32 0
  store i8 13, i8* %486, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %484, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i64 13, i1 false) #15
  %487 = getelementptr inbounds i8, i8* %484, i64 13
  store i8 0, i8* %487, align 1
  %488 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %483, i64 0, i32 0
  %489 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %489) #15
  %490 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %72, %"class.SkSL::String"** %490, align 8
  %491 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %491) #15
  %492 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %488, %"class.SkSL::String"* nonnull dereferenceable(24) %72, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %8) #15
  %493 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %492, 0
  %494 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %493, i64 5
  %495 = bitcast %"struct.std::__1::__hash_node_base"* %494 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %491) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %489) #15
  store i32 21, i32* %495, align 4
  %496 = load i8, i8* %486, align 1
  %497 = icmp slt i8 %496, 0
  br i1 %497, label %498, label %501

498:                                              ; preds = %482
  %499 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load i8*, i8** %499, align 8
  call void @_ZdlPv(i8* %500) #14
  br label %501

501:                                              ; preds = %482, %498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %484) #15
  %502 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %503 = bitcast %"class.SkSL::String"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %503) #15
  %504 = bitcast %"class.SkSL::String"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %505 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %504, i64 0, i32 1, i32 0
  store i8 5, i8* %505, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %503, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i64 5, i1 false) #15
  %506 = getelementptr inbounds i8, i8* %503, i64 5
  store i8 0, i8* %506, align 1
  %507 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %502, i64 0, i32 0
  %508 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %508) #15
  %509 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %73, %"class.SkSL::String"** %509, align 8
  %510 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %510) #15
  %511 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %507, %"class.SkSL::String"* nonnull dereferenceable(24) %73, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %6) #15
  %512 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %511, 0
  %513 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %512, i64 5
  %514 = bitcast %"struct.std::__1::__hash_node_base"* %513 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %510) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %508) #15
  store i32 22, i32* %514, align 4
  %515 = load i8, i8* %505, align 1
  %516 = icmp slt i8 %515, 0
  br i1 %516, label %517, label %520

517:                                              ; preds = %501
  %518 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %519 = load i8*, i8** %518, align 8
  call void @_ZdlPv(i8* %519) #14
  br label %520

520:                                              ; preds = %501, %517
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %503) #15
  %521 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %522 = bitcast %"class.SkSL::String"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %522) #15
  %523 = bitcast %"class.SkSL::String"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %524 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %523, i64 0, i32 1, i32 0
  store i8 11, i8* %524, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %522, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i64 11, i1 false) #15
  %525 = getelementptr inbounds i8, i8* %522, i64 11
  store i8 0, i8* %525, align 1
  %526 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %521, i64 0, i32 0
  %527 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %527) #15
  %528 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %74, %"class.SkSL::String"** %528, align 8
  %529 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %529) #15
  %530 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %526, %"class.SkSL::String"* nonnull dereferenceable(24) %74, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %4) #15
  %531 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %530, 0
  %532 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %531, i64 5
  %533 = bitcast %"struct.std::__1::__hash_node_base"* %532 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %529) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %527) #15
  store i32 23, i32* %533, align 4
  %534 = load i8, i8* %524, align 1
  %535 = icmp slt i8 %534, 0
  br i1 %535, label %536, label %539

536:                                              ; preds = %520
  %537 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = load i8*, i8** %537, align 8
  call void @_ZdlPv(i8* %538) #14
  br label %539

539:                                              ; preds = %520, %536
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %522) #15
  %540 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %541 = bitcast %"class.SkSL::String"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %541) #15
  %542 = bitcast %"class.SkSL::String"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %543 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %542, i64 0, i32 1, i32 0
  store i8 4, i8* %543, align 1
  %544 = bitcast %"class.SkSL::String"* %75 to i32*
  store i32 878078803, i32* %544, align 8
  %545 = getelementptr inbounds i8, i8* %541, i64 4
  store i8 0, i8* %545, align 4
  %546 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %540, i64 0, i32 0
  %547 = bitcast %"class.std::__1::tuple"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #15
  %548 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::String"* %75, %"class.SkSL::String"** %548, align 8
  %549 = getelementptr inbounds %"class.std::__1::tuple.96", %"class.std::__1::tuple.96"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %549) #15
  %550 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %546, %"class.SkSL::String"* nonnull dereferenceable(24) %75, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %1, %"class.std::__1::tuple.96"* nonnull dereferenceable(1) %2) #15
  %551 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %550, 0
  %552 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %551, i64 5
  %553 = bitcast %"struct.std::__1::__hash_node_base"* %552 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %549) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %547) #15
  store i32 24, i32* %553, align 4
  %554 = load i8, i8* %543, align 1
  %555 = icmp slt i8 %554, 0
  br i1 %555, label %556, label %559

556:                                              ; preds = %539
  %557 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load i8*, i8** %557, align 8
  call void @_ZdlPv(i8* %558) #14
  br label %559

559:                                              ; preds = %539, %556
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %541) #15
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL6ParserC2EPKcmRNS_11SymbolTableERNS_13ErrorReporterE(%"class.SkSL::Parser"* nocapture, i8*, i64, %"class.SkSL::SymbolTable"* dereferenceable(104), %"class.SkSL::ErrorReporter"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 4
  store %"class.SkSL::SymbolTable"* %3, %"class.SkSL::SymbolTable"** %9, align 8
  %10 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 5
  store %"class.SkSL::ErrorReporter"* %4, %"class.SkSL::ErrorReporter"** %10, align 8
  %11 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6
  %12 = bitcast %"class.std::__1::unique_ptr.42"* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = trunc i64 %2 to i32
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1, i32 0
  store i8* %1, i8** %14, align 8
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1, i32 1
  store i32 %13, i32* %15, align 8
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1, i32 2
  %17 = bitcast i32* %16 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 87, i32 -1>, <4 x i32>* %17, align 4
  %18 = load atomic i8, i8* bitcast (i64* @_ZGVZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterEE20layoutMapInitialized to i8*) acquire, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %25, !prof !2

20:                                               ; preds = %5
  %21 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterEE20layoutMapInitialized) #15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  tail call void @_ZN4SkSL6Parser13InitLayoutMapEv() #15
  store i8 1, i8* @_ZZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterEE20layoutMapInitialized, align 1
  %24 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterEE20layoutMapInitialized)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterEE20layoutMapInitialized) #15
  br label %25

25:                                               ; preds = %20, %23, %5
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser8addChildENS_7ASTNode2IDES2_(%"class.SkSL::Parser"* nocapture readonly, i32, i32 returned) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %4, align 8
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %8, i64 %6, i32 5, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %19

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %8, i64 %6, i32 0
  %14 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %13, align 8
  %15 = sext i32 %10 to i64
  %16 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %14, i64 0, i32 0, i32 0
  %17 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %16, align 8
  %18 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %17, i64 %15, i32 6, i32 0
  br label %21

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %8, i64 %6, i32 4, i32 0
  br label %21

21:                                               ; preds = %12, %19
  %22 = phi i32* [ %18, %12 ], [ %20, %19 ]
  store i32 %2, i32* %22, align 4
  store i32 %2, i32* %9, align 8
  ret i32 %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL6Parser16createEmptyChildENS_7ASTNode2IDE(%"class.SkSL::Parser"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %4, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.SkSL::ASTNode"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.SkSL::ASTFile"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 160
  %12 = trunc i64 %11 to i32
  %13 = inttoptr i64 %7 to %"struct.SkSL::ASTNode"*
  %14 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %14, align 8
  %16 = icmp ugt %"struct.SkSL::ASTNode"* %15, %13
  %17 = ptrtoint %"struct.SkSL::ASTNode"* %15 to i64
  br i1 %16, label %18, label %24

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %13, i64 0, i32 2
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 22, i32 -1, i32 -1>, <4 x i32>* %20, align 4
  %21 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %13, i64 0, i32 6, i32 0
  store i32 -1, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %13, i64 1
  %23 = ptrtoint %"struct.SkSL::ASTNode"* %22 to i64
  store i64 %23, i64* %6, align 8
  br label %73

24:                                               ; preds = %2
  %25 = add nsw i64 %11, 1
  %26 = icmp ugt i64 %25, 115292150460684697
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = bitcast %"struct.SkSL::ASTFile"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #16
  unreachable

29:                                               ; preds = %24
  %30 = bitcast %"struct.SkSL::ASTNode"** %14 to i64*
  %31 = sub i64 %17, %9
  %32 = sdiv exact i64 %31, 160
  %33 = icmp ult i64 %32, 57646075230342348
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = shl nsw i64 %32, 1
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ %37, %34 ], [ 115292150460684697, %29 ]
  %41 = mul i64 %40, 160
  %42 = tail call i8* @_Znwm(i64 %41) #14
  %43 = bitcast i8* %42 to %"struct.SkSL::ASTNode"*
  br label %44

44:                                               ; preds = %39, %34
  %45 = phi i64 [ %40, %39 ], [ 0, %34 ]
  %46 = phi %"struct.SkSL::ASTNode"* [ %43, %39 ], [ null, %34 ]
  %47 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %11
  %48 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %45
  %49 = ptrtoint %"struct.SkSL::ASTNode"* %48 to i64
  %50 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %11, i32 2
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 22, i32 -1, i32 -1>, <4 x i32>* %51, align 4
  %52 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %11, i32 6, i32 0
  store i32 -1, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 1
  %54 = ptrtoint %"struct.SkSL::ASTNode"* %53 to i64
  %55 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %4, i64 0, i32 0, i32 0, i32 0
  %56 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  %57 = load i64, i64* %6, align 8
  %58 = ptrtoint %"struct.SkSL::ASTNode"* %56 to i64
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, -160
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 %60
  %62 = ptrtoint %"struct.SkSL::ASTNode"* %61 to i64
  %63 = icmp sgt i64 %59, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %44
  %65 = bitcast %"struct.SkSL::ASTNode"* %61 to i8*
  %66 = bitcast %"struct.SkSL::ASTNode"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %59, i1 false) #15
  %67 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  br label %68

68:                                               ; preds = %64, %44
  %69 = phi %"struct.SkSL::ASTNode"* [ %56, %44 ], [ %67, %64 ]
  store i64 %62, i64* %8, align 8
  store i64 %54, i64* %6, align 8
  store i64 %49, i64* %30, align 8
  %70 = icmp eq %"struct.SkSL::ASTNode"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"struct.SkSL::ASTNode"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %68, %18
  %74 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %3, align 8
  %75 = sext i32 %1 to i64
  %76 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %77, i64 %75, i32 5, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, -1
  br i1 %80, label %81, label %88

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %77, i64 %75, i32 0
  %83 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %82, align 8
  %84 = sext i32 %79 to i64
  %85 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %83, i64 0, i32 0, i32 0
  %86 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %85, align 8
  %87 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %86, i64 %84, i32 6, i32 0
  br label %90

88:                                               ; preds = %73
  %89 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %77, i64 %75, i32 4, i32 0
  br label %90

90:                                               ; preds = %81, %88
  %91 = phi i32* [ %87, %81 ], [ %89, %88 ]
  store i32 %12, i32* %91, align 4
  store i32 %12, i32* %78, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.SkSL::ASTFile"* @_ZN4SkSL6Parser15compilationUnitEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i8* @_Znwm(i64 32) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #15
  %6 = getelementptr inbounds i8, i8* %5, i64 24
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7, align 8
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.42"* %9 to i64*
  store i64 %8, i64* %12, align 8
  %13 = icmp eq %"struct.SkSL::ASTFile"* %11, null
  %14 = bitcast i8* %5 to %"struct.SkSL::ASTFile"*
  br i1 %13, label %27, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %16, align 8
  %18 = icmp eq %"struct.SkSL::ASTNode"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = ptrtoint %"struct.SkSL::ASTNode"* %17 to i64
  %21 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %11, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.SkSL::ASTNode"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast %"struct.SkSL::ASTNode"* %17 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %19, %15
  %25 = bitcast %"struct.SkSL::ASTFile"* %11 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  %26 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %10, align 8
  br label %27

27:                                               ; preds = %24, %1
  %28 = phi %"struct.SkSL::ASTFile"* [ %26, %24 ], [ %14, %1 ]
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = udiv i64 %30, 10
  %32 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %28, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"struct.SkSL::ASTNode"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.SkSL::ASTFile"* %28 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = sdiv exact i64 %37, 160
  %39 = icmp ult i64 %38, %31
  br i1 %39, label %40, label %67

40:                                               ; preds = %27
  %41 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %28, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast %"struct.SkSL::ASTNode"** %41 to i64*
  %43 = icmp ugt i64 %30, 1152921504606846979
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @abort() #16
  unreachable

45:                                               ; preds = %40
  %46 = load i64, i64* %42, align 8
  %47 = sub i64 %46, %36
  %48 = sdiv exact i64 %47, 160
  %49 = mul i64 %31, 160
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to %"struct.SkSL::ASTNode"*
  %52 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %51, i64 %48
  %53 = ptrtoint %"struct.SkSL::ASTNode"* %52 to i64
  %54 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %51, i64 %31
  %55 = ptrtoint %"struct.SkSL::ASTNode"* %54 to i64
  %56 = sdiv exact i64 %47, -160
  %57 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %52, i64 %56
  %58 = ptrtoint %"struct.SkSL::ASTNode"* %57 to i64
  %59 = icmp sgt i64 %47, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %45
  %61 = bitcast %"struct.SkSL::ASTNode"* %57 to i8*
  %62 = inttoptr i64 %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 %47, i1 false) #15
  br label %63

63:                                               ; preds = %60, %45
  store i64 %58, i64* %35, align 8
  store i64 %53, i64* %42, align 8
  store i64 %55, i64* %33, align 8
  %64 = icmp eq i64 %36, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = inttoptr i64 %36 to i8*
  tail call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %27, %63, %65
  %68 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #15
  store i32 0, i32* %2, align 4
  %69 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #15
  store i32 12, i32* %3, align 4
  %70 = call i32 @_ZN4SkSL6Parser10createNodeIJiNS_7ASTNode4KindEEEENS2_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #15
  %71 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %10, align 8
  %72 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %71, i64 0, i32 1, i32 0
  store i32 %70, i32* %72, align 8
  %73 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %74 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %75 = bitcast %"struct.SkSL::Token"* %74 to i64*
  %76 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %77 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %78 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 5
  %79 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %80 = sext i32 %70 to i64
  br label %81

81:                                               ; preds = %245, %67
  %82 = load i32, i32* %73, align 4
  %83 = icmp eq i32 %82, 87
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = load i64, i64* %75, align 4
  %86 = trunc i64 %85 to i32
  br label %117

87:                                               ; preds = %81
  %88 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %76) #15
  %89 = extractvalue { i64, i32 } %88, 0
  %90 = trunc i64 %89 to i32
  %91 = add i32 %90, -83
  %92 = icmp ult i32 %91, 3
  br i1 %92, label %95, label %93

93:                                               ; preds = %87
  %94 = extractvalue { i64, i32 } %88, 1
  br label %113

95:                                               ; preds = %87, %105
  %96 = load i32, i32* %73, align 4
  %97 = icmp eq i32 %96, 87
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = load i64, i64* %75, align 4
  %100 = load i32, i32* %77, align 4
  store i32 87, i32* %73, align 4
  br label %105

101:                                              ; preds = %95
  %102 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %76) #15
  %103 = extractvalue { i64, i32 } %102, 0
  %104 = extractvalue { i64, i32 } %102, 1
  br label %105

105:                                              ; preds = %101, %98
  %106 = phi i32 [ %100, %98 ], [ %104, %101 ]
  %107 = phi i64 [ %99, %98 ], [ %103, %101 ]
  %108 = trunc i64 %107 to i32
  %109 = add i32 %108, -83
  %110 = icmp ult i32 %109, 3
  br i1 %110, label %95, label %111

111:                                              ; preds = %105
  %112 = trunc i64 %107 to i32
  br label %113

113:                                              ; preds = %111, %93
  %114 = phi i32 [ %90, %93 ], [ %112, %111 ]
  %115 = phi i64 [ %89, %93 ], [ %107, %111 ]
  %116 = phi i32 [ %94, %93 ], [ %106, %111 ]
  store i64 %115, i64* %75, align 4
  store i32 %116, i32* %77, align 4
  br label %117

117:                                              ; preds = %84, %113
  %118 = phi i32 [ %86, %84 ], [ %114, %113 ]
  %119 = phi i64 [ %85, %84 ], [ %115, %113 ]
  %120 = trunc i64 %119 to i32
  switch i32 %120, label %216 [
    i32 0, label %121
    i32 34, label %123
    i32 35, label %152
    i32 86, label %181
  ]

121:                                              ; preds = %117
  %122 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %10, align 8
  store %"struct.SkSL::ASTFile"* null, %"struct.SkSL::ASTFile"** %10, align 8
  br label %246

123:                                              ; preds = %117
  %124 = call i32 @_ZN4SkSL6Parser9directiveEv(%"class.SkSL::Parser"* %0)
  %125 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %78, align 8
  %126 = bitcast %"class.SkSL::ErrorReporter"* %125 to i32 (%"class.SkSL::ErrorReporter"*)***
  %127 = load i32 (%"class.SkSL::ErrorReporter"*)**, i32 (%"class.SkSL::ErrorReporter"*)*** %126, align 8
  %128 = getelementptr inbounds i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %127, i64 3
  %129 = load i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %128, align 8
  %130 = call i32 %129(%"class.SkSL::ErrorReporter"* %125) #15
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %246

132:                                              ; preds = %123
  %133 = icmp sgt i32 %124, -1
  br i1 %133, label %134, label %245

134:                                              ; preds = %132
  %135 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %79, align 8
  %136 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %135, i64 0, i32 0, i32 0, i32 0
  %137 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %136, align 8
  %138 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %137, i64 %80, i32 5, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp sgt i32 %139, -1
  br i1 %140, label %141, label %148

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %137, i64 %80, i32 0
  %143 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %142, align 8
  %144 = sext i32 %139 to i64
  %145 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %143, i64 0, i32 0, i32 0
  %146 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %145, align 8
  %147 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %146, i64 %144, i32 6, i32 0
  br label %150

148:                                              ; preds = %134
  %149 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %137, i64 %80, i32 4, i32 0
  br label %150

150:                                              ; preds = %141, %148
  %151 = phi i32* [ %147, %141 ], [ %149, %148 ]
  store i32 %124, i32* %151, align 4
  store i32 %124, i32* %138, align 8
  br label %245

152:                                              ; preds = %117
  %153 = call i32 @_ZN4SkSL6Parser7sectionEv(%"class.SkSL::Parser"* %0)
  %154 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %78, align 8
  %155 = bitcast %"class.SkSL::ErrorReporter"* %154 to i32 (%"class.SkSL::ErrorReporter"*)***
  %156 = load i32 (%"class.SkSL::ErrorReporter"*)**, i32 (%"class.SkSL::ErrorReporter"*)*** %155, align 8
  %157 = getelementptr inbounds i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %156, i64 3
  %158 = load i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %157, align 8
  %159 = call i32 %158(%"class.SkSL::ErrorReporter"* %154) #15
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %246

161:                                              ; preds = %152
  %162 = icmp sgt i32 %153, -1
  br i1 %162, label %163, label %245

163:                                              ; preds = %161
  %164 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %79, align 8
  %165 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %164, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %165, align 8
  %167 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %166, i64 %80, i32 5, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = icmp sgt i32 %168, -1
  br i1 %169, label %170, label %177

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %166, i64 %80, i32 0
  %172 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %171, align 8
  %173 = sext i32 %168 to i64
  %174 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %172, i64 0, i32 0, i32 0
  %175 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %174, align 8
  %176 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %175, i64 %173, i32 6, i32 0
  br label %179

177:                                              ; preds = %163
  %178 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %166, i64 %80, i32 4, i32 0
  br label %179

179:                                              ; preds = %170, %177
  %180 = phi i32* [ %176, %170 ], [ %178, %177 ]
  store i32 %153, i32* %180, align 4
  store i32 %153, i32* %167, align 8
  br label %245

181:                                              ; preds = %117
  %182 = icmp eq i32 %118, 87
  br i1 %182, label %183, label %210

183:                                              ; preds = %181
  %184 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %76) #15
  %185 = extractvalue { i64, i32 } %184, 0
  %186 = trunc i64 %185 to i32
  %187 = add i32 %186, -83
  %188 = icmp ult i32 %187, 3
  br i1 %188, label %191, label %189

189:                                              ; preds = %183
  %190 = extractvalue { i64, i32 } %184, 1
  br label %207

191:                                              ; preds = %183, %201
  %192 = load i32, i32* %73, align 4
  %193 = icmp eq i32 %192, 87
  br i1 %193, label %197, label %194

194:                                              ; preds = %191
  %195 = load i64, i64* %75, align 4
  %196 = load i32, i32* %77, align 4
  store i32 87, i32* %73, align 4
  br label %201

197:                                              ; preds = %191
  %198 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %76) #15
  %199 = extractvalue { i64, i32 } %198, 0
  %200 = extractvalue { i64, i32 } %198, 1
  br label %201

201:                                              ; preds = %197, %194
  %202 = phi i32 [ %196, %194 ], [ %200, %197 ]
  %203 = phi i64 [ %195, %194 ], [ %199, %197 ]
  %204 = trunc i64 %203 to i32
  %205 = add i32 %204, -83
  %206 = icmp ult i32 %205, 3
  br i1 %206, label %191, label %207

207:                                              ; preds = %201, %189
  %208 = phi i64 [ %185, %189 ], [ %203, %201 ]
  %209 = phi i32 [ %190, %189 ], [ %202, %201 ]
  store i64 %208, i64* %75, align 4
  store i32 %209, i32* %77, align 4
  br label %210

210:                                              ; preds = %181, %207
  %211 = phi i64 [ %208, %207 ], [ %119, %181 ]
  %212 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  store i8 13, i8* %213, align 1
  %214 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %214, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), i64 13, i1 false) #15
  %215 = getelementptr inbounds i8, i8* %214, i64 13
  store i8 0, i8* %215, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %211, i32 undef, %"class.SkSL::String"* nonnull %4)
  br label %246

216:                                              ; preds = %117
  %217 = call i32 @_ZN4SkSL6Parser11declarationEv(%"class.SkSL::Parser"* %0)
  %218 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %78, align 8
  %219 = bitcast %"class.SkSL::ErrorReporter"* %218 to i32 (%"class.SkSL::ErrorReporter"*)***
  %220 = load i32 (%"class.SkSL::ErrorReporter"*)**, i32 (%"class.SkSL::ErrorReporter"*)*** %219, align 8
  %221 = getelementptr inbounds i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %220, i64 3
  %222 = load i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %221, align 8
  %223 = call i32 %222(%"class.SkSL::ErrorReporter"* %218) #15
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %246

225:                                              ; preds = %216
  %226 = icmp sgt i32 %217, -1
  br i1 %226, label %227, label %245

227:                                              ; preds = %225
  %228 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %79, align 8
  %229 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %228, i64 0, i32 0, i32 0, i32 0
  %230 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %229, align 8
  %231 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %230, i64 %80, i32 5, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = icmp sgt i32 %232, -1
  br i1 %233, label %234, label %241

234:                                              ; preds = %227
  %235 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %230, i64 %80, i32 0
  %236 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %235, align 8
  %237 = sext i32 %232 to i64
  %238 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %236, i64 0, i32 0, i32 0
  %239 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %238, align 8
  %240 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %239, i64 %237, i32 6, i32 0
  br label %243

241:                                              ; preds = %227
  %242 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %230, i64 %80, i32 4, i32 0
  br label %243

243:                                              ; preds = %234, %241
  %244 = phi i32* [ %240, %234 ], [ %242, %241 ]
  store i32 %217, i32* %244, align 4
  store i32 %217, i32* %231, align 8
  br label %245

245:                                              ; preds = %243, %225, %179, %161, %150, %132
  br label %81

246:                                              ; preds = %216, %152, %123, %210, %121
  %247 = phi %"struct.SkSL::ASTFile"* [ %122, %121 ], [ null, %210 ], [ null, %123 ], [ null, %152 ], [ null, %216 ]
  ret %"struct.SkSL::ASTFile"* %247
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL6Parser10createNodeIJiNS_7ASTNode4KindEEEENS2_2IDEDpOT_(%"class.SkSL::Parser"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %5, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.SkSL::ASTNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.SkSL::ASTFile"* %5 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 160
  %14 = trunc i64 %13 to i32
  %15 = inttoptr i64 %9 to %"struct.SkSL::ASTNode"*
  %16 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %16, align 8
  %18 = icmp ugt %"struct.SkSL::ASTNode"* %17, %15
  %19 = ptrtoint %"struct.SkSL::ASTNode"* %17 to i64
  br i1 %18, label %20, label %25

20:                                               ; preds = %3
  %21 = load i32, i32* %1, align 4
  %22 = load i32, i32* %2, align 4
  tail call void @_ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE(%"struct.SkSL::ASTNode"* %15, %"class.std::__1::vector.45"* %6, i32 %21, i32 %22) #15
  %23 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %15, i64 1
  %24 = ptrtoint %"struct.SkSL::ASTNode"* %23 to i64
  store i64 %24, i64* %8, align 8
  br label %73

25:                                               ; preds = %3
  %26 = add nsw i64 %13, 1
  %27 = icmp ugt i64 %26, 115292150460684697
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = bitcast %"struct.SkSL::ASTFile"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #16
  unreachable

30:                                               ; preds = %25
  %31 = bitcast %"struct.SkSL::ASTNode"** %16 to i64*
  %32 = sub i64 %19, %11
  %33 = sdiv exact i64 %32, 160
  %34 = icmp ult i64 %33, 57646075230342348
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = shl nsw i64 %33, 1
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35, %30
  %41 = phi i64 [ %38, %35 ], [ 115292150460684697, %30 ]
  %42 = mul i64 %41, 160
  %43 = tail call i8* @_Znwm(i64 %42) #14
  %44 = bitcast i8* %43 to %"struct.SkSL::ASTNode"*
  br label %45

45:                                               ; preds = %40, %35
  %46 = phi i64 [ %41, %40 ], [ 0, %35 ]
  %47 = phi %"struct.SkSL::ASTNode"* [ %44, %40 ], [ null, %35 ]
  %48 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 %13
  %49 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 %46
  %50 = ptrtoint %"struct.SkSL::ASTNode"* %49 to i64
  %51 = load i32, i32* %1, align 4
  %52 = load i32, i32* %2, align 4
  tail call void @_ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE(%"struct.SkSL::ASTNode"* %48, %"class.std::__1::vector.45"* %6, i32 %51, i32 %52) #15
  %53 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %48, i64 1
  %54 = ptrtoint %"struct.SkSL::ASTNode"* %53 to i64
  %55 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %5, i64 0, i32 0, i32 0, i32 0
  %56 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  %57 = load i64, i64* %8, align 8
  %58 = ptrtoint %"struct.SkSL::ASTNode"* %56 to i64
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, -160
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %48, i64 %60
  %62 = ptrtoint %"struct.SkSL::ASTNode"* %61 to i64
  %63 = icmp sgt i64 %59, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"struct.SkSL::ASTNode"* %61 to i8*
  %66 = bitcast %"struct.SkSL::ASTNode"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %59, i1 false) #15
  %67 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"struct.SkSL::ASTNode"* [ %56, %45 ], [ %67, %64 ]
  store i64 %62, i64* %10, align 8
  store i64 %54, i64* %8, align 8
  store i64 %50, i64* %31, align 8
  %70 = icmp eq %"struct.SkSL::ASTNode"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"struct.SkSL::ASTNode"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %68, %20
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN4SkSL6Parser4peekEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 87
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %7 = bitcast %"struct.SkSL::Token"* %6 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %10 = load i32, i32* %9, align 4
  br label %46

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %13 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %12) #15
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = trunc i64 %14 to i32
  %16 = add i32 %15, -83
  %17 = icmp ult i32 %16, 3
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = extractvalue { i64, i32 } %13, 1
  br label %40

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %22 = bitcast %"struct.SkSL::Token"* %21 to i64*
  %23 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %24

24:                                               ; preds = %34, %20
  %25 = load i32, i32* %2, align 4
  %26 = icmp eq i32 %25, 87
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = load i64, i64* %22, align 4
  %29 = load i32, i32* %23, align 4
  store i32 87, i32* %2, align 4
  br label %34

30:                                               ; preds = %24
  %31 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %12) #15
  %32 = extractvalue { i64, i32 } %31, 0
  %33 = extractvalue { i64, i32 } %31, 1
  br label %34

34:                                               ; preds = %30, %27
  %35 = phi i32 [ %29, %27 ], [ %33, %30 ]
  %36 = phi i64 [ %28, %27 ], [ %32, %30 ]
  %37 = trunc i64 %36 to i32
  %38 = add i32 %37, -83
  %39 = icmp ult i32 %38, 3
  br i1 %39, label %24, label %40

40:                                               ; preds = %34, %18
  %41 = phi i64 [ %14, %18 ], [ %36, %34 ]
  %42 = phi i32 [ %19, %18 ], [ %35, %34 ]
  %43 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %44 = bitcast %"struct.SkSL::Token"* %43 to i64*
  store i64 %41, i64* %44, align 4
  %45 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %42, i32* %45, align 4
  br label %46

46:                                               ; preds = %5, %40
  %47 = phi i32 [ %10, %5 ], [ %42, %40 ]
  %48 = phi i64 [ %8, %5 ], [ %41, %40 ]
  %49 = insertvalue { i64, i32 } undef, i64 %48, 0
  %50 = insertvalue { i64, i32 } %49, i32 %47, 1
  ret { i64, i32 } %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser9directiveEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Token", align 8
  %3 = alloca %"struct.SkSL::StringFragment", align 8
  %4 = alloca %"struct.SkSL::Token", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = bitcast %"struct.SkSL::Token"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 2
  store i32 87, i32* %9, align 8
  store i32 -1, i32* %10, align 4
  store i32 -1, i32* %11, align 8
  %12 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 34, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %2)
  br i1 %12, label %13, label %190

13:                                               ; preds = %1
  %14 = bitcast %"struct.SkSL::StringFragment"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %3, i64 0, i32 1
  %17 = bitcast %"struct.SkSL::Token"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = load i32, i32* %11, align 8
  %20 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = ashr i64 %18, 32
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = sext i32 %19 to i64
  store i8* %23, i8** %15, align 8
  store i64 %24, i64* %16, align 8
  %25 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0)) #15
  br i1 %25, label %26, label %132

26:                                               ; preds = %13
  %27 = bitcast %"struct.SkSL::Token"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 2
  store i32 87, i32* %28, align 8
  store i32 -1, i32* %29, align 4
  store i32 -1, i32* %30, align 8
  %31 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %4)
  br i1 %31, label %32, label %130

32:                                               ; preds = %26
  %33 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %33, label %34, label %130

34:                                               ; preds = %32
  %35 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %35, label %36, label %130

36:                                               ; preds = %34
  %37 = bitcast %"struct.SkSL::Token"* %4 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = load i32, i32* %30, align 8
  %40 = load i8*, i8** %20, align 8
  %41 = ashr i64 %38, 32
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = sext i32 %39 to i64
  %44 = ptrtoint i8* %42 to i64
  %45 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %46 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %45, align 8
  %47 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %46, i64 0, i32 0, i32 0, i32 1
  %48 = bitcast %"struct.SkSL::ASTNode"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"struct.SkSL::ASTFile"* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = sdiv exact i64 %52, 160
  %54 = trunc i64 %53 to i32
  %55 = ptrtoint %"struct.SkSL::ASTFile"* %46 to i64
  %56 = inttoptr i64 %49 to %"struct.SkSL::ASTNode"*
  %57 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %46, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %57, align 8
  %59 = icmp ugt %"struct.SkSL::ASTNode"* %58, %56
  %60 = ptrtoint %"struct.SkSL::ASTNode"* %58 to i64
  br i1 %59, label %61, label %74

61:                                               ; preds = %36
  %62 = load i32, i32* %10, align 4
  %63 = inttoptr i64 %49 to i64*
  store i64 %55, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 0, i32 1, i32 1
  store i32 1, i32* %65, align 4
  %66 = bitcast %"struct.SkSL::ASTNode::NodeData"* %64 to i64*
  store i64 %44, i64* %66, align 4
  %67 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 0, i32 1, i32 0, i64 8
  %68 = bitcast i8* %67 to i64*
  store i64 %43, i64* %68, align 4
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 0, i32 2
  store i32 %62, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 0, i32 3
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 10, i32 -1, i32 -1, i32 -1>, <4 x i32>* %71, align 8
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 1
  %73 = ptrtoint %"struct.SkSL::ASTNode"* %72 to i64
  store i64 %73, i64* %48, align 8
  br label %130

74:                                               ; preds = %36
  %75 = add nsw i64 %53, 1
  %76 = icmp ugt i64 %75, 115292150460684697
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = bitcast %"struct.SkSL::ASTFile"* %46 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %78) #16
  unreachable

79:                                               ; preds = %74
  %80 = bitcast %"struct.SkSL::ASTNode"** %57 to i64*
  %81 = sub i64 %60, %51
  %82 = sdiv exact i64 %81, 160
  %83 = icmp ult i64 %82, 57646075230342348
  br i1 %83, label %84, label %89

84:                                               ; preds = %79
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %75
  %87 = select i1 %86, i64 %75, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %84, %79
  %90 = phi i64 [ %87, %84 ], [ 115292150460684697, %79 ]
  %91 = mul i64 %90, 160
  %92 = call i8* @_Znwm(i64 %91) #14
  %93 = bitcast i8* %92 to %"struct.SkSL::ASTNode"*
  br label %94

94:                                               ; preds = %89, %84
  %95 = phi i64 [ %90, %89 ], [ 0, %84 ]
  %96 = phi %"struct.SkSL::ASTNode"* [ %93, %89 ], [ null, %84 ]
  %97 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %53
  %98 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %95
  %99 = ptrtoint %"struct.SkSL::ASTNode"* %98 to i64
  %100 = load i32, i32* %10, align 4
  %101 = bitcast %"struct.SkSL::ASTNode"* %97 to i64*
  store i64 %55, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %53, i32 1
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %53, i32 1, i32 1
  store i32 1, i32* %103, align 4
  %104 = bitcast %"struct.SkSL::ASTNode::NodeData"* %102 to i64*
  store i64 %44, i64* %104, align 4
  %105 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %53, i32 1, i32 0, i64 8
  %106 = bitcast i8* %105 to i64*
  store i64 %43, i64* %106, align 4
  %107 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %53, i32 2
  store i32 %100, i32* %107, align 4
  %108 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %53, i32 3
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> <i32 10, i32 -1, i32 -1, i32 -1>, <4 x i32>* %109, align 8
  %110 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %97, i64 1
  %111 = ptrtoint %"struct.SkSL::ASTNode"* %110 to i64
  %112 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %46, i64 0, i32 0, i32 0, i32 0
  %113 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %112, align 8
  %114 = load i64, i64* %48, align 8
  %115 = ptrtoint %"struct.SkSL::ASTNode"* %113 to i64
  %116 = sub i64 %114, %115
  %117 = sdiv exact i64 %116, -160
  %118 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %97, i64 %117
  %119 = ptrtoint %"struct.SkSL::ASTNode"* %118 to i64
  %120 = icmp sgt i64 %116, 0
  br i1 %120, label %121, label %125

121:                                              ; preds = %94
  %122 = bitcast %"struct.SkSL::ASTNode"* %118 to i8*
  %123 = bitcast %"struct.SkSL::ASTNode"* %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 %116, i1 false) #15
  %124 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %112, align 8
  br label %125

125:                                              ; preds = %121, %94
  %126 = phi %"struct.SkSL::ASTNode"* [ %113, %94 ], [ %124, %121 ]
  store i64 %119, i64* %50, align 8
  store i64 %111, i64* %48, align 8
  store i64 %99, i64* %80, align 8
  %127 = icmp eq %"struct.SkSL::ASTNode"* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = bitcast %"struct.SkSL::ASTNode"* %126 to i8*
  call void @_ZdlPv(i8* %129) #14
  br label %130

130:                                              ; preds = %61, %125, %128, %34, %32, %26
  %131 = phi i32 [ -1, %26 ], [ -1, %32 ], [ -1, %34 ], [ %54, %128 ], [ %54, %125 ], [ %54, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %27) #15
  br label %188

132:                                              ; preds = %13
  %133 = load i64, i64* %17, align 8
  %134 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #15
  %135 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #15
  %136 = load i32, i32* %11, align 8
  %137 = load i8*, i8** %20, align 8
  %138 = ashr i64 %133, 32
  %139 = getelementptr inbounds i8, i8* %137, i64 %138
  %140 = sext i32 %136 to i64
  %141 = icmp ugt i32 %136, -17
  br i1 %141, label %142, label %144

142:                                              ; preds = %132
  %143 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %143) #16
  unreachable

144:                                              ; preds = %132
  %145 = icmp ult i32 %136, 23
  br i1 %145, label %154, label %146

146:                                              ; preds = %144
  %147 = add nuw nsw i64 %140, 16
  %148 = and i64 %147, -16
  %149 = call i8* @_Znwm(i64 %148) #14
  %150 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %149, i8** %150, align 8
  %151 = or i64 %148, -9223372036854775808
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %140, i64* %153, align 8
  br label %159

154:                                              ; preds = %144
  %155 = trunc i32 %136 to i8
  %156 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  store i8 %155, i8* %157, align 1
  %158 = icmp eq i32 %136, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %154, %146
  %160 = phi i8* [ %149, %146 ], [ %135, %154 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %160, i8* align 1 %139, i64 %140, i1 false) #15
  br label %161

161:                                              ; preds = %154, %159
  %162 = phi i8* [ %135, %154 ], [ %160, %159 ]
  %163 = getelementptr inbounds i8, i8* %162, i64 %140
  store i8 0, i8* %163, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %133, i32 undef, %"class.SkSL::String"* nonnull %5)
  %164 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %161
  %169 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  call void @_ZdlPv(i8* %170) #14
  br label %171

171:                                              ; preds = %161, %168
  %172 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %178) #14
  br label %179

179:                                              ; preds = %171, %176
  %180 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %186) #14
  br label %187

187:                                              ; preds = %179, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #15
  br label %188

188:                                              ; preds = %187, %130
  %189 = phi i32 [ %131, %130 ], [ -1, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #15
  br label %190

190:                                              ; preds = %1, %188
  %191 = phi i32 [ %189, %188 ], [ -1, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #15
  ret i32 %191
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser7sectionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Token", align 8
  %3 = alloca %"struct.SkSL::Token", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.SkSL::ASTNode::SectionData", align 8
  %7 = bitcast %"struct.SkSL::Token"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 2
  store i32 87, i32* %8, align 8
  store i32 -1, i32* %9, align 4
  store i32 -1, i32* %10, align 8
  %11 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 35, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %2)
  br i1 %11, label %12, label %188

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 87
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %18 = bitcast %"struct.SkSL::Token"* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = trunc i64 %19 to i32
  br label %59

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %23 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %22) #15
  %24 = extractvalue { i64, i32 } %23, 0
  %25 = trunc i64 %24 to i32
  %26 = add i32 %25, -83
  %27 = icmp ult i32 %26, 3
  br i1 %27, label %30, label %28

28:                                               ; preds = %21
  %29 = extractvalue { i64, i32 } %23, 1
  br label %52

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %32 = bitcast %"struct.SkSL::Token"* %31 to i64*
  %33 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %34

34:                                               ; preds = %44, %30
  %35 = load i32, i32* %13, align 4
  %36 = icmp eq i32 %35, 87
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = load i64, i64* %32, align 4
  %39 = load i32, i32* %33, align 4
  store i32 87, i32* %13, align 4
  br label %44

40:                                               ; preds = %34
  %41 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %22) #15
  %42 = extractvalue { i64, i32 } %41, 0
  %43 = extractvalue { i64, i32 } %41, 1
  br label %44

44:                                               ; preds = %40, %37
  %45 = phi i32 [ %39, %37 ], [ %43, %40 ]
  %46 = phi i64 [ %38, %37 ], [ %42, %40 ]
  %47 = trunc i64 %46 to i32
  %48 = add i32 %47, -83
  %49 = icmp ult i32 %48, 3
  br i1 %49, label %34, label %50

50:                                               ; preds = %44
  %51 = trunc i64 %46 to i32
  br label %52

52:                                               ; preds = %50, %28
  %53 = phi i32 [ %25, %28 ], [ %51, %50 ]
  %54 = phi i64 [ %24, %28 ], [ %46, %50 ]
  %55 = phi i32 [ %29, %28 ], [ %45, %50 ]
  %56 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %57 = bitcast %"struct.SkSL::Token"* %56 to i64*
  store i64 %54, i64* %57, align 4
  %58 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %55, i32* %58, align 4
  br label %59

59:                                               ; preds = %16, %52
  %60 = phi i32 [ %20, %16 ], [ %53, %52 ]
  %61 = phi i64 [ %19, %16 ], [ %54, %52 ]
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, 36
  br i1 %63, label %64, label %109

64:                                               ; preds = %59
  %65 = icmp eq i32 %60, 87
  br i1 %65, label %67, label %66

66:                                               ; preds = %64
  store i32 87, i32* %13, align 4
  br label %91

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %69 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %68) #15
  %70 = extractvalue { i64, i32 } %69, 0
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, -83
  %73 = icmp ult i32 %72, 3
  br i1 %73, label %74, label %91

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %76 = bitcast %"struct.SkSL::Token"* %75 to i64*
  %77 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %78

78:                                               ; preds = %86, %74
  %79 = load i32, i32* %13, align 4
  %80 = icmp eq i32 %79, 87
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = load i64, i64* %76, align 4
  store i32 87, i32* %13, align 4
  br label %86

83:                                               ; preds = %78
  %84 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %77) #15
  %85 = extractvalue { i64, i32 } %84, 0
  br label %86

86:                                               ; preds = %83, %81
  %87 = phi i64 [ %82, %81 ], [ %85, %83 ]
  %88 = trunc i64 %87 to i32
  %89 = add i32 %88, -83
  %90 = icmp ult i32 %89, 3
  br i1 %90, label %78, label %91

91:                                               ; preds = %86, %66, %67
  %92 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %92) #15
  %93 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %94 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %93, align 8
  store i32 -1, i32* %94, align 4
  store i32 -1, i32* %95, align 8
  %96 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %3)
  br i1 %96, label %97, label %104

97:                                               ; preds = %91
  %98 = bitcast %"struct.SkSL::Token"* %3 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = load i32, i32* %95, align 8
  %101 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %103, label %105, label %104

104:                                              ; preds = %91, %97
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %92) #15
  br label %188

105:                                              ; preds = %97
  %106 = ashr i64 %99, 32
  %107 = getelementptr inbounds i8, i8* %102, i64 %106
  %108 = sext i32 %100 to i64
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %92) #15
  br label %109

109:                                              ; preds = %105, %59
  %110 = phi i8* [ %107, %105 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %59 ]
  %111 = phi i64 [ %108, %105 ], [ 0, %59 ]
  %112 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %112, label %113, label %188

113:                                              ; preds = %109
  %114 = load i32, i32* %13, align 4
  %115 = icmp eq i32 %114, 87
  br i1 %115, label %122, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %118 = bitcast %"struct.SkSL::Token"* %117 to i64*
  %119 = load i64, i64* %118, align 4
  %120 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %121 = load i32, i32* %120, align 4
  store i32 87, i32* %13, align 4
  br label %127

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %124 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %123) #15
  %125 = extractvalue { i64, i32 } %124, 0
  %126 = extractvalue { i64, i32 } %124, 1
  br label %127

127:                                              ; preds = %116, %122
  %128 = phi i32 [ %121, %116 ], [ %126, %122 ]
  %129 = phi i64 [ %119, %116 ], [ %125, %122 ]
  %130 = ashr i64 %129, 32
  %131 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %132 = bitcast %"struct.SkSL::Token"* %131 to i64*
  store i64 %129, i64* %132, align 4
  %133 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %128, i32* %133, align 4
  %134 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 %130
  %137 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %138 = trunc i64 %129 to i32
  br label %139

139:                                              ; preds = %164, %127
  %140 = phi i32 [ %138, %127 ], [ %166, %164 ]
  %141 = phi i32 [ 1, %127 ], [ %165, %164 ]
  %142 = icmp eq i32 %140, 87
  br i1 %142, label %145, label %143

143:                                              ; preds = %139
  %144 = load i64, i64* %132, align 4
  store i32 87, i32* %13, align 4
  br label %148

145:                                              ; preds = %139
  %146 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %137) #15
  %147 = extractvalue { i64, i32 } %146, 0
  br label %148

148:                                              ; preds = %143, %145
  %149 = phi i64 [ %144, %143 ], [ %147, %145 ]
  %150 = trunc i64 %149 to i32
  switch i32 %150, label %164 [
    i32 38, label %160
    i32 39, label %151
    i32 0, label %152
  ]

151:                                              ; preds = %148
  br label %160

152:                                              ; preds = %148
  %153 = bitcast %"struct.SkSL::Token"* %2 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = call i8* @_Znwm(i64 48) #14
  %156 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %155, i8** %156, align 8
  %157 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %158 = bitcast i64* %157 to <2 x i64>*
  store <2 x i64> <i64 41, i64 -9223372036854775760>, <2 x i64>* %158, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %155, i8* align 1 getelementptr inbounds ([42 x i8], [42 x i8]* @.str.38, i64 0, i64 0), i64 41, i1 false) #15
  %159 = getelementptr inbounds i8, i8* %155, i64 41
  store i8 0, i8* %159, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %154, i32 undef, %"class.SkSL::String"* nonnull %4)
  call void @_ZdlPv(i8* nonnull %155) #14
  br label %188

160:                                              ; preds = %148, %151
  %161 = phi i32 [ -1, %151 ], [ 1, %148 ]
  %162 = add nsw i32 %141, %161
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %148, %160
  %165 = phi i32 [ %162, %160 ], [ %141, %148 ]
  %166 = load i32, i32* %13, align 4
  br label %139

167:                                              ; preds = %160
  %168 = ashr i64 %149, 32
  %169 = sub nsw i64 %168, %130
  %170 = bitcast %"struct.SkSL::Token"* %2 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = load i32, i32* %10, align 8
  %173 = load i8*, i8** %134, align 8
  %174 = ashr i64 %171, 32
  %175 = getelementptr inbounds i8, i8* %173, i64 %174
  %176 = sext i32 %172 to i64
  %177 = getelementptr inbounds i8, i8* %175, i64 1
  %178 = add nsw i64 %176, -1
  %179 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %179) #15
  store i32 28, i32* %5, align 4
  %180 = bitcast %"struct.SkSL::ASTNode::SectionData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %180) #15
  %181 = getelementptr inbounds %"struct.SkSL::ASTNode::SectionData", %"struct.SkSL::ASTNode::SectionData"* %6, i64 0, i32 0, i32 0
  store i8* %177, i8** %181, align 8
  %182 = getelementptr inbounds %"struct.SkSL::ASTNode::SectionData", %"struct.SkSL::ASTNode::SectionData"* %6, i64 0, i32 0, i32 1
  store i64 %178, i64* %182, align 8
  %183 = getelementptr inbounds %"struct.SkSL::ASTNode::SectionData", %"struct.SkSL::ASTNode::SectionData"* %6, i64 0, i32 1, i32 0
  store i8* %110, i8** %183, align 8
  %184 = getelementptr inbounds %"struct.SkSL::ASTNode::SectionData", %"struct.SkSL::ASTNode::SectionData"* %6, i64 0, i32 1, i32 1
  store i64 %111, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.SkSL::ASTNode::SectionData", %"struct.SkSL::ASTNode::SectionData"* %6, i64 0, i32 2, i32 0
  store i8* %136, i8** %185, align 8
  %186 = getelementptr inbounds %"struct.SkSL::ASTNode::SectionData", %"struct.SkSL::ASTNode::SectionData"* %6, i64 0, i32 2, i32 1
  store i64 %169, i64* %186, align 8
  %187 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS3_11SectionDataEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %9, i32* nonnull dereferenceable(4) %5, %"struct.SkSL::ASTNode::SectionData"* nonnull dereferenceable(48) %6)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %180) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179) #15
  br label %188

188:                                              ; preds = %152, %104, %109, %167, %1
  %189 = phi i32 [ -1, %1 ], [ -1, %104 ], [ -1, %109 ], [ %187, %167 ], [ -1, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #15
  ret i32 %189
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* nocapture readonly, i64, i32, %"class.SkSL::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = lshr i64 %1, 32
  %8 = trunc i64 %7 to i32
  %9 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.SkSL::String"* %6 to i8*
  %15 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %15, i64 24, i1 false) #15
  br label %22

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %17, i8* %19, i64 %21) #15
  br label %22

22:                                               ; preds = %13, %16
  %23 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 5
  %25 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %24, align 8
  %26 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  %31 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %31, i64 24, i1 false) #15
  br label %38

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %33, i8* %35, i64 %37) #15
  br label %38

38:                                               ; preds = %32, %30
  %39 = bitcast %"class.SkSL::ErrorReporter"* %25 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %40 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %40, i64 2
  %42 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %41, align 8
  call void %42(%"class.SkSL::ErrorReporter"* %25, i32 %8, %"class.SkSL::String"* nonnull %5) #15
  %43 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %38, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23)
  %51 = load i8, i8* %27, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %50, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser11declarationEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"struct.SkSL::Token", align 8
  %4 = alloca %"struct.SkSL::Modifiers", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.SkSL::Token", align 8
  %7 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  store i32 -1431655766, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  store i32 -1431655766, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 -1431655766, i32* %10, align 8
  %11 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 87
  br i1 %13, label %20, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %16 = bitcast %"struct.SkSL::Token"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %19 = load i32, i32* %18, align 4
  br label %55

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %22 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %21) #15
  %23 = extractvalue { i64, i32 } %22, 0
  %24 = trunc i64 %23 to i32
  %25 = add i32 %24, -83
  %26 = icmp ult i32 %25, 3
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = extractvalue { i64, i32 } %22, 1
  br label %49

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %31 = bitcast %"struct.SkSL::Token"* %30 to i64*
  %32 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %33

33:                                               ; preds = %43, %29
  %34 = load i32, i32* %11, align 4
  %35 = icmp eq i32 %34, 87
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = load i64, i64* %31, align 4
  %38 = load i32, i32* %32, align 4
  store i32 87, i32* %11, align 4
  br label %43

39:                                               ; preds = %33
  %40 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %21) #15
  %41 = extractvalue { i64, i32 } %40, 0
  %42 = extractvalue { i64, i32 } %40, 1
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi i32 [ %38, %36 ], [ %42, %39 ]
  %45 = phi i64 [ %37, %36 ], [ %41, %39 ]
  %46 = trunc i64 %45 to i32
  %47 = add i32 %46, -83
  %48 = icmp ult i32 %47, 3
  br i1 %48, label %33, label %49

49:                                               ; preds = %43, %27
  %50 = phi i64 [ %23, %27 ], [ %45, %43 ]
  %51 = phi i32 [ %28, %27 ], [ %44, %43 ]
  %52 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %53 = bitcast %"struct.SkSL::Token"* %52 to i64*
  store i64 %50, i64* %53, align 4
  %54 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %51, i32* %54, align 4
  br label %55

55:                                               ; preds = %14, %49
  %56 = phi i32 [ %19, %14 ], [ %51, %49 ]
  %57 = phi i64 [ %17, %14 ], [ %50, %49 ]
  %58 = bitcast %"struct.SkSL::Token"* %3 to i64*
  store i64 %57, i64* %58, align 8
  store i32 %56, i32* %10, align 8
  %59 = trunc i64 %57 to i32
  switch i32 %59, label %83 [
    i32 31, label %60
    i32 81, label %62
  ]

60:                                               ; preds = %55
  %61 = tail call i32 @_ZN4SkSL6Parser15enumDeclarationEv(%"class.SkSL::Parser"* %0)
  br label %260

62:                                               ; preds = %55
  %63 = lshr i64 %57, 32
  %64 = trunc i64 %63 to i32
  %65 = tail call i8* @_Znwm(i64 48) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.43, i64 0, i64 0), i64 37, i1 false) #15
  %66 = getelementptr inbounds i8, i8* %65, i64 37
  store i8 0, i8* %66, align 1
  %67 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67)
  %68 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 5
  %69 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %70, i8* nonnull %65, i64 37) #15
  %71 = bitcast %"class.SkSL::ErrorReporter"* %69 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %72 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %72, i64 2
  %74 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %73, align 8
  call void %74(%"class.SkSL::ErrorReporter"* %69, i32 %64, %"class.SkSL::String"* nonnull %2) #15
  %75 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %62
  %80 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %79, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67)
  call void @_ZdlPv(i8* nonnull %65) #14
  br label %260

83:                                               ; preds = %55
  %84 = bitcast %"struct.SkSL::Modifiers"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %84) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 80, i1 false)
  call void @_ZN4SkSL6Parser9modifiersEv(%"struct.SkSL::Modifiers"* nonnull sret %4, %"class.SkSL::Parser"* %0)
  %85 = load i32, i32* %11, align 4
  %86 = icmp eq i32 %85, 87
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %89 = bitcast %"struct.SkSL::Token"* %88 to i64*
  %90 = load i64, i64* %89, align 4
  %91 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %92 = load i32, i32* %91, align 4
  br label %128

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %95 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %94) #15
  %96 = extractvalue { i64, i32 } %95, 0
  %97 = trunc i64 %96 to i32
  %98 = add i32 %97, -83
  %99 = icmp ult i32 %98, 3
  br i1 %99, label %102, label %100

100:                                              ; preds = %93
  %101 = extractvalue { i64, i32 } %95, 1
  br label %122

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %104 = bitcast %"struct.SkSL::Token"* %103 to i64*
  %105 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %106

106:                                              ; preds = %116, %102
  %107 = load i32, i32* %11, align 4
  %108 = icmp eq i32 %107, 87
  br i1 %108, label %112, label %109

109:                                              ; preds = %106
  %110 = load i64, i64* %104, align 4
  %111 = load i32, i32* %105, align 4
  store i32 87, i32* %11, align 4
  br label %116

112:                                              ; preds = %106
  %113 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %94) #15
  %114 = extractvalue { i64, i32 } %113, 0
  %115 = extractvalue { i64, i32 } %113, 1
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi i32 [ %111, %109 ], [ %115, %112 ]
  %118 = phi i64 [ %110, %109 ], [ %114, %112 ]
  %119 = trunc i64 %118 to i32
  %120 = add i32 %119, -83
  %121 = icmp ult i32 %120, 3
  br i1 %121, label %106, label %122

122:                                              ; preds = %116, %100
  %123 = phi i64 [ %96, %100 ], [ %118, %116 ]
  %124 = phi i32 [ %101, %100 ], [ %117, %116 ]
  %125 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %126 = bitcast %"struct.SkSL::Token"* %125 to i64*
  store i64 %123, i64* %126, align 4
  %127 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %124, i32* %127, align 4
  br label %128

128:                                              ; preds = %87, %122
  %129 = phi i32 [ %92, %87 ], [ %124, %122 ]
  %130 = phi i64 [ %90, %87 ], [ %123, %122 ]
  store i64 %130, i64* %58, align 8
  store i32 %129, i32* %10, align 8
  %131 = trunc i64 %130 to i32
  switch i32 %131, label %186 [
    i32 33, label %132
    i32 29, label %148
    i32 81, label %150
  ]

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = ashr i64 %130, 32
  %136 = getelementptr inbounds i8, i8* %134, i64 %135
  %137 = sext i32 %129 to i64
  %138 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 4
  %139 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %138, align 8
  %140 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %139, i8* %136, i64 %137) #15
  %141 = icmp eq %"class.SkSL::Symbol"* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %132
  %143 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %140, i64 0, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 13
  br i1 %145, label %186, label %146

146:                                              ; preds = %132, %142
  %147 = tail call i32 @_ZN4SkSL6Parser14interfaceBlockENS_9ModifiersE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Modifiers"* nonnull byval(%"struct.SkSL::Modifiers") align 8 %4)
  br label %258

148:                                              ; preds = %128
  %149 = tail call i32 @_ZN4SkSL6Parser20structVarDeclarationENS_9ModifiersE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Modifiers"* nonnull byval(%"struct.SkSL::Modifiers") align 8 %4)
  br label %258

150:                                              ; preds = %128
  %151 = load i32, i32* %11, align 4
  %152 = icmp eq i32 %151, 87
  br i1 %152, label %157, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %155 = bitcast %"struct.SkSL::Token"* %154 to i64*
  %156 = load i64, i64* %155, align 4
  store i32 87, i32* %11, align 4
  br label %161

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %159 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %158) #15
  %160 = extractvalue { i64, i32 } %159, 0
  br label %161

161:                                              ; preds = %157, %153
  %162 = phi i64 [ %156, %153 ], [ %160, %157 ]
  %163 = trunc i64 %162 to i32
  %164 = add i32 %163, -83
  %165 = icmp ult i32 %164, 3
  br i1 %165, label %166, label %183

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %168 = bitcast %"struct.SkSL::Token"* %167 to i64*
  %169 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %170

170:                                              ; preds = %178, %166
  %171 = load i32, i32* %11, align 4
  %172 = icmp eq i32 %171, 87
  br i1 %172, label %175, label %173

173:                                              ; preds = %170
  %174 = load i64, i64* %168, align 4
  store i32 87, i32* %11, align 4
  br label %178

175:                                              ; preds = %170
  %176 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %169) #15
  %177 = extractvalue { i64, i32 } %176, 0
  br label %178

178:                                              ; preds = %175, %173
  %179 = phi i64 [ %174, %173 ], [ %177, %175 ]
  %180 = trunc i64 %179 to i32
  %181 = add i32 %180, -83
  %182 = icmp ult i32 %181, 3
  br i1 %182, label %170, label %183

183:                                              ; preds = %178, %161
  %184 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %184) #15
  store i32 21, i32* %5, align 4
  %185 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERNS_9ModifiersEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %9, i32* nonnull dereferenceable(4) %5, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %184) #15
  br label %258

186:                                              ; preds = %128, %142
  %187 = tail call i32 @_ZN4SkSL6Parser4typeEv(%"class.SkSL::Parser"* %0)
  %188 = icmp sgt i32 %187, -1
  br i1 %188, label %189, label %258

189:                                              ; preds = %186
  %190 = bitcast %"struct.SkSL::Token"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %190) #15
  %191 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %6, i64 0, i32 0
  %192 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %6, i64 0, i32 1
  %193 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %6, i64 0, i32 2
  store i32 87, i32* %191, align 8
  store i32 -1, i32* %192, align 4
  store i32 -1, i32* %193, align 8
  %194 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %6)
  br i1 %194, label %195, label %256

195:                                              ; preds = %189
  %196 = load i32, i32* %11, align 4
  switch i32 %196, label %246 [
    i32 87, label %203
    i32 36, label %197
  ]

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %199 = bitcast %"struct.SkSL::Token"* %198 to i64*
  %200 = load i64, i64* %199, align 4
  %201 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %202 = load i32, i32* %201, align 4
  store i32 87, i32* %11, align 4
  br label %208

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %205 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %204) #15
  %206 = extractvalue { i64, i32 } %205, 0
  %207 = extractvalue { i64, i32 } %205, 1
  br label %208

208:                                              ; preds = %203, %197
  %209 = phi i32 [ %202, %197 ], [ %207, %203 ]
  %210 = phi i64 [ %200, %197 ], [ %206, %203 ]
  %211 = trunc i64 %210 to i32
  %212 = add i32 %211, -83
  %213 = icmp ult i32 %212, 3
  br i1 %213, label %214, label %235

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %216 = bitcast %"struct.SkSL::Token"* %215 to i64*
  %217 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %218 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %219

219:                                              ; preds = %229, %214
  %220 = load i32, i32* %11, align 4
  %221 = icmp eq i32 %220, 87
  br i1 %221, label %225, label %222

222:                                              ; preds = %219
  %223 = load i64, i64* %216, align 4
  %224 = load i32, i32* %217, align 4
  store i32 87, i32* %11, align 4
  br label %229

225:                                              ; preds = %219
  %226 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %218) #15
  %227 = extractvalue { i64, i32 } %226, 0
  %228 = extractvalue { i64, i32 } %226, 1
  br label %229

229:                                              ; preds = %225, %222
  %230 = phi i32 [ %224, %222 ], [ %228, %225 ]
  %231 = phi i64 [ %223, %222 ], [ %227, %225 ]
  %232 = trunc i64 %231 to i32
  %233 = add i32 %232, -83
  %234 = icmp ult i32 %233, 3
  br i1 %234, label %219, label %235

235:                                              ; preds = %229, %208
  %236 = phi i64 [ %210, %208 ], [ %231, %229 ]
  %237 = phi i32 [ %209, %208 ], [ %230, %229 ]
  %238 = trunc i64 %236 to i32
  %239 = icmp eq i32 %238, 36
  br i1 %239, label %244, label %240

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %242 = bitcast %"struct.SkSL::Token"* %241 to i64*
  store i64 %236, i64* %242, align 4
  %243 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %237, i32* %243, align 4
  br label %246

244:                                              ; preds = %235
  %245 = call i32 @_ZN4SkSL6Parser22functionDeclarationEndENS_9ModifiersENS_7ASTNode2IDERKNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Modifiers"* nonnull byval(%"struct.SkSL::Modifiers") align 8 %4, i32 %187, %"struct.SkSL::Token"* nonnull dereferenceable(12) %6)
  br label %256

246:                                              ; preds = %195, %240
  %247 = bitcast %"struct.SkSL::Token"* %6 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = load i32, i32* %193, align 8
  %250 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = ashr i64 %248, 32
  %253 = getelementptr inbounds i8, i8* %251, i64 %252
  %254 = sext i32 %249 to i64
  %255 = call i32 @_ZN4SkSL6Parser17varDeclarationEndENS_9ModifiersENS_7ASTNode2IDENS_14StringFragmentE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Modifiers"* nonnull byval(%"struct.SkSL::Modifiers") align 8 %4, i32 %187, i8* %253, i64 %254)
  br label %256

256:                                              ; preds = %189, %246, %244
  %257 = phi i32 [ %245, %244 ], [ %255, %246 ], [ -1, %189 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %190) #15
  br label %258

258:                                              ; preds = %256, %186, %183, %148, %146
  %259 = phi i32 [ %149, %148 ], [ %185, %183 ], [ %147, %146 ], [ %257, %256 ], [ -1, %186 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %84) #15
  br label %260

260:                                              ; preds = %82, %258, %60
  %261 = phi i32 [ %259, %258 ], [ %61, %60 ], [ -1, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #15
  ret i32 %261
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN4SkSL6Parser12nextRawTokenEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 87
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %7 = bitcast %"struct.SkSL::Token"* %6 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %10 = load i32, i32* %9, align 4
  store i32 87, i32* %2, align 4
  br label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %13 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %12) #15
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  br label %16

16:                                               ; preds = %11, %5
  %17 = phi i32 [ %10, %5 ], [ %15, %11 ]
  %18 = phi i64 [ %8, %5 ], [ %14, %11 ]
  %19 = insertvalue { i64, i32 } undef, i64 %18, 0
  %20 = insertvalue { i64, i32 } %19, i32 %17, 1
  ret { i64, i32 } %20
}

declare { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN4SkSL6Parser9nextTokenEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 87
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %7 = bitcast %"struct.SkSL::Token"* %6 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %10 = load i32, i32* %9, align 4
  store i32 87, i32* %2, align 4
  br label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %13 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %12) #15
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  br label %16

16:                                               ; preds = %5, %11
  %17 = phi i32 [ %10, %5 ], [ %15, %11 ]
  %18 = phi i64 [ %8, %5 ], [ %14, %11 ]
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, -83
  %21 = icmp ult i32 %20, 3
  br i1 %21, label %22, label %43

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %24 = bitcast %"struct.SkSL::Token"* %23 to i64*
  %25 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %26 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %27

27:                                               ; preds = %22, %37
  %28 = load i32, i32* %2, align 4
  %29 = icmp eq i32 %28, 87
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load i64, i64* %24, align 4
  %32 = load i32, i32* %25, align 4
  store i32 87, i32* %2, align 4
  br label %37

33:                                               ; preds = %27
  %34 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %26) #15
  %35 = extractvalue { i64, i32 } %34, 0
  %36 = extractvalue { i64, i32 } %34, 1
  br label %37

37:                                               ; preds = %30, %33
  %38 = phi i32 [ %32, %30 ], [ %36, %33 ]
  %39 = phi i64 [ %31, %30 ], [ %35, %33 ]
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, -83
  %42 = icmp ult i32 %41, 3
  br i1 %42, label %27, label %43

43:                                               ; preds = %37, %16
  %44 = phi i64 [ %18, %16 ], [ %39, %37 ]
  %45 = phi i32 [ %17, %16 ], [ %38, %37 ]
  %46 = insertvalue { i64, i32 } undef, i64 %44, 0
  %47 = insertvalue { i64, i32 } %46, i32 %45, 1
  ret { i64, i32 } %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL6Parser8pushbackENS_5TokenE(%"class.SkSL::Parser"* nocapture, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %5 = bitcast %"struct.SkSL::Token"* %4 to i64*
  store i64 %1, i64* %5, align 4
  %6 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %2, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser9checkNextENS_5Token4KindEPS1_(%"class.SkSL::Parser"*, i32, %"struct.SkSL::Token"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 87
  %7 = icmp eq i32 %5, %1
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %62

9:                                                ; preds = %3
  br i1 %6, label %16, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %12 = bitcast %"struct.SkSL::Token"* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %15 = load i32, i32* %14, align 4
  store i32 87, i32* %4, align 4
  br label %21

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %18 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %17) #15
  %19 = extractvalue { i64, i32 } %18, 0
  %20 = extractvalue { i64, i32 } %18, 1
  br label %21

21:                                               ; preds = %16, %10
  %22 = phi i32 [ %15, %10 ], [ %20, %16 ]
  %23 = phi i64 [ %13, %10 ], [ %19, %16 ]
  %24 = trunc i64 %23 to i32
  %25 = add i32 %24, -83
  %26 = icmp ult i32 %25, 3
  br i1 %26, label %27, label %48

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %29 = bitcast %"struct.SkSL::Token"* %28 to i64*
  %30 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %31 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %32

32:                                               ; preds = %42, %27
  %33 = load i32, i32* %4, align 4
  %34 = icmp eq i32 %33, 87
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = load i64, i64* %29, align 4
  %37 = load i32, i32* %30, align 4
  store i32 87, i32* %4, align 4
  br label %42

38:                                               ; preds = %32
  %39 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %31) #15
  %40 = extractvalue { i64, i32 } %39, 0
  %41 = extractvalue { i64, i32 } %39, 1
  br label %42

42:                                               ; preds = %38, %35
  %43 = phi i32 [ %37, %35 ], [ %41, %38 ]
  %44 = phi i64 [ %36, %35 ], [ %40, %38 ]
  %45 = trunc i64 %44 to i32
  %46 = add i32 %45, -83
  %47 = icmp ult i32 %46, 3
  br i1 %47, label %32, label %48

48:                                               ; preds = %42, %21
  %49 = phi i64 [ %23, %21 ], [ %44, %42 ]
  %50 = phi i32 [ %22, %21 ], [ %43, %42 ]
  %51 = trunc i64 %49 to i32
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = icmp eq %"struct.SkSL::Token"* %2, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  %56 = bitcast %"struct.SkSL::Token"* %2 to i64*
  store i64 %49, i64* %56, align 4
  %57 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 2
  store i32 %50, i32* %57, align 4
  br label %62

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %60 = bitcast %"struct.SkSL::Token"* %59 to i64*
  store i64 %49, i64* %60, align 4
  %61 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %50, i32* %61, align 4
  br label %62

62:                                               ; preds = %58, %53, %55, %3
  %63 = phi i1 [ false, %3 ], [ false, %58 ], [ true, %53 ], [ true, %55 ]
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"*, i32, i8* nocapture readonly, %"struct.SkSL::Token"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 87
  br i1 %12, label %19, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %15 = bitcast %"struct.SkSL::Token"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 87, i32* %10, align 4
  br label %24

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %21 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %20) #15
  %22 = extractvalue { i64, i32 } %21, 0
  %23 = extractvalue { i64, i32 } %21, 1
  br label %24

24:                                               ; preds = %19, %13
  %25 = phi i32 [ %18, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %16, %13 ], [ %22, %19 ]
  %27 = trunc i64 %26 to i32
  %28 = add i32 %27, -83
  %29 = icmp ult i32 %28, 3
  br i1 %29, label %30, label %51

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %32 = bitcast %"struct.SkSL::Token"* %31 to i64*
  %33 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %34 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %35

35:                                               ; preds = %45, %30
  %36 = load i32, i32* %10, align 4
  %37 = icmp eq i32 %36, 87
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i64, i64* %32, align 4
  %40 = load i32, i32* %33, align 4
  store i32 87, i32* %10, align 4
  br label %45

41:                                               ; preds = %35
  %42 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %34) #15
  %43 = extractvalue { i64, i32 } %42, 0
  %44 = extractvalue { i64, i32 } %42, 1
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi i32 [ %40, %38 ], [ %44, %41 ]
  %47 = phi i64 [ %39, %38 ], [ %43, %41 ]
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, -83
  %50 = icmp ult i32 %49, 3
  br i1 %50, label %35, label %51

51:                                               ; preds = %45, %24
  %52 = phi i64 [ %26, %24 ], [ %47, %45 ]
  %53 = phi i32 [ %25, %24 ], [ %46, %45 ]
  %54 = trunc i64 %52 to i32
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = icmp eq %"struct.SkSL::Token"* %3, null
  br i1 %57, label %135, label %58

58:                                               ; preds = %56
  %59 = bitcast %"struct.SkSL::Token"* %3 to i64*
  store i64 %52, i64* %59, align 4
  %60 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 %53, i32* %60, align 4
  br label %135

61:                                               ; preds = %51
  %62 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #15
  %63 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #15
  %64 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #15
  %65 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #15
  %66 = tail call i64 @strlen(i8* %2) #15
  %67 = icmp ugt i64 %66, -17
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = bitcast %"class.SkSL::String"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %69) #16
  unreachable

70:                                               ; preds = %61
  %71 = icmp ult i64 %66, 23
  br i1 %71, label %80, label %72

72:                                               ; preds = %70
  %73 = add nuw i64 %66, 16
  %74 = and i64 %73, -16
  %75 = tail call i8* @_Znwm(i64 %74) #14
  %76 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %75, i8** %76, align 8
  %77 = or i64 %74, -9223372036854775808
  %78 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %66, i64* %79, align 8
  br label %85

80:                                               ; preds = %70
  %81 = trunc i64 %66 to i8
  %82 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  store i8 %81, i8* %83, align 1
  %84 = icmp eq i64 %66, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %80, %72
  %86 = phi i8* [ %75, %72 ], [ %65, %80 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %86, i8* align 1 %2, i64 %66, i1 false) #15
  br label %87

87:                                               ; preds = %80, %85
  %88 = phi i8* [ %65, %80 ], [ %86, %85 ]
  %89 = getelementptr inbounds i8, i8* %88, i64 %66
  store i8 0, i8* %89, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %9) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #15
  %90 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = ashr i64 %52, 32
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  %94 = sext i32 %53 to i64
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* %93, i64 %94) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %52, i32 undef, %"class.SkSL::String"* nonnull %5)
  %95 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #14
  br label %102

102:                                              ; preds = %87, %99
  %103 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %102, %107
  %111 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %110, %115
  %119 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %125) #14
  br label %126

126:                                              ; preds = %118, %123
  %127 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #14
  br label %134

134:                                              ; preds = %126, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #15
  br label %135

135:                                              ; preds = %58, %56, %134
  %136 = phi i1 [ false, %134 ], [ true, %56 ], [ true, %58 ]
  ret i1 %136
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #5

declare void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZN4SkSL6Parser4textENS_5TokenE(%"class.SkSL::Parser"* nocapture readonly, i64, i32) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = ashr i64 %1, 32
  %7 = getelementptr inbounds i8, i8* %5, i64 %6
  %8 = sext i32 %2 to i64
  %9 = insertvalue { i8*, i64 } undef, i8* %7, 0
  %10 = insertvalue { i8*, i64 } %9, i64 %8, 1
  ret { i8*, i64 } %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"*, %"struct.SkSL::Token"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0), %"struct.SkSL::Token"* %1)
  br i1 %6, label %7, label %81

7:                                                ; preds = %2
  %8 = bitcast %"struct.SkSL::Token"* %1 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = ashr i64 %9, 32
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = sext i32 %11 to i64
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 4
  %18 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %17, align 8
  %19 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %18, i8* %15, i64 %16) #15
  %20 = icmp eq %"class.SkSL::Symbol"* %19, null
  br i1 %20, label %81, label %21

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %19, i64 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 13
  br i1 %24, label %25, label %81

25:                                               ; preds = %21
  %26 = load i64, i64* %8, align 4
  %27 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  %29 = load i32, i32* %10, align 4
  %30 = load i8*, i8** %12, align 8
  %31 = ashr i64 %26, 32
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = sext i32 %29 to i64
  %34 = icmp ugt i32 %29, -17
  br i1 %34, label %35, label %37

35:                                               ; preds = %25
  %36 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %36) #16
  unreachable

37:                                               ; preds = %25
  %38 = icmp ult i32 %29, 23
  br i1 %38, label %47, label %39

39:                                               ; preds = %37
  %40 = add nuw nsw i64 %33, 16
  %41 = and i64 %40, -16
  %42 = tail call i8* @_Znwm(i64 %41) #14
  %43 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8
  %44 = or i64 %41, -9223372036854775808
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %46, align 8
  br label %52

47:                                               ; preds = %37
  %48 = trunc i32 %29 to i8
  %49 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 %48, i8* %50, align 1
  %51 = icmp eq i32 %29, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %47, %39
  %53 = phi i8* [ %42, %39 ], [ %28, %47 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %53, i8* align 1 %32, i64 %33, i1 false) #15
  br label %54

54:                                               ; preds = %47, %52
  %55 = phi i8* [ %28, %47 ], [ %53, %52 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 %33
  store i8 0, i8* %56, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.30, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %26, i32 undef, %"class.SkSL::String"* nonnull %3)
  %57 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #14
  br label %64

64:                                               ; preds = %54, %61
  %65 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %64, %69
  %73 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %72, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  br label %81

81:                                               ; preds = %7, %21, %2, %80
  %82 = phi i1 [ false, %80 ], [ false, %2 ], [ true, %21 ], [ true, %7 ]
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser6isTypeENS_14StringFragmentE(%"class.SkSL::Parser"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 4
  %5 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %4, align 8
  %6 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %5, i8* %1, i64 %2) #15
  %7 = icmp eq %"class.SkSL::Symbol"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %6, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 13
  br label %12

12:                                               ; preds = %3, %8
  %13 = phi i1 [ false, %3 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL6Parser5errorEiNS_6StringE(%"class.SkSL::Parser"* nocapture readonly, i32, %"class.SkSL::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 5
  %6 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %5, align 8
  %7 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.SkSL::String"* %4 to i8*
  %13 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 24, i1 false) #15
  br label %20

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %15, i8* %17, i64 %19) #15
  br label %20

20:                                               ; preds = %11, %14
  %21 = bitcast %"class.SkSL::ErrorReporter"* %6 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %22 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %22, i64 2
  %24 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %23, align 8
  call void %24(%"class.SkSL::ErrorReporter"* %6, i32 %1, %"class.SkSL::String"* nonnull %4) #15
  %25 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %20, %29
  ret void
}

declare %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser11isArrayTypeENS_7ASTNode2IDE(%"class.SkSL::Parser"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %7, i64 %5, i32 4, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, -1
  ret i1 %10
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS3_11SectionDataEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"*, i32* dereferenceable(4), i32* dereferenceable(4), %"struct.SkSL::ASTNode::SectionData"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.SkSL::ASTNode::SectionData", align 8
  %6 = alloca %"struct.SkSL::ASTNode::SectionData", align 8
  %7 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.SkSL::ASTNode"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.SkSL::ASTFile"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 160
  %16 = trunc i64 %15 to i32
  %17 = ptrtoint %"struct.SkSL::ASTFile"* %8 to i64
  %18 = inttoptr i64 %11 to %"struct.SkSL::ASTNode"*
  %19 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %19, align 8
  %21 = icmp ugt %"struct.SkSL::ASTNode"* %20, %18
  %22 = ptrtoint %"struct.SkSL::ASTNode"* %20 to i64
  br i1 %21, label %23, label %38

23:                                               ; preds = %4
  %24 = load i32, i32* %1, align 4
  %25 = load i32, i32* %2, align 4
  %26 = bitcast %"struct.SkSL::ASTNode::SectionData"* %3 to i8*
  %27 = bitcast %"struct.SkSL::ASTNode::SectionData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %26, i64 48, i1 false) #15
  %28 = inttoptr i64 %11 to i64*
  store i64 %17, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 1, i32 1
  store i32 10, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* nonnull align 8 %27, i64 48, i1 false) #15
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 2
  store i32 %24, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 3
  store i32 %25, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 4, i32 0
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 5, i32 0
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 6, i32 0
  store i32 -1, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27)
  %36 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 1
  %37 = ptrtoint %"struct.SkSL::ASTNode"* %36 to i64
  store i64 %37, i64* %10, align 8
  br label %96

38:                                               ; preds = %4
  %39 = add nsw i64 %15, 1
  %40 = icmp ugt i64 %39, 115292150460684697
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = bitcast %"struct.SkSL::ASTFile"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #16
  unreachable

43:                                               ; preds = %38
  %44 = bitcast %"struct.SkSL::ASTNode"** %19 to i64*
  %45 = sub i64 %22, %13
  %46 = sdiv exact i64 %45, 160
  %47 = icmp ult i64 %46, 57646075230342348
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = shl nsw i64 %46, 1
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48, %43
  %54 = phi i64 [ %51, %48 ], [ 115292150460684697, %43 ]
  %55 = mul i64 %54, 160
  %56 = tail call i8* @_Znwm(i64 %55) #14
  %57 = bitcast i8* %56 to %"struct.SkSL::ASTNode"*
  br label %58

58:                                               ; preds = %53, %48
  %59 = phi i64 [ %54, %53 ], [ 0, %48 ]
  %60 = phi %"struct.SkSL::ASTNode"* [ %57, %53 ], [ null, %48 ]
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15
  %62 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %59
  %63 = ptrtoint %"struct.SkSL::ASTNode"* %62 to i64
  %64 = load i32, i32* %1, align 4
  %65 = load i32, i32* %2, align 4
  %66 = bitcast %"struct.SkSL::ASTNode::SectionData"* %3 to i8*
  %67 = bitcast %"struct.SkSL::ASTNode::SectionData"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %67)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %66, i64 48, i1 false) #15
  %68 = bitcast %"struct.SkSL::ASTNode"* %61 to i64*
  store i64 %17, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 1, i32 1
  store i32 10, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* nonnull align 8 %67, i64 48, i1 false) #15
  %71 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 2
  store i32 %64, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 3
  store i32 %65, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 4, i32 0
  store i32 -1, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 5, i32 0
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 6, i32 0
  store i32 -1, i32* %75, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %67)
  %76 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %61, i64 1
  %77 = ptrtoint %"struct.SkSL::ASTNode"* %76 to i64
  %78 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %8, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  %80 = load i64, i64* %10, align 8
  %81 = ptrtoint %"struct.SkSL::ASTNode"* %79 to i64
  %82 = sub i64 %80, %81
  %83 = sdiv exact i64 %82, -160
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %61, i64 %83
  %85 = ptrtoint %"struct.SkSL::ASTNode"* %84 to i64
  %86 = icmp sgt i64 %82, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %58
  %88 = bitcast %"struct.SkSL::ASTNode"* %84 to i8*
  %89 = bitcast %"struct.SkSL::ASTNode"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 %82, i1 false) #15
  %90 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  br label %91

91:                                               ; preds = %87, %58
  %92 = phi %"struct.SkSL::ASTNode"* [ %79, %58 ], [ %90, %87 ]
  store i64 %85, i64* %12, align 8
  store i64 %77, i64* %10, align 8
  store i64 %63, i64* %44, align 8
  %93 = icmp eq %"struct.SkSL::ASTNode"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = bitcast %"struct.SkSL::ASTNode"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %94, %91, %23
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser15enumDeclarationEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.19", align 8
  %3 = alloca [15 x i8], align 8
  %4 = alloca %"struct.SkSL::Token", align 4
  %5 = alloca %"struct.SkSL::Token", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"struct.SkSL::Token", align 8
  %8 = bitcast %"struct.SkSL::Token"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 2
  store i32 87, i32* %9, align 4
  store i32 -1, i32* %10, align 4
  store i32 -1, i32* %11, align 4
  %12 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %4)
  br i1 %12, label %13, label %923

13:                                               ; preds = %1
  %14 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %14, label %15, label %923

15:                                               ; preds = %13
  %16 = bitcast %"struct.SkSL::Token"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %5, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %5, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %5, i64 0, i32 2
  store i32 87, i32* %17, align 8
  store i32 -1, i32* %18, align 4
  store i32 -1, i32* %19, align 8
  %20 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %5)
  br i1 %20, label %21, label %921

21:                                               ; preds = %15
  %22 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %22, label %23, label %921

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 4
  %25 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %24, align 8
  %26 = bitcast %"struct.SkSL::Token"* %5 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = load i32, i32* %19, align 8
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = ashr i64 %27, 32
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = sext i32 %28 to i64
  %34 = icmp ugt i32 %28, -17
  br i1 %34, label %35, label %37

35:                                               ; preds = %23
  %36 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %36) #16
  unreachable

37:                                               ; preds = %23
  %38 = icmp ult i32 %28, 23
  br i1 %38, label %48, label %39

39:                                               ; preds = %37
  %40 = add nuw nsw i64 %33, 16
  %41 = and i64 %40, -16
  %42 = call i8* @_Znwm(i64 %41) #14
  %43 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8
  %44 = or i64 %41, -9223372036854775808
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %46, align 8
  %47 = bitcast %"class.SkSL::String"* %6 to i8*
  br label %54

48:                                               ; preds = %37
  %49 = trunc i32 %28 to i8
  %50 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 %49, i8* %51, align 1
  %52 = bitcast %"class.SkSL::String"* %6 to i8*
  %53 = icmp eq i32 %28, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %48, %39
  %55 = phi i8* [ %52, %48 ], [ %47, %39 ]
  %56 = phi i8* [ %52, %48 ], [ %42, %39 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 %32, i64 %33, i1 false) #15
  br label %57

57:                                               ; preds = %48, %54
  %58 = phi i8* [ %52, %48 ], [ %55, %54 ]
  %59 = phi i8* [ %52, %48 ], [ %56, %54 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %33
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %61)
  %62 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #15
  %63 = bitcast %"class.SkSL::String"* %6 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast i64* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 %66, i64 15, i1 false) #15
  %67 = getelementptr inbounds i8, i8* %58, i64 23
  %68 = load i8, i8* %67, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #15
  %69 = bitcast i8* %62 to i32 (...)***
  %70 = getelementptr inbounds i8, i8* %62, i64 8
  %71 = bitcast i8* %70 to i32*
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds i8, i8* %62, i64 12
  %73 = bitcast i8* %72 to i32*
  store i32 13, i32* %73, align 4
  %74 = getelementptr inbounds i8, i8* %62, i64 16
  %75 = bitcast i8* %74 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), i8** %75, align 8
  %76 = getelementptr inbounds i8, i8* %62, i64 24
  %77 = bitcast i8* %76 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %78 = getelementptr inbounds i8, i8* %62, i64 40
  %79 = bitcast i8* %78 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i64 0, i64 0), i8** %79, align 8
  %80 = getelementptr inbounds i8, i8* %62, i64 48
  %81 = bitcast i8* %80 to i64*
  store i64 %64, i64* %81, align 8
  %82 = getelementptr inbounds i8, i8* %62, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %61, i64 15, i1 false) #15
  %83 = getelementptr inbounds i8, i8* %62, i64 71
  store i8 %68, i8* %83, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 15, i1 false)
  %84 = getelementptr inbounds i8, i8* %62, i64 72
  %85 = bitcast i8* %84 to i32*
  store i32 1, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %62, i64 76
  %87 = bitcast i8* %86 to i32*
  store i32 4, i32* %87, align 4
  %88 = getelementptr inbounds i8, i8* %62, i64 80
  %89 = bitcast i8* %88 to i32*
  store i32 -1, i32* %89, align 8
  %90 = getelementptr inbounds i8, i8* %62, i64 88
  %91 = getelementptr inbounds i8, i8* %62, i64 120
  %92 = bitcast i8* %91 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 32, i1 false) #15
  store i32 -1, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %62, i64 124
  %94 = bitcast i8* %93 to i32*
  store i32 -1, i32* %94, align 4
  %95 = getelementptr inbounds i8, i8* %62, i64 128
  %96 = getelementptr inbounds i8, i8* %62, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 33, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #15
  %97 = icmp slt i8 %68, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %57
  %99 = inttoptr i64 %64 to i8*
  %100 = bitcast i8* %82 to i64*
  %101 = load i64, i64* %100, align 8
  br label %104

102:                                              ; preds = %57
  %103 = zext i8 %68 to i64
  br label %104

104:                                              ; preds = %98, %102
  %105 = phi i8* [ %99, %98 ], [ %80, %102 ]
  %106 = phi i64 [ %101, %98 ], [ %103, %102 ]
  store i8* %105, i8** %75, align 8
  store i64 %106, i64* %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %61)
  %107 = ptrtoint i8* %62 to i64
  %108 = bitcast i8* %62 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %25, %"class.SkSL::Symbol"* %108) #15
  %109 = bitcast %"class.std::__1::unique_ptr.19"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #15
  %110 = bitcast %"class.std::__1::unique_ptr.19"* %2 to i64*
  store i64 %107, i64* %110, align 8
  %111 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %25, i64 0, i32 1, i32 0, i32 1
  %112 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %111, align 8
  %113 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %25, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %114 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %113, align 8
  %115 = icmp ult %"class.std::__1::unique_ptr.19"* %112, %114
  br i1 %115, label %116, label %122

116:                                              ; preds = %104
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.19"* %112 to i64*
  store i64 %107, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %112, i64 1
  %120 = ptrtoint %"class.std::__1::unique_ptr.19"* %119 to i64
  %121 = bitcast %"class.std::__1::unique_ptr.19"** %111 to i64*
  store i64 %120, i64* %121, align 8
  br label %124

122:                                              ; preds = %104
  %123 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %25, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"* %123, %"class.std::__1::unique_ptr.19"* nonnull dereferenceable(8) %2) #15
  br label %124

124:                                              ; preds = %122, %116
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %2, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %125, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %125, align 8
  %127 = icmp eq %"class.SkSL::Symbol"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %124
  %129 = bitcast %"class.SkSL::Symbol"* %126 to void (%"class.SkSL::Symbol"*)***
  %130 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %130, i64 1
  %132 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %131, align 8
  call void %132(%"class.SkSL::Symbol"* nonnull %126) #15
  br label %133

133:                                              ; preds = %124, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #15
  %134 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %140) #14
  br label %141

141:                                              ; preds = %133, %138
  %142 = load i64, i64* %26, align 8
  %143 = load i32, i32* %19, align 8
  %144 = load i8*, i8** %29, align 8
  %145 = ashr i64 %142, 32
  %146 = getelementptr inbounds i8, i8* %144, i64 %145
  %147 = sext i32 %143 to i64
  %148 = ptrtoint i8* %146 to i64
  %149 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %150 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %151 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %150, i64 0, i32 0, i32 0, i32 1
  %152 = bitcast %"struct.SkSL::ASTNode"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"struct.SkSL::ASTFile"* %150 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = sub i64 %153, %155
  %157 = sdiv exact i64 %156, 160
  %158 = trunc i64 %157 to i32
  %159 = ptrtoint %"struct.SkSL::ASTFile"* %150 to i64
  %160 = inttoptr i64 %153 to %"struct.SkSL::ASTNode"*
  %161 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %150, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %162 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %161, align 8
  %163 = icmp ugt %"struct.SkSL::ASTNode"* %162, %160
  %164 = ptrtoint %"struct.SkSL::ASTNode"* %162 to i64
  br i1 %163, label %165, label %178

165:                                              ; preds = %141
  %166 = load i32, i32* %18, align 4
  %167 = inttoptr i64 %153 to i64*
  store i64 %159, i64* %167, align 8
  %168 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %160, i64 0, i32 1
  %169 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %160, i64 0, i32 1, i32 1
  store i32 1, i32* %169, align 4
  %170 = bitcast %"struct.SkSL::ASTNode::NodeData"* %168 to i64*
  store i64 %148, i64* %170, align 4
  %171 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %160, i64 0, i32 1, i32 0, i64 8
  %172 = bitcast i8* %171 to i64*
  store i64 %147, i64* %172, align 4
  %173 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %160, i64 0, i32 2
  store i32 %166, i32* %173, align 4
  %174 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %160, i64 0, i32 3
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 8, i32 -1, i32 -1, i32 -1>, <4 x i32>* %175, align 8
  %176 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %160, i64 1
  %177 = ptrtoint %"struct.SkSL::ASTNode"* %176 to i64
  store i64 %177, i64* %152, align 8
  br label %234

178:                                              ; preds = %141
  %179 = add nsw i64 %157, 1
  %180 = icmp ugt i64 %179, 115292150460684697
  br i1 %180, label %181, label %183

181:                                              ; preds = %178
  %182 = bitcast %"struct.SkSL::ASTFile"* %150 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %182) #16
  unreachable

183:                                              ; preds = %178
  %184 = bitcast %"struct.SkSL::ASTNode"** %161 to i64*
  %185 = sub i64 %164, %155
  %186 = sdiv exact i64 %185, 160
  %187 = icmp ult i64 %186, 57646075230342348
  br i1 %187, label %188, label %193

188:                                              ; preds = %183
  %189 = shl nsw i64 %186, 1
  %190 = icmp ult i64 %189, %179
  %191 = select i1 %190, i64 %179, i64 %189
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %198, label %193

193:                                              ; preds = %188, %183
  %194 = phi i64 [ %191, %188 ], [ 115292150460684697, %183 ]
  %195 = mul i64 %194, 160
  %196 = call i8* @_Znwm(i64 %195) #14
  %197 = bitcast i8* %196 to %"struct.SkSL::ASTNode"*
  br label %198

198:                                              ; preds = %193, %188
  %199 = phi i64 [ %194, %193 ], [ 0, %188 ]
  %200 = phi %"struct.SkSL::ASTNode"* [ %197, %193 ], [ null, %188 ]
  %201 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %200, i64 %157
  %202 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %200, i64 %199
  %203 = ptrtoint %"struct.SkSL::ASTNode"* %202 to i64
  %204 = load i32, i32* %18, align 4
  %205 = bitcast %"struct.SkSL::ASTNode"* %201 to i64*
  store i64 %159, i64* %205, align 8
  %206 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %200, i64 %157, i32 1
  %207 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %200, i64 %157, i32 1, i32 1
  store i32 1, i32* %207, align 4
  %208 = bitcast %"struct.SkSL::ASTNode::NodeData"* %206 to i64*
  store i64 %148, i64* %208, align 4
  %209 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %200, i64 %157, i32 1, i32 0, i64 8
  %210 = bitcast i8* %209 to i64*
  store i64 %147, i64* %210, align 4
  %211 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %200, i64 %157, i32 2
  store i32 %204, i32* %211, align 4
  %212 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %200, i64 %157, i32 3
  %213 = bitcast i32* %212 to <4 x i32>*
  store <4 x i32> <i32 8, i32 -1, i32 -1, i32 -1>, <4 x i32>* %213, align 8
  %214 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %201, i64 1
  %215 = ptrtoint %"struct.SkSL::ASTNode"* %214 to i64
  %216 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %150, i64 0, i32 0, i32 0, i32 0
  %217 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %216, align 8
  %218 = load i64, i64* %152, align 8
  %219 = ptrtoint %"struct.SkSL::ASTNode"* %217 to i64
  %220 = sub i64 %218, %219
  %221 = sdiv exact i64 %220, -160
  %222 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %201, i64 %221
  %223 = ptrtoint %"struct.SkSL::ASTNode"* %222 to i64
  %224 = icmp sgt i64 %220, 0
  br i1 %224, label %225, label %229

225:                                              ; preds = %198
  %226 = bitcast %"struct.SkSL::ASTNode"* %222 to i8*
  %227 = bitcast %"struct.SkSL::ASTNode"* %217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* align 8 %227, i64 %220, i1 false) #15
  %228 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %216, align 8
  br label %229

229:                                              ; preds = %225, %198
  %230 = phi %"struct.SkSL::ASTNode"* [ %217, %198 ], [ %228, %225 ]
  store i64 %223, i64* %154, align 8
  store i64 %215, i64* %152, align 8
  store i64 %203, i64* %184, align 8
  %231 = icmp eq %"struct.SkSL::ASTNode"* %230, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %229
  %233 = bitcast %"struct.SkSL::ASTNode"* %230 to i8*
  call void @_ZdlPv(i8* %233) #14
  br label %234

234:                                              ; preds = %232, %229, %165
  %235 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %236 = load i32, i32* %235, align 4
  switch i32 %236, label %286 [
    i32 87, label %243
    i32 39, label %237
  ]

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %239 = bitcast %"struct.SkSL::Token"* %238 to i64*
  %240 = load i64, i64* %239, align 4
  %241 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %242 = load i32, i32* %241, align 4
  store i32 87, i32* %235, align 4
  br label %248

243:                                              ; preds = %234
  %244 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %245 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %244) #15
  %246 = extractvalue { i64, i32 } %245, 0
  %247 = extractvalue { i64, i32 } %245, 1
  br label %248

248:                                              ; preds = %243, %237
  %249 = phi i32 [ %242, %237 ], [ %247, %243 ]
  %250 = phi i64 [ %240, %237 ], [ %246, %243 ]
  %251 = trunc i64 %250 to i32
  %252 = add i32 %251, -83
  %253 = icmp ult i32 %252, 3
  br i1 %253, label %254, label %277

254:                                              ; preds = %248
  %255 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %256 = bitcast %"struct.SkSL::Token"* %255 to i64*
  %257 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %258 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %259

259:                                              ; preds = %269, %254
  %260 = load i32, i32* %235, align 4
  %261 = icmp eq i32 %260, 87
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = load i64, i64* %256, align 4
  %264 = load i32, i32* %257, align 4
  store i32 87, i32* %235, align 4
  br label %269

265:                                              ; preds = %259
  %266 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %258) #15
  %267 = extractvalue { i64, i32 } %266, 0
  %268 = extractvalue { i64, i32 } %266, 1
  br label %269

269:                                              ; preds = %265, %262
  %270 = phi i32 [ %264, %262 ], [ %268, %265 ]
  %271 = phi i64 [ %263, %262 ], [ %267, %265 ]
  %272 = trunc i64 %271 to i32
  %273 = add i32 %272, -83
  %274 = icmp ult i32 %273, 3
  br i1 %274, label %259, label %275

275:                                              ; preds = %269
  %276 = trunc i64 %271 to i32
  br label %277

277:                                              ; preds = %275, %248
  %278 = phi i32 [ %251, %248 ], [ %276, %275 ]
  %279 = phi i64 [ %250, %248 ], [ %271, %275 ]
  %280 = phi i32 [ %249, %248 ], [ %270, %275 ]
  %281 = icmp eq i32 %278, 39
  br i1 %281, label %919, label %282

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %284 = bitcast %"struct.SkSL::Token"* %283 to i64*
  store i64 %279, i64* %284, align 4
  %285 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %280, i32* %285, align 4
  br label %286

286:                                              ; preds = %234, %282
  %287 = bitcast %"struct.SkSL::Token"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %287) #15
  %288 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %7, i64 0, i32 0
  %289 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %7, i64 0, i32 1
  %290 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %7, i64 0, i32 2
  store i32 87, i32* %288, align 8
  store i32 -1, i32* %289, align 4
  store i32 -1, i32* %290, align 8
  %291 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %7)
  br i1 %291, label %292, label %917

292:                                              ; preds = %286
  %293 = load i32, i32* %235, align 4
  switch i32 %293, label %476 [
    i32 87, label %300
    i32 64, label %294
  ]

294:                                              ; preds = %292
  %295 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %296 = bitcast %"struct.SkSL::Token"* %295 to i64*
  %297 = load i64, i64* %296, align 4
  %298 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %299 = load i32, i32* %298, align 4
  store i32 87, i32* %235, align 4
  br label %305

300:                                              ; preds = %292
  %301 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %302 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %301) #15
  %303 = extractvalue { i64, i32 } %302, 0
  %304 = extractvalue { i64, i32 } %302, 1
  br label %305

305:                                              ; preds = %300, %294
  %306 = phi i32 [ %299, %294 ], [ %304, %300 ]
  %307 = phi i64 [ %297, %294 ], [ %303, %300 ]
  %308 = trunc i64 %307 to i32
  %309 = add i32 %308, -83
  %310 = icmp ult i32 %309, 3
  br i1 %310, label %311, label %332

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %313 = bitcast %"struct.SkSL::Token"* %312 to i64*
  %314 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %315 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %316

316:                                              ; preds = %326, %311
  %317 = load i32, i32* %235, align 4
  %318 = icmp eq i32 %317, 87
  br i1 %318, label %322, label %319

319:                                              ; preds = %316
  %320 = load i64, i64* %313, align 4
  %321 = load i32, i32* %314, align 4
  store i32 87, i32* %235, align 4
  br label %326

322:                                              ; preds = %316
  %323 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %315) #15
  %324 = extractvalue { i64, i32 } %323, 0
  %325 = extractvalue { i64, i32 } %323, 1
  br label %326

326:                                              ; preds = %322, %319
  %327 = phi i32 [ %321, %319 ], [ %325, %322 ]
  %328 = phi i64 [ %320, %319 ], [ %324, %322 ]
  %329 = trunc i64 %328 to i32
  %330 = add i32 %329, -83
  %331 = icmp ult i32 %330, 3
  br i1 %331, label %316, label %332

332:                                              ; preds = %326, %305
  %333 = phi i64 [ %307, %305 ], [ %328, %326 ]
  %334 = phi i32 [ %306, %305 ], [ %327, %326 ]
  %335 = trunc i64 %333 to i32
  %336 = icmp eq i32 %335, 64
  br i1 %336, label %341, label %337

337:                                              ; preds = %332
  %338 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %339 = bitcast %"struct.SkSL::Token"* %338 to i64*
  store i64 %333, i64* %339, align 4
  %340 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %334, i32* %340, align 4
  br label %476

341:                                              ; preds = %332
  %342 = call i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"* %0)
  %343 = icmp sgt i32 %342, -1
  br i1 %343, label %344, label %917

344:                                              ; preds = %341
  %345 = bitcast %"struct.SkSL::Token"* %7 to i64*
  %346 = load i64, i64* %345, align 8
  %347 = load i32, i32* %290, align 8
  %348 = load i8*, i8** %29, align 8
  %349 = ashr i64 %346, 32
  %350 = getelementptr inbounds i8, i8* %348, i64 %349
  %351 = sext i32 %347 to i64
  %352 = ptrtoint i8* %350 to i64
  %353 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %354 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %353, i64 0, i32 0, i32 0, i32 1
  %355 = bitcast %"struct.SkSL::ASTNode"** %354 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = bitcast %"struct.SkSL::ASTFile"* %353 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = sub i64 %356, %358
  %360 = sdiv exact i64 %359, 160
  %361 = trunc i64 %360 to i32
  %362 = ptrtoint %"struct.SkSL::ASTFile"* %353 to i64
  %363 = inttoptr i64 %356 to %"struct.SkSL::ASTNode"*
  %364 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %353, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %365 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %364, align 8
  %366 = icmp ugt %"struct.SkSL::ASTNode"* %365, %363
  %367 = ptrtoint %"struct.SkSL::ASTNode"* %365 to i64
  br i1 %366, label %368, label %381

368:                                              ; preds = %344
  %369 = load i32, i32* %289, align 4
  %370 = inttoptr i64 %356 to i64*
  store i64 %362, i64* %370, align 8
  %371 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %363, i64 0, i32 1
  %372 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %363, i64 0, i32 1, i32 1
  store i32 1, i32* %372, align 4
  %373 = bitcast %"struct.SkSL::ASTNode::NodeData"* %371 to i64*
  store i64 %352, i64* %373, align 4
  %374 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %363, i64 0, i32 1, i32 0, i64 8
  %375 = bitcast i8* %374 to i64*
  store i64 %351, i64* %375, align 4
  %376 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %363, i64 0, i32 2
  store i32 %369, i32* %376, align 4
  %377 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %363, i64 0, i32 3
  %378 = bitcast i32* %377 to <4 x i32>*
  store <4 x i32> <i32 9, i32 -1, i32 -1, i32 -1>, <4 x i32>* %378, align 8
  %379 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %363, i64 1
  %380 = ptrtoint %"struct.SkSL::ASTNode"* %379 to i64
  store i64 %380, i64* %355, align 8
  br label %437

381:                                              ; preds = %344
  %382 = add nsw i64 %360, 1
  %383 = icmp ugt i64 %382, 115292150460684697
  br i1 %383, label %384, label %386

384:                                              ; preds = %381
  %385 = bitcast %"struct.SkSL::ASTFile"* %353 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %385) #16
  unreachable

386:                                              ; preds = %381
  %387 = bitcast %"struct.SkSL::ASTNode"** %364 to i64*
  %388 = sub i64 %367, %358
  %389 = sdiv exact i64 %388, 160
  %390 = icmp ult i64 %389, 57646075230342348
  br i1 %390, label %391, label %396

391:                                              ; preds = %386
  %392 = shl nsw i64 %389, 1
  %393 = icmp ult i64 %392, %382
  %394 = select i1 %393, i64 %382, i64 %392
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %401, label %396

396:                                              ; preds = %391, %386
  %397 = phi i64 [ %394, %391 ], [ 115292150460684697, %386 ]
  %398 = mul i64 %397, 160
  %399 = call i8* @_Znwm(i64 %398) #14
  %400 = bitcast i8* %399 to %"struct.SkSL::ASTNode"*
  br label %401

401:                                              ; preds = %396, %391
  %402 = phi i64 [ %397, %396 ], [ 0, %391 ]
  %403 = phi %"struct.SkSL::ASTNode"* [ %400, %396 ], [ null, %391 ]
  %404 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %403, i64 %360
  %405 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %403, i64 %402
  %406 = ptrtoint %"struct.SkSL::ASTNode"* %405 to i64
  %407 = load i32, i32* %289, align 4
  %408 = bitcast %"struct.SkSL::ASTNode"* %404 to i64*
  store i64 %362, i64* %408, align 8
  %409 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %403, i64 %360, i32 1
  %410 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %403, i64 %360, i32 1, i32 1
  store i32 1, i32* %410, align 4
  %411 = bitcast %"struct.SkSL::ASTNode::NodeData"* %409 to i64*
  store i64 %352, i64* %411, align 4
  %412 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %403, i64 %360, i32 1, i32 0, i64 8
  %413 = bitcast i8* %412 to i64*
  store i64 %351, i64* %413, align 4
  %414 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %403, i64 %360, i32 2
  store i32 %407, i32* %414, align 4
  %415 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %403, i64 %360, i32 3
  %416 = bitcast i32* %415 to <4 x i32>*
  store <4 x i32> <i32 9, i32 -1, i32 -1, i32 -1>, <4 x i32>* %416, align 8
  %417 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %404, i64 1
  %418 = ptrtoint %"struct.SkSL::ASTNode"* %417 to i64
  %419 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %353, i64 0, i32 0, i32 0, i32 0
  %420 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %419, align 8
  %421 = load i64, i64* %355, align 8
  %422 = ptrtoint %"struct.SkSL::ASTNode"* %420 to i64
  %423 = sub i64 %421, %422
  %424 = sdiv exact i64 %423, -160
  %425 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %404, i64 %424
  %426 = ptrtoint %"struct.SkSL::ASTNode"* %425 to i64
  %427 = icmp sgt i64 %423, 0
  br i1 %427, label %428, label %432

428:                                              ; preds = %401
  %429 = bitcast %"struct.SkSL::ASTNode"* %425 to i8*
  %430 = bitcast %"struct.SkSL::ASTNode"* %420 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %429, i8* align 8 %430, i64 %423, i1 false) #15
  %431 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %419, align 8
  br label %432

432:                                              ; preds = %428, %401
  %433 = phi %"struct.SkSL::ASTNode"* [ %420, %401 ], [ %431, %428 ]
  store i64 %426, i64* %357, align 8
  store i64 %418, i64* %355, align 8
  store i64 %406, i64* %387, align 8
  %434 = icmp eq %"struct.SkSL::ASTNode"* %433, null
  br i1 %434, label %437, label %435

435:                                              ; preds = %432
  %436 = bitcast %"struct.SkSL::ASTNode"* %433 to i8*
  call void @_ZdlPv(i8* %436) #14
  br label %437

437:                                              ; preds = %435, %432, %368
  %438 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %439 = shl i64 %157, 32
  %440 = ashr exact i64 %439, 32
  %441 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %438, i64 0, i32 0, i32 0, i32 0
  %442 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %441, align 8
  %443 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %442, i64 %440, i32 5, i32 0
  %444 = load i32, i32* %443, align 4
  %445 = icmp sgt i32 %444, -1
  br i1 %445, label %446, label %453

446:                                              ; preds = %437
  %447 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %442, i64 %440, i32 0
  %448 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %447, align 8
  %449 = sext i32 %444 to i64
  %450 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %448, i64 0, i32 0, i32 0
  %451 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %450, align 8
  %452 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %451, i64 %449, i32 6, i32 0
  br label %455

453:                                              ; preds = %437
  %454 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %442, i64 %440, i32 4, i32 0
  br label %455

455:                                              ; preds = %446, %453
  %456 = phi i32* [ %452, %446 ], [ %454, %453 ]
  store i32 %361, i32* %456, align 4
  store i32 %361, i32* %443, align 8
  %457 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %458 = shl i64 %360, 32
  %459 = ashr exact i64 %458, 32
  %460 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %457, i64 0, i32 0, i32 0, i32 0
  %461 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %460, align 8
  %462 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %461, i64 %459, i32 5, i32 0
  %463 = load i32, i32* %462, align 4
  %464 = icmp sgt i32 %463, -1
  br i1 %464, label %465, label %472

465:                                              ; preds = %455
  %466 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %461, i64 %459, i32 0
  %467 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %466, align 8
  %468 = sext i32 %463 to i64
  %469 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %467, i64 0, i32 0, i32 0
  %470 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %469, align 8
  %471 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %470, i64 %468, i32 6, i32 0
  br label %474

472:                                              ; preds = %455
  %473 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %461, i64 %459, i32 4, i32 0
  br label %474

474:                                              ; preds = %472, %465
  %475 = phi i32* [ %473, %472 ], [ %471, %465 ]
  store i32 %342, i32* %475, align 4
  store i32 %342, i32* %462, align 8
  br label %589

476:                                              ; preds = %292, %337
  %477 = bitcast %"struct.SkSL::Token"* %7 to i64*
  %478 = load i64, i64* %477, align 8
  %479 = load i32, i32* %290, align 8
  %480 = load i8*, i8** %29, align 8
  %481 = ashr i64 %478, 32
  %482 = getelementptr inbounds i8, i8* %480, i64 %481
  %483 = sext i32 %479 to i64
  %484 = ptrtoint i8* %482 to i64
  %485 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %486 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %485, i64 0, i32 0, i32 0, i32 1
  %487 = bitcast %"struct.SkSL::ASTNode"** %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = bitcast %"struct.SkSL::ASTFile"* %485 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = sub i64 %488, %490
  %492 = sdiv exact i64 %491, 160
  %493 = trunc i64 %492 to i32
  %494 = ptrtoint %"struct.SkSL::ASTFile"* %485 to i64
  %495 = inttoptr i64 %488 to %"struct.SkSL::ASTNode"*
  %496 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %485, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %497 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %496, align 8
  %498 = icmp ugt %"struct.SkSL::ASTNode"* %497, %495
  %499 = ptrtoint %"struct.SkSL::ASTNode"* %497 to i64
  br i1 %498, label %500, label %513

500:                                              ; preds = %476
  %501 = load i32, i32* %289, align 4
  %502 = inttoptr i64 %488 to i64*
  store i64 %494, i64* %502, align 8
  %503 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %495, i64 0, i32 1
  %504 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %495, i64 0, i32 1, i32 1
  store i32 1, i32* %504, align 4
  %505 = bitcast %"struct.SkSL::ASTNode::NodeData"* %503 to i64*
  store i64 %484, i64* %505, align 4
  %506 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %495, i64 0, i32 1, i32 0, i64 8
  %507 = bitcast i8* %506 to i64*
  store i64 %483, i64* %507, align 4
  %508 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %495, i64 0, i32 2
  store i32 %501, i32* %508, align 4
  %509 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %495, i64 0, i32 3
  %510 = bitcast i32* %509 to <4 x i32>*
  store <4 x i32> <i32 9, i32 -1, i32 -1, i32 -1>, <4 x i32>* %510, align 8
  %511 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %495, i64 1
  %512 = ptrtoint %"struct.SkSL::ASTNode"* %511 to i64
  store i64 %512, i64* %487, align 8
  br label %569

513:                                              ; preds = %476
  %514 = add nsw i64 %492, 1
  %515 = icmp ugt i64 %514, 115292150460684697
  br i1 %515, label %516, label %518

516:                                              ; preds = %513
  %517 = bitcast %"struct.SkSL::ASTFile"* %485 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %517) #16
  unreachable

518:                                              ; preds = %513
  %519 = bitcast %"struct.SkSL::ASTNode"** %496 to i64*
  %520 = sub i64 %499, %490
  %521 = sdiv exact i64 %520, 160
  %522 = icmp ult i64 %521, 57646075230342348
  br i1 %522, label %523, label %528

523:                                              ; preds = %518
  %524 = shl nsw i64 %521, 1
  %525 = icmp ult i64 %524, %514
  %526 = select i1 %525, i64 %514, i64 %524
  %527 = icmp eq i64 %526, 0
  br i1 %527, label %533, label %528

528:                                              ; preds = %523, %518
  %529 = phi i64 [ %526, %523 ], [ 115292150460684697, %518 ]
  %530 = mul i64 %529, 160
  %531 = call i8* @_Znwm(i64 %530) #14
  %532 = bitcast i8* %531 to %"struct.SkSL::ASTNode"*
  br label %533

533:                                              ; preds = %528, %523
  %534 = phi i64 [ %529, %528 ], [ 0, %523 ]
  %535 = phi %"struct.SkSL::ASTNode"* [ %532, %528 ], [ null, %523 ]
  %536 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %535, i64 %492
  %537 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %535, i64 %534
  %538 = ptrtoint %"struct.SkSL::ASTNode"* %537 to i64
  %539 = load i32, i32* %289, align 4
  %540 = bitcast %"struct.SkSL::ASTNode"* %536 to i64*
  store i64 %494, i64* %540, align 8
  %541 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %535, i64 %492, i32 1
  %542 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %535, i64 %492, i32 1, i32 1
  store i32 1, i32* %542, align 4
  %543 = bitcast %"struct.SkSL::ASTNode::NodeData"* %541 to i64*
  store i64 %484, i64* %543, align 4
  %544 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %535, i64 %492, i32 1, i32 0, i64 8
  %545 = bitcast i8* %544 to i64*
  store i64 %483, i64* %545, align 4
  %546 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %535, i64 %492, i32 2
  store i32 %539, i32* %546, align 4
  %547 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %535, i64 %492, i32 3
  %548 = bitcast i32* %547 to <4 x i32>*
  store <4 x i32> <i32 9, i32 -1, i32 -1, i32 -1>, <4 x i32>* %548, align 8
  %549 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %536, i64 1
  %550 = ptrtoint %"struct.SkSL::ASTNode"* %549 to i64
  %551 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %485, i64 0, i32 0, i32 0, i32 0
  %552 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %551, align 8
  %553 = load i64, i64* %487, align 8
  %554 = ptrtoint %"struct.SkSL::ASTNode"* %552 to i64
  %555 = sub i64 %553, %554
  %556 = sdiv exact i64 %555, -160
  %557 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %536, i64 %556
  %558 = ptrtoint %"struct.SkSL::ASTNode"* %557 to i64
  %559 = icmp sgt i64 %555, 0
  br i1 %559, label %560, label %564

560:                                              ; preds = %533
  %561 = bitcast %"struct.SkSL::ASTNode"* %557 to i8*
  %562 = bitcast %"struct.SkSL::ASTNode"* %552 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %561, i8* align 8 %562, i64 %555, i1 false) #15
  %563 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %551, align 8
  br label %564

564:                                              ; preds = %560, %533
  %565 = phi %"struct.SkSL::ASTNode"* [ %552, %533 ], [ %563, %560 ]
  store i64 %558, i64* %489, align 8
  store i64 %550, i64* %487, align 8
  store i64 %538, i64* %519, align 8
  %566 = icmp eq %"struct.SkSL::ASTNode"* %565, null
  br i1 %566, label %569, label %567

567:                                              ; preds = %564
  %568 = bitcast %"struct.SkSL::ASTNode"* %565 to i8*
  call void @_ZdlPv(i8* %568) #14
  br label %569

569:                                              ; preds = %567, %564, %500
  %570 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %571 = shl i64 %157, 32
  %572 = ashr exact i64 %571, 32
  %573 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %570, i64 0, i32 0, i32 0, i32 0
  %574 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %573, align 8
  %575 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %574, i64 %572, i32 5, i32 0
  %576 = load i32, i32* %575, align 4
  %577 = icmp sgt i32 %576, -1
  br i1 %577, label %578, label %585

578:                                              ; preds = %569
  %579 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %574, i64 %572, i32 0
  %580 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %579, align 8
  %581 = sext i32 %576 to i64
  %582 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %580, i64 0, i32 0, i32 0
  %583 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %582, align 8
  %584 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %583, i64 %581, i32 6, i32 0
  br label %587

585:                                              ; preds = %569
  %586 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %574, i64 %572, i32 4, i32 0
  br label %587

587:                                              ; preds = %578, %585
  %588 = phi i32* [ %584, %578 ], [ %586, %585 ]
  store i32 %493, i32* %588, align 4
  store i32 %493, i32* %575, align 8
  br label %589

589:                                              ; preds = %474, %587
  %590 = phi i64* [ %345, %474 ], [ %477, %587 ]
  %591 = phi i64 [ %440, %474 ], [ %572, %587 ]
  %592 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %593 = bitcast %"struct.SkSL::Token"* %592 to i64*
  %594 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %595 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %596

596:                                              ; preds = %806, %589
  %597 = load i32, i32* %235, align 4
  switch i32 %597, label %633 [
    i32 87, label %601
    i32 39, label %598
  ]

598:                                              ; preds = %596
  %599 = load i64, i64* %593, align 4
  %600 = load i32, i32* %594, align 4
  store i32 87, i32* %235, align 4
  br label %605

601:                                              ; preds = %596
  %602 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %595) #15
  %603 = extractvalue { i64, i32 } %602, 0
  %604 = extractvalue { i64, i32 } %602, 1
  br label %605

605:                                              ; preds = %601, %598
  %606 = phi i32 [ %600, %598 ], [ %604, %601 ]
  %607 = phi i64 [ %599, %598 ], [ %603, %601 ]
  %608 = trunc i64 %607 to i32
  %609 = add i32 %608, -83
  %610 = icmp ult i32 %609, 3
  br i1 %610, label %611, label %627

611:                                              ; preds = %605, %621
  %612 = load i32, i32* %235, align 4
  %613 = icmp eq i32 %612, 87
  br i1 %613, label %617, label %614

614:                                              ; preds = %611
  %615 = load i64, i64* %593, align 4
  %616 = load i32, i32* %594, align 4
  store i32 87, i32* %235, align 4
  br label %621

617:                                              ; preds = %611
  %618 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %595) #15
  %619 = extractvalue { i64, i32 } %618, 0
  %620 = extractvalue { i64, i32 } %618, 1
  br label %621

621:                                              ; preds = %617, %614
  %622 = phi i32 [ %616, %614 ], [ %620, %617 ]
  %623 = phi i64 [ %615, %614 ], [ %619, %617 ]
  %624 = trunc i64 %623 to i32
  %625 = add i32 %624, -83
  %626 = icmp ult i32 %625, 3
  br i1 %626, label %611, label %627

627:                                              ; preds = %621, %605
  %628 = phi i64 [ %607, %605 ], [ %623, %621 ]
  %629 = phi i32 [ %606, %605 ], [ %622, %621 ]
  %630 = trunc i64 %628 to i32
  %631 = icmp eq i32 %630, 39
  br i1 %631, label %918, label %632

632:                                              ; preds = %627
  store i64 %628, i64* %593, align 4
  store i32 %629, i32* %594, align 4
  br label %633

633:                                              ; preds = %596, %632
  %634 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %634, label %635, label %917

635:                                              ; preds = %633
  %636 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %7)
  br i1 %636, label %637, label %917

637:                                              ; preds = %635
  %638 = load i32, i32* %235, align 4
  switch i32 %638, label %807 [
    i32 87, label %642
    i32 64, label %639
  ]

639:                                              ; preds = %637
  %640 = load i64, i64* %593, align 4
  %641 = load i32, i32* %594, align 4
  store i32 87, i32* %235, align 4
  br label %646

642:                                              ; preds = %637
  %643 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %595) #15
  %644 = extractvalue { i64, i32 } %643, 0
  %645 = extractvalue { i64, i32 } %643, 1
  br label %646

646:                                              ; preds = %642, %639
  %647 = phi i32 [ %641, %639 ], [ %645, %642 ]
  %648 = phi i64 [ %640, %639 ], [ %644, %642 ]
  %649 = trunc i64 %648 to i32
  %650 = add i32 %649, -83
  %651 = icmp ult i32 %650, 3
  br i1 %651, label %652, label %668

652:                                              ; preds = %646, %662
  %653 = load i32, i32* %235, align 4
  %654 = icmp eq i32 %653, 87
  br i1 %654, label %658, label %655

655:                                              ; preds = %652
  %656 = load i64, i64* %593, align 4
  %657 = load i32, i32* %594, align 4
  store i32 87, i32* %235, align 4
  br label %662

658:                                              ; preds = %652
  %659 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %595) #15
  %660 = extractvalue { i64, i32 } %659, 0
  %661 = extractvalue { i64, i32 } %659, 1
  br label %662

662:                                              ; preds = %658, %655
  %663 = phi i32 [ %657, %655 ], [ %661, %658 ]
  %664 = phi i64 [ %656, %655 ], [ %660, %658 ]
  %665 = trunc i64 %664 to i32
  %666 = add i32 %665, -83
  %667 = icmp ult i32 %666, 3
  br i1 %667, label %652, label %668

668:                                              ; preds = %662, %646
  %669 = phi i64 [ %648, %646 ], [ %664, %662 ]
  %670 = phi i32 [ %647, %646 ], [ %663, %662 ]
  %671 = trunc i64 %669 to i32
  %672 = icmp eq i32 %671, 64
  br i1 %672, label %674, label %673

673:                                              ; preds = %668
  store i64 %669, i64* %593, align 4
  store i32 %670, i32* %594, align 4
  br label %807

674:                                              ; preds = %668
  %675 = call i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"* %0)
  %676 = icmp sgt i32 %675, -1
  br i1 %676, label %677, label %917

677:                                              ; preds = %674
  %678 = load i64, i64* %590, align 8
  %679 = load i32, i32* %290, align 8
  %680 = load i8*, i8** %29, align 8
  %681 = ashr i64 %678, 32
  %682 = getelementptr inbounds i8, i8* %680, i64 %681
  %683 = sext i32 %679 to i64
  %684 = ptrtoint i8* %682 to i64
  %685 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %686 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %685, i64 0, i32 0, i32 0, i32 1
  %687 = bitcast %"struct.SkSL::ASTNode"** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"struct.SkSL::ASTFile"* %685 to i64*
  %690 = load i64, i64* %689, align 8
  %691 = sub i64 %688, %690
  %692 = sdiv exact i64 %691, 160
  %693 = trunc i64 %692 to i32
  %694 = ptrtoint %"struct.SkSL::ASTFile"* %685 to i64
  %695 = inttoptr i64 %688 to %"struct.SkSL::ASTNode"*
  %696 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %685, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %697 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %696, align 8
  %698 = icmp ugt %"struct.SkSL::ASTNode"* %697, %695
  %699 = ptrtoint %"struct.SkSL::ASTNode"* %697 to i64
  br i1 %698, label %700, label %713

700:                                              ; preds = %677
  %701 = load i32, i32* %289, align 4
  %702 = inttoptr i64 %688 to i64*
  store i64 %694, i64* %702, align 8
  %703 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %695, i64 0, i32 1
  %704 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %695, i64 0, i32 1, i32 1
  store i32 1, i32* %704, align 4
  %705 = bitcast %"struct.SkSL::ASTNode::NodeData"* %703 to i64*
  store i64 %684, i64* %705, align 4
  %706 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %695, i64 0, i32 1, i32 0, i64 8
  %707 = bitcast i8* %706 to i64*
  store i64 %683, i64* %707, align 4
  %708 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %695, i64 0, i32 2
  store i32 %701, i32* %708, align 4
  %709 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %695, i64 0, i32 3
  %710 = bitcast i32* %709 to <4 x i32>*
  store <4 x i32> <i32 9, i32 -1, i32 -1, i32 -1>, <4 x i32>* %710, align 8
  %711 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %695, i64 1
  %712 = ptrtoint %"struct.SkSL::ASTNode"* %711 to i64
  store i64 %712, i64* %687, align 8
  br label %769

713:                                              ; preds = %677
  %714 = add nsw i64 %692, 1
  %715 = icmp ugt i64 %714, 115292150460684697
  br i1 %715, label %716, label %718

716:                                              ; preds = %713
  %717 = bitcast %"struct.SkSL::ASTFile"* %685 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %717) #16
  unreachable

718:                                              ; preds = %713
  %719 = bitcast %"struct.SkSL::ASTNode"** %696 to i64*
  %720 = sub i64 %699, %690
  %721 = sdiv exact i64 %720, 160
  %722 = icmp ult i64 %721, 57646075230342348
  br i1 %722, label %723, label %728

723:                                              ; preds = %718
  %724 = shl nsw i64 %721, 1
  %725 = icmp ult i64 %724, %714
  %726 = select i1 %725, i64 %714, i64 %724
  %727 = icmp eq i64 %726, 0
  br i1 %727, label %733, label %728

728:                                              ; preds = %723, %718
  %729 = phi i64 [ %726, %723 ], [ 115292150460684697, %718 ]
  %730 = mul i64 %729, 160
  %731 = call i8* @_Znwm(i64 %730) #14
  %732 = bitcast i8* %731 to %"struct.SkSL::ASTNode"*
  br label %733

733:                                              ; preds = %728, %723
  %734 = phi i64 [ %729, %728 ], [ 0, %723 ]
  %735 = phi %"struct.SkSL::ASTNode"* [ %732, %728 ], [ null, %723 ]
  %736 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %735, i64 %692
  %737 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %735, i64 %734
  %738 = ptrtoint %"struct.SkSL::ASTNode"* %737 to i64
  %739 = load i32, i32* %289, align 4
  %740 = bitcast %"struct.SkSL::ASTNode"* %736 to i64*
  store i64 %694, i64* %740, align 8
  %741 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %735, i64 %692, i32 1
  %742 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %735, i64 %692, i32 1, i32 1
  store i32 1, i32* %742, align 4
  %743 = bitcast %"struct.SkSL::ASTNode::NodeData"* %741 to i64*
  store i64 %684, i64* %743, align 4
  %744 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %735, i64 %692, i32 1, i32 0, i64 8
  %745 = bitcast i8* %744 to i64*
  store i64 %683, i64* %745, align 4
  %746 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %735, i64 %692, i32 2
  store i32 %739, i32* %746, align 4
  %747 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %735, i64 %692, i32 3
  %748 = bitcast i32* %747 to <4 x i32>*
  store <4 x i32> <i32 9, i32 -1, i32 -1, i32 -1>, <4 x i32>* %748, align 8
  %749 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %736, i64 1
  %750 = ptrtoint %"struct.SkSL::ASTNode"* %749 to i64
  %751 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %685, i64 0, i32 0, i32 0, i32 0
  %752 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %751, align 8
  %753 = load i64, i64* %687, align 8
  %754 = ptrtoint %"struct.SkSL::ASTNode"* %752 to i64
  %755 = sub i64 %753, %754
  %756 = sdiv exact i64 %755, -160
  %757 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %736, i64 %756
  %758 = ptrtoint %"struct.SkSL::ASTNode"* %757 to i64
  %759 = icmp sgt i64 %755, 0
  br i1 %759, label %760, label %764

760:                                              ; preds = %733
  %761 = bitcast %"struct.SkSL::ASTNode"* %757 to i8*
  %762 = bitcast %"struct.SkSL::ASTNode"* %752 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %761, i8* align 8 %762, i64 %755, i1 false) #15
  %763 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %751, align 8
  br label %764

764:                                              ; preds = %760, %733
  %765 = phi %"struct.SkSL::ASTNode"* [ %752, %733 ], [ %763, %760 ]
  store i64 %758, i64* %689, align 8
  store i64 %750, i64* %687, align 8
  store i64 %738, i64* %719, align 8
  %766 = icmp eq %"struct.SkSL::ASTNode"* %765, null
  br i1 %766, label %769, label %767

767:                                              ; preds = %764
  %768 = bitcast %"struct.SkSL::ASTNode"* %765 to i8*
  call void @_ZdlPv(i8* %768) #14
  br label %769

769:                                              ; preds = %767, %764, %700
  %770 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %771 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %770, i64 0, i32 0, i32 0, i32 0
  %772 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %771, align 8
  %773 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %772, i64 %591, i32 5, i32 0
  %774 = load i32, i32* %773, align 4
  %775 = icmp sgt i32 %774, -1
  br i1 %775, label %776, label %783

776:                                              ; preds = %769
  %777 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %772, i64 %591, i32 0
  %778 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %777, align 8
  %779 = sext i32 %774 to i64
  %780 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %778, i64 0, i32 0, i32 0
  %781 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %780, align 8
  %782 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %781, i64 %779, i32 6, i32 0
  br label %785

783:                                              ; preds = %769
  %784 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %772, i64 %591, i32 4, i32 0
  br label %785

785:                                              ; preds = %776, %783
  %786 = phi i32* [ %782, %776 ], [ %784, %783 ]
  store i32 %693, i32* %786, align 4
  store i32 %693, i32* %773, align 8
  %787 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %788 = shl i64 %692, 32
  %789 = ashr exact i64 %788, 32
  %790 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %787, i64 0, i32 0, i32 0, i32 0
  %791 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %790, align 8
  %792 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %791, i64 %789, i32 5, i32 0
  %793 = load i32, i32* %792, align 4
  %794 = icmp sgt i32 %793, -1
  br i1 %794, label %795, label %802

795:                                              ; preds = %785
  %796 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %791, i64 %789, i32 0
  %797 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %796, align 8
  %798 = sext i32 %793 to i64
  %799 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %797, i64 0, i32 0, i32 0
  %800 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %799, align 8
  %801 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %800, i64 %798, i32 6, i32 0
  br label %804

802:                                              ; preds = %785
  %803 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %791, i64 %789, i32 4, i32 0
  br label %804

804:                                              ; preds = %802, %795
  %805 = phi i32* [ %803, %802 ], [ %801, %795 ]
  store i32 %675, i32* %805, align 4
  store i32 %675, i32* %792, align 8
  br label %806

806:                                              ; preds = %804, %915
  br label %596

807:                                              ; preds = %637, %673
  %808 = load i64, i64* %590, align 8
  %809 = load i32, i32* %290, align 8
  %810 = load i8*, i8** %29, align 8
  %811 = ashr i64 %808, 32
  %812 = getelementptr inbounds i8, i8* %810, i64 %811
  %813 = sext i32 %809 to i64
  %814 = ptrtoint i8* %812 to i64
  %815 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %816 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %815, i64 0, i32 0, i32 0, i32 1
  %817 = bitcast %"struct.SkSL::ASTNode"** %816 to i64*
  %818 = load i64, i64* %817, align 8
  %819 = bitcast %"struct.SkSL::ASTFile"* %815 to i64*
  %820 = load i64, i64* %819, align 8
  %821 = sub i64 %818, %820
  %822 = sdiv exact i64 %821, 160
  %823 = trunc i64 %822 to i32
  %824 = ptrtoint %"struct.SkSL::ASTFile"* %815 to i64
  %825 = inttoptr i64 %818 to %"struct.SkSL::ASTNode"*
  %826 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %815, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %827 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %826, align 8
  %828 = icmp ugt %"struct.SkSL::ASTNode"* %827, %825
  %829 = ptrtoint %"struct.SkSL::ASTNode"* %827 to i64
  br i1 %828, label %830, label %843

830:                                              ; preds = %807
  %831 = load i32, i32* %289, align 4
  %832 = inttoptr i64 %818 to i64*
  store i64 %824, i64* %832, align 8
  %833 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %825, i64 0, i32 1
  %834 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %825, i64 0, i32 1, i32 1
  store i32 1, i32* %834, align 4
  %835 = bitcast %"struct.SkSL::ASTNode::NodeData"* %833 to i64*
  store i64 %814, i64* %835, align 4
  %836 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %825, i64 0, i32 1, i32 0, i64 8
  %837 = bitcast i8* %836 to i64*
  store i64 %813, i64* %837, align 4
  %838 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %825, i64 0, i32 2
  store i32 %831, i32* %838, align 4
  %839 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %825, i64 0, i32 3
  %840 = bitcast i32* %839 to <4 x i32>*
  store <4 x i32> <i32 9, i32 -1, i32 -1, i32 -1>, <4 x i32>* %840, align 8
  %841 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %825, i64 1
  %842 = ptrtoint %"struct.SkSL::ASTNode"* %841 to i64
  store i64 %842, i64* %817, align 8
  br label %899

843:                                              ; preds = %807
  %844 = add nsw i64 %822, 1
  %845 = icmp ugt i64 %844, 115292150460684697
  br i1 %845, label %846, label %848

846:                                              ; preds = %843
  %847 = bitcast %"struct.SkSL::ASTFile"* %815 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %847) #16
  unreachable

848:                                              ; preds = %843
  %849 = bitcast %"struct.SkSL::ASTNode"** %826 to i64*
  %850 = sub i64 %829, %820
  %851 = sdiv exact i64 %850, 160
  %852 = icmp ult i64 %851, 57646075230342348
  br i1 %852, label %853, label %858

853:                                              ; preds = %848
  %854 = shl nsw i64 %851, 1
  %855 = icmp ult i64 %854, %844
  %856 = select i1 %855, i64 %844, i64 %854
  %857 = icmp eq i64 %856, 0
  br i1 %857, label %863, label %858

858:                                              ; preds = %853, %848
  %859 = phi i64 [ %856, %853 ], [ 115292150460684697, %848 ]
  %860 = mul i64 %859, 160
  %861 = call i8* @_Znwm(i64 %860) #14
  %862 = bitcast i8* %861 to %"struct.SkSL::ASTNode"*
  br label %863

863:                                              ; preds = %858, %853
  %864 = phi i64 [ %859, %858 ], [ 0, %853 ]
  %865 = phi %"struct.SkSL::ASTNode"* [ %862, %858 ], [ null, %853 ]
  %866 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %865, i64 %822
  %867 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %865, i64 %864
  %868 = ptrtoint %"struct.SkSL::ASTNode"* %867 to i64
  %869 = load i32, i32* %289, align 4
  %870 = bitcast %"struct.SkSL::ASTNode"* %866 to i64*
  store i64 %824, i64* %870, align 8
  %871 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %865, i64 %822, i32 1
  %872 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %865, i64 %822, i32 1, i32 1
  store i32 1, i32* %872, align 4
  %873 = bitcast %"struct.SkSL::ASTNode::NodeData"* %871 to i64*
  store i64 %814, i64* %873, align 4
  %874 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %865, i64 %822, i32 1, i32 0, i64 8
  %875 = bitcast i8* %874 to i64*
  store i64 %813, i64* %875, align 4
  %876 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %865, i64 %822, i32 2
  store i32 %869, i32* %876, align 4
  %877 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %865, i64 %822, i32 3
  %878 = bitcast i32* %877 to <4 x i32>*
  store <4 x i32> <i32 9, i32 -1, i32 -1, i32 -1>, <4 x i32>* %878, align 8
  %879 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %866, i64 1
  %880 = ptrtoint %"struct.SkSL::ASTNode"* %879 to i64
  %881 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %815, i64 0, i32 0, i32 0, i32 0
  %882 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %881, align 8
  %883 = load i64, i64* %817, align 8
  %884 = ptrtoint %"struct.SkSL::ASTNode"* %882 to i64
  %885 = sub i64 %883, %884
  %886 = sdiv exact i64 %885, -160
  %887 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %866, i64 %886
  %888 = ptrtoint %"struct.SkSL::ASTNode"* %887 to i64
  %889 = icmp sgt i64 %885, 0
  br i1 %889, label %890, label %894

890:                                              ; preds = %863
  %891 = bitcast %"struct.SkSL::ASTNode"* %887 to i8*
  %892 = bitcast %"struct.SkSL::ASTNode"* %882 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %891, i8* align 8 %892, i64 %885, i1 false) #15
  %893 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %881, align 8
  br label %894

894:                                              ; preds = %890, %863
  %895 = phi %"struct.SkSL::ASTNode"* [ %882, %863 ], [ %893, %890 ]
  store i64 %888, i64* %819, align 8
  store i64 %880, i64* %817, align 8
  store i64 %868, i64* %849, align 8
  %896 = icmp eq %"struct.SkSL::ASTNode"* %895, null
  br i1 %896, label %899, label %897

897:                                              ; preds = %894
  %898 = bitcast %"struct.SkSL::ASTNode"* %895 to i8*
  call void @_ZdlPv(i8* %898) #14
  br label %899

899:                                              ; preds = %897, %894, %830
  %900 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %149, align 8
  %901 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %900, i64 0, i32 0, i32 0, i32 0
  %902 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %901, align 8
  %903 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %902, i64 %591, i32 5, i32 0
  %904 = load i32, i32* %903, align 4
  %905 = icmp sgt i32 %904, -1
  br i1 %905, label %906, label %913

906:                                              ; preds = %899
  %907 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %902, i64 %591, i32 0
  %908 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %907, align 8
  %909 = sext i32 %904 to i64
  %910 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %908, i64 0, i32 0, i32 0
  %911 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %910, align 8
  %912 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %911, i64 %909, i32 6, i32 0
  br label %915

913:                                              ; preds = %899
  %914 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %902, i64 %591, i32 4, i32 0
  br label %915

915:                                              ; preds = %906, %913
  %916 = phi i32* [ %912, %906 ], [ %914, %913 ]
  store i32 %823, i32* %916, align 4
  store i32 %823, i32* %903, align 8
  br label %806

917:                                              ; preds = %633, %635, %674, %286, %341
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %287) #15
  br label %921

918:                                              ; preds = %627
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %287) #15
  br label %919

919:                                              ; preds = %918, %277
  %920 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br label %921

921:                                              ; preds = %917, %21, %15, %919
  %922 = phi i32 [ %158, %919 ], [ -1, %15 ], [ -1, %21 ], [ -1, %917 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #15
  br label %923

923:                                              ; preds = %13, %1, %921
  %924 = phi i32 [ %922, %921 ], [ -1, %1 ], [ -1, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #15
  ret i32 %924
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser17ternaryExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %136

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %130
  %22 = phi i32 [ %96, %130 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  %24 = icmp eq i32 %23, 87
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = load i64, i64* %14, align 4
  br label %54

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = add i32 %30, -83
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = extractvalue { i64, i32 } %28, 1
  br label %51

35:                                               ; preds = %27, %45
  %36 = load i32, i32* %12, align 4
  %37 = icmp eq i32 %36, 87
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i64, i64* %14, align 4
  %40 = load i32, i32* %16, align 4
  store i32 87, i32* %12, align 4
  br label %45

41:                                               ; preds = %35
  %42 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %43 = extractvalue { i64, i32 } %42, 0
  %44 = extractvalue { i64, i32 } %42, 1
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi i32 [ %40, %38 ], [ %44, %41 ]
  %47 = phi i64 [ %39, %38 ], [ %43, %41 ]
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, -83
  %50 = icmp ult i32 %49, 3
  br i1 %50, label %35, label %51

51:                                               ; preds = %45, %33
  %52 = phi i64 [ %29, %33 ], [ %47, %45 ]
  %53 = phi i32 [ %34, %33 ], [ %46, %45 ]
  store i64 %52, i64* %14, align 4
  store i32 %53, i32* %16, align 4
  br label %54

54:                                               ; preds = %25, %51
  %55 = phi i64 [ %26, %25 ], [ %52, %51 ]
  %56 = trunc i64 %55 to i32
  switch i32 %56, label %132 [
    i32 64, label %57
    i32 73, label %57
    i32 74, label %57
    i32 75, label %57
    i32 71, label %57
    i32 72, label %57
    i32 76, label %57
    i32 77, label %57
    i32 80, label %57
    i32 79, label %57
    i32 78, label %57
  ]

57:                                               ; preds = %54, %54, %54, %54, %54, %54, %54, %54, %54, %54, %54
  %58 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %58, label %59, label %132

59:                                               ; preds = %57
  %60 = load i32, i32* %12, align 4
  %61 = icmp eq i32 %60, 87
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %67

64:                                               ; preds = %59
  %65 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %66 = extractvalue { i64, i32 } %65, 0
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi i64 [ %63, %62 ], [ %66, %64 ]
  %69 = trunc i64 %68 to i32
  %70 = add i32 %69, -83
  %71 = icmp ult i32 %70, 3
  br i1 %71, label %72, label %85

72:                                               ; preds = %67, %80
  %73 = load i32, i32* %12, align 4
  %74 = icmp eq i32 %73, 87
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %80

77:                                               ; preds = %72
  %78 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %79 = extractvalue { i64, i32 } %78, 0
  br label %80

80:                                               ; preds = %77, %75
  %81 = phi i64 [ %76, %75 ], [ %79, %77 ]
  %82 = trunc i64 %81 to i32
  %83 = add i32 %82, -83
  %84 = icmp ult i32 %83, 3
  br i1 %84, label %72, label %85

85:                                               ; preds = %80, %67
  %86 = phi i64 [ %68, %67 ], [ %81, %80 ]
  %87 = call i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"* %0)
  %88 = icmp sgt i32 %87, -1
  br i1 %88, label %89, label %132

89:                                               ; preds = %85
  %90 = trunc i64 %86 to i32
  %91 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %92 = sext i32 %22 to i64
  %93 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %91, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %93, align 8
  %95 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %94, i64 %92, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 %90, i32* %20, align 4
  %96 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %95, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %97 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %98 = sext i32 %96 to i64
  %99 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %97, i64 0, i32 0, i32 0, i32 0
  %100 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %99, align 8
  %101 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %100, i64 %98, i32 5, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, -1
  br i1 %103, label %104, label %111

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %100, i64 %98, i32 0
  %106 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %105, align 8
  %107 = sext i32 %102 to i64
  %108 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %106, i64 0, i32 0, i32 0
  %109 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %108, align 8
  %110 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %109, i64 %107, i32 6, i32 0
  br label %113

111:                                              ; preds = %89
  %112 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %100, i64 %98, i32 4, i32 0
  br label %113

113:                                              ; preds = %104, %111
  %114 = phi i32* [ %110, %104 ], [ %112, %111 ]
  store i32 %22, i32* %114, align 4
  store i32 %22, i32* %101, align 8
  %115 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %116 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %116, align 8
  %118 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %117, i64 %98, i32 5, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, -1
  br i1 %120, label %121, label %128

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %117, i64 %98, i32 0
  %123 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %122, align 8
  %124 = sext i32 %119 to i64
  %125 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %123, i64 0, i32 0, i32 0
  %126 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %125, align 8
  %127 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %126, i64 %124, i32 6, i32 0
  br label %130

128:                                              ; preds = %113
  %129 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %117, i64 %98, i32 4, i32 0
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32* [ %129, %128 ], [ %127, %121 ]
  store i32 %87, i32* %131, align 4
  store i32 %87, i32* %118, align 8
  br label %21

132:                                              ; preds = %57, %54, %85
  %133 = phi i32 [ -1, %57 ], [ %22, %54 ], [ -1, %85 ]
  %134 = load i32, i32* %7, align 8
  %135 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  br label %136

136:                                              ; preds = %132, %1
  %137 = phi %"class.SkSL::Parser"* [ %0, %1 ], [ %135, %132 ]
  %138 = phi i32 [ 0, %1 ], [ %134, %132 ]
  %139 = phi i32 [ -1, %1 ], [ %133, %132 ]
  %140 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %137, i64 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = sub nsw i32 %141, %138
  store i32 %142, i32* %140, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %139
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL6Parser9modifiersEv(%"struct.SkSL::Modifiers"* noalias nocapture sret, %"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::Layout", align 8
  %4 = bitcast %"struct.SkSL::Layout"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 72, i1 false)
  call void @_ZN4SkSL6Parser6layoutEv(%"struct.SkSL::Layout"* nonnull sret %3, %"class.SkSL::Parser"* %1)
  %5 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3, i32 0
  %6 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3
  %7 = bitcast %"struct.SkSL::Token"* %6 to i64*
  %8 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3, i32 2
  br label %10

10:                                               ; preds = %68, %2
  %11 = phi i32 [ 0, %2 ], [ %57, %68 ]
  %12 = load i32, i32* %5, align 4
  %13 = icmp eq i32 %12, 87
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = load i64, i64* %7, align 4
  %16 = trunc i64 %15 to i32
  br label %47

17:                                               ; preds = %10
  %18 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %8) #15
  %19 = extractvalue { i64, i32 } %18, 0
  %20 = trunc i64 %19 to i32
  %21 = add i32 %20, -83
  %22 = icmp ult i32 %21, 3
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = extractvalue { i64, i32 } %18, 1
  br label %43

25:                                               ; preds = %17, %35
  %26 = load i32, i32* %5, align 4
  %27 = icmp eq i32 %26, 87
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = load i64, i64* %7, align 4
  %30 = load i32, i32* %9, align 4
  store i32 87, i32* %5, align 4
  br label %35

31:                                               ; preds = %25
  %32 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %8) #15
  %33 = extractvalue { i64, i32 } %32, 0
  %34 = extractvalue { i64, i32 } %32, 1
  br label %35

35:                                               ; preds = %31, %28
  %36 = phi i32 [ %30, %28 ], [ %34, %31 ]
  %37 = phi i64 [ %29, %28 ], [ %33, %31 ]
  %38 = trunc i64 %37 to i32
  %39 = add i32 %38, -83
  %40 = icmp ult i32 %39, 3
  br i1 %40, label %25, label %41

41:                                               ; preds = %35
  %42 = trunc i64 %37 to i32
  br label %43

43:                                               ; preds = %41, %23
  %44 = phi i32 [ %20, %23 ], [ %42, %41 ]
  %45 = phi i64 [ %19, %23 ], [ %37, %41 ]
  %46 = phi i32 [ %24, %23 ], [ %36, %41 ]
  store i64 %45, i64* %7, align 4
  store i32 %46, i32* %9, align 4
  br label %47

47:                                               ; preds = %14, %43
  %48 = phi i32 [ %16, %14 ], [ %44, %43 ]
  %49 = phi i64 [ %15, %14 ], [ %45, %43 ]
  %50 = trunc i64 %49 to i32
  %51 = add i32 %50, -19
  %52 = icmp ult i32 %51, 10
  br i1 %52, label %53, label %82

53:                                               ; preds = %47
  %54 = sext i32 %51 to i64
  %55 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN4SkSL6Parser9modifiersEv, i64 0, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = or i32 %56, %11
  %58 = icmp eq i32 %48, 87
  br i1 %58, label %60, label %59

59:                                               ; preds = %53
  store i32 87, i32* %5, align 4
  br label %64

60:                                               ; preds = %53
  %61 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %8) #15
  %62 = extractvalue { i64, i32 } %61, 0
  %63 = trunc i64 %62 to i32
  br label %64

64:                                               ; preds = %60, %59
  %65 = phi i32 [ %63, %60 ], [ %50, %59 ]
  %66 = add i32 %65, -83
  %67 = icmp ult i32 %66, 3
  br i1 %67, label %69, label %68

68:                                               ; preds = %77, %64
  br label %10

69:                                               ; preds = %64, %77
  %70 = load i32, i32* %5, align 4
  %71 = icmp eq i32 %70, 87
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %7, align 4
  store i32 87, i32* %5, align 4
  br label %77

74:                                               ; preds = %69
  %75 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %8) #15
  %76 = extractvalue { i64, i32 } %75, 0
  br label %77

77:                                               ; preds = %74, %72
  %78 = phi i64 [ %73, %72 ], [ %76, %74 ]
  %79 = trunc i64 %78 to i32
  %80 = add i32 %79, -83
  %81 = icmp ult i32 %80, 3
  br i1 %81, label %69, label %68

82:                                               ; preds = %47
  %83 = bitcast %"struct.SkSL::Modifiers"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* nonnull align 8 %4, i64 72, i1 false) #15
  %84 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 1
  store i32 %11, i32* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser14interfaceBlockENS_9ModifiersE(%"class.SkSL::Parser"*, %"struct.SkSL::Modifiers"* nocapture readonly byval(%"struct.SkSL::Modifiers") align 8) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.45"*, align 8
  %4 = alloca %"struct.SkSL::Token", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"struct.SkSL::Modifiers", align 8
  %10 = alloca [7 x i8], align 1
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = bitcast %"struct.SkSL::Token"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 2
  store i32 87, i32* %16, align 8
  store i32 -1, i32* %17, align 4
  store i32 -1, i32* %18, align 8
  %19 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %4)
  br i1 %19, label %20, label %506

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 87
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %26 = bitcast %"struct.SkSL::Token"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  br label %63

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %30 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %29) #15
  %31 = extractvalue { i64, i32 } %30, 0
  %32 = trunc i64 %31 to i32
  %33 = add i32 %32, -83
  %34 = icmp ult i32 %33, 3
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = extractvalue { i64, i32 } %30, 1
  br label %57

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %39 = bitcast %"struct.SkSL::Token"* %38 to i64*
  %40 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %41

41:                                               ; preds = %51, %37
  %42 = load i32, i32* %21, align 4
  %43 = icmp eq i32 %42, 87
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = load i64, i64* %39, align 4
  %46 = load i32, i32* %40, align 4
  store i32 87, i32* %21, align 4
  br label %51

47:                                               ; preds = %41
  %48 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %29) #15
  %49 = extractvalue { i64, i32 } %48, 0
  %50 = extractvalue { i64, i32 } %48, 1
  br label %51

51:                                               ; preds = %47, %44
  %52 = phi i32 [ %46, %44 ], [ %50, %47 ]
  %53 = phi i64 [ %45, %44 ], [ %49, %47 ]
  %54 = trunc i64 %53 to i32
  %55 = add i32 %54, -83
  %56 = icmp ult i32 %55, 3
  br i1 %56, label %41, label %57

57:                                               ; preds = %51, %35
  %58 = phi i64 [ %31, %35 ], [ %53, %51 ]
  %59 = phi i32 [ %36, %35 ], [ %52, %51 ]
  %60 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %61 = bitcast %"struct.SkSL::Token"* %60 to i64*
  store i64 %58, i64* %61, align 4
  %62 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %59, i32* %62, align 4
  br label %63

63:                                               ; preds = %24, %57
  %64 = phi i64 [ %27, %24 ], [ %58, %57 ]
  %65 = trunc i64 %64 to i32
  %66 = icmp eq i32 %65, 38
  br i1 %66, label %125, label %67

67:                                               ; preds = %63
  %68 = bitcast %"struct.SkSL::Token"* %4 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #15
  %71 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #15
  %72 = load i32, i32* %18, align 8
  %73 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = ashr i64 %69, 32
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = sext i32 %72 to i64
  %78 = icmp ugt i32 %72, -17
  br i1 %78, label %79, label %81

79:                                               ; preds = %67
  %80 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %80) #16
  unreachable

81:                                               ; preds = %67
  %82 = icmp ult i32 %72, 23
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = add nuw nsw i64 %77, 16
  %85 = and i64 %84, -16
  %86 = call i8* @_Znwm(i64 %85) #14
  %87 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %86, i8** %87, align 8
  %88 = or i64 %85, -9223372036854775808
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %77, i64* %90, align 8
  br label %96

91:                                               ; preds = %81
  %92 = trunc i32 %72 to i8
  %93 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  store i8 %92, i8* %94, align 1
  %95 = icmp eq i32 %72, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %91, %83
  %97 = phi i8* [ %86, %83 ], [ %71, %91 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %97, i8* align 1 %76, i64 %77, i1 false) #15
  br label %98

98:                                               ; preds = %91, %96
  %99 = phi i8* [ %71, %91 ], [ %97, %96 ]
  %100 = getelementptr inbounds i8, i8* %99, i64 %77
  store i8 0, i8* %100, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %69, i32 undef, %"class.SkSL::String"* nonnull %5)
  %101 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #14
  br label %108

108:                                              ; preds = %98, %105
  %109 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %115) #14
  br label %116

116:                                              ; preds = %108, %113
  %117 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #14
  br label %124

124:                                              ; preds = %116, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #15
  br label %506

125:                                              ; preds = %63
  %126 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126) #15
  store i32 20, i32* %8, align 4
  %127 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %128 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %127, align 8
  %129 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %128, i64 0, i32 0
  %130 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %128, i64 0, i32 0, i32 0, i32 1
  %131 = bitcast %"struct.SkSL::ASTNode"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"struct.SkSL::ASTFile"* %128 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %132, %134
  %136 = sdiv exact i64 %135, 160
  %137 = trunc i64 %136 to i32
  %138 = bitcast %"class.std::__1::vector.45"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #15
  store %"class.std::__1::vector.45"* %129, %"class.std::__1::vector.45"** %3, align 8
  %139 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %129, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %3, i32* dereferenceable(4) %17, i32* nonnull dereferenceable(4) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126) #15
  %140 = bitcast %"struct.SkSL::Modifiers"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %140)
  %141 = getelementptr inbounds [7 x i8], [7 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %141)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %141, i8 -86, i64 7, i1 false)
  %142 = bitcast %"struct.SkSL::Modifiers"* %1 to i8*
  %143 = bitcast %"struct.SkSL::Token"* %4 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = load i32, i32* %18, align 8
  %146 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = ashr i64 %144, 32
  %149 = getelementptr inbounds i8, i8* %147, i64 %148
  %150 = sext i32 %145 to i64
  %151 = bitcast %"struct.SkSL::Modifiers"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %151, i8* nonnull align 8 %142, i64 80, i1 false)
  %152 = load i32, i32* %21, align 4
  %153 = icmp eq i32 %152, 87
  br i1 %153, label %158, label %154

154:                                              ; preds = %125
  %155 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %156 = bitcast %"struct.SkSL::Token"* %155 to i64*
  %157 = load i64, i64* %156, align 4
  store i32 87, i32* %21, align 4
  br label %162

158:                                              ; preds = %125
  %159 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %160 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %159) #15
  %161 = extractvalue { i64, i32 } %160, 0
  br label %162

162:                                              ; preds = %158, %154
  %163 = phi i64 [ %157, %154 ], [ %161, %158 ]
  %164 = trunc i64 %163 to i32
  %165 = add i32 %164, -83
  %166 = icmp ult i32 %165, 3
  br i1 %166, label %167, label %184

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %169 = bitcast %"struct.SkSL::Token"* %168 to i64*
  %170 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %171

171:                                              ; preds = %179, %167
  %172 = load i32, i32* %21, align 4
  %173 = icmp eq i32 %172, 87
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = load i64, i64* %169, align 4
  store i32 87, i32* %21, align 4
  br label %179

176:                                              ; preds = %171
  %177 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %170) #15
  %178 = extractvalue { i64, i32 } %177, 0
  br label %179

179:                                              ; preds = %176, %174
  %180 = phi i64 [ %175, %174 ], [ %178, %176 ]
  %181 = trunc i64 %180 to i32
  %182 = add i32 %181, -83
  %183 = icmp ult i32 %182, 3
  br i1 %183, label %171, label %184

184:                                              ; preds = %179, %162
  %185 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %186 = bitcast %"struct.SkSL::Token"* %185 to i64*
  %187 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %188 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %189 = shl i64 %136, 32
  %190 = ashr exact i64 %189, 32
  br label %191

191:                                              ; preds = %252, %184
  %192 = phi i64 [ 0, %184 ], [ %254, %252 ]
  %193 = load i32, i32* %21, align 4
  %194 = icmp eq i32 %193, 87
  br i1 %194, label %198, label %195

195:                                              ; preds = %191
  %196 = load i64, i64* %186, align 4
  %197 = trunc i64 %196 to i32
  br label %228

198:                                              ; preds = %191
  %199 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %200 = extractvalue { i64, i32 } %199, 0
  %201 = trunc i64 %200 to i32
  %202 = add i32 %201, -83
  %203 = icmp ult i32 %202, 3
  br i1 %203, label %206, label %204

204:                                              ; preds = %198
  %205 = extractvalue { i64, i32 } %199, 1
  br label %224

206:                                              ; preds = %198, %216
  %207 = load i32, i32* %21, align 4
  %208 = icmp eq i32 %207, 87
  br i1 %208, label %212, label %209

209:                                              ; preds = %206
  %210 = load i64, i64* %186, align 4
  %211 = load i32, i32* %188, align 4
  store i32 87, i32* %21, align 4
  br label %216

212:                                              ; preds = %206
  %213 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %214 = extractvalue { i64, i32 } %213, 0
  %215 = extractvalue { i64, i32 } %213, 1
  br label %216

216:                                              ; preds = %212, %209
  %217 = phi i32 [ %211, %209 ], [ %215, %212 ]
  %218 = phi i64 [ %210, %209 ], [ %214, %212 ]
  %219 = trunc i64 %218 to i32
  %220 = add i32 %219, -83
  %221 = icmp ult i32 %220, 3
  br i1 %221, label %206, label %222

222:                                              ; preds = %216
  %223 = trunc i64 %218 to i32
  br label %224

224:                                              ; preds = %222, %204
  %225 = phi i32 [ %201, %204 ], [ %223, %222 ]
  %226 = phi i64 [ %200, %204 ], [ %218, %222 ]
  %227 = phi i32 [ %205, %204 ], [ %217, %222 ]
  store i64 %226, i64* %186, align 4
  store i32 %227, i32* %188, align 4
  br label %228

228:                                              ; preds = %195, %224
  %229 = phi i32 [ %197, %195 ], [ %225, %224 ]
  %230 = phi i64 [ %196, %195 ], [ %226, %224 ]
  %231 = trunc i64 %230 to i32
  %232 = icmp eq i32 %231, 39
  br i1 %232, label %255, label %233

233:                                              ; preds = %228
  %234 = call i32 @_ZN4SkSL6Parser15varDeclarationsEv(%"class.SkSL::Parser"* %0)
  %235 = icmp sgt i32 %234, -1
  br i1 %235, label %236, label %504

236:                                              ; preds = %233
  %237 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %127, align 8
  %238 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %238, align 8
  %240 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %239, i64 %190, i32 5, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp sgt i32 %241, -1
  br i1 %242, label %243, label %250

243:                                              ; preds = %236
  %244 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %239, i64 %190, i32 0
  %245 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %244, align 8
  %246 = sext i32 %241 to i64
  %247 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %245, i64 0, i32 0, i32 0
  %248 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %247, align 8
  %249 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %248, i64 %246, i32 6, i32 0
  br label %252

250:                                              ; preds = %236
  %251 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %239, i64 %190, i32 4, i32 0
  br label %252

252:                                              ; preds = %243, %250
  %253 = phi i32* [ %249, %243 ], [ %251, %250 ]
  store i32 %234, i32* %253, align 4
  store i32 %234, i32* %240, align 8
  %254 = add i64 %192, 1
  br label %191

255:                                              ; preds = %228
  %256 = icmp eq i64 %192, 0
  br i1 %256, label %257, label %313

257:                                              ; preds = %255
  %258 = load i64, i64* %143, align 8
  %259 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #15
  %260 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %260) #15
  %261 = load i32, i32* %18, align 8
  %262 = load i8*, i8** %146, align 8
  %263 = ashr i64 %258, 32
  %264 = getelementptr inbounds i8, i8* %262, i64 %263
  %265 = sext i32 %261 to i64
  %266 = icmp ugt i32 %261, -17
  br i1 %266, label %267, label %269

267:                                              ; preds = %257
  %268 = bitcast %"class.SkSL::String"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %268) #16
  unreachable

269:                                              ; preds = %257
  %270 = icmp ult i32 %261, 23
  br i1 %270, label %279, label %271

271:                                              ; preds = %269
  %272 = add nuw nsw i64 %265, 16
  %273 = and i64 %272, -16
  %274 = call i8* @_Znwm(i64 %273) #14
  %275 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %274, i8** %275, align 8
  %276 = or i64 %273, -9223372036854775808
  %277 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %265, i64* %278, align 8
  br label %284

279:                                              ; preds = %269
  %280 = trunc i32 %261 to i8
  %281 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  store i8 %280, i8* %282, align 1
  %283 = icmp eq i32 %261, 0
  br i1 %283, label %286, label %284

284:                                              ; preds = %279, %271
  %285 = phi i8* [ %274, %271 ], [ %260, %279 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %285, i8* align 1 %264, i64 %265, i1 false) #15
  br label %286

286:                                              ; preds = %279, %284
  %287 = phi i8* [ %260, %279 ], [ %285, %284 ]
  %288 = getelementptr inbounds i8, i8* %287, i64 %265
  store i8 0, i8* %288, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %13) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.72, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %258, i32 undef, %"class.SkSL::String"* nonnull %11)
  %289 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %289, i64 0, i32 1, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %286
  %294 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  call void @_ZdlPv(i8* %295) #14
  br label %296

296:                                              ; preds = %286, %293
  %297 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  %299 = load i8, i8* %298, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %303) #14
  br label %304

304:                                              ; preds = %296, %301
  %305 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %306 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %305, i64 0, i32 1, i32 0
  %307 = load i8, i8* %306, align 1
  %308 = icmp slt i8 %307, 0
  br i1 %308, label %309, label %312

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load i8*, i8** %310, align 8
  call void @_ZdlPv(i8* %311) #14
  br label %312

312:                                              ; preds = %304, %309
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %260) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #15
  br label %504

313:                                              ; preds = %255
  %314 = icmp eq i32 %229, 87
  br i1 %314, label %316, label %315

315:                                              ; preds = %313
  store i32 87, i32* %21, align 4
  br label %340

316:                                              ; preds = %313
  %317 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %318 = extractvalue { i64, i32 } %317, 0
  %319 = trunc i64 %318 to i32
  %320 = add i32 %319, -83
  %321 = icmp ult i32 %320, 3
  br i1 %321, label %322, label %335

322:                                              ; preds = %316, %330
  %323 = load i32, i32* %21, align 4
  %324 = icmp eq i32 %323, 87
  br i1 %324, label %327, label %325

325:                                              ; preds = %322
  %326 = load i64, i64* %186, align 4
  store i32 87, i32* %21, align 4
  br label %330

327:                                              ; preds = %322
  %328 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %329 = extractvalue { i64, i32 } %328, 0
  br label %330

330:                                              ; preds = %327, %325
  %331 = phi i64 [ %326, %325 ], [ %329, %327 ]
  %332 = trunc i64 %331 to i32
  %333 = add i32 %332, -83
  %334 = icmp ult i32 %333, 3
  br i1 %334, label %322, label %335

335:                                              ; preds = %330, %316
  %336 = load i32, i32* %21, align 4
  switch i32 %336, label %483 [
    i32 87, label %340
    i32 33, label %337
  ]

337:                                              ; preds = %335
  %338 = load i64, i64* %186, align 4
  %339 = load i32, i32* %188, align 4
  store i32 87, i32* %21, align 4
  br label %344

340:                                              ; preds = %315, %335
  %341 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %342 = extractvalue { i64, i32 } %341, 0
  %343 = extractvalue { i64, i32 } %341, 1
  br label %344

344:                                              ; preds = %340, %337
  %345 = phi i32 [ %339, %337 ], [ %343, %340 ]
  %346 = phi i64 [ %338, %337 ], [ %342, %340 ]
  %347 = trunc i64 %346 to i32
  %348 = add i32 %347, -83
  %349 = icmp ult i32 %348, 3
  br i1 %349, label %350, label %366

350:                                              ; preds = %344, %360
  %351 = load i32, i32* %21, align 4
  %352 = icmp eq i32 %351, 87
  br i1 %352, label %356, label %353

353:                                              ; preds = %350
  %354 = load i64, i64* %186, align 4
  %355 = load i32, i32* %188, align 4
  store i32 87, i32* %21, align 4
  br label %360

356:                                              ; preds = %350
  %357 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %358 = extractvalue { i64, i32 } %357, 0
  %359 = extractvalue { i64, i32 } %357, 1
  br label %360

360:                                              ; preds = %356, %353
  %361 = phi i32 [ %355, %353 ], [ %359, %356 ]
  %362 = phi i64 [ %354, %353 ], [ %358, %356 ]
  %363 = trunc i64 %362 to i32
  %364 = add i32 %363, -83
  %365 = icmp ult i32 %364, 3
  br i1 %365, label %350, label %366

366:                                              ; preds = %360, %344
  %367 = phi i64 [ %346, %344 ], [ %362, %360 ]
  %368 = phi i32 [ %345, %344 ], [ %361, %360 ]
  %369 = trunc i64 %367 to i32
  %370 = icmp eq i32 %369, 33
  br i1 %370, label %372, label %371

371:                                              ; preds = %366
  store i64 %367, i64* %186, align 4
  store i32 %368, i32* %188, align 4
  br label %483

372:                                              ; preds = %366
  %373 = load i8*, i8** %146, align 8
  %374 = ashr i64 %367, 32
  %375 = getelementptr inbounds i8, i8* %373, i64 %374
  %376 = sext i32 %368 to i64
  br label %377

377:                                              ; preds = %481, %372
  %378 = phi i8 [ 0, %372 ], [ 1, %481 ]
  %379 = load i32, i32* %21, align 4
  switch i32 %379, label %483 [
    i32 87, label %383
    i32 40, label %380
  ]

380:                                              ; preds = %377
  %381 = load i64, i64* %186, align 4
  %382 = load i32, i32* %188, align 4
  store i32 87, i32* %21, align 4
  br label %387

383:                                              ; preds = %377
  %384 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %385 = extractvalue { i64, i32 } %384, 0
  %386 = extractvalue { i64, i32 } %384, 1
  br label %387

387:                                              ; preds = %383, %380
  %388 = phi i32 [ %382, %380 ], [ %386, %383 ]
  %389 = phi i64 [ %381, %380 ], [ %385, %383 ]
  %390 = trunc i64 %389 to i32
  %391 = add i32 %390, -83
  %392 = icmp ult i32 %391, 3
  br i1 %392, label %393, label %409

393:                                              ; preds = %387, %403
  %394 = load i32, i32* %21, align 4
  %395 = icmp eq i32 %394, 87
  br i1 %395, label %399, label %396

396:                                              ; preds = %393
  %397 = load i64, i64* %186, align 4
  %398 = load i32, i32* %188, align 4
  store i32 87, i32* %21, align 4
  br label %403

399:                                              ; preds = %393
  %400 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %401 = extractvalue { i64, i32 } %400, 0
  %402 = extractvalue { i64, i32 } %400, 1
  br label %403

403:                                              ; preds = %399, %396
  %404 = phi i32 [ %398, %396 ], [ %402, %399 ]
  %405 = phi i64 [ %397, %396 ], [ %401, %399 ]
  %406 = trunc i64 %405 to i32
  %407 = add i32 %406, -83
  %408 = icmp ult i32 %407, 3
  br i1 %408, label %393, label %409

409:                                              ; preds = %403, %387
  %410 = phi i64 [ %389, %387 ], [ %405, %403 ]
  %411 = phi i32 [ %388, %387 ], [ %404, %403 ]
  %412 = trunc i64 %410 to i32
  %413 = icmp eq i32 %412, 40
  br i1 %413, label %415, label %414

414:                                              ; preds = %409
  store i64 %410, i64* %186, align 4
  store i32 %411, i32* %188, align 4
  br label %483

415:                                              ; preds = %409
  %416 = icmp eq i8 %378, 0
  %417 = load i32, i32* %21, align 4
  %418 = icmp eq i32 %417, 87
  br i1 %418, label %421, label %419

419:                                              ; preds = %415
  %420 = load i64, i64* %186, align 4
  br label %448

421:                                              ; preds = %415
  %422 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %423 = extractvalue { i64, i32 } %422, 0
  %424 = trunc i64 %423 to i32
  %425 = add i32 %424, -83
  %426 = icmp ult i32 %425, 3
  br i1 %426, label %429, label %427

427:                                              ; preds = %421
  %428 = extractvalue { i64, i32 } %422, 1
  br label %445

429:                                              ; preds = %421, %439
  %430 = load i32, i32* %21, align 4
  %431 = icmp eq i32 %430, 87
  br i1 %431, label %435, label %432

432:                                              ; preds = %429
  %433 = load i64, i64* %186, align 4
  %434 = load i32, i32* %188, align 4
  store i32 87, i32* %21, align 4
  br label %439

435:                                              ; preds = %429
  %436 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %437 = extractvalue { i64, i32 } %436, 0
  %438 = extractvalue { i64, i32 } %436, 1
  br label %439

439:                                              ; preds = %435, %432
  %440 = phi i32 [ %434, %432 ], [ %438, %435 ]
  %441 = phi i64 [ %433, %432 ], [ %437, %435 ]
  %442 = trunc i64 %441 to i32
  %443 = add i32 %442, -83
  %444 = icmp ult i32 %443, 3
  br i1 %444, label %429, label %445

445:                                              ; preds = %439, %427
  %446 = phi i64 [ %423, %427 ], [ %441, %439 ]
  %447 = phi i32 [ %428, %427 ], [ %440, %439 ]
  store i64 %446, i64* %186, align 4
  store i32 %447, i32* %188, align 4
  br label %448

448:                                              ; preds = %419, %445
  %449 = phi i64 [ %420, %419 ], [ %446, %445 ]
  br i1 %416, label %456, label %450

450:                                              ; preds = %448
  %451 = call i8* @_Znwm(i64 48) #14
  %452 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %451, i8** %452, align 8
  %453 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %454 = bitcast i64* %453 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %454, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %451, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57, i64 0, i64 0), i64 42, i1 false) #15
  %455 = getelementptr inbounds i8, i8* %451, i64 42
  store i8 0, i8* %455, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %449, i32 undef, %"class.SkSL::String"* nonnull %14)
  call void @_ZdlPv(i8* nonnull %451) #14
  br label %504

456:                                              ; preds = %448
  %457 = trunc i64 %449 to i32
  %458 = icmp eq i32 %457, 41
  br i1 %458, label %480, label %459

459:                                              ; preds = %456
  %460 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %461 = icmp sgt i32 %460, -1
  br i1 %461, label %462, label %504

462:                                              ; preds = %459
  %463 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %127, align 8
  %464 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %463, i64 0, i32 0, i32 0, i32 0
  %465 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %464, align 8
  %466 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %465, i64 %190, i32 5, i32 0
  %467 = load i32, i32* %466, align 4
  %468 = icmp sgt i32 %467, -1
  br i1 %468, label %469, label %476

469:                                              ; preds = %462
  %470 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %465, i64 %190, i32 0
  %471 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %470, align 8
  %472 = sext i32 %467 to i64
  %473 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %471, i64 0, i32 0, i32 0
  %474 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %473, align 8
  %475 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %474, i64 %472, i32 6, i32 0
  br label %478

476:                                              ; preds = %462
  %477 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %465, i64 %190, i32 4, i32 0
  br label %478

478:                                              ; preds = %469, %476
  %479 = phi i32* [ %475, %469 ], [ %477, %476 ]
  store i32 %460, i32* %479, align 4
  store i32 %460, i32* %466, align 8
  br label %481

480:                                              ; preds = %456
  call void @_ZN4SkSL6Parser16createEmptyChildENS_7ASTNode2IDE(%"class.SkSL::Parser"* %0, i32 %137)
  br label %481

481:                                              ; preds = %478, %480
  %482 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br label %377

483:                                              ; preds = %377, %414, %335, %371
  %484 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %335 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %371 ], [ %375, %414 ], [ %375, %377 ]
  %485 = phi i64 [ 0, %335 ], [ 0, %371 ], [ %376, %414 ], [ %376, %377 ]
  %486 = phi i8 [ 0, %335 ], [ 0, %371 ], [ %378, %414 ], [ %378, %377 ]
  %487 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %127, align 8
  %488 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %487, i64 0, i32 0, i32 0, i32 0
  %489 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %488, align 8
  %490 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %489, i64 %190, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %490, i8* nonnull align 8 %140, i64 80, i1 false)
  %491 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %489, i64 %190, i32 1, i32 0, i64 80
  %492 = bitcast i8* %491 to i8**
  store i8* %149, i8** %492, align 8
  %493 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %489, i64 %190, i32 1, i32 0, i64 88
  %494 = bitcast i8* %493 to i64*
  store i64 %150, i64* %494, align 8
  %495 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %489, i64 %190, i32 1, i32 0, i64 96
  %496 = bitcast i8* %495 to i64*
  store i64 %192, i64* %496, align 8
  %497 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %489, i64 %190, i32 1, i32 0, i64 104
  %498 = bitcast i8* %497 to i8**
  store i8* %484, i8** %498, align 8
  %499 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %489, i64 %190, i32 1, i32 0, i64 112
  %500 = bitcast i8* %499 to i64*
  store i64 %485, i64* %500, align 8
  %501 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %489, i64 %190, i32 1, i32 0, i64 120
  store i8 %486, i8* %501, align 8
  %502 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %489, i64 %190, i32 1, i32 0, i64 121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %502, i8* nonnull align 1 %141, i64 7, i1 false)
  %503 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br label %504

504:                                              ; preds = %233, %459, %450, %483, %312
  %505 = phi i32 [ -1, %312 ], [ %137, %483 ], [ 0, %450 ], [ -1, %459 ], [ -1, %233 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %140)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %141)
  br label %506

506:                                              ; preds = %2, %504, %124
  %507 = phi i32 [ %505, %504 ], [ -1, %124 ], [ -1, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #15
  ret i32 %507
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser20structVarDeclarationENS_9ModifiersE(%"class.SkSL::Parser"*, %"struct.SkSL::Modifiers"* nocapture readonly byval(%"struct.SkSL::Modifiers") align 8) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN4SkSL6Parser17structDeclarationEv(%"class.SkSL::Parser"* %0)
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %64

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %62 [
    i32 87, label %14
    i32 33, label %8
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %10 = bitcast %"struct.SkSL::Token"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %13 = load i32, i32* %12, align 4
  store i32 87, i32* %6, align 4
  br label %19

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %16 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %17 = extractvalue { i64, i32 } %16, 0
  %18 = extractvalue { i64, i32 } %16, 1
  br label %19

19:                                               ; preds = %14, %8
  %20 = phi i32 [ %13, %8 ], [ %18, %14 ]
  %21 = phi i64 [ %11, %8 ], [ %17, %14 ]
  %22 = trunc i64 %21 to i32
  %23 = add i32 %22, -83
  %24 = icmp ult i32 %23, 3
  br i1 %24, label %25, label %46

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %27 = bitcast %"struct.SkSL::Token"* %26 to i64*
  %28 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %30

30:                                               ; preds = %40, %25
  %31 = load i32, i32* %6, align 4
  %32 = icmp eq i32 %31, 87
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load i64, i64* %27, align 4
  %35 = load i32, i32* %28, align 4
  store i32 87, i32* %6, align 4
  br label %40

36:                                               ; preds = %30
  %37 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %29) #15
  %38 = extractvalue { i64, i32 } %37, 0
  %39 = extractvalue { i64, i32 } %37, 1
  br label %40

40:                                               ; preds = %36, %33
  %41 = phi i32 [ %35, %33 ], [ %39, %36 ]
  %42 = phi i64 [ %34, %33 ], [ %38, %36 ]
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, -83
  %45 = icmp ult i32 %44, 3
  br i1 %45, label %30, label %46

46:                                               ; preds = %40, %19
  %47 = phi i64 [ %21, %19 ], [ %42, %40 ]
  %48 = phi i32 [ %20, %19 ], [ %41, %40 ]
  %49 = trunc i64 %47 to i32
  %50 = icmp eq i32 %49, 33
  br i1 %50, label %55, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %53 = bitcast %"struct.SkSL::Token"* %52 to i64*
  store i64 %47, i64* %53, align 4
  %54 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %48, i32* %54, align 4
  br label %62

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = ashr i64 %47, 32
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = sext i32 %48 to i64
  %61 = tail call i32 @_ZN4SkSL6Parser17varDeclarationEndENS_9ModifiersENS_7ASTNode2IDENS_14StringFragmentE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Modifiers"* nonnull byval(%"struct.SkSL::Modifiers") align 8 %1, i32 %3, i8* %59, i64 %60)
  br label %64

62:                                               ; preds = %5, %51
  %63 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br label %64

64:                                               ; preds = %55, %62, %2
  %65 = phi i32 [ -1, %2 ], [ %61, %55 ], [ %3, %62 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERNS_9ModifiersEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"*, i32* dereferenceable(4), i32* dereferenceable(4), %"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.SkSL::Modifiers", align 8
  %6 = alloca %"struct.SkSL::Modifiers", align 8
  %7 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.SkSL::ASTNode"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.SkSL::ASTFile"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 160
  %16 = trunc i64 %15 to i32
  %17 = ptrtoint %"struct.SkSL::ASTFile"* %8 to i64
  %18 = inttoptr i64 %11 to %"struct.SkSL::ASTNode"*
  %19 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %19, align 8
  %21 = icmp ugt %"struct.SkSL::ASTNode"* %20, %18
  %22 = ptrtoint %"struct.SkSL::ASTNode"* %20 to i64
  br i1 %21, label %23, label %38

23:                                               ; preds = %4
  %24 = load i32, i32* %1, align 4
  %25 = load i32, i32* %2, align 4
  %26 = bitcast %"struct.SkSL::Modifiers"* %3 to i8*
  %27 = bitcast %"struct.SkSL::Modifiers"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %27)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %26, i64 80, i1 false) #15
  %28 = inttoptr i64 %11 to i64*
  store i64 %17, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 1, i32 1
  store i32 5, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* nonnull align 8 %27, i64 80, i1 false) #15
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 2
  store i32 %24, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 3
  store i32 %25, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 4, i32 0
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 5, i32 0
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 0, i32 6, i32 0
  store i32 -1, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %27)
  %36 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %18, i64 1
  %37 = ptrtoint %"struct.SkSL::ASTNode"* %36 to i64
  store i64 %37, i64* %10, align 8
  br label %96

38:                                               ; preds = %4
  %39 = add nsw i64 %15, 1
  %40 = icmp ugt i64 %39, 115292150460684697
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = bitcast %"struct.SkSL::ASTFile"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #16
  unreachable

43:                                               ; preds = %38
  %44 = bitcast %"struct.SkSL::ASTNode"** %19 to i64*
  %45 = sub i64 %22, %13
  %46 = sdiv exact i64 %45, 160
  %47 = icmp ult i64 %46, 57646075230342348
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = shl nsw i64 %46, 1
  %50 = icmp ult i64 %49, %39
  %51 = select i1 %50, i64 %39, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48, %43
  %54 = phi i64 [ %51, %48 ], [ 115292150460684697, %43 ]
  %55 = mul i64 %54, 160
  %56 = tail call i8* @_Znwm(i64 %55) #14
  %57 = bitcast i8* %56 to %"struct.SkSL::ASTNode"*
  br label %58

58:                                               ; preds = %53, %48
  %59 = phi i64 [ %54, %53 ], [ 0, %48 ]
  %60 = phi %"struct.SkSL::ASTNode"* [ %57, %53 ], [ null, %48 ]
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15
  %62 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %59
  %63 = ptrtoint %"struct.SkSL::ASTNode"* %62 to i64
  %64 = load i32, i32* %1, align 4
  %65 = load i32, i32* %2, align 4
  %66 = bitcast %"struct.SkSL::Modifiers"* %3 to i8*
  %67 = bitcast %"struct.SkSL::Modifiers"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %67)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %66, i64 80, i1 false) #15
  %68 = bitcast %"struct.SkSL::ASTNode"* %61 to i64*
  store i64 %17, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 1, i32 1
  store i32 5, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* nonnull align 8 %67, i64 80, i1 false) #15
  %71 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 2
  store i32 %64, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 3
  store i32 %65, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 4, i32 0
  store i32 -1, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 5, i32 0
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %15, i32 6, i32 0
  store i32 -1, i32* %75, align 4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %67)
  %76 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %61, i64 1
  %77 = ptrtoint %"struct.SkSL::ASTNode"* %76 to i64
  %78 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %8, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  %80 = load i64, i64* %10, align 8
  %81 = ptrtoint %"struct.SkSL::ASTNode"* %79 to i64
  %82 = sub i64 %80, %81
  %83 = sdiv exact i64 %82, -160
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %61, i64 %83
  %85 = ptrtoint %"struct.SkSL::ASTNode"* %84 to i64
  %86 = icmp sgt i64 %82, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %58
  %88 = bitcast %"struct.SkSL::ASTNode"* %84 to i8*
  %89 = bitcast %"struct.SkSL::ASTNode"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 %82, i1 false) #15
  %90 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  br label %91

91:                                               ; preds = %87, %58
  %92 = phi %"struct.SkSL::ASTNode"* [ %79, %58 ], [ %90, %87 ]
  store i64 %85, i64* %12, align 8
  store i64 %77, i64* %10, align 8
  store i64 %63, i64* %44, align 8
  %93 = icmp eq %"struct.SkSL::ASTNode"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = bitcast %"struct.SkSL::ASTNode"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %94, %91, %23
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser4typeEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Token", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.SkSL::Token", align 8
  %10 = alloca i32, align 4
  %11 = bitcast %"struct.SkSL::Token"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 2
  store i32 87, i32* %12, align 8
  store i32 -1, i32* %13, align 4
  store i32 -1, i32* %14, align 8
  %15 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %2)
  br i1 %15, label %16, label %377

16:                                               ; preds = %1
  %17 = bitcast %"struct.SkSL::Token"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = load i32, i32* %14, align 8
  %20 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = ashr i64 %18, 32
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = sext i32 %19 to i64
  %25 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 4
  %26 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %25, align 8
  %27 = call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %26, i8* %23, i64 %24) #15
  %28 = icmp eq %"class.SkSL::Symbol"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %27, i64 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 13
  br i1 %32, label %129, label %33

33:                                               ; preds = %16, %29
  %34 = load i64, i64* %17, align 8
  %35 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #15
  %36 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #15
  %37 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #15
  %38 = load i32, i32* %14, align 8
  %39 = load i8*, i8** %20, align 8
  %40 = ashr i64 %34, 32
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  %42 = sext i32 %38 to i64
  %43 = icmp ugt i32 %38, -17
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %45) #16
  unreachable

46:                                               ; preds = %33
  %47 = icmp ult i32 %38, 23
  br i1 %47, label %56, label %48

48:                                               ; preds = %46
  %49 = add nuw nsw i64 %42, 16
  %50 = and i64 %49, -16
  %51 = call i8* @_Znwm(i64 %50) #14
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %51, i8** %52, align 8
  %53 = or i64 %50, -9223372036854775808
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %55, align 8
  br label %61

56:                                               ; preds = %46
  %57 = trunc i32 %38 to i8
  %58 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 %57, i8* %59, align 1
  %60 = icmp eq i32 %38, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %56, %48
  %62 = phi i8* [ %51, %48 ], [ %37, %56 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 %41, i64 %42, i1 false) #15
  br label %63

63:                                               ; preds = %56, %61
  %64 = phi i8* [ %37, %56 ], [ %62, %61 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 %42
  store i8 0, i8* %65, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #15
  %66 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = select i1 %69, i8* %71, i8* %35
  %73 = call i64 @strlen(i8* %72) #15
  %74 = icmp ugt i64 %73, -17
  br i1 %74, label %75, label %77

75:                                               ; preds = %63
  %76 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %76) #16
  unreachable

77:                                               ; preds = %63
  %78 = icmp ult i64 %73, 23
  br i1 %78, label %88, label %79

79:                                               ; preds = %77
  %80 = add nuw i64 %73, 16
  %81 = and i64 %80, -16
  %82 = call i8* @_Znwm(i64 %81) #14
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %82, i8** %83, align 8
  %84 = or i64 %81, -9223372036854775808
  %85 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %73, i64* %86, align 8
  %87 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %94

88:                                               ; preds = %77
  %89 = trunc i64 %73 to i8
  %90 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 %89, i8* %91, align 1
  %92 = bitcast %"class.SkSL::String"* %3 to i8*
  %93 = icmp eq i64 %73, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %88, %79
  %95 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %90, %88 ], [ %87, %79 ]
  %96 = phi i8* [ %92, %88 ], [ %82, %79 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %96, i8* align 1 %72, i64 %73, i1 false) #15
  br label %97

97:                                               ; preds = %88, %94
  %98 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %90, %88 ], [ %95, %94 ]
  %99 = phi i8* [ %92, %88 ], [ %96, %94 ]
  %100 = getelementptr inbounds i8, i8* %99, i64 %73
  store i8 0, i8* %100, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %34, i32 undef, %"class.SkSL::String"* nonnull %3)
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %97, %104
  %108 = load i8, i8* %67, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %107
  %111 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %111) #14
  br label %112

112:                                              ; preds = %107, %110
  %113 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %119) #14
  br label %120

120:                                              ; preds = %112, %117
  %121 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #14
  br label %128

128:                                              ; preds = %120, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #15
  br label %377

129:                                              ; preds = %29
  %130 = load i64, i64* %17, align 8
  %131 = load i32, i32* %14, align 8
  %132 = load i8*, i8** %20, align 8
  %133 = ashr i64 %130, 32
  %134 = getelementptr inbounds i8, i8* %132, i64 %133
  %135 = sext i32 %131 to i64
  %136 = ptrtoint i8* %134 to i64
  %137 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %138 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %137, align 8
  %139 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %138, i64 0, i32 0, i32 0, i32 1
  %140 = bitcast %"struct.SkSL::ASTNode"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"struct.SkSL::ASTFile"* %138 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %141, %143
  %145 = sdiv exact i64 %144, 160
  %146 = trunc i64 %145 to i32
  %147 = ptrtoint %"struct.SkSL::ASTFile"* %138 to i64
  %148 = inttoptr i64 %141 to %"struct.SkSL::ASTNode"*
  %149 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %138, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %150 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %149, align 8
  %151 = icmp ugt %"struct.SkSL::ASTNode"* %150, %148
  %152 = ptrtoint %"struct.SkSL::ASTNode"* %150 to i64
  br i1 %151, label %153, label %166

153:                                              ; preds = %129
  %154 = load i32, i32* %13, align 4
  %155 = inttoptr i64 %141 to i64*
  store i64 %147, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %148, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %148, i64 0, i32 1, i32 1
  store i32 1, i32* %157, align 4
  %158 = bitcast %"struct.SkSL::ASTNode::NodeData"* %156 to i64*
  store i64 %136, i64* %158, align 4
  %159 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %148, i64 0, i32 1, i32 0, i64 8
  %160 = bitcast i8* %159 to i64*
  store i64 %135, i64* %160, align 4
  %161 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %148, i64 0, i32 2
  store i32 %154, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %148, i64 0, i32 3
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 32, i32 -1, i32 -1, i32 -1>, <4 x i32>* %163, align 8
  %164 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %148, i64 1
  %165 = ptrtoint %"struct.SkSL::ASTNode"* %164 to i64
  store i64 %165, i64* %140, align 8
  br label %222

166:                                              ; preds = %129
  %167 = add nsw i64 %145, 1
  %168 = icmp ugt i64 %167, 115292150460684697
  br i1 %168, label %169, label %171

169:                                              ; preds = %166
  %170 = bitcast %"struct.SkSL::ASTFile"* %138 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %170) #16
  unreachable

171:                                              ; preds = %166
  %172 = bitcast %"struct.SkSL::ASTNode"** %149 to i64*
  %173 = sub i64 %152, %143
  %174 = sdiv exact i64 %173, 160
  %175 = icmp ult i64 %174, 57646075230342348
  br i1 %175, label %176, label %181

176:                                              ; preds = %171
  %177 = shl nsw i64 %174, 1
  %178 = icmp ult i64 %177, %167
  %179 = select i1 %178, i64 %167, i64 %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %186, label %181

181:                                              ; preds = %176, %171
  %182 = phi i64 [ %179, %176 ], [ 115292150460684697, %171 ]
  %183 = mul i64 %182, 160
  %184 = call i8* @_Znwm(i64 %183) #14
  %185 = bitcast i8* %184 to %"struct.SkSL::ASTNode"*
  br label %186

186:                                              ; preds = %181, %176
  %187 = phi i64 [ %182, %181 ], [ 0, %176 ]
  %188 = phi %"struct.SkSL::ASTNode"* [ %185, %181 ], [ null, %176 ]
  %189 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %188, i64 %145
  %190 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %188, i64 %187
  %191 = ptrtoint %"struct.SkSL::ASTNode"* %190 to i64
  %192 = load i32, i32* %13, align 4
  %193 = bitcast %"struct.SkSL::ASTNode"* %189 to i64*
  store i64 %147, i64* %193, align 8
  %194 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %188, i64 %145, i32 1
  %195 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %188, i64 %145, i32 1, i32 1
  store i32 1, i32* %195, align 4
  %196 = bitcast %"struct.SkSL::ASTNode::NodeData"* %194 to i64*
  store i64 %136, i64* %196, align 4
  %197 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %188, i64 %145, i32 1, i32 0, i64 8
  %198 = bitcast i8* %197 to i64*
  store i64 %135, i64* %198, align 4
  %199 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %188, i64 %145, i32 2
  store i32 %192, i32* %199, align 4
  %200 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %188, i64 %145, i32 3
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> <i32 32, i32 -1, i32 -1, i32 -1>, <4 x i32>* %201, align 8
  %202 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %189, i64 1
  %203 = ptrtoint %"struct.SkSL::ASTNode"* %202 to i64
  %204 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %138, i64 0, i32 0, i32 0, i32 0
  %205 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %204, align 8
  %206 = load i64, i64* %140, align 8
  %207 = ptrtoint %"struct.SkSL::ASTNode"* %205 to i64
  %208 = sub i64 %206, %207
  %209 = sdiv exact i64 %208, -160
  %210 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %189, i64 %209
  %211 = ptrtoint %"struct.SkSL::ASTNode"* %210 to i64
  %212 = icmp sgt i64 %208, 0
  br i1 %212, label %213, label %217

213:                                              ; preds = %186
  %214 = bitcast %"struct.SkSL::ASTNode"* %210 to i8*
  %215 = bitcast %"struct.SkSL::ASTNode"* %205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %214, i8* align 8 %215, i64 %208, i1 false) #15
  %216 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %204, align 8
  br label %217

217:                                              ; preds = %213, %186
  %218 = phi %"struct.SkSL::ASTNode"* [ %205, %186 ], [ %216, %213 ]
  store i64 %211, i64* %142, align 8
  store i64 %203, i64* %140, align 8
  store i64 %191, i64* %172, align 8
  %219 = icmp eq %"struct.SkSL::ASTNode"* %218, null
  br i1 %219, label %222, label %220

220:                                              ; preds = %217
  %221 = bitcast %"struct.SkSL::ASTNode"* %218 to i8*
  call void @_ZdlPv(i8* %221) #14
  br label %222

222:                                              ; preds = %220, %217, %153
  %223 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %224 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %225 = bitcast %"struct.SkSL::Token"* %224 to i64*
  %226 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %227 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %228 = bitcast i64* %8 to i8*
  %229 = bitcast %"struct.SkSL::Token"* %9 to i8*
  %230 = bitcast %"struct.SkSL::Token"* %9 to i64*
  %231 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %9, i64 0, i32 2
  %232 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %9, i64 0, i32 1
  %233 = bitcast i32* %10 to i8*
  %234 = shl i64 %145, 32
  %235 = ashr exact i64 %234, 32
  br label %236

236:                                              ; preds = %375, %222
  %237 = phi i1 [ false, %222 ], [ true, %375 ]
  %238 = load i32, i32* %223, align 4
  switch i32 %238, label %377 [
    i32 87, label %242
    i32 40, label %239
  ]

239:                                              ; preds = %236
  %240 = load i64, i64* %225, align 4
  %241 = load i32, i32* %226, align 4
  store i32 87, i32* %223, align 4
  br label %246

242:                                              ; preds = %236
  %243 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %227) #15
  %244 = extractvalue { i64, i32 } %243, 0
  %245 = extractvalue { i64, i32 } %243, 1
  br label %246

246:                                              ; preds = %242, %239
  %247 = phi i32 [ %241, %239 ], [ %245, %242 ]
  %248 = phi i64 [ %240, %239 ], [ %244, %242 ]
  %249 = trunc i64 %248 to i32
  %250 = add i32 %249, -83
  %251 = icmp ult i32 %250, 3
  br i1 %251, label %252, label %268

252:                                              ; preds = %246, %262
  %253 = load i32, i32* %223, align 4
  %254 = icmp eq i32 %253, 87
  br i1 %254, label %258, label %255

255:                                              ; preds = %252
  %256 = load i64, i64* %225, align 4
  %257 = load i32, i32* %226, align 4
  store i32 87, i32* %223, align 4
  br label %262

258:                                              ; preds = %252
  %259 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %227) #15
  %260 = extractvalue { i64, i32 } %259, 0
  %261 = extractvalue { i64, i32 } %259, 1
  br label %262

262:                                              ; preds = %258, %255
  %263 = phi i32 [ %257, %255 ], [ %261, %258 ]
  %264 = phi i64 [ %256, %255 ], [ %260, %258 ]
  %265 = trunc i64 %264 to i32
  %266 = add i32 %265, -83
  %267 = icmp ult i32 %266, 3
  br i1 %267, label %252, label %268

268:                                              ; preds = %262, %246
  %269 = phi i64 [ %248, %246 ], [ %264, %262 ]
  %270 = phi i32 [ %247, %246 ], [ %263, %262 ]
  %271 = trunc i64 %269 to i32
  %272 = icmp eq i32 %271, 40
  br i1 %272, label %274, label %273

273:                                              ; preds = %268
  store i64 %269, i64* %225, align 4
  store i32 %270, i32* %226, align 4
  br label %377

274:                                              ; preds = %268
  %275 = load i32, i32* %223, align 4
  %276 = icmp eq i32 %275, 87
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  %278 = load i64, i64* %225, align 4
  br label %306

279:                                              ; preds = %274
  %280 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %227) #15
  %281 = extractvalue { i64, i32 } %280, 0
  %282 = trunc i64 %281 to i32
  %283 = add i32 %282, -83
  %284 = icmp ult i32 %283, 3
  br i1 %284, label %287, label %285

285:                                              ; preds = %279
  %286 = extractvalue { i64, i32 } %280, 1
  br label %303

287:                                              ; preds = %279, %297
  %288 = load i32, i32* %223, align 4
  %289 = icmp eq i32 %288, 87
  br i1 %289, label %293, label %290

290:                                              ; preds = %287
  %291 = load i64, i64* %225, align 4
  %292 = load i32, i32* %226, align 4
  store i32 87, i32* %223, align 4
  br label %297

293:                                              ; preds = %287
  %294 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %227) #15
  %295 = extractvalue { i64, i32 } %294, 0
  %296 = extractvalue { i64, i32 } %294, 1
  br label %297

297:                                              ; preds = %293, %290
  %298 = phi i32 [ %292, %290 ], [ %296, %293 ]
  %299 = phi i64 [ %291, %290 ], [ %295, %293 ]
  %300 = trunc i64 %299 to i32
  %301 = add i32 %300, -83
  %302 = icmp ult i32 %301, 3
  br i1 %302, label %287, label %303

303:                                              ; preds = %297, %285
  %304 = phi i64 [ %281, %285 ], [ %299, %297 ]
  %305 = phi i32 [ %286, %285 ], [ %298, %297 ]
  store i64 %304, i64* %225, align 4
  store i32 %305, i32* %226, align 4
  br label %306

306:                                              ; preds = %277, %303
  %307 = phi i64 [ %278, %277 ], [ %304, %303 ]
  br i1 %237, label %308, label %314

308:                                              ; preds = %306
  %309 = call i8* @_Znwm(i64 48) #14
  %310 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %309, i8** %310, align 8
  %311 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %312 = bitcast i64* %311 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %312, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %309, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57, i64 0, i64 0), i64 42, i1 false) #15
  %313 = getelementptr inbounds i8, i8* %309, i64 42
  store i8 0, i8* %313, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %307, i32 undef, %"class.SkSL::String"* nonnull %7)
  call void @_ZdlPv(i8* nonnull %309) #14
  br label %377

314:                                              ; preds = %306
  %315 = trunc i64 %307 to i32
  %316 = icmp eq i32 %315, 41
  br i1 %316, label %374, label %317

317:                                              ; preds = %314
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #15
  store i64 -6148914691236517206, i64* %8, align 8
  %318 = call zeroext i1 @_ZN4SkSL6Parser10intLiteralEPl(%"class.SkSL::Parser"* %0, i64* nonnull %8)
  br i1 %318, label %319, label %373

319:                                              ; preds = %317
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %229) #15
  %320 = load i32, i32* %223, align 4
  %321 = icmp eq i32 %320, 87
  br i1 %321, label %325, label %322

322:                                              ; preds = %319
  %323 = load i64, i64* %225, align 4
  %324 = load i32, i32* %226, align 4
  br label %352

325:                                              ; preds = %319
  %326 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %227) #15
  %327 = extractvalue { i64, i32 } %326, 0
  %328 = trunc i64 %327 to i32
  %329 = add i32 %328, -83
  %330 = icmp ult i32 %329, 3
  br i1 %330, label %333, label %331

331:                                              ; preds = %325
  %332 = extractvalue { i64, i32 } %326, 1
  br label %349

333:                                              ; preds = %325, %343
  %334 = load i32, i32* %223, align 4
  %335 = icmp eq i32 %334, 87
  br i1 %335, label %339, label %336

336:                                              ; preds = %333
  %337 = load i64, i64* %225, align 4
  %338 = load i32, i32* %226, align 4
  store i32 87, i32* %223, align 4
  br label %343

339:                                              ; preds = %333
  %340 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %227) #15
  %341 = extractvalue { i64, i32 } %340, 0
  %342 = extractvalue { i64, i32 } %340, 1
  br label %343

343:                                              ; preds = %339, %336
  %344 = phi i32 [ %338, %336 ], [ %342, %339 ]
  %345 = phi i64 [ %337, %336 ], [ %341, %339 ]
  %346 = trunc i64 %345 to i32
  %347 = add i32 %346, -83
  %348 = icmp ult i32 %347, 3
  br i1 %348, label %333, label %349

349:                                              ; preds = %343, %331
  %350 = phi i64 [ %327, %331 ], [ %345, %343 ]
  %351 = phi i32 [ %332, %331 ], [ %344, %343 ]
  store i64 %350, i64* %225, align 4
  store i32 %351, i32* %226, align 4
  br label %352

352:                                              ; preds = %322, %349
  %353 = phi i32 [ %324, %322 ], [ %351, %349 ]
  %354 = phi i64 [ %323, %322 ], [ %350, %349 ]
  store i64 %354, i64* %230, align 8
  store i32 %353, i32* %231, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %233) #15
  store i32 19, i32* %10, align 4
  %355 = call i32 @_ZN4SkSL6Parser10createNodeIJiNS_7ASTNode4KindERlEEENS2_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %232, i32* nonnull dereferenceable(4) %10, i64* nonnull dereferenceable(8) %8)
  %356 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %137, align 8
  %357 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %356, i64 0, i32 0, i32 0, i32 0
  %358 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %357, align 8
  %359 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %358, i64 %235, i32 5, i32 0
  %360 = load i32, i32* %359, align 4
  %361 = icmp sgt i32 %360, -1
  br i1 %361, label %362, label %369

362:                                              ; preds = %352
  %363 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %358, i64 %235, i32 0
  %364 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %363, align 8
  %365 = sext i32 %360 to i64
  %366 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %364, i64 0, i32 0, i32 0
  %367 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %366, align 8
  %368 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %367, i64 %365, i32 6, i32 0
  br label %371

369:                                              ; preds = %352
  %370 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %358, i64 %235, i32 4, i32 0
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32* [ %370, %369 ], [ %368, %362 ]
  store i32 %355, i32* %372, align 4
  store i32 %355, i32* %359, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %233) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %229) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #15
  br label %375

373:                                              ; preds = %317
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #15
  br label %377

374:                                              ; preds = %314
  call void @_ZN4SkSL6Parser16createEmptyChildENS_7ASTNode2IDE(%"class.SkSL::Parser"* %0, i32 %146)
  br label %375

375:                                              ; preds = %371, %374
  %376 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br label %236

377:                                              ; preds = %236, %273, %373, %308, %1, %128
  %378 = phi i32 [ -1, %128 ], [ -1, %373 ], [ -1, %1 ], [ -1, %308 ], [ %146, %273 ], [ %146, %236 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #15
  ret i32 %378
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser22functionDeclarationEndENS_9ModifiersENS_7ASTNode2IDERKNS_5TokenE(%"class.SkSL::Parser"*, %"struct.SkSL::Modifiers"* nocapture readonly byval(%"struct.SkSL::Modifiers") align 8, i32, %"struct.SkSL::Token"* dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"struct.SkSL::Modifiers", align 8
  %7 = alloca %"struct.SkSL::StringFragment", align 8
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #15
  store i32 15, i32* %5, align 4
  %10 = call i32 @_ZN4SkSL6Parser10createNodeIJRKiNS_7ASTNode4KindEEEENS4_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %8, i32* nonnull dereferenceable(4) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #15
  %11 = bitcast %"struct.SkSL::Modifiers"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11)
  %12 = bitcast %"struct.SkSL::Modifiers"* %1 to i8*
  %13 = bitcast %"struct.SkSL::Token"* %3 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = ashr i64 %14, 32
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = sext i32 %16 to i64
  %22 = bitcast %"struct.SkSL::Modifiers"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %12, i64 80, i1 false)
  %23 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %23, align 8
  %25 = sext i32 %10 to i64
  %26 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %26, align 8
  %28 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %27, i64 %25, i32 5, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %31, label %38

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %27, i64 %25, i32 0
  %33 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %32, align 8
  %34 = sext i32 %29 to i64
  %35 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %33, i64 0, i32 0, i32 0
  %36 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %35, align 8
  %37 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %36, i64 %34, i32 6, i32 0
  br label %40

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %27, i64 %25, i32 4, i32 0
  br label %40

40:                                               ; preds = %31, %38
  %41 = phi i32* [ %37, %31 ], [ %39, %38 ]
  store i32 %2, i32* %41, align 4
  store i32 %2, i32* %28, align 8
  %42 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 87
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %47 = bitcast %"struct.SkSL::Token"* %46 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %50 = load i32, i32* %49, align 4
  br label %86

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %53 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %52) #15
  %54 = extractvalue { i64, i32 } %53, 0
  %55 = trunc i64 %54 to i32
  %56 = add i32 %55, -83
  %57 = icmp ult i32 %56, 3
  br i1 %57, label %60, label %58

58:                                               ; preds = %51
  %59 = extractvalue { i64, i32 } %53, 1
  br label %80

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %62 = bitcast %"struct.SkSL::Token"* %61 to i64*
  %63 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %64

64:                                               ; preds = %74, %60
  %65 = load i32, i32* %42, align 4
  %66 = icmp eq i32 %65, 87
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = load i64, i64* %62, align 4
  %69 = load i32, i32* %63, align 4
  store i32 87, i32* %42, align 4
  br label %74

70:                                               ; preds = %64
  %71 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %52) #15
  %72 = extractvalue { i64, i32 } %71, 0
  %73 = extractvalue { i64, i32 } %71, 1
  br label %74

74:                                               ; preds = %70, %67
  %75 = phi i32 [ %69, %67 ], [ %73, %70 ]
  %76 = phi i64 [ %68, %67 ], [ %72, %70 ]
  %77 = trunc i64 %76 to i32
  %78 = add i32 %77, -83
  %79 = icmp ult i32 %78, 3
  br i1 %79, label %64, label %80

80:                                               ; preds = %74, %58
  %81 = phi i64 [ %54, %58 ], [ %76, %74 ]
  %82 = phi i32 [ %59, %58 ], [ %75, %74 ]
  %83 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %84 = bitcast %"struct.SkSL::Token"* %83 to i64*
  store i64 %81, i64* %84, align 4
  %85 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %82, i32* %85, align 4
  br label %86

86:                                               ; preds = %45, %80
  %87 = phi i32 [ %50, %45 ], [ %82, %80 ]
  %88 = phi i64 [ %48, %45 ], [ %81, %80 ]
  %89 = trunc i64 %88 to i32
  %90 = icmp eq i32 %89, 37
  br i1 %90, label %202, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %89, 33
  %93 = bitcast %"struct.SkSL::StringFragment"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #15
  br i1 %92, label %94, label %135

94:                                               ; preds = %91
  %95 = load i8*, i8** %17, align 8
  %96 = ashr i64 %88, 32
  %97 = getelementptr inbounds i8, i8* %95, i64 %96
  %98 = sext i32 %87 to i64
  %99 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %7, i64 0, i32 0
  store i8* %97, i8** %99, align 8
  %100 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %7, i64 0, i32 1
  store i64 %98, i64* %100, align 8
  %101 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0)) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #15
  br i1 %101, label %102, label %136

102:                                              ; preds = %94
  %103 = load i32, i32* %42, align 4
  %104 = icmp eq i32 %103, 87
  br i1 %104, label %109, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %107 = bitcast %"struct.SkSL::Token"* %106 to i64*
  %108 = load i64, i64* %107, align 4
  store i32 87, i32* %42, align 4
  br label %113

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %111 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %110) #15
  %112 = extractvalue { i64, i32 } %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i64 [ %108, %105 ], [ %112, %109 ]
  %115 = trunc i64 %114 to i32
  %116 = add i32 %115, -83
  %117 = icmp ult i32 %116, 3
  br i1 %117, label %118, label %202

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %120 = bitcast %"struct.SkSL::Token"* %119 to i64*
  %121 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %122

122:                                              ; preds = %130, %118
  %123 = load i32, i32* %42, align 4
  %124 = icmp eq i32 %123, 87
  br i1 %124, label %127, label %125

125:                                              ; preds = %122
  %126 = load i64, i64* %120, align 4
  store i32 87, i32* %42, align 4
  br label %130

127:                                              ; preds = %122
  %128 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %121) #15
  %129 = extractvalue { i64, i32 } %128, 0
  br label %130

130:                                              ; preds = %127, %125
  %131 = phi i64 [ %126, %125 ], [ %129, %127 ]
  %132 = trunc i64 %131 to i32
  %133 = add i32 %132, -83
  %134 = icmp ult i32 %133, 3
  br i1 %134, label %122, label %202

135:                                              ; preds = %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #15
  br label %136

136:                                              ; preds = %135, %94
  %137 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %138 = bitcast %"struct.SkSL::Token"* %137 to i64*
  %139 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %140 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %141

141:                                              ; preds = %196, %136
  %142 = phi i64 [ 0, %136 ], [ %146, %196 ]
  %143 = call i32 @_ZN4SkSL6Parser9parameterEv(%"class.SkSL::Parser"* %0)
  %144 = icmp sgt i32 %143, -1
  br i1 %144, label %145, label %287

145:                                              ; preds = %141
  %146 = add i64 %142, 1
  %147 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %23, align 8
  %148 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %148, align 8
  %150 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %149, i64 %25, i32 5, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp sgt i32 %151, -1
  br i1 %152, label %153, label %160

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %149, i64 %25, i32 0
  %155 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %154, align 8
  %156 = sext i32 %151 to i64
  %157 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %155, i64 0, i32 0, i32 0
  %158 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %157, align 8
  %159 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %158, i64 %156, i32 6, i32 0
  br label %162

160:                                              ; preds = %145
  %161 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %149, i64 %25, i32 4, i32 0
  br label %162

162:                                              ; preds = %153, %160
  %163 = phi i32* [ %159, %153 ], [ %161, %160 ]
  store i32 %143, i32* %163, align 4
  store i32 %143, i32* %150, align 8
  %164 = load i32, i32* %42, align 4
  switch i32 %164, label %202 [
    i32 87, label %168
    i32 43, label %165
  ]

165:                                              ; preds = %162
  %166 = load i64, i64* %138, align 4
  %167 = load i32, i32* %139, align 4
  store i32 87, i32* %42, align 4
  br label %172

168:                                              ; preds = %162
  %169 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %140) #15
  %170 = extractvalue { i64, i32 } %169, 0
  %171 = extractvalue { i64, i32 } %169, 1
  br label %172

172:                                              ; preds = %168, %165
  %173 = phi i32 [ %167, %165 ], [ %171, %168 ]
  %174 = phi i64 [ %166, %165 ], [ %170, %168 ]
  %175 = trunc i64 %174 to i32
  %176 = add i32 %175, -83
  %177 = icmp ult i32 %176, 3
  br i1 %177, label %178, label %196

178:                                              ; preds = %172, %188
  %179 = load i32, i32* %42, align 4
  %180 = icmp eq i32 %179, 87
  br i1 %180, label %184, label %181

181:                                              ; preds = %178
  %182 = load i64, i64* %138, align 4
  %183 = load i32, i32* %139, align 4
  store i32 87, i32* %42, align 4
  br label %188

184:                                              ; preds = %178
  %185 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %140) #15
  %186 = extractvalue { i64, i32 } %185, 0
  %187 = extractvalue { i64, i32 } %185, 1
  br label %188

188:                                              ; preds = %184, %181
  %189 = phi i32 [ %183, %181 ], [ %187, %184 ]
  %190 = phi i64 [ %182, %181 ], [ %186, %184 ]
  %191 = trunc i64 %190 to i32
  %192 = add i32 %191, -83
  %193 = icmp ult i32 %192, 3
  br i1 %193, label %178, label %194

194:                                              ; preds = %188
  %195 = trunc i64 %190 to i32
  br label %196

196:                                              ; preds = %194, %172
  %197 = phi i32 [ %175, %172 ], [ %195, %194 ]
  %198 = phi i64 [ %174, %172 ], [ %190, %194 ]
  %199 = phi i32 [ %173, %172 ], [ %189, %194 ]
  %200 = icmp eq i32 %197, 43
  br i1 %200, label %141, label %201

201:                                              ; preds = %196
  store i64 %198, i64* %138, align 4
  store i32 %199, i32* %139, align 4
  br label %202

202:                                              ; preds = %162, %130, %113, %201, %86
  %203 = phi i64 [ 0, %86 ], [ %146, %201 ], [ 0, %113 ], [ 0, %130 ], [ %146, %162 ]
  %204 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %23, align 8
  %205 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %204, i64 0, i32 0, i32 0, i32 0
  %206 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %205, align 8
  %207 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %206, i64 %25, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* nonnull align 8 %11, i64 80, i1 false)
  %208 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %206, i64 %25, i32 1, i32 0, i64 80
  %209 = bitcast i8* %208 to i8**
  store i8* %20, i8** %209, align 8
  %210 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %206, i64 %25, i32 1, i32 0, i64 88
  %211 = bitcast i8* %210 to i64*
  store i64 %21, i64* %211, align 8
  %212 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %206, i64 %25, i32 1, i32 0, i64 96
  %213 = bitcast i8* %212 to i64*
  store i64 %203, i64* %213, align 8
  %214 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %214, label %215, label %287

215:                                              ; preds = %202
  %216 = load i32, i32* %42, align 4
  switch i32 %216, label %266 [
    i32 87, label %223
    i32 81, label %217
  ]

217:                                              ; preds = %215
  %218 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %219 = bitcast %"struct.SkSL::Token"* %218 to i64*
  %220 = load i64, i64* %219, align 4
  %221 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %222 = load i32, i32* %221, align 4
  store i32 87, i32* %42, align 4
  br label %228

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %225 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %224) #15
  %226 = extractvalue { i64, i32 } %225, 0
  %227 = extractvalue { i64, i32 } %225, 1
  br label %228

228:                                              ; preds = %223, %217
  %229 = phi i32 [ %222, %217 ], [ %227, %223 ]
  %230 = phi i64 [ %220, %217 ], [ %226, %223 ]
  %231 = trunc i64 %230 to i32
  %232 = add i32 %231, -83
  %233 = icmp ult i32 %232, 3
  br i1 %233, label %234, label %257

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %236 = bitcast %"struct.SkSL::Token"* %235 to i64*
  %237 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %238 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %239

239:                                              ; preds = %249, %234
  %240 = load i32, i32* %42, align 4
  %241 = icmp eq i32 %240, 87
  br i1 %241, label %245, label %242

242:                                              ; preds = %239
  %243 = load i64, i64* %236, align 4
  %244 = load i32, i32* %237, align 4
  store i32 87, i32* %42, align 4
  br label %249

245:                                              ; preds = %239
  %246 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %238) #15
  %247 = extractvalue { i64, i32 } %246, 0
  %248 = extractvalue { i64, i32 } %246, 1
  br label %249

249:                                              ; preds = %245, %242
  %250 = phi i32 [ %244, %242 ], [ %248, %245 ]
  %251 = phi i64 [ %243, %242 ], [ %247, %245 ]
  %252 = trunc i64 %251 to i32
  %253 = add i32 %252, -83
  %254 = icmp ult i32 %253, 3
  br i1 %254, label %239, label %255

255:                                              ; preds = %249
  %256 = trunc i64 %251 to i32
  br label %257

257:                                              ; preds = %255, %228
  %258 = phi i32 [ %231, %228 ], [ %256, %255 ]
  %259 = phi i64 [ %230, %228 ], [ %251, %255 ]
  %260 = phi i32 [ %229, %228 ], [ %250, %255 ]
  %261 = icmp eq i32 %258, 81
  br i1 %261, label %287, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %264 = bitcast %"struct.SkSL::Token"* %263 to i64*
  store i64 %259, i64* %264, align 4
  %265 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %260, i32* %265, align 4
  br label %266

266:                                              ; preds = %215, %262
  %267 = call i32 @_ZN4SkSL6Parser5blockEv(%"class.SkSL::Parser"* %0)
  %268 = icmp sgt i32 %267, -1
  br i1 %268, label %269, label %287

269:                                              ; preds = %266
  %270 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %23, align 8
  %271 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %270, i64 0, i32 0, i32 0, i32 0
  %272 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %271, align 8
  %273 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %272, i64 %25, i32 5, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = icmp sgt i32 %274, -1
  br i1 %275, label %276, label %283

276:                                              ; preds = %269
  %277 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %272, i64 %25, i32 0
  %278 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %277, align 8
  %279 = sext i32 %274 to i64
  %280 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %278, i64 0, i32 0, i32 0
  %281 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %280, align 8
  %282 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %281, i64 %279, i32 6, i32 0
  br label %285

283:                                              ; preds = %269
  %284 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %272, i64 %25, i32 4, i32 0
  br label %285

285:                                              ; preds = %276, %283
  %286 = phi i32* [ %282, %276 ], [ %284, %283 ]
  store i32 %267, i32* %286, align 4
  store i32 %267, i32* %273, align 8
  br label %287

287:                                              ; preds = %141, %285, %257, %266, %202
  %288 = phi i32 [ -1, %202 ], [ %10, %285 ], [ %10, %257 ], [ -1, %266 ], [ -1, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11)
  ret i32 %288
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser17varDeclarationEndENS_9ModifiersENS_7ASTNode2IDENS_14StringFragmentE(%"class.SkSL::Parser"*, %"struct.SkSL::Modifiers"* byval(%"struct.SkSL::Modifiers") align 8, i32, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.45"*, align 8
  %7 = alloca %"class.std::__1::vector.45"*, align 8
  %8 = alloca %"class.SkSL::ASTNode::ID", align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %class.anon.75, align 8
  %13 = alloca i32, align 4
  %14 = alloca %"struct.SkSL::ASTNode::VarData", align 8
  %15 = alloca %"struct.SkSL::Token", align 8
  %16 = alloca %"class.std::__1::vector.45"*, align 8
  %17 = alloca i32, align 4
  %18 = getelementptr inbounds %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID"* %8, i64 0, i32 0
  store i32 %2, i32* %18, align 4
  %19 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 -1431655766, i32* %9, align 4
  %20 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 87
  br i1 %22, label %27, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %25 = bitcast %"struct.SkSL::Token"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  br label %62

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %29 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %28) #15
  %30 = extractvalue { i64, i32 } %29, 0
  %31 = trunc i64 %30 to i32
  %32 = add i32 %31, -83
  %33 = icmp ult i32 %32, 3
  br i1 %33, label %36, label %34

34:                                               ; preds = %27
  %35 = extractvalue { i64, i32 } %29, 1
  br label %56

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %38 = bitcast %"struct.SkSL::Token"* %37 to i64*
  %39 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %40

40:                                               ; preds = %50, %36
  %41 = load i32, i32* %20, align 4
  %42 = icmp eq i32 %41, 87
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = load i64, i64* %38, align 4
  %45 = load i32, i32* %39, align 4
  store i32 87, i32* %20, align 4
  br label %50

46:                                               ; preds = %40
  %47 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %28) #15
  %48 = extractvalue { i64, i32 } %47, 0
  %49 = extractvalue { i64, i32 } %47, 1
  br label %50

50:                                               ; preds = %46, %43
  %51 = phi i32 [ %45, %43 ], [ %49, %46 ]
  %52 = phi i64 [ %44, %43 ], [ %48, %46 ]
  %53 = trunc i64 %52 to i32
  %54 = add i32 %53, -83
  %55 = icmp ult i32 %54, 3
  br i1 %55, label %40, label %56

56:                                               ; preds = %50, %34
  %57 = phi i64 [ %30, %34 ], [ %52, %50 ]
  %58 = phi i32 [ %35, %34 ], [ %51, %50 ]
  %59 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %60 = bitcast %"struct.SkSL::Token"* %59 to i64*
  store i64 %57, i64* %60, align 4
  %61 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %58, i32* %61, align 4
  br label %62

62:                                               ; preds = %23, %56
  %63 = phi i64 [ %26, %23 ], [ %57, %56 ]
  %64 = lshr i64 %63, 32
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %9, align 4
  %66 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #15
  store i32 34, i32* %10, align 4
  %67 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %68 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %68, i64 0, i32 0
  %70 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %68, i64 0, i32 0, i32 0, i32 1
  %71 = bitcast %"struct.SkSL::ASTNode"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"struct.SkSL::ASTFile"* %68 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %72, %74
  %76 = sdiv exact i64 %75, 160
  %77 = trunc i64 %76 to i32
  %78 = bitcast %"class.std::__1::vector.45"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  store %"class.std::__1::vector.45"* %69, %"class.std::__1::vector.45"** %7, align 8
  %79 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %69, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #15
  %80 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #15
  store i32 21, i32* %11, align 4
  %81 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERNS_9ModifiersEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %11, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %1)
  %82 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %83 = shl i64 %76, 32
  %84 = ashr exact i64 %83, 32
  %85 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %82, i64 0, i32 0, i32 0, i32 0
  %86 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %85, align 8
  %87 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %86, i64 %84, i32 5, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp sgt i32 %88, -1
  br i1 %89, label %90, label %97

90:                                               ; preds = %62
  %91 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %86, i64 %84, i32 0
  %92 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %91, align 8
  %93 = sext i32 %88 to i64
  %94 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %92, i64 0, i32 0, i32 0
  %95 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %94, align 8
  %96 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %95, i64 %93, i32 6, i32 0
  br label %99

97:                                               ; preds = %62
  %98 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %86, i64 %84, i32 4, i32 0
  br label %99

99:                                               ; preds = %90, %97
  %100 = phi i32* [ %96, %90 ], [ %98, %97 ]
  store i32 %81, i32* %100, align 4
  store i32 %81, i32* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #15
  %101 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %102 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %102, align 8
  %104 = load i32, i32* %18, align 4
  %105 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %103, i64 %84, i32 5, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, -1
  br i1 %107, label %108, label %115

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %103, i64 %84, i32 0
  %110 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %109, align 8
  %111 = sext i32 %106 to i64
  %112 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %110, i64 0, i32 0, i32 0
  %113 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %112, align 8
  %114 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %113, i64 %111, i32 6, i32 0
  br label %117

115:                                              ; preds = %99
  %116 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %103, i64 %84, i32 4, i32 0
  br label %117

117:                                              ; preds = %108, %115
  %118 = phi i32* [ %114, %108 ], [ %116, %115 ]
  store i32 %104, i32* %118, align 4
  store i32 %104, i32* %105, align 8
  %119 = bitcast %class.anon.75* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #15
  %120 = getelementptr inbounds %class.anon.75, %class.anon.75* %12, i64 0, i32 0
  %121 = getelementptr inbounds %class.anon.75, %class.anon.75* %12, i64 0, i32 1
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %120, align 8
  store %"class.SkSL::ASTNode::ID"* %8, %"class.SkSL::ASTNode::ID"** %121, align 8
  %122 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #15
  store i32 33, i32* %13, align 4
  %123 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %124 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %123, i64 0, i32 0
  %125 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %123, i64 0, i32 0, i32 0, i32 1
  %126 = bitcast %"struct.SkSL::ASTNode"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"struct.SkSL::ASTFile"* %123 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = sdiv exact i64 %130, 160
  %132 = trunc i64 %131 to i32
  %133 = bitcast %"class.std::__1::vector.45"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #15
  store %"class.std::__1::vector.45"* %124, %"class.std::__1::vector.45"** %6, align 8
  %134 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %124, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %13) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #15
  %135 = bitcast %"struct.SkSL::ASTNode::VarData"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #15
  %136 = getelementptr inbounds %"struct.SkSL::ASTNode::VarData", %"struct.SkSL::ASTNode::VarData"* %14, i64 0, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.SkSL::ASTNode::VarData", %"struct.SkSL::ASTNode::VarData"* %14, i64 0, i32 0, i32 1
  %138 = getelementptr inbounds %"struct.SkSL::ASTNode::VarData", %"struct.SkSL::ASTNode::VarData"* %14, i64 0, i32 1
  %139 = bitcast %"struct.SkSL::ASTNode::VarData"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 24, i1 false)
  store i8* %3, i8** %136, align 8
  store i64 %4, i64* %137, align 8
  store i8 0, i8* %138, align 8
  %140 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %141 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %141, align 8
  %143 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %84, i32 5, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %144, -1
  br i1 %145, label %146, label %153

146:                                              ; preds = %117
  %147 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %84, i32 0
  %148 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %147, align 8
  %149 = sext i32 %144 to i64
  %150 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %148, i64 0, i32 0, i32 0
  %151 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %150, align 8
  %152 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %151, i64 %149, i32 6, i32 0
  br label %155

153:                                              ; preds = %117
  %154 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %84, i32 4, i32 0
  br label %155

155:                                              ; preds = %146, %153
  %156 = phi i32* [ %152, %146 ], [ %154, %153 ]
  store i32 %132, i32* %156, align 4
  store i32 %132, i32* %143, align 8
  %157 = call fastcc zeroext i1 @"_ZZN4SkSL6Parser17varDeclarationEndENS_9ModifiersENS_7ASTNode2IDENS_14StringFragmentEENK3$_1clES3_PNS2_7VarDataE"(%class.anon.75* nonnull %12, i32 %132, %"struct.SkSL::ASTNode::VarData"* nonnull %14)
  br i1 %157, label %158, label %391

158:                                              ; preds = %155
  %159 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %160 = shl i64 %131, 32
  %161 = ashr exact i64 %160, 32
  %162 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %159, i64 0, i32 0, i32 0, i32 0
  %163 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %162, align 8
  %164 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %163, i64 %161, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* nonnull align 8 %135, i64 24, i1 false) #15
  %165 = load i32, i32* %20, align 4
  switch i32 %165, label %234 [
    i32 87, label %172
    i32 64, label %166
  ]

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %168 = bitcast %"struct.SkSL::Token"* %167 to i64*
  %169 = load i64, i64* %168, align 4
  %170 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %171 = load i32, i32* %170, align 4
  store i32 87, i32* %20, align 4
  br label %177

172:                                              ; preds = %158
  %173 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %174 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %173) #15
  %175 = extractvalue { i64, i32 } %174, 0
  %176 = extractvalue { i64, i32 } %174, 1
  br label %177

177:                                              ; preds = %172, %166
  %178 = phi i32 [ %171, %166 ], [ %176, %172 ]
  %179 = phi i64 [ %169, %166 ], [ %175, %172 ]
  %180 = trunc i64 %179 to i32
  %181 = add i32 %180, -83
  %182 = icmp ult i32 %181, 3
  br i1 %182, label %183, label %204

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %185 = bitcast %"struct.SkSL::Token"* %184 to i64*
  %186 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %187 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %188

188:                                              ; preds = %198, %183
  %189 = load i32, i32* %20, align 4
  %190 = icmp eq i32 %189, 87
  br i1 %190, label %194, label %191

191:                                              ; preds = %188
  %192 = load i64, i64* %185, align 4
  %193 = load i32, i32* %186, align 4
  store i32 87, i32* %20, align 4
  br label %198

194:                                              ; preds = %188
  %195 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %187) #15
  %196 = extractvalue { i64, i32 } %195, 0
  %197 = extractvalue { i64, i32 } %195, 1
  br label %198

198:                                              ; preds = %194, %191
  %199 = phi i32 [ %193, %191 ], [ %197, %194 ]
  %200 = phi i64 [ %192, %191 ], [ %196, %194 ]
  %201 = trunc i64 %200 to i32
  %202 = add i32 %201, -83
  %203 = icmp ult i32 %202, 3
  br i1 %203, label %188, label %204

204:                                              ; preds = %198, %177
  %205 = phi i64 [ %179, %177 ], [ %200, %198 ]
  %206 = phi i32 [ %178, %177 ], [ %199, %198 ]
  %207 = trunc i64 %205 to i32
  %208 = icmp eq i32 %207, 64
  br i1 %208, label %213, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %211 = bitcast %"struct.SkSL::Token"* %210 to i64*
  store i64 %205, i64* %211, align 4
  %212 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %206, i32* %212, align 4
  br label %234

213:                                              ; preds = %204
  %214 = call i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"* %0) #15
  %215 = icmp sgt i32 %214, -1
  br i1 %215, label %216, label %391

216:                                              ; preds = %213
  %217 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %218 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %217, i64 0, i32 0, i32 0, i32 0
  %219 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %218, align 8
  %220 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %219, i64 %161, i32 5, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = icmp sgt i32 %221, -1
  br i1 %222, label %223, label %230

223:                                              ; preds = %216
  %224 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %219, i64 %161, i32 0
  %225 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %224, align 8
  %226 = sext i32 %221 to i64
  %227 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %225, i64 0, i32 0, i32 0
  %228 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %227, align 8
  %229 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %228, i64 %226, i32 6, i32 0
  br label %232

230:                                              ; preds = %216
  %231 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %219, i64 %161, i32 4, i32 0
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32* [ %231, %230 ], [ %229, %223 ]
  store i32 %214, i32* %233, align 4
  store i32 %214, i32* %220, align 8
  br label %234

234:                                              ; preds = %158, %209, %232
  %235 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %236 = bitcast %"struct.SkSL::Token"* %235 to i64*
  %237 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %238 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %239 = bitcast %"struct.SkSL::Token"* %15 to i8*
  %240 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %15, i64 0, i32 0
  %241 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %15, i64 0, i32 1
  %242 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %15, i64 0, i32 2
  %243 = bitcast %"struct.SkSL::Token"* %15 to i64*
  %244 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %245 = bitcast %"class.std::__1::vector.45"** %16 to i8*
  %246 = bitcast i32* %17 to i8*
  br label %247

247:                                              ; preds = %387, %234
  %248 = load i32, i32* %20, align 4
  switch i32 %248, label %388 [
    i32 87, label %252
    i32 43, label %249
  ]

249:                                              ; preds = %247
  %250 = load i64, i64* %236, align 4
  %251 = load i32, i32* %237, align 4
  store i32 87, i32* %20, align 4
  br label %256

252:                                              ; preds = %247
  %253 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %238) #15
  %254 = extractvalue { i64, i32 } %253, 0
  %255 = extractvalue { i64, i32 } %253, 1
  br label %256

256:                                              ; preds = %252, %249
  %257 = phi i32 [ %251, %249 ], [ %255, %252 ]
  %258 = phi i64 [ %250, %249 ], [ %254, %252 ]
  %259 = trunc i64 %258 to i32
  %260 = add i32 %259, -83
  %261 = icmp ult i32 %260, 3
  br i1 %261, label %262, label %278

262:                                              ; preds = %256, %272
  %263 = load i32, i32* %20, align 4
  %264 = icmp eq i32 %263, 87
  br i1 %264, label %268, label %265

265:                                              ; preds = %262
  %266 = load i64, i64* %236, align 4
  %267 = load i32, i32* %237, align 4
  store i32 87, i32* %20, align 4
  br label %272

268:                                              ; preds = %262
  %269 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %238) #15
  %270 = extractvalue { i64, i32 } %269, 0
  %271 = extractvalue { i64, i32 } %269, 1
  br label %272

272:                                              ; preds = %268, %265
  %273 = phi i32 [ %267, %265 ], [ %271, %268 ]
  %274 = phi i64 [ %266, %265 ], [ %270, %268 ]
  %275 = trunc i64 %274 to i32
  %276 = add i32 %275, -83
  %277 = icmp ult i32 %276, 3
  br i1 %277, label %262, label %278

278:                                              ; preds = %272, %256
  %279 = phi i64 [ %258, %256 ], [ %274, %272 ]
  %280 = phi i32 [ %257, %256 ], [ %273, %272 ]
  %281 = trunc i64 %279 to i32
  %282 = icmp eq i32 %281, 43
  br i1 %282, label %284, label %283

283:                                              ; preds = %278
  store i64 %279, i64* %236, align 4
  store i32 %280, i32* %237, align 4
  br label %388

284:                                              ; preds = %278
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %239) #15
  store i32 87, i32* %240, align 8
  store i32 -1, i32* %241, align 4
  store i32 -1, i32* %242, align 8
  %285 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %15)
  br i1 %285, label %286, label %386

286:                                              ; preds = %284
  %287 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %288 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %287, i64 0, i32 0
  %289 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %287, i64 0, i32 0, i32 0, i32 1
  %290 = bitcast %"struct.SkSL::ASTNode"** %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %"struct.SkSL::ASTFile"* %287 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = sub i64 %291, %293
  %295 = sdiv exact i64 %294, 160
  %296 = trunc i64 %295 to i32
  %297 = load i64, i64* %243, align 8
  %298 = load i32, i32* %242, align 8
  %299 = load i8*, i8** %244, align 8
  %300 = ashr i64 %297, 32
  %301 = getelementptr inbounds i8, i8* %299, i64 %300
  %302 = sext i32 %298 to i64
  store i8* %301, i8** %136, align 8
  store i64 %302, i64* %137, align 8
  store i8 0, i8* %138, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %245) #15
  store %"class.std::__1::vector.45"* %288, %"class.std::__1::vector.45"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %246) #15
  store i32 33, i32* %17, align 4
  %303 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %288, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %17)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %246) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #15
  %304 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %305 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %304, i64 0, i32 0, i32 0, i32 0
  %306 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %305, align 8
  %307 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %306, i64 %84, i32 5, i32 0
  %308 = load i32, i32* %307, align 4
  %309 = icmp sgt i32 %308, -1
  br i1 %309, label %310, label %317

310:                                              ; preds = %286
  %311 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %306, i64 %84, i32 0
  %312 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %311, align 8
  %313 = sext i32 %308 to i64
  %314 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %312, i64 0, i32 0, i32 0
  %315 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %314, align 8
  %316 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %315, i64 %313, i32 6, i32 0
  br label %319

317:                                              ; preds = %286
  %318 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %306, i64 %84, i32 4, i32 0
  br label %319

319:                                              ; preds = %310, %317
  %320 = phi i32* [ %316, %310 ], [ %318, %317 ]
  store i32 %296, i32* %320, align 4
  store i32 %296, i32* %307, align 8
  %321 = call fastcc zeroext i1 @"_ZZN4SkSL6Parser17varDeclarationEndENS_9ModifiersENS_7ASTNode2IDENS_14StringFragmentEENK3$_1clES3_PNS2_7VarDataE"(%class.anon.75* nonnull %12, i32 %296, %"struct.SkSL::ASTNode::VarData"* nonnull %14)
  br i1 %321, label %322, label %386

322:                                              ; preds = %319
  %323 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %324 = shl i64 %295, 32
  %325 = ashr exact i64 %324, 32
  %326 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %323, i64 0, i32 0, i32 0, i32 0
  %327 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %326, align 8
  %328 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %327, i64 %325, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %328, i8* nonnull align 8 %135, i64 24, i1 false) #15
  %329 = load i32, i32* %20, align 4
  switch i32 %329, label %387 [
    i32 87, label %333
    i32 64, label %330
  ]

330:                                              ; preds = %322
  %331 = load i64, i64* %236, align 4
  %332 = load i32, i32* %237, align 4
  store i32 87, i32* %20, align 4
  br label %337

333:                                              ; preds = %322
  %334 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %238) #15
  %335 = extractvalue { i64, i32 } %334, 0
  %336 = extractvalue { i64, i32 } %334, 1
  br label %337

337:                                              ; preds = %333, %330
  %338 = phi i32 [ %332, %330 ], [ %336, %333 ]
  %339 = phi i64 [ %331, %330 ], [ %335, %333 ]
  %340 = trunc i64 %339 to i32
  %341 = add i32 %340, -83
  %342 = icmp ult i32 %341, 3
  br i1 %342, label %343, label %359

343:                                              ; preds = %337, %353
  %344 = load i32, i32* %20, align 4
  %345 = icmp eq i32 %344, 87
  br i1 %345, label %349, label %346

346:                                              ; preds = %343
  %347 = load i64, i64* %236, align 4
  %348 = load i32, i32* %237, align 4
  store i32 87, i32* %20, align 4
  br label %353

349:                                              ; preds = %343
  %350 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %238) #15
  %351 = extractvalue { i64, i32 } %350, 0
  %352 = extractvalue { i64, i32 } %350, 1
  br label %353

353:                                              ; preds = %349, %346
  %354 = phi i32 [ %348, %346 ], [ %352, %349 ]
  %355 = phi i64 [ %347, %346 ], [ %351, %349 ]
  %356 = trunc i64 %355 to i32
  %357 = add i32 %356, -83
  %358 = icmp ult i32 %357, 3
  br i1 %358, label %343, label %359

359:                                              ; preds = %353, %337
  %360 = phi i64 [ %339, %337 ], [ %355, %353 ]
  %361 = phi i32 [ %338, %337 ], [ %354, %353 ]
  %362 = trunc i64 %360 to i32
  %363 = icmp eq i32 %362, 64
  br i1 %363, label %365, label %364

364:                                              ; preds = %359
  store i64 %360, i64* %236, align 4
  store i32 %361, i32* %237, align 4
  br label %387

365:                                              ; preds = %359
  %366 = call i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"* %0) #15
  %367 = icmp sgt i32 %366, -1
  br i1 %367, label %368, label %386

368:                                              ; preds = %365
  %369 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %67, align 8
  %370 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %369, i64 0, i32 0, i32 0, i32 0
  %371 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %370, align 8
  %372 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %371, i64 %325, i32 5, i32 0
  %373 = load i32, i32* %372, align 4
  %374 = icmp sgt i32 %373, -1
  br i1 %374, label %375, label %382

375:                                              ; preds = %368
  %376 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %371, i64 %325, i32 0
  %377 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %376, align 8
  %378 = sext i32 %373 to i64
  %379 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %377, i64 0, i32 0, i32 0
  %380 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %379, align 8
  %381 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %380, i64 %378, i32 6, i32 0
  br label %384

382:                                              ; preds = %368
  %383 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %371, i64 %325, i32 4, i32 0
  br label %384

384:                                              ; preds = %382, %375
  %385 = phi i32* [ %383, %382 ], [ %381, %375 ]
  store i32 %366, i32* %385, align 4
  store i32 %366, i32* %372, align 8
  br label %387

386:                                              ; preds = %284, %319, %365
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %239) #15
  br label %391

387:                                              ; preds = %384, %322, %364
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %239) #15
  br label %247

388:                                              ; preds = %247, %283
  %389 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  %390 = select i1 %389, i32 %77, i32 -1
  br label %391

391:                                              ; preds = %388, %386, %213, %155
  %392 = phi i32 [ -1, %155 ], [ -1, %213 ], [ -1, %386 ], [ %390, %388 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  ret i32 %392
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL6Parser10createNodeIJRKiNS_7ASTNode4KindEEEENS4_2IDEDpOT_(%"class.SkSL::Parser"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %5, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.SkSL::ASTNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.SkSL::ASTFile"* %5 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 160
  %14 = trunc i64 %13 to i32
  %15 = inttoptr i64 %9 to %"struct.SkSL::ASTNode"*
  %16 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %16, align 8
  %18 = icmp ugt %"struct.SkSL::ASTNode"* %17, %15
  %19 = ptrtoint %"struct.SkSL::ASTNode"* %17 to i64
  br i1 %18, label %20, label %25

20:                                               ; preds = %3
  %21 = load i32, i32* %1, align 4
  %22 = load i32, i32* %2, align 4
  tail call void @_ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE(%"struct.SkSL::ASTNode"* %15, %"class.std::__1::vector.45"* %6, i32 %21, i32 %22) #15
  %23 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %15, i64 1
  %24 = ptrtoint %"struct.SkSL::ASTNode"* %23 to i64
  store i64 %24, i64* %8, align 8
  br label %73

25:                                               ; preds = %3
  %26 = add nsw i64 %13, 1
  %27 = icmp ugt i64 %26, 115292150460684697
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = bitcast %"struct.SkSL::ASTFile"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #16
  unreachable

30:                                               ; preds = %25
  %31 = bitcast %"struct.SkSL::ASTNode"** %16 to i64*
  %32 = sub i64 %19, %11
  %33 = sdiv exact i64 %32, 160
  %34 = icmp ult i64 %33, 57646075230342348
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = shl nsw i64 %33, 1
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35, %30
  %41 = phi i64 [ %38, %35 ], [ 115292150460684697, %30 ]
  %42 = mul i64 %41, 160
  %43 = tail call i8* @_Znwm(i64 %42) #14
  %44 = bitcast i8* %43 to %"struct.SkSL::ASTNode"*
  br label %45

45:                                               ; preds = %40, %35
  %46 = phi i64 [ %41, %40 ], [ 0, %35 ]
  %47 = phi %"struct.SkSL::ASTNode"* [ %44, %40 ], [ null, %35 ]
  %48 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 %13
  %49 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 %46
  %50 = ptrtoint %"struct.SkSL::ASTNode"* %49 to i64
  %51 = load i32, i32* %1, align 4
  %52 = load i32, i32* %2, align 4
  tail call void @_ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE(%"struct.SkSL::ASTNode"* %48, %"class.std::__1::vector.45"* %6, i32 %51, i32 %52) #15
  %53 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %48, i64 1
  %54 = ptrtoint %"struct.SkSL::ASTNode"* %53 to i64
  %55 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %5, i64 0, i32 0, i32 0, i32 0
  %56 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  %57 = load i64, i64* %8, align 8
  %58 = ptrtoint %"struct.SkSL::ASTNode"* %56 to i64
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, -160
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %48, i64 %60
  %62 = ptrtoint %"struct.SkSL::ASTNode"* %61 to i64
  %63 = icmp sgt i64 %59, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"struct.SkSL::ASTNode"* %61 to i8*
  %66 = bitcast %"struct.SkSL::ASTNode"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %59, i1 false) #15
  %67 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"struct.SkSL::ASTNode"* [ %56, %45 ], [ %67, %64 ]
  store i64 %62, i64* %10, align 8
  store i64 %54, i64* %8, align 8
  store i64 %50, i64* %31, align 8
  %70 = icmp eq %"struct.SkSL::ASTNode"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"struct.SkSL::ASTNode"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %68, %20
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser9parameterEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Modifiers", align 8
  %4 = alloca [72 x i8], align 8
  %5 = alloca %"struct.SkSL::Token", align 8
  %6 = alloca i32, align 4
  %7 = alloca [72 x i8], align 8
  %8 = alloca [7 x i8], align 1
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"struct.SkSL::Token", align 8
  %11 = alloca %"struct.SkSL::StringFragment", align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds [72 x i8], [72 x i8]* %7, i64 0, i64 0
  %17 = getelementptr inbounds [72 x i8], [72 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %17)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 72, i1 false)
  %18 = bitcast %"struct.SkSL::Modifiers"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %18) #15, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 80, i1 false) #15, !noalias !3
  call void @_ZN4SkSL6Parser9modifiersEv(%"struct.SkSL::Modifiers"* nonnull sret %3, %"class.SkSL::Parser"* %0) #15, !noalias !3
  %19 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %3, i64 0, i32 1
  %20 = load i32, i32* %19, align 8, !noalias !3
  %21 = icmp eq i32 %20, 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %18, i64 72, i1 false)
  %22 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %3, i64 0, i32 2
  %23 = bitcast [4 x i8]* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = select i1 %21, i32 -1431655766, i32 %24
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %18) #15, !noalias !3
  %26 = tail call i32 @_ZN4SkSL6Parser4typeEv(%"class.SkSL::Parser"* %0)
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %28, label %278

28:                                               ; preds = %1
  %29 = bitcast %"struct.SkSL::Token"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %5, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %5, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %5, i64 0, i32 2
  store i32 87, i32* %30, align 8
  store i32 -1, i32* %31, align 4
  store i32 -1, i32* %32, align 8
  %33 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %5)
  br i1 %33, label %34, label %276

34:                                               ; preds = %28
  %35 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #15
  store i32 23, i32* %6, align 4
  %36 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %36, align 8
  %38 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %37, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %37, i64 0, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.SkSL::ASTNode"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"struct.SkSL::ASTFile"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = sdiv exact i64 %44, 160
  %46 = trunc i64 %45 to i32
  %47 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  store %"class.std::__1::vector.45"* %38, %"class.std::__1::vector.45"** %2, align 8
  %48 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %38, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %31, i32* nonnull dereferenceable(4) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #15
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %16)
  %49 = getelementptr inbounds [7 x i8], [7 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %49)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 -86, i64 7, i1 false)
  %50 = bitcast %"struct.SkSL::Token"* %5 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = load i32, i32* %32, align 8
  %53 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = ashr i64 %51, 32
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = sext i32 %52 to i64
  %58 = getelementptr inbounds [72 x i8], [72 x i8]* %7, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %17, i64 72, i1 false)
  %59 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %36, align 8
  %60 = shl i64 %45, 32
  %61 = ashr exact i64 %60, 32
  %62 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %59, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %62, align 8
  %64 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %63, i64 %61, i32 5, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %67, label %74

67:                                               ; preds = %34
  %68 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %63, i64 %61, i32 0
  %69 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %68, align 8
  %70 = sext i32 %65 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %69, i64 0, i32 0, i32 0
  %72 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %71, align 8
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %72, i64 %70, i32 6, i32 0
  br label %76

74:                                               ; preds = %34
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %63, i64 %61, i32 4, i32 0
  br label %76

76:                                               ; preds = %67, %74
  %77 = phi i32* [ %73, %67 ], [ %75, %74 ]
  store i32 %26, i32* %77, align 4
  store i32 %26, i32* %64, align 8
  %78 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %79 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %80 = bitcast %"struct.SkSL::Token"* %79 to i64*
  %81 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %82 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %83 = sext i32 %26 to i64
  %84 = bitcast %"struct.SkSL::Token"* %10 to i8*
  %85 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %10, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %10, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %10, i64 0, i32 2
  %88 = bitcast %"struct.SkSL::StringFragment"* %11 to i8*
  %89 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %11, i64 0, i32 0
  %90 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %11, i64 0, i32 1
  %91 = bitcast %"struct.SkSL::Token"* %10 to i64*
  %92 = bitcast i64* %12 to i8*
  %93 = bitcast %"class.SkSL::String"* %14 to i8*
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %96 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = bitcast i32* %15 to i8*
  br label %103

103:                                              ; preds = %255, %76
  %104 = phi i8 [ 0, %76 ], [ %256, %255 ]
  %105 = load i32, i32* %78, align 4
  switch i32 %105, label %259 [
    i32 87, label %109
    i32 40, label %106
  ]

106:                                              ; preds = %103
  %107 = load i64, i64* %80, align 4
  %108 = load i32, i32* %81, align 4
  store i32 87, i32* %78, align 4
  br label %113

109:                                              ; preds = %103
  %110 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %82) #15
  %111 = extractvalue { i64, i32 } %110, 0
  %112 = extractvalue { i64, i32 } %110, 1
  br label %113

113:                                              ; preds = %109, %106
  %114 = phi i32 [ %108, %106 ], [ %112, %109 ]
  %115 = phi i64 [ %107, %106 ], [ %111, %109 ]
  %116 = trunc i64 %115 to i32
  %117 = add i32 %116, -83
  %118 = icmp ult i32 %117, 3
  br i1 %118, label %119, label %135

119:                                              ; preds = %113, %129
  %120 = load i32, i32* %78, align 4
  %121 = icmp eq i32 %120, 87
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = load i64, i64* %80, align 4
  %124 = load i32, i32* %81, align 4
  store i32 87, i32* %78, align 4
  br label %129

125:                                              ; preds = %119
  %126 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %82) #15
  %127 = extractvalue { i64, i32 } %126, 0
  %128 = extractvalue { i64, i32 } %126, 1
  br label %129

129:                                              ; preds = %125, %122
  %130 = phi i32 [ %124, %122 ], [ %128, %125 ]
  %131 = phi i64 [ %123, %122 ], [ %127, %125 ]
  %132 = trunc i64 %131 to i32
  %133 = add i32 %132, -83
  %134 = icmp ult i32 %133, 3
  br i1 %134, label %119, label %135

135:                                              ; preds = %129, %113
  %136 = phi i64 [ %115, %113 ], [ %131, %129 ]
  %137 = phi i32 [ %114, %113 ], [ %130, %129 ]
  %138 = trunc i64 %136 to i32
  %139 = icmp eq i32 %138, 40
  br i1 %139, label %141, label %140

140:                                              ; preds = %135
  store i64 %136, i64* %80, align 4
  store i32 %137, i32* %81, align 4
  br label %259

141:                                              ; preds = %135
  %142 = icmp eq i8 %104, 0
  br i1 %142, label %143, label %150

143:                                              ; preds = %141
  %144 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %36, align 8
  %145 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %144, i64 0, i32 0, i32 0, i32 0
  %146 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %145, align 8
  %147 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %146, i64 %83, i32 4, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp sgt i32 %148, -1
  br i1 %149, label %150, label %189

150:                                              ; preds = %141, %143
  %151 = load i32, i32* %78, align 4
  %152 = icmp eq i32 %151, 87
  br i1 %152, label %155, label %153

153:                                              ; preds = %150
  %154 = load i64, i64* %80, align 4
  br label %182

155:                                              ; preds = %150
  %156 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %82) #15
  %157 = extractvalue { i64, i32 } %156, 0
  %158 = trunc i64 %157 to i32
  %159 = add i32 %158, -83
  %160 = icmp ult i32 %159, 3
  br i1 %160, label %163, label %161

161:                                              ; preds = %155
  %162 = extractvalue { i64, i32 } %156, 1
  br label %179

163:                                              ; preds = %155, %173
  %164 = load i32, i32* %78, align 4
  %165 = icmp eq i32 %164, 87
  br i1 %165, label %169, label %166

166:                                              ; preds = %163
  %167 = load i64, i64* %80, align 4
  %168 = load i32, i32* %81, align 4
  store i32 87, i32* %78, align 4
  br label %173

169:                                              ; preds = %163
  %170 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %82) #15
  %171 = extractvalue { i64, i32 } %170, 0
  %172 = extractvalue { i64, i32 } %170, 1
  br label %173

173:                                              ; preds = %169, %166
  %174 = phi i32 [ %168, %166 ], [ %172, %169 ]
  %175 = phi i64 [ %167, %166 ], [ %171, %169 ]
  %176 = trunc i64 %175 to i32
  %177 = add i32 %176, -83
  %178 = icmp ult i32 %177, 3
  br i1 %178, label %163, label %179

179:                                              ; preds = %173, %161
  %180 = phi i64 [ %157, %161 ], [ %175, %173 ]
  %181 = phi i32 [ %162, %161 ], [ %174, %173 ]
  store i64 %180, i64* %80, align 4
  store i32 %181, i32* %81, align 4
  br label %182

182:                                              ; preds = %179, %153
  %183 = phi i64 [ %154, %153 ], [ %180, %179 ]
  %184 = call i8* @_Znwm(i64 48) #14
  %185 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %184, i8** %185, align 8
  %186 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %187 = bitcast i64* %186 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %187, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %184, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57, i64 0, i64 0), i64 42, i1 false) #15
  %188 = getelementptr inbounds i8, i8* %184, i64 42
  store i8 0, i8* %188, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %183, i32 undef, %"class.SkSL::String"* nonnull %9)
  call void @_ZdlPv(i8* nonnull %184) #14
  br label %274

189:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %84) #15
  store i32 87, i32* %85, align 8
  store i32 -1, i32* %86, align 4
  store i32 -1, i32* %87, align 8
  %190 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %10)
  br i1 %190, label %192, label %191

191:                                              ; preds = %189
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %84) #15
  br label %274

192:                                              ; preds = %189
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #15
  %193 = load i64, i64* %91, align 8
  %194 = load i32, i32* %87, align 8
  %195 = load i8*, i8** %53, align 8
  %196 = ashr i64 %193, 32
  %197 = getelementptr inbounds i8, i8* %195, i64 %196
  %198 = sext i32 %194 to i64
  store i8* %197, i8** %89, align 8
  store i64 %198, i64* %90, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #15
  store i64 -6148914691236517206, i64* %12, align 8
  %199 = call zeroext i1 @_ZN4SkSL4stoiERKNS_14StringFragmentEPl(%"struct.SkSL::StringFragment"* nonnull dereferenceable(16) %11, i64* nonnull %12) #15
  br i1 %199, label %232, label %200

200:                                              ; preds = %192
  %201 = load i64, i64* %91, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #15
  %202 = load i8*, i8** %89, align 8
  %203 = load i64, i64* %90, align 8
  %204 = icmp ugt i64 %203, -17
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  %206 = bitcast %"class.SkSL::String"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %206) #16
  unreachable

207:                                              ; preds = %200
  %208 = icmp ult i64 %203, 23
  br i1 %208, label %214, label %209

209:                                              ; preds = %207
  %210 = add nuw i64 %203, 16
  %211 = and i64 %210, -16
  %212 = call i8* @_Znwm(i64 %211) #14
  store i8* %212, i8** %94, align 8
  %213 = or i64 %211, -9223372036854775808
  store i64 %213, i64* %95, align 8
  store i64 %203, i64* %96, align 8
  br label %217

214:                                              ; preds = %207
  %215 = trunc i64 %203 to i8
  store i8 %215, i8* %98, align 1
  %216 = icmp eq i64 %203, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %214, %209
  %218 = phi i8* [ %212, %209 ], [ %93, %214 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %218, i8* align 1 %202, i64 %203, i1 false) #15
  br label %219

219:                                              ; preds = %214, %217
  %220 = phi i8* [ %93, %214 ], [ %218, %217 ]
  %221 = getelementptr inbounds i8, i8* %220, i64 %203
  store i8 0, i8* %221, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %13, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.59, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %14) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %201, i32 undef, %"class.SkSL::String"* nonnull %13)
  %222 = load i8, i8* %100, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %224, label %226

224:                                              ; preds = %219
  %225 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %225) #14
  br label %226

226:                                              ; preds = %219, %224
  %227 = load i8, i8* %98, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %226
  %230 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %230) #14
  br label %231

231:                                              ; preds = %226, %229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #15
  br label %255

232:                                              ; preds = %192
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #15
  store i32 19, i32* %15, align 4
  %233 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERlEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %86, i32* nonnull dereferenceable(4) %15, i64* nonnull dereferenceable(8) %12)
  %234 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %36, align 8
  %235 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %234, i64 0, i32 0, i32 0, i32 0
  %236 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %235, align 8
  %237 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %236, i64 %61, i32 5, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp sgt i32 %238, -1
  br i1 %239, label %240, label %247

240:                                              ; preds = %232
  %241 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %236, i64 %61, i32 0
  %242 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %241, align 8
  %243 = sext i32 %238 to i64
  %244 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %242, i64 0, i32 0, i32 0
  %245 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %244, align 8
  %246 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %245, i64 %243, i32 6, i32 0
  br label %249

247:                                              ; preds = %232
  %248 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %236, i64 %61, i32 4, i32 0
  br label %249

249:                                              ; preds = %240, %247
  %250 = phi i32* [ %246, %240 ], [ %248, %247 ]
  store i32 %233, i32* %250, align 4
  store i32 %233, i32* %237, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #15
  %251 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), %"struct.SkSL::Token"* null)
  %252 = zext i1 %251 to i8
  %253 = xor i1 %251, true
  %254 = zext i1 %253 to i32
  br label %255

255:                                              ; preds = %249, %231
  %256 = phi i8 [ 0, %231 ], [ %252, %249 ]
  %257 = phi i32 [ 1, %231 ], [ %254, %249 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %84) #15
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %103, label %274

259:                                              ; preds = %103, %140
  %260 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %36, align 8
  %261 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %260, i64 0, i32 0, i32 0, i32 0
  %262 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %261, align 8
  %263 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %262, i64 %61, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* nonnull align 8 %16, i64 72, i1 false)
  %264 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %262, i64 %61, i32 1, i32 0, i64 72
  %265 = bitcast i8* %264 to i32*
  store i32 %20, i32* %265, align 8
  %266 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %262, i64 %61, i32 1, i32 0, i64 76
  %267 = bitcast i8* %266 to i32*
  store i32 %25, i32* %267, align 4
  %268 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %262, i64 %61, i32 1, i32 0, i64 80
  %269 = bitcast i8* %268 to i8**
  store i8* %56, i8** %269, align 8
  %270 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %262, i64 %61, i32 1, i32 0, i64 88
  %271 = bitcast i8* %270 to i64*
  store i64 %57, i64* %271, align 8
  %272 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %262, i64 %61, i32 1, i32 0, i64 96
  store i8 %104, i8* %272, align 8
  %273 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %262, i64 %61, i32 1, i32 0, i64 97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %273, i8* nonnull align 1 %49, i64 7, i1 false)
  br label %274

274:                                              ; preds = %255, %191, %182, %259
  %275 = phi i32 [ %46, %259 ], [ -1, %182 ], [ -1, %191 ], [ -1, %255 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %49)
  br label %276

276:                                              ; preds = %28, %274
  %277 = phi i32 [ %275, %274 ], [ -1, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %29) #15
  br label %278

278:                                              ; preds = %1, %276
  %279 = phi i32 [ %277, %276 ], [ -1, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %17)
  ret i32 %279
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser5blockEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 4
  %4 = alloca %"class.SkSL::AutoDepth", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.SkSL::String", align 8
  %7 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  store i32 -1, i32* %10, align 4
  %11 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %11, label %12, label %166

12:                                               ; preds = %1
  %13 = bitcast %"class.SkSL::AutoDepth"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %4, i64 0, i32 1
  %16 = bitcast %"class.SkSL::AutoDepth"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %14, align 8
  store i32 0, i32* %15, align 8
  %17 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %4)
  br i1 %17, label %18, label %159

18:                                               ; preds = %12
  %19 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 1, i32* %5, align 4
  %20 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %21 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %21, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %21, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.SkSL::ASTNode"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"struct.SkSL::ASTFile"* %21 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = sdiv exact i64 %28, 160
  %30 = trunc i64 %29 to i32
  %31 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  store %"class.std::__1::vector.45"* %22, %"class.std::__1::vector.45"** %2, align 8
  %32 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %22, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %9, i32* nonnull dereferenceable(4) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  %33 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %34 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %35 = bitcast %"struct.SkSL::Token"* %34 to i64*
  %36 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %38 = shl i64 %29, 32
  %39 = ashr exact i64 %38, 32
  br label %40

40:                                               ; preds = %157, %18
  %41 = load i32, i32* %33, align 4
  %42 = icmp eq i32 %41, 87
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = load i64, i64* %35, align 4
  %45 = trunc i64 %44 to i32
  br label %76

46:                                               ; preds = %40
  %47 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %36) #15
  %48 = extractvalue { i64, i32 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = add i32 %49, -83
  %51 = icmp ult i32 %50, 3
  br i1 %51, label %54, label %52

52:                                               ; preds = %46
  %53 = extractvalue { i64, i32 } %47, 1
  br label %72

54:                                               ; preds = %46, %64
  %55 = load i32, i32* %33, align 4
  %56 = icmp eq i32 %55, 87
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i64, i64* %35, align 4
  %59 = load i32, i32* %37, align 4
  store i32 87, i32* %33, align 4
  br label %64

60:                                               ; preds = %54
  %61 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %36) #15
  %62 = extractvalue { i64, i32 } %61, 0
  %63 = extractvalue { i64, i32 } %61, 1
  br label %64

64:                                               ; preds = %60, %57
  %65 = phi i32 [ %59, %57 ], [ %63, %60 ]
  %66 = phi i64 [ %58, %57 ], [ %62, %60 ]
  %67 = trunc i64 %66 to i32
  %68 = add i32 %67, -83
  %69 = icmp ult i32 %68, 3
  br i1 %69, label %54, label %70

70:                                               ; preds = %64
  %71 = trunc i64 %66 to i32
  br label %72

72:                                               ; preds = %70, %52
  %73 = phi i32 [ %49, %52 ], [ %71, %70 ]
  %74 = phi i64 [ %48, %52 ], [ %66, %70 ]
  %75 = phi i32 [ %53, %52 ], [ %65, %70 ]
  store i64 %74, i64* %35, align 4
  store i32 %75, i32* %37, align 4
  br label %76

76:                                               ; preds = %43, %72
  %77 = phi i32 [ %45, %43 ], [ %73, %72 ]
  %78 = phi i64 [ %44, %43 ], [ %74, %72 ]
  %79 = trunc i64 %78 to i32
  switch i32 %79, label %138 [
    i32 39, label %80
    i32 0, label %102
  ]

80:                                               ; preds = %76
  %81 = icmp eq i32 %77, 87
  br i1 %81, label %83, label %82

82:                                               ; preds = %80
  store i32 87, i32* %33, align 4
  br label %159

83:                                               ; preds = %80
  %84 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %36) #15
  %85 = extractvalue { i64, i32 } %84, 0
  %86 = trunc i64 %85 to i32
  %87 = add i32 %86, -83
  %88 = icmp ult i32 %87, 3
  br i1 %88, label %89, label %159

89:                                               ; preds = %83, %97
  %90 = load i32, i32* %33, align 4
  %91 = icmp eq i32 %90, 87
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %35, align 4
  store i32 87, i32* %33, align 4
  br label %97

94:                                               ; preds = %89
  %95 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %36) #15
  %96 = extractvalue { i64, i32 } %95, 0
  br label %97

97:                                               ; preds = %94, %92
  %98 = phi i64 [ %93, %92 ], [ %96, %94 ]
  %99 = trunc i64 %98 to i32
  %100 = add i32 %99, -83
  %101 = icmp ult i32 %100, 3
  br i1 %101, label %89, label %159

102:                                              ; preds = %76
  %103 = icmp eq i32 %77, 87
  br i1 %103, label %104, label %131

104:                                              ; preds = %102
  %105 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %36) #15
  %106 = extractvalue { i64, i32 } %105, 0
  %107 = trunc i64 %106 to i32
  %108 = add i32 %107, -83
  %109 = icmp ult i32 %108, 3
  br i1 %109, label %112, label %110

110:                                              ; preds = %104
  %111 = extractvalue { i64, i32 } %105, 1
  br label %128

112:                                              ; preds = %104, %122
  %113 = load i32, i32* %33, align 4
  %114 = icmp eq i32 %113, 87
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = load i64, i64* %35, align 4
  %117 = load i32, i32* %37, align 4
  store i32 87, i32* %33, align 4
  br label %122

118:                                              ; preds = %112
  %119 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %36) #15
  %120 = extractvalue { i64, i32 } %119, 0
  %121 = extractvalue { i64, i32 } %119, 1
  br label %122

122:                                              ; preds = %118, %115
  %123 = phi i32 [ %117, %115 ], [ %121, %118 ]
  %124 = phi i64 [ %116, %115 ], [ %120, %118 ]
  %125 = trunc i64 %124 to i32
  %126 = add i32 %125, -83
  %127 = icmp ult i32 %126, 3
  br i1 %127, label %112, label %128

128:                                              ; preds = %122, %110
  %129 = phi i64 [ %106, %110 ], [ %124, %122 ]
  %130 = phi i32 [ %111, %110 ], [ %123, %122 ]
  store i64 %129, i64* %35, align 4
  store i32 %130, i32* %37, align 4
  br label %131

131:                                              ; preds = %128, %102
  %132 = phi i64 [ %129, %128 ], [ %78, %102 ]
  %133 = call i8* @_Znwm(i64 48) #14
  %134 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %133, i8** %134, align 8
  %135 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %136, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %133, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.83, i64 0, i64 0), i64 35, i1 false) #15
  %137 = getelementptr inbounds i8, i8* %133, i64 35
  store i8 0, i8* %137, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %132, i32 undef, %"class.SkSL::String"* nonnull %6)
  call void @_ZdlPv(i8* nonnull %133) #14
  br label %159

138:                                              ; preds = %76
  %139 = call i32 @_ZN4SkSL6Parser9statementEv(%"class.SkSL::Parser"* %0)
  %140 = icmp sgt i32 %139, -1
  br i1 %140, label %141, label %159

141:                                              ; preds = %138
  %142 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %20, align 8
  %143 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %143, align 8
  %145 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %39, i32 5, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = icmp sgt i32 %146, -1
  br i1 %147, label %148, label %155

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %39, i32 0
  %150 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %149, align 8
  %151 = sext i32 %146 to i64
  %152 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %150, i64 0, i32 0, i32 0
  %153 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %152, align 8
  %154 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %153, i64 %151, i32 6, i32 0
  br label %157

155:                                              ; preds = %141
  %156 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %39, i32 4, i32 0
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32* [ %156, %155 ], [ %154, %148 ]
  store i32 %139, i32* %158, align 4
  store i32 %139, i32* %145, align 8
  br label %40

159:                                              ; preds = %138, %97, %82, %83, %131, %12
  %160 = phi i32 [ -1, %12 ], [ -1, %131 ], [ %30, %83 ], [ %30, %82 ], [ %30, %97 ], [ -1, %138 ]
  %161 = load i32, i32* %15, align 8
  %162 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %14, align 8
  %163 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %162, i64 0, i32 2
  %164 = load i32, i32* %163, align 8
  %165 = sub nsw i32 %164, %161
  store i32 %165, i32* %163, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br label %166

166:                                              ; preds = %1, %159
  %167 = phi i32 [ %160, %159 ], [ -1, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #15
  ret i32 %167
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser36varDeclarationsOrExpressionStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Modifiers", align 8
  %3 = alloca %"struct.SkSL::Parser::VarDeclarationsPrefix", align 8
  %4 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 87
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %9 = bitcast %"struct.SkSL::Token"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %12 = load i32, i32* %11, align 4
  br label %48

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %15 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %14) #15
  %16 = extractvalue { i64, i32 } %15, 0
  %17 = trunc i64 %16 to i32
  %18 = add i32 %17, -83
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = extractvalue { i64, i32 } %15, 1
  br label %42

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %24 = bitcast %"struct.SkSL::Token"* %23 to i64*
  %25 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %26

26:                                               ; preds = %36, %22
  %27 = load i32, i32* %4, align 4
  %28 = icmp eq i32 %27, 87
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = load i64, i64* %24, align 4
  %31 = load i32, i32* %25, align 4
  store i32 87, i32* %4, align 4
  br label %36

32:                                               ; preds = %26
  %33 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %14) #15
  %34 = extractvalue { i64, i32 } %33, 0
  %35 = extractvalue { i64, i32 } %33, 1
  br label %36

36:                                               ; preds = %32, %29
  %37 = phi i32 [ %31, %29 ], [ %35, %32 ]
  %38 = phi i64 [ %30, %29 ], [ %34, %32 ]
  %39 = trunc i64 %38 to i32
  %40 = add i32 %39, -83
  %41 = icmp ult i32 %40, 3
  br i1 %41, label %26, label %42

42:                                               ; preds = %36, %20
  %43 = phi i64 [ %16, %20 ], [ %38, %36 ]
  %44 = phi i32 [ %21, %20 ], [ %37, %36 ]
  %45 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %46 = bitcast %"struct.SkSL::Token"* %45 to i64*
  store i64 %43, i64* %46, align 4
  %47 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %44, i32* %47, align 4
  br label %48

48:                                               ; preds = %7, %42
  %49 = phi i32 [ %12, %7 ], [ %44, %42 ]
  %50 = phi i64 [ %10, %7 ], [ %43, %42 ]
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %51, 23
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = tail call i32 @_ZN4SkSL6Parser15varDeclarationsEv(%"class.SkSL::Parser"* %0)
  br label %152

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = ashr i64 %50, 32
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = sext i32 %49 to i64
  %61 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 4
  %62 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %61, align 8
  %63 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %62, i8* %59, i64 %60) #15
  %64 = icmp eq %"class.SkSL::Symbol"* %63, null
  br i1 %64, label %146, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %63, i64 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 13
  br i1 %68, label %69, label %146

69:                                               ; preds = %65
  %70 = load i32, i32* %4, align 4
  %71 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %78 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %77, align 8
  %79 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %78, i64 0, i32 0, i32 0, i32 1
  %80 = bitcast %"struct.SkSL::ASTNode"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"struct.SkSL::ASTFile"* %78 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = sdiv exact i64 %84, 160
  %86 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 5
  %87 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %86, align 8
  %88 = bitcast %"class.SkSL::ErrorReporter"* %87 to i32 (%"class.SkSL::ErrorReporter"*)***
  %89 = load i32 (%"class.SkSL::ErrorReporter"*)**, i32 (%"class.SkSL::ErrorReporter"*)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %89, i64 3
  %91 = load i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %90, align 8
  %92 = tail call i32 %91(%"class.SkSL::ErrorReporter"* %87) #15
  %93 = bitcast %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %93) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 80, i1 false)
  %94 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 12, i32 0
  %97 = bitcast i32* %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 -1, i64 40, i1 false) #15
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), i8** %96, align 8
  %98 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 12, i32 1
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 13
  store i32 0, i32* %99, align 8
  %100 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %100, align 8
  %101 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 1, i32 0
  %102 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 2, i32 0
  store i32 87, i32* %102, align 4
  %103 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 2, i32 1
  store i32 -1, i32* %103, align 4
  %104 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 2, i32 2
  store i32 -1, i32* %104, align 4
  %105 = bitcast %"struct.SkSL::Modifiers"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %105) #15
  call void @_ZN4SkSL6Parser9modifiersEv(%"struct.SkSL::Modifiers"* nonnull sret %2, %"class.SkSL::Parser"* %0) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* nonnull align 8 %105, i64 76, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %105) #15
  %106 = tail call i32 @_ZN4SkSL6Parser4typeEv(%"class.SkSL::Parser"* %0) #15
  store i32 %106, i32* %101, align 8
  %107 = icmp sgt i32 %106, -1
  br i1 %107, label %108, label %111

108:                                              ; preds = %69
  %109 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 2
  %110 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* %109) #15
  br i1 %110, label %135, label %111

111:                                              ; preds = %69, %108
  store i32 %70, i32* %4, align 4
  store i32 %72, i32* %71, align 4
  store i32 %74, i32* %73, align 4
  store i32 %76, i32* %75, align 4
  %112 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %77, align 8
  %113 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %112, i64 0, i32 0, i32 0, i32 1
  %114 = bitcast %"struct.SkSL::ASTNode"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"struct.SkSL::ASTFile"* %112 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 %115, %117
  %119 = sdiv exact i64 %118, 160
  %120 = icmp ugt i64 %85, %119
  %121 = inttoptr i64 %117 to %"struct.SkSL::ASTNode"*
  br i1 %120, label %122, label %125

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %112, i64 0, i32 0
  %124 = sub nsw i64 %85, %119
  call void @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.45"* %123, i64 %124) #15
  br label %129

125:                                              ; preds = %111
  %126 = icmp ult i64 %85, %119
  br i1 %126, label %127, label %129

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %121, i64 %85
  store %"struct.SkSL::ASTNode"* %128, %"struct.SkSL::ASTNode"** %113, align 8
  br label %129

129:                                              ; preds = %127, %125, %122
  %130 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %86, align 8
  %131 = bitcast %"class.SkSL::ErrorReporter"* %130 to void (%"class.SkSL::ErrorReporter"*, i32)***
  %132 = load void (%"class.SkSL::ErrorReporter"*, i32)**, void (%"class.SkSL::ErrorReporter"*, i32)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32)*, void (%"class.SkSL::ErrorReporter"*, i32)** %132, i64 4
  %134 = load void (%"class.SkSL::ErrorReporter"*, i32)*, void (%"class.SkSL::ErrorReporter"*, i32)** %133, align 8
  call void %134(%"class.SkSL::ErrorReporter"* %130, i32 %92) #15
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %93) #15
  br label %146

135:                                              ; preds = %108
  %136 = load i32, i32* %101, align 8
  %137 = bitcast %"struct.SkSL::Token"* %109 to i64*
  %138 = load i64, i64* %137, align 4
  %139 = load i32, i32* %104, align 4
  %140 = load i8*, i8** %56, align 8
  %141 = ashr i64 %138, 32
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = sext i32 %139 to i64
  %144 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0
  %145 = call i32 @_ZN4SkSL6Parser17varDeclarationEndENS_9ModifiersENS_7ASTNode2IDENS_14StringFragmentE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Modifiers"* nonnull byval(%"struct.SkSL::Modifiers") align 8 %144, i32 %136, i8* %142, i64 %143)
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %93) #15
  br label %152

146:                                              ; preds = %55, %129, %65
  %147 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0) #15
  %148 = icmp sgt i32 %147, -1
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null) #15
  br i1 %150, label %152, label %151

151:                                              ; preds = %149, %146
  br label %152

152:                                              ; preds = %151, %149, %135, %53
  %153 = phi i32 [ %54, %53 ], [ %145, %135 ], [ -1, %151 ], [ %147, %149 ]
  ret i32 %153
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser15varDeclarationsEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Modifiers", align 8
  %3 = alloca %"struct.SkSL::Parser::VarDeclarationsPrefix", align 8
  %4 = bitcast %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 80, i1 false)
  %5 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 12, i32 0
  %8 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 -1, i64 40, i1 false) #15
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), i8** %7, align 8
  %9 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 12, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 0, i32 13
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 2, i32 0
  store i32 87, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 2, i32 1
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 2, i32 2
  store i32 -1, i32* %15, align 4
  %16 = bitcast %"struct.SkSL::Modifiers"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %16) #15
  call void @_ZN4SkSL6Parser9modifiersEv(%"struct.SkSL::Modifiers"* nonnull sret %2, %"class.SkSL::Parser"* %0) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %16, i64 76, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %16) #15
  %17 = tail call i32 @_ZN4SkSL6Parser4typeEv(%"class.SkSL::Parser"* %0) #15
  store i32 %17, i32* %12, align 8
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %19, label %34

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 2
  %21 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* %20) #15
  br i1 %21, label %22, label %34

22:                                               ; preds = %19
  %23 = load i32, i32* %12, align 8
  %24 = bitcast %"struct.SkSL::Token"* %20 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = load i32, i32* %15, align 4
  %27 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = ashr i64 %25, 32
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %3, i64 0, i32 0
  %33 = call i32 @_ZN4SkSL6Parser17varDeclarationEndENS_9ModifiersENS_7ASTNode2IDENS_14StringFragmentE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Modifiers"* nonnull byval(%"struct.SkSL::Modifiers") align 8 %32, i32 %23, i8* %30, i64 %31)
  br label %34

34:                                               ; preds = %1, %19, %22
  %35 = phi i32 [ %33, %22 ], [ -1, %19 ], [ -1, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #15
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser21varDeclarationsPrefixEPNS0_21VarDeclarationsPrefixE(%"class.SkSL::Parser"*, %"struct.SkSL::Parser::VarDeclarationsPrefix"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::Modifiers", align 8
  %4 = bitcast %"struct.SkSL::Modifiers"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #15
  call void @_ZN4SkSL6Parser9modifiersEv(%"struct.SkSL::Modifiers"* nonnull sret %3, %"class.SkSL::Parser"* %0)
  %5 = bitcast %"struct.SkSL::Parser::VarDeclarationsPrefix"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* nonnull align 8 %4, i64 76, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #15
  %6 = tail call i32 @_ZN4SkSL6Parser4typeEv(%"class.SkSL::Parser"* %0)
  %7 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %1, i64 0, i32 1, i32 0
  store i32 %6, i32* %7, align 8
  %8 = icmp sgt i32 %6, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.SkSL::Parser::VarDeclarationsPrefix", %"struct.SkSL::Parser::VarDeclarationsPrefix"* %1, i64 0, i32 2
  %11 = tail call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* %10)
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i1 [ %11, %9 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser19expressionStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %3 = icmp sgt i32 %2, -1
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %5, label %7, label %6

6:                                                ; preds = %4, %1
  br label %7

7:                                                ; preds = %4, %6
  %8 = phi i32 [ -1, %6 ], [ %2, %4 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser17structDeclarationEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca [15 x i8], align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.std::__1::unique_ptr.19", align 8
  %11 = alloca %"struct.SkSL::Token", align 8
  %12 = alloca %"class.std::__1::vector.62", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"struct.SkSL::Modifiers", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.std::__1::vector.62", align 16
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 29, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %29, label %30, label %924

30:                                               ; preds = %1
  %31 = bitcast %"struct.SkSL::Token"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %11, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %11, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %11, i64 0, i32 2
  store i32 87, i32* %32, align 8
  store i32 -1, i32* %33, align 4
  store i32 -1, i32* %34, align 8
  %35 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %11)
  br i1 %35, label %36, label %922

36:                                               ; preds = %30
  %37 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %37, label %38, label %922

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector.62"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %12, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %12, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #15
  %43 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %44 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %45 = bitcast %"struct.SkSL::Token"* %44 to i64*
  %46 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %47 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %48 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %49 = bitcast %"class.SkSL::String"* %13 to i8*
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = bitcast %"class.SkSL::String"* %15 to i8*
  %55 = bitcast %"class.SkSL::String"* %9 to i8*
  %56 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 5
  %57 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = bitcast %"class.SkSL::String"* %14 to i8*
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0
  %61 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 4
  %70 = bitcast %"class.SkSL::String"* %17 to i8*
  %71 = bitcast %"class.SkSL::String"* %18 to i8*
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %74 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = bitcast %"class.SkSL::String"* %7 to i8*
  %78 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = bitcast %"class.SkSL::String"* %16 to i8*
  %81 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0
  %82 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = bitcast %"struct.SkSL::Modifiers"* %20 to i8*
  %91 = bitcast %"struct.SkSL::Type::Field"** %41 to i64*
  %92 = bitcast %"class.std::__1::vector.62"* %12 to i64*
  %93 = bitcast %"struct.SkSL::Type::Field"** %42 to i64*
  %94 = bitcast %"class.SkSL::String"* %3 to i8*
  %95 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %96 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.SkSL::String"* %13 to i8*
  %100 = bitcast %"struct.SkSL::Modifiers"* %20 to i8*
  br label %101

101:                                              ; preds = %299, %38
  %102 = load i32, i32* %43, align 4
  %103 = icmp eq i32 %102, 87
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = load i64, i64* %45, align 4
  br label %133

106:                                              ; preds = %101
  %107 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %46) #15
  %108 = extractvalue { i64, i32 } %107, 0
  %109 = trunc i64 %108 to i32
  %110 = add i32 %109, -83
  %111 = icmp ult i32 %110, 3
  br i1 %111, label %114, label %112

112:                                              ; preds = %106
  %113 = extractvalue { i64, i32 } %107, 1
  br label %130

114:                                              ; preds = %106, %124
  %115 = load i32, i32* %43, align 4
  %116 = icmp eq i32 %115, 87
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = load i64, i64* %45, align 4
  %119 = load i32, i32* %47, align 4
  store i32 87, i32* %43, align 4
  br label %124

120:                                              ; preds = %114
  %121 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %46) #15
  %122 = extractvalue { i64, i32 } %121, 0
  %123 = extractvalue { i64, i32 } %121, 1
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi i32 [ %119, %117 ], [ %123, %120 ]
  %126 = phi i64 [ %118, %117 ], [ %122, %120 ]
  %127 = trunc i64 %126 to i32
  %128 = add i32 %127, -83
  %129 = icmp ult i32 %128, 3
  br i1 %129, label %114, label %130

130:                                              ; preds = %124, %112
  %131 = phi i64 [ %108, %112 ], [ %126, %124 ]
  %132 = phi i32 [ %113, %112 ], [ %125, %124 ]
  store i64 %131, i64* %45, align 4
  store i32 %132, i32* %47, align 4
  br label %133

133:                                              ; preds = %104, %130
  %134 = phi i64 [ %105, %104 ], [ %131, %130 ]
  %135 = trunc i64 %134 to i32
  %136 = icmp eq i32 %135, 39
  br i1 %136, label %479, label %137

137:                                              ; preds = %133
  %138 = call i32 @_ZN4SkSL6Parser15varDeclarationsEv(%"class.SkSL::Parser"* %0)
  %139 = icmp sgt i32 %138, -1
  br i1 %139, label %140, label %914

140:                                              ; preds = %137
  %141 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %48, align 8
  %142 = sext i32 %138 to i64
  %143 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %141, i64 0, i32 0, i32 0, i32 0
  %144 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %143, align 8
  %145 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %142, i32 0
  %146 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %145, align 8
  %147 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %142, i32 4, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %146, i64 0, i32 0, i32 0
  %151 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %150, align 8
  %152 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %151, i64 %149, i32 1, i32 0, i64 0
  %153 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %151, i64 %149, i32 1, i32 0, i64 72
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %212, label %157

157:                                              ; preds = %140
  %158 = bitcast i8* %152 to %"struct.SkSL::Modifiers"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 24, i1 false)
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %13, %"struct.SkSL::Modifiers"* %158)
  %159 = load i8, i8* %53, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %166

161:                                              ; preds = %157
  %162 = load i64, i64* %51, align 8
  %163 = add i64 %162, -1
  store i64 %163, i64* %51, align 8
  %164 = load i8*, i8** %50, align 8
  %165 = getelementptr inbounds i8, i8* %164, i64 %163
  br label %171

166:                                              ; preds = %157
  %167 = zext i8 %159 to i64
  %168 = add nsw i64 %167, -1
  %169 = trunc i64 %168 to i8
  store i8 %169, i8* %53, align 1
  %170 = getelementptr inbounds i8, i8* %49, i64 %168
  br label %171

171:                                              ; preds = %161, %166
  %172 = phi i8* [ %165, %161 ], [ %170, %166 ]
  store i8 0, i8* %172, align 1
  %173 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %142, i32 2
  %174 = load i32, i32* %173, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %13) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.47, i64 0, i64 0)) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %175 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %56, align 8
  %176 = load i8, i8* %58, align 1
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* nonnull align 8 %59, i64 24, i1 false) #15
  br label %182

179:                                              ; preds = %171
  %180 = load i8*, i8** %61, align 8
  %181 = load i64, i64* %62, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %60, i8* %180, i64 %181) #15
  br label %182

182:                                              ; preds = %179, %178
  %183 = bitcast %"class.SkSL::ErrorReporter"* %175 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %184 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %184, i64 2
  %186 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %185, align 8
  call void %186(%"class.SkSL::ErrorReporter"* %175, i32 %174, %"class.SkSL::String"* nonnull %9) #15
  %187 = load i8, i8* %64, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %182
  %190 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %190) #14
  br label %191

191:                                              ; preds = %182, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  %192 = load i8, i8* %58, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %191
  %195 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %195) #14
  br label %196

196:                                              ; preds = %191, %194
  %197 = load i8, i8* %67, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %201

199:                                              ; preds = %196
  %200 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %200) #14
  br label %201

201:                                              ; preds = %196, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #15
  %202 = load i8, i8* %53, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %201
  %205 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %205) #14
  br label %206

206:                                              ; preds = %201, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #15
  %207 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %145, align 8
  %208 = load i32, i32* %147, align 4
  %209 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %207, i64 0, i32 0, i32 0
  %210 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %209, align 8
  %211 = sext i32 %208 to i64
  br label %212

212:                                              ; preds = %140, %206
  %213 = phi i64 [ %149, %140 ], [ %211, %206 ]
  %214 = phi %"struct.SkSL::ASTNode"* [ %151, %140 ], [ %210, %206 ]
  %215 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %69, align 8
  %216 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %214, i64 %213, i32 6, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %214, i64 %218, i32 1, i32 0, i64 0
  %220 = bitcast i8* %219 to i8**
  %221 = load i8*, i8** %220, align 8
  %222 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %214, i64 %218, i32 1, i32 0, i64 8
  %223 = bitcast i8* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %215, i8* %221, i64 %224) #15
  %226 = bitcast %"class.SkSL::Symbol"* %225 to %"class.SkSL::Type"*
  %227 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %225, i64 1, i32 2
  %228 = bitcast %"class.SkSL::Type"** %227 to i32*
  %229 = load i32, i32* %228, align 8
  switch i32 %229, label %287 [
    i32 13, label %230
    i32 2, label %230
    i32 5, label %230
    i32 6, label %230
    i32 7, label %230
    i32 14, label %230
    i32 10, label %230
    i32 12, label %230
  ]

230:                                              ; preds = %212, %212, %212, %212, %212, %212, %212, %212
  %231 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %142, i32 2
  %232 = load i32, i32* %231, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #15
  %233 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %225, i64 0, i32 1, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %225, i64 0, i32 1, i32 1
  %236 = load i64, i64* %235, align 8
  %237 = icmp ugt i64 %236, -17
  br i1 %237, label %238, label %240

238:                                              ; preds = %230
  %239 = bitcast %"class.SkSL::String"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %239) #16
  unreachable

240:                                              ; preds = %230
  %241 = icmp ult i64 %236, 23
  br i1 %241, label %247, label %242

242:                                              ; preds = %240
  %243 = add nuw i64 %236, 16
  %244 = and i64 %243, -16
  %245 = call i8* @_Znwm(i64 %244) #14
  store i8* %245, i8** %72, align 8
  %246 = or i64 %244, -9223372036854775808
  store i64 %246, i64* %73, align 8
  store i64 %236, i64* %74, align 8
  br label %250

247:                                              ; preds = %240
  %248 = trunc i64 %236 to i8
  store i8 %248, i8* %76, align 1
  %249 = icmp eq i64 %236, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %247, %242
  %251 = phi i8* [ %245, %242 ], [ %71, %247 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %251, i8* align 1 %234, i64 %236, i1 false) #15
  br label %252

252:                                              ; preds = %247, %250
  %253 = phi i8* [ %71, %247 ], [ %251, %250 ]
  %254 = getelementptr inbounds i8, i8* %253, i64 %236
  store i8 0, i8* %254, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %18) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.49, i64 0, i64 0)) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77)
  %255 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %56, align 8
  %256 = load i8, i8* %79, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %259, label %258

258:                                              ; preds = %252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* nonnull align 8 %80, i64 24, i1 false) #15
  br label %262

259:                                              ; preds = %252
  %260 = load i8*, i8** %82, align 8
  %261 = load i64, i64* %83, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %81, i8* %260, i64 %261) #15
  br label %262

262:                                              ; preds = %259, %258
  %263 = bitcast %"class.SkSL::ErrorReporter"* %255 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %264 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %263, align 8
  %265 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %264, i64 2
  %266 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %265, align 8
  call void %266(%"class.SkSL::ErrorReporter"* %255, i32 %232, %"class.SkSL::String"* nonnull %7) #15
  %267 = load i8, i8* %85, align 1
  %268 = icmp slt i8 %267, 0
  br i1 %268, label %269, label %271

269:                                              ; preds = %262
  %270 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %270) #14
  br label %271

271:                                              ; preds = %262, %269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77)
  %272 = load i8, i8* %79, align 1
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %271
  %275 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %275) #14
  br label %276

276:                                              ; preds = %271, %274
  %277 = load i8, i8* %88, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %280) #14
  br label %281

281:                                              ; preds = %276, %279
  %282 = load i8, i8* %76, align 1
  %283 = icmp slt i8 %282, 0
  br i1 %283, label %284, label %286

284:                                              ; preds = %281
  %285 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %285) #14
  br label %286

286:                                              ; preds = %281, %284
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #15
  br label %287

287:                                              ; preds = %212, %286
  %288 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %145, align 8
  %289 = load i32, i32* %147, align 4
  %290 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %288, i64 0, i32 0, i32 0
  %291 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %290, align 8
  %292 = sext i32 %289 to i64
  %293 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %291, i64 %292, i32 6, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %291, i64 %295, i32 6, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = icmp sgt i32 %297, -1
  br i1 %298, label %300, label %299

299:                                              ; preds = %474, %287
  br label %101

300:                                              ; preds = %287
  %301 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %142, i32 2
  br label %302

302:                                              ; preds = %300, %474
  %303 = phi %"struct.SkSL::ASTNode"* [ %291, %300 ], [ %475, %474 ]
  %304 = phi %"class.SkSL::Type"* [ %226, %300 ], [ %373, %474 ]
  %305 = phi i32 [ %297, %300 ], [ %477, %474 ]
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %303, i64 %306
  %308 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %303, i64 %306, i32 1, i32 0, i64 0
  %309 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %303, i64 %306, i32 1, i32 0, i64 16
  %310 = load i8, i8* %309, align 8, !range !6
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %372, label %312

312:                                              ; preds = %302
  %313 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %307, i64 0, i32 0
  %314 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %313, align 8
  %315 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %303, i64 %306, i32 4, i32 0
  %316 = load i32, i32* %315, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %314, i64 0, i32 0, i32 0
  %319 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %318, align 8
  %320 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %319, i64 %317, i32 3
  %321 = load i32, i32* %320, align 8
  %322 = icmp eq i32 %321, 19
  br i1 %322, label %342, label %323

323:                                              ; preds = %312
  %324 = load i32, i32* %301, align 4
  %325 = call i8* @_Znwm(i64 48) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %325, i8* align 1 getelementptr inbounds ([46 x i8], [46 x i8]* @.str.50, i64 0, i64 0), i64 45, i1 false) #15
  %326 = getelementptr inbounds i8, i8* %325, i64 45
  store i8 0, i8* %326, align 1
  %327 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %327)
  %328 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %56, align 8
  %329 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %329, i8* nonnull %325, i64 45) #15
  %330 = bitcast %"class.SkSL::ErrorReporter"* %328 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %331 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %330, align 8
  %332 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %331, i64 2
  %333 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %332, align 8
  call void %333(%"class.SkSL::ErrorReporter"* %328, i32 %324, %"class.SkSL::String"* nonnull %5) #15
  %334 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %335 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %334, i64 0, i32 1, i32 0
  %336 = load i8, i8* %335, align 1
  %337 = icmp slt i8 %336, 0
  br i1 %337, label %338, label %341

338:                                              ; preds = %323
  %339 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load i8*, i8** %339, align 8
  call void @_ZdlPv(i8* %340) #14
  br label %341

341:                                              ; preds = %338, %323
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %327)
  call void @_ZdlPv(i8* nonnull %325) #14
  br label %914

342:                                              ; preds = %312
  %343 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %319, i64 %317, i32 1, i32 0, i64 0
  %344 = bitcast i8* %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = add i64 %345, -1
  %347 = icmp ugt i64 %346, 2147483646
  br i1 %347, label %348, label %368

348:                                              ; preds = %342
  %349 = load i32, i32* %301, align 4
  %350 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %351 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %350, i64 0, i32 1, i32 0
  store i8 21, i8* %351, align 1
  %352 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %352, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0), i64 21, i1 false) #15
  %353 = getelementptr inbounds i8, i8* %352, i64 21
  store i8 0, i8* %353, align 1
  %354 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354)
  %355 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %56, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %354, i8* nonnull align 8 %352, i64 24, i1 false) #15
  %356 = bitcast %"class.SkSL::ErrorReporter"* %355 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %357 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %356, align 8
  %358 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %357, i64 2
  %359 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %358, align 8
  call void %359(%"class.SkSL::ErrorReporter"* %355, i32 %349, %"class.SkSL::String"* nonnull %4) #15
  %360 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %361 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %360, i64 0, i32 1, i32 0
  %362 = load i8, i8* %361, align 1
  %363 = icmp slt i8 %362, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %348
  %365 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  call void @_ZdlPv(i8* %366) #14
  br label %367

367:                                              ; preds = %348, %364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354)
  br label %914

368:                                              ; preds = %342
  %369 = trunc i64 %345 to i32
  %370 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %69, align 8
  %371 = call %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"* %370, %"class.SkSL::Type"* %304, i32 %369) #15
  br label %372

372:                                              ; preds = %368, %302
  %373 = phi %"class.SkSL::Type"* [ %371, %368 ], [ %304, %302 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %90)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* align 8 %152, i64 80, i1 false)
  %374 = bitcast i8* %308 to i64*
  %375 = load i64, i64* %374, align 8
  %376 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %303, i64 %306, i32 1, i32 0, i64 8
  %377 = bitcast i8* %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = ptrtoint %"class.SkSL::Type"* %373 to i64
  %380 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %41, align 8
  %381 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %42, align 8
  %382 = icmp ult %"struct.SkSL::Type::Field"* %380, %381
  %383 = ptrtoint %"struct.SkSL::Type::Field"* %381 to i64
  br i1 %382, label %384, label %393

384:                                              ; preds = %372
  %385 = bitcast %"struct.SkSL::Type::Field"* %380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %385, i8* nonnull align 8 %90, i64 80, i1 false)
  %386 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %380, i64 0, i32 1, i32 0
  %387 = bitcast i8** %386 to i64*
  store i64 %375, i64* %387, align 8
  %388 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %380, i64 0, i32 1, i32 1
  store i64 %378, i64* %388, align 8
  %389 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %380, i64 0, i32 2
  %390 = bitcast %"class.SkSL::Type"** %389 to i64*
  store i64 %379, i64* %390, align 8
  %391 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %380, i64 1
  %392 = ptrtoint %"struct.SkSL::Type::Field"* %391 to i64
  store i64 %392, i64* %91, align 8
  br label %441

393:                                              ; preds = %372
  %394 = ptrtoint %"struct.SkSL::Type::Field"* %380 to i64
  %395 = load i64, i64* %92, align 8
  %396 = sub i64 %394, %395
  %397 = sdiv exact i64 %396, 104
  %398 = add nsw i64 %397, 1
  %399 = icmp ugt i64 %398, 177372539170284150
  br i1 %399, label %400, label %402

400:                                              ; preds = %393
  %401 = bitcast %"class.std::__1::vector.62"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %401) #16
  unreachable

402:                                              ; preds = %393
  %403 = sub i64 %383, %395
  %404 = sdiv exact i64 %403, 104
  %405 = icmp ult i64 %404, 88686269585142075
  br i1 %405, label %406, label %411

406:                                              ; preds = %402
  %407 = shl nsw i64 %404, 1
  %408 = icmp ult i64 %407, %398
  %409 = select i1 %408, i64 %398, i64 %407
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %416, label %411

411:                                              ; preds = %406, %402
  %412 = phi i64 [ %409, %406 ], [ 177372539170284150, %402 ]
  %413 = mul i64 %412, 104
  %414 = call i8* @_Znwm(i64 %413) #14
  %415 = bitcast i8* %414 to %"struct.SkSL::Type::Field"*
  br label %416

416:                                              ; preds = %411, %406
  %417 = phi i64 [ %412, %411 ], [ 0, %406 ]
  %418 = phi %"struct.SkSL::Type::Field"* [ %415, %411 ], [ null, %406 ]
  %419 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %418, i64 %397
  %420 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %418, i64 %417
  %421 = ptrtoint %"struct.SkSL::Type::Field"* %420 to i64
  %422 = bitcast %"struct.SkSL::Type::Field"* %419 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %422, i8* nonnull align 8 %90, i64 80, i1 false)
  %423 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %418, i64 %397, i32 1, i32 0
  %424 = bitcast i8** %423 to i64*
  store i64 %375, i64* %424, align 8
  %425 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %418, i64 %397, i32 1, i32 1
  store i64 %378, i64* %425, align 8
  %426 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %418, i64 %397, i32 2
  %427 = bitcast %"class.SkSL::Type"** %426 to i64*
  store i64 %379, i64* %427, align 8
  %428 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %419, i64 1
  %429 = ptrtoint %"struct.SkSL::Type::Field"* %428 to i64
  %430 = sdiv exact i64 %396, -104
  %431 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %419, i64 %430
  %432 = ptrtoint %"struct.SkSL::Type::Field"* %431 to i64
  %433 = icmp sgt i64 %396, 0
  br i1 %433, label %434, label %437

434:                                              ; preds = %416
  %435 = bitcast %"struct.SkSL::Type::Field"* %431 to i8*
  %436 = inttoptr i64 %395 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %435, i8* align 8 %436, i64 %396, i1 false) #15
  br label %437

437:                                              ; preds = %434, %416
  store i64 %432, i64* %92, align 8
  store i64 %429, i64* %91, align 8
  store i64 %421, i64* %93, align 8
  %438 = icmp eq i64 %395, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %437
  %440 = inttoptr i64 %395 to i8*
  call void @_ZdlPv(i8* %440) #14
  br label %441

441:                                              ; preds = %384, %437, %439
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %90)
  %442 = load i8, i8* %309, align 8, !range !6
  %443 = icmp eq i8 %442, 0
  br i1 %443, label %453, label %444

444:                                              ; preds = %441
  %445 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %307, i64 0, i32 0
  %446 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %445, align 8
  %447 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %303, i64 %306, i32 4, i32 0
  %448 = load i32, i32* %447, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %446, i64 0, i32 0, i32 0
  %451 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %450, align 8
  %452 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %451, i64 %449, i32 6
  br label %455

453:                                              ; preds = %441
  %454 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %303, i64 %306, i32 4
  br label %455

455:                                              ; preds = %453, %444
  %456 = phi %"class.SkSL::ASTNode::ID"* [ %452, %444 ], [ %454, %453 ]
  %457 = getelementptr inbounds %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID"* %456, i64 0, i32 0
  %458 = load i32, i32* %457, align 4
  %459 = icmp sgt i32 %458, -1
  br i1 %459, label %460, label %474

460:                                              ; preds = %455
  %461 = load i32, i32* %301, align 4
  %462 = call i8* @_Znwm(i64 48) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %462, i8* align 1 getelementptr inbounds ([48 x i8], [48 x i8]* @.str.52, i64 0, i64 0), i64 47, i1 false) #15
  %463 = getelementptr inbounds i8, i8* %462, i64 47
  store i8 0, i8* %463, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94)
  %464 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %56, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %95, i8* nonnull %462, i64 47) #15
  %465 = bitcast %"class.SkSL::ErrorReporter"* %464 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %466 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %465, align 8
  %467 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %466, i64 2
  %468 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %467, align 8
  call void %468(%"class.SkSL::ErrorReporter"* %464, i32 %461, %"class.SkSL::String"* nonnull %3) #15
  %469 = load i8, i8* %97, align 1
  %470 = icmp slt i8 %469, 0
  br i1 %470, label %471, label %473

471:                                              ; preds = %460
  %472 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %472) #14
  br label %473

473:                                              ; preds = %471, %460
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94)
  call void @_ZdlPv(i8* nonnull %462) #14
  br label %474

474:                                              ; preds = %455, %473
  %475 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %290, align 8
  %476 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %475, i64 %306, i32 6, i32 0
  %477 = load i32, i32* %476, align 4
  %478 = icmp sgt i32 %477, -1
  br i1 %478, label %302, label %299

479:                                              ; preds = %133
  %480 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %480, label %481, label %914

481:                                              ; preds = %479
  %482 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %40, align 8
  %483 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %41, align 8
  %484 = icmp eq %"struct.SkSL::Type::Field"* %482, %483
  %485 = load i32, i32* %33, align 4
  %486 = ptrtoint %"struct.SkSL::Type::Field"* %483 to i64
  %487 = ptrtoint %"struct.SkSL::Type::Field"* %482 to i64
  br i1 %484, label %488, label %571

488:                                              ; preds = %481
  %489 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %489) #15
  %490 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %490) #15
  %491 = bitcast %"struct.SkSL::Token"* %11 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = load i32, i32* %34, align 8
  %494 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %495 = load i8*, i8** %494, align 8
  %496 = ashr i64 %492, 32
  %497 = getelementptr inbounds i8, i8* %495, i64 %496
  %498 = sext i32 %493 to i64
  %499 = icmp ugt i32 %493, -17
  br i1 %499, label %500, label %502

500:                                              ; preds = %488
  %501 = bitcast %"class.SkSL::String"* %23 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %501) #16
  unreachable

502:                                              ; preds = %488
  %503 = icmp ult i32 %493, 23
  br i1 %503, label %512, label %504

504:                                              ; preds = %502
  %505 = add nuw nsw i64 %498, 16
  %506 = and i64 %505, -16
  %507 = call i8* @_Znwm(i64 %506) #14
  %508 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %507, i8** %508, align 8
  %509 = or i64 %506, -9223372036854775808
  %510 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %498, i64* %511, align 8
  br label %517

512:                                              ; preds = %502
  %513 = trunc i32 %493 to i8
  %514 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %515 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %514, i64 0, i32 1, i32 0
  store i8 %513, i8* %515, align 1
  %516 = icmp eq i32 %493, 0
  br i1 %516, label %519, label %517

517:                                              ; preds = %512, %504
  %518 = phi i8* [ %507, %504 ], [ %490, %512 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %518, i8* align 1 %497, i64 %498, i1 false) #15
  br label %519

519:                                              ; preds = %512, %517
  %520 = phi i8* [ %490, %512 ], [ %518, %517 ]
  %521 = getelementptr inbounds i8, i8* %520, i64 %498
  store i8 0, i8* %521, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %22, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %23) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %21, %"class.SkSL::String"* nonnull %22, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.55, i64 0, i64 0)) #15
  %522 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %522)
  %523 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %56, align 8
  %524 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %525 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %524, i64 0, i32 1, i32 0
  %526 = load i8, i8* %525, align 1
  %527 = icmp slt i8 %526, 0
  br i1 %527, label %530, label %528

528:                                              ; preds = %519
  %529 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %522, i8* nonnull align 8 %529, i64 24, i1 false) #15
  br label %536

530:                                              ; preds = %519
  %531 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %532 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load i8*, i8** %532, align 8
  %534 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %535 = load i64, i64* %534, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %531, i8* %533, i64 %535) #15
  br label %536

536:                                              ; preds = %530, %528
  %537 = bitcast %"class.SkSL::ErrorReporter"* %523 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %538 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %537, align 8
  %539 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %538, i64 2
  %540 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %539, align 8
  call void %540(%"class.SkSL::ErrorReporter"* %523, i32 %485, %"class.SkSL::String"* nonnull %2) #15
  %541 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %542 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %541, i64 0, i32 1, i32 0
  %543 = load i8, i8* %542, align 1
  %544 = icmp slt i8 %543, 0
  br i1 %544, label %545, label %548

545:                                              ; preds = %536
  %546 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load i8*, i8** %546, align 8
  call void @_ZdlPv(i8* %547) #14
  br label %548

548:                                              ; preds = %536, %545
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %522)
  %549 = load i8, i8* %525, align 1
  %550 = icmp slt i8 %549, 0
  br i1 %550, label %551, label %554

551:                                              ; preds = %548
  %552 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load i8*, i8** %552, align 8
  call void @_ZdlPv(i8* %553) #14
  br label %554

554:                                              ; preds = %548, %551
  %555 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %555, i64 0, i32 1, i32 0
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %562

559:                                              ; preds = %554
  %560 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %561) #14
  br label %562

562:                                              ; preds = %554, %559
  %563 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %564 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %563, i64 0, i32 1, i32 0
  %565 = load i8, i8* %564, align 1
  %566 = icmp slt i8 %565, 0
  br i1 %566, label %567, label %570

567:                                              ; preds = %562
  %568 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load i8*, i8** %568, align 8
  call void @_ZdlPv(i8* %569) #14
  br label %570

570:                                              ; preds = %562, %567
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %490) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %489) #15
  br label %914

571:                                              ; preds = %481
  %572 = bitcast %"struct.SkSL::Token"* %11 to i64*
  %573 = load i64, i64* %572, align 8
  %574 = load i32, i32* %34, align 8
  %575 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %576 = load i8*, i8** %575, align 8
  %577 = ashr i64 %573, 32
  %578 = getelementptr inbounds i8, i8* %576, i64 %577
  %579 = sext i32 %574 to i64
  %580 = icmp ugt i32 %574, -17
  br i1 %580, label %581, label %583

581:                                              ; preds = %571
  %582 = bitcast %"class.SkSL::String"* %24 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %582) #16
  unreachable

583:                                              ; preds = %571
  %584 = icmp ult i32 %574, 23
  br i1 %584, label %593, label %585

585:                                              ; preds = %583
  %586 = add nuw nsw i64 %579, 16
  %587 = and i64 %586, -16
  %588 = call i8* @_Znwm(i64 %587) #14
  %589 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %588, i8** %589, align 8
  %590 = or i64 %587, -9223372036854775808
  %591 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %590, i64* %591, align 8
  %592 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %579, i64* %592, align 8
  br label %599

593:                                              ; preds = %583
  %594 = trunc i32 %574 to i8
  %595 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %596 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %595, i64 0, i32 1, i32 0
  store i8 %594, i8* %596, align 1
  %597 = bitcast %"class.SkSL::String"* %24 to i8*
  %598 = icmp eq i32 %574, 0
  br i1 %598, label %601, label %599

599:                                              ; preds = %593, %585
  %600 = phi i8* [ %588, %585 ], [ %597, %593 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %600, i8* align 1 %578, i64 %579, i1 false) #15
  br label %601

601:                                              ; preds = %593, %599
  %602 = phi i8* [ %597, %593 ], [ %600, %599 ]
  %603 = getelementptr inbounds i8, i8* %602, i64 %579
  store i8 0, i8* %603, align 1
  %604 = bitcast %"class.std::__1::vector.62"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %604, i8 0, i64 24, i1 false) #15
  %605 = sub i64 %486, %487
  %606 = sdiv exact i64 %605, 104
  %607 = icmp eq i64 %605, 0
  br i1 %607, label %630, label %608

608:                                              ; preds = %601
  %609 = icmp ugt i64 %606, 177372539170284150
  br i1 %609, label %610, label %612

610:                                              ; preds = %608
  %611 = bitcast %"class.std::__1::vector.62"* %25 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %611) #16
  unreachable

612:                                              ; preds = %608
  %613 = call i8* @_Znwm(i64 %605) #14
  %614 = bitcast i8* %613 to %"struct.SkSL::Type::Field"*
  %615 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %25, i64 0, i32 0, i32 1
  %616 = bitcast %"struct.SkSL::Type::Field"** %615 to i8**
  store i8* %613, i8** %616, align 8
  %617 = bitcast %"class.std::__1::vector.62"* %25 to i8**
  store i8* %613, i8** %617, align 16
  %618 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %614, i64 %606
  %619 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.SkSL::Type::Field"* %618, %"struct.SkSL::Type::Field"** %619, align 16
  %620 = bitcast %"struct.SkSL::Type::Field"** %615 to i64*
  %621 = ptrtoint i8* %613 to i64
  %622 = icmp sgt i64 %605, 0
  br i1 %622, label %623, label %628

623:                                              ; preds = %612
  %624 = udiv exact i64 %605, 104
  %625 = bitcast %"struct.SkSL::Type::Field"* %482 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %613, i8* align 8 %625, i64 %605, i1 false) #15
  %626 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %614, i64 %624
  %627 = ptrtoint %"struct.SkSL::Type::Field"* %626 to i64
  br label %628

628:                                              ; preds = %623, %612
  %629 = phi i64 [ %627, %623 ], [ %621, %612 ]
  store i64 %629, i64* %620, align 8
  br label %630

630:                                              ; preds = %601, %628
  %631 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %631)
  %632 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #15
  %633 = bitcast i8* %632 to %"class.SkSL::Type"*
  %634 = bitcast %"class.SkSL::String"* %24 to i8*
  %635 = bitcast %"class.SkSL::String"* %24 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %638 = bitcast i64* %637 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %631, i8* align 8 %638, i64 15, i1 false) #15
  %639 = getelementptr inbounds i8, i8* %634, i64 23
  %640 = load i8, i8* %639, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %634, i8 0, i64 24, i1 false) #15
  %641 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %25, i64 0, i32 0, i32 1
  %642 = bitcast %"struct.SkSL::Type::Field"** %641 to i64*
  %643 = bitcast %"class.std::__1::vector.62"* %25 to <2 x i64>*
  %644 = load <2 x i64>, <2 x i64>* %643, align 16
  %645 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  %646 = bitcast %"struct.SkSL::Type::Field"** %645 to i64*
  %647 = load i64, i64* %646, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %604, i8 0, i64 24, i1 false) #15
  %648 = bitcast i8* %632 to i32 (...)***
  %649 = getelementptr inbounds i8, i8* %632, i64 8
  %650 = bitcast i8* %649 to i32*
  store i32 %485, i32* %650, align 8
  %651 = getelementptr inbounds i8, i8* %632, i64 12
  %652 = bitcast i8* %651 to i32*
  store i32 13, i32* %652, align 4
  %653 = getelementptr inbounds i8, i8* %632, i64 16
  %654 = bitcast i8* %653 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), i8** %654, align 8
  %655 = getelementptr inbounds i8, i8* %632, i64 24
  %656 = bitcast i8* %655 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %655, i8 0, i64 16, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %648, align 8
  %657 = getelementptr inbounds i8, i8* %632, i64 40
  %658 = bitcast i8* %657 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.121, i64 0, i64 0), i8** %658, align 8
  %659 = getelementptr inbounds i8, i8* %632, i64 48
  %660 = bitcast i8* %659 to i64*
  store i64 %636, i64* %660, align 8
  %661 = getelementptr inbounds i8, i8* %632, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %661, i8* nonnull align 8 %631, i64 15, i1 false) #15
  %662 = getelementptr inbounds i8, i8* %632, i64 71
  store i8 %640, i8* %662, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %631, i8 0, i64 15, i1 false)
  %663 = getelementptr inbounds i8, i8* %632, i64 72
  %664 = bitcast i8* %663 to i32*
  store i32 9, i32* %664, align 8
  %665 = getelementptr inbounds i8, i8* %632, i64 76
  %666 = bitcast i8* %665 to i32*
  store i32 4, i32* %666, align 4
  %667 = getelementptr inbounds i8, i8* %632, i64 80
  %668 = bitcast i8* %667 to i32*
  store i32 -1, i32* %668, align 8
  %669 = getelementptr inbounds i8, i8* %632, i64 88
  %670 = getelementptr inbounds i8, i8* %632, i64 120
  %671 = bitcast i8* %670 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %669, i8 0, i64 32, i1 false) #15
  store i32 -1, i32* %671, align 8
  %672 = getelementptr inbounds i8, i8* %632, i64 124
  %673 = bitcast i8* %672 to i32*
  store i32 -1, i32* %673, align 4
  %674 = getelementptr inbounds i8, i8* %632, i64 128
  %675 = bitcast i8* %674 to <2 x i64>*
  store <2 x i64> %644, <2 x i64>* %675, align 8
  %676 = getelementptr inbounds i8, i8* %632, i64 144
  %677 = bitcast i8* %676 to i64*
  store i64 %647, i64* %677, align 8
  %678 = getelementptr inbounds i8, i8* %632, i64 152
  %679 = getelementptr inbounds i8, i8* %632, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %678, i8 0, i64 9, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* align 8 %679, i8 0, i64 16, i1 false) #15
  %680 = icmp slt i8 %640, 0
  br i1 %680, label %681, label %685

681:                                              ; preds = %630
  %682 = inttoptr i64 %636 to i8*
  %683 = bitcast i8* %661 to i64*
  %684 = load i64, i64* %683, align 8
  br label %687

685:                                              ; preds = %630
  %686 = zext i8 %640 to i64
  br label %687

687:                                              ; preds = %681, %685
  %688 = phi i8* [ %682, %681 ], [ %659, %685 ]
  %689 = phi i64 [ %684, %681 ], [ %686, %685 ]
  store i8* %688, i8** %654, align 8
  store i64 %689, i64* %656, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %631)
  %690 = ptrtoint i8* %632 to i64
  %691 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %25, i64 0, i32 0, i32 0
  %692 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %691, align 16
  %693 = icmp eq %"struct.SkSL::Type::Field"* %692, null
  br i1 %693, label %697, label %694

694:                                              ; preds = %687
  %695 = ptrtoint %"struct.SkSL::Type::Field"* %692 to i64
  store i64 %695, i64* %642, align 8
  %696 = bitcast %"struct.SkSL::Type::Field"* %692 to i8*
  call void @_ZdlPv(i8* %696) #14
  br label %697

697:                                              ; preds = %687, %694
  %698 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %699 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %698, i64 0, i32 1, i32 0
  %700 = load i8, i8* %699, align 1
  %701 = icmp slt i8 %700, 0
  br i1 %701, label %702, label %705

702:                                              ; preds = %697
  %703 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %704 = load i8*, i8** %703, align 8
  call void @_ZdlPv(i8* %704) #14
  br label %705

705:                                              ; preds = %697, %702
  %706 = call fastcc zeroext i1 @_ZN4SkSLL27struct_is_too_deeply_nestedERKNS_4TypeEi(%"class.SkSL::Type"* dereferenceable(184) %633, i32 8)
  br i1 %706, label %707, label %788

707:                                              ; preds = %705
  %708 = load i32, i32* %33, align 4
  %709 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %709) #15
  %710 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %710) #15
  %711 = load i64, i64* %572, align 8
  %712 = load i32, i32* %34, align 8
  %713 = load i8*, i8** %575, align 8
  %714 = ashr i64 %711, 32
  %715 = getelementptr inbounds i8, i8* %713, i64 %714
  %716 = sext i32 %712 to i64
  %717 = icmp ugt i32 %712, -17
  br i1 %717, label %718, label %720

718:                                              ; preds = %707
  %719 = bitcast %"class.SkSL::String"* %28 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %719) #16
  unreachable

720:                                              ; preds = %707
  %721 = icmp ult i32 %712, 23
  br i1 %721, label %730, label %722

722:                                              ; preds = %720
  %723 = add nuw nsw i64 %716, 16
  %724 = and i64 %723, -16
  %725 = call i8* @_Znwm(i64 %724) #14
  %726 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %725, i8** %726, align 8
  %727 = or i64 %724, -9223372036854775808
  %728 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %727, i64* %728, align 8
  %729 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %716, i64* %729, align 8
  br label %735

730:                                              ; preds = %720
  %731 = trunc i32 %712 to i8
  %732 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %733 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %732, i64 0, i32 1, i32 0
  store i8 %731, i8* %733, align 1
  %734 = icmp eq i32 %712, 0
  br i1 %734, label %737, label %735

735:                                              ; preds = %730, %722
  %736 = phi i8* [ %725, %722 ], [ %710, %730 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %736, i8* align 1 %715, i64 %716, i1 false) #15
  br label %737

737:                                              ; preds = %730, %735
  %738 = phi i8* [ %710, %730 ], [ %736, %735 ]
  %739 = getelementptr inbounds i8, i8* %738, i64 %716
  store i8 0, i8* %739, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %28) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %26, %"class.SkSL::String"* nonnull %27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0)) #15
  %740 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %740)
  %741 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %56, align 8
  %742 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %743 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %742, i64 0, i32 1, i32 0
  %744 = load i8, i8* %743, align 1
  %745 = icmp slt i8 %744, 0
  br i1 %745, label %748, label %746

746:                                              ; preds = %737
  %747 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %740, i8* nonnull align 8 %747, i64 24, i1 false) #15
  br label %754

748:                                              ; preds = %737
  %749 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0
  %750 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %751 = load i8*, i8** %750, align 8
  %752 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %753 = load i64, i64* %752, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %749, i8* %751, i64 %753) #15
  br label %754

754:                                              ; preds = %748, %746
  %755 = bitcast %"class.SkSL::ErrorReporter"* %741 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %756 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %755, align 8
  %757 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %756, i64 2
  %758 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %757, align 8
  call void %758(%"class.SkSL::ErrorReporter"* %741, i32 %708, %"class.SkSL::String"* nonnull %8) #15
  %759 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %760 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %759, i64 0, i32 1, i32 0
  %761 = load i8, i8* %760, align 1
  %762 = icmp slt i8 %761, 0
  br i1 %762, label %763, label %766

763:                                              ; preds = %754
  %764 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %765 = load i8*, i8** %764, align 8
  call void @_ZdlPv(i8* %765) #14
  br label %766

766:                                              ; preds = %754, %763
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %740)
  %767 = load i8, i8* %743, align 1
  %768 = icmp slt i8 %767, 0
  br i1 %768, label %769, label %772

769:                                              ; preds = %766
  %770 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %771 = load i8*, i8** %770, align 8
  call void @_ZdlPv(i8* %771) #14
  br label %772

772:                                              ; preds = %766, %769
  %773 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %774 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %773, i64 0, i32 1, i32 0
  %775 = load i8, i8* %774, align 1
  %776 = icmp slt i8 %775, 0
  br i1 %776, label %777, label %780

777:                                              ; preds = %772
  %778 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %779 = load i8*, i8** %778, align 8
  call void @_ZdlPv(i8* %779) #14
  br label %780

780:                                              ; preds = %772, %777
  %781 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %782 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %781, i64 0, i32 1, i32 0
  %783 = load i8, i8* %782, align 1
  %784 = icmp slt i8 %783, 0
  br i1 %784, label %785, label %907

785:                                              ; preds = %780
  %786 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %787 = load i8*, i8** %786, align 8
  call void @_ZdlPv(i8* %787) #14
  br label %907

788:                                              ; preds = %705
  %789 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %69, align 8
  %790 = bitcast i8* %632 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %789, %"class.SkSL::Symbol"* %790) #15
  %791 = bitcast %"class.std::__1::unique_ptr.19"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %791) #15
  %792 = bitcast %"class.std::__1::unique_ptr.19"* %10 to i64*
  store i64 %690, i64* %792, align 8
  %793 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %789, i64 0, i32 1, i32 0, i32 1
  %794 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %793, align 8
  %795 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %789, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %796 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %795, align 8
  %797 = icmp ult %"class.std::__1::unique_ptr.19"* %794, %796
  br i1 %797, label %798, label %804

798:                                              ; preds = %788
  %799 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %799, align 8
  %800 = bitcast %"class.std::__1::unique_ptr.19"* %794 to i64*
  store i64 %690, i64* %800, align 8
  %801 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %794, i64 1
  %802 = ptrtoint %"class.std::__1::unique_ptr.19"* %801 to i64
  %803 = bitcast %"class.std::__1::unique_ptr.19"** %793 to i64*
  store i64 %802, i64* %803, align 8
  br label %806

804:                                              ; preds = %788
  %805 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %789, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"* %805, %"class.std::__1::unique_ptr.19"* nonnull dereferenceable(8) %10) #15
  br label %806

806:                                              ; preds = %804, %798
  %807 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %10, i64 0, i32 0, i32 0, i32 0
  %808 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %807, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %807, align 8
  %809 = icmp eq %"class.SkSL::Symbol"* %808, null
  br i1 %809, label %815, label %810

810:                                              ; preds = %806
  %811 = bitcast %"class.SkSL::Symbol"* %808 to void (%"class.SkSL::Symbol"*)***
  %812 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %811, align 8
  %813 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %812, i64 1
  %814 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %813, align 8
  call void %814(%"class.SkSL::Symbol"* nonnull %808) #15
  br label %815

815:                                              ; preds = %806, %810
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %791) #15
  %816 = load i64, i64* %572, align 8
  %817 = load i32, i32* %34, align 8
  %818 = load i8*, i8** %575, align 8
  %819 = ashr i64 %816, 32
  %820 = getelementptr inbounds i8, i8* %818, i64 %819
  %821 = sext i32 %817 to i64
  %822 = ptrtoint i8* %820 to i64
  %823 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %48, align 8
  %824 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %823, i64 0, i32 0, i32 0, i32 1
  %825 = bitcast %"struct.SkSL::ASTNode"** %824 to i64*
  %826 = load i64, i64* %825, align 8
  %827 = bitcast %"struct.SkSL::ASTFile"* %823 to i64*
  %828 = load i64, i64* %827, align 8
  %829 = sub i64 %826, %828
  %830 = sdiv exact i64 %829, 160
  %831 = trunc i64 %830 to i32
  %832 = ptrtoint %"struct.SkSL::ASTFile"* %823 to i64
  %833 = inttoptr i64 %826 to %"struct.SkSL::ASTNode"*
  %834 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %823, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %835 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %834, align 8
  %836 = icmp ugt %"struct.SkSL::ASTNode"* %835, %833
  %837 = ptrtoint %"struct.SkSL::ASTNode"* %835 to i64
  br i1 %836, label %838, label %851

838:                                              ; preds = %815
  %839 = load i32, i32* %33, align 4
  %840 = inttoptr i64 %826 to i64*
  store i64 %832, i64* %840, align 8
  %841 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %833, i64 0, i32 1
  %842 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %833, i64 0, i32 1, i32 1
  store i32 1, i32* %842, align 4
  %843 = bitcast %"struct.SkSL::ASTNode::NodeData"* %841 to i64*
  store i64 %822, i64* %843, align 4
  %844 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %833, i64 0, i32 1, i32 0, i64 8
  %845 = bitcast i8* %844 to i64*
  store i64 %821, i64* %845, align 4
  %846 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %833, i64 0, i32 2
  store i32 %839, i32* %846, align 4
  %847 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %833, i64 0, i32 3
  %848 = bitcast i32* %847 to <4 x i32>*
  store <4 x i32> <i32 32, i32 -1, i32 -1, i32 -1>, <4 x i32>* %848, align 8
  %849 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %833, i64 1
  %850 = ptrtoint %"struct.SkSL::ASTNode"* %849 to i64
  store i64 %850, i64* %825, align 8
  br label %914

851:                                              ; preds = %815
  %852 = add nsw i64 %830, 1
  %853 = icmp ugt i64 %852, 115292150460684697
  br i1 %853, label %854, label %856

854:                                              ; preds = %851
  %855 = bitcast %"struct.SkSL::ASTFile"* %823 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %855) #16
  unreachable

856:                                              ; preds = %851
  %857 = bitcast %"struct.SkSL::ASTNode"** %834 to i64*
  %858 = sub i64 %837, %828
  %859 = sdiv exact i64 %858, 160
  %860 = icmp ult i64 %859, 57646075230342348
  br i1 %860, label %861, label %866

861:                                              ; preds = %856
  %862 = shl nsw i64 %859, 1
  %863 = icmp ult i64 %862, %852
  %864 = select i1 %863, i64 %852, i64 %862
  %865 = icmp eq i64 %864, 0
  br i1 %865, label %871, label %866

866:                                              ; preds = %861, %856
  %867 = phi i64 [ %864, %861 ], [ 115292150460684697, %856 ]
  %868 = mul i64 %867, 160
  %869 = call i8* @_Znwm(i64 %868) #14
  %870 = bitcast i8* %869 to %"struct.SkSL::ASTNode"*
  br label %871

871:                                              ; preds = %866, %861
  %872 = phi i64 [ %867, %866 ], [ 0, %861 ]
  %873 = phi %"struct.SkSL::ASTNode"* [ %870, %866 ], [ null, %861 ]
  %874 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %873, i64 %830
  %875 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %873, i64 %872
  %876 = ptrtoint %"struct.SkSL::ASTNode"* %875 to i64
  %877 = load i32, i32* %33, align 4
  %878 = bitcast %"struct.SkSL::ASTNode"* %874 to i64*
  store i64 %832, i64* %878, align 8
  %879 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %873, i64 %830, i32 1
  %880 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %873, i64 %830, i32 1, i32 1
  store i32 1, i32* %880, align 4
  %881 = bitcast %"struct.SkSL::ASTNode::NodeData"* %879 to i64*
  store i64 %822, i64* %881, align 4
  %882 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %873, i64 %830, i32 1, i32 0, i64 8
  %883 = bitcast i8* %882 to i64*
  store i64 %821, i64* %883, align 4
  %884 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %873, i64 %830, i32 2
  store i32 %877, i32* %884, align 4
  %885 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %873, i64 %830, i32 3
  %886 = bitcast i32* %885 to <4 x i32>*
  store <4 x i32> <i32 32, i32 -1, i32 -1, i32 -1>, <4 x i32>* %886, align 8
  %887 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %874, i64 1
  %888 = ptrtoint %"struct.SkSL::ASTNode"* %887 to i64
  %889 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %823, i64 0, i32 0, i32 0, i32 0
  %890 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %889, align 8
  %891 = load i64, i64* %825, align 8
  %892 = ptrtoint %"struct.SkSL::ASTNode"* %890 to i64
  %893 = sub i64 %891, %892
  %894 = sdiv exact i64 %893, -160
  %895 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %874, i64 %894
  %896 = ptrtoint %"struct.SkSL::ASTNode"* %895 to i64
  %897 = icmp sgt i64 %893, 0
  br i1 %897, label %898, label %902

898:                                              ; preds = %871
  %899 = bitcast %"struct.SkSL::ASTNode"* %895 to i8*
  %900 = bitcast %"struct.SkSL::ASTNode"* %890 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %899, i8* align 8 %900, i64 %893, i1 false) #15
  %901 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %889, align 8
  br label %902

902:                                              ; preds = %898, %871
  %903 = phi %"struct.SkSL::ASTNode"* [ %890, %871 ], [ %901, %898 ]
  store i64 %896, i64* %827, align 8
  store i64 %888, i64* %825, align 8
  store i64 %876, i64* %857, align 8
  %904 = icmp eq %"struct.SkSL::ASTNode"* %903, null
  br i1 %904, label %914, label %905

905:                                              ; preds = %902
  %906 = bitcast %"struct.SkSL::ASTNode"* %903 to i8*
  call void @_ZdlPv(i8* %906) #14
  br label %914

907:                                              ; preds = %785, %780
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %710) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %709) #15
  %908 = icmp eq i8* %632, null
  br i1 %908, label %914, label %909

909:                                              ; preds = %907
  %910 = bitcast i8* %632 to void (%"class.SkSL::Type"*)***
  %911 = load void (%"class.SkSL::Type"*)**, void (%"class.SkSL::Type"*)*** %910, align 8
  %912 = getelementptr inbounds void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %911, i64 1
  %913 = load void (%"class.SkSL::Type"*)*, void (%"class.SkSL::Type"*)** %912, align 8
  call void %913(%"class.SkSL::Type"* nonnull %633) #15
  br label %914

914:                                              ; preds = %137, %367, %838, %902, %905, %341, %909, %907, %479, %570
  %915 = phi i32 [ -1, %570 ], [ -1, %479 ], [ -1, %907 ], [ -1, %909 ], [ -1, %341 ], [ -1, %367 ], [ %831, %905 ], [ %831, %902 ], [ %831, %838 ], [ -1, %137 ]
  %916 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %40, align 8
  %917 = icmp eq %"struct.SkSL::Type::Field"* %916, null
  br i1 %917, label %921, label %918

918:                                              ; preds = %914
  %919 = ptrtoint %"struct.SkSL::Type::Field"* %916 to i64
  store i64 %919, i64* %91, align 8
  %920 = bitcast %"struct.SkSL::Type::Field"* %916 to i8*
  call void @_ZdlPv(i8* %920) #14
  br label %921

921:                                              ; preds = %914, %918
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #15
  br label %922

922:                                              ; preds = %36, %30, %921
  %923 = phi i32 [ %915, %921 ], [ -1, %30 ], [ -1, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %31) #15
  br label %924

924:                                              ; preds = %1, %922
  %925 = phi i32 [ %923, %922 ], [ -1, %1 ]
  ret i32 %925
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Modifiers"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  %4 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 24, i1 false)
  tail call void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* sret %0, %"struct.SkSL::Layout"* %3)
  %5 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i64 0, i64 0)) #15
  %11 = load i32, i32* %5, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %6, %2 ], [ %11, %9 ]
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i64 0, i64 0)) #15
  %18 = load i32, i32* %5, align 8
  br label %19

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %13, %12 ], [ %18, %16 ]
  %21 = and i32 %20, 16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0)) #15
  %25 = load i32, i32* %5, align 8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi i32 [ %20, %19 ], [ %25, %23 ]
  %28 = and i32 %27, 32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i64 0, i64 0)) #15
  %32 = load i32, i32* %5, align 8
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi i32 [ %27, %26 ], [ %32, %30 ]
  %35 = and i32 %34, 64
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i64 0, i64 0)) #15
  %39 = load i32, i32* %5, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i32 [ %34, %33 ], [ %39, %37 ]
  %42 = and i32 %41, 512
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i64 0, i64 0)) #15
  %46 = load i32, i32* %5, align 8
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i32 [ %41, %40 ], [ %46, %44 ]
  %49 = and i32 %48, 6
  %50 = icmp eq i32 %49, 6
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = and i32 %48, 2
  %53 = icmp eq i32 %52, 0
  %54 = and i32 %48, 6
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0)
  br i1 %55, label %60, label %57

57:                                               ; preds = %51, %47
  %58 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.104, i64 0, i64 0), %47 ], [ %56, %51 ]
  %59 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* %58) #15
  br label %60

60:                                               ; preds = %51, %57
  ret void
}

declare %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"*, %"class.SkSL::Type"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN4SkSLL27struct_is_too_deeply_nestedERKNS_4TypeEi(%"class.SkSL::Type"* nocapture readonly dereferenceable(184), i32) unnamed_addr #7 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 9
  br i1 %7, label %8, label %24

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %10 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %12 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %11, align 8
  %13 = icmp eq %"struct.SkSL::Type::Field"* %10, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %8
  %15 = add nsw i32 %1, -1
  br label %18

16:                                               ; preds = %18
  %17 = icmp eq %"struct.SkSL::Type::Field"* %23, %12
  br i1 %17, label %24, label %18

18:                                               ; preds = %14, %16
  %19 = phi %"struct.SkSL::Type::Field"* [ %10, %14 ], [ %23, %16 ]
  %20 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %19, i64 0, i32 2
  %21 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %20, align 8
  %22 = tail call fastcc zeroext i1 @_ZN4SkSLL27struct_is_too_deeply_nestedERKNS_4TypeEi(%"class.SkSL::Type"* dereferenceable(184) %21, i32 %15)
  %23 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %19, i64 1
  br i1 %22, label %24, label %16

24:                                               ; preds = %16, %18, %8, %4, %2
  %25 = phi i1 [ true, %2 ], [ false, %4 ], [ false, %8 ], [ false, %16 ], [ true, %18 ]
  ret i1 %25
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZZN4SkSL6Parser17varDeclarationEndENS_9ModifiersENS_7ASTNode2IDENS_14StringFragmentEENK3$_1clES3_PNS2_7VarDataE"(%class.anon.75* nocapture readonly, i32, %"struct.SkSL::ASTNode::VarData"* nocapture) unnamed_addr #8 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %class.anon.75, %class.anon.75* %0, i64 0, i32 0
  %6 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %6, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %6, i64 0, i32 3
  %9 = bitcast %"struct.SkSL::Token"* %8 to i64*
  %10 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %6, i64 0, i32 3, i32 2
  %11 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode::VarData", %"struct.SkSL::ASTNode::VarData"* %2, i64 0, i32 1
  %13 = getelementptr inbounds %class.anon.75, %class.anon.75* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = sext i32 %1 to i64
  br label %16

16:                                               ; preds = %166, %3
  %17 = load i32, i32* %7, align 4
  switch i32 %17, label %167 [
    i32 87, label %21
    i32 40, label %18
  ]

18:                                               ; preds = %16
  %19 = load i64, i64* %9, align 4
  %20 = load i32, i32* %10, align 4
  store i32 87, i32* %7, align 4
  br label %25

21:                                               ; preds = %16
  %22 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %11) #15
  %23 = extractvalue { i64, i32 } %22, 0
  %24 = extractvalue { i64, i32 } %22, 1
  br label %25

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %20, %18 ], [ %24, %21 ]
  %27 = phi i64 [ %19, %18 ], [ %23, %21 ]
  %28 = trunc i64 %27 to i32
  %29 = add i32 %28, -83
  %30 = icmp ult i32 %29, 3
  br i1 %30, label %31, label %47

31:                                               ; preds = %25, %41
  %32 = load i32, i32* %7, align 4
  %33 = icmp eq i32 %32, 87
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = load i64, i64* %9, align 4
  %36 = load i32, i32* %10, align 4
  store i32 87, i32* %7, align 4
  br label %41

37:                                               ; preds = %31
  %38 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %11) #15
  %39 = extractvalue { i64, i32 } %38, 0
  %40 = extractvalue { i64, i32 } %38, 1
  br label %41

41:                                               ; preds = %37, %34
  %42 = phi i32 [ %36, %34 ], [ %40, %37 ]
  %43 = phi i64 [ %35, %34 ], [ %39, %37 ]
  %44 = trunc i64 %43 to i32
  %45 = add i32 %44, -83
  %46 = icmp ult i32 %45, 3
  br i1 %46, label %31, label %47

47:                                               ; preds = %41, %25
  %48 = phi i64 [ %27, %25 ], [ %43, %41 ]
  %49 = phi i32 [ %26, %25 ], [ %42, %41 ]
  %50 = trunc i64 %48 to i32
  %51 = icmp eq i32 %50, 40
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  store i64 %48, i64* %9, align 4
  store i32 %49, i32* %10, align 4
  br label %167

53:                                               ; preds = %47
  %54 = load i8, i8* %12, align 8, !range !6
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %67

56:                                               ; preds = %53
  %57 = load %"class.SkSL::ASTNode::ID"*, %"class.SkSL::ASTNode::ID"** %13, align 8
  %58 = getelementptr inbounds %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %60, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %62, align 8
  %64 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %63, i64 %61, i32 4, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %67, label %106

67:                                               ; preds = %53, %56
  %68 = load i32, i32* %7, align 4
  %69 = icmp eq i32 %68, 87
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %9, align 4
  br label %99

72:                                               ; preds = %67
  %73 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %11) #15
  %74 = extractvalue { i64, i32 } %73, 0
  %75 = trunc i64 %74 to i32
  %76 = add i32 %75, -83
  %77 = icmp ult i32 %76, 3
  br i1 %77, label %80, label %78

78:                                               ; preds = %72
  %79 = extractvalue { i64, i32 } %73, 1
  br label %96

80:                                               ; preds = %72, %90
  %81 = load i32, i32* %7, align 4
  %82 = icmp eq i32 %81, 87
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = load i64, i64* %9, align 4
  %85 = load i32, i32* %10, align 4
  store i32 87, i32* %7, align 4
  br label %90

86:                                               ; preds = %80
  %87 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %11) #15
  %88 = extractvalue { i64, i32 } %87, 0
  %89 = extractvalue { i64, i32 } %87, 1
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi i32 [ %85, %83 ], [ %89, %86 ]
  %92 = phi i64 [ %84, %83 ], [ %88, %86 ]
  %93 = trunc i64 %92 to i32
  %94 = add i32 %93, -83
  %95 = icmp ult i32 %94, 3
  br i1 %95, label %80, label %96

96:                                               ; preds = %90, %78
  %97 = phi i64 [ %74, %78 ], [ %92, %90 ]
  %98 = phi i32 [ %79, %78 ], [ %91, %90 ]
  store i64 %97, i64* %9, align 4
  store i32 %98, i32* %10, align 4
  br label %99

99:                                               ; preds = %96, %70
  %100 = phi i64 [ %71, %70 ], [ %97, %96 ]
  %101 = tail call i8* @_Znwm(i64 48) #14
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %104, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %101, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57, i64 0, i64 0), i64 42, i1 false) #15
  %105 = getelementptr inbounds i8, i8* %101, i64 42
  store i8 0, i8* %105, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %6, i64 %100, i32 undef, %"class.SkSL::String"* nonnull %4)
  tail call void @_ZdlPv(i8* nonnull %101) #14
  br label %167

106:                                              ; preds = %56
  %107 = load i32, i32* %7, align 4
  switch i32 %107, label %144 [
    i32 87, label %111
    i32 41, label %108
  ]

108:                                              ; preds = %106
  %109 = load i64, i64* %9, align 4
  %110 = load i32, i32* %10, align 4
  store i32 87, i32* %7, align 4
  br label %115

111:                                              ; preds = %106
  %112 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %11) #15
  %113 = extractvalue { i64, i32 } %112, 0
  %114 = extractvalue { i64, i32 } %112, 1
  br label %115

115:                                              ; preds = %111, %108
  %116 = phi i32 [ %110, %108 ], [ %114, %111 ]
  %117 = phi i64 [ %109, %108 ], [ %113, %111 ]
  %118 = trunc i64 %117 to i32
  %119 = add i32 %118, -83
  %120 = icmp ult i32 %119, 3
  br i1 %120, label %121, label %137

121:                                              ; preds = %115, %131
  %122 = load i32, i32* %7, align 4
  %123 = icmp eq i32 %122, 87
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  %125 = load i64, i64* %9, align 4
  %126 = load i32, i32* %10, align 4
  store i32 87, i32* %7, align 4
  br label %131

127:                                              ; preds = %121
  %128 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %11) #15
  %129 = extractvalue { i64, i32 } %128, 0
  %130 = extractvalue { i64, i32 } %128, 1
  br label %131

131:                                              ; preds = %127, %124
  %132 = phi i32 [ %126, %124 ], [ %130, %127 ]
  %133 = phi i64 [ %125, %124 ], [ %129, %127 ]
  %134 = trunc i64 %133 to i32
  %135 = add i32 %134, -83
  %136 = icmp ult i32 %135, 3
  br i1 %136, label %121, label %137

137:                                              ; preds = %131, %115
  %138 = phi i64 [ %117, %115 ], [ %133, %131 ]
  %139 = phi i32 [ %116, %115 ], [ %132, %131 ]
  %140 = trunc i64 %138 to i32
  %141 = icmp eq i32 %140, 41
  br i1 %141, label %143, label %142

142:                                              ; preds = %137
  store i64 %138, i64* %9, align 4
  store i32 %139, i32* %10, align 4
  br label %144

143:                                              ; preds = %137
  tail call void @_ZN4SkSL6Parser16createEmptyChildENS_7ASTNode2IDE(%"class.SkSL::Parser"* %6, i32 %1)
  br label %166

144:                                              ; preds = %106, %142
  %145 = tail call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %6)
  %146 = icmp sgt i32 %145, -1
  br i1 %146, label %147, label %167

147:                                              ; preds = %144
  %148 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %149 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %149, align 8
  %151 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %150, i64 %15, i32 5, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp sgt i32 %152, -1
  br i1 %153, label %154, label %161

154:                                              ; preds = %147
  %155 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %150, i64 %15, i32 0
  %156 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %155, align 8
  %157 = sext i32 %152 to i64
  %158 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %156, i64 0, i32 0, i32 0
  %159 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %158, align 8
  %160 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %159, i64 %157, i32 6, i32 0
  br label %163

161:                                              ; preds = %147
  %162 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %150, i64 %15, i32 4, i32 0
  br label %163

163:                                              ; preds = %154, %161
  %164 = phi i32* [ %160, %154 ], [ %162, %161 ]
  store i32 %145, i32* %164, align 4
  store i32 %145, i32* %151, align 8
  %165 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %6, i32 41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %165, label %166, label %167

166:                                              ; preds = %163, %143
  store i8 1, i8* %12, align 8
  br label %16

167:                                              ; preds = %16, %144, %163, %52, %99
  %168 = phi i1 [ false, %99 ], [ true, %52 ], [ true, %16 ], [ false, %144 ], [ false, %163 ]
  ret i1 %168
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %7, align 8
  %9 = icmp ult %"struct.SkSL::ASTNode"* %6, %8
  %10 = ptrtoint %"struct.SkSL::ASTNode"* %8 to i64
  br i1 %9, label %11, label %18

11:                                               ; preds = %4
  %12 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %1, align 8
  %13 = load i32, i32* %2, align 4
  %14 = load i32, i32* %3, align 4
  tail call void @_ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE(%"struct.SkSL::ASTNode"* %6, %"class.std::__1::vector.45"* %12, i32 %13, i32 %14) #15
  %15 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %6, i64 1
  %16 = ptrtoint %"struct.SkSL::ASTNode"* %15 to i64
  %17 = bitcast %"struct.SkSL::ASTNode"** %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %74

18:                                               ; preds = %4
  %19 = ptrtoint %"struct.SkSL::ASTNode"* %6 to i64
  %20 = bitcast %"struct.SkSL::ASTNode"** %5 to i64*
  %21 = bitcast %"class.std::__1::vector.45"* %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = sdiv exact i64 %23, 160
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 115292150460684697
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.45"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #16
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"struct.SkSL::ASTNode"** %7 to i64*
  %31 = sub i64 %10, %22
  %32 = sdiv exact i64 %31, 160
  %33 = icmp ult i64 %32, 57646075230342348
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = shl nsw i64 %32, 1
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ %37, %34 ], [ 115292150460684697, %29 ]
  %41 = mul i64 %40, 160
  %42 = tail call i8* @_Znwm(i64 %41) #14
  %43 = bitcast i8* %42 to %"struct.SkSL::ASTNode"*
  br label %44

44:                                               ; preds = %39, %34
  %45 = phi i64 [ %40, %39 ], [ 0, %34 ]
  %46 = phi %"struct.SkSL::ASTNode"* [ %43, %39 ], [ null, %34 ]
  %47 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %24
  %48 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %45
  %49 = ptrtoint %"struct.SkSL::ASTNode"* %48 to i64
  %50 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %1, align 8
  %51 = load i32, i32* %2, align 4
  %52 = load i32, i32* %3, align 4
  tail call void @_ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE(%"struct.SkSL::ASTNode"* %47, %"class.std::__1::vector.45"* %50, i32 %51, i32 %52) #15
  %53 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 1
  %54 = ptrtoint %"struct.SkSL::ASTNode"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 0
  %56 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  %57 = load i64, i64* %20, align 8
  %58 = ptrtoint %"struct.SkSL::ASTNode"* %56 to i64
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, -160
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 %60
  %62 = ptrtoint %"struct.SkSL::ASTNode"* %61 to i64
  %63 = icmp sgt i64 %59, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %44
  %65 = bitcast %"struct.SkSL::ASTNode"* %61 to i8*
  %66 = bitcast %"struct.SkSL::ASTNode"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %59, i1 false) #15
  %67 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  br label %68

68:                                               ; preds = %64, %44
  %69 = phi %"struct.SkSL::ASTNode"* [ %56, %44 ], [ %67, %64 ]
  store i64 %62, i64* %21, align 8
  store i64 %54, i64* %20, align 8
  store i64 %49, i64* %30, align 8
  %70 = icmp eq %"struct.SkSL::ASTNode"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = bitcast %"struct.SkSL::ASTNode"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  %73 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %5, align 8
  br label %74

74:                                               ; preds = %71, %68, %11
  %75 = phi %"struct.SkSL::ASTNode"* [ %73, %71 ], [ %53, %68 ], [ %15, %11 ]
  %76 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %75, i64 -1
  ret %"struct.SkSL::ASTNode"* %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL6Parser21modifiersWithDefaultsEi(%"struct.SkSL::Modifiers"* noalias nocapture sret, %"class.SkSL::Parser"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.SkSL::Modifiers", align 8
  %5 = bitcast %"struct.SkSL::Modifiers"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 80, i1 false)
  call void @_ZN4SkSL6Parser9modifiersEv(%"struct.SkSL::Modifiers"* nonnull sret %4, %"class.SkSL::Parser"* %1)
  %6 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %4, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = bitcast %"struct.SkSL::Modifiers"* %0 to i8*
  br i1 %8, label %10, label %12

10:                                               ; preds = %3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* nonnull align 8 %5, i64 72, i1 false) #15
  %11 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %0, i64 0, i32 1
  store i32 %2, i32* %11, align 8
  br label %13

12:                                               ; preds = %3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* nonnull align 8 %5, i64 80, i1 false)
  br label %13

13:                                               ; preds = %12, %10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #15
  ret void
}

declare zeroext i1 @_ZN4SkSL4stoiERKNS_14StringFragmentEPl(%"struct.SkSL::StringFragment"* dereferenceable(16), i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERlEEENS3_2IDEDpOT_(%"class.SkSL::Parser"*, i32* dereferenceable(4), i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %6 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.SkSL::ASTNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.SkSL::ASTFile"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 160
  %14 = trunc i64 %13 to i32
  %15 = ptrtoint %"struct.SkSL::ASTFile"* %6 to i64
  %16 = inttoptr i64 %9 to %"struct.SkSL::ASTNode"*
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %17, align 8
  %19 = icmp ugt %"struct.SkSL::ASTNode"* %18, %16
  %20 = ptrtoint %"struct.SkSL::ASTNode"* %18 to i64
  br i1 %19, label %21, label %36

21:                                               ; preds = %4
  %22 = load i32, i32* %1, align 4
  %23 = load i32, i32* %2, align 4
  %24 = load i64, i64* %3, align 8
  %25 = inttoptr i64 %9 to i64*
  store i64 %15, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1, i32 1
  store i32 3, i32* %27, align 4
  %28 = bitcast %"struct.SkSL::ASTNode::NodeData"* %26 to i64*
  store i64 %24, i64* %28, align 4
  %29 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 2
  store i32 %22, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 3
  store i32 %23, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 4, i32 0
  store i32 -1, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 5, i32 0
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 6, i32 0
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 1
  %35 = ptrtoint %"struct.SkSL::ASTNode"* %34 to i64
  store i64 %35, i64* %8, align 8
  br label %94

36:                                               ; preds = %4
  %37 = add nsw i64 %13, 1
  %38 = icmp ugt i64 %37, 115292150460684697
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = bitcast %"struct.SkSL::ASTFile"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #16
  unreachable

41:                                               ; preds = %36
  %42 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %43 = sub i64 %20, %11
  %44 = sdiv exact i64 %43, 160
  %45 = icmp ult i64 %44, 57646075230342348
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = shl nsw i64 %44, 1
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46, %41
  %52 = phi i64 [ %49, %46 ], [ 115292150460684697, %41 ]
  %53 = mul i64 %52, 160
  %54 = tail call i8* @_Znwm(i64 %53) #14
  %55 = bitcast i8* %54 to %"struct.SkSL::ASTNode"*
  br label %56

56:                                               ; preds = %51, %46
  %57 = phi i64 [ %52, %51 ], [ 0, %46 ]
  %58 = phi %"struct.SkSL::ASTNode"* [ %55, %51 ], [ null, %46 ]
  %59 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13
  %60 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %57
  %61 = ptrtoint %"struct.SkSL::ASTNode"* %60 to i64
  %62 = load i32, i32* %1, align 4
  %63 = load i32, i32* %2, align 4
  %64 = load i64, i64* %3, align 8
  %65 = bitcast %"struct.SkSL::ASTNode"* %59 to i64*
  store i64 %15, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 1
  %67 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 1, i32 1
  store i32 3, i32* %67, align 4
  %68 = bitcast %"struct.SkSL::ASTNode::NodeData"* %66 to i64*
  store i64 %64, i64* %68, align 4
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 2
  store i32 %62, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 3
  store i32 %63, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 4, i32 0
  store i32 -1, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 5, i32 0
  store i32 -1, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 6, i32 0
  store i32 -1, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 1
  %75 = ptrtoint %"struct.SkSL::ASTNode"* %74 to i64
  %76 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 0
  %77 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %76, align 8
  %78 = load i64, i64* %8, align 8
  %79 = ptrtoint %"struct.SkSL::ASTNode"* %77 to i64
  %80 = sub i64 %78, %79
  %81 = sdiv exact i64 %80, -160
  %82 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %81
  %83 = ptrtoint %"struct.SkSL::ASTNode"* %82 to i64
  %84 = icmp sgt i64 %80, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %56
  %86 = bitcast %"struct.SkSL::ASTNode"* %82 to i8*
  %87 = bitcast %"struct.SkSL::ASTNode"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 %80, i1 false) #15
  %88 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %76, align 8
  br label %89

89:                                               ; preds = %85, %56
  %90 = phi %"struct.SkSL::ASTNode"* [ %77, %56 ], [ %88, %85 ]
  store i64 %83, i64* %10, align 8
  store i64 %75, i64* %8, align 8
  store i64 %61, i64* %42, align 8
  %91 = icmp eq %"struct.SkSL::ASTNode"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = bitcast %"struct.SkSL::ASTNode"* %90 to i8*
  tail call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %92, %89, %21
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Token", align 8
  %3 = alloca %"struct.SkSL::StringFragment", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %7, label %8, label %79

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::Token"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 2
  store i32 87, i32* %10, align 8
  store i32 -1, i32* %11, align 4
  store i32 -1, i32* %12, align 8
  %13 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %2)
  br i1 %13, label %14, label %77

14:                                               ; preds = %8
  %15 = bitcast %"struct.SkSL::StringFragment"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %3, i64 0, i32 1
  %18 = bitcast %"struct.SkSL::Token"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = load i32, i32* %12, align 8
  %21 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = ashr i64 %19, 32
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = sext i32 %20 to i64
  store i8* %24, i8** %16, align 8
  store i64 %25, i64* %17, align 8
  %26 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  store i64 -6148914691236517206, i64* %4, align 8
  %27 = call zeroext i1 @_ZN4SkSL4stoiERKNS_14StringFragmentEPl(%"struct.SkSL::StringFragment"* nonnull dereferenceable(16) %3, i64* nonnull %4) #15
  br i1 %27, label %72, label %28

28:                                               ; preds = %14
  %29 = load i64, i64* %18, align 8
  %30 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #15
  %31 = load i8*, i8** %16, align 8
  %32 = load i64, i64* %17, align 8
  %33 = icmp ugt i64 %32, -17
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %35) #16
  unreachable

36:                                               ; preds = %28
  %37 = icmp ult i64 %32, 23
  br i1 %37, label %46, label %38

38:                                               ; preds = %36
  %39 = add nuw i64 %32, 16
  %40 = and i64 %39, -16
  %41 = call i8* @_Znwm(i64 %40) #14
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %41, i8** %42, align 8
  %43 = or i64 %40, -9223372036854775808
  %44 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %32, i64* %45, align 8
  br label %51

46:                                               ; preds = %36
  %47 = trunc i64 %32 to i8
  %48 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  store i8 %47, i8* %49, align 1
  %50 = icmp eq i64 %32, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %46, %38
  %52 = phi i8* [ %41, %38 ], [ %30, %46 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 1 %31, i64 %32, i1 false) #15
  br label %53

53:                                               ; preds = %46, %51
  %54 = phi i8* [ %30, %46 ], [ %52, %51 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %32
  store i8 0, i8* %55, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.63, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %29, i32 undef, %"class.SkSL::String"* nonnull %5)
  %56 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #14
  br label %63

63:                                               ; preds = %53, %60
  %64 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #14
  br label %71

71:                                               ; preds = %63, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15
  br label %75

72:                                               ; preds = %14
  %73 = load i64, i64* %4, align 8
  %74 = trunc i64 %73 to i32
  br label %75

75:                                               ; preds = %72, %71
  %76 = phi i32 [ %74, %72 ], [ -1, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  br label %77

77:                                               ; preds = %8, %75
  %78 = phi i32 [ %76, %75 ], [ -1, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #15
  br label %79

79:                                               ; preds = %1, %77
  %80 = phi i32 [ %78, %77 ], [ -1, %1 ]
  ret i32 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN4SkSL6Parser16layoutIdentifierEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Token", align 8
  %3 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %3, label %4, label %22

4:                                                ; preds = %1
  %5 = bitcast %"struct.SkSL::Token"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 2
  store i32 87, i32* %6, align 8
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 8
  %9 = call zeroext i1 @_ZN4SkSL6Parser16expectIdentifierEPNS_5TokenE(%"class.SkSL::Parser"* %0, %"struct.SkSL::Token"* nonnull %2)
  br i1 %9, label %10, label %19

10:                                               ; preds = %4
  %11 = bitcast %"struct.SkSL::Token"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = load i32, i32* %8, align 8
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = ashr i64 %12, 32
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  %18 = sext i32 %13 to i64
  br label %19

19:                                               ; preds = %4, %10
  %20 = phi i64 [ %18, %10 ], [ 0, %4 ]
  %21 = phi i8* [ %17, %10 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %4 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  br label %22

22:                                               ; preds = %1, %19
  %23 = phi i64 [ %20, %19 ], [ 0, %1 ]
  %24 = phi i8* [ %21, %19 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %1 ]
  %25 = insertvalue { i8*, i64 } undef, i8* %24, 0
  %26 = insertvalue { i8*, i64 } %25, i64 %23, 1
  ret { i8*, i64 } %26
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN4SkSL6Parser10layoutCodeEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %3, label %4, label %73

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 87
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %10 = bitcast %"struct.SkSL::Token"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %13 = load i32, i32* %12, align 4
  store i32 87, i32* %5, align 4
  br label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %16 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %17 = extractvalue { i64, i32 } %16, 0
  %18 = extractvalue { i64, i32 } %16, 1
  br label %19

19:                                               ; preds = %8, %14
  %20 = phi i32 [ %13, %8 ], [ %18, %14 ]
  %21 = phi i64 [ %11, %8 ], [ %17, %14 ]
  %22 = and i64 %21, -4294967296
  %23 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %24 = bitcast %"struct.SkSL::Token"* %23 to i64*
  store i64 %21, i64* %24, align 4
  %25 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %20, i32* %25, align 4
  %26 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = ashr i64 %21, 32
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %31 = trunc i64 %21 to i32
  br label %32

32:                                               ; preds = %68, %19
  %33 = phi i32 [ %31, %19 ], [ %69, %68 ]
  %34 = phi i32 [ 1, %19 ], [ %63, %68 ]
  %35 = phi i8 [ 0, %19 ], [ %65, %68 ]
  %36 = icmp eq i32 %33, 87
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = load i64, i64* %24, align 4
  %39 = load i32, i32* %25, align 4
  store i32 87, i32* %5, align 4
  br label %44

40:                                               ; preds = %32
  %41 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %30) #15
  %42 = extractvalue { i64, i32 } %41, 0
  %43 = extractvalue { i64, i32 } %41, 1
  br label %44

44:                                               ; preds = %37, %40
  %45 = phi i32 [ %39, %37 ], [ %43, %40 ]
  %46 = phi i64 [ %38, %37 ], [ %42, %40 ]
  %47 = trunc i64 %46 to i32
  switch i32 %47, label %61 [
    i32 36, label %48
    i32 37, label %50
    i32 43, label %52
    i32 0, label %55
  ]

48:                                               ; preds = %44
  %49 = add nsw i32 %34, 1
  br label %61

50:                                               ; preds = %44
  %51 = add nsw i32 %34, -1
  br label %61

52:                                               ; preds = %44
  %53 = icmp eq i32 %34, 1
  %54 = select i1 %53, i8 1, i8 %35
  br label %61

55:                                               ; preds = %44
  %56 = tail call i8* @_Znwm(i64 48) #14
  %57 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %56, i8** %57, align 8
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast i64* %58 to <2 x i64>*
  store <2 x i64> <i64 40, i64 -9223372036854775760>, <2 x i64>* %59, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 getelementptr inbounds ([41 x i8], [41 x i8]* @.str.65, i64 0, i64 0), i64 40, i1 false) #15
  %60 = getelementptr inbounds i8, i8* %56, i64 40
  store i8 0, i8* %60, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %21, i32 undef, %"class.SkSL::String"* nonnull %2)
  tail call void @_ZdlPv(i8* nonnull %56) #14
  br label %73

61:                                               ; preds = %52, %44, %50, %48
  %62 = phi i8 [ %35, %44 ], [ %35, %50 ], [ %35, %48 ], [ %54, %52 ]
  %63 = phi i32 [ %34, %44 ], [ %51, %50 ], [ %49, %48 ], [ %34, %52 ]
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %64, i8 1, i8 %62
  %66 = and i8 %65, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = load i32, i32* %5, align 4
  br label %32

70:                                               ; preds = %61
  %71 = sub i64 %46, %22
  %72 = ashr i64 %71, 32
  store i64 %46, i64* %24, align 4
  store i32 %45, i32* %25, align 4
  br label %73

73:                                               ; preds = %70, %55, %1
  %74 = phi i64 [ 0, %1 ], [ 0, %55 ], [ %72, %70 ]
  %75 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %1 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %55 ], [ %29, %70 ]
  %76 = insertvalue { i8*, i64 } undef, i8* %75, 0
  %77 = insertvalue { i8*, i64 } %76, i64 %74, 1
  ret { i8*, i64 } %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser11layoutCTypeEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %4, label %5, label %104

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 87
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %11 = bitcast %"struct.SkSL::Token"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %14 = load i32, i32* %13, align 4
  store i32 87, i32* %6, align 4
  br label %20

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %17 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %18 = extractvalue { i64, i32 } %17, 0
  %19 = extractvalue { i64, i32 } %17, 1
  br label %20

20:                                               ; preds = %15, %9
  %21 = phi i32 [ %14, %9 ], [ %19, %15 ]
  %22 = phi i64 [ %12, %9 ], [ %18, %15 ]
  %23 = trunc i64 %22 to i32
  %24 = add i32 %23, -83
  %25 = icmp ult i32 %24, 3
  br i1 %25, label %26, label %47

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %28 = bitcast %"struct.SkSL::Token"* %27 to i64*
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %30 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %31

31:                                               ; preds = %41, %26
  %32 = load i32, i32* %6, align 4
  %33 = icmp eq i32 %32, 87
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = load i64, i64* %28, align 4
  %36 = load i32, i32* %29, align 4
  store i32 87, i32* %6, align 4
  br label %41

37:                                               ; preds = %31
  %38 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %30) #15
  %39 = extractvalue { i64, i32 } %38, 0
  %40 = extractvalue { i64, i32 } %38, 1
  br label %41

41:                                               ; preds = %37, %34
  %42 = phi i32 [ %36, %34 ], [ %40, %37 ]
  %43 = phi i64 [ %35, %34 ], [ %39, %37 ]
  %44 = trunc i64 %43 to i32
  %45 = add i32 %44, -83
  %46 = icmp ult i32 %45, 3
  br i1 %46, label %31, label %47

47:                                               ; preds = %41, %20
  %48 = phi i64 [ %22, %20 ], [ %43, %41 ]
  %49 = phi i32 [ %21, %20 ], [ %42, %41 ]
  %50 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #15
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %55 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  %56 = load i8*, i8** %54, align 8
  %57 = ashr i64 %48, 32
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = sext i32 %49 to i64
  %60 = icmp ugt i32 %49, -17
  br i1 %60, label %61, label %63

61:                                               ; preds = %47
  %62 = bitcast %"class.SkSL::String"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %62) #16
  unreachable

63:                                               ; preds = %47
  %64 = icmp ult i32 %49, 23
  br i1 %64, label %70, label %65

65:                                               ; preds = %63
  %66 = add nuw nsw i64 %59, 16
  %67 = and i64 %66, -16
  %68 = tail call i8* @_Znwm(i64 %67) #14
  store i8* %68, i8** %51, align 8
  %69 = or i64 %67, -9223372036854775808
  store i64 %69, i64* %53, align 8
  store i64 %59, i64* %52, align 8
  br label %75

70:                                               ; preds = %63
  %71 = trunc i32 %49 to i8
  %72 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 %71, i8* %73, align 1
  %74 = icmp eq i32 %49, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %70, %65
  %76 = phi i8* [ %68, %65 ], [ %50, %70 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %76, i8* align 1 %58, i64 %59, i1 false) #15
  br label %77

77:                                               ; preds = %70, %75
  %78 = phi i8* [ %50, %70 ], [ %76, %75 ]
  %79 = getelementptr inbounds i8, i8* %78, i64 %59
  store i8 0, i8* %79, align 1
  %80 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %81 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %80, i64 0, i32 0
  %82 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"* %81, %"class.SkSL::String"* nonnull dereferenceable(24) %2) #15
  %83 = icmp eq %"struct.std::__1::__hash_node_base"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %82, i64 5
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %85 to i32*
  %87 = load i32, i32* %86, align 8
  switch i32 %87, label %89 [
    i32 23, label %94
    i32 24, label %88
  ]

88:                                               ; preds = %84
  br label %94

89:                                               ; preds = %77, %84
  %90 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 17, i8* %91, align 1
  %92 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i64 0, i64 0), i64 17, i1 false) #15
  %93 = getelementptr inbounds i8, i8* %92, i64 17
  store i8 0, i8* %93, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %48, i32 undef, %"class.SkSL::String"* nonnull %3)
  br label %94

94:                                               ; preds = %89, %84, %88
  %95 = phi i1 [ false, %88 ], [ false, %84 ], [ true, %89 ]
  %96 = phi i32 [ 6, %88 ], [ 5, %84 ], [ undef, %89 ]
  %97 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %94
  %102 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %102) #14
  br label %103

103:                                              ; preds = %94, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #15
  br i1 %95, label %104, label %105

104:                                              ; preds = %103, %1
  br label %105

105:                                              ; preds = %103, %104
  %106 = phi i32 [ 0, %104 ], [ %96, %103 ]
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL6Parser6layoutEv(%"struct.SkSL::Layout"* noalias sret, %"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca %"class.SkSL::String", align 8
  %36 = alloca %"class.SkSL::String", align 8
  %37 = alloca %"class.SkSL::String", align 8
  %38 = alloca %"class.SkSL::String", align 8
  %39 = alloca %"class.SkSL::String", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = alloca %"class.SkSL::String", align 8
  %42 = alloca %"class.SkSL::String", align 8
  %43 = alloca %"class.SkSL::String", align 8
  %44 = alloca %"class.SkSL::String", align 8
  %45 = alloca %"class.SkSL::String", align 8
  %46 = alloca %"class.SkSL::String", align 8
  %47 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3, i32 0
  %48 = load i32, i32* %47, align 4
  switch i32 %48, label %776 [
    i32 87, label %55
    i32 30, label %49
  ]

49:                                               ; preds = %2
  %50 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3
  %51 = bitcast %"struct.SkSL::Token"* %50 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3, i32 2
  %54 = load i32, i32* %53, align 4
  store i32 87, i32* %47, align 4
  br label %60

55:                                               ; preds = %2
  %56 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 1
  %57 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %56) #15
  %58 = extractvalue { i64, i32 } %57, 0
  %59 = extractvalue { i64, i32 } %57, 1
  br label %60

60:                                               ; preds = %55, %49
  %61 = phi i32 [ %54, %49 ], [ %59, %55 ]
  %62 = phi i64 [ %52, %49 ], [ %58, %55 ]
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, -83
  %65 = icmp ult i32 %64, 3
  br i1 %65, label %66, label %87

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3
  %68 = bitcast %"struct.SkSL::Token"* %67 to i64*
  %69 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3, i32 2
  %70 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 1
  br label %71

71:                                               ; preds = %81, %66
  %72 = load i32, i32* %47, align 4
  %73 = icmp eq i32 %72, 87
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %68, align 4
  %76 = load i32, i32* %69, align 4
  store i32 87, i32* %47, align 4
  br label %81

77:                                               ; preds = %71
  %78 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %70) #15
  %79 = extractvalue { i64, i32 } %78, 0
  %80 = extractvalue { i64, i32 } %78, 1
  br label %81

81:                                               ; preds = %77, %74
  %82 = phi i32 [ %76, %74 ], [ %80, %77 ]
  %83 = phi i64 [ %75, %74 ], [ %79, %77 ]
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, -83
  %86 = icmp ult i32 %85, 3
  br i1 %86, label %71, label %87

87:                                               ; preds = %81, %60
  %88 = phi i64 [ %62, %60 ], [ %83, %81 ]
  %89 = phi i32 [ %61, %60 ], [ %82, %81 ]
  %90 = trunc i64 %88 to i32
  %91 = icmp eq i32 %90, 30
  br i1 %91, label %96, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3
  %94 = bitcast %"struct.SkSL::Token"* %93 to i64*
  store i64 %88, i64* %94, align 4
  %95 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3, i32 2
  store i32 %89, i32* %95, align 4
  br label %776

96:                                               ; preds = %87
  %97 = tail call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %1, i32 36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %97, label %98, label %281

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3
  %100 = bitcast %"struct.SkSL::Token"* %99 to i64*
  %101 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 3, i32 2
  %102 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 1
  %103 = bitcast %"class.SkSL::String"* %42 to i8*
  %104 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %107 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %1, i64 0, i32 0, i32 0
  %108 = bitcast %"class.SkSL::String"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = bitcast %"class.SkSL::String"* %3 to i8*
  %111 = bitcast %"class.SkSL::String"* %4 to i8*
  %112 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.SkSL::String"* %5 to i8*
  %119 = bitcast %"class.SkSL::String"* %6 to i8*
  %120 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = bitcast %"class.SkSL::String"* %7 to i8*
  %127 = bitcast %"class.SkSL::String"* %8 to i8*
  %128 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = bitcast %"class.SkSL::String"* %9 to i8*
  %135 = bitcast %"class.SkSL::String"* %10 to i8*
  %136 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.SkSL::String"* %11 to i8*
  %143 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = bitcast %"class.SkSL::String"* %12 to i8*
  %146 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = bitcast %"class.SkSL::String"* %13 to i8*
  %149 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = bitcast %"class.SkSL::String"* %14 to i8*
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = bitcast %"class.SkSL::String"* %15 to i8*
  %155 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = bitcast %"class.SkSL::String"* %16 to i8*
  %158 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %160 = bitcast %"class.SkSL::String"* %17 to i8*
  %161 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %163 = bitcast %"class.SkSL::String"* %18 to i8*
  %164 = bitcast %"class.SkSL::String"* %19 to i8*
  %165 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %167 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = bitcast %"class.SkSL::String"* %20 to i8*
  %172 = bitcast %"class.SkSL::String"* %21 to i8*
  %173 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.SkSL::String"* %22 to i8*
  %180 = bitcast %"class.SkSL::String"* %23 to i8*
  %181 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = bitcast %"class.SkSL::String"* %24 to i8*
  %188 = bitcast %"class.SkSL::String"* %25 to i8*
  %189 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = bitcast %"class.SkSL::String"* %26 to i8*
  %196 = bitcast %"class.SkSL::String"* %27 to i8*
  %197 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = bitcast %"class.SkSL::String"* %28 to i8*
  %204 = bitcast %"class.SkSL::String"* %29 to i8*
  %205 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %206 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %205, i64 0, i32 1, i32 0
  %207 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = bitcast %"class.SkSL::String"* %30 to i8*
  %212 = bitcast %"class.SkSL::String"* %31 to i8*
  %213 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.SkSL::String"* %32 to i8*
  %220 = bitcast %"class.SkSL::String"* %33 to i8*
  %221 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  %223 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %224, i64 0, i32 1, i32 0
  %226 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = bitcast %"class.SkSL::String"* %34 to i8*
  %228 = bitcast %"class.SkSL::String"* %35 to i8*
  %229 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  %231 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = bitcast %"class.SkSL::String"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = bitcast %"class.SkSL::String"* %36 to i8*
  %236 = bitcast %"class.SkSL::String"* %37 to i8*
  %237 = bitcast %"class.SkSL::String"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  %239 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = bitcast %"class.SkSL::String"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  %242 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = bitcast %"class.SkSL::String"* %38 to i8*
  %244 = bitcast %"class.SkSL::String"* %39 to i8*
  %245 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %245, i64 0, i32 1, i32 0
  %247 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = bitcast %"class.SkSL::String"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %250 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = bitcast %"class.SkSL::String"* %40 to i8*
  %252 = bitcast %"class.SkSL::String"* %41 to i8*
  %253 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %254 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %253, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = bitcast %"class.SkSL::String"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %256, i64 0, i32 1, i32 0
  %258 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = bitcast %"class.SkSL::String"* %44 to i8*
  %260 = bitcast %"class.SkSL::String"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  %262 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %263, i64 0, i32 1, i32 0
  %265 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = bitcast %"class.SkSL::String"* %46 to i8*
  %267 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %268 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %267, i64 0, i32 1, i32 0
  %269 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  %272 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = bitcast %"class.SkSL::String"* %42 to i8*
  %274 = bitcast i64* %144 to <2 x i64>*
  %275 = bitcast i64* %147 to <2 x i64>*
  %276 = bitcast i64* %150 to <2 x i64>*
  %277 = bitcast i64* %153 to <2 x i64>*
  %278 = bitcast i64* %156 to <2 x i64>*
  %279 = bitcast i64* %159 to <2 x i64>*
  %280 = bitcast i64* %162 to <2 x i64>*
  br label %286

281:                                              ; preds = %96
  %282 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  store i32 0, i32* %282, align 8
  %283 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %284 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 0
  %285 = bitcast i32* %283 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %285, i8 -1, i64 40, i1 false)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), i8** %284, align 8
  br label %803

286:                                              ; preds = %98, %769
  %287 = phi i32 [ %713, %769 ], [ 0, %98 ]
  %288 = phi i32 [ %714, %769 ], [ -1, %98 ]
  %289 = phi i8* [ %715, %769 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %98 ]
  %290 = phi i64 [ %716, %769 ], [ 0, %98 ]
  %291 = phi i32 [ %717, %769 ], [ 0, %98 ]
  %292 = phi i32 [ %718, %769 ], [ -1, %98 ]
  %293 = phi i32 [ %719, %769 ], [ -1, %98 ]
  %294 = phi i32 [ %720, %769 ], [ -1, %98 ]
  %295 = phi i32 [ %721, %769 ], [ -1, %98 ]
  %296 = phi i32 [ %722, %769 ], [ -1, %98 ]
  %297 = phi i32 [ %723, %769 ], [ -1, %98 ]
  %298 = phi i32 [ %724, %769 ], [ -1, %98 ]
  %299 = phi i32 [ %725, %769 ], [ -1, %98 ]
  %300 = phi i32 [ %726, %769 ], [ -1, %98 ]
  %301 = load i32, i32* %47, align 4
  %302 = icmp eq i32 %301, 87
  br i1 %302, label %306, label %303

303:                                              ; preds = %286
  %304 = load i64, i64* %100, align 4
  %305 = load i32, i32* %101, align 4
  store i32 87, i32* %47, align 4
  br label %310

306:                                              ; preds = %286
  %307 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %102) #15
  %308 = extractvalue { i64, i32 } %307, 0
  %309 = extractvalue { i64, i32 } %307, 1
  br label %310

310:                                              ; preds = %306, %303
  %311 = phi i32 [ %305, %303 ], [ %309, %306 ]
  %312 = phi i64 [ %304, %303 ], [ %308, %306 ]
  %313 = trunc i64 %312 to i32
  %314 = add i32 %313, -83
  %315 = icmp ult i32 %314, 3
  br i1 %315, label %316, label %332

316:                                              ; preds = %310, %326
  %317 = load i32, i32* %47, align 4
  %318 = icmp eq i32 %317, 87
  br i1 %318, label %322, label %319

319:                                              ; preds = %316
  %320 = load i64, i64* %100, align 4
  %321 = load i32, i32* %101, align 4
  store i32 87, i32* %47, align 4
  br label %326

322:                                              ; preds = %316
  %323 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %102) #15
  %324 = extractvalue { i64, i32 } %323, 0
  %325 = extractvalue { i64, i32 } %323, 1
  br label %326

326:                                              ; preds = %322, %319
  %327 = phi i32 [ %321, %319 ], [ %325, %322 ]
  %328 = phi i64 [ %320, %319 ], [ %324, %322 ]
  %329 = trunc i64 %328 to i32
  %330 = add i32 %329, -83
  %331 = icmp ult i32 %330, 3
  br i1 %331, label %316, label %332

332:                                              ; preds = %326, %310
  %333 = phi i64 [ %312, %310 ], [ %328, %326 ]
  %334 = phi i32 [ %311, %310 ], [ %327, %326 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %273, i8 -86, i64 24, i1 false)
  %335 = load i8*, i8** %107, align 8
  %336 = ashr i64 %333, 32
  %337 = getelementptr inbounds i8, i8* %335, i64 %336
  %338 = sext i32 %334 to i64
  %339 = icmp ugt i32 %334, -17
  br i1 %339, label %340, label %342

340:                                              ; preds = %332
  %341 = bitcast %"class.SkSL::String"* %42 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %341) #16
  unreachable

342:                                              ; preds = %332
  %343 = icmp ult i32 %334, 23
  br i1 %343, label %349, label %344

344:                                              ; preds = %342
  %345 = add nuw nsw i64 %338, 16
  %346 = and i64 %345, -16
  %347 = call i8* @_Znwm(i64 %346) #14
  store i8* %347, i8** %104, align 8
  %348 = or i64 %346, -9223372036854775808
  store i64 %348, i64* %106, align 8
  store i64 %338, i64* %105, align 8
  br label %352

349:                                              ; preds = %342
  %350 = trunc i32 %334 to i8
  store i8 %350, i8* %109, align 1
  %351 = icmp eq i32 %334, 0
  br i1 %351, label %354, label %352

352:                                              ; preds = %349, %344
  %353 = phi i8* [ %347, %344 ], [ %103, %349 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %353, i8* align 1 %337, i64 %338, i1 false) #15
  br label %354

354:                                              ; preds = %349, %352
  %355 = phi i8* [ %103, %349 ], [ %353, %352 ]
  %356 = getelementptr inbounds i8, i8* %355, i64 %338
  store i8 0, i8* %356, align 1
  %357 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** @_ZN4SkSL6Parser12layoutTokensE, align 8
  %358 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %357, i64 0, i32 0
  %359 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"* %358, %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  %360 = icmp eq %"struct.std::__1::__hash_node_base"* %359, null
  br i1 %360, label %701, label %361

361:                                              ; preds = %354
  %362 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %359, i64 5
  %363 = bitcast %"struct.std::__1::__hash_node_base"* %362 to i32*
  %364 = load i32, i32* %363, align 8
  switch i32 %364, label %690 [
    i32 7, label %365
    i32 9, label %381
    i32 8, label %397
    i32 21, label %413
    i32 20, label %429
    i32 0, label %445
    i32 1, label %462
    i32 2, label %479
    i32 3, label %496
    i32 4, label %513
    i32 5, label %530
    i32 6, label %547
    i32 10, label %564
    i32 11, label %572
    i32 12, label %580
    i32 13, label %588
    i32 14, label %596
    i32 15, label %604
    i32 16, label %612
    i32 17, label %620
    i32 18, label %637
    i32 19, label %654
    i32 22, label %673
  ]

365:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %251)
  %366 = and i32 %287, 1
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %379, label %368

368:                                              ; preds = %365
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %41, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %40, %"class.SkSL::String"* nonnull %41, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %40) #15
  %369 = load i8, i8* %254, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %373

371:                                              ; preds = %368
  %372 = load i8*, i8** %255, align 8
  call void @_ZdlPv(i8* %372) #14
  br label %373

373:                                              ; preds = %371, %368
  %374 = load i8, i8* %257, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %378

376:                                              ; preds = %373
  %377 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %377) #14
  br label %378

378:                                              ; preds = %376, %373
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252) #15
  br label %379

379:                                              ; preds = %365, %378
  %380 = or i32 %287, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %251)
  br label %712

381:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243)
  %382 = and i32 %287, 2
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %395, label %384

384:                                              ; preds = %381
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %244) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %39, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %38, %"class.SkSL::String"* nonnull %39, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %38) #15
  %385 = load i8, i8* %246, align 1
  %386 = icmp slt i8 %385, 0
  br i1 %386, label %387, label %389

387:                                              ; preds = %384
  %388 = load i8*, i8** %247, align 8
  call void @_ZdlPv(i8* %388) #14
  br label %389

389:                                              ; preds = %387, %384
  %390 = load i8, i8* %249, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %394

392:                                              ; preds = %389
  %393 = load i8*, i8** %250, align 8
  call void @_ZdlPv(i8* %393) #14
  br label %394

394:                                              ; preds = %392, %389
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %244) #15
  br label %395

395:                                              ; preds = %381, %394
  %396 = or i32 %287, 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243)
  br label %712

397:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235)
  %398 = and i32 %287, 4
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %411, label %400

400:                                              ; preds = %397
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %37, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %36, %"class.SkSL::String"* nonnull %37, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %36) #15
  %401 = load i8, i8* %238, align 1
  %402 = icmp slt i8 %401, 0
  br i1 %402, label %403, label %405

403:                                              ; preds = %400
  %404 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %404) #14
  br label %405

405:                                              ; preds = %403, %400
  %406 = load i8, i8* %241, align 1
  %407 = icmp slt i8 %406, 0
  br i1 %407, label %408, label %410

408:                                              ; preds = %405
  %409 = load i8*, i8** %242, align 8
  call void @_ZdlPv(i8* %409) #14
  br label %410

410:                                              ; preds = %408, %405
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #15
  br label %411

411:                                              ; preds = %397, %410
  %412 = or i32 %287, 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235)
  br label %712

413:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227)
  %414 = and i32 %287, 8
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %427, label %416

416:                                              ; preds = %413
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %35, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %34, %"class.SkSL::String"* nonnull %35, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %34) #15
  %417 = load i8, i8* %230, align 1
  %418 = icmp slt i8 %417, 0
  br i1 %418, label %419, label %421

419:                                              ; preds = %416
  %420 = load i8*, i8** %231, align 8
  call void @_ZdlPv(i8* %420) #14
  br label %421

421:                                              ; preds = %419, %416
  %422 = load i8, i8* %233, align 1
  %423 = icmp slt i8 %422, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %421
  %425 = load i8*, i8** %234, align 8
  call void @_ZdlPv(i8* %425) #14
  br label %426

426:                                              ; preds = %424, %421
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #15
  br label %427

427:                                              ; preds = %413, %426
  %428 = or i32 %287, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227)
  br label %712

429:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219)
  %430 = and i32 %287, 16
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %443, label %432

432:                                              ; preds = %429
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %220) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %33, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %32, %"class.SkSL::String"* nonnull %33, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %32) #15
  %433 = load i8, i8* %222, align 1
  %434 = icmp slt i8 %433, 0
  br i1 %434, label %435, label %437

435:                                              ; preds = %432
  %436 = load i8*, i8** %223, align 8
  call void @_ZdlPv(i8* %436) #14
  br label %437

437:                                              ; preds = %435, %432
  %438 = load i8, i8* %225, align 1
  %439 = icmp slt i8 %438, 0
  br i1 %439, label %440, label %442

440:                                              ; preds = %437
  %441 = load i8*, i8** %226, align 8
  call void @_ZdlPv(i8* %441) #14
  br label %442

442:                                              ; preds = %440, %437
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %220) #15
  br label %443

443:                                              ; preds = %429, %442
  %444 = or i32 %287, 16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219)
  br label %712

445:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211)
  %446 = and i32 %287, 32
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %459, label %448

448:                                              ; preds = %445
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %31, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %30, %"class.SkSL::String"* nonnull %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %30) #15
  %449 = load i8, i8* %214, align 1
  %450 = icmp slt i8 %449, 0
  br i1 %450, label %451, label %453

451:                                              ; preds = %448
  %452 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %452) #14
  br label %453

453:                                              ; preds = %451, %448
  %454 = load i8, i8* %217, align 1
  %455 = icmp slt i8 %454, 0
  br i1 %455, label %456, label %458

456:                                              ; preds = %453
  %457 = load i8*, i8** %218, align 8
  call void @_ZdlPv(i8* %457) #14
  br label %458

458:                                              ; preds = %456, %453
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #15
  br label %459

459:                                              ; preds = %445, %458
  %460 = or i32 %287, 32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211)
  %461 = call i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"* %1)
  br label %712

462:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203)
  %463 = and i32 %287, 64
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %476, label %465

465:                                              ; preds = %462
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %29, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %28) #15
  %466 = load i8, i8* %206, align 1
  %467 = icmp slt i8 %466, 0
  br i1 %467, label %468, label %470

468:                                              ; preds = %465
  %469 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %469) #14
  br label %470

470:                                              ; preds = %468, %465
  %471 = load i8, i8* %209, align 1
  %472 = icmp slt i8 %471, 0
  br i1 %472, label %473, label %475

473:                                              ; preds = %470
  %474 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %474) #14
  br label %475

475:                                              ; preds = %473, %470
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #15
  br label %476

476:                                              ; preds = %462, %475
  %477 = or i32 %287, 64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203)
  %478 = call i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"* %1)
  br label %712

479:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195)
  %480 = trunc i32 %287 to i8
  %481 = icmp sgt i8 %480, -1
  br i1 %481, label %493, label %482

482:                                              ; preds = %479
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %26, %"class.SkSL::String"* nonnull %27, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %26) #15
  %483 = load i8, i8* %198, align 1
  %484 = icmp slt i8 %483, 0
  br i1 %484, label %485, label %487

485:                                              ; preds = %482
  %486 = load i8*, i8** %199, align 8
  call void @_ZdlPv(i8* %486) #14
  br label %487

487:                                              ; preds = %485, %482
  %488 = load i8, i8* %201, align 1
  %489 = icmp slt i8 %488, 0
  br i1 %489, label %490, label %492

490:                                              ; preds = %487
  %491 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %491) #14
  br label %492

492:                                              ; preds = %490, %487
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #15
  br label %493

493:                                              ; preds = %479, %492
  %494 = or i32 %287, 128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195)
  %495 = call i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"* %1)
  br label %712

496:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187)
  %497 = and i32 %287, 256
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %510, label %499

499:                                              ; preds = %496
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %25, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %24) #15
  %500 = load i8, i8* %190, align 1
  %501 = icmp slt i8 %500, 0
  br i1 %501, label %502, label %504

502:                                              ; preds = %499
  %503 = load i8*, i8** %191, align 8
  call void @_ZdlPv(i8* %503) #14
  br label %504

504:                                              ; preds = %502, %499
  %505 = load i8, i8* %193, align 1
  %506 = icmp slt i8 %505, 0
  br i1 %506, label %507, label %509

507:                                              ; preds = %504
  %508 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %508) #14
  br label %509

509:                                              ; preds = %507, %504
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #15
  br label %510

510:                                              ; preds = %496, %509
  %511 = or i32 %287, 256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187)
  %512 = call i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"* %1)
  br label %712

513:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179)
  %514 = and i32 %287, 512
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %527, label %516

516:                                              ; preds = %513
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %23, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %22, %"class.SkSL::String"* nonnull %23, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %22) #15
  %517 = load i8, i8* %182, align 1
  %518 = icmp slt i8 %517, 0
  br i1 %518, label %519, label %521

519:                                              ; preds = %516
  %520 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %520) #14
  br label %521

521:                                              ; preds = %519, %516
  %522 = load i8, i8* %185, align 1
  %523 = icmp slt i8 %522, 0
  br i1 %523, label %524, label %526

524:                                              ; preds = %521
  %525 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %525) #14
  br label %526

526:                                              ; preds = %524, %521
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #15
  br label %527

527:                                              ; preds = %513, %526
  %528 = or i32 %287, 512
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179)
  %529 = call i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"* %1)
  br label %712

530:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171)
  %531 = and i32 %287, 1024
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %544, label %533

533:                                              ; preds = %530
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %21, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %20) #15
  %534 = load i8, i8* %174, align 1
  %535 = icmp slt i8 %534, 0
  br i1 %535, label %536, label %538

536:                                              ; preds = %533
  %537 = load i8*, i8** %175, align 8
  call void @_ZdlPv(i8* %537) #14
  br label %538

538:                                              ; preds = %536, %533
  %539 = load i8, i8* %177, align 1
  %540 = icmp slt i8 %539, 0
  br i1 %540, label %541, label %543

541:                                              ; preds = %538
  %542 = load i8*, i8** %178, align 8
  call void @_ZdlPv(i8* %542) #14
  br label %543

543:                                              ; preds = %541, %538
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #15
  br label %544

544:                                              ; preds = %530, %543
  %545 = or i32 %287, 1024
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171)
  %546 = call i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"* %1)
  br label %712

547:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163)
  %548 = and i32 %287, 2048
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %561, label %550

550:                                              ; preds = %547
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %18, %"class.SkSL::String"* nonnull %19, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %18) #15
  %551 = load i8, i8* %166, align 1
  %552 = icmp slt i8 %551, 0
  br i1 %552, label %553, label %555

553:                                              ; preds = %550
  %554 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %554) #14
  br label %555

555:                                              ; preds = %553, %550
  %556 = load i8, i8* %169, align 1
  %557 = icmp slt i8 %556, 0
  br i1 %557, label %558, label %560

558:                                              ; preds = %555
  %559 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %559) #14
  br label %560

560:                                              ; preds = %558, %555
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #15
  br label %561

561:                                              ; preds = %547, %560
  %562 = or i32 %287, 2048
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163)
  %563 = call i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"* %1)
  br label %712

564:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160)
  %565 = and i32 %287, 4096
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %570, label %567

567:                                              ; preds = %564
  %568 = call i8* @_Znwm(i64 64) #14
  store i8* %568, i8** %161, align 8
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %280, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %568, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i64 0, i64 0), i64 51, i1 false) #15
  %569 = getelementptr inbounds i8, i8* %568, i64 51
  store i8 0, i8* %569, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %17) #15
  call void @_ZdlPv(i8* nonnull %568) #14
  br label %570

570:                                              ; preds = %564, %567
  %571 = or i32 %287, 4096
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160)
  br label %712

572:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157)
  %573 = and i32 %287, 4096
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %578, label %575

575:                                              ; preds = %572
  %576 = call i8* @_Znwm(i64 64) #14
  store i8* %576, i8** %158, align 8
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %279, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %576, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i64 0, i64 0), i64 51, i1 false) #15
  %577 = getelementptr inbounds i8, i8* %576, i64 51
  store i8 0, i8* %577, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %16) #15
  call void @_ZdlPv(i8* nonnull %576) #14
  br label %578

578:                                              ; preds = %572, %575
  %579 = or i32 %287, 4096
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157)
  br label %712

580:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154)
  %581 = and i32 %287, 4096
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %586, label %583

583:                                              ; preds = %580
  %584 = call i8* @_Znwm(i64 64) #14
  store i8* %584, i8** %155, align 8
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %278, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %584, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i64 0, i64 0), i64 51, i1 false) #15
  %585 = getelementptr inbounds i8, i8* %584, i64 51
  store i8 0, i8* %585, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %15) #15
  call void @_ZdlPv(i8* nonnull %584) #14
  br label %586

586:                                              ; preds = %580, %583
  %587 = or i32 %287, 4096
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154)
  br label %712

588:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151)
  %589 = and i32 %287, 4096
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %594, label %591

591:                                              ; preds = %588
  %592 = call i8* @_Znwm(i64 64) #14
  store i8* %592, i8** %152, align 8
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %277, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %592, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i64 0, i64 0), i64 51, i1 false) #15
  %593 = getelementptr inbounds i8, i8* %592, i64 51
  store i8 0, i8* %593, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %14) #15
  call void @_ZdlPv(i8* nonnull %592) #14
  br label %594

594:                                              ; preds = %588, %591
  %595 = or i32 %287, 4096
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151)
  br label %712

596:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148)
  %597 = and i32 %287, 4096
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %602, label %599

599:                                              ; preds = %596
  %600 = call i8* @_Znwm(i64 64) #14
  store i8* %600, i8** %149, align 8
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %276, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %600, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i64 0, i64 0), i64 51, i1 false) #15
  %601 = getelementptr inbounds i8, i8* %600, i64 51
  store i8 0, i8* %601, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %13) #15
  call void @_ZdlPv(i8* nonnull %600) #14
  br label %602

602:                                              ; preds = %596, %599
  %603 = or i32 %287, 4096
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148)
  br label %712

604:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145)
  %605 = and i32 %287, 4096
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %610, label %607

607:                                              ; preds = %604
  %608 = call i8* @_Znwm(i64 64) #14
  store i8* %608, i8** %146, align 8
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %275, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %608, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i64 0, i64 0), i64 51, i1 false) #15
  %609 = getelementptr inbounds i8, i8* %608, i64 51
  store i8 0, i8* %609, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %12) #15
  call void @_ZdlPv(i8* nonnull %608) #14
  br label %610

610:                                              ; preds = %604, %607
  %611 = or i32 %287, 4096
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145)
  br label %712

612:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142)
  %613 = and i32 %287, 4096
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %618, label %615

615:                                              ; preds = %612
  %616 = call i8* @_Znwm(i64 64) #14
  store i8* %616, i8** %143, align 8
  store <2 x i64> <i64 51, i64 -9223372036854775744>, <2 x i64>* %274, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %616, i8* align 1 getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i64 0, i64 0), i64 51, i1 false) #15
  %617 = getelementptr inbounds i8, i8* %616, i64 51
  store i8 0, i8* %617, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %11) #15
  call void @_ZdlPv(i8* nonnull %616) #14
  br label %618

618:                                              ; preds = %612, %615
  %619 = or i32 %287, 4096
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142)
  br label %712

620:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134)
  %621 = and i32 %287, 8192
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %634, label %623

623:                                              ; preds = %620
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::String"* nonnull %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %9) #15
  %624 = load i8, i8* %137, align 1
  %625 = icmp slt i8 %624, 0
  br i1 %625, label %626, label %628

626:                                              ; preds = %623
  %627 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %627) #14
  br label %628

628:                                              ; preds = %626, %623
  %629 = load i8, i8* %140, align 1
  %630 = icmp slt i8 %629, 0
  br i1 %630, label %631, label %633

631:                                              ; preds = %628
  %632 = load i8*, i8** %141, align 8
  call void @_ZdlPv(i8* %632) #14
  br label %633

633:                                              ; preds = %631, %628
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #15
  br label %634

634:                                              ; preds = %620, %633
  %635 = or i32 %287, 8192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134)
  %636 = call i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"* %1)
  br label %712

637:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126)
  %638 = and i32 %287, 16384
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %651, label %640

640:                                              ; preds = %637
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %7) #15
  %641 = load i8, i8* %129, align 1
  %642 = icmp slt i8 %641, 0
  br i1 %642, label %643, label %645

643:                                              ; preds = %640
  %644 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %644) #14
  br label %645

645:                                              ; preds = %643, %640
  %646 = load i8, i8* %132, align 1
  %647 = icmp slt i8 %646, 0
  br i1 %647, label %648, label %650

648:                                              ; preds = %645
  %649 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %649) #14
  br label %650

650:                                              ; preds = %648, %645
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #15
  br label %651

651:                                              ; preds = %637, %650
  %652 = or i32 %287, 16384
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126)
  %653 = call i32 @_ZN4SkSL6Parser9layoutIntEv(%"class.SkSL::Parser"* %1)
  br label %712

654:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118)
  %655 = trunc i32 %287 to i16
  %656 = icmp sgt i16 %655, -1
  br i1 %656, label %668, label %657

657:                                              ; preds = %654
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %5) #15
  %658 = load i8, i8* %121, align 1
  %659 = icmp slt i8 %658, 0
  br i1 %659, label %660, label %662

660:                                              ; preds = %657
  %661 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %661) #14
  br label %662

662:                                              ; preds = %660, %657
  %663 = load i8, i8* %124, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %667

665:                                              ; preds = %662
  %666 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %666) #14
  br label %667

667:                                              ; preds = %665, %662
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #15
  br label %668

668:                                              ; preds = %654, %667
  %669 = or i32 %287, 32768
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118)
  %670 = call { i8*, i64 } @_ZN4SkSL6Parser10layoutCodeEv(%"class.SkSL::Parser"* %1)
  %671 = extractvalue { i8*, i64 } %670, 0
  %672 = extractvalue { i8*, i64 } %670, 1
  br label %712

673:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110)
  %674 = and i32 %287, 65536
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %687, label %676

676:                                              ; preds = %673
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.122, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %3) #15
  %677 = load i8, i8* %113, align 1
  %678 = icmp slt i8 %677, 0
  br i1 %678, label %679, label %681

679:                                              ; preds = %676
  %680 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %680) #14
  br label %681

681:                                              ; preds = %679, %676
  %682 = load i8, i8* %116, align 1
  %683 = icmp slt i8 %682, 0
  br i1 %683, label %684, label %686

684:                                              ; preds = %681
  %685 = load i8*, i8** %117, align 8
  call void @_ZdlPv(i8* %685) #14
  br label %686

686:                                              ; preds = %684, %681
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #15
  br label %687

687:                                              ; preds = %673, %686
  %688 = or i32 %287, 65536
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110)
  %689 = call i32 @_ZN4SkSL6Parser11layoutCTypeEv(%"class.SkSL::Parser"* %1)
  br label %712

690:                                              ; preds = %361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %43, %"class.SkSL::String"* nonnull %44, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %43)
  %691 = load i8, i8* %261, align 1
  %692 = icmp slt i8 %691, 0
  br i1 %692, label %693, label %695

693:                                              ; preds = %690
  %694 = load i8*, i8** %262, align 8
  call void @_ZdlPv(i8* %694) #14
  br label %695

695:                                              ; preds = %690, %693
  %696 = load i8, i8* %264, align 1
  %697 = icmp slt i8 %696, 0
  br i1 %697, label %698, label %700

698:                                              ; preds = %695
  %699 = load i8*, i8** %265, align 8
  call void @_ZdlPv(i8* %699) #14
  br label %700

700:                                              ; preds = %695, %698
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #15
  br label %712

701:                                              ; preds = %354
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %266) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %46, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %42) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %45, %"class.SkSL::String"* nonnull %46, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %1, i64 %333, i32 undef, %"class.SkSL::String"* nonnull %45)
  %702 = load i8, i8* %268, align 1
  %703 = icmp slt i8 %702, 0
  br i1 %703, label %704, label %706

704:                                              ; preds = %701
  %705 = load i8*, i8** %269, align 8
  call void @_ZdlPv(i8* %705) #14
  br label %706

706:                                              ; preds = %701, %704
  %707 = load i8, i8* %271, align 1
  %708 = icmp slt i8 %707, 0
  br i1 %708, label %709, label %711

709:                                              ; preds = %706
  %710 = load i8*, i8** %272, align 8
  call void @_ZdlPv(i8* %710) #14
  br label %711

711:                                              ; preds = %706, %709
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %266) #15
  br label %712

712:                                              ; preds = %379, %395, %411, %427, %443, %459, %476, %493, %510, %527, %544, %561, %570, %578, %586, %594, %602, %610, %618, %634, %651, %668, %687, %700, %711
  %713 = phi i32 [ %287, %700 ], [ %688, %687 ], [ %669, %668 ], [ %652, %651 ], [ %635, %634 ], [ %619, %618 ], [ %611, %610 ], [ %603, %602 ], [ %595, %594 ], [ %587, %586 ], [ %579, %578 ], [ %571, %570 ], [ %562, %561 ], [ %545, %544 ], [ %528, %527 ], [ %511, %510 ], [ %494, %493 ], [ %477, %476 ], [ %460, %459 ], [ %444, %443 ], [ %428, %427 ], [ %412, %411 ], [ %396, %395 ], [ %380, %379 ], [ %287, %711 ]
  %714 = phi i32 [ %288, %700 ], [ %288, %687 ], [ %288, %668 ], [ %288, %651 ], [ %288, %634 ], [ 6, %618 ], [ 5, %610 ], [ 4, %602 ], [ 3, %594 ], [ 2, %586 ], [ 1, %578 ], [ 0, %570 ], [ %288, %561 ], [ %288, %544 ], [ %288, %527 ], [ %288, %510 ], [ %288, %493 ], [ %288, %476 ], [ %288, %459 ], [ %288, %443 ], [ %288, %427 ], [ %288, %411 ], [ %288, %395 ], [ %288, %379 ], [ %288, %711 ]
  %715 = phi i8* [ %289, %700 ], [ %289, %687 ], [ %671, %668 ], [ %289, %651 ], [ %289, %634 ], [ %289, %618 ], [ %289, %610 ], [ %289, %602 ], [ %289, %594 ], [ %289, %586 ], [ %289, %578 ], [ %289, %570 ], [ %289, %561 ], [ %289, %544 ], [ %289, %527 ], [ %289, %510 ], [ %289, %493 ], [ %289, %476 ], [ %289, %459 ], [ %289, %443 ], [ %289, %427 ], [ %289, %411 ], [ %289, %395 ], [ %289, %379 ], [ %289, %711 ]
  %716 = phi i64 [ %290, %700 ], [ %290, %687 ], [ %672, %668 ], [ %290, %651 ], [ %290, %634 ], [ %290, %618 ], [ %290, %610 ], [ %290, %602 ], [ %290, %594 ], [ %290, %586 ], [ %290, %578 ], [ %290, %570 ], [ %290, %561 ], [ %290, %544 ], [ %290, %527 ], [ %290, %510 ], [ %290, %493 ], [ %290, %476 ], [ %290, %459 ], [ %290, %443 ], [ %290, %427 ], [ %290, %411 ], [ %290, %395 ], [ %290, %379 ], [ %290, %711 ]
  %717 = phi i32 [ %291, %700 ], [ %689, %687 ], [ %291, %668 ], [ %291, %651 ], [ %291, %634 ], [ %291, %618 ], [ %291, %610 ], [ %291, %602 ], [ %291, %594 ], [ %291, %586 ], [ %291, %578 ], [ %291, %570 ], [ %291, %561 ], [ %291, %544 ], [ %291, %527 ], [ %291, %510 ], [ %291, %493 ], [ %291, %476 ], [ %291, %459 ], [ %291, %443 ], [ %291, %427 ], [ %291, %411 ], [ %291, %395 ], [ %291, %379 ], [ %291, %711 ]
  %718 = phi i32 [ %292, %700 ], [ %292, %687 ], [ %292, %668 ], [ %653, %651 ], [ %292, %634 ], [ %292, %618 ], [ %292, %610 ], [ %292, %602 ], [ %292, %594 ], [ %292, %586 ], [ %292, %578 ], [ %292, %570 ], [ %292, %561 ], [ %292, %544 ], [ %292, %527 ], [ %292, %510 ], [ %292, %493 ], [ %292, %476 ], [ %292, %459 ], [ %292, %443 ], [ %292, %427 ], [ %292, %411 ], [ %292, %395 ], [ %292, %379 ], [ %292, %711 ]
  %719 = phi i32 [ %293, %700 ], [ %293, %687 ], [ %293, %668 ], [ %293, %651 ], [ %636, %634 ], [ %293, %618 ], [ %293, %610 ], [ %293, %602 ], [ %293, %594 ], [ %293, %586 ], [ %293, %578 ], [ %293, %570 ], [ %293, %561 ], [ %293, %544 ], [ %293, %527 ], [ %293, %510 ], [ %293, %493 ], [ %293, %476 ], [ %293, %459 ], [ %293, %443 ], [ %293, %427 ], [ %293, %411 ], [ %293, %395 ], [ %293, %379 ], [ %293, %711 ]
  %720 = phi i32 [ %294, %700 ], [ %294, %687 ], [ %294, %668 ], [ %294, %651 ], [ %294, %634 ], [ %294, %618 ], [ %294, %610 ], [ %294, %602 ], [ %294, %594 ], [ %294, %586 ], [ %294, %578 ], [ %294, %570 ], [ %563, %561 ], [ %294, %544 ], [ %294, %527 ], [ %294, %510 ], [ %294, %493 ], [ %294, %476 ], [ %294, %459 ], [ %294, %443 ], [ %294, %427 ], [ %294, %411 ], [ %294, %395 ], [ %294, %379 ], [ %294, %711 ]
  %721 = phi i32 [ %295, %700 ], [ %295, %687 ], [ %295, %668 ], [ %295, %651 ], [ %295, %634 ], [ %295, %618 ], [ %295, %610 ], [ %295, %602 ], [ %295, %594 ], [ %295, %586 ], [ %295, %578 ], [ %295, %570 ], [ %295, %561 ], [ %546, %544 ], [ %295, %527 ], [ %295, %510 ], [ %295, %493 ], [ %295, %476 ], [ %295, %459 ], [ %295, %443 ], [ %295, %427 ], [ %295, %411 ], [ %295, %395 ], [ %295, %379 ], [ %295, %711 ]
  %722 = phi i32 [ %296, %700 ], [ %296, %687 ], [ %296, %668 ], [ %296, %651 ], [ %296, %634 ], [ %296, %618 ], [ %296, %610 ], [ %296, %602 ], [ %296, %594 ], [ %296, %586 ], [ %296, %578 ], [ %296, %570 ], [ %296, %561 ], [ %296, %544 ], [ %529, %527 ], [ %296, %510 ], [ %296, %493 ], [ %296, %476 ], [ %296, %459 ], [ %296, %443 ], [ %296, %427 ], [ %296, %411 ], [ %296, %395 ], [ %296, %379 ], [ %296, %711 ]
  %723 = phi i32 [ %297, %700 ], [ %297, %687 ], [ %297, %668 ], [ %297, %651 ], [ %297, %634 ], [ %297, %618 ], [ %297, %610 ], [ %297, %602 ], [ %297, %594 ], [ %297, %586 ], [ %297, %578 ], [ %297, %570 ], [ %297, %561 ], [ %297, %544 ], [ %297, %527 ], [ %512, %510 ], [ %297, %493 ], [ %297, %476 ], [ %297, %459 ], [ %297, %443 ], [ %297, %427 ], [ %297, %411 ], [ %297, %395 ], [ %297, %379 ], [ %297, %711 ]
  %724 = phi i32 [ %298, %700 ], [ %298, %687 ], [ %298, %668 ], [ %298, %651 ], [ %298, %634 ], [ %298, %618 ], [ %298, %610 ], [ %298, %602 ], [ %298, %594 ], [ %298, %586 ], [ %298, %578 ], [ %298, %570 ], [ %298, %561 ], [ %298, %544 ], [ %298, %527 ], [ %298, %510 ], [ %495, %493 ], [ %298, %476 ], [ %298, %459 ], [ %298, %443 ], [ %298, %427 ], [ %298, %411 ], [ %298, %395 ], [ %298, %379 ], [ %298, %711 ]
  %725 = phi i32 [ %299, %700 ], [ %299, %687 ], [ %299, %668 ], [ %299, %651 ], [ %299, %634 ], [ %299, %618 ], [ %299, %610 ], [ %299, %602 ], [ %299, %594 ], [ %299, %586 ], [ %299, %578 ], [ %299, %570 ], [ %299, %561 ], [ %299, %544 ], [ %299, %527 ], [ %299, %510 ], [ %299, %493 ], [ %478, %476 ], [ %299, %459 ], [ %299, %443 ], [ %299, %427 ], [ %299, %411 ], [ %299, %395 ], [ %299, %379 ], [ %299, %711 ]
  %726 = phi i32 [ %300, %700 ], [ %300, %687 ], [ %300, %668 ], [ %300, %651 ], [ %300, %634 ], [ %300, %618 ], [ %300, %610 ], [ %300, %602 ], [ %300, %594 ], [ %300, %586 ], [ %300, %578 ], [ %300, %570 ], [ %300, %561 ], [ %300, %544 ], [ %300, %527 ], [ %300, %510 ], [ %300, %493 ], [ %300, %476 ], [ %461, %459 ], [ %300, %443 ], [ %300, %427 ], [ %300, %411 ], [ %300, %395 ], [ %300, %379 ], [ %300, %711 ]
  %727 = load i32, i32* %47, align 4
  switch i32 %727, label %763 [
    i32 87, label %731
    i32 37, label %728
  ]

728:                                              ; preds = %712
  %729 = load i64, i64* %100, align 4
  %730 = load i32, i32* %101, align 4
  store i32 87, i32* %47, align 4
  br label %735

731:                                              ; preds = %712
  %732 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %102) #15
  %733 = extractvalue { i64, i32 } %732, 0
  %734 = extractvalue { i64, i32 } %732, 1
  br label %735

735:                                              ; preds = %731, %728
  %736 = phi i32 [ %730, %728 ], [ %734, %731 ]
  %737 = phi i64 [ %729, %728 ], [ %733, %731 ]
  %738 = trunc i64 %737 to i32
  %739 = add i32 %738, -83
  %740 = icmp ult i32 %739, 3
  br i1 %740, label %741, label %757

741:                                              ; preds = %735, %751
  %742 = load i32, i32* %47, align 4
  %743 = icmp eq i32 %742, 87
  br i1 %743, label %747, label %744

744:                                              ; preds = %741
  %745 = load i64, i64* %100, align 4
  %746 = load i32, i32* %101, align 4
  store i32 87, i32* %47, align 4
  br label %751

747:                                              ; preds = %741
  %748 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %102) #15
  %749 = extractvalue { i64, i32 } %748, 0
  %750 = extractvalue { i64, i32 } %748, 1
  br label %751

751:                                              ; preds = %747, %744
  %752 = phi i32 [ %746, %744 ], [ %750, %747 ]
  %753 = phi i64 [ %745, %744 ], [ %749, %747 ]
  %754 = trunc i64 %753 to i32
  %755 = add i32 %754, -83
  %756 = icmp ult i32 %755, 3
  br i1 %756, label %741, label %757

757:                                              ; preds = %751, %735
  %758 = phi i64 [ %737, %735 ], [ %753, %751 ]
  %759 = phi i32 [ %736, %735 ], [ %752, %751 ]
  %760 = trunc i64 %758 to i32
  %761 = icmp eq i32 %760, 37
  br i1 %761, label %770, label %762

762:                                              ; preds = %757
  store i64 %758, i64* %100, align 4
  store i32 %759, i32* %101, align 4
  br label %763

763:                                              ; preds = %712, %762
  %764 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %1, i32 43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), %"struct.SkSL::Token"* null)
  %765 = load i8, i8* %109, align 1
  %766 = icmp slt i8 %765, 0
  br i1 %766, label %767, label %769

767:                                              ; preds = %763
  %768 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %768) #14
  br label %769

769:                                              ; preds = %763, %767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #15
  br i1 %764, label %286, label %776

770:                                              ; preds = %757
  %771 = load i8, i8* %109, align 1
  %772 = icmp slt i8 %771, 0
  br i1 %772, label %773, label %775

773:                                              ; preds = %770
  %774 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %774) #14
  br label %775

775:                                              ; preds = %770, %773
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #15
  br label %776

776:                                              ; preds = %769, %2, %92, %775
  %777 = phi i32 [ %713, %775 ], [ 0, %2 ], [ 0, %92 ], [ %713, %769 ]
  %778 = phi i32 [ %714, %775 ], [ -1, %2 ], [ -1, %92 ], [ %714, %769 ]
  %779 = phi i8* [ %715, %775 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %2 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.64, i64 0, i64 0), %92 ], [ %715, %769 ]
  %780 = phi i64 [ %716, %775 ], [ 0, %2 ], [ 0, %92 ], [ %716, %769 ]
  %781 = phi i32 [ %717, %775 ], [ 0, %2 ], [ 0, %92 ], [ %717, %769 ]
  %782 = phi i32 [ %718, %775 ], [ -1, %2 ], [ -1, %92 ], [ %718, %769 ]
  %783 = phi i32 [ %719, %775 ], [ -1, %2 ], [ -1, %92 ], [ %719, %769 ]
  %784 = phi i32 [ %720, %775 ], [ -1, %2 ], [ -1, %92 ], [ %720, %769 ]
  %785 = phi i32 [ %721, %775 ], [ -1, %2 ], [ -1, %92 ], [ %721, %769 ]
  %786 = phi i32 [ %722, %775 ], [ -1, %2 ], [ -1, %92 ], [ %722, %769 ]
  %787 = phi i32 [ %723, %775 ], [ -1, %2 ], [ -1, %92 ], [ %723, %769 ]
  %788 = phi i32 [ %724, %775 ], [ -1, %2 ], [ -1, %92 ], [ %724, %769 ]
  %789 = phi i32 [ %725, %775 ], [ -1, %2 ], [ -1, %92 ], [ %725, %769 ]
  %790 = phi i32 [ %726, %775 ], [ -1, %2 ], [ -1, %92 ], [ %726, %769 ]
  %791 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  store i32 %777, i32* %791, align 8
  %792 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  store i32 %790, i32* %792, align 4
  %793 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 2
  store i32 %789, i32* %793, align 8
  %794 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 3
  store i32 %788, i32* %794, align 4
  %795 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 4
  store i32 %787, i32* %795, align 8
  %796 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 5
  store i32 %786, i32* %796, align 4
  %797 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  store i32 %785, i32* %797, align 8
  %798 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 7
  store i32 %784, i32* %798, align 4
  %799 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 8
  store i32 %778, i32* %799, align 8
  %800 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 9
  store i32 %783, i32* %800, align 4
  %801 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 10
  store i32 %782, i32* %801, align 8
  %802 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 0
  store i8* %779, i8** %802, align 8
  br label %803

803:                                              ; preds = %776, %281
  %804 = phi i64 [ %780, %776 ], [ 0, %281 ]
  %805 = phi i32 [ %781, %776 ], [ 0, %281 ]
  %806 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12, i32 1
  store i64 %804, i64* %806, align 8
  %807 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  store i32 %805, i32* %807, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser9statementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"class.std::__1::vector.45"*, align 8
  %4 = alloca %"struct.SkSL::Token", align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::vector.45"*, align 8
  %7 = alloca %"struct.SkSL::Token", align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::vector.45"*, align 8
  %10 = alloca %"struct.SkSL::Token", align 4
  %11 = alloca i32, align 4
  %12 = alloca %"struct.SkSL::Token", align 8
  %13 = alloca %"class.SkSL::AutoDepth", align 8
  %14 = alloca i32, align 4
  %15 = bitcast %"struct.SkSL::Token"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %12, i64 0, i32 0
  store i32 -1431655766, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %12, i64 0, i32 1
  store i32 -1431655766, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %12, i64 0, i32 2
  store i32 -1431655766, i32* %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 87
  br i1 %21, label %28, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %24 = bitcast %"struct.SkSL::Token"* %23 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %27 = load i32, i32* %26, align 4
  store i32 87, i32* %19, align 4
  br label %33

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %30 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %29) #15
  %31 = extractvalue { i64, i32 } %30, 0
  %32 = extractvalue { i64, i32 } %30, 1
  br label %33

33:                                               ; preds = %28, %22
  %34 = phi i32 [ %27, %22 ], [ %32, %28 ]
  %35 = phi i64 [ %25, %22 ], [ %31, %28 ]
  %36 = trunc i64 %35 to i32
  %37 = add i32 %36, -83
  %38 = icmp ult i32 %37, 3
  br i1 %38, label %39, label %60

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %41 = bitcast %"struct.SkSL::Token"* %40 to i64*
  %42 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %43 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %44

44:                                               ; preds = %54, %39
  %45 = load i32, i32* %19, align 4
  %46 = icmp eq i32 %45, 87
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = load i64, i64* %41, align 4
  %49 = load i32, i32* %42, align 4
  store i32 87, i32* %19, align 4
  br label %54

50:                                               ; preds = %44
  %51 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %43) #15
  %52 = extractvalue { i64, i32 } %51, 0
  %53 = extractvalue { i64, i32 } %51, 1
  br label %54

54:                                               ; preds = %50, %47
  %55 = phi i32 [ %49, %47 ], [ %53, %50 ]
  %56 = phi i64 [ %48, %47 ], [ %52, %50 ]
  %57 = trunc i64 %56 to i32
  %58 = add i32 %57, -83
  %59 = icmp ult i32 %58, 3
  br i1 %59, label %44, label %60

60:                                               ; preds = %54, %33
  %61 = phi i64 [ %35, %33 ], [ %56, %54 ]
  %62 = phi i32 [ %34, %33 ], [ %55, %54 ]
  %63 = bitcast %"struct.SkSL::Token"* %12 to i64*
  store i64 %61, i64* %63, align 8
  store i32 %62, i32* %18, align 8
  %64 = bitcast %"class.SkSL::AutoDepth"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #15
  %65 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %13, i64 0, i32 0
  %66 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %13, i64 0, i32 1
  %67 = bitcast %"class.SkSL::AutoDepth"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %65, align 8
  store i32 0, i32* %66, align 8
  %68 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %13)
  br i1 %68, label %69, label %186

69:                                               ; preds = %60
  %70 = trunc i64 %61 to i32
  %71 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %72 = bitcast %"struct.SkSL::Token"* %71 to i64*
  store i64 %61, i64* %72, align 4
  %73 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %62, i32* %73, align 4
  switch i32 %70, label %180 [
    i32 5, label %74
    i32 6, label %74
    i32 8, label %76
    i32 10, label %78
    i32 9, label %80
    i32 11, label %82
    i32 12, label %82
    i32 18, label %84
    i32 15, label %86
    i32 16, label %111
    i32 17, label %136
    i32 38, label %161
    i32 81, label %163
    i32 23, label %178
    i32 33, label %178
  ]

74:                                               ; preds = %69, %69
  %75 = call i32 @_ZN4SkSL6Parser11ifStatementEv(%"class.SkSL::Parser"* %0)
  br label %186

76:                                               ; preds = %69
  %77 = call i32 @_ZN4SkSL6Parser12forStatementEv(%"class.SkSL::Parser"* %0)
  br label %186

78:                                               ; preds = %69
  %79 = call i32 @_ZN4SkSL6Parser11doStatementEv(%"class.SkSL::Parser"* %0)
  br label %186

80:                                               ; preds = %69
  %81 = call i32 @_ZN4SkSL6Parser14whileStatementEv(%"class.SkSL::Parser"* %0)
  br label %186

82:                                               ; preds = %69, %69
  %83 = call i32 @_ZN4SkSL6Parser15switchStatementEv(%"class.SkSL::Parser"* %0)
  br label %186

84:                                               ; preds = %69
  %85 = call i32 @_ZN4SkSL6Parser15returnStatementEv(%"class.SkSL::Parser"* %0)
  br label %186

86:                                               ; preds = %69
  %87 = bitcast %"struct.SkSL::Token"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %87) #15
  %88 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %10, i64 0, i32 0
  %89 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %10, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %10, i64 0, i32 2
  store i32 87, i32* %88, align 4
  store i32 -1, i32* %89, align 4
  store i32 -1, i32* %90, align 4
  %91 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %10) #15
  br i1 %91, label %92, label %109

92:                                               ; preds = %86
  %93 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null) #15
  br i1 %93, label %94, label %109

94:                                               ; preds = %92
  %95 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #15
  store i32 3, i32* %11, align 4
  %96 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %97 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %96, align 8
  %98 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %97, i64 0, i32 0
  %99 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %97, i64 0, i32 0, i32 0, i32 1
  %100 = bitcast %"struct.SkSL::ASTNode"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"struct.SkSL::ASTFile"* %97 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %101, %103
  %105 = sdiv exact i64 %104, 160
  %106 = trunc i64 %105 to i32
  %107 = bitcast %"class.std::__1::vector.45"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #15
  store %"class.std::__1::vector.45"* %98, %"class.std::__1::vector.45"** %9, align 8
  %108 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %98, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %9, i32* dereferenceable(4) %89, i32* nonnull dereferenceable(4) %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #15
  br label %109

109:                                              ; preds = %86, %92, %94
  %110 = phi i32 [ %106, %94 ], [ -1, %86 ], [ -1, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %87) #15
  br label %186

111:                                              ; preds = %69
  %112 = bitcast %"struct.SkSL::Token"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %112) #15
  %113 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %7, i64 0, i32 0
  %114 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %7, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %7, i64 0, i32 2
  store i32 87, i32* %113, align 4
  store i32 -1, i32* %114, align 4
  store i32 -1, i32* %115, align 4
  %116 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %7) #15
  br i1 %116, label %117, label %134

117:                                              ; preds = %111
  %118 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null) #15
  br i1 %118, label %119, label %134

119:                                              ; preds = %117
  %120 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120) #15
  store i32 5, i32* %8, align 4
  %121 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %122 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %121, align 8
  %123 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %122, i64 0, i32 0
  %124 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %122, i64 0, i32 0, i32 0, i32 1
  %125 = bitcast %"struct.SkSL::ASTNode"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"struct.SkSL::ASTFile"* %122 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %126, %128
  %130 = sdiv exact i64 %129, 160
  %131 = trunc i64 %130 to i32
  %132 = bitcast %"class.std::__1::vector.45"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #15
  store %"class.std::__1::vector.45"* %123, %"class.std::__1::vector.45"** %6, align 8
  %133 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %123, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %6, i32* dereferenceable(4) %114, i32* nonnull dereferenceable(4) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120) #15
  br label %134

134:                                              ; preds = %111, %117, %119
  %135 = phi i32 [ %131, %119 ], [ -1, %111 ], [ -1, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %112) #15
  br label %186

136:                                              ; preds = %69
  %137 = bitcast %"struct.SkSL::Token"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %137) #15
  %138 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 0
  %139 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 1
  %140 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 2
  store i32 87, i32* %138, align 4
  store i32 -1, i32* %139, align 4
  store i32 -1, i32* %140, align 4
  %141 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %4) #15
  br i1 %141, label %142, label %159

142:                                              ; preds = %136
  %143 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null) #15
  br i1 %143, label %144, label %159

144:                                              ; preds = %142
  %145 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #15
  store i32 6, i32* %5, align 4
  %146 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %147 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %146, align 8
  %148 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %147, i64 0, i32 0
  %149 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %147, i64 0, i32 0, i32 0, i32 1
  %150 = bitcast %"struct.SkSL::ASTNode"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.SkSL::ASTFile"* %147 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = sdiv exact i64 %154, 160
  %156 = trunc i64 %155 to i32
  %157 = bitcast %"class.std::__1::vector.45"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #15
  store %"class.std::__1::vector.45"* %148, %"class.std::__1::vector.45"** %3, align 8
  %158 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %148, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %3, i32* dereferenceable(4) %139, i32* nonnull dereferenceable(4) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #15
  br label %159

159:                                              ; preds = %136, %142, %144
  %160 = phi i32 [ %156, %144 ], [ -1, %136 ], [ -1, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %137) #15
  br label %186

161:                                              ; preds = %69
  %162 = call i32 @_ZN4SkSL6Parser5blockEv(%"class.SkSL::Parser"* %0)
  br label %186

163:                                              ; preds = %69
  store i32 87, i32* %19, align 4
  %164 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #15
  store i32 1, i32* %14, align 4
  %165 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %166 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %165, align 8
  %167 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %166, i64 0, i32 0
  %168 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %166, i64 0, i32 0, i32 0, i32 1
  %169 = bitcast %"struct.SkSL::ASTNode"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"struct.SkSL::ASTFile"* %166 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %170, %172
  %174 = sdiv exact i64 %173, 160
  %175 = trunc i64 %174 to i32
  %176 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #15
  store %"class.std::__1::vector.45"* %167, %"class.std::__1::vector.45"** %2, align 8
  %177 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %167, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %17, i32* nonnull dereferenceable(4) %14) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #15
  br label %186

178:                                              ; preds = %69, %69
  %179 = call i32 @_ZN4SkSL6Parser36varDeclarationsOrExpressionStatementEv(%"class.SkSL::Parser"* %0)
  br label %186

180:                                              ; preds = %69
  %181 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0) #15
  %182 = icmp sgt i32 %181, -1
  br i1 %182, label %183, label %185

183:                                              ; preds = %180
  %184 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null) #15
  br i1 %184, label %186, label %185

185:                                              ; preds = %183, %180
  br label %186

186:                                              ; preds = %185, %183, %60, %178, %163, %161, %159, %134, %109, %84, %82, %80, %78, %76, %74
  %187 = phi i32 [ %179, %178 ], [ %175, %163 ], [ %162, %161 ], [ %160, %159 ], [ %135, %134 ], [ %110, %109 ], [ %85, %84 ], [ %83, %82 ], [ %81, %80 ], [ %79, %78 ], [ %77, %76 ], [ %75, %74 ], [ -1, %60 ], [ -1, %185 ], [ %181, %183 ]
  %188 = load i32, i32* %66, align 8
  %189 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %65, align 8
  %190 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %189, i64 0, i32 2
  %191 = load i32, i32* %190, align 8
  %192 = sub nsw i32 %191, %188
  store i32 %192, i32* %190, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #15
  ret i32 %187
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %0, i64 0, i32 0
  %7 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 50
  br i1 %14, label %15, label %65

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %11, i64 0, i32 3, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 87
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %11, i64 0, i32 3
  %21 = bitcast %"struct.SkSL::Token"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  br label %58

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %11, i64 0, i32 1
  %25 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %24) #15
  %26 = extractvalue { i64, i32 } %25, 0
  %27 = trunc i64 %26 to i32
  %28 = add i32 %27, -83
  %29 = icmp ult i32 %28, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  %31 = extractvalue { i64, i32 } %25, 1
  br label %52

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %11, i64 0, i32 3
  %34 = bitcast %"struct.SkSL::Token"* %33 to i64*
  %35 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %11, i64 0, i32 3, i32 2
  br label %36

36:                                               ; preds = %46, %32
  %37 = load i32, i32* %16, align 4
  %38 = icmp eq i32 %37, 87
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = load i64, i64* %34, align 4
  %41 = load i32, i32* %35, align 4
  store i32 87, i32* %16, align 4
  br label %46

42:                                               ; preds = %36
  %43 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %24) #15
  %44 = extractvalue { i64, i32 } %43, 0
  %45 = extractvalue { i64, i32 } %43, 1
  br label %46

46:                                               ; preds = %42, %39
  %47 = phi i32 [ %41, %39 ], [ %45, %42 ]
  %48 = phi i64 [ %40, %39 ], [ %44, %42 ]
  %49 = trunc i64 %48 to i32
  %50 = add i32 %49, -83
  %51 = icmp ult i32 %50, 3
  br i1 %51, label %36, label %52

52:                                               ; preds = %46, %30
  %53 = phi i64 [ %26, %30 ], [ %48, %46 ]
  %54 = phi i32 [ %31, %30 ], [ %47, %46 ]
  %55 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %11, i64 0, i32 3
  %56 = bitcast %"struct.SkSL::Token"* %55 to i64*
  store i64 %53, i64* %56, align 4
  %57 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %11, i64 0, i32 3, i32 2
  store i32 %54, i32* %57, align 4
  br label %58

58:                                               ; preds = %52, %19
  %59 = phi i64 [ %22, %19 ], [ %53, %52 ]
  %60 = tail call i8* @_Znwm(i64 32) #14
  %61 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %60, i8** %61, align 8
  %62 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast i64* %62 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %63, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.125, i64 0, i64 0), i64 24, i1 false) #15
  %64 = getelementptr inbounds i8, i8* %60, i64 24
  store i8 0, i8* %64, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %11, i64 %59, i32 undef, %"class.SkSL::String"* nonnull %2)
  tail call void @_ZdlPv(i8* nonnull %60) #14
  br label %65

65:                                               ; preds = %58, %1
  %66 = phi i1 [ true, %1 ], [ false, %58 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser11ifStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Token", align 8
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.SkSL::Token"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 2
  store i32 87, i32* %6, align 8
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #15
  store i8 -86, i8* %3, align 1
  %9 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %60 [
    i32 87, label %17
    i32 6, label %11
  ]

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %13 = bitcast %"struct.SkSL::Token"* %12 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  store i32 87, i32* %9, align 4
  br label %22

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %19 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %18) #15
  %20 = extractvalue { i64, i32 } %19, 0
  %21 = extractvalue { i64, i32 } %19, 1
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i32 [ %16, %11 ], [ %21, %17 ]
  %24 = phi i64 [ %14, %11 ], [ %20, %17 ]
  %25 = trunc i64 %24 to i32
  %26 = add i32 %25, -83
  %27 = icmp ult i32 %26, 3
  br i1 %27, label %28, label %49

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %30 = bitcast %"struct.SkSL::Token"* %29 to i64*
  %31 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %32 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %33

33:                                               ; preds = %43, %28
  %34 = load i32, i32* %9, align 4
  %35 = icmp eq i32 %34, 87
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = load i64, i64* %30, align 4
  %38 = load i32, i32* %31, align 4
  store i32 87, i32* %9, align 4
  br label %43

39:                                               ; preds = %33
  %40 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %32) #15
  %41 = extractvalue { i64, i32 } %40, 0
  %42 = extractvalue { i64, i32 } %40, 1
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi i32 [ %38, %36 ], [ %42, %39 ]
  %45 = phi i64 [ %37, %36 ], [ %41, %39 ]
  %46 = trunc i64 %45 to i32
  %47 = add i32 %46, -83
  %48 = icmp ult i32 %47, 3
  br i1 %48, label %33, label %49

49:                                               ; preds = %43, %22
  %50 = phi i64 [ %24, %22 ], [ %45, %43 ]
  %51 = phi i32 [ %23, %22 ], [ %44, %43 ]
  %52 = trunc i64 %50 to i32
  %53 = icmp eq i32 %52, 6
  br i1 %53, label %58, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %56 = bitcast %"struct.SkSL::Token"* %55 to i64*
  store i64 %50, i64* %56, align 4
  %57 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %51, i32* %57, align 4
  br label %60

58:                                               ; preds = %49
  %59 = bitcast %"struct.SkSL::Token"* %2 to i64*
  store i64 %50, i64* %59, align 8
  store i32 %51, i32* %8, align 8
  store i8 1, i8* %3, align 1
  br label %62

60:                                               ; preds = %1, %54
  store i8 0, i8* %3, align 1
  %61 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %2)
  br i1 %61, label %62, label %180

62:                                               ; preds = %58, %60
  %63 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #15
  store i32 18, i32* %4, align 4
  %64 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERbEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4, i8* nonnull dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #15
  %65 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %65, label %66, label %180

66:                                               ; preds = %62
  %67 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %68 = icmp sgt i32 %67, -1
  br i1 %68, label %69, label %180

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %71 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %70, align 8
  %72 = sext i32 %64 to i64
  %73 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 5, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %85

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 0
  %80 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %79, align 8
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %80, i64 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %83, i64 %81, i32 6, i32 0
  br label %87

85:                                               ; preds = %69
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 4, i32 0
  br label %87

87:                                               ; preds = %78, %85
  %88 = phi i32* [ %84, %78 ], [ %86, %85 ]
  store i32 %67, i32* %88, align 4
  store i32 %67, i32* %75, align 8
  %89 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %89, label %90, label %180

90:                                               ; preds = %87
  %91 = call i32 @_ZN4SkSL6Parser9statementEv(%"class.SkSL::Parser"* %0)
  %92 = icmp sgt i32 %91, -1
  br i1 %92, label %93, label %180

93:                                               ; preds = %90
  %94 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %70, align 8
  %95 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %95, align 8
  %97 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %72, i32 5, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp sgt i32 %98, -1
  br i1 %99, label %100, label %107

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %72, i32 0
  %102 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %101, align 8
  %103 = sext i32 %98 to i64
  %104 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %102, i64 0, i32 0, i32 0
  %105 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %104, align 8
  %106 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %105, i64 %103, i32 6, i32 0
  br label %109

107:                                              ; preds = %93
  %108 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %72, i32 4, i32 0
  br label %109

109:                                              ; preds = %100, %107
  %110 = phi i32* [ %106, %100 ], [ %108, %107 ]
  store i32 %91, i32* %110, align 4
  store i32 %91, i32* %97, align 8
  %111 = load i32, i32* %9, align 4
  switch i32 %111, label %180 [
    i32 87, label %118
    i32 7, label %112
  ]

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %114 = bitcast %"struct.SkSL::Token"* %113 to i64*
  %115 = load i64, i64* %114, align 4
  %116 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %117 = load i32, i32* %116, align 4
  store i32 87, i32* %9, align 4
  br label %123

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %120 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %119) #15
  %121 = extractvalue { i64, i32 } %120, 0
  %122 = extractvalue { i64, i32 } %120, 1
  br label %123

123:                                              ; preds = %118, %112
  %124 = phi i32 [ %117, %112 ], [ %122, %118 ]
  %125 = phi i64 [ %115, %112 ], [ %121, %118 ]
  %126 = trunc i64 %125 to i32
  %127 = add i32 %126, -83
  %128 = icmp ult i32 %127, 3
  br i1 %128, label %129, label %150

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %131 = bitcast %"struct.SkSL::Token"* %130 to i64*
  %132 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %133 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %134

134:                                              ; preds = %144, %129
  %135 = load i32, i32* %9, align 4
  %136 = icmp eq i32 %135, 87
  br i1 %136, label %140, label %137

137:                                              ; preds = %134
  %138 = load i64, i64* %131, align 4
  %139 = load i32, i32* %132, align 4
  store i32 87, i32* %9, align 4
  br label %144

140:                                              ; preds = %134
  %141 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %133) #15
  %142 = extractvalue { i64, i32 } %141, 0
  %143 = extractvalue { i64, i32 } %141, 1
  br label %144

144:                                              ; preds = %140, %137
  %145 = phi i32 [ %139, %137 ], [ %143, %140 ]
  %146 = phi i64 [ %138, %137 ], [ %142, %140 ]
  %147 = trunc i64 %146 to i32
  %148 = add i32 %147, -83
  %149 = icmp ult i32 %148, 3
  br i1 %149, label %134, label %150

150:                                              ; preds = %144, %123
  %151 = phi i64 [ %125, %123 ], [ %146, %144 ]
  %152 = phi i32 [ %124, %123 ], [ %145, %144 ]
  %153 = trunc i64 %151 to i32
  %154 = icmp eq i32 %153, 7
  br i1 %154, label %159, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %157 = bitcast %"struct.SkSL::Token"* %156 to i64*
  store i64 %151, i64* %157, align 4
  %158 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %152, i32* %158, align 4
  br label %180

159:                                              ; preds = %150
  %160 = call i32 @_ZN4SkSL6Parser9statementEv(%"class.SkSL::Parser"* %0)
  %161 = icmp sgt i32 %160, -1
  br i1 %161, label %162, label %180

162:                                              ; preds = %159
  %163 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %70, align 8
  %164 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %163, i64 0, i32 0, i32 0, i32 0
  %165 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %164, align 8
  %166 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %165, i64 %72, i32 5, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = icmp sgt i32 %167, -1
  br i1 %168, label %169, label %176

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %165, i64 %72, i32 0
  %171 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %170, align 8
  %172 = sext i32 %167 to i64
  %173 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %171, i64 0, i32 0, i32 0
  %174 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %173, align 8
  %175 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %174, i64 %172, i32 6, i32 0
  br label %178

176:                                              ; preds = %162
  %177 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %165, i64 %72, i32 4, i32 0
  br label %178

178:                                              ; preds = %169, %176
  %179 = phi i32* [ %175, %169 ], [ %177, %176 ]
  store i32 %160, i32* %179, align 4
  store i32 %160, i32* %166, align 8
  br label %180

180:                                              ; preds = %109, %155, %66, %87, %178, %159, %90, %62, %60
  %181 = phi i32 [ -1, %60 ], [ -1, %62 ], [ -1, %66 ], [ -1, %87 ], [ -1, %90 ], [ %64, %178 ], [ -1, %159 ], [ %64, %109 ], [ %64, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  ret i32 %181
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser12forStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 4
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  %9 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %9, label %10, label %296

10:                                               ; preds = %1
  %11 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %11, label %12, label %296

12:                                               ; preds = %10
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 14, i32* %4, align 4
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.SkSL::ASTFile"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 160
  %24 = trunc i64 %23 to i32
  %25 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store %"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** %2, align 8
  %26 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  %27 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 87
  br i1 %29, label %35, label %30

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %32 = bitcast %"struct.SkSL::Token"* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = trunc i64 %33 to i32
  br label %73

35:                                               ; preds = %12
  %36 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %37 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %36) #15
  %38 = extractvalue { i64, i32 } %37, 0
  %39 = trunc i64 %38 to i32
  %40 = add i32 %39, -83
  %41 = icmp ult i32 %40, 3
  br i1 %41, label %44, label %42

42:                                               ; preds = %35
  %43 = extractvalue { i64, i32 } %37, 1
  br label %66

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %46 = bitcast %"struct.SkSL::Token"* %45 to i64*
  %47 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %48

48:                                               ; preds = %58, %44
  %49 = load i32, i32* %27, align 4
  %50 = icmp eq i32 %49, 87
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = load i64, i64* %46, align 4
  %53 = load i32, i32* %47, align 4
  store i32 87, i32* %27, align 4
  br label %58

54:                                               ; preds = %48
  %55 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %36) #15
  %56 = extractvalue { i64, i32 } %55, 0
  %57 = extractvalue { i64, i32 } %55, 1
  br label %58

58:                                               ; preds = %54, %51
  %59 = phi i32 [ %53, %51 ], [ %57, %54 ]
  %60 = phi i64 [ %52, %51 ], [ %56, %54 ]
  %61 = trunc i64 %60 to i32
  %62 = add i32 %61, -83
  %63 = icmp ult i32 %62, 3
  br i1 %63, label %48, label %64

64:                                               ; preds = %58
  %65 = trunc i64 %60 to i32
  br label %66

66:                                               ; preds = %64, %42
  %67 = phi i32 [ %39, %42 ], [ %65, %64 ]
  %68 = phi i64 [ %38, %42 ], [ %60, %64 ]
  %69 = phi i32 [ %43, %42 ], [ %59, %64 ]
  %70 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %71 = bitcast %"struct.SkSL::Token"* %70 to i64*
  store i64 %68, i64* %71, align 4
  %72 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %69, i32* %72, align 4
  br label %73

73:                                               ; preds = %30, %66
  %74 = phi i32 [ %34, %30 ], [ %67, %66 ]
  %75 = phi i64 [ %33, %30 ], [ %68, %66 ]
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %76, 81
  br i1 %77, label %78, label %106

78:                                               ; preds = %73
  %79 = icmp eq i32 %74, 87
  br i1 %79, label %81, label %80

80:                                               ; preds = %78
  store i32 87, i32* %27, align 4
  br label %105

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %83 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %82) #15
  %84 = extractvalue { i64, i32 } %83, 0
  %85 = trunc i64 %84 to i32
  %86 = add i32 %85, -83
  %87 = icmp ult i32 %86, 3
  br i1 %87, label %88, label %105

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %90 = bitcast %"struct.SkSL::Token"* %89 to i64*
  %91 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %92

92:                                               ; preds = %100, %88
  %93 = load i32, i32* %27, align 4
  %94 = icmp eq i32 %93, 87
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = load i64, i64* %90, align 4
  store i32 87, i32* %27, align 4
  br label %100

97:                                               ; preds = %92
  %98 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %91) #15
  %99 = extractvalue { i64, i32 } %98, 0
  br label %100

100:                                              ; preds = %97, %95
  %101 = phi i64 [ %96, %95 ], [ %99, %97 ]
  %102 = trunc i64 %101 to i32
  %103 = add i32 %102, -83
  %104 = icmp ult i32 %103, 3
  br i1 %104, label %92, label %105

105:                                              ; preds = %100, %80, %81
  call void @_ZN4SkSL6Parser16createEmptyChildENS_7ASTNode2IDE(%"class.SkSL::Parser"* %0, i32 %24)
  br label %129

106:                                              ; preds = %73
  %107 = call i32 @_ZN4SkSL6Parser36varDeclarationsOrExpressionStatementEv(%"class.SkSL::Parser"* %0)
  %108 = icmp sgt i32 %107, -1
  br i1 %108, label %109, label %296

109:                                              ; preds = %106
  %110 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %111 = shl i64 %23, 32
  %112 = ashr exact i64 %111, 32
  %113 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %110, i64 0, i32 0, i32 0, i32 0
  %114 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %113, align 8
  %115 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %114, i64 %112, i32 5, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %116, -1
  br i1 %117, label %118, label %125

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %114, i64 %112, i32 0
  %120 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %119, align 8
  %121 = sext i32 %116 to i64
  %122 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %120, i64 0, i32 0, i32 0
  %123 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %122, align 8
  %124 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %123, i64 %121, i32 6, i32 0
  br label %127

125:                                              ; preds = %109
  %126 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %114, i64 %112, i32 4, i32 0
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32* [ %126, %125 ], [ %124, %118 ]
  store i32 %107, i32* %128, align 4
  store i32 %107, i32* %115, align 8
  br label %129

129:                                              ; preds = %127, %105
  %130 = load i32, i32* %27, align 4
  %131 = icmp eq i32 %130, 87
  br i1 %131, label %136, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %134 = bitcast %"struct.SkSL::Token"* %133 to i64*
  %135 = load i64, i64* %134, align 4
  br label %171

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %138 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %137) #15
  %139 = extractvalue { i64, i32 } %138, 0
  %140 = trunc i64 %139 to i32
  %141 = add i32 %140, -83
  %142 = icmp ult i32 %141, 3
  br i1 %142, label %145, label %143

143:                                              ; preds = %136
  %144 = extractvalue { i64, i32 } %138, 1
  br label %165

145:                                              ; preds = %136
  %146 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %147 = bitcast %"struct.SkSL::Token"* %146 to i64*
  %148 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %149

149:                                              ; preds = %159, %145
  %150 = load i32, i32* %27, align 4
  %151 = icmp eq i32 %150, 87
  br i1 %151, label %155, label %152

152:                                              ; preds = %149
  %153 = load i64, i64* %147, align 4
  %154 = load i32, i32* %148, align 4
  store i32 87, i32* %27, align 4
  br label %159

155:                                              ; preds = %149
  %156 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %137) #15
  %157 = extractvalue { i64, i32 } %156, 0
  %158 = extractvalue { i64, i32 } %156, 1
  br label %159

159:                                              ; preds = %155, %152
  %160 = phi i32 [ %154, %152 ], [ %158, %155 ]
  %161 = phi i64 [ %153, %152 ], [ %157, %155 ]
  %162 = trunc i64 %161 to i32
  %163 = add i32 %162, -83
  %164 = icmp ult i32 %163, 3
  br i1 %164, label %149, label %165

165:                                              ; preds = %159, %143
  %166 = phi i64 [ %139, %143 ], [ %161, %159 ]
  %167 = phi i32 [ %144, %143 ], [ %160, %159 ]
  %168 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %169 = bitcast %"struct.SkSL::Token"* %168 to i64*
  store i64 %166, i64* %169, align 4
  %170 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %167, i32* %170, align 4
  br label %171

171:                                              ; preds = %132, %165
  %172 = phi i64 [ %135, %132 ], [ %166, %165 ]
  %173 = trunc i64 %172 to i32
  %174 = icmp eq i32 %173, 81
  br i1 %174, label %198, label %175

175:                                              ; preds = %171
  %176 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %177 = icmp sgt i32 %176, -1
  br i1 %177, label %178, label %296

178:                                              ; preds = %175
  %179 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %180 = shl i64 %23, 32
  %181 = ashr exact i64 %180, 32
  %182 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %179, i64 0, i32 0, i32 0, i32 0
  %183 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %182, align 8
  %184 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %183, i64 %181, i32 5, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = icmp sgt i32 %185, -1
  br i1 %186, label %187, label %194

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %183, i64 %181, i32 0
  %189 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %188, align 8
  %190 = sext i32 %185 to i64
  %191 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %189, i64 0, i32 0, i32 0
  %192 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %191, align 8
  %193 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %192, i64 %190, i32 6, i32 0
  br label %196

194:                                              ; preds = %178
  %195 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %183, i64 %181, i32 4, i32 0
  br label %196

196:                                              ; preds = %187, %194
  %197 = phi i32* [ %193, %187 ], [ %195, %194 ]
  store i32 %176, i32* %197, align 4
  store i32 %176, i32* %184, align 8
  br label %199

198:                                              ; preds = %171
  call void @_ZN4SkSL6Parser16createEmptyChildENS_7ASTNode2IDE(%"class.SkSL::Parser"* %0, i32 %24)
  br label %199

199:                                              ; preds = %198, %196
  %200 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %200, label %201, label %296

201:                                              ; preds = %199
  %202 = load i32, i32* %27, align 4
  %203 = icmp eq i32 %202, 87
  br i1 %203, label %208, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %206 = bitcast %"struct.SkSL::Token"* %205 to i64*
  %207 = load i64, i64* %206, align 4
  br label %243

208:                                              ; preds = %201
  %209 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %210 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %209) #15
  %211 = extractvalue { i64, i32 } %210, 0
  %212 = trunc i64 %211 to i32
  %213 = add i32 %212, -83
  %214 = icmp ult i32 %213, 3
  br i1 %214, label %217, label %215

215:                                              ; preds = %208
  %216 = extractvalue { i64, i32 } %210, 1
  br label %237

217:                                              ; preds = %208
  %218 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %219 = bitcast %"struct.SkSL::Token"* %218 to i64*
  %220 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %221

221:                                              ; preds = %231, %217
  %222 = load i32, i32* %27, align 4
  %223 = icmp eq i32 %222, 87
  br i1 %223, label %227, label %224

224:                                              ; preds = %221
  %225 = load i64, i64* %219, align 4
  %226 = load i32, i32* %220, align 4
  store i32 87, i32* %27, align 4
  br label %231

227:                                              ; preds = %221
  %228 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %209) #15
  %229 = extractvalue { i64, i32 } %228, 0
  %230 = extractvalue { i64, i32 } %228, 1
  br label %231

231:                                              ; preds = %227, %224
  %232 = phi i32 [ %226, %224 ], [ %230, %227 ]
  %233 = phi i64 [ %225, %224 ], [ %229, %227 ]
  %234 = trunc i64 %233 to i32
  %235 = add i32 %234, -83
  %236 = icmp ult i32 %235, 3
  br i1 %236, label %221, label %237

237:                                              ; preds = %231, %215
  %238 = phi i64 [ %211, %215 ], [ %233, %231 ]
  %239 = phi i32 [ %216, %215 ], [ %232, %231 ]
  %240 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %241 = bitcast %"struct.SkSL::Token"* %240 to i64*
  store i64 %238, i64* %241, align 4
  %242 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %239, i32* %242, align 4
  br label %243

243:                                              ; preds = %204, %237
  %244 = phi i64 [ %207, %204 ], [ %238, %237 ]
  %245 = trunc i64 %244 to i32
  %246 = icmp eq i32 %245, 37
  br i1 %246, label %270, label %247

247:                                              ; preds = %243
  %248 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %249 = icmp sgt i32 %248, -1
  br i1 %249, label %250, label %296

250:                                              ; preds = %247
  %251 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %252 = shl i64 %23, 32
  %253 = ashr exact i64 %252, 32
  %254 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %251, i64 0, i32 0, i32 0, i32 0
  %255 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %254, align 8
  %256 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %255, i64 %253, i32 5, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp sgt i32 %257, -1
  br i1 %258, label %259, label %266

259:                                              ; preds = %250
  %260 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %255, i64 %253, i32 0
  %261 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %260, align 8
  %262 = sext i32 %257 to i64
  %263 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %261, i64 0, i32 0, i32 0
  %264 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %263, align 8
  %265 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %264, i64 %262, i32 6, i32 0
  br label %268

266:                                              ; preds = %250
  %267 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %255, i64 %253, i32 4, i32 0
  br label %268

268:                                              ; preds = %259, %266
  %269 = phi i32* [ %265, %259 ], [ %267, %266 ]
  store i32 %248, i32* %269, align 4
  store i32 %248, i32* %256, align 8
  br label %271

270:                                              ; preds = %243
  call void @_ZN4SkSL6Parser16createEmptyChildENS_7ASTNode2IDE(%"class.SkSL::Parser"* %0, i32 %24)
  br label %271

271:                                              ; preds = %270, %268
  %272 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %272, label %273, label %296

273:                                              ; preds = %271
  %274 = call i32 @_ZN4SkSL6Parser9statementEv(%"class.SkSL::Parser"* %0)
  %275 = icmp sgt i32 %274, -1
  br i1 %275, label %276, label %296

276:                                              ; preds = %273
  %277 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %278 = shl i64 %23, 32
  %279 = ashr exact i64 %278, 32
  %280 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %277, i64 0, i32 0, i32 0, i32 0
  %281 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %280, align 8
  %282 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %281, i64 %279, i32 5, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = icmp sgt i32 %283, -1
  br i1 %284, label %285, label %292

285:                                              ; preds = %276
  %286 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %281, i64 %279, i32 0
  %287 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %286, align 8
  %288 = sext i32 %283 to i64
  %289 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %287, i64 0, i32 0, i32 0
  %290 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %289, align 8
  %291 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %290, i64 %288, i32 6, i32 0
  br label %294

292:                                              ; preds = %276
  %293 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %281, i64 %279, i32 4, i32 0
  br label %294

294:                                              ; preds = %285, %292
  %295 = phi i32* [ %291, %285 ], [ %293, %292 ]
  store i32 %274, i32* %295, align 4
  store i32 %274, i32* %282, align 8
  br label %296

296:                                              ; preds = %175, %199, %294, %273, %271, %247, %106, %10, %1
  %297 = phi i32 [ -1, %1 ], [ -1, %10 ], [ -1, %106 ], [ -1, %175 ], [ -1, %199 ], [ -1, %247 ], [ -1, %271 ], [ %24, %294 ], [ -1, %273 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  ret i32 %297
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser11doStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 4
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  %9 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %9, label %10, label %75

10:                                               ; preds = %1
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15
  store i32 7, i32* %4, align 4
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %12, align 8
  %14 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %13, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.SkSL::ASTNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.SkSL::ASTFile"* %13 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 160
  %22 = trunc i64 %21 to i32
  %23 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  store %"class.std::__1::vector.45"* %14, %"class.std::__1::vector.45"** %2, align 8
  %24 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %14, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #15
  %25 = call i32 @_ZN4SkSL6Parser9statementEv(%"class.SkSL::Parser"* %0)
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %27, label %75

27:                                               ; preds = %10
  %28 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %12, align 8
  %29 = shl i64 %21, 32
  %30 = ashr exact i64 %29, 32
  %31 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %28, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %31, align 8
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %32, i64 %30, i32 5, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %36, label %43

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %32, i64 %30, i32 0
  %38 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %38, i64 0, i32 0, i32 0
  %41 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %40, align 8
  %42 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %41, i64 %39, i32 6, i32 0
  br label %45

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %32, i64 %30, i32 4, i32 0
  br label %45

45:                                               ; preds = %36, %43
  %46 = phi i32* [ %42, %36 ], [ %44, %43 ]
  store i32 %25, i32* %46, align 4
  store i32 %25, i32* %33, align 8
  %47 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %47, label %48, label %75

48:                                               ; preds = %45
  %49 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %49, label %50, label %75

50:                                               ; preds = %48
  %51 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %52 = icmp sgt i32 %51, -1
  br i1 %52, label %53, label %75

53:                                               ; preds = %50
  %54 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %12, align 8
  %55 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  %57 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 %30, i32 5, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, -1
  br i1 %59, label %60, label %67

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 %30, i32 0
  %62 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %61, align 8
  %63 = sext i32 %58 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %62, i64 0, i32 0, i32 0
  %65 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %64, align 8
  %66 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %65, i64 %63, i32 6, i32 0
  br label %69

67:                                               ; preds = %53
  %68 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 %30, i32 4, i32 0
  br label %69

69:                                               ; preds = %60, %67
  %70 = phi i32* [ %66, %60 ], [ %68, %67 ]
  store i32 %51, i32* %70, align 4
  store i32 %51, i32* %57, align 8
  %71 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  %73 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  %74 = select i1 %73, i32 %22, i32 -1
  br label %75

75:                                               ; preds = %72, %10, %45, %48, %69, %50, %1
  %76 = phi i32 [ -1, %1 ], [ -1, %10 ], [ -1, %45 ], [ -1, %48 ], [ -1, %50 ], [ -1, %69 ], [ %74, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser14whileStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 4
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  %9 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %9, label %10, label %71

10:                                               ; preds = %1
  %11 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %11, label %12, label %71

12:                                               ; preds = %10
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 35, i32* %4, align 4
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.SkSL::ASTFile"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 160
  %24 = trunc i64 %23 to i32
  %25 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store %"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** %2, align 8
  %26 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  %27 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %28 = icmp sgt i32 %27, -1
  br i1 %28, label %29, label %71

29:                                               ; preds = %12
  %30 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %31 = shl i64 %23, 32
  %32 = ashr exact i64 %31, 32
  %33 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %33, align 8
  %35 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %34, i64 %32, i32 5, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %38, label %45

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %34, i64 %32, i32 0
  %40 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %40, i64 0, i32 0, i32 0
  %43 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %42, align 8
  %44 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %43, i64 %41, i32 6, i32 0
  br label %47

45:                                               ; preds = %29
  %46 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %34, i64 %32, i32 4, i32 0
  br label %47

47:                                               ; preds = %38, %45
  %48 = phi i32* [ %44, %38 ], [ %46, %45 ]
  store i32 %27, i32* %48, align 4
  store i32 %27, i32* %35, align 8
  %49 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %49, label %50, label %71

50:                                               ; preds = %47
  %51 = call i32 @_ZN4SkSL6Parser9statementEv(%"class.SkSL::Parser"* %0)
  %52 = icmp sgt i32 %51, -1
  br i1 %52, label %53, label %71

53:                                               ; preds = %50
  %54 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %55 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %55, align 8
  %57 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 %32, i32 5, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, -1
  br i1 %59, label %60, label %67

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 %32, i32 0
  %62 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %61, align 8
  %63 = sext i32 %58 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %62, i64 0, i32 0, i32 0
  %65 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %64, align 8
  %66 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %65, i64 %63, i32 6, i32 0
  br label %69

67:                                               ; preds = %53
  %68 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %56, i64 %32, i32 4, i32 0
  br label %69

69:                                               ; preds = %60, %67
  %70 = phi i32* [ %66, %60 ], [ %68, %67 ]
  store i32 %51, i32* %70, align 4
  store i32 %51, i32* %57, align 8
  br label %71

71:                                               ; preds = %12, %47, %50, %69, %10, %1
  %72 = phi i32 [ -1, %1 ], [ -1, %10 ], [ -1, %12 ], [ -1, %47 ], [ %24, %69 ], [ -1, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser15switchStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca %"struct.SkSL::Token", align 4
  %7 = alloca i32, align 4
  %8 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %9, align 8
  store i32 -1, i32* %10, align 4
  store i32 -1, i32* %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  store i8 -86, i8* %4, align 1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %63 [
    i32 87, label %20
    i32 12, label %14
  ]

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %16 = bitcast %"struct.SkSL::Token"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %19 = load i32, i32* %18, align 4
  store i32 87, i32* %12, align 4
  br label %25

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %22 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %21) #15
  %23 = extractvalue { i64, i32 } %22, 0
  %24 = extractvalue { i64, i32 } %22, 1
  br label %25

25:                                               ; preds = %20, %14
  %26 = phi i32 [ %19, %14 ], [ %24, %20 ]
  %27 = phi i64 [ %17, %14 ], [ %23, %20 ]
  %28 = trunc i64 %27 to i32
  %29 = add i32 %28, -83
  %30 = icmp ult i32 %29, 3
  br i1 %30, label %31, label %52

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %33 = bitcast %"struct.SkSL::Token"* %32 to i64*
  %34 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %35 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %36

36:                                               ; preds = %46, %31
  %37 = load i32, i32* %12, align 4
  %38 = icmp eq i32 %37, 87
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = load i64, i64* %33, align 4
  %41 = load i32, i32* %34, align 4
  store i32 87, i32* %12, align 4
  br label %46

42:                                               ; preds = %36
  %43 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %35) #15
  %44 = extractvalue { i64, i32 } %43, 0
  %45 = extractvalue { i64, i32 } %43, 1
  br label %46

46:                                               ; preds = %42, %39
  %47 = phi i32 [ %41, %39 ], [ %45, %42 ]
  %48 = phi i64 [ %40, %39 ], [ %44, %42 ]
  %49 = trunc i64 %48 to i32
  %50 = add i32 %49, -83
  %51 = icmp ult i32 %50, 3
  br i1 %51, label %36, label %52

52:                                               ; preds = %46, %25
  %53 = phi i64 [ %27, %25 ], [ %48, %46 ]
  %54 = phi i32 [ %26, %25 ], [ %47, %46 ]
  %55 = trunc i64 %53 to i32
  %56 = icmp eq i32 %55, 12
  br i1 %56, label %61, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %59 = bitcast %"struct.SkSL::Token"* %58 to i64*
  store i64 %53, i64* %59, align 4
  %60 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %54, i32* %60, align 4
  br label %63

61:                                               ; preds = %52
  %62 = bitcast %"struct.SkSL::Token"* %3 to i64*
  store i64 %53, i64* %62, align 8
  store i32 %54, i32* %11, align 8
  store i8 1, i8* %4, align 1
  br label %65

63:                                               ; preds = %1, %57
  store i8 0, i8* %4, align 1
  %64 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %64, label %65, label %297

65:                                               ; preds = %61, %63
  %66 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %66, label %67, label %297

67:                                               ; preds = %65
  %68 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %70, label %297

70:                                               ; preds = %67
  %71 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %71, label %72, label %297

72:                                               ; preds = %70
  %73 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %73, label %74, label %297

74:                                               ; preds = %72
  %75 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #15
  store i32 30, i32* %5, align 4
  %76 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERbEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %10, i32* nonnull dereferenceable(4) %5, i8* nonnull dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #15
  %77 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %78 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %77, align 8
  %79 = sext i32 %76 to i64
  %80 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %80, align 8
  %82 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %81, i64 %79, i32 5, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, -1
  br i1 %84, label %85, label %92

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %81, i64 %79, i32 0
  %87 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %86, align 8
  %88 = sext i32 %83 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %87, i64 0, i32 0, i32 0
  %90 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %89, align 8
  %91 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %90, i64 %88, i32 6, i32 0
  br label %94

92:                                               ; preds = %74
  %93 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %81, i64 %79, i32 4, i32 0
  br label %94

94:                                               ; preds = %85, %92
  %95 = phi i32* [ %91, %85 ], [ %93, %92 ]
  store i32 %68, i32* %95, align 4
  store i32 %68, i32* %82, align 8
  %96 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %97 = bitcast %"struct.SkSL::Token"* %96 to i64*
  %98 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %99 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %100

100:                                              ; preds = %160, %94
  %101 = load i32, i32* %12, align 4
  %102 = icmp eq i32 %101, 87
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = load i64, i64* %97, align 4
  %105 = trunc i64 %104 to i32
  br label %136

106:                                              ; preds = %100
  %107 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %98) #15
  %108 = extractvalue { i64, i32 } %107, 0
  %109 = trunc i64 %108 to i32
  %110 = add i32 %109, -83
  %111 = icmp ult i32 %110, 3
  br i1 %111, label %114, label %112

112:                                              ; preds = %106
  %113 = extractvalue { i64, i32 } %107, 1
  br label %132

114:                                              ; preds = %106, %124
  %115 = load i32, i32* %12, align 4
  %116 = icmp eq i32 %115, 87
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = load i64, i64* %97, align 4
  %119 = load i32, i32* %99, align 4
  store i32 87, i32* %12, align 4
  br label %124

120:                                              ; preds = %114
  %121 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %98) #15
  %122 = extractvalue { i64, i32 } %121, 0
  %123 = extractvalue { i64, i32 } %121, 1
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi i32 [ %119, %117 ], [ %123, %120 ]
  %126 = phi i64 [ %118, %117 ], [ %122, %120 ]
  %127 = trunc i64 %126 to i32
  %128 = add i32 %127, -83
  %129 = icmp ult i32 %128, 3
  br i1 %129, label %114, label %130

130:                                              ; preds = %124
  %131 = trunc i64 %126 to i32
  br label %132

132:                                              ; preds = %130, %112
  %133 = phi i32 [ %109, %112 ], [ %131, %130 ]
  %134 = phi i64 [ %108, %112 ], [ %126, %130 ]
  %135 = phi i32 [ %113, %112 ], [ %125, %130 ]
  store i64 %134, i64* %97, align 4
  store i32 %135, i32* %99, align 4
  br label %136

136:                                              ; preds = %103, %132
  %137 = phi i32 [ %105, %103 ], [ %133, %132 ]
  %138 = phi i64 [ %104, %103 ], [ %134, %132 ]
  %139 = trunc i64 %138 to i32
  %140 = icmp eq i32 %139, 13
  br i1 %140, label %141, label %162

141:                                              ; preds = %136
  %142 = call i32 @_ZN4SkSL6Parser10switchCaseEv(%"class.SkSL::Parser"* %0)
  %143 = icmp sgt i32 %142, -1
  br i1 %143, label %144, label %297

144:                                              ; preds = %141
  %145 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %77, align 8
  %146 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %146, align 8
  %148 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %147, i64 %79, i32 5, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp sgt i32 %149, -1
  br i1 %150, label %151, label %158

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %147, i64 %79, i32 0
  %153 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %152, align 8
  %154 = sext i32 %149 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %153, i64 0, i32 0, i32 0
  %156 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %155, align 8
  %157 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %156, i64 %154, i32 6, i32 0
  br label %160

158:                                              ; preds = %144
  %159 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %147, i64 %79, i32 4, i32 0
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32* [ %159, %158 ], [ %157, %151 ]
  store i32 %142, i32* %161, align 4
  store i32 %142, i32* %148, align 8
  br label %100

162:                                              ; preds = %136
  %163 = icmp eq i32 %137, 87
  br i1 %163, label %164, label %191

164:                                              ; preds = %162
  %165 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %98) #15
  %166 = extractvalue { i64, i32 } %165, 0
  %167 = trunc i64 %166 to i32
  %168 = add i32 %167, -83
  %169 = icmp ult i32 %168, 3
  br i1 %169, label %172, label %170

170:                                              ; preds = %164
  %171 = extractvalue { i64, i32 } %165, 1
  br label %188

172:                                              ; preds = %164, %182
  %173 = load i32, i32* %12, align 4
  %174 = icmp eq i32 %173, 87
  br i1 %174, label %178, label %175

175:                                              ; preds = %172
  %176 = load i64, i64* %97, align 4
  %177 = load i32, i32* %99, align 4
  store i32 87, i32* %12, align 4
  br label %182

178:                                              ; preds = %172
  %179 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %98) #15
  %180 = extractvalue { i64, i32 } %179, 0
  %181 = extractvalue { i64, i32 } %179, 1
  br label %182

182:                                              ; preds = %178, %175
  %183 = phi i32 [ %177, %175 ], [ %181, %178 ]
  %184 = phi i64 [ %176, %175 ], [ %180, %178 ]
  %185 = trunc i64 %184 to i32
  %186 = add i32 %185, -83
  %187 = icmp ult i32 %186, 3
  br i1 %187, label %172, label %188

188:                                              ; preds = %182, %170
  %189 = phi i64 [ %166, %170 ], [ %184, %182 ]
  %190 = phi i32 [ %171, %170 ], [ %183, %182 ]
  store i64 %189, i64* %97, align 4
  store i32 %190, i32* %99, align 4
  br label %191

191:                                              ; preds = %162, %188
  %192 = phi i64 [ %189, %188 ], [ %138, %162 ]
  %193 = trunc i64 %192 to i32
  %194 = icmp eq i32 %193, 14
  br i1 %194, label %195, label %294

195:                                              ; preds = %191
  %196 = bitcast %"struct.SkSL::Token"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %196) #15
  %197 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %6, i64 0, i32 0
  %198 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %6, i64 0, i32 1
  %199 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %6, i64 0, i32 2
  store i32 87, i32* %197, align 4
  store i32 -1, i32* %198, align 4
  store i32 -1, i32* %199, align 4
  %200 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %6)
  %201 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %201, label %202, label %292

202:                                              ; preds = %195
  %203 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %203) #15
  store i32 29, i32* %7, align 4
  %204 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %77, align 8
  %205 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %204, i64 0, i32 0
  %206 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %204, i64 0, i32 0, i32 0, i32 1
  %207 = bitcast %"struct.SkSL::ASTNode"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %"struct.SkSL::ASTFile"* %204 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = sub i64 %208, %210
  %212 = sdiv exact i64 %211, 160
  %213 = trunc i64 %212 to i32
  %214 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #15
  store %"class.std::__1::vector.45"* %205, %"class.std::__1::vector.45"** %2, align 8
  %215 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %205, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %198, i32* nonnull dereferenceable(4) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #15
  %216 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %77, align 8
  %217 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %216, i64 0, i32 0, i32 0, i32 0
  %218 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %217, align 8
  %219 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %218, i64 %79, i32 5, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = icmp sgt i32 %220, -1
  br i1 %221, label %222, label %229

222:                                              ; preds = %202
  %223 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %218, i64 %79, i32 0
  %224 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %223, align 8
  %225 = sext i32 %220 to i64
  %226 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %224, i64 0, i32 0, i32 0
  %227 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %226, align 8
  %228 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %227, i64 %225, i32 6, i32 0
  br label %231

229:                                              ; preds = %202
  %230 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %218, i64 %79, i32 4, i32 0
  br label %231

231:                                              ; preds = %222, %229
  %232 = phi i32* [ %228, %222 ], [ %230, %229 ]
  store i32 %213, i32* %232, align 4
  store i32 %213, i32* %219, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %203) #15
  call void @_ZN4SkSL6Parser16createEmptyChildENS_7ASTNode2IDE(%"class.SkSL::Parser"* %0, i32 %213)
  %233 = shl i64 %212, 32
  %234 = ashr exact i64 %233, 32
  br label %235

235:                                              ; preds = %290, %231
  %236 = load i32, i32* %12, align 4
  %237 = icmp eq i32 %236, 87
  br i1 %237, label %240, label %238

238:                                              ; preds = %235
  %239 = load i64, i64* %97, align 4
  br label %267

240:                                              ; preds = %235
  %241 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %98) #15
  %242 = extractvalue { i64, i32 } %241, 0
  %243 = trunc i64 %242 to i32
  %244 = add i32 %243, -83
  %245 = icmp ult i32 %244, 3
  br i1 %245, label %248, label %246

246:                                              ; preds = %240
  %247 = extractvalue { i64, i32 } %241, 1
  br label %264

248:                                              ; preds = %240, %258
  %249 = load i32, i32* %12, align 4
  %250 = icmp eq i32 %249, 87
  br i1 %250, label %254, label %251

251:                                              ; preds = %248
  %252 = load i64, i64* %97, align 4
  %253 = load i32, i32* %99, align 4
  store i32 87, i32* %12, align 4
  br label %258

254:                                              ; preds = %248
  %255 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %98) #15
  %256 = extractvalue { i64, i32 } %255, 0
  %257 = extractvalue { i64, i32 } %255, 1
  br label %258

258:                                              ; preds = %254, %251
  %259 = phi i32 [ %253, %251 ], [ %257, %254 ]
  %260 = phi i64 [ %252, %251 ], [ %256, %254 ]
  %261 = trunc i64 %260 to i32
  %262 = add i32 %261, -83
  %263 = icmp ult i32 %262, 3
  br i1 %263, label %248, label %264

264:                                              ; preds = %258, %246
  %265 = phi i64 [ %242, %246 ], [ %260, %258 ]
  %266 = phi i32 [ %247, %246 ], [ %259, %258 ]
  store i64 %265, i64* %97, align 4
  store i32 %266, i32* %99, align 4
  br label %267

267:                                              ; preds = %238, %264
  %268 = phi i64 [ %239, %238 ], [ %265, %264 ]
  %269 = trunc i64 %268 to i32
  %270 = icmp eq i32 %269, 39
  br i1 %270, label %293, label %271

271:                                              ; preds = %267
  %272 = call i32 @_ZN4SkSL6Parser9statementEv(%"class.SkSL::Parser"* %0)
  %273 = icmp sgt i32 %272, -1
  br i1 %273, label %274, label %292

274:                                              ; preds = %271
  %275 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %77, align 8
  %276 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %275, i64 0, i32 0, i32 0, i32 0
  %277 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %276, align 8
  %278 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %277, i64 %234, i32 5, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = icmp sgt i32 %279, -1
  br i1 %280, label %281, label %288

281:                                              ; preds = %274
  %282 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %277, i64 %234, i32 0
  %283 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %282, align 8
  %284 = sext i32 %279 to i64
  %285 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %283, i64 0, i32 0, i32 0
  %286 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %285, align 8
  %287 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %286, i64 %284, i32 6, i32 0
  br label %290

288:                                              ; preds = %274
  %289 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %277, i64 %234, i32 4, i32 0
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32* [ %289, %288 ], [ %287, %281 ]
  store i32 %272, i32* %291, align 4
  store i32 %272, i32* %278, align 8
  br label %235

292:                                              ; preds = %271, %195
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %196) #15
  br label %297

293:                                              ; preds = %267
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %196) #15
  br label %294

294:                                              ; preds = %293, %191
  %295 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), %"struct.SkSL::Token"* null)
  %296 = select i1 %295, i32 %76, i32 -1
  br label %297

297:                                              ; preds = %141, %294, %67, %70, %72, %292, %65, %63
  %298 = phi i32 [ -1, %63 ], [ -1, %65 ], [ -1, %67 ], [ -1, %70 ], [ -1, %72 ], [ -1, %292 ], [ %296, %294 ], [ -1, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #15
  ret i32 %298
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser15returnStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 4
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  %9 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %9, label %10, label %97

10:                                               ; preds = %1
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15
  store i32 26, i32* %4, align 4
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %12, align 8
  %14 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %13, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.SkSL::ASTNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.SkSL::ASTFile"* %13 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 160
  %22 = trunc i64 %21 to i32
  %23 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  store %"class.std::__1::vector.45"* %14, %"class.std::__1::vector.45"** %2, align 8
  %24 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %14, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #15
  %25 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 87
  br i1 %27, label %32, label %28

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %30 = bitcast %"struct.SkSL::Token"* %29 to i64*
  %31 = load i64, i64* %30, align 4
  br label %67

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %34 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %33) #15
  %35 = extractvalue { i64, i32 } %34, 0
  %36 = trunc i64 %35 to i32
  %37 = add i32 %36, -83
  %38 = icmp ult i32 %37, 3
  br i1 %38, label %41, label %39

39:                                               ; preds = %32
  %40 = extractvalue { i64, i32 } %34, 1
  br label %61

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %43 = bitcast %"struct.SkSL::Token"* %42 to i64*
  %44 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %45

45:                                               ; preds = %55, %41
  %46 = load i32, i32* %25, align 4
  %47 = icmp eq i32 %46, 87
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = load i64, i64* %43, align 4
  %50 = load i32, i32* %44, align 4
  store i32 87, i32* %25, align 4
  br label %55

51:                                               ; preds = %45
  %52 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %33) #15
  %53 = extractvalue { i64, i32 } %52, 0
  %54 = extractvalue { i64, i32 } %52, 1
  br label %55

55:                                               ; preds = %51, %48
  %56 = phi i32 [ %50, %48 ], [ %54, %51 ]
  %57 = phi i64 [ %49, %48 ], [ %53, %51 ]
  %58 = trunc i64 %57 to i32
  %59 = add i32 %58, -83
  %60 = icmp ult i32 %59, 3
  br i1 %60, label %45, label %61

61:                                               ; preds = %55, %39
  %62 = phi i64 [ %35, %39 ], [ %57, %55 ]
  %63 = phi i32 [ %40, %39 ], [ %56, %55 ]
  %64 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %65 = bitcast %"struct.SkSL::Token"* %64 to i64*
  store i64 %62, i64* %65, align 4
  %66 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %63, i32* %66, align 4
  br label %67

67:                                               ; preds = %28, %61
  %68 = phi i64 [ %31, %28 ], [ %62, %61 ]
  %69 = trunc i64 %68 to i32
  %70 = icmp eq i32 %69, 81
  br i1 %70, label %94, label %71

71:                                               ; preds = %67
  %72 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %73 = icmp sgt i32 %72, -1
  br i1 %73, label %74, label %97

74:                                               ; preds = %71
  %75 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %12, align 8
  %76 = shl i64 %21, 32
  %77 = ashr exact i64 %76, 32
  %78 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %75, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  %80 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %79, i64 %77, i32 5, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %81, -1
  br i1 %82, label %83, label %90

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %79, i64 %77, i32 0
  %85 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %84, align 8
  %86 = sext i32 %81 to i64
  %87 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %85, i64 0, i32 0, i32 0
  %88 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %87, align 8
  %89 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %88, i64 %86, i32 6, i32 0
  br label %92

90:                                               ; preds = %74
  %91 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %79, i64 %77, i32 4, i32 0
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32* [ %91, %90 ], [ %89, %83 ]
  store i32 %72, i32* %93, align 4
  store i32 %72, i32* %80, align 8
  br label %94

94:                                               ; preds = %92, %67
  %95 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  %96 = select i1 %95, i32 %22, i32 -1
  br label %97

97:                                               ; preds = %94, %71, %1
  %98 = phi i32 [ -1, %1 ], [ -1, %71 ], [ %96, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser14breakStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 4
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  %9 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.81, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %9, label %10, label %27

10:                                               ; preds = %1
  %11 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %11, label %12, label %27

12:                                               ; preds = %10
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 3, i32* %4, align 4
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.SkSL::ASTFile"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 160
  %24 = trunc i64 %23 to i32
  %25 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store %"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** %2, align 8
  %26 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  br label %27

27:                                               ; preds = %10, %1, %12
  %28 = phi i32 [ %24, %12 ], [ -1, %1 ], [ -1, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser17continueStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 4
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  %9 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %9, label %10, label %27

10:                                               ; preds = %1
  %11 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %11, label %12, label %27

12:                                               ; preds = %10
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 5, i32* %4, align 4
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.SkSL::ASTFile"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 160
  %24 = trunc i64 %23 to i32
  %25 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store %"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** %2, align 8
  %26 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  br label %27

27:                                               ; preds = %10, %1, %12
  %28 = phi i32 [ %24, %12 ], [ -1, %1 ], [ -1, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser16discardStatementEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 4
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  %9 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %9, label %10, label %27

10:                                               ; preds = %1
  %11 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %11, label %12, label %27

12:                                               ; preds = %10
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 6, i32* %4, align 4
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %15, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.SkSL::ASTFile"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 160
  %24 = trunc i64 %23 to i32
  %25 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store %"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** %2, align 8
  %26 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %16, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  br label %27

27:                                               ; preds = %10, %1, %12
  %28 = phi i32 [ %24, %12 ], [ -1, %1 ], [ -1, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser10intLiteralEPl(%"class.SkSL::Parser"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::Token", align 8
  %4 = alloca %"struct.SkSL::StringFragment", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %8, align 8
  store i32 -1, i32* %9, align 4
  store i32 -1, i32* %10, align 8
  %11 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.90, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %11, label %12, label %71

12:                                               ; preds = %2
  %13 = bitcast %"struct.SkSL::StringFragment"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %4, i64 0, i32 1
  %16 = bitcast %"struct.SkSL::Token"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = load i32, i32* %10, align 8
  %19 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = ashr i64 %17, 32
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = sext i32 %18 to i64
  store i8* %22, i8** %14, align 8
  store i64 %23, i64* %15, align 8
  %24 = call zeroext i1 @_ZN4SkSL4stoiERKNS_14StringFragmentEPl(%"struct.SkSL::StringFragment"* nonnull dereferenceable(16) %4, i64* %1) #15
  br i1 %24, label %69, label %25

25:                                               ; preds = %12
  %26 = load i64, i64* %16, align 8
  %27 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = load i8*, i8** %14, align 8
  %29 = load i64, i64* %15, align 8
  %30 = icmp ugt i64 %29, -17
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %32) #16
  unreachable

33:                                               ; preds = %25
  %34 = icmp ult i64 %29, 23
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = add nuw i64 %29, 16
  %37 = and i64 %36, -16
  %38 = call i8* @_Znwm(i64 %37) #14
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %38, i8** %39, align 8
  %40 = or i64 %37, -9223372036854775808
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %42, align 8
  br label %48

43:                                               ; preds = %33
  %44 = trunc i64 %29 to i8
  %45 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  %47 = icmp eq i64 %29, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %43, %35
  %49 = phi i8* [ %38, %35 ], [ %27, %43 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %28, i64 %29, i1 false) #15
  br label %50

50:                                               ; preds = %43, %48
  %51 = phi i8* [ %27, %43 ], [ %49, %48 ]
  %52 = getelementptr inbounds i8, i8* %51, i64 %29
  store i8 0, i8* %52, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.91, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %26, i32 undef, %"class.SkSL::String"* nonnull %5)
  %53 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #14
  br label %60

60:                                               ; preds = %50, %57
  %61 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #14
  br label %68

68:                                               ; preds = %60, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  br label %69

69:                                               ; preds = %12, %68
  %70 = phi i1 [ false, %68 ], [ true, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br label %71

71:                                               ; preds = %2, %69
  %72 = phi i1 [ %70, %69 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #15
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL6Parser10createNodeIJiNS_7ASTNode4KindERlEEENS2_2IDEDpOT_(%"class.SkSL::Parser"*, i32* dereferenceable(4), i32* dereferenceable(4), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %6 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.SkSL::ASTNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.SkSL::ASTFile"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 160
  %14 = trunc i64 %13 to i32
  %15 = ptrtoint %"struct.SkSL::ASTFile"* %6 to i64
  %16 = inttoptr i64 %9 to %"struct.SkSL::ASTNode"*
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %17, align 8
  %19 = icmp ugt %"struct.SkSL::ASTNode"* %18, %16
  %20 = ptrtoint %"struct.SkSL::ASTNode"* %18 to i64
  br i1 %19, label %21, label %36

21:                                               ; preds = %4
  %22 = load i32, i32* %1, align 4
  %23 = load i32, i32* %2, align 4
  %24 = load i64, i64* %3, align 8
  %25 = inttoptr i64 %9 to i64*
  store i64 %15, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1, i32 1
  store i32 3, i32* %27, align 4
  %28 = bitcast %"struct.SkSL::ASTNode::NodeData"* %26 to i64*
  store i64 %24, i64* %28, align 4
  %29 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 2
  store i32 %22, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 3
  store i32 %23, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 4, i32 0
  store i32 -1, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 5, i32 0
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 6, i32 0
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 1
  %35 = ptrtoint %"struct.SkSL::ASTNode"* %34 to i64
  store i64 %35, i64* %8, align 8
  br label %94

36:                                               ; preds = %4
  %37 = add nsw i64 %13, 1
  %38 = icmp ugt i64 %37, 115292150460684697
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = bitcast %"struct.SkSL::ASTFile"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #16
  unreachable

41:                                               ; preds = %36
  %42 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %43 = sub i64 %20, %11
  %44 = sdiv exact i64 %43, 160
  %45 = icmp ult i64 %44, 57646075230342348
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = shl nsw i64 %44, 1
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46, %41
  %52 = phi i64 [ %49, %46 ], [ 115292150460684697, %41 ]
  %53 = mul i64 %52, 160
  %54 = tail call i8* @_Znwm(i64 %53) #14
  %55 = bitcast i8* %54 to %"struct.SkSL::ASTNode"*
  br label %56

56:                                               ; preds = %51, %46
  %57 = phi i64 [ %52, %51 ], [ 0, %46 ]
  %58 = phi %"struct.SkSL::ASTNode"* [ %55, %51 ], [ null, %46 ]
  %59 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13
  %60 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %57
  %61 = ptrtoint %"struct.SkSL::ASTNode"* %60 to i64
  %62 = load i32, i32* %1, align 4
  %63 = load i32, i32* %2, align 4
  %64 = load i64, i64* %3, align 8
  %65 = bitcast %"struct.SkSL::ASTNode"* %59 to i64*
  store i64 %15, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 1
  %67 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 1, i32 1
  store i32 3, i32* %67, align 4
  %68 = bitcast %"struct.SkSL::ASTNode::NodeData"* %66 to i64*
  store i64 %64, i64* %68, align 4
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 2
  store i32 %62, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 3
  store i32 %63, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 4, i32 0
  store i32 -1, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 5, i32 0
  store i32 -1, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %13, i32 6, i32 0
  store i32 -1, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 1
  %75 = ptrtoint %"struct.SkSL::ASTNode"* %74 to i64
  %76 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 0
  %77 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %76, align 8
  %78 = load i64, i64* %8, align 8
  %79 = ptrtoint %"struct.SkSL::ASTNode"* %77 to i64
  %80 = sub i64 %78, %79
  %81 = sdiv exact i64 %80, -160
  %82 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %81
  %83 = ptrtoint %"struct.SkSL::ASTNode"* %82 to i64
  %84 = icmp sgt i64 %80, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %56
  %86 = bitcast %"struct.SkSL::ASTNode"* %82 to i8*
  %87 = bitcast %"struct.SkSL::ASTNode"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 %80, i1 false) #15
  %88 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %76, align 8
  br label %89

89:                                               ; preds = %85, %56
  %90 = phi %"struct.SkSL::ASTNode"* [ %77, %56 ], [ %88, %85 ]
  store i64 %83, i64* %10, align 8
  store i64 %75, i64* %8, align 8
  store i64 %61, i64* %42, align 8
  %91 = icmp eq %"struct.SkSL::ASTNode"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = bitcast %"struct.SkSL::ASTNode"* %90 to i8*
  tail call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %92, %89, %21
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkSL::Token", align 8
  %3 = alloca %"class.SkSL::AutoDepth", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.SkSL::Operator", align 4
  %6 = tail call i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"* %0)
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %8, label %115

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkSL::Token"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %2, i64 0, i32 2
  store i32 87, i32* %10, align 8
  store i32 -1, i32* %11, align 4
  store i32 -1, i32* %12, align 8
  %13 = bitcast %"class.SkSL::AutoDepth"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %3, i64 0, i32 1
  %16 = bitcast %"class.SkSL::AutoDepth"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %14, align 8
  store i32 0, i32* %15, align 8
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %19 = bitcast %"struct.SkSL::Token"* %18 to i64*
  %20 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %21 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %22 = bitcast %"struct.SkSL::Token"* %2 to i64*
  %23 = bitcast i32* %4 to i8*
  %24 = bitcast %"class.SkSL::Operator"* %5 to i8*
  %25 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %5, i64 0, i32 0
  %26 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %106, %8
  %28 = phi i32 [ %6, %8 ], [ %72, %106 ]
  %29 = load i32, i32* %17, align 4
  switch i32 %29, label %108 [
    i32 87, label %33
    i32 43, label %30
  ]

30:                                               ; preds = %27
  %31 = load i64, i64* %19, align 4
  %32 = load i32, i32* %20, align 4
  store i32 87, i32* %17, align 4
  br label %37

33:                                               ; preds = %27
  %34 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %21) #15
  %35 = extractvalue { i64, i32 } %34, 0
  %36 = extractvalue { i64, i32 } %34, 1
  br label %37

37:                                               ; preds = %33, %30
  %38 = phi i32 [ %32, %30 ], [ %36, %33 ]
  %39 = phi i64 [ %31, %30 ], [ %35, %33 ]
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, -83
  %42 = icmp ult i32 %41, 3
  br i1 %42, label %43, label %59

43:                                               ; preds = %37, %53
  %44 = load i32, i32* %17, align 4
  %45 = icmp eq i32 %44, 87
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = load i64, i64* %19, align 4
  %48 = load i32, i32* %20, align 4
  store i32 87, i32* %17, align 4
  br label %53

49:                                               ; preds = %43
  %50 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %21) #15
  %51 = extractvalue { i64, i32 } %50, 0
  %52 = extractvalue { i64, i32 } %50, 1
  br label %53

53:                                               ; preds = %49, %46
  %54 = phi i32 [ %48, %46 ], [ %52, %49 ]
  %55 = phi i64 [ %47, %46 ], [ %51, %49 ]
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, -83
  %58 = icmp ult i32 %57, 3
  br i1 %58, label %43, label %59

59:                                               ; preds = %53, %37
  %60 = phi i64 [ %39, %37 ], [ %55, %53 ]
  %61 = phi i32 [ %38, %37 ], [ %54, %53 ]
  %62 = trunc i64 %60 to i32
  %63 = icmp eq i32 %62, 43
  br i1 %63, label %65, label %64

64:                                               ; preds = %59
  store i64 %60, i64* %19, align 4
  store i32 %61, i32* %20, align 4
  br label %108

65:                                               ; preds = %59
  store i64 %60, i64* %22, align 8
  store i32 %61, i32* %12, align 8
  %66 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %3)
  br i1 %66, label %67, label %108

67:                                               ; preds = %65
  %68 = call i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"* %0)
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %70, label %108

70:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #15
  store i32 0, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #15
  %71 = load i32, i32* %10, align 8
  store i32 %71, i32* %25, align 4
  %72 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %11, i32* nonnull dereferenceable(4) %4, %"class.SkSL::Operator"* nonnull dereferenceable(4) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #15
  %73 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %26, align 8
  %74 = sext i32 %72 to i64
  %75 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %73, i64 0, i32 0, i32 0, i32 0
  %76 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %75, align 8
  %77 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %76, i64 %74, i32 5, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %78, -1
  br i1 %79, label %80, label %87

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %76, i64 %74, i32 0
  %82 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %81, align 8
  %83 = sext i32 %78 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %82, i64 0, i32 0, i32 0
  %85 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %84, align 8
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %85, i64 %83, i32 6, i32 0
  br label %89

87:                                               ; preds = %70
  %88 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %76, i64 %74, i32 4, i32 0
  br label %89

89:                                               ; preds = %80, %87
  %90 = phi i32* [ %86, %80 ], [ %88, %87 ]
  store i32 %28, i32* %90, align 4
  store i32 %28, i32* %77, align 8
  %91 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %26, align 8
  %92 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %92, align 8
  %94 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %93, i64 %74, i32 5, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp sgt i32 %95, -1
  br i1 %96, label %97, label %104

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %93, i64 %74, i32 0
  %99 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %98, align 8
  %100 = sext i32 %95 to i64
  %101 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %99, i64 0, i32 0, i32 0
  %102 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %101, align 8
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 6, i32 0
  br label %106

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %93, i64 %74, i32 4, i32 0
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32* [ %105, %104 ], [ %103, %97 ]
  store i32 %68, i32* %107, align 4
  store i32 %68, i32* %94, align 8
  br label %27

108:                                              ; preds = %27, %67, %65, %64
  %109 = phi i32 [ %28, %64 ], [ -1, %67 ], [ %28, %27 ], [ -1, %65 ]
  %110 = load i32, i32* %15, align 8
  %111 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %14, align 8
  %112 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %111, i64 0, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = sub nsw i32 %113, %110
  store i32 %114, i32* %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #15
  br label %115

115:                                              ; preds = %1, %108
  %116 = phi i32 [ %109, %108 ], [ -1, %1 ]
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERbEEENS3_2IDEDpOT_(%"class.SkSL::Parser"*, i32* dereferenceable(4), i32* dereferenceable(4), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %6 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.SkSL::ASTNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.SkSL::ASTFile"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 160
  %14 = trunc i64 %13 to i32
  %15 = ptrtoint %"struct.SkSL::ASTFile"* %6 to i64
  %16 = inttoptr i64 %9 to %"struct.SkSL::ASTNode"*
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %17, align 8
  %19 = icmp ugt %"struct.SkSL::ASTNode"* %18, %16
  %20 = ptrtoint %"struct.SkSL::ASTNode"* %18 to i64
  br i1 %19, label %21, label %35

21:                                               ; preds = %4
  %22 = load i32, i32* %1, align 4
  %23 = load i32, i32* %2, align 4
  %24 = load i8, i8* %3, align 1, !range !6
  %25 = inttoptr i64 %9 to i64*
  store i64 %15, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1, i32 1
  store i32 2, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1, i32 0, i64 0
  store i8 %24, i8* %27, align 4
  %28 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 2
  store i32 %22, i32* %28, align 4
  %29 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 3
  store i32 %23, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 4, i32 0
  store i32 -1, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 5, i32 0
  store i32 -1, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 6, i32 0
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 1
  %34 = ptrtoint %"struct.SkSL::ASTNode"* %33 to i64
  store i64 %34, i64* %8, align 8
  br label %92

35:                                               ; preds = %4
  %36 = add nsw i64 %13, 1
  %37 = icmp ugt i64 %36, 115292150460684697
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = bitcast %"struct.SkSL::ASTFile"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #16
  unreachable

40:                                               ; preds = %35
  %41 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %42 = sub i64 %20, %11
  %43 = sdiv exact i64 %42, 160
  %44 = icmp ult i64 %43, 57646075230342348
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = shl nsw i64 %43, 1
  %47 = icmp ult i64 %46, %36
  %48 = select i1 %47, i64 %36, i64 %46
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45, %40
  %51 = phi i64 [ %48, %45 ], [ 115292150460684697, %40 ]
  %52 = mul i64 %51, 160
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to %"struct.SkSL::ASTNode"*
  br label %55

55:                                               ; preds = %50, %45
  %56 = phi i64 [ %51, %50 ], [ 0, %45 ]
  %57 = phi %"struct.SkSL::ASTNode"* [ %54, %50 ], [ null, %45 ]
  %58 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 %13
  %59 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 %56
  %60 = ptrtoint %"struct.SkSL::ASTNode"* %59 to i64
  %61 = load i32, i32* %1, align 4
  %62 = load i32, i32* %2, align 4
  %63 = load i8, i8* %3, align 1, !range !6
  %64 = bitcast %"struct.SkSL::ASTNode"* %58 to i64*
  store i64 %15, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 %13, i32 1, i32 1
  store i32 2, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 %13, i32 1, i32 0, i64 0
  store i8 %63, i8* %66, align 4
  %67 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 %13, i32 2
  store i32 %61, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 %13, i32 3
  store i32 %62, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 %13, i32 4, i32 0
  store i32 -1, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 %13, i32 5, i32 0
  store i32 -1, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 %13, i32 6, i32 0
  store i32 -1, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 1
  %73 = ptrtoint %"struct.SkSL::ASTNode"* %72 to i64
  %74 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %74, align 8
  %76 = load i64, i64* %8, align 8
  %77 = ptrtoint %"struct.SkSL::ASTNode"* %75 to i64
  %78 = sub i64 %76, %77
  %79 = sdiv exact i64 %78, -160
  %80 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %58, i64 %79
  %81 = ptrtoint %"struct.SkSL::ASTNode"* %80 to i64
  %82 = icmp sgt i64 %78, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %55
  %84 = bitcast %"struct.SkSL::ASTNode"* %80 to i8*
  %85 = bitcast %"struct.SkSL::ASTNode"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 %78, i1 false) #15
  %86 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %74, align 8
  br label %87

87:                                               ; preds = %83, %55
  %88 = phi %"struct.SkSL::ASTNode"* [ %75, %55 ], [ %86, %83 ]
  store i64 %81, i64* %10, align 8
  store i64 %73, i64* %8, align 8
  store i64 %60, i64* %41, align 8
  %89 = icmp eq %"struct.SkSL::ASTNode"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = bitcast %"struct.SkSL::ASTNode"* %88 to i8*
  tail call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %90, %87, %21
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser10switchCaseEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"struct.SkSL::Token", align 4
  %4 = alloca i32, align 4
  %5 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  %9 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %9, label %10, label %178

10:                                               ; preds = %1
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15
  store i32 29, i32* %4, align 4
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %12, align 8
  %14 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %13, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.SkSL::ASTNode"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.SkSL::ASTFile"* %13 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 160
  %22 = trunc i64 %21 to i32
  %23 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  store %"class.std::__1::vector.45"* %14, %"class.std::__1::vector.45"** %2, align 8
  %24 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %14, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #15
  %25 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %27, label %178

27:                                               ; preds = %10
  %28 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %28, label %29, label %178

29:                                               ; preds = %27
  %30 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %12, align 8
  %31 = shl i64 %21, 32
  %32 = ashr exact i64 %31, 32
  %33 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %33, align 8
  %35 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %34, i64 %32, i32 5, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %38, label %45

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %34, i64 %32, i32 0
  %40 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %40, i64 0, i32 0, i32 0
  %43 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %42, align 8
  %44 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %43, i64 %41, i32 6, i32 0
  br label %47

45:                                               ; preds = %29
  %46 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %34, i64 %32, i32 4, i32 0
  br label %47

47:                                               ; preds = %38, %45
  %48 = phi i32* [ %44, %38 ], [ %46, %45 ]
  store i32 %25, i32* %48, align 4
  store i32 %25, i32* %35, align 8
  %49 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %50 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %51 = bitcast %"struct.SkSL::Token"* %50 to i64*
  %52 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %54

54:                                               ; preds = %176, %47
  %55 = load i32, i32* %49, align 4
  %56 = icmp eq i32 %55, 87
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i64, i64* %51, align 4
  %59 = trunc i64 %58 to i32
  br label %90

60:                                               ; preds = %54
  %61 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %52) #15
  %62 = extractvalue { i64, i32 } %61, 0
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, -83
  %65 = icmp ult i32 %64, 3
  br i1 %65, label %68, label %66

66:                                               ; preds = %60
  %67 = extractvalue { i64, i32 } %61, 1
  br label %86

68:                                               ; preds = %60, %78
  %69 = load i32, i32* %49, align 4
  %70 = icmp eq i32 %69, 87
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = load i64, i64* %51, align 4
  %73 = load i32, i32* %53, align 4
  store i32 87, i32* %49, align 4
  br label %78

74:                                               ; preds = %68
  %75 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %52) #15
  %76 = extractvalue { i64, i32 } %75, 0
  %77 = extractvalue { i64, i32 } %75, 1
  br label %78

78:                                               ; preds = %74, %71
  %79 = phi i32 [ %73, %71 ], [ %77, %74 ]
  %80 = phi i64 [ %72, %71 ], [ %76, %74 ]
  %81 = trunc i64 %80 to i32
  %82 = add i32 %81, -83
  %83 = icmp ult i32 %82, 3
  br i1 %83, label %68, label %84

84:                                               ; preds = %78
  %85 = trunc i64 %80 to i32
  br label %86

86:                                               ; preds = %84, %66
  %87 = phi i32 [ %63, %66 ], [ %85, %84 ]
  %88 = phi i64 [ %62, %66 ], [ %80, %84 ]
  %89 = phi i32 [ %67, %66 ], [ %79, %84 ]
  store i64 %88, i64* %51, align 4
  store i32 %89, i32* %53, align 4
  br label %90

90:                                               ; preds = %57, %86
  %91 = phi i32 [ %59, %57 ], [ %87, %86 ]
  switch i32 %91, label %122 [
    i32 39, label %178
    i32 87, label %92
  ]

92:                                               ; preds = %90
  %93 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %52) #15
  %94 = extractvalue { i64, i32 } %93, 0
  %95 = trunc i64 %94 to i32
  %96 = add i32 %95, -83
  %97 = icmp ult i32 %96, 3
  br i1 %97, label %100, label %98

98:                                               ; preds = %92
  %99 = extractvalue { i64, i32 } %93, 1
  br label %118

100:                                              ; preds = %92, %110
  %101 = load i32, i32* %49, align 4
  %102 = icmp eq i32 %101, 87
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = load i64, i64* %51, align 4
  %105 = load i32, i32* %53, align 4
  store i32 87, i32* %49, align 4
  br label %110

106:                                              ; preds = %100
  %107 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %52) #15
  %108 = extractvalue { i64, i32 } %107, 0
  %109 = extractvalue { i64, i32 } %107, 1
  br label %110

110:                                              ; preds = %106, %103
  %111 = phi i32 [ %105, %103 ], [ %109, %106 ]
  %112 = phi i64 [ %104, %103 ], [ %108, %106 ]
  %113 = trunc i64 %112 to i32
  %114 = add i32 %113, -83
  %115 = icmp ult i32 %114, 3
  br i1 %115, label %100, label %116

116:                                              ; preds = %110
  %117 = trunc i64 %112 to i32
  br label %118

118:                                              ; preds = %116, %98
  %119 = phi i32 [ %95, %98 ], [ %117, %116 ]
  %120 = phi i64 [ %94, %98 ], [ %112, %116 ]
  %121 = phi i32 [ %99, %98 ], [ %111, %116 ]
  store i64 %120, i64* %51, align 4
  store i32 %121, i32* %53, align 4
  br label %122

122:                                              ; preds = %90, %118
  %123 = phi i32 [ %119, %118 ], [ %91, %90 ]
  switch i32 %123, label %154 [
    i32 13, label %178
    i32 87, label %124
  ]

124:                                              ; preds = %122
  %125 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %52) #15
  %126 = extractvalue { i64, i32 } %125, 0
  %127 = trunc i64 %126 to i32
  %128 = add i32 %127, -83
  %129 = icmp ult i32 %128, 3
  br i1 %129, label %132, label %130

130:                                              ; preds = %124
  %131 = extractvalue { i64, i32 } %125, 1
  br label %150

132:                                              ; preds = %124, %142
  %133 = load i32, i32* %49, align 4
  %134 = icmp eq i32 %133, 87
  br i1 %134, label %138, label %135

135:                                              ; preds = %132
  %136 = load i64, i64* %51, align 4
  %137 = load i32, i32* %53, align 4
  store i32 87, i32* %49, align 4
  br label %142

138:                                              ; preds = %132
  %139 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %52) #15
  %140 = extractvalue { i64, i32 } %139, 0
  %141 = extractvalue { i64, i32 } %139, 1
  br label %142

142:                                              ; preds = %138, %135
  %143 = phi i32 [ %137, %135 ], [ %141, %138 ]
  %144 = phi i64 [ %136, %135 ], [ %140, %138 ]
  %145 = trunc i64 %144 to i32
  %146 = add i32 %145, -83
  %147 = icmp ult i32 %146, 3
  br i1 %147, label %132, label %148

148:                                              ; preds = %142
  %149 = trunc i64 %144 to i32
  br label %150

150:                                              ; preds = %148, %130
  %151 = phi i32 [ %127, %130 ], [ %149, %148 ]
  %152 = phi i64 [ %126, %130 ], [ %144, %148 ]
  %153 = phi i32 [ %131, %130 ], [ %143, %148 ]
  store i64 %152, i64* %51, align 4
  store i32 %153, i32* %53, align 4
  br label %154

154:                                              ; preds = %122, %150
  %155 = phi i32 [ %151, %150 ], [ %123, %122 ]
  %156 = icmp eq i32 %155, 14
  br i1 %156, label %178, label %157

157:                                              ; preds = %154
  %158 = call i32 @_ZN4SkSL6Parser9statementEv(%"class.SkSL::Parser"* %0)
  %159 = icmp sgt i32 %158, -1
  br i1 %159, label %160, label %178

160:                                              ; preds = %157
  %161 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %12, align 8
  %162 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %161, i64 0, i32 0, i32 0, i32 0
  %163 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %162, align 8
  %164 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %163, i64 %32, i32 5, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp sgt i32 %165, -1
  br i1 %166, label %167, label %174

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %163, i64 %32, i32 0
  %169 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %168, align 8
  %170 = sext i32 %165 to i64
  %171 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %169, i64 0, i32 0, i32 0
  %172 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %171, align 8
  %173 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %172, i64 %170, i32 6, i32 0
  br label %176

174:                                              ; preds = %160
  %175 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %163, i64 %32, i32 4, i32 0
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32* [ %175, %174 ], [ %173, %167 ]
  store i32 %158, i32* %177, align 4
  store i32 %158, i32* %164, align 8
  br label %54

178:                                              ; preds = %157, %154, %90, %122, %10, %27, %1
  %179 = phi i32 [ -1, %1 ], [ -1, %10 ], [ -1, %27 ], [ -1, %157 ], [ %22, %154 ], [ %22, %122 ], [ %22, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #15
  ret i32 %179
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"*, i32* dereferenceable(4), i32* dereferenceable(4), %"class.SkSL::Operator"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %6 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.SkSL::ASTNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.SkSL::ASTFile"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 160
  %14 = trunc i64 %13 to i32
  %15 = ptrtoint %"struct.SkSL::ASTFile"* %6 to i64
  %16 = inttoptr i64 %9 to %"struct.SkSL::ASTNode"*
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %17, align 8
  %19 = icmp ugt %"struct.SkSL::ASTNode"* %18, %16
  %20 = ptrtoint %"struct.SkSL::ASTNode"* %18 to i64
  br i1 %19, label %21, label %37

21:                                               ; preds = %4
  %22 = load i32, i32* %1, align 4
  %23 = load i32, i32* %2, align 4
  %24 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %3, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = inttoptr i64 %9 to i64*
  store i64 %15, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1, i32 1
  store i32 0, i32* %28, align 4
  %29 = bitcast %"struct.SkSL::ASTNode::NodeData"* %27 to i32*
  store i32 %25, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 2
  store i32 %22, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 3
  store i32 %23, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 4, i32 0
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 5, i32 0
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 6, i32 0
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 1
  %36 = ptrtoint %"struct.SkSL::ASTNode"* %35 to i64
  store i64 %36, i64* %8, align 8
  br label %96

37:                                               ; preds = %4
  %38 = add nsw i64 %13, 1
  %39 = icmp ugt i64 %38, 115292150460684697
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  %41 = bitcast %"struct.SkSL::ASTFile"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #16
  unreachable

42:                                               ; preds = %37
  %43 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %44 = sub i64 %20, %11
  %45 = sdiv exact i64 %44, 160
  %46 = icmp ult i64 %45, 57646075230342348
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = shl nsw i64 %45, 1
  %49 = icmp ult i64 %48, %38
  %50 = select i1 %49, i64 %38, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %47, %42
  %53 = phi i64 [ %50, %47 ], [ 115292150460684697, %42 ]
  %54 = mul i64 %53, 160
  %55 = tail call i8* @_Znwm(i64 %54) #14
  %56 = bitcast i8* %55 to %"struct.SkSL::ASTNode"*
  br label %57

57:                                               ; preds = %52, %47
  %58 = phi i64 [ %53, %52 ], [ 0, %47 ]
  %59 = phi %"struct.SkSL::ASTNode"* [ %56, %52 ], [ null, %47 ]
  %60 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %58
  %62 = ptrtoint %"struct.SkSL::ASTNode"* %61 to i64
  %63 = load i32, i32* %1, align 4
  %64 = load i32, i32* %2, align 4
  %65 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %3, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %"struct.SkSL::ASTNode"* %60 to i64*
  store i64 %15, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 1
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 1, i32 1
  store i32 0, i32* %69, align 4
  %70 = bitcast %"struct.SkSL::ASTNode::NodeData"* %68 to i32*
  store i32 %66, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 2
  store i32 %63, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 3
  store i32 %64, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 4, i32 0
  store i32 -1, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 5, i32 0
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 6, i32 0
  store i32 -1, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 1
  %77 = ptrtoint %"struct.SkSL::ASTNode"* %76 to i64
  %78 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  %80 = load i64, i64* %8, align 8
  %81 = ptrtoint %"struct.SkSL::ASTNode"* %79 to i64
  %82 = sub i64 %80, %81
  %83 = sdiv exact i64 %82, -160
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %83
  %85 = ptrtoint %"struct.SkSL::ASTNode"* %84 to i64
  %86 = icmp sgt i64 %82, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %57
  %88 = bitcast %"struct.SkSL::ASTNode"* %84 to i8*
  %89 = bitcast %"struct.SkSL::ASTNode"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 %82, i1 false) #15
  %90 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  br label %91

91:                                               ; preds = %87, %57
  %92 = phi %"struct.SkSL::ASTNode"* [ %79, %57 ], [ %90, %87 ]
  store i64 %85, i64* %10, align 8
  store i64 %77, i64* %8, align 8
  store i64 %62, i64* %43, align 8
  %93 = icmp eq %"struct.SkSL::ASTNode"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = bitcast %"struct.SkSL::ASTNode"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %94, %91, %21
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser17ternaryExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.45"*, align 8
  %3 = alloca %"class.SkSL::AutoDepth", align 8
  %4 = alloca i32, align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %3, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser19logicalOrExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %142

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %142 [
    i32 87, label %20
    i32 61, label %14
  ]

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %16 = bitcast %"struct.SkSL::Token"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %19 = load i32, i32* %18, align 4
  store i32 87, i32* %12, align 4
  br label %25

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %22 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %21) #15
  %23 = extractvalue { i64, i32 } %22, 0
  %24 = extractvalue { i64, i32 } %22, 1
  br label %25

25:                                               ; preds = %20, %14
  %26 = phi i32 [ %19, %14 ], [ %24, %20 ]
  %27 = phi i64 [ %17, %14 ], [ %23, %20 ]
  %28 = trunc i64 %27 to i32
  %29 = add i32 %28, -83
  %30 = icmp ult i32 %29, 3
  br i1 %30, label %31, label %52

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %33 = bitcast %"struct.SkSL::Token"* %32 to i64*
  %34 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %35 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %36

36:                                               ; preds = %46, %31
  %37 = load i32, i32* %12, align 4
  %38 = icmp eq i32 %37, 87
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = load i64, i64* %33, align 4
  %41 = load i32, i32* %34, align 4
  store i32 87, i32* %12, align 4
  br label %46

42:                                               ; preds = %36
  %43 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %35) #15
  %44 = extractvalue { i64, i32 } %43, 0
  %45 = extractvalue { i64, i32 } %43, 1
  br label %46

46:                                               ; preds = %42, %39
  %47 = phi i32 [ %41, %39 ], [ %45, %42 ]
  %48 = phi i64 [ %40, %39 ], [ %44, %42 ]
  %49 = trunc i64 %48 to i32
  %50 = add i32 %49, -83
  %51 = icmp ult i32 %50, 3
  br i1 %51, label %36, label %52

52:                                               ; preds = %46, %25
  %53 = phi i64 [ %27, %25 ], [ %48, %46 ]
  %54 = phi i32 [ %26, %25 ], [ %47, %46 ]
  %55 = trunc i64 %53 to i32
  %56 = icmp eq i32 %55, 61
  br i1 %56, label %61, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %59 = bitcast %"struct.SkSL::Token"* %58 to i64*
  store i64 %53, i64* %59, align 4
  %60 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %54, i32* %60, align 4
  br label %142

61:                                               ; preds = %52
  %62 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %3)
  br i1 %62, label %63, label %142

63:                                               ; preds = %61
  %64 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %65 = icmp sgt i32 %64, -1
  br i1 %65, label %66, label %142

66:                                               ; preds = %63
  %67 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 63, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br i1 %67, label %68, label %142

68:                                               ; preds = %66
  %69 = call i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"* %0)
  %70 = icmp sgt i32 %69, -1
  br i1 %70, label %71, label %142

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %73 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %72, align 8
  %74 = sext i32 %9 to i64
  %75 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %73, i64 0, i32 0, i32 0, i32 0
  %76 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %75, align 8
  %77 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %76, i64 %74, i32 2
  %78 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #15
  store i32 31, i32* %4, align 4
  %79 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %73, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %73, i64 0, i32 0, i32 0, i32 1
  %81 = bitcast %"struct.SkSL::ASTNode"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = ptrtoint %"struct.SkSL::ASTNode"* %76 to i64
  %84 = sub i64 %82, %83
  %85 = sdiv exact i64 %84, 160
  %86 = trunc i64 %85 to i32
  %87 = bitcast %"class.std::__1::vector.45"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #15
  store %"class.std::__1::vector.45"* %79, %"class.std::__1::vector.45"** %2, align 8
  %88 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %79, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %2, i32* dereferenceable(4) %77, i32* nonnull dereferenceable(4) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #15
  %89 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %72, align 8
  %90 = shl i64 %85, 32
  %91 = ashr exact i64 %90, 32
  %92 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %89, i64 0, i32 0, i32 0, i32 0
  %93 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %92, align 8
  %94 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %93, i64 %91, i32 5, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp sgt i32 %95, -1
  br i1 %96, label %97, label %104

97:                                               ; preds = %71
  %98 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %93, i64 %91, i32 0
  %99 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %98, align 8
  %100 = sext i32 %95 to i64
  %101 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %99, i64 0, i32 0, i32 0
  %102 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %101, align 8
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 6, i32 0
  br label %106

104:                                              ; preds = %71
  %105 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %93, i64 %91, i32 4, i32 0
  br label %106

106:                                              ; preds = %97, %104
  %107 = phi i32* [ %103, %97 ], [ %105, %104 ]
  store i32 %9, i32* %107, align 4
  store i32 %9, i32* %94, align 8
  %108 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %72, align 8
  %109 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %109, align 8
  %111 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %110, i64 %91, i32 5, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %112, -1
  br i1 %113, label %114, label %121

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %110, i64 %91, i32 0
  %116 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %115, align 8
  %117 = sext i32 %112 to i64
  %118 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %116, i64 0, i32 0, i32 0
  %119 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %118, align 8
  %120 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %117, i32 6, i32 0
  br label %123

121:                                              ; preds = %106
  %122 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %110, i64 %91, i32 4, i32 0
  br label %123

123:                                              ; preds = %114, %121
  %124 = phi i32* [ %120, %114 ], [ %122, %121 ]
  store i32 %64, i32* %124, align 4
  store i32 %64, i32* %111, align 8
  %125 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %72, align 8
  %126 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %126, align 8
  %128 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %127, i64 %91, i32 5, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %129, -1
  br i1 %130, label %131, label %138

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %127, i64 %91, i32 0
  %133 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %132, align 8
  %134 = sext i32 %129 to i64
  %135 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %133, i64 0, i32 0, i32 0
  %136 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %135, align 8
  %137 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %136, i64 %134, i32 6, i32 0
  br label %140

138:                                              ; preds = %123
  %139 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %127, i64 %91, i32 4, i32 0
  br label %140

140:                                              ; preds = %131, %138
  %141 = phi i32* [ %137, %131 ], [ %139, %138 ]
  store i32 %69, i32* %141, align 4
  store i32 %69, i32* %128, align 8
  br label %142

142:                                              ; preds = %11, %57, %63, %68, %140, %66, %61, %1
  %143 = phi i32 [ -1, %1 ], [ -1, %61 ], [ -1, %63 ], [ %86, %140 ], [ -1, %68 ], [ -1, %66 ], [ %9, %11 ], [ %9, %57 ]
  %144 = load i32, i32* %7, align 8
  %145 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  %146 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %145, i64 0, i32 2
  %147 = load i32, i32* %146, align 8
  %148 = sub nsw i32 %147, %144
  store i32 %148, i32* %146, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser19logicalOrExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser20logicalXorExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %106

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %104
  %22 = phi i32 [ %70, %104 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  switch i32 %23, label %106 [
    i32 87, label %27
    i32 57, label %24
  ]

24:                                               ; preds = %21
  %25 = load i64, i64* %14, align 4
  %26 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %31

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = extractvalue { i64, i32 } %28, 1
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %33 = phi i64 [ %25, %24 ], [ %29, %27 ]
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, -83
  %36 = icmp ult i32 %35, 3
  br i1 %36, label %37, label %53

37:                                               ; preds = %31, %47
  %38 = load i32, i32* %12, align 4
  %39 = icmp eq i32 %38, 87
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i64, i64* %14, align 4
  %42 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %47

43:                                               ; preds = %37
  %44 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = extractvalue { i64, i32 } %44, 1
  br label %47

47:                                               ; preds = %43, %40
  %48 = phi i32 [ %42, %40 ], [ %46, %43 ]
  %49 = phi i64 [ %41, %40 ], [ %45, %43 ]
  %50 = trunc i64 %49 to i32
  %51 = add i32 %50, -83
  %52 = icmp ult i32 %51, 3
  br i1 %52, label %37, label %53

53:                                               ; preds = %47, %31
  %54 = phi i64 [ %33, %31 ], [ %49, %47 ]
  %55 = phi i32 [ %32, %31 ], [ %48, %47 ]
  %56 = trunc i64 %54 to i32
  %57 = icmp eq i32 %56, 57
  br i1 %57, label %59, label %58

58:                                               ; preds = %53
  store i64 %54, i64* %14, align 4
  store i32 %55, i32* %15, align 4
  br label %106

59:                                               ; preds = %53
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %106

61:                                               ; preds = %59
  %62 = call i32 @_ZN4SkSL6Parser20logicalXorExpressionEv(%"class.SkSL::Parser"* %0)
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %106

64:                                               ; preds = %61
  %65 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %66 = sext i32 %22 to i64
  %67 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %65, i64 0, i32 0, i32 0, i32 0
  %68 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %68, i64 %66, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 57, i32* %20, align 4
  %70 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %69, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %71 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 5, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %85

78:                                               ; preds = %64
  %79 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 0
  %80 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %79, align 8
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %80, i64 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %83, i64 %81, i32 6, i32 0
  br label %87

85:                                               ; preds = %64
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 4, i32 0
  br label %87

87:                                               ; preds = %78, %85
  %88 = phi i32* [ %84, %78 ], [ %86, %85 ]
  store i32 %22, i32* %88, align 4
  store i32 %22, i32* %75, align 8
  %89 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %90 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %90, align 8
  %92 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 5, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, -1
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 0
  %97 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %96, align 8
  %98 = sext i32 %93 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %97, i64 0, i32 0, i32 0
  %100 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %99, align 8
  %101 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %100, i64 %98, i32 6, i32 0
  br label %104

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 4, i32 0
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32* [ %103, %102 ], [ %101, %95 ]
  store i32 %62, i32* %105, align 4
  store i32 %62, i32* %92, align 8
  br label %21

106:                                              ; preds = %21, %61, %59, %58, %1
  %107 = phi i32 [ -1, %1 ], [ %22, %58 ], [ -1, %61 ], [ %22, %21 ], [ -1, %59 ]
  %108 = load i32, i32* %7, align 8
  %109 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  %110 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %109, i64 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = sub nsw i32 %111, %108
  store i32 %112, i32* %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser20logicalXorExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser20logicalAndExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %106

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %104
  %22 = phi i32 [ %70, %104 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  switch i32 %23, label %106 [
    i32 87, label %27
    i32 58, label %24
  ]

24:                                               ; preds = %21
  %25 = load i64, i64* %14, align 4
  %26 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %31

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = extractvalue { i64, i32 } %28, 1
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %33 = phi i64 [ %25, %24 ], [ %29, %27 ]
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, -83
  %36 = icmp ult i32 %35, 3
  br i1 %36, label %37, label %53

37:                                               ; preds = %31, %47
  %38 = load i32, i32* %12, align 4
  %39 = icmp eq i32 %38, 87
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i64, i64* %14, align 4
  %42 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %47

43:                                               ; preds = %37
  %44 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = extractvalue { i64, i32 } %44, 1
  br label %47

47:                                               ; preds = %43, %40
  %48 = phi i32 [ %42, %40 ], [ %46, %43 ]
  %49 = phi i64 [ %41, %40 ], [ %45, %43 ]
  %50 = trunc i64 %49 to i32
  %51 = add i32 %50, -83
  %52 = icmp ult i32 %51, 3
  br i1 %52, label %37, label %53

53:                                               ; preds = %47, %31
  %54 = phi i64 [ %33, %31 ], [ %49, %47 ]
  %55 = phi i32 [ %32, %31 ], [ %48, %47 ]
  %56 = trunc i64 %54 to i32
  %57 = icmp eq i32 %56, 58
  br i1 %57, label %59, label %58

58:                                               ; preds = %53
  store i64 %54, i64* %14, align 4
  store i32 %55, i32* %15, align 4
  br label %106

59:                                               ; preds = %53
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %106

61:                                               ; preds = %59
  %62 = call i32 @_ZN4SkSL6Parser20logicalAndExpressionEv(%"class.SkSL::Parser"* %0)
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %106

64:                                               ; preds = %61
  %65 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %66 = sext i32 %22 to i64
  %67 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %65, i64 0, i32 0, i32 0, i32 0
  %68 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %68, i64 %66, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 58, i32* %20, align 4
  %70 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %69, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %71 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 5, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %85

78:                                               ; preds = %64
  %79 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 0
  %80 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %79, align 8
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %80, i64 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %83, i64 %81, i32 6, i32 0
  br label %87

85:                                               ; preds = %64
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 4, i32 0
  br label %87

87:                                               ; preds = %78, %85
  %88 = phi i32* [ %84, %78 ], [ %86, %85 ]
  store i32 %22, i32* %88, align 4
  store i32 %22, i32* %75, align 8
  %89 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %90 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %90, align 8
  %92 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 5, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, -1
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 0
  %97 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %96, align 8
  %98 = sext i32 %93 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %97, i64 0, i32 0, i32 0
  %100 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %99, align 8
  %101 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %100, i64 %98, i32 6, i32 0
  br label %104

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 4, i32 0
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32* [ %103, %102 ], [ %101, %95 ]
  store i32 %62, i32* %105, align 4
  store i32 %62, i32* %92, align 8
  br label %21

106:                                              ; preds = %21, %61, %59, %58, %1
  %107 = phi i32 [ -1, %1 ], [ %22, %58 ], [ -1, %61 ], [ %22, %21 ], [ -1, %59 ]
  %108 = load i32, i32* %7, align 8
  %109 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  %110 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %109, i64 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = sub nsw i32 %111, %108
  store i32 %112, i32* %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser20logicalAndExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser19bitwiseOrExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %106

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %104
  %22 = phi i32 [ %70, %104 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  switch i32 %23, label %106 [
    i32 87, label %27
    i32 59, label %24
  ]

24:                                               ; preds = %21
  %25 = load i64, i64* %14, align 4
  %26 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %31

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = extractvalue { i64, i32 } %28, 1
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %33 = phi i64 [ %25, %24 ], [ %29, %27 ]
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, -83
  %36 = icmp ult i32 %35, 3
  br i1 %36, label %37, label %53

37:                                               ; preds = %31, %47
  %38 = load i32, i32* %12, align 4
  %39 = icmp eq i32 %38, 87
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i64, i64* %14, align 4
  %42 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %47

43:                                               ; preds = %37
  %44 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = extractvalue { i64, i32 } %44, 1
  br label %47

47:                                               ; preds = %43, %40
  %48 = phi i32 [ %42, %40 ], [ %46, %43 ]
  %49 = phi i64 [ %41, %40 ], [ %45, %43 ]
  %50 = trunc i64 %49 to i32
  %51 = add i32 %50, -83
  %52 = icmp ult i32 %51, 3
  br i1 %52, label %37, label %53

53:                                               ; preds = %47, %31
  %54 = phi i64 [ %33, %31 ], [ %49, %47 ]
  %55 = phi i32 [ %32, %31 ], [ %48, %47 ]
  %56 = trunc i64 %54 to i32
  %57 = icmp eq i32 %56, 59
  br i1 %57, label %59, label %58

58:                                               ; preds = %53
  store i64 %54, i64* %14, align 4
  store i32 %55, i32* %15, align 4
  br label %106

59:                                               ; preds = %53
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %106

61:                                               ; preds = %59
  %62 = call i32 @_ZN4SkSL6Parser19bitwiseOrExpressionEv(%"class.SkSL::Parser"* %0)
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %106

64:                                               ; preds = %61
  %65 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %66 = sext i32 %22 to i64
  %67 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %65, i64 0, i32 0, i32 0, i32 0
  %68 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %68, i64 %66, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 59, i32* %20, align 4
  %70 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %69, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %71 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 5, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %85

78:                                               ; preds = %64
  %79 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 0
  %80 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %79, align 8
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %80, i64 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %83, i64 %81, i32 6, i32 0
  br label %87

85:                                               ; preds = %64
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 4, i32 0
  br label %87

87:                                               ; preds = %78, %85
  %88 = phi i32* [ %84, %78 ], [ %86, %85 ]
  store i32 %22, i32* %88, align 4
  store i32 %22, i32* %75, align 8
  %89 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %90 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %90, align 8
  %92 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 5, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, -1
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 0
  %97 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %96, align 8
  %98 = sext i32 %93 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %97, i64 0, i32 0, i32 0
  %100 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %99, align 8
  %101 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %100, i64 %98, i32 6, i32 0
  br label %104

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 4, i32 0
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32* [ %103, %102 ], [ %101, %95 ]
  store i32 %62, i32* %105, align 4
  store i32 %62, i32* %92, align 8
  br label %21

106:                                              ; preds = %21, %61, %59, %58, %1
  %107 = phi i32 [ -1, %1 ], [ %22, %58 ], [ -1, %61 ], [ %22, %21 ], [ -1, %59 ]
  %108 = load i32, i32* %7, align 8
  %109 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  %110 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %109, i64 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = sub nsw i32 %111, %108
  store i32 %112, i32* %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser19bitwiseOrExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser20bitwiseXorExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %106

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %104
  %22 = phi i32 [ %70, %104 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  switch i32 %23, label %106 [
    i32 87, label %27
    i32 53, label %24
  ]

24:                                               ; preds = %21
  %25 = load i64, i64* %14, align 4
  %26 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %31

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = extractvalue { i64, i32 } %28, 1
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %33 = phi i64 [ %25, %24 ], [ %29, %27 ]
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, -83
  %36 = icmp ult i32 %35, 3
  br i1 %36, label %37, label %53

37:                                               ; preds = %31, %47
  %38 = load i32, i32* %12, align 4
  %39 = icmp eq i32 %38, 87
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i64, i64* %14, align 4
  %42 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %47

43:                                               ; preds = %37
  %44 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = extractvalue { i64, i32 } %44, 1
  br label %47

47:                                               ; preds = %43, %40
  %48 = phi i32 [ %42, %40 ], [ %46, %43 ]
  %49 = phi i64 [ %41, %40 ], [ %45, %43 ]
  %50 = trunc i64 %49 to i32
  %51 = add i32 %50, -83
  %52 = icmp ult i32 %51, 3
  br i1 %52, label %37, label %53

53:                                               ; preds = %47, %31
  %54 = phi i64 [ %33, %31 ], [ %49, %47 ]
  %55 = phi i32 [ %32, %31 ], [ %48, %47 ]
  %56 = trunc i64 %54 to i32
  %57 = icmp eq i32 %56, 53
  br i1 %57, label %59, label %58

58:                                               ; preds = %53
  store i64 %54, i64* %14, align 4
  store i32 %55, i32* %15, align 4
  br label %106

59:                                               ; preds = %53
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %106

61:                                               ; preds = %59
  %62 = call i32 @_ZN4SkSL6Parser20bitwiseXorExpressionEv(%"class.SkSL::Parser"* %0)
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %106

64:                                               ; preds = %61
  %65 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %66 = sext i32 %22 to i64
  %67 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %65, i64 0, i32 0, i32 0, i32 0
  %68 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %68, i64 %66, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 53, i32* %20, align 4
  %70 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %69, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %71 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 5, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %85

78:                                               ; preds = %64
  %79 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 0
  %80 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %79, align 8
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %80, i64 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %83, i64 %81, i32 6, i32 0
  br label %87

85:                                               ; preds = %64
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 4, i32 0
  br label %87

87:                                               ; preds = %78, %85
  %88 = phi i32* [ %84, %78 ], [ %86, %85 ]
  store i32 %22, i32* %88, align 4
  store i32 %22, i32* %75, align 8
  %89 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %90 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %90, align 8
  %92 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 5, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, -1
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 0
  %97 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %96, align 8
  %98 = sext i32 %93 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %97, i64 0, i32 0, i32 0
  %100 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %99, align 8
  %101 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %100, i64 %98, i32 6, i32 0
  br label %104

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 4, i32 0
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32* [ %103, %102 ], [ %101, %95 ]
  store i32 %62, i32* %105, align 4
  store i32 %62, i32* %92, align 8
  br label %21

106:                                              ; preds = %21, %61, %59, %58, %1
  %107 = phi i32 [ -1, %1 ], [ %22, %58 ], [ -1, %61 ], [ %22, %21 ], [ -1, %59 ]
  %108 = load i32, i32* %7, align 8
  %109 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  %110 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %109, i64 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = sub nsw i32 %111, %108
  store i32 %112, i32* %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser20bitwiseXorExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser20bitwiseAndExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %106

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %104
  %22 = phi i32 [ %70, %104 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  switch i32 %23, label %106 [
    i32 87, label %27
    i32 54, label %24
  ]

24:                                               ; preds = %21
  %25 = load i64, i64* %14, align 4
  %26 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %31

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = extractvalue { i64, i32 } %28, 1
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %33 = phi i64 [ %25, %24 ], [ %29, %27 ]
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, -83
  %36 = icmp ult i32 %35, 3
  br i1 %36, label %37, label %53

37:                                               ; preds = %31, %47
  %38 = load i32, i32* %12, align 4
  %39 = icmp eq i32 %38, 87
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i64, i64* %14, align 4
  %42 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %47

43:                                               ; preds = %37
  %44 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = extractvalue { i64, i32 } %44, 1
  br label %47

47:                                               ; preds = %43, %40
  %48 = phi i32 [ %42, %40 ], [ %46, %43 ]
  %49 = phi i64 [ %41, %40 ], [ %45, %43 ]
  %50 = trunc i64 %49 to i32
  %51 = add i32 %50, -83
  %52 = icmp ult i32 %51, 3
  br i1 %52, label %37, label %53

53:                                               ; preds = %47, %31
  %54 = phi i64 [ %33, %31 ], [ %49, %47 ]
  %55 = phi i32 [ %32, %31 ], [ %48, %47 ]
  %56 = trunc i64 %54 to i32
  %57 = icmp eq i32 %56, 54
  br i1 %57, label %59, label %58

58:                                               ; preds = %53
  store i64 %54, i64* %14, align 4
  store i32 %55, i32* %15, align 4
  br label %106

59:                                               ; preds = %53
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %106

61:                                               ; preds = %59
  %62 = call i32 @_ZN4SkSL6Parser20bitwiseAndExpressionEv(%"class.SkSL::Parser"* %0)
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %106

64:                                               ; preds = %61
  %65 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %66 = sext i32 %22 to i64
  %67 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %65, i64 0, i32 0, i32 0, i32 0
  %68 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %68, i64 %66, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 54, i32* %20, align 4
  %70 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %69, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %71 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 5, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %85

78:                                               ; preds = %64
  %79 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 0
  %80 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %79, align 8
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %80, i64 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %83, i64 %81, i32 6, i32 0
  br label %87

85:                                               ; preds = %64
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 4, i32 0
  br label %87

87:                                               ; preds = %78, %85
  %88 = phi i32* [ %84, %78 ], [ %86, %85 ]
  store i32 %22, i32* %88, align 4
  store i32 %22, i32* %75, align 8
  %89 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %90 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %90, align 8
  %92 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 5, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, -1
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 0
  %97 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %96, align 8
  %98 = sext i32 %93 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %97, i64 0, i32 0, i32 0
  %100 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %99, align 8
  %101 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %100, i64 %98, i32 6, i32 0
  br label %104

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 4, i32 0
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32* [ %103, %102 ], [ %101, %95 ]
  store i32 %62, i32* %105, align 4
  store i32 %62, i32* %92, align 8
  br label %21

106:                                              ; preds = %21, %61, %59, %58, %1
  %107 = phi i32 [ -1, %1 ], [ %22, %58 ], [ -1, %61 ], [ %22, %21 ], [ -1, %59 ]
  %108 = load i32, i32* %7, align 8
  %109 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  %110 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %109, i64 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = sub nsw i32 %111, %108
  store i32 %112, i32* %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser20bitwiseAndExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser18equalityExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %106

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %104
  %22 = phi i32 [ %70, %104 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  switch i32 %23, label %106 [
    i32 87, label %27
    i32 55, label %24
  ]

24:                                               ; preds = %21
  %25 = load i64, i64* %14, align 4
  %26 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %31

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = extractvalue { i64, i32 } %28, 1
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32 [ %26, %24 ], [ %30, %27 ]
  %33 = phi i64 [ %25, %24 ], [ %29, %27 ]
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, -83
  %36 = icmp ult i32 %35, 3
  br i1 %36, label %37, label %53

37:                                               ; preds = %31, %47
  %38 = load i32, i32* %12, align 4
  %39 = icmp eq i32 %38, 87
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i64, i64* %14, align 4
  %42 = load i32, i32* %15, align 4
  store i32 87, i32* %12, align 4
  br label %47

43:                                               ; preds = %37
  %44 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = extractvalue { i64, i32 } %44, 1
  br label %47

47:                                               ; preds = %43, %40
  %48 = phi i32 [ %42, %40 ], [ %46, %43 ]
  %49 = phi i64 [ %41, %40 ], [ %45, %43 ]
  %50 = trunc i64 %49 to i32
  %51 = add i32 %50, -83
  %52 = icmp ult i32 %51, 3
  br i1 %52, label %37, label %53

53:                                               ; preds = %47, %31
  %54 = phi i64 [ %33, %31 ], [ %49, %47 ]
  %55 = phi i32 [ %32, %31 ], [ %48, %47 ]
  %56 = trunc i64 %54 to i32
  %57 = icmp eq i32 %56, 55
  br i1 %57, label %59, label %58

58:                                               ; preds = %53
  store i64 %54, i64* %14, align 4
  store i32 %55, i32* %15, align 4
  br label %106

59:                                               ; preds = %53
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %106

61:                                               ; preds = %59
  %62 = call i32 @_ZN4SkSL6Parser18equalityExpressionEv(%"class.SkSL::Parser"* %0)
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %64, label %106

64:                                               ; preds = %61
  %65 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %66 = sext i32 %22 to i64
  %67 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %65, i64 0, i32 0, i32 0, i32 0
  %68 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %68, i64 %66, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 55, i32* %20, align 4
  %70 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %69, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %71 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %72 = sext i32 %70 to i64
  %73 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 5, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %85

78:                                               ; preds = %64
  %79 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 0
  %80 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %79, align 8
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %80, i64 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %83, i64 %81, i32 6, i32 0
  br label %87

85:                                               ; preds = %64
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %74, i64 %72, i32 4, i32 0
  br label %87

87:                                               ; preds = %78, %85
  %88 = phi i32* [ %84, %78 ], [ %86, %85 ]
  store i32 %22, i32* %88, align 4
  store i32 %22, i32* %75, align 8
  %89 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %90 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %90, align 8
  %92 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 5, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, -1
  br i1 %94, label %95, label %102

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 0
  %97 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %96, align 8
  %98 = sext i32 %93 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %97, i64 0, i32 0, i32 0
  %100 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %99, align 8
  %101 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %100, i64 %98, i32 6, i32 0
  br label %104

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %72, i32 4, i32 0
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32* [ %103, %102 ], [ %101, %95 ]
  store i32 %62, i32* %105, align 4
  store i32 %62, i32* %92, align 8
  br label %21

106:                                              ; preds = %21, %61, %59, %58, %1
  %107 = phi i32 [ -1, %1 ], [ %22, %58 ], [ -1, %61 ], [ %22, %21 ], [ -1, %59 ]
  %108 = load i32, i32* %7, align 8
  %109 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  %110 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %109, i64 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = sub nsw i32 %111, %108
  store i32 %112, i32* %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser18equalityExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser20relationalExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %138

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %132
  %22 = phi i32 [ %98, %132 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  %24 = icmp eq i32 %23, 87
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = load i64, i64* %14, align 4
  br label %54

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = add i32 %30, -83
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = extractvalue { i64, i32 } %28, 1
  br label %51

35:                                               ; preds = %27, %45
  %36 = load i32, i32* %12, align 4
  %37 = icmp eq i32 %36, 87
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i64, i64* %14, align 4
  %40 = load i32, i32* %16, align 4
  store i32 87, i32* %12, align 4
  br label %45

41:                                               ; preds = %35
  %42 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %43 = extractvalue { i64, i32 } %42, 0
  %44 = extractvalue { i64, i32 } %42, 1
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi i32 [ %40, %38 ], [ %44, %41 ]
  %47 = phi i64 [ %39, %38 ], [ %43, %41 ]
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, -83
  %50 = icmp ult i32 %49, 3
  br i1 %50, label %35, label %51

51:                                               ; preds = %45, %33
  %52 = phi i64 [ %29, %33 ], [ %47, %45 ]
  %53 = phi i32 [ %34, %33 ], [ %46, %45 ]
  store i64 %52, i64* %14, align 4
  store i32 %53, i32* %16, align 4
  br label %54

54:                                               ; preds = %25, %51
  %55 = phi i64 [ %26, %25 ], [ %52, %51 ]
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, -65
  %58 = icmp ult i32 %57, 2
  br i1 %58, label %59, label %134

59:                                               ; preds = %54
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %134

61:                                               ; preds = %59
  %62 = load i32, i32* %12, align 4
  %63 = icmp eq i32 %62, 87
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %69

66:                                               ; preds = %61
  %67 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %68 = extractvalue { i64, i32 } %67, 0
  br label %69

69:                                               ; preds = %66, %64
  %70 = phi i64 [ %65, %64 ], [ %68, %66 ]
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, -83
  %73 = icmp ult i32 %72, 3
  br i1 %73, label %74, label %87

74:                                               ; preds = %69, %82
  %75 = load i32, i32* %12, align 4
  %76 = icmp eq i32 %75, 87
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %82

79:                                               ; preds = %74
  %80 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %81 = extractvalue { i64, i32 } %80, 0
  br label %82

82:                                               ; preds = %79, %77
  %83 = phi i64 [ %78, %77 ], [ %81, %79 ]
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, -83
  %86 = icmp ult i32 %85, 3
  br i1 %86, label %74, label %87

87:                                               ; preds = %82, %69
  %88 = phi i64 [ %70, %69 ], [ %83, %82 ]
  %89 = call i32 @_ZN4SkSL6Parser20relationalExpressionEv(%"class.SkSL::Parser"* %0)
  %90 = icmp sgt i32 %89, -1
  br i1 %90, label %91, label %134

91:                                               ; preds = %87
  %92 = trunc i64 %88 to i32
  %93 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %94 = sext i32 %22 to i64
  %95 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %93, i64 0, i32 0, i32 0, i32 0
  %96 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %95, align 8
  %97 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %94, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 %92, i32* %20, align 4
  %98 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %97, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %99 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %99, i64 0, i32 0, i32 0, i32 0
  %102 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %101, align 8
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 5, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, -1
  br i1 %105, label %106, label %113

106:                                              ; preds = %91
  %107 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 0
  %108 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %107, align 8
  %109 = sext i32 %104 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %108, i64 0, i32 0, i32 0
  %111 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %110, align 8
  %112 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %111, i64 %109, i32 6, i32 0
  br label %115

113:                                              ; preds = %91
  %114 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 4, i32 0
  br label %115

115:                                              ; preds = %106, %113
  %116 = phi i32* [ %112, %106 ], [ %114, %113 ]
  store i32 %22, i32* %116, align 4
  store i32 %22, i32* %103, align 8
  %117 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %118 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %118, align 8
  %120 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 5, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, -1
  br i1 %122, label %123, label %130

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 0
  %125 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %124, align 8
  %126 = sext i32 %121 to i64
  %127 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %125, i64 0, i32 0, i32 0
  %128 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %127, align 8
  %129 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %128, i64 %126, i32 6, i32 0
  br label %132

130:                                              ; preds = %115
  %131 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 4, i32 0
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32* [ %131, %130 ], [ %129, %123 ]
  store i32 %89, i32* %133, align 4
  store i32 %89, i32* %120, align 8
  br label %21

134:                                              ; preds = %59, %54, %87
  %135 = phi i32 [ -1, %59 ], [ %22, %54 ], [ -1, %87 ]
  %136 = load i32, i32* %7, align 8
  %137 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  br label %138

138:                                              ; preds = %134, %1
  %139 = phi %"class.SkSL::Parser"* [ %0, %1 ], [ %137, %134 ]
  %140 = phi i32 [ 0, %1 ], [ %136, %134 ]
  %141 = phi i32 [ -1, %1 ], [ %135, %134 ]
  %142 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %139, i64 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = sub nsw i32 %143, %140
  store i32 %144, i32* %142, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser20relationalExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser15shiftExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %138

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %132
  %22 = phi i32 [ %98, %132 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  %24 = icmp eq i32 %23, 87
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = load i64, i64* %14, align 4
  br label %54

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = add i32 %30, -83
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = extractvalue { i64, i32 } %28, 1
  br label %51

35:                                               ; preds = %27, %45
  %36 = load i32, i32* %12, align 4
  %37 = icmp eq i32 %36, 87
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i64, i64* %14, align 4
  %40 = load i32, i32* %16, align 4
  store i32 87, i32* %12, align 4
  br label %45

41:                                               ; preds = %35
  %42 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %43 = extractvalue { i64, i32 } %42, 0
  %44 = extractvalue { i64, i32 } %42, 1
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi i32 [ %40, %38 ], [ %44, %41 ]
  %47 = phi i64 [ %39, %38 ], [ %43, %41 ]
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, -83
  %50 = icmp ult i32 %49, 3
  br i1 %50, label %35, label %51

51:                                               ; preds = %45, %33
  %52 = phi i64 [ %29, %33 ], [ %47, %45 ]
  %53 = phi i32 [ %34, %33 ], [ %46, %45 ]
  store i64 %52, i64* %14, align 4
  store i32 %53, i32* %16, align 4
  br label %54

54:                                               ; preds = %25, %51
  %55 = phi i64 [ %26, %25 ], [ %52, %51 ]
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, -67
  %58 = icmp ult i32 %57, 4
  br i1 %58, label %59, label %134

59:                                               ; preds = %54
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %134

61:                                               ; preds = %59
  %62 = load i32, i32* %12, align 4
  %63 = icmp eq i32 %62, 87
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %69

66:                                               ; preds = %61
  %67 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %68 = extractvalue { i64, i32 } %67, 0
  br label %69

69:                                               ; preds = %66, %64
  %70 = phi i64 [ %65, %64 ], [ %68, %66 ]
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, -83
  %73 = icmp ult i32 %72, 3
  br i1 %73, label %74, label %87

74:                                               ; preds = %69, %82
  %75 = load i32, i32* %12, align 4
  %76 = icmp eq i32 %75, 87
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %82

79:                                               ; preds = %74
  %80 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %81 = extractvalue { i64, i32 } %80, 0
  br label %82

82:                                               ; preds = %79, %77
  %83 = phi i64 [ %78, %77 ], [ %81, %79 ]
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, -83
  %86 = icmp ult i32 %85, 3
  br i1 %86, label %74, label %87

87:                                               ; preds = %82, %69
  %88 = phi i64 [ %70, %69 ], [ %83, %82 ]
  %89 = call i32 @_ZN4SkSL6Parser15shiftExpressionEv(%"class.SkSL::Parser"* %0)
  %90 = icmp sgt i32 %89, -1
  br i1 %90, label %91, label %134

91:                                               ; preds = %87
  %92 = trunc i64 %88 to i32
  %93 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %94 = sext i32 %22 to i64
  %95 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %93, i64 0, i32 0, i32 0, i32 0
  %96 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %95, align 8
  %97 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %94, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 %92, i32* %20, align 4
  %98 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %97, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %99 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %99, i64 0, i32 0, i32 0, i32 0
  %102 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %101, align 8
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 5, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, -1
  br i1 %105, label %106, label %113

106:                                              ; preds = %91
  %107 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 0
  %108 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %107, align 8
  %109 = sext i32 %104 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %108, i64 0, i32 0, i32 0
  %111 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %110, align 8
  %112 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %111, i64 %109, i32 6, i32 0
  br label %115

113:                                              ; preds = %91
  %114 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 4, i32 0
  br label %115

115:                                              ; preds = %106, %113
  %116 = phi i32* [ %112, %106 ], [ %114, %113 ]
  store i32 %22, i32* %116, align 4
  store i32 %22, i32* %103, align 8
  %117 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %118 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %118, align 8
  %120 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 5, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, -1
  br i1 %122, label %123, label %130

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 0
  %125 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %124, align 8
  %126 = sext i32 %121 to i64
  %127 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %125, i64 0, i32 0, i32 0
  %128 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %127, align 8
  %129 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %128, i64 %126, i32 6, i32 0
  br label %132

130:                                              ; preds = %115
  %131 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 4, i32 0
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32* [ %131, %130 ], [ %129, %123 ]
  store i32 %89, i32* %133, align 4
  store i32 %89, i32* %120, align 8
  br label %21

134:                                              ; preds = %59, %54, %87
  %135 = phi i32 [ -1, %59 ], [ %22, %54 ], [ -1, %87 ]
  %136 = load i32, i32* %7, align 8
  %137 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  br label %138

138:                                              ; preds = %134, %1
  %139 = phi %"class.SkSL::Parser"* [ %0, %1 ], [ %137, %134 ]
  %140 = phi i32 [ 0, %1 ], [ %136, %134 ]
  %141 = phi i32 [ -1, %1 ], [ %135, %134 ]
  %142 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %139, i64 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = sub nsw i32 %143, %140
  store i32 %144, i32* %142, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser15shiftExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser18additiveExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %138

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %132
  %22 = phi i32 [ %98, %132 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  %24 = icmp eq i32 %23, 87
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = load i64, i64* %14, align 4
  br label %54

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = add i32 %30, -83
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = extractvalue { i64, i32 } %28, 1
  br label %51

35:                                               ; preds = %27, %45
  %36 = load i32, i32* %12, align 4
  %37 = icmp eq i32 %36, 87
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i64, i64* %14, align 4
  %40 = load i32, i32* %16, align 4
  store i32 87, i32* %12, align 4
  br label %45

41:                                               ; preds = %35
  %42 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %43 = extractvalue { i64, i32 } %42, 0
  %44 = extractvalue { i64, i32 } %42, 1
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi i32 [ %40, %38 ], [ %44, %41 ]
  %47 = phi i64 [ %39, %38 ], [ %43, %41 ]
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, -83
  %50 = icmp ult i32 %49, 3
  br i1 %50, label %35, label %51

51:                                               ; preds = %45, %33
  %52 = phi i64 [ %29, %33 ], [ %47, %45 ]
  %53 = phi i32 [ %34, %33 ], [ %46, %45 ]
  store i64 %52, i64* %14, align 4
  store i32 %53, i32* %16, align 4
  br label %54

54:                                               ; preds = %25, %51
  %55 = phi i64 [ %26, %25 ], [ %52, %51 ]
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, -51
  %58 = icmp ult i32 %57, 2
  br i1 %58, label %59, label %134

59:                                               ; preds = %54
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %134

61:                                               ; preds = %59
  %62 = load i32, i32* %12, align 4
  %63 = icmp eq i32 %62, 87
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %69

66:                                               ; preds = %61
  %67 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %68 = extractvalue { i64, i32 } %67, 0
  br label %69

69:                                               ; preds = %66, %64
  %70 = phi i64 [ %65, %64 ], [ %68, %66 ]
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, -83
  %73 = icmp ult i32 %72, 3
  br i1 %73, label %74, label %87

74:                                               ; preds = %69, %82
  %75 = load i32, i32* %12, align 4
  %76 = icmp eq i32 %75, 87
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %82

79:                                               ; preds = %74
  %80 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %81 = extractvalue { i64, i32 } %80, 0
  br label %82

82:                                               ; preds = %79, %77
  %83 = phi i64 [ %78, %77 ], [ %81, %79 ]
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, -83
  %86 = icmp ult i32 %85, 3
  br i1 %86, label %74, label %87

87:                                               ; preds = %82, %69
  %88 = phi i64 [ %70, %69 ], [ %83, %82 ]
  %89 = call i32 @_ZN4SkSL6Parser18additiveExpressionEv(%"class.SkSL::Parser"* %0)
  %90 = icmp sgt i32 %89, -1
  br i1 %90, label %91, label %134

91:                                               ; preds = %87
  %92 = trunc i64 %88 to i32
  %93 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %94 = sext i32 %22 to i64
  %95 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %93, i64 0, i32 0, i32 0, i32 0
  %96 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %95, align 8
  %97 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %94, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 %92, i32* %20, align 4
  %98 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %97, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %99 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %99, i64 0, i32 0, i32 0, i32 0
  %102 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %101, align 8
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 5, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, -1
  br i1 %105, label %106, label %113

106:                                              ; preds = %91
  %107 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 0
  %108 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %107, align 8
  %109 = sext i32 %104 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %108, i64 0, i32 0, i32 0
  %111 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %110, align 8
  %112 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %111, i64 %109, i32 6, i32 0
  br label %115

113:                                              ; preds = %91
  %114 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 4, i32 0
  br label %115

115:                                              ; preds = %106, %113
  %116 = phi i32* [ %112, %106 ], [ %114, %113 ]
  store i32 %22, i32* %116, align 4
  store i32 %22, i32* %103, align 8
  %117 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %118 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %118, align 8
  %120 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 5, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, -1
  br i1 %122, label %123, label %130

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 0
  %125 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %124, align 8
  %126 = sext i32 %121 to i64
  %127 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %125, i64 0, i32 0, i32 0
  %128 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %127, align 8
  %129 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %128, i64 %126, i32 6, i32 0
  br label %132

130:                                              ; preds = %115
  %131 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 4, i32 0
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32* [ %131, %130 ], [ %129, %123 ]
  store i32 %89, i32* %133, align 4
  store i32 %89, i32* %120, align 8
  br label %21

134:                                              ; preds = %59, %54, %87
  %135 = phi i32 [ -1, %59 ], [ %22, %54 ], [ -1, %87 ]
  %136 = load i32, i32* %7, align 8
  %137 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  br label %138

138:                                              ; preds = %134, %1
  %139 = phi %"class.SkSL::Parser"* [ %0, %1 ], [ %137, %134 ]
  %140 = phi i32 [ 0, %1 ], [ %136, %134 ]
  %141 = phi i32 [ -1, %1 ], [ %135, %134 ]
  %142 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %139, i64 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = sub nsw i32 %143, %140
  store i32 %144, i32* %142, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser18additiveExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser24multiplicativeExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %137

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %131
  %22 = phi i32 [ %97, %131 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  %24 = icmp eq i32 %23, 87
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = load i64, i64* %14, align 4
  br label %54

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = add i32 %30, -83
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = extractvalue { i64, i32 } %28, 1
  br label %51

35:                                               ; preds = %27, %45
  %36 = load i32, i32* %12, align 4
  %37 = icmp eq i32 %36, 87
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i64, i64* %14, align 4
  %40 = load i32, i32* %16, align 4
  store i32 87, i32* %12, align 4
  br label %45

41:                                               ; preds = %35
  %42 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %43 = extractvalue { i64, i32 } %42, 0
  %44 = extractvalue { i64, i32 } %42, 1
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi i32 [ %40, %38 ], [ %44, %41 ]
  %47 = phi i64 [ %39, %38 ], [ %43, %41 ]
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, -83
  %50 = icmp ult i32 %49, 3
  br i1 %50, label %35, label %51

51:                                               ; preds = %45, %33
  %52 = phi i64 [ %29, %33 ], [ %47, %45 ]
  %53 = phi i32 [ %34, %33 ], [ %46, %45 ]
  store i64 %52, i64* %14, align 4
  store i32 %53, i32* %16, align 4
  br label %54

54:                                               ; preds = %25, %51
  %55 = phi i64 [ %26, %25 ], [ %52, %51 ]
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 46
  br i1 %57, label %58, label %133

58:                                               ; preds = %54
  %59 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %59, label %60, label %133

60:                                               ; preds = %58
  %61 = load i32, i32* %12, align 4
  %62 = icmp eq i32 %61, 87
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %68

65:                                               ; preds = %60
  %66 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %67 = extractvalue { i64, i32 } %66, 0
  br label %68

68:                                               ; preds = %65, %63
  %69 = phi i64 [ %64, %63 ], [ %67, %65 ]
  %70 = trunc i64 %69 to i32
  %71 = add i32 %70, -83
  %72 = icmp ult i32 %71, 3
  br i1 %72, label %73, label %86

73:                                               ; preds = %68, %81
  %74 = load i32, i32* %12, align 4
  %75 = icmp eq i32 %74, 87
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %81

78:                                               ; preds = %73
  %79 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %80 = extractvalue { i64, i32 } %79, 0
  br label %81

81:                                               ; preds = %78, %76
  %82 = phi i64 [ %77, %76 ], [ %80, %78 ]
  %83 = trunc i64 %82 to i32
  %84 = add i32 %83, -83
  %85 = icmp ult i32 %84, 3
  br i1 %85, label %73, label %86

86:                                               ; preds = %81, %68
  %87 = phi i64 [ %69, %68 ], [ %82, %81 ]
  %88 = call i32 @_ZN4SkSL6Parser24multiplicativeExpressionEv(%"class.SkSL::Parser"* %0)
  %89 = icmp sgt i32 %88, -1
  br i1 %89, label %90, label %133

90:                                               ; preds = %86
  %91 = trunc i64 %87 to i32
  %92 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %93 = sext i32 %22 to i64
  %94 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %94, align 8
  %96 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %95, i64 %93, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 %91, i32* %20, align 4
  %97 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %96, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %98 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %99 = sext i32 %97 to i64
  %100 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %100, align 8
  %102 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %101, i64 %99, i32 5, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp sgt i32 %103, -1
  br i1 %104, label %105, label %112

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %101, i64 %99, i32 0
  %107 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %106, align 8
  %108 = sext i32 %103 to i64
  %109 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %107, i64 0, i32 0, i32 0
  %110 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %109, align 8
  %111 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %110, i64 %108, i32 6, i32 0
  br label %114

112:                                              ; preds = %90
  %113 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %101, i64 %99, i32 4, i32 0
  br label %114

114:                                              ; preds = %105, %112
  %115 = phi i32* [ %111, %105 ], [ %113, %112 ]
  store i32 %22, i32* %115, align 4
  store i32 %22, i32* %102, align 8
  %116 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %117 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %117, align 8
  %119 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %118, i64 %99, i32 5, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp sgt i32 %120, -1
  br i1 %121, label %122, label %129

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %118, i64 %99, i32 0
  %124 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %123, align 8
  %125 = sext i32 %120 to i64
  %126 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %124, i64 0, i32 0, i32 0
  %127 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %126, align 8
  %128 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %127, i64 %125, i32 6, i32 0
  br label %131

129:                                              ; preds = %114
  %130 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %118, i64 %99, i32 4, i32 0
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32* [ %130, %129 ], [ %128, %122 ]
  store i32 %88, i32* %132, align 4
  store i32 %88, i32* %119, align 8
  br label %21

133:                                              ; preds = %58, %54, %86
  %134 = phi i32 [ -1, %58 ], [ %22, %54 ], [ -1, %86 ]
  %135 = load i32, i32* %7, align 8
  %136 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  br label %137

137:                                              ; preds = %133, %1
  %138 = phi %"class.SkSL::Parser"* [ %0, %1 ], [ %136, %133 ]
  %139 = phi i32 [ 0, %1 ], [ %135, %133 ]
  %140 = phi i32 [ -1, %1 ], [ %134, %133 ]
  %141 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %138, i64 0, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = sub nsw i32 %142, %139
  store i32 %143, i32* %141, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %140
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser24multiplicativeExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.SkSL::Operator", align 4
  %5 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %8 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %6, align 8
  store i32 0, i32* %7, align 8
  %9 = tail call i32 @_ZN4SkSL6Parser15unaryExpressionEv(%"class.SkSL::Parser"* %0)
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %138

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %14 = bitcast %"struct.SkSL::Token"* %13 to i64*
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %17 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %18 = bitcast i32* %3 to i8*
  %19 = bitcast %"class.SkSL::Operator"* %4 to i8*
  %20 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %4, i64 0, i32 0
  br label %21

21:                                               ; preds = %11, %132
  %22 = phi i32 [ %98, %132 ], [ %9, %11 ]
  %23 = load i32, i32* %12, align 4
  %24 = icmp eq i32 %23, 87
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = load i64, i64* %14, align 4
  br label %54

27:                                               ; preds = %21
  %28 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = add i32 %30, -83
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = extractvalue { i64, i32 } %28, 1
  br label %51

35:                                               ; preds = %27, %45
  %36 = load i32, i32* %12, align 4
  %37 = icmp eq i32 %36, 87
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i64, i64* %14, align 4
  %40 = load i32, i32* %16, align 4
  store i32 87, i32* %12, align 4
  br label %45

41:                                               ; preds = %35
  %42 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %43 = extractvalue { i64, i32 } %42, 0
  %44 = extractvalue { i64, i32 } %42, 1
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi i32 [ %40, %38 ], [ %44, %41 ]
  %47 = phi i64 [ %39, %38 ], [ %43, %41 ]
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, -83
  %50 = icmp ult i32 %49, 3
  br i1 %50, label %35, label %51

51:                                               ; preds = %45, %33
  %52 = phi i64 [ %29, %33 ], [ %47, %45 ]
  %53 = phi i32 [ %34, %33 ], [ %46, %45 ]
  store i64 %52, i64* %14, align 4
  store i32 %53, i32* %16, align 4
  br label %54

54:                                               ; preds = %25, %51
  %55 = phi i64 [ %26, %25 ], [ %52, %51 ]
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, -48
  %58 = icmp ult i32 %57, 3
  br i1 %58, label %59, label %134

59:                                               ; preds = %54
  %60 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %60, label %61, label %134

61:                                               ; preds = %59
  %62 = load i32, i32* %12, align 4
  %63 = icmp eq i32 %62, 87
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %69

66:                                               ; preds = %61
  %67 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %68 = extractvalue { i64, i32 } %67, 0
  br label %69

69:                                               ; preds = %66, %64
  %70 = phi i64 [ %65, %64 ], [ %68, %66 ]
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, -83
  %73 = icmp ult i32 %72, 3
  br i1 %73, label %74, label %87

74:                                               ; preds = %69, %82
  %75 = load i32, i32* %12, align 4
  %76 = icmp eq i32 %75, 87
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = load i64, i64* %14, align 4
  store i32 87, i32* %12, align 4
  br label %82

79:                                               ; preds = %74
  %80 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %15) #15
  %81 = extractvalue { i64, i32 } %80, 0
  br label %82

82:                                               ; preds = %79, %77
  %83 = phi i64 [ %78, %77 ], [ %81, %79 ]
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, -83
  %86 = icmp ult i32 %85, 3
  br i1 %86, label %74, label %87

87:                                               ; preds = %82, %69
  %88 = phi i64 [ %70, %69 ], [ %83, %82 ]
  %89 = call i32 @_ZN4SkSL6Parser15unaryExpressionEv(%"class.SkSL::Parser"* %0)
  %90 = icmp sgt i32 %89, -1
  br i1 %90, label %91, label %134

91:                                               ; preds = %87
  %92 = trunc i64 %88 to i32
  %93 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %94 = sext i32 %22 to i64
  %95 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %93, i64 0, i32 0, i32 0, i32 0
  %96 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %95, align 8
  %97 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %96, i64 %94, i32 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #15
  store i32 0, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #15
  store i32 %92, i32* %20, align 4
  %98 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %97, i32* nonnull dereferenceable(4) %3, %"class.SkSL::Operator"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #15
  %99 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %99, i64 0, i32 0, i32 0, i32 0
  %102 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %101, align 8
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 5, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, -1
  br i1 %105, label %106, label %113

106:                                              ; preds = %91
  %107 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 0
  %108 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %107, align 8
  %109 = sext i32 %104 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %108, i64 0, i32 0, i32 0
  %111 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %110, align 8
  %112 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %111, i64 %109, i32 6, i32 0
  br label %115

113:                                              ; preds = %91
  %114 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 %100, i32 4, i32 0
  br label %115

115:                                              ; preds = %106, %113
  %116 = phi i32* [ %112, %106 ], [ %114, %113 ]
  store i32 %22, i32* %116, align 4
  store i32 %22, i32* %103, align 8
  %117 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %17, align 8
  %118 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %118, align 8
  %120 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 5, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, -1
  br i1 %122, label %123, label %130

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 0
  %125 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %124, align 8
  %126 = sext i32 %121 to i64
  %127 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %125, i64 0, i32 0, i32 0
  %128 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %127, align 8
  %129 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %128, i64 %126, i32 6, i32 0
  br label %132

130:                                              ; preds = %115
  %131 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %119, i64 %100, i32 4, i32 0
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32* [ %131, %130 ], [ %129, %123 ]
  store i32 %89, i32* %133, align 4
  store i32 %89, i32* %120, align 8
  br label %21

134:                                              ; preds = %59, %54, %87
  %135 = phi i32 [ -1, %59 ], [ %22, %54 ], [ -1, %87 ]
  %136 = load i32, i32* %7, align 8
  %137 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %6, align 8
  br label %138

138:                                              ; preds = %134, %1
  %139 = phi %"class.SkSL::Parser"* [ %0, %1 ], [ %137, %134 ]
  %140 = phi i32 [ 0, %1 ], [ %136, %134 ]
  %141 = phi i32 [ -1, %1 ], [ %135, %134 ]
  %142 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %139, i64 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = sub nsw i32 %143, %140
  store i32 %144, i32* %142, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser15unaryExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = alloca %"struct.SkSL::Token", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.SkSL::Operator", align 4
  %6 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %9 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %7, align 8
  store i32 0, i32* %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 87
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %15 = bitcast %"struct.SkSL::Token"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  br label %52

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %19 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %18) #15
  %20 = extractvalue { i64, i32 } %19, 0
  %21 = trunc i64 %20 to i32
  %22 = add i32 %21, -83
  %23 = icmp ult i32 %22, 3
  br i1 %23, label %26, label %24

24:                                               ; preds = %17
  %25 = extractvalue { i64, i32 } %19, 1
  br label %46

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %28 = bitcast %"struct.SkSL::Token"* %27 to i64*
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %30

30:                                               ; preds = %40, %26
  %31 = load i32, i32* %10, align 4
  %32 = icmp eq i32 %31, 87
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load i64, i64* %28, align 4
  %35 = load i32, i32* %29, align 4
  store i32 87, i32* %10, align 4
  br label %40

36:                                               ; preds = %30
  %37 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %18) #15
  %38 = extractvalue { i64, i32 } %37, 0
  %39 = extractvalue { i64, i32 } %37, 1
  br label %40

40:                                               ; preds = %36, %33
  %41 = phi i32 [ %35, %33 ], [ %39, %36 ]
  %42 = phi i64 [ %34, %33 ], [ %38, %36 ]
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, -83
  %45 = icmp ult i32 %44, 3
  br i1 %45, label %30, label %46

46:                                               ; preds = %40, %24
  %47 = phi i64 [ %20, %24 ], [ %42, %40 ]
  %48 = phi i32 [ %25, %24 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %50 = bitcast %"struct.SkSL::Token"* %49 to i64*
  store i64 %47, i64* %50, align 4
  %51 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %48, i32* %51, align 4
  br label %52

52:                                               ; preds = %13, %46
  %53 = phi i64 [ %16, %13 ], [ %47, %46 ]
  %54 = trunc i64 %53 to i32
  switch i32 %54, label %137 [
    i32 46, label %55
    i32 47, label %55
    i32 60, label %55
    i32 56, label %55
    i32 44, label %55
    i32 45, label %55
  ]

55:                                               ; preds = %52, %52, %52, %52, %52, %52
  %56 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %56, label %57, label %139

57:                                               ; preds = %55
  %58 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %58) #15
  %59 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  store i32 -1431655766, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  store i32 -1431655766, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 -1431655766, i32* %61, align 8
  %62 = load i32, i32* %10, align 4
  %63 = icmp eq i32 %62, 87
  br i1 %63, label %70, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %66 = bitcast %"struct.SkSL::Token"* %65 to i64*
  %67 = load i64, i64* %66, align 4
  %68 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %69 = load i32, i32* %68, align 4
  store i32 87, i32* %10, align 4
  br label %75

70:                                               ; preds = %57
  %71 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %72 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %71) #15
  %73 = extractvalue { i64, i32 } %72, 0
  %74 = extractvalue { i64, i32 } %72, 1
  br label %75

75:                                               ; preds = %70, %64
  %76 = phi i32 [ %69, %64 ], [ %74, %70 ]
  %77 = phi i64 [ %67, %64 ], [ %73, %70 ]
  %78 = trunc i64 %77 to i32
  %79 = add i32 %78, -83
  %80 = icmp ult i32 %79, 3
  br i1 %80, label %81, label %104

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %83 = bitcast %"struct.SkSL::Token"* %82 to i64*
  %84 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %85 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %86

86:                                               ; preds = %96, %81
  %87 = load i32, i32* %10, align 4
  %88 = icmp eq i32 %87, 87
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %83, align 4
  %91 = load i32, i32* %84, align 4
  store i32 87, i32* %10, align 4
  br label %96

92:                                               ; preds = %86
  %93 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %85) #15
  %94 = extractvalue { i64, i32 } %93, 0
  %95 = extractvalue { i64, i32 } %93, 1
  br label %96

96:                                               ; preds = %92, %89
  %97 = phi i32 [ %91, %89 ], [ %95, %92 ]
  %98 = phi i64 [ %90, %89 ], [ %94, %92 ]
  %99 = trunc i64 %98 to i32
  %100 = add i32 %99, -83
  %101 = icmp ult i32 %100, 3
  br i1 %101, label %86, label %102

102:                                              ; preds = %96
  %103 = trunc i64 %98 to i32
  br label %104

104:                                              ; preds = %102, %75
  %105 = phi i32 [ %78, %75 ], [ %103, %102 ]
  %106 = phi i64 [ %77, %75 ], [ %98, %102 ]
  %107 = phi i32 [ %76, %75 ], [ %97, %102 ]
  %108 = bitcast %"struct.SkSL::Token"* %3 to i64*
  store i64 %106, i64* %108, align 8
  store i32 %107, i32* %61, align 8
  %109 = call i32 @_ZN4SkSL6Parser15unaryExpressionEv(%"class.SkSL::Parser"* %0)
  %110 = icmp sgt i32 %109, -1
  br i1 %110, label %111, label %135

111:                                              ; preds = %104
  %112 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #15
  store i32 25, i32* %4, align 4
  %113 = bitcast %"class.SkSL::Operator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #15
  %114 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %5, i64 0, i32 0
  store i32 %105, i32* %114, align 4
  %115 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %60, i32* nonnull dereferenceable(4) %4, %"class.SkSL::Operator"* nonnull dereferenceable(4) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #15
  %116 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %117 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %116, align 8
  %118 = sext i32 %115 to i64
  %119 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %117, i64 0, i32 0, i32 0, i32 0
  %120 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %119, align 8
  %121 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %120, i64 %118, i32 5, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp sgt i32 %122, -1
  br i1 %123, label %124, label %131

124:                                              ; preds = %111
  %125 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %120, i64 %118, i32 0
  %126 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %125, align 8
  %127 = sext i32 %122 to i64
  %128 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %126, i64 0, i32 0, i32 0
  %129 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %128, align 8
  %130 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %129, i64 %127, i32 6, i32 0
  br label %133

131:                                              ; preds = %111
  %132 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %120, i64 %118, i32 4, i32 0
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32* [ %130, %124 ], [ %132, %131 ]
  store i32 %109, i32* %134, align 4
  store i32 %109, i32* %121, align 8
  br label %135

135:                                              ; preds = %104, %133
  %136 = phi i32 [ %115, %133 ], [ -1, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %58) #15
  br label %139

137:                                              ; preds = %52
  %138 = tail call i32 @_ZN4SkSL6Parser17postfixExpressionEv(%"class.SkSL::Parser"* %0)
  br label %139

139:                                              ; preds = %55, %137, %135
  %140 = phi i32 [ %138, %137 ], [ %136, %135 ], [ -1, %55 ]
  %141 = load i32, i32* %8, align 8
  %142 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %7, align 8
  %143 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %142, i64 0, i32 2
  %144 = load i32, i32* %143, align 8
  %145 = sub nsw i32 %144, %141
  store i32 %145, i32* %143, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret i32 %140
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser17postfixExpressionEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::AutoDepth", align 8
  %3 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #15
  %4 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %2, i64 0, i32 1
  %6 = bitcast %"class.SkSL::AutoDepth"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %4, align 8
  store i32 0, i32* %5, align 8
  %7 = tail call i32 @_ZN4SkSL6Parser4termEv(%"class.SkSL::Parser"* %0)
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %67

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %13 = bitcast %"struct.SkSL::Token"* %12 to i64*
  %14 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %16

16:                                               ; preds = %9, %60
  %17 = phi i32 [ %61, %60 ], [ %7, %9 ]
  %18 = load i32, i32* %11, align 4
  %19 = icmp eq i32 %18, 87
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = load i64, i64* %13, align 4
  br label %49

22:                                               ; preds = %16
  %23 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %14) #15
  %24 = extractvalue { i64, i32 } %23, 0
  %25 = trunc i64 %24 to i32
  %26 = add i32 %25, -83
  %27 = icmp ult i32 %26, 3
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = extractvalue { i64, i32 } %23, 1
  br label %46

30:                                               ; preds = %22, %40
  %31 = load i32, i32* %11, align 4
  %32 = icmp eq i32 %31, 87
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load i64, i64* %13, align 4
  %35 = load i32, i32* %15, align 4
  store i32 87, i32* %11, align 4
  br label %40

36:                                               ; preds = %30
  %37 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %14) #15
  %38 = extractvalue { i64, i32 } %37, 0
  %39 = extractvalue { i64, i32 } %37, 1
  br label %40

40:                                               ; preds = %36, %33
  %41 = phi i32 [ %35, %33 ], [ %39, %36 ]
  %42 = phi i64 [ %34, %33 ], [ %38, %36 ]
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, -83
  %45 = icmp ult i32 %44, 3
  br i1 %45, label %30, label %46

46:                                               ; preds = %40, %28
  %47 = phi i64 [ %24, %28 ], [ %42, %40 ]
  %48 = phi i32 [ %29, %28 ], [ %41, %40 ]
  store i64 %47, i64* %13, align 4
  store i32 %48, i32* %15, align 4
  br label %49

49:                                               ; preds = %20, %46
  %50 = phi i64 [ %21, %20 ], [ %47, %46 ]
  %51 = trunc i64 %50 to i32
  switch i32 %51, label %63 [
    i32 1, label %52
    i32 40, label %58
    i32 42, label %58
    i32 36, label %58
    i32 44, label %58
    i32 45, label %58
    i32 62, label %58
  ]

52:                                               ; preds = %49
  %53 = load i8*, i8** %10, align 8
  %54 = ashr i64 %50, 32
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 46
  br i1 %57, label %58, label %63

58:                                               ; preds = %52, %49, %49, %49, %49, %49, %49
  %59 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %2)
  br i1 %59, label %60, label %63

60:                                               ; preds = %58
  %61 = call i32 @_ZN4SkSL6Parser6suffixENS_7ASTNode2IDE(%"class.SkSL::Parser"* %0, i32 %17)
  %62 = icmp sgt i32 %61, -1
  br i1 %62, label %16, label %63

63:                                               ; preds = %52, %58, %49, %60
  %64 = phi i32 [ %17, %49 ], [ -1, %58 ], [ %17, %52 ], [ -1, %60 ]
  %65 = load i32, i32* %5, align 8
  %66 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %4, align 8
  br label %67

67:                                               ; preds = %63, %1
  %68 = phi %"class.SkSL::Parser"* [ %0, %1 ], [ %66, %63 ]
  %69 = phi i32 [ 0, %1 ], [ %65, %63 ]
  %70 = phi i32 [ -1, %1 ], [ %64, %63 ]
  %71 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %68, i64 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = sub nsw i32 %72, %69
  store i32 %73, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #15
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser4termEv(%"class.SkSL::Parser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"struct.SkSL::Token", align 8
  %4 = alloca %"struct.SkSL::Token", align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.SkSL::AutoDepth", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = bitcast %"struct.SkSL::Token"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 0
  store i32 -1431655766, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 1
  store i32 -1431655766, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 2
  store i32 -1431655766, i32* %18, align 8
  %19 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 87
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %24 = bitcast %"struct.SkSL::Token"* %23 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = trunc i64 %25 to i32
  br label %67

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %31 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %30) #15
  %32 = extractvalue { i64, i32 } %31, 0
  %33 = trunc i64 %32 to i32
  %34 = add i32 %33, -83
  %35 = icmp ult i32 %34, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %29
  %37 = extractvalue { i64, i32 } %31, 1
  br label %60

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %40 = bitcast %"struct.SkSL::Token"* %39 to i64*
  %41 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %42

42:                                               ; preds = %52, %38
  %43 = load i32, i32* %19, align 4
  %44 = icmp eq i32 %43, 87
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = load i64, i64* %40, align 4
  %47 = load i32, i32* %41, align 4
  store i32 87, i32* %19, align 4
  br label %52

48:                                               ; preds = %42
  %49 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %30) #15
  %50 = extractvalue { i64, i32 } %49, 0
  %51 = extractvalue { i64, i32 } %49, 1
  br label %52

52:                                               ; preds = %48, %45
  %53 = phi i32 [ %47, %45 ], [ %51, %48 ]
  %54 = phi i64 [ %46, %45 ], [ %50, %48 ]
  %55 = trunc i64 %54 to i32
  %56 = add i32 %55, -83
  %57 = icmp ult i32 %56, 3
  br i1 %57, label %42, label %58

58:                                               ; preds = %52
  %59 = trunc i64 %54 to i32
  br label %60

60:                                               ; preds = %58, %36
  %61 = phi i32 [ %33, %36 ], [ %59, %58 ]
  %62 = phi i64 [ %32, %36 ], [ %54, %58 ]
  %63 = phi i32 [ %37, %36 ], [ %53, %58 ]
  %64 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %65 = bitcast %"struct.SkSL::Token"* %64 to i64*
  store i64 %62, i64* %65, align 4
  %66 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %63, i32* %66, align 4
  br label %67

67:                                               ; preds = %22, %60
  %68 = phi i32 [ %28, %22 ], [ %61, %60 ]
  %69 = phi i32 [ %27, %22 ], [ %63, %60 ]
  %70 = phi i64 [ %25, %22 ], [ %62, %60 ]
  %71 = bitcast %"struct.SkSL::Token"* %4 to i64*
  store i64 %70, i64* %71, align 8
  store i32 %69, i32* %18, align 8
  %72 = trunc i64 %70 to i32
  %73 = lshr i64 %70, 32
  %74 = trunc i64 %73 to i32
  switch i32 %72, label %243 [
    i32 33, label %75
    i32 2, label %177
    i32 1, label %184
    i32 3, label %191
    i32 4, label %191
    i32 36, label %197
  ]

75:                                               ; preds = %67
  %76 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %76) #15
  %77 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %77, align 8
  store i32 -1, i32* %78, align 4
  store i32 -1, i32* %79, align 8
  %80 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.95, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3) #15
  br i1 %80, label %81, label %176

81:                                               ; preds = %75
  %82 = bitcast %"struct.SkSL::Token"* %3 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = load i32, i32* %79, align 8
  %85 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = ashr i64 %83, 32
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  %89 = sext i32 %84 to i64
  %90 = ptrtoint i8* %88 to i64
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %76) #15
  %91 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %92 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %91, align 8
  %93 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %92, i64 0, i32 0, i32 0, i32 1
  %94 = bitcast %"struct.SkSL::ASTNode"** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"struct.SkSL::ASTFile"* %92 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = sdiv exact i64 %98, 160
  %100 = trunc i64 %99 to i32
  %101 = ptrtoint %"struct.SkSL::ASTFile"* %92 to i64
  %102 = inttoptr i64 %95 to %"struct.SkSL::ASTNode"*
  %103 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %92, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %104 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %103, align 8
  %105 = icmp ugt %"struct.SkSL::ASTNode"* %104, %102
  %106 = ptrtoint %"struct.SkSL::ASTNode"* %104 to i64
  br i1 %105, label %107, label %120

107:                                              ; preds = %81
  %108 = load i32, i32* %17, align 4
  %109 = inttoptr i64 %95 to i64*
  store i64 %101, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 0, i32 1, i32 1
  store i32 1, i32* %111, align 4
  %112 = bitcast %"struct.SkSL::ASTNode::NodeData"* %110 to i64*
  store i64 %90, i64* %112, align 4
  %113 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 0, i32 1, i32 0, i64 8
  %114 = bitcast i8* %113 to i64*
  store i64 %89, i64* %114, align 4
  %115 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 0, i32 2
  store i32 %108, i32* %115, align 4
  %116 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 0, i32 3
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> <i32 16, i32 -1, i32 -1, i32 -1>, <4 x i32>* %117, align 8
  %118 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %102, i64 1
  %119 = ptrtoint %"struct.SkSL::ASTNode"* %118 to i64
  store i64 %119, i64* %94, align 8
  br label %354

120:                                              ; preds = %81
  %121 = add nsw i64 %99, 1
  %122 = icmp ugt i64 %121, 115292150460684697
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  %124 = bitcast %"struct.SkSL::ASTFile"* %92 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #16
  unreachable

125:                                              ; preds = %120
  %126 = bitcast %"struct.SkSL::ASTNode"** %103 to i64*
  %127 = sub i64 %106, %97
  %128 = sdiv exact i64 %127, 160
  %129 = icmp ult i64 %128, 57646075230342348
  br i1 %129, label %130, label %135

130:                                              ; preds = %125
  %131 = shl nsw i64 %128, 1
  %132 = icmp ult i64 %131, %121
  %133 = select i1 %132, i64 %121, i64 %131
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %130, %125
  %136 = phi i64 [ %133, %130 ], [ 115292150460684697, %125 ]
  %137 = mul i64 %136, 160
  %138 = call i8* @_Znwm(i64 %137) #14
  %139 = bitcast i8* %138 to %"struct.SkSL::ASTNode"*
  br label %140

140:                                              ; preds = %135, %130
  %141 = phi i64 [ %136, %135 ], [ 0, %130 ]
  %142 = phi %"struct.SkSL::ASTNode"* [ %139, %135 ], [ null, %130 ]
  %143 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %99
  %144 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %141
  %145 = ptrtoint %"struct.SkSL::ASTNode"* %144 to i64
  %146 = load i32, i32* %17, align 4
  %147 = bitcast %"struct.SkSL::ASTNode"* %143 to i64*
  store i64 %101, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %99, i32 1
  %149 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %99, i32 1, i32 1
  store i32 1, i32* %149, align 4
  %150 = bitcast %"struct.SkSL::ASTNode::NodeData"* %148 to i64*
  store i64 %90, i64* %150, align 4
  %151 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %99, i32 1, i32 0, i64 8
  %152 = bitcast i8* %151 to i64*
  store i64 %89, i64* %152, align 4
  %153 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %99, i32 2
  store i32 %146, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %142, i64 %99, i32 3
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 16, i32 -1, i32 -1, i32 -1>, <4 x i32>* %155, align 8
  %156 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %143, i64 1
  %157 = ptrtoint %"struct.SkSL::ASTNode"* %156 to i64
  %158 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %92, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %158, align 8
  %160 = load i64, i64* %94, align 8
  %161 = ptrtoint %"struct.SkSL::ASTNode"* %159 to i64
  %162 = sub i64 %160, %161
  %163 = sdiv exact i64 %162, -160
  %164 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %143, i64 %163
  %165 = ptrtoint %"struct.SkSL::ASTNode"* %164 to i64
  %166 = icmp sgt i64 %162, 0
  br i1 %166, label %167, label %171

167:                                              ; preds = %140
  %168 = bitcast %"struct.SkSL::ASTNode"* %164 to i8*
  %169 = bitcast %"struct.SkSL::ASTNode"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 %162, i1 false) #15
  %170 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %158, align 8
  br label %171

171:                                              ; preds = %167, %140
  %172 = phi %"struct.SkSL::ASTNode"* [ %159, %140 ], [ %170, %167 ]
  store i64 %165, i64* %96, align 8
  store i64 %157, i64* %94, align 8
  store i64 %145, i64* %126, align 8
  %173 = icmp eq %"struct.SkSL::ASTNode"* %172, null
  br i1 %173, label %354, label %174

174:                                              ; preds = %171
  %175 = bitcast %"struct.SkSL::ASTNode"* %172 to i8*
  call void @_ZdlPv(i8* %175) #14
  br label %354

176:                                              ; preds = %75
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %76) #15
  br label %353

177:                                              ; preds = %67
  %178 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #15
  store i64 -6148914691236517206, i64* %5, align 8
  %179 = call zeroext i1 @_ZN4SkSL6Parser10intLiteralEPl(%"class.SkSL::Parser"* %0, i64* nonnull %5)
  br i1 %179, label %181, label %180

180:                                              ; preds = %177
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #15
  br label %353

181:                                              ; preds = %177
  %182 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %182) #15
  store i32 19, i32* %6, align 4
  %183 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERlEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %17, i32* nonnull dereferenceable(4) %6, i64* nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %182) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #15
  br label %354

184:                                              ; preds = %67
  %185 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #15
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %186 = call zeroext i1 @_ZN4SkSL6Parser12floatLiteralEPf(%"class.SkSL::Parser"* %0, float* nonnull %7)
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #15
  br label %353

188:                                              ; preds = %184
  %189 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #15
  store i32 13, i32* %8, align 4
  %190 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERfEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %17, i32* nonnull dereferenceable(4) %8, float* nonnull dereferenceable(4) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #15
  br label %354

191:                                              ; preds = %67, %67
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #15
  store i8 -86, i8* %9, align 1
  %192 = call zeroext i1 @_ZN4SkSL6Parser11boolLiteralEPb(%"class.SkSL::Parser"* %0, i8* nonnull %9)
  br i1 %192, label %194, label %193

193:                                              ; preds = %191
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #15
  br label %353

194:                                              ; preds = %191
  %195 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %195) #15
  store i32 2, i32* %10, align 4
  %196 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERbEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %17, i32* nonnull dereferenceable(4) %10, i8* nonnull dereferenceable(1) %9)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %195) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #15
  br label %354

197:                                              ; preds = %67
  %198 = icmp eq i32 %68, 87
  br i1 %198, label %200, label %199

199:                                              ; preds = %197
  store i32 87, i32* %19, align 4
  br label %224

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %202 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %201) #15
  %203 = extractvalue { i64, i32 } %202, 0
  %204 = trunc i64 %203 to i32
  %205 = add i32 %204, -83
  %206 = icmp ult i32 %205, 3
  br i1 %206, label %207, label %224

207:                                              ; preds = %200
  %208 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %209 = bitcast %"struct.SkSL::Token"* %208 to i64*
  %210 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %211

211:                                              ; preds = %219, %207
  %212 = load i32, i32* %19, align 4
  %213 = icmp eq i32 %212, 87
  br i1 %213, label %216, label %214

214:                                              ; preds = %211
  %215 = load i64, i64* %209, align 4
  store i32 87, i32* %19, align 4
  br label %219

216:                                              ; preds = %211
  %217 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %210) #15
  %218 = extractvalue { i64, i32 } %217, 0
  br label %219

219:                                              ; preds = %216, %214
  %220 = phi i64 [ %215, %214 ], [ %218, %216 ]
  %221 = trunc i64 %220 to i32
  %222 = add i32 %221, -83
  %223 = icmp ult i32 %222, 3
  br i1 %223, label %211, label %224

224:                                              ; preds = %219, %199, %200
  %225 = bitcast %"class.SkSL::AutoDepth"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %225) #15
  %226 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %11, i64 0, i32 0
  %227 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %11, i64 0, i32 1
  %228 = bitcast %"class.SkSL::AutoDepth"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %226, align 8
  store i32 0, i32* %227, align 8
  %229 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %11)
  br i1 %229, label %230, label %235

230:                                              ; preds = %224
  %231 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %232 = icmp sgt i32 %231, -1
  br i1 %232, label %233, label %235

233:                                              ; preds = %230
  %234 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 37, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br label %235

235:                                              ; preds = %233, %230, %224
  %236 = phi i1 [ false, %224 ], [ false, %233 ], [ true, %230 ]
  %237 = phi i32 [ -1, %224 ], [ %231, %233 ], [ %231, %230 ]
  %238 = load i32, i32* %227, align 8
  %239 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %226, align 8
  %240 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %239, i64 0, i32 2
  %241 = load i32, i32* %240, align 8
  %242 = sub nsw i32 %241, %238
  store i32 %242, i32* %240, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %225) #15
  br i1 %236, label %353, label %354

243:                                              ; preds = %67
  %244 = icmp eq i32 %68, 87
  br i1 %244, label %246, label %245

245:                                              ; preds = %243
  store i32 87, i32* %19, align 4
  br label %251

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %248 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %247) #15
  %249 = extractvalue { i64, i32 } %248, 0
  %250 = trunc i64 %249 to i32
  br label %251

251:                                              ; preds = %246, %245
  %252 = phi i32 [ %250, %246 ], [ %72, %245 ]
  %253 = add i32 %252, -83
  %254 = icmp ult i32 %253, 3
  br i1 %254, label %255, label %272

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %257 = bitcast %"struct.SkSL::Token"* %256 to i64*
  %258 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %259

259:                                              ; preds = %267, %255
  %260 = load i32, i32* %19, align 4
  %261 = icmp eq i32 %260, 87
  br i1 %261, label %264, label %262

262:                                              ; preds = %259
  %263 = load i64, i64* %257, align 4
  store i32 87, i32* %19, align 4
  br label %267

264:                                              ; preds = %259
  %265 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %258) #15
  %266 = extractvalue { i64, i32 } %265, 0
  br label %267

267:                                              ; preds = %264, %262
  %268 = phi i64 [ %263, %262 ], [ %266, %264 ]
  %269 = trunc i64 %268 to i32
  %270 = add i32 %269, -83
  %271 = icmp ult i32 %270, 3
  br i1 %271, label %259, label %272

272:                                              ; preds = %267, %251
  %273 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %273) #15
  %274 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %274) #15
  %275 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  %277 = ashr i64 %70, 32
  %278 = getelementptr inbounds i8, i8* %276, i64 %277
  %279 = sext i32 %69 to i64
  %280 = icmp ugt i32 %69, -17
  br i1 %280, label %281, label %283

281:                                              ; preds = %272
  %282 = bitcast %"class.SkSL::String"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %282) #16
  unreachable

283:                                              ; preds = %272
  %284 = icmp ult i32 %69, 23
  br i1 %284, label %293, label %285

285:                                              ; preds = %283
  %286 = add nuw nsw i64 %279, 16
  %287 = and i64 %286, -16
  %288 = tail call i8* @_Znwm(i64 %287) #14
  %289 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %288, i8** %289, align 8
  %290 = or i64 %287, -9223372036854775808
  %291 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %279, i64* %292, align 8
  br label %298

293:                                              ; preds = %283
  %294 = trunc i32 %69 to i8
  %295 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %296 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %295, i64 0, i32 1, i32 0
  store i8 %294, i8* %296, align 1
  %297 = icmp eq i32 %69, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %293, %285
  %299 = phi i8* [ %288, %285 ], [ %274, %293 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %299, i8* align 1 %278, i64 %279, i1 false) #15
  br label %300

300:                                              ; preds = %293, %298
  %301 = phi i8* [ %274, %293 ], [ %299, %298 ]
  %302 = getelementptr inbounds i8, i8* %301, i64 %279
  store i8 0, i8* %302, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %13, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.89, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %14) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #15
  %303 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303)
  %304 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 5
  %305 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %304, align 8
  %306 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %307 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %306, i64 0, i32 1, i32 0
  %308 = load i8, i8* %307, align 1
  %309 = icmp slt i8 %308, 0
  br i1 %309, label %312, label %310

310:                                              ; preds = %300
  %311 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %303, i8* nonnull align 8 %311, i64 24, i1 false) #15
  br label %318

312:                                              ; preds = %300
  %313 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %314 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load i8*, i8** %314, align 8
  %316 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %317 = load i64, i64* %316, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %313, i8* %315, i64 %317) #15
  br label %318

318:                                              ; preds = %312, %310
  %319 = bitcast %"class.SkSL::ErrorReporter"* %305 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %320 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %320, i64 2
  %322 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %321, align 8
  call void %322(%"class.SkSL::ErrorReporter"* %305, i32 %74, %"class.SkSL::String"* nonnull %2) #15
  %323 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %324 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %323, i64 0, i32 1, i32 0
  %325 = load i8, i8* %324, align 1
  %326 = icmp slt i8 %325, 0
  br i1 %326, label %327, label %330

327:                                              ; preds = %318
  %328 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load i8*, i8** %328, align 8
  call void @_ZdlPv(i8* %329) #14
  br label %330

330:                                              ; preds = %318, %327
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303)
  %331 = load i8, i8* %307, align 1
  %332 = icmp slt i8 %331, 0
  br i1 %332, label %333, label %336

333:                                              ; preds = %330
  %334 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load i8*, i8** %334, align 8
  call void @_ZdlPv(i8* %335) #14
  br label %336

336:                                              ; preds = %330, %333
  %337 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %338 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %337, i64 0, i32 1, i32 0
  %339 = load i8, i8* %338, align 1
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %341, label %344

341:                                              ; preds = %336
  %342 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i8*, i8** %342, align 8
  call void @_ZdlPv(i8* %343) #14
  br label %344

344:                                              ; preds = %336, %341
  %345 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %346 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %345, i64 0, i32 1, i32 0
  %347 = load i8, i8* %346, align 1
  %348 = icmp slt i8 %347, 0
  br i1 %348, label %349, label %352

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load i8*, i8** %350, align 8
  call void @_ZdlPv(i8* %351) #14
  br label %352

352:                                              ; preds = %344, %349
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %274) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %273) #15
  br label %353

353:                                              ; preds = %193, %187, %180, %176, %235, %352
  br label %354

354:                                              ; preds = %107, %171, %174, %194, %188, %181, %235, %353
  %355 = phi i32 [ -1, %353 ], [ %237, %235 ], [ %196, %194 ], [ %190, %188 ], [ %183, %181 ], [ %100, %174 ], [ %100, %171 ], [ %100, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #15
  ret i32 %355
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL6Parser6suffixENS_7ASTNode2IDE(%"class.SkSL::Parser"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.45"*, align 8
  %4 = alloca %"struct.SkSL::Token", align 8
  %5 = alloca %"struct.SkSL::Token", align 8
  %6 = alloca %"class.std::__1::vector.45"*, align 8
  %7 = alloca %"class.std::__1::vector.45"*, align 8
  %8 = alloca %"struct.SkSL::Token", align 8
  %9 = alloca %"class.SkSL::AutoDepth", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.SkSL::Operator", align 4
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = bitcast %"struct.SkSL::Token"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %8, i64 0, i32 0
  store i32 -1431655766, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %8, i64 0, i32 1
  store i32 -1431655766, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %8, i64 0, i32 2
  store i32 -1431655766, i32* %22, align 8
  %23 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 87
  br i1 %25, label %32, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %28 = bitcast %"struct.SkSL::Token"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %31 = load i32, i32* %30, align 4
  store i32 87, i32* %23, align 4
  br label %37

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %34 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %33) #15
  %35 = extractvalue { i64, i32 } %34, 0
  %36 = extractvalue { i64, i32 } %34, 1
  br label %37

37:                                               ; preds = %32, %26
  %38 = phi i32 [ %31, %26 ], [ %36, %32 ]
  %39 = phi i64 [ %29, %26 ], [ %35, %32 ]
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, -83
  %42 = icmp ult i32 %41, 3
  br i1 %42, label %43, label %64

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %45 = bitcast %"struct.SkSL::Token"* %44 to i64*
  %46 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %47 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %48

48:                                               ; preds = %58, %43
  %49 = load i32, i32* %23, align 4
  %50 = icmp eq i32 %49, 87
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = load i64, i64* %45, align 4
  %53 = load i32, i32* %46, align 4
  store i32 87, i32* %23, align 4
  br label %58

54:                                               ; preds = %48
  %55 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %47) #15
  %56 = extractvalue { i64, i32 } %55, 0
  %57 = extractvalue { i64, i32 } %55, 1
  br label %58

58:                                               ; preds = %54, %51
  %59 = phi i32 [ %53, %51 ], [ %57, %54 ]
  %60 = phi i64 [ %52, %51 ], [ %56, %54 ]
  %61 = trunc i64 %60 to i32
  %62 = add i32 %61, -83
  %63 = icmp ult i32 %62, 3
  br i1 %63, label %48, label %64

64:                                               ; preds = %58, %37
  %65 = phi i64 [ %39, %37 ], [ %60, %58 ]
  %66 = phi i32 [ %38, %37 ], [ %59, %58 ]
  %67 = bitcast %"struct.SkSL::Token"* %8 to i64*
  store i64 %65, i64* %67, align 8
  store i32 %66, i32* %22, align 8
  %68 = bitcast %"class.SkSL::AutoDepth"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #15
  %69 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %9, i64 0, i32 0
  %70 = getelementptr inbounds %"class.SkSL::AutoDepth", %"class.SkSL::AutoDepth"* %9, i64 0, i32 1
  %71 = bitcast %"class.SkSL::AutoDepth"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 16, i1 false)
  store %"class.SkSL::Parser"* %0, %"class.SkSL::Parser"** %69, align 8
  store i32 0, i32* %70, align 8
  %72 = call zeroext i1 @_ZN4SkSL9AutoDepth8increaseEv(%"class.SkSL::AutoDepth"* nonnull %9)
  br i1 %72, label %73, label %928

73:                                               ; preds = %64
  %74 = load i32, i32* %20, align 8
  switch i32 %74, label %871 [
    i32 40, label %75
    i32 62, label %213
    i32 42, label %378
    i32 1, label %543
    i32 36, label %702
    i32 44, label %847
    i32 45, label %847
  ]

75:                                               ; preds = %73
  %76 = load i32, i32* %23, align 4
  switch i32 %76, label %158 [
    i32 87, label %83
    i32 41, label %77
  ]

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %79 = bitcast %"struct.SkSL::Token"* %78 to i64*
  %80 = load i64, i64* %79, align 4
  %81 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %82 = load i32, i32* %81, align 4
  store i32 87, i32* %23, align 4
  br label %88

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %85 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %84) #15
  %86 = extractvalue { i64, i32 } %85, 0
  %87 = extractvalue { i64, i32 } %85, 1
  br label %88

88:                                               ; preds = %83, %77
  %89 = phi i32 [ %82, %77 ], [ %87, %83 ]
  %90 = phi i64 [ %80, %77 ], [ %86, %83 ]
  %91 = trunc i64 %90 to i32
  %92 = add i32 %91, -83
  %93 = icmp ult i32 %92, 3
  br i1 %93, label %94, label %115

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %96 = bitcast %"struct.SkSL::Token"* %95 to i64*
  %97 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %98 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %99

99:                                               ; preds = %109, %94
  %100 = load i32, i32* %23, align 4
  %101 = icmp eq i32 %100, 87
  br i1 %101, label %105, label %102

102:                                              ; preds = %99
  %103 = load i64, i64* %96, align 4
  %104 = load i32, i32* %97, align 4
  store i32 87, i32* %23, align 4
  br label %109

105:                                              ; preds = %99
  %106 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %98) #15
  %107 = extractvalue { i64, i32 } %106, 0
  %108 = extractvalue { i64, i32 } %106, 1
  br label %109

109:                                              ; preds = %105, %102
  %110 = phi i32 [ %104, %102 ], [ %108, %105 ]
  %111 = phi i64 [ %103, %102 ], [ %107, %105 ]
  %112 = trunc i64 %111 to i32
  %113 = add i32 %112, -83
  %114 = icmp ult i32 %113, 3
  br i1 %114, label %99, label %115

115:                                              ; preds = %109, %88
  %116 = phi i64 [ %90, %88 ], [ %111, %109 ]
  %117 = phi i32 [ %89, %88 ], [ %110, %109 ]
  %118 = trunc i64 %116 to i32
  %119 = icmp eq i32 %118, 41
  br i1 %119, label %124, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %122 = bitcast %"struct.SkSL::Token"* %121 to i64*
  store i64 %116, i64* %122, align 4
  %123 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %117, i32* %123, align 4
  br label %158

124:                                              ; preds = %115
  %125 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #15
  store i32 17, i32* %10, align 4
  %126 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %127 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %126, align 8
  %128 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %127, i64 0, i32 0
  %129 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %127, i64 0, i32 0, i32 0, i32 1
  %130 = bitcast %"struct.SkSL::ASTNode"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"struct.SkSL::ASTFile"* %127 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = sdiv exact i64 %134, 160
  %136 = trunc i64 %135 to i32
  %137 = bitcast %"class.std::__1::vector.45"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #15
  store %"class.std::__1::vector.45"* %128, %"class.std::__1::vector.45"** %7, align 8
  %138 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %128, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %7, i32* dereferenceable(4) %21, i32* nonnull dereferenceable(4) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #15
  %139 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %126, align 8
  %140 = shl i64 %135, 32
  %141 = ashr exact i64 %140, 32
  %142 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %139, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %142, align 8
  %144 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %143, i64 %141, i32 5, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp sgt i32 %145, -1
  br i1 %146, label %147, label %154

147:                                              ; preds = %124
  %148 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %143, i64 %141, i32 0
  %149 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %148, align 8
  %150 = sext i32 %145 to i64
  %151 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %149, i64 0, i32 0, i32 0
  %152 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %151, align 8
  %153 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %152, i64 %150, i32 6, i32 0
  br label %156

154:                                              ; preds = %124
  %155 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %143, i64 %141, i32 4, i32 0
  br label %156

156:                                              ; preds = %147, %154
  %157 = phi i32* [ %153, %147 ], [ %155, %154 ]
  store i32 %1, i32* %157, align 4
  store i32 %1, i32* %144, align 8
  br label %928

158:                                              ; preds = %75, %120
  %159 = call i32 @_ZN4SkSL6Parser10expressionEv(%"class.SkSL::Parser"* %0)
  %160 = icmp sgt i32 %159, -1
  br i1 %160, label %161, label %928

161:                                              ; preds = %158
  %162 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 41, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.84, i64 0, i64 0), %"struct.SkSL::Token"* null)
  %163 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163) #15
  store i32 17, i32* %11, align 4
  %164 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %165 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %164, align 8
  %166 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %165, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %165, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.SkSL::ASTNode"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.SkSL::ASTFile"* %165 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = sub i64 %169, %171
  %173 = sdiv exact i64 %172, 160
  %174 = trunc i64 %173 to i32
  %175 = bitcast %"class.std::__1::vector.45"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #15
  store %"class.std::__1::vector.45"* %166, %"class.std::__1::vector.45"** %6, align 8
  %176 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %166, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %6, i32* dereferenceable(4) %21, i32* nonnull dereferenceable(4) %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163) #15
  %177 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %164, align 8
  %178 = shl i64 %173, 32
  %179 = ashr exact i64 %178, 32
  %180 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %177, i64 0, i32 0, i32 0, i32 0
  %181 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %180, align 8
  %182 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %181, i64 %179, i32 5, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = icmp sgt i32 %183, -1
  br i1 %184, label %185, label %192

185:                                              ; preds = %161
  %186 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %181, i64 %179, i32 0
  %187 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %186, align 8
  %188 = sext i32 %183 to i64
  %189 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %187, i64 0, i32 0, i32 0
  %190 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %189, align 8
  %191 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %190, i64 %188, i32 6, i32 0
  br label %194

192:                                              ; preds = %161
  %193 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %181, i64 %179, i32 4, i32 0
  br label %194

194:                                              ; preds = %185, %192
  %195 = phi i32* [ %191, %185 ], [ %193, %192 ]
  store i32 %1, i32* %195, align 4
  store i32 %1, i32* %182, align 8
  %196 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %164, align 8
  %197 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %196, i64 0, i32 0, i32 0, i32 0
  %198 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %197, align 8
  %199 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %198, i64 %179, i32 5, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = icmp sgt i32 %200, -1
  br i1 %201, label %202, label %209

202:                                              ; preds = %194
  %203 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %198, i64 %179, i32 0
  %204 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %203, align 8
  %205 = sext i32 %200 to i64
  %206 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %204, i64 0, i32 0, i32 0
  %207 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %206, align 8
  %208 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %207, i64 %205, i32 6, i32 0
  br label %211

209:                                              ; preds = %194
  %210 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %198, i64 %179, i32 4, i32 0
  br label %211

211:                                              ; preds = %202, %209
  %212 = phi i32* [ %208, %202 ], [ %210, %209 ]
  store i32 %159, i32* %212, align 4
  store i32 %159, i32* %199, align 8
  br label %928

213:                                              ; preds = %73
  %214 = load i32, i32* %23, align 4
  %215 = icmp eq i32 %214, 87
  br i1 %215, label %220, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %218 = bitcast %"struct.SkSL::Token"* %217 to i64*
  %219 = load i64, i64* %218, align 4
  br label %255

220:                                              ; preds = %213
  %221 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %222 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %221) #15
  %223 = extractvalue { i64, i32 } %222, 0
  %224 = trunc i64 %223 to i32
  %225 = add i32 %224, -83
  %226 = icmp ult i32 %225, 3
  br i1 %226, label %229, label %227

227:                                              ; preds = %220
  %228 = extractvalue { i64, i32 } %222, 1
  br label %249

229:                                              ; preds = %220
  %230 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %231 = bitcast %"struct.SkSL::Token"* %230 to i64*
  %232 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %233

233:                                              ; preds = %243, %229
  %234 = load i32, i32* %23, align 4
  %235 = icmp eq i32 %234, 87
  br i1 %235, label %239, label %236

236:                                              ; preds = %233
  %237 = load i64, i64* %231, align 4
  %238 = load i32, i32* %232, align 4
  store i32 87, i32* %23, align 4
  br label %243

239:                                              ; preds = %233
  %240 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %221) #15
  %241 = extractvalue { i64, i32 } %240, 0
  %242 = extractvalue { i64, i32 } %240, 1
  br label %243

243:                                              ; preds = %239, %236
  %244 = phi i32 [ %238, %236 ], [ %242, %239 ]
  %245 = phi i64 [ %237, %236 ], [ %241, %239 ]
  %246 = trunc i64 %245 to i32
  %247 = add i32 %246, -83
  %248 = icmp ult i32 %247, 3
  br i1 %248, label %233, label %249

249:                                              ; preds = %243, %227
  %250 = phi i64 [ %223, %227 ], [ %245, %243 ]
  %251 = phi i32 [ %228, %227 ], [ %244, %243 ]
  %252 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %253 = bitcast %"struct.SkSL::Token"* %252 to i64*
  store i64 %250, i64* %253, align 4
  %254 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %251, i32* %254, align 4
  br label %255

255:                                              ; preds = %216, %249
  %256 = phi i64 [ %219, %216 ], [ %250, %249 ]
  %257 = lshr i64 %256, 32
  %258 = trunc i64 %257 to i32
  %259 = bitcast %"struct.SkSL::Token"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %259) #15
  %260 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %5, i64 0, i32 0
  %261 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %5, i64 0, i32 1
  %262 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %5, i64 0, i32 2
  store i32 87, i32* %260, align 8
  store i32 -1, i32* %261, align 4
  store i32 -1, i32* %262, align 8
  %263 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.95, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %5) #15
  br i1 %263, label %264, label %377

264:                                              ; preds = %255
  %265 = bitcast %"struct.SkSL::Token"* %5 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = load i32, i32* %262, align 8
  %268 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = ashr i64 %266, 32
  %271 = getelementptr inbounds i8, i8* %269, i64 %270
  %272 = sext i32 %267 to i64
  %273 = ptrtoint i8* %271 to i64
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %259) #15
  %274 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %275 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %274, align 8
  %276 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %275, i64 0, i32 0, i32 0, i32 1
  %277 = bitcast %"struct.SkSL::ASTNode"** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %"struct.SkSL::ASTFile"* %275 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = sub i64 %278, %280
  %282 = sdiv exact i64 %281, 160
  %283 = trunc i64 %282 to i32
  %284 = ptrtoint %"struct.SkSL::ASTFile"* %275 to i64
  %285 = inttoptr i64 %278 to %"struct.SkSL::ASTNode"*
  %286 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %275, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %287 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %286, align 8
  %288 = icmp ugt %"struct.SkSL::ASTNode"* %287, %285
  %289 = ptrtoint %"struct.SkSL::ASTNode"* %287 to i64
  br i1 %288, label %290, label %302

290:                                              ; preds = %264
  %291 = inttoptr i64 %278 to i64*
  store i64 %284, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %285, i64 0, i32 1
  %293 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %285, i64 0, i32 1, i32 1
  store i32 1, i32* %293, align 4
  %294 = bitcast %"struct.SkSL::ASTNode::NodeData"* %292 to i64*
  store i64 %273, i64* %294, align 4
  %295 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %285, i64 0, i32 1, i32 0, i64 8
  %296 = bitcast i8* %295 to i64*
  store i64 %272, i64* %296, align 4
  %297 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %285, i64 0, i32 2
  store i32 %258, i32* %297, align 4
  %298 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %285, i64 0, i32 3
  %299 = bitcast i32* %298 to <4 x i32>*
  store <4 x i32> <i32 27, i32 -1, i32 -1, i32 -1>, <4 x i32>* %299, align 8
  %300 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %285, i64 1
  %301 = ptrtoint %"struct.SkSL::ASTNode"* %300 to i64
  store i64 %301, i64* %277, align 8
  br label %357

302:                                              ; preds = %264
  %303 = add nsw i64 %282, 1
  %304 = icmp ugt i64 %303, 115292150460684697
  br i1 %304, label %305, label %307

305:                                              ; preds = %302
  %306 = bitcast %"struct.SkSL::ASTFile"* %275 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %306) #16
  unreachable

307:                                              ; preds = %302
  %308 = bitcast %"struct.SkSL::ASTNode"** %286 to i64*
  %309 = sub i64 %289, %280
  %310 = sdiv exact i64 %309, 160
  %311 = icmp ult i64 %310, 57646075230342348
  br i1 %311, label %312, label %317

312:                                              ; preds = %307
  %313 = shl nsw i64 %310, 1
  %314 = icmp ult i64 %313, %303
  %315 = select i1 %314, i64 %303, i64 %313
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %322, label %317

317:                                              ; preds = %312, %307
  %318 = phi i64 [ %315, %312 ], [ 115292150460684697, %307 ]
  %319 = mul i64 %318, 160
  %320 = call i8* @_Znwm(i64 %319) #14
  %321 = bitcast i8* %320 to %"struct.SkSL::ASTNode"*
  br label %322

322:                                              ; preds = %317, %312
  %323 = phi i64 [ %318, %317 ], [ 0, %312 ]
  %324 = phi %"struct.SkSL::ASTNode"* [ %321, %317 ], [ null, %312 ]
  %325 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %324, i64 %282
  %326 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %324, i64 %323
  %327 = ptrtoint %"struct.SkSL::ASTNode"* %326 to i64
  %328 = bitcast %"struct.SkSL::ASTNode"* %325 to i64*
  store i64 %284, i64* %328, align 8
  %329 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %324, i64 %282, i32 1
  %330 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %324, i64 %282, i32 1, i32 1
  store i32 1, i32* %330, align 4
  %331 = bitcast %"struct.SkSL::ASTNode::NodeData"* %329 to i64*
  store i64 %273, i64* %331, align 4
  %332 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %324, i64 %282, i32 1, i32 0, i64 8
  %333 = bitcast i8* %332 to i64*
  store i64 %272, i64* %333, align 4
  %334 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %324, i64 %282, i32 2
  store i32 %258, i32* %334, align 4
  %335 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %324, i64 %282, i32 3
  %336 = bitcast i32* %335 to <4 x i32>*
  store <4 x i32> <i32 27, i32 -1, i32 -1, i32 -1>, <4 x i32>* %336, align 8
  %337 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %325, i64 1
  %338 = ptrtoint %"struct.SkSL::ASTNode"* %337 to i64
  %339 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %275, i64 0, i32 0, i32 0, i32 0
  %340 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %339, align 8
  %341 = load i64, i64* %277, align 8
  %342 = ptrtoint %"struct.SkSL::ASTNode"* %340 to i64
  %343 = sub i64 %341, %342
  %344 = sdiv exact i64 %343, -160
  %345 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %325, i64 %344
  %346 = ptrtoint %"struct.SkSL::ASTNode"* %345 to i64
  %347 = icmp sgt i64 %343, 0
  br i1 %347, label %348, label %352

348:                                              ; preds = %322
  %349 = bitcast %"struct.SkSL::ASTNode"* %345 to i8*
  %350 = bitcast %"struct.SkSL::ASTNode"* %340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %349, i8* align 8 %350, i64 %343, i1 false) #15
  %351 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %339, align 8
  br label %352

352:                                              ; preds = %348, %322
  %353 = phi %"struct.SkSL::ASTNode"* [ %340, %322 ], [ %351, %348 ]
  store i64 %346, i64* %279, align 8
  store i64 %338, i64* %277, align 8
  store i64 %327, i64* %308, align 8
  %354 = icmp eq %"struct.SkSL::ASTNode"* %353, null
  br i1 %354, label %357, label %355

355:                                              ; preds = %352
  %356 = bitcast %"struct.SkSL::ASTNode"* %353 to i8*
  call void @_ZdlPv(i8* %356) #14
  br label %357

357:                                              ; preds = %355, %352, %290
  %358 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %274, align 8
  %359 = shl i64 %282, 32
  %360 = ashr exact i64 %359, 32
  %361 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %358, i64 0, i32 0, i32 0, i32 0
  %362 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %361, align 8
  %363 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %362, i64 %360, i32 5, i32 0
  %364 = load i32, i32* %363, align 4
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %373

366:                                              ; preds = %357
  %367 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %362, i64 %360, i32 0
  %368 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %367, align 8
  %369 = sext i32 %364 to i64
  %370 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %368, i64 0, i32 0, i32 0
  %371 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %370, align 8
  %372 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %371, i64 %369, i32 6, i32 0
  br label %375

373:                                              ; preds = %357
  %374 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %362, i64 %360, i32 4, i32 0
  br label %375

375:                                              ; preds = %366, %373
  %376 = phi i32* [ %372, %366 ], [ %374, %373 ]
  store i32 %1, i32* %376, align 4
  store i32 %1, i32* %363, align 8
  br label %928

377:                                              ; preds = %255
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %259) #15
  br label %928

378:                                              ; preds = %73
  %379 = load i32, i32* %23, align 4
  %380 = icmp eq i32 %379, 87
  br i1 %380, label %385, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %383 = bitcast %"struct.SkSL::Token"* %382 to i64*
  %384 = load i64, i64* %383, align 4
  br label %420

385:                                              ; preds = %378
  %386 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %387 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %386) #15
  %388 = extractvalue { i64, i32 } %387, 0
  %389 = trunc i64 %388 to i32
  %390 = add i32 %389, -83
  %391 = icmp ult i32 %390, 3
  br i1 %391, label %394, label %392

392:                                              ; preds = %385
  %393 = extractvalue { i64, i32 } %387, 1
  br label %414

394:                                              ; preds = %385
  %395 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %396 = bitcast %"struct.SkSL::Token"* %395 to i64*
  %397 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %398

398:                                              ; preds = %408, %394
  %399 = load i32, i32* %23, align 4
  %400 = icmp eq i32 %399, 87
  br i1 %400, label %404, label %401

401:                                              ; preds = %398
  %402 = load i64, i64* %396, align 4
  %403 = load i32, i32* %397, align 4
  store i32 87, i32* %23, align 4
  br label %408

404:                                              ; preds = %398
  %405 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %386) #15
  %406 = extractvalue { i64, i32 } %405, 0
  %407 = extractvalue { i64, i32 } %405, 1
  br label %408

408:                                              ; preds = %404, %401
  %409 = phi i32 [ %403, %401 ], [ %407, %404 ]
  %410 = phi i64 [ %402, %401 ], [ %406, %404 ]
  %411 = trunc i64 %410 to i32
  %412 = add i32 %411, -83
  %413 = icmp ult i32 %412, 3
  br i1 %413, label %398, label %414

414:                                              ; preds = %408, %392
  %415 = phi i64 [ %388, %392 ], [ %410, %408 ]
  %416 = phi i32 [ %393, %392 ], [ %409, %408 ]
  %417 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %418 = bitcast %"struct.SkSL::Token"* %417 to i64*
  store i64 %415, i64* %418, align 4
  %419 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %416, i32* %419, align 4
  br label %420

420:                                              ; preds = %381, %414
  %421 = phi i64 [ %384, %381 ], [ %415, %414 ]
  %422 = lshr i64 %421, 32
  %423 = trunc i64 %422 to i32
  %424 = bitcast %"struct.SkSL::Token"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %424) #15
  %425 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 0
  %426 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 1
  %427 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %4, i64 0, i32 2
  store i32 87, i32* %425, align 8
  store i32 -1, i32* %426, align 4
  store i32 -1, i32* %427, align 8
  %428 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.95, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %4) #15
  br i1 %428, label %430, label %429

429:                                              ; preds = %420
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %424) #15
  br label %543

430:                                              ; preds = %420
  %431 = bitcast %"struct.SkSL::Token"* %4 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = load i32, i32* %427, align 8
  %434 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  %436 = ashr i64 %432, 32
  %437 = getelementptr inbounds i8, i8* %435, i64 %436
  %438 = sext i32 %433 to i64
  %439 = ptrtoint i8* %437 to i64
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %424) #15
  %440 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %441 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %440, align 8
  %442 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %441, i64 0, i32 0, i32 0, i32 1
  %443 = bitcast %"struct.SkSL::ASTNode"** %442 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = bitcast %"struct.SkSL::ASTFile"* %441 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = sub i64 %444, %446
  %448 = sdiv exact i64 %447, 160
  %449 = trunc i64 %448 to i32
  %450 = ptrtoint %"struct.SkSL::ASTFile"* %441 to i64
  %451 = inttoptr i64 %444 to %"struct.SkSL::ASTNode"*
  %452 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %441, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %453 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %452, align 8
  %454 = icmp ugt %"struct.SkSL::ASTNode"* %453, %451
  %455 = ptrtoint %"struct.SkSL::ASTNode"* %453 to i64
  br i1 %454, label %456, label %468

456:                                              ; preds = %430
  %457 = inttoptr i64 %444 to i64*
  store i64 %450, i64* %457, align 8
  %458 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %451, i64 0, i32 1
  %459 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %451, i64 0, i32 1, i32 1
  store i32 1, i32* %459, align 4
  %460 = bitcast %"struct.SkSL::ASTNode::NodeData"* %458 to i64*
  store i64 %439, i64* %460, align 4
  %461 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %451, i64 0, i32 1, i32 0, i64 8
  %462 = bitcast i8* %461 to i64*
  store i64 %438, i64* %462, align 4
  %463 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %451, i64 0, i32 2
  store i32 %423, i32* %463, align 4
  %464 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %451, i64 0, i32 3
  %465 = bitcast i32* %464 to <4 x i32>*
  store <4 x i32> <i32 11, i32 -1, i32 -1, i32 -1>, <4 x i32>* %465, align 8
  %466 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %451, i64 1
  %467 = ptrtoint %"struct.SkSL::ASTNode"* %466 to i64
  store i64 %467, i64* %443, align 8
  br label %523

468:                                              ; preds = %430
  %469 = add nsw i64 %448, 1
  %470 = icmp ugt i64 %469, 115292150460684697
  br i1 %470, label %471, label %473

471:                                              ; preds = %468
  %472 = bitcast %"struct.SkSL::ASTFile"* %441 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %472) #16
  unreachable

473:                                              ; preds = %468
  %474 = bitcast %"struct.SkSL::ASTNode"** %452 to i64*
  %475 = sub i64 %455, %446
  %476 = sdiv exact i64 %475, 160
  %477 = icmp ult i64 %476, 57646075230342348
  br i1 %477, label %478, label %483

478:                                              ; preds = %473
  %479 = shl nsw i64 %476, 1
  %480 = icmp ult i64 %479, %469
  %481 = select i1 %480, i64 %469, i64 %479
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %488, label %483

483:                                              ; preds = %478, %473
  %484 = phi i64 [ %481, %478 ], [ 115292150460684697, %473 ]
  %485 = mul i64 %484, 160
  %486 = call i8* @_Znwm(i64 %485) #14
  %487 = bitcast i8* %486 to %"struct.SkSL::ASTNode"*
  br label %488

488:                                              ; preds = %483, %478
  %489 = phi i64 [ %484, %483 ], [ 0, %478 ]
  %490 = phi %"struct.SkSL::ASTNode"* [ %487, %483 ], [ null, %478 ]
  %491 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %490, i64 %448
  %492 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %490, i64 %489
  %493 = ptrtoint %"struct.SkSL::ASTNode"* %492 to i64
  %494 = bitcast %"struct.SkSL::ASTNode"* %491 to i64*
  store i64 %450, i64* %494, align 8
  %495 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %490, i64 %448, i32 1
  %496 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %490, i64 %448, i32 1, i32 1
  store i32 1, i32* %496, align 4
  %497 = bitcast %"struct.SkSL::ASTNode::NodeData"* %495 to i64*
  store i64 %439, i64* %497, align 4
  %498 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %490, i64 %448, i32 1, i32 0, i64 8
  %499 = bitcast i8* %498 to i64*
  store i64 %438, i64* %499, align 4
  %500 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %490, i64 %448, i32 2
  store i32 %423, i32* %500, align 4
  %501 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %490, i64 %448, i32 3
  %502 = bitcast i32* %501 to <4 x i32>*
  store <4 x i32> <i32 11, i32 -1, i32 -1, i32 -1>, <4 x i32>* %502, align 8
  %503 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %491, i64 1
  %504 = ptrtoint %"struct.SkSL::ASTNode"* %503 to i64
  %505 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %441, i64 0, i32 0, i32 0, i32 0
  %506 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %505, align 8
  %507 = load i64, i64* %443, align 8
  %508 = ptrtoint %"struct.SkSL::ASTNode"* %506 to i64
  %509 = sub i64 %507, %508
  %510 = sdiv exact i64 %509, -160
  %511 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %491, i64 %510
  %512 = ptrtoint %"struct.SkSL::ASTNode"* %511 to i64
  %513 = icmp sgt i64 %509, 0
  br i1 %513, label %514, label %518

514:                                              ; preds = %488
  %515 = bitcast %"struct.SkSL::ASTNode"* %511 to i8*
  %516 = bitcast %"struct.SkSL::ASTNode"* %506 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %515, i8* align 8 %516, i64 %509, i1 false) #15
  %517 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %505, align 8
  br label %518

518:                                              ; preds = %514, %488
  %519 = phi %"struct.SkSL::ASTNode"* [ %506, %488 ], [ %517, %514 ]
  store i64 %512, i64* %445, align 8
  store i64 %504, i64* %443, align 8
  store i64 %493, i64* %474, align 8
  %520 = icmp eq %"struct.SkSL::ASTNode"* %519, null
  br i1 %520, label %523, label %521

521:                                              ; preds = %518
  %522 = bitcast %"struct.SkSL::ASTNode"* %519 to i8*
  call void @_ZdlPv(i8* %522) #14
  br label %523

523:                                              ; preds = %521, %518, %456
  %524 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %440, align 8
  %525 = shl i64 %448, 32
  %526 = ashr exact i64 %525, 32
  %527 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %524, i64 0, i32 0, i32 0, i32 0
  %528 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %527, align 8
  %529 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %528, i64 %526, i32 5, i32 0
  %530 = load i32, i32* %529, align 4
  %531 = icmp sgt i32 %530, -1
  br i1 %531, label %532, label %539

532:                                              ; preds = %523
  %533 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %528, i64 %526, i32 0
  %534 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %533, align 8
  %535 = sext i32 %530 to i64
  %536 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %534, i64 0, i32 0, i32 0
  %537 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %536, align 8
  %538 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %537, i64 %535, i32 6, i32 0
  br label %541

539:                                              ; preds = %523
  %540 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %528, i64 %526, i32 4, i32 0
  br label %541

541:                                              ; preds = %539, %532
  %542 = phi i32* [ %540, %539 ], [ %538, %532 ]
  store i32 %1, i32* %542, align 4
  store i32 %1, i32* %529, align 8
  br label %928

543:                                              ; preds = %429, %73
  %544 = load i64, i64* %67, align 8
  %545 = load i32, i32* %22, align 8
  %546 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %547 = load i8*, i8** %546, align 8
  %548 = ashr i64 %544, 32
  %549 = getelementptr inbounds i8, i8* %547, i64 %548
  %550 = sext i32 %545 to i64
  %551 = getelementptr inbounds i8, i8* %549, i64 1
  %552 = ptrtoint i8* %551 to i64
  %553 = add nsw i64 %550, -1
  %554 = icmp eq i64 %553, 0
  br i1 %554, label %569, label %557

555:                                              ; preds = %557
  %556 = icmp eq i64 %563, %553
  br i1 %556, label %569, label %557

557:                                              ; preds = %543, %555
  %558 = phi i64 [ %563, %555 ], [ 0, %543 ]
  %559 = getelementptr inbounds i8, i8* %551, i64 %558
  %560 = load i8, i8* %559, align 1
  %561 = and i8 %560, -2
  %562 = icmp eq i8 %561, 48
  %563 = add nuw i64 %558, 1
  br i1 %562, label %555, label %564

564:                                              ; preds = %557
  %565 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %566 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %565, i64 0, i32 1, i32 0
  store i8 15, i8* %566, align 1
  %567 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %567, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i64 0, i64 0), i64 15, i1 false) #15
  %568 = getelementptr inbounds i8, i8* %567, i64 15
  store i8 0, i8* %568, align 1
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %544, i32 undef, %"class.SkSL::String"* nonnull %12)
  br label %928

569:                                              ; preds = %555, %543
  %570 = load i32, i32* %23, align 4
  %571 = icmp eq i32 %570, 87
  br i1 %571, label %578, label %572

572:                                              ; preds = %569
  %573 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %574 = bitcast %"struct.SkSL::Token"* %573 to i64*
  %575 = load i64, i64* %574, align 4
  %576 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %577 = load i32, i32* %576, align 4
  store i32 87, i32* %23, align 4
  br label %583

578:                                              ; preds = %569
  %579 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %580 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %579) #15
  %581 = extractvalue { i64, i32 } %580, 0
  %582 = extractvalue { i64, i32 } %580, 1
  br label %583

583:                                              ; preds = %572, %578
  %584 = phi i32 [ %577, %572 ], [ %582, %578 ]
  %585 = phi i64 [ %575, %572 ], [ %581, %578 ]
  %586 = trunc i64 %585 to i32
  %587 = icmp eq i32 %586, 33
  br i1 %587, label %588, label %591

588:                                              ; preds = %583
  %589 = sext i32 %584 to i64
  %590 = add nsw i64 %553, %589
  br label %595

591:                                              ; preds = %583
  %592 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %593 = bitcast %"struct.SkSL::Token"* %592 to i64*
  store i64 %585, i64* %593, align 4
  %594 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %584, i32* %594, align 4
  br label %595

595:                                              ; preds = %591, %588
  %596 = phi i64 [ %590, %588 ], [ %553, %591 ]
  %597 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %598 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %597, align 8
  %599 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %598, i64 0, i32 0, i32 0, i32 1
  %600 = bitcast %"struct.SkSL::ASTNode"** %599 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = bitcast %"struct.SkSL::ASTFile"* %598 to i64*
  %603 = load i64, i64* %602, align 8
  %604 = sub i64 %601, %603
  %605 = sdiv exact i64 %604, 160
  %606 = trunc i64 %605 to i32
  %607 = ptrtoint %"struct.SkSL::ASTFile"* %598 to i64
  %608 = inttoptr i64 %601 to %"struct.SkSL::ASTNode"*
  %609 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %598, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %610 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %609, align 8
  %611 = icmp ugt %"struct.SkSL::ASTNode"* %610, %608
  %612 = ptrtoint %"struct.SkSL::ASTNode"* %610 to i64
  br i1 %611, label %613, label %626

613:                                              ; preds = %595
  %614 = load i32, i32* %21, align 4
  %615 = inttoptr i64 %601 to i64*
  store i64 %607, i64* %615, align 8
  %616 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %608, i64 0, i32 1
  %617 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %608, i64 0, i32 1, i32 1
  store i32 1, i32* %617, align 4
  %618 = bitcast %"struct.SkSL::ASTNode::NodeData"* %616 to i64*
  store i64 %552, i64* %618, align 4
  %619 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %608, i64 0, i32 1, i32 0, i64 8
  %620 = bitcast i8* %619 to i64*
  store i64 %596, i64* %620, align 4
  %621 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %608, i64 0, i32 2
  store i32 %614, i32* %621, align 4
  %622 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %608, i64 0, i32 3
  %623 = bitcast i32* %622 to <4 x i32>*
  store <4 x i32> <i32 11, i32 -1, i32 -1, i32 -1>, <4 x i32>* %623, align 8
  %624 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %608, i64 1
  %625 = ptrtoint %"struct.SkSL::ASTNode"* %624 to i64
  store i64 %625, i64* %600, align 8
  br label %682

626:                                              ; preds = %595
  %627 = add nsw i64 %605, 1
  %628 = icmp ugt i64 %627, 115292150460684697
  br i1 %628, label %629, label %631

629:                                              ; preds = %626
  %630 = bitcast %"struct.SkSL::ASTFile"* %598 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %630) #16
  unreachable

631:                                              ; preds = %626
  %632 = bitcast %"struct.SkSL::ASTNode"** %609 to i64*
  %633 = sub i64 %612, %603
  %634 = sdiv exact i64 %633, 160
  %635 = icmp ult i64 %634, 57646075230342348
  br i1 %635, label %636, label %641

636:                                              ; preds = %631
  %637 = shl nsw i64 %634, 1
  %638 = icmp ult i64 %637, %627
  %639 = select i1 %638, i64 %627, i64 %637
  %640 = icmp eq i64 %639, 0
  br i1 %640, label %646, label %641

641:                                              ; preds = %636, %631
  %642 = phi i64 [ %639, %636 ], [ 115292150460684697, %631 ]
  %643 = mul i64 %642, 160
  %644 = call i8* @_Znwm(i64 %643) #14
  %645 = bitcast i8* %644 to %"struct.SkSL::ASTNode"*
  br label %646

646:                                              ; preds = %641, %636
  %647 = phi i64 [ %642, %641 ], [ 0, %636 ]
  %648 = phi %"struct.SkSL::ASTNode"* [ %645, %641 ], [ null, %636 ]
  %649 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %648, i64 %605
  %650 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %648, i64 %647
  %651 = ptrtoint %"struct.SkSL::ASTNode"* %650 to i64
  %652 = load i32, i32* %21, align 4
  %653 = bitcast %"struct.SkSL::ASTNode"* %649 to i64*
  store i64 %607, i64* %653, align 8
  %654 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %648, i64 %605, i32 1
  %655 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %648, i64 %605, i32 1, i32 1
  store i32 1, i32* %655, align 4
  %656 = bitcast %"struct.SkSL::ASTNode::NodeData"* %654 to i64*
  store i64 %552, i64* %656, align 4
  %657 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %648, i64 %605, i32 1, i32 0, i64 8
  %658 = bitcast i8* %657 to i64*
  store i64 %596, i64* %658, align 4
  %659 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %648, i64 %605, i32 2
  store i32 %652, i32* %659, align 4
  %660 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %648, i64 %605, i32 3
  %661 = bitcast i32* %660 to <4 x i32>*
  store <4 x i32> <i32 11, i32 -1, i32 -1, i32 -1>, <4 x i32>* %661, align 8
  %662 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %649, i64 1
  %663 = ptrtoint %"struct.SkSL::ASTNode"* %662 to i64
  %664 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %598, i64 0, i32 0, i32 0, i32 0
  %665 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %664, align 8
  %666 = load i64, i64* %600, align 8
  %667 = ptrtoint %"struct.SkSL::ASTNode"* %665 to i64
  %668 = sub i64 %666, %667
  %669 = sdiv exact i64 %668, -160
  %670 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %649, i64 %669
  %671 = ptrtoint %"struct.SkSL::ASTNode"* %670 to i64
  %672 = icmp sgt i64 %668, 0
  br i1 %672, label %673, label %677

673:                                              ; preds = %646
  %674 = bitcast %"struct.SkSL::ASTNode"* %670 to i8*
  %675 = bitcast %"struct.SkSL::ASTNode"* %665 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %674, i8* align 8 %675, i64 %668, i1 false) #15
  %676 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %664, align 8
  br label %677

677:                                              ; preds = %673, %646
  %678 = phi %"struct.SkSL::ASTNode"* [ %665, %646 ], [ %676, %673 ]
  store i64 %671, i64* %602, align 8
  store i64 %663, i64* %600, align 8
  store i64 %651, i64* %632, align 8
  %679 = icmp eq %"struct.SkSL::ASTNode"* %678, null
  br i1 %679, label %682, label %680

680:                                              ; preds = %677
  %681 = bitcast %"struct.SkSL::ASTNode"* %678 to i8*
  call void @_ZdlPv(i8* %681) #14
  br label %682

682:                                              ; preds = %680, %677, %613
  %683 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %597, align 8
  %684 = shl i64 %605, 32
  %685 = ashr exact i64 %684, 32
  %686 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %683, i64 0, i32 0, i32 0, i32 0
  %687 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %686, align 8
  %688 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %687, i64 %685, i32 5, i32 0
  %689 = load i32, i32* %688, align 4
  %690 = icmp sgt i32 %689, -1
  br i1 %690, label %691, label %698

691:                                              ; preds = %682
  %692 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %687, i64 %685, i32 0
  %693 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %692, align 8
  %694 = sext i32 %689 to i64
  %695 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %693, i64 0, i32 0, i32 0
  %696 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %695, align 8
  %697 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %696, i64 %694, i32 6, i32 0
  br label %700

698:                                              ; preds = %682
  %699 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %687, i64 %685, i32 4, i32 0
  br label %700

700:                                              ; preds = %691, %698
  %701 = phi i32* [ %697, %691 ], [ %699, %698 ]
  store i32 %1, i32* %701, align 4
  store i32 %1, i32* %688, align 8
  br label %928

702:                                              ; preds = %73
  %703 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %703) #15
  store i32 4, i32* %13, align 4
  %704 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %705 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %704, align 8
  %706 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %705, i64 0, i32 0
  %707 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %705, i64 0, i32 0, i32 0, i32 1
  %708 = bitcast %"struct.SkSL::ASTNode"** %707 to i64*
  %709 = load i64, i64* %708, align 8
  %710 = bitcast %"struct.SkSL::ASTFile"* %705 to i64*
  %711 = load i64, i64* %710, align 8
  %712 = sub i64 %709, %711
  %713 = sdiv exact i64 %712, 160
  %714 = trunc i64 %713 to i32
  %715 = bitcast %"class.std::__1::vector.45"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %715) #15
  store %"class.std::__1::vector.45"* %706, %"class.std::__1::vector.45"** %3, align 8
  %716 = call dereferenceable(160) %"struct.SkSL::ASTNode"* @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE12emplace_backIJPS5_RiNS2_4KindEEEERS2_DpOT_(%"class.std::__1::vector.45"* %706, %"class.std::__1::vector.45"** nonnull dereferenceable(8) %3, i32* dereferenceable(4) %21, i32* nonnull dereferenceable(4) %13) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %715) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %703) #15
  %717 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %704, align 8
  %718 = shl i64 %713, 32
  %719 = ashr exact i64 %718, 32
  %720 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %717, i64 0, i32 0, i32 0, i32 0
  %721 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %720, align 8
  %722 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %721, i64 %719, i32 5, i32 0
  %723 = load i32, i32* %722, align 4
  %724 = icmp sgt i32 %723, -1
  br i1 %724, label %725, label %732

725:                                              ; preds = %702
  %726 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %721, i64 %719, i32 0
  %727 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %726, align 8
  %728 = sext i32 %723 to i64
  %729 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %727, i64 0, i32 0, i32 0
  %730 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %729, align 8
  %731 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %730, i64 %728, i32 6, i32 0
  br label %734

732:                                              ; preds = %702
  %733 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %721, i64 %719, i32 4, i32 0
  br label %734

734:                                              ; preds = %725, %732
  %735 = phi i32* [ %731, %725 ], [ %733, %732 ]
  store i32 %1, i32* %735, align 4
  store i32 %1, i32* %722, align 8
  %736 = load i32, i32* %23, align 4
  %737 = icmp eq i32 %736, 87
  br i1 %737, label %742, label %738

738:                                              ; preds = %734
  %739 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %740 = bitcast %"struct.SkSL::Token"* %739 to i64*
  %741 = load i64, i64* %740, align 4
  br label %777

742:                                              ; preds = %734
  %743 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %744 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %743) #15
  %745 = extractvalue { i64, i32 } %744, 0
  %746 = trunc i64 %745 to i32
  %747 = add i32 %746, -83
  %748 = icmp ult i32 %747, 3
  br i1 %748, label %751, label %749

749:                                              ; preds = %742
  %750 = extractvalue { i64, i32 } %744, 1
  br label %771

751:                                              ; preds = %742
  %752 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %753 = bitcast %"struct.SkSL::Token"* %752 to i64*
  %754 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  br label %755

755:                                              ; preds = %765, %751
  %756 = load i32, i32* %23, align 4
  %757 = icmp eq i32 %756, 87
  br i1 %757, label %761, label %758

758:                                              ; preds = %755
  %759 = load i64, i64* %753, align 4
  %760 = load i32, i32* %754, align 4
  store i32 87, i32* %23, align 4
  br label %765

761:                                              ; preds = %755
  %762 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %743) #15
  %763 = extractvalue { i64, i32 } %762, 0
  %764 = extractvalue { i64, i32 } %762, 1
  br label %765

765:                                              ; preds = %761, %758
  %766 = phi i32 [ %760, %758 ], [ %764, %761 ]
  %767 = phi i64 [ %759, %758 ], [ %763, %761 ]
  %768 = trunc i64 %767 to i32
  %769 = add i32 %768, -83
  %770 = icmp ult i32 %769, 3
  br i1 %770, label %755, label %771

771:                                              ; preds = %765, %749
  %772 = phi i64 [ %745, %749 ], [ %767, %765 ]
  %773 = phi i32 [ %750, %749 ], [ %766, %765 ]
  %774 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %775 = bitcast %"struct.SkSL::Token"* %774 to i64*
  store i64 %772, i64* %775, align 4
  %776 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  store i32 %773, i32* %776, align 4
  br label %777

777:                                              ; preds = %738, %771
  %778 = phi i64 [ %741, %738 ], [ %772, %771 ]
  %779 = trunc i64 %778 to i32
  %780 = icmp eq i32 %779, 37
  br i1 %780, label %845, label %781

781:                                              ; preds = %777
  %782 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %783 = bitcast %"struct.SkSL::Token"* %782 to i64*
  %784 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %785 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %786

786:                                              ; preds = %781, %839
  %787 = call i32 @_ZN4SkSL6Parser20assignmentExpressionEv(%"class.SkSL::Parser"* %0)
  %788 = icmp sgt i32 %787, -1
  br i1 %788, label %789, label %928

789:                                              ; preds = %786
  %790 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %704, align 8
  %791 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %790, i64 0, i32 0, i32 0, i32 0
  %792 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %791, align 8
  %793 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %792, i64 %719, i32 5, i32 0
  %794 = load i32, i32* %793, align 4
  %795 = icmp sgt i32 %794, -1
  br i1 %795, label %796, label %803

796:                                              ; preds = %789
  %797 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %792, i64 %719, i32 0
  %798 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %797, align 8
  %799 = sext i32 %794 to i64
  %800 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %798, i64 0, i32 0, i32 0
  %801 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %800, align 8
  %802 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %801, i64 %799, i32 6, i32 0
  br label %805

803:                                              ; preds = %789
  %804 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %792, i64 %719, i32 4, i32 0
  br label %805

805:                                              ; preds = %796, %803
  %806 = phi i32* [ %802, %796 ], [ %804, %803 ]
  store i32 %787, i32* %806, align 4
  store i32 %787, i32* %793, align 8
  %807 = load i32, i32* %23, align 4
  switch i32 %807, label %845 [
    i32 87, label %811
    i32 43, label %808
  ]

808:                                              ; preds = %805
  %809 = load i64, i64* %783, align 4
  %810 = load i32, i32* %784, align 4
  store i32 87, i32* %23, align 4
  br label %815

811:                                              ; preds = %805
  %812 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %785) #15
  %813 = extractvalue { i64, i32 } %812, 0
  %814 = extractvalue { i64, i32 } %812, 1
  br label %815

815:                                              ; preds = %811, %808
  %816 = phi i32 [ %810, %808 ], [ %814, %811 ]
  %817 = phi i64 [ %809, %808 ], [ %813, %811 ]
  %818 = trunc i64 %817 to i32
  %819 = add i32 %818, -83
  %820 = icmp ult i32 %819, 3
  br i1 %820, label %821, label %839

821:                                              ; preds = %815, %831
  %822 = load i32, i32* %23, align 4
  %823 = icmp eq i32 %822, 87
  br i1 %823, label %827, label %824

824:                                              ; preds = %821
  %825 = load i64, i64* %783, align 4
  %826 = load i32, i32* %784, align 4
  store i32 87, i32* %23, align 4
  br label %831

827:                                              ; preds = %821
  %828 = call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %785) #15
  %829 = extractvalue { i64, i32 } %828, 0
  %830 = extractvalue { i64, i32 } %828, 1
  br label %831

831:                                              ; preds = %827, %824
  %832 = phi i32 [ %826, %824 ], [ %830, %827 ]
  %833 = phi i64 [ %825, %824 ], [ %829, %827 ]
  %834 = trunc i64 %833 to i32
  %835 = add i32 %834, -83
  %836 = icmp ult i32 %835, 3
  br i1 %836, label %821, label %837

837:                                              ; preds = %831
  %838 = trunc i64 %833 to i32
  br label %839

839:                                              ; preds = %837, %815
  %840 = phi i32 [ %818, %815 ], [ %838, %837 ]
  %841 = phi i64 [ %817, %815 ], [ %833, %837 ]
  %842 = phi i32 [ %816, %815 ], [ %832, %837 ]
  %843 = icmp eq i32 %840, 43
  br i1 %843, label %786, label %844

844:                                              ; preds = %839
  store i64 %841, i64* %783, align 4
  store i32 %842, i32* %784, align 4
  br label %845

845:                                              ; preds = %805, %844, %777
  %846 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 37, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.86, i64 0, i64 0), %"struct.SkSL::Token"* null)
  br label %928

847:                                              ; preds = %73, %73
  %848 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %848) #15
  store i32 24, i32* %14, align 4
  %849 = bitcast %"class.SkSL::Operator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %849) #15
  %850 = getelementptr inbounds %"class.SkSL::Operator", %"class.SkSL::Operator"* %15, i64 0, i32 0
  store i32 %74, i32* %850, align 4
  %851 = call i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindENS_8OperatorEEEENS3_2IDEDpOT_(%"class.SkSL::Parser"* %0, i32* dereferenceable(4) %21, i32* nonnull dereferenceable(4) %14, %"class.SkSL::Operator"* nonnull dereferenceable(4) %15)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %849) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %848) #15
  %852 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %853 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %852, align 8
  %854 = sext i32 %851 to i64
  %855 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %853, i64 0, i32 0, i32 0, i32 0
  %856 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %855, align 8
  %857 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %856, i64 %854, i32 5, i32 0
  %858 = load i32, i32* %857, align 4
  %859 = icmp sgt i32 %858, -1
  br i1 %859, label %860, label %867

860:                                              ; preds = %847
  %861 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %856, i64 %854, i32 0
  %862 = load %"class.std::__1::vector.45"*, %"class.std::__1::vector.45"** %861, align 8
  %863 = sext i32 %858 to i64
  %864 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %862, i64 0, i32 0, i32 0
  %865 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %864, align 8
  %866 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %865, i64 %863, i32 6, i32 0
  br label %869

867:                                              ; preds = %847
  %868 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %856, i64 %854, i32 4, i32 0
  br label %869

869:                                              ; preds = %860, %867
  %870 = phi i32* [ %866, %860 ], [ %868, %867 ]
  store i32 %1, i32* %870, align 4
  store i32 %1, i32* %857, align 8
  br label %928

871:                                              ; preds = %73
  %872 = load i64, i64* %67, align 8
  %873 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %873) #15
  %874 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %874) #15
  %875 = load i32, i32* %22, align 8
  %876 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %877 = load i8*, i8** %876, align 8
  %878 = ashr i64 %872, 32
  %879 = getelementptr inbounds i8, i8* %877, i64 %878
  %880 = sext i32 %875 to i64
  %881 = icmp ugt i32 %875, -17
  br i1 %881, label %882, label %884

882:                                              ; preds = %871
  %883 = bitcast %"class.SkSL::String"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %883) #16
  unreachable

884:                                              ; preds = %871
  %885 = icmp ult i32 %875, 23
  br i1 %885, label %894, label %886

886:                                              ; preds = %884
  %887 = add nuw nsw i64 %880, 16
  %888 = and i64 %887, -16
  %889 = call i8* @_Znwm(i64 %888) #14
  %890 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %889, i8** %890, align 8
  %891 = or i64 %888, -9223372036854775808
  %892 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %891, i64* %892, align 8
  %893 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %880, i64* %893, align 8
  br label %899

894:                                              ; preds = %884
  %895 = trunc i32 %875 to i8
  %896 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %897 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %896, i64 0, i32 1, i32 0
  store i8 %895, i8* %897, align 1
  %898 = icmp eq i32 %875, 0
  br i1 %898, label %901, label %899

899:                                              ; preds = %894, %886
  %900 = phi i8* [ %889, %886 ], [ %874, %894 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %900, i8* align 1 %879, i64 %880, i1 false) #15
  br label %901

901:                                              ; preds = %894, %899
  %902 = phi i8* [ %874, %894 ], [ %900, %899 ]
  %903 = getelementptr inbounds i8, i8* %902, i64 %880
  store i8 0, i8* %903, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %17, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.87, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %18) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %872, i32 undef, %"class.SkSL::String"* nonnull %16)
  %904 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %905 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %904, i64 0, i32 1, i32 0
  %906 = load i8, i8* %905, align 1
  %907 = icmp slt i8 %906, 0
  br i1 %907, label %908, label %911

908:                                              ; preds = %901
  %909 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %910 = load i8*, i8** %909, align 8
  call void @_ZdlPv(i8* %910) #14
  br label %911

911:                                              ; preds = %901, %908
  %912 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %913 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %912, i64 0, i32 1, i32 0
  %914 = load i8, i8* %913, align 1
  %915 = icmp slt i8 %914, 0
  br i1 %915, label %916, label %919

916:                                              ; preds = %911
  %917 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %918 = load i8*, i8** %917, align 8
  call void @_ZdlPv(i8* %918) #14
  br label %919

919:                                              ; preds = %911, %916
  %920 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %921 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %920, i64 0, i32 1, i32 0
  %922 = load i8, i8* %921, align 1
  %923 = icmp slt i8 %922, 0
  br i1 %923, label %924, label %927

924:                                              ; preds = %919
  %925 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %926 = load i8*, i8** %925, align 8
  call void @_ZdlPv(i8* %926) #14
  br label %927

927:                                              ; preds = %919, %924
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %874) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %873) #15
  br label %928

928:                                              ; preds = %786, %564, %700, %541, %375, %377, %211, %158, %64, %845, %927, %869, %156
  %929 = phi i32 [ -1, %927 ], [ %851, %869 ], [ %449, %541 ], [ %136, %156 ], [ %714, %845 ], [ -1, %64 ], [ %174, %211 ], [ -1, %158 ], [ %283, %375 ], [ -1, %377 ], [ %606, %700 ], [ -1, %564 ], [ -1, %786 ]
  %930 = load i32, i32* %70, align 8
  %931 = load %"class.SkSL::Parser"*, %"class.SkSL::Parser"** %69, align 8
  %932 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %931, i64 0, i32 2
  %933 = load i32, i32* %932, align 8
  %934 = sub nsw i32 %933, %930
  store i32 %934, i32* %932, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %19) #15
  ret i32 %929
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser10identifierEPNS_14StringFragmentE(%"class.SkSL::Parser"*, %"struct.SkSL::StringFragment"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::Token", align 8
  %4 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %5, align 8
  store i32 -1, i32* %6, align 4
  store i32 -1, i32* %7, align 8
  %8 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.95, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %8, label %9, label %20

9:                                                ; preds = %2
  %10 = bitcast %"struct.SkSL::Token"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i32, i32* %7, align 8
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = ashr i64 %11, 32
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %1, i64 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %1, i64 0, i32 1
  store i64 %17, i64* %19, align 8
  br label %20

20:                                               ; preds = %2, %9
  %21 = phi i1 [ true, %9 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #15
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser12floatLiteralEPf(%"class.SkSL::Parser"*, float*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::Token", align 8
  %4 = alloca %"struct.SkSL::StringFragment", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = bitcast %"struct.SkSL::Token"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.SkSL::Token", %"struct.SkSL::Token"* %3, i64 0, i32 2
  store i32 87, i32* %8, align 8
  store i32 -1, i32* %9, align 4
  store i32 -1, i32* %10, align 8
  %11 = call zeroext i1 @_ZN4SkSL6Parser6expectENS_5Token4KindEPKcPS1_(%"class.SkSL::Parser"* %0, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i64 0, i64 0), %"struct.SkSL::Token"* nonnull %3)
  br i1 %11, label %12, label %71

12:                                               ; preds = %2
  %13 = bitcast %"struct.SkSL::StringFragment"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %4, i64 0, i32 1
  %16 = bitcast %"struct.SkSL::Token"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = load i32, i32* %10, align 8
  %19 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = ashr i64 %17, 32
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = sext i32 %18 to i64
  store i8* %22, i8** %14, align 8
  store i64 %23, i64* %15, align 8
  %24 = call zeroext i1 @_ZN4SkSL4stodERKNS_14StringFragmentEPf(%"struct.SkSL::StringFragment"* nonnull dereferenceable(16) %4, float* %1) #15
  br i1 %24, label %69, label %25

25:                                               ; preds = %12
  %26 = load i64, i64* %16, align 8
  %27 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = load i8*, i8** %14, align 8
  %29 = load i64, i64* %15, align 8
  %30 = icmp ugt i64 %29, -17
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %32) #16
  unreachable

33:                                               ; preds = %25
  %34 = icmp ult i64 %29, 23
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = add nuw i64 %29, 16
  %37 = and i64 %36, -16
  %38 = call i8* @_Znwm(i64 %37) #14
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %38, i8** %39, align 8
  %40 = or i64 %37, -9223372036854775808
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %42, align 8
  br label %48

43:                                               ; preds = %33
  %44 = trunc i64 %29 to i8
  %45 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  %47 = icmp eq i64 %29, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %43, %35
  %49 = phi i8* [ %38, %35 ], [ %27, %43 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %28, i64 %29, i1 false) #15
  br label %50

50:                                               ; preds = %43, %48
  %51 = phi i8* [ %27, %43 ], [ %49, %48 ]
  %52 = getelementptr inbounds i8, i8* %51, i64 %29
  store i8 0, i8* %52, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.93, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %26, i32 undef, %"class.SkSL::String"* nonnull %5)
  %53 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #14
  br label %60

60:                                               ; preds = %50, %57
  %61 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #14
  br label %68

68:                                               ; preds = %60, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  br label %69

69:                                               ; preds = %12, %68
  %70 = phi i1 [ false, %68 ], [ true, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br label %71

71:                                               ; preds = %2, %69
  %72 = phi i1 [ %70, %69 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #15
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4SkSL6Parser10createNodeIJRiNS_7ASTNode4KindERfEEENS3_2IDEDpOT_(%"class.SkSL::Parser"*, i32* dereferenceable(4), i32* dereferenceable(4), float* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %6 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.SkSL::ASTNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.SkSL::ASTFile"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 160
  %14 = trunc i64 %13 to i32
  %15 = ptrtoint %"struct.SkSL::ASTFile"* %6 to i64
  %16 = inttoptr i64 %9 to %"struct.SkSL::ASTNode"*
  %17 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %17, align 8
  %19 = icmp ugt %"struct.SkSL::ASTNode"* %18, %16
  %20 = ptrtoint %"struct.SkSL::ASTNode"* %18 to i64
  br i1 %19, label %21, label %37

21:                                               ; preds = %4
  %22 = load i32, i32* %1, align 4
  %23 = load i32, i32* %2, align 4
  %24 = bitcast float* %3 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = inttoptr i64 %9 to i64*
  store i64 %15, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 1, i32 1
  store i32 4, i32* %28, align 4
  %29 = bitcast %"struct.SkSL::ASTNode::NodeData"* %27 to i32*
  store i32 %25, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 2
  store i32 %22, i32* %30, align 4
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 3
  store i32 %23, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 4, i32 0
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 5, i32 0
  store i32 -1, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 0, i32 6, i32 0
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 1
  %36 = ptrtoint %"struct.SkSL::ASTNode"* %35 to i64
  store i64 %36, i64* %8, align 8
  br label %96

37:                                               ; preds = %4
  %38 = add nsw i64 %13, 1
  %39 = icmp ugt i64 %38, 115292150460684697
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  %41 = bitcast %"struct.SkSL::ASTFile"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %41) #16
  unreachable

42:                                               ; preds = %37
  %43 = bitcast %"struct.SkSL::ASTNode"** %17 to i64*
  %44 = sub i64 %20, %11
  %45 = sdiv exact i64 %44, 160
  %46 = icmp ult i64 %45, 57646075230342348
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = shl nsw i64 %45, 1
  %49 = icmp ult i64 %48, %38
  %50 = select i1 %49, i64 %38, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %47, %42
  %53 = phi i64 [ %50, %47 ], [ 115292150460684697, %42 ]
  %54 = mul i64 %53, 160
  %55 = tail call i8* @_Znwm(i64 %54) #14
  %56 = bitcast i8* %55 to %"struct.SkSL::ASTNode"*
  br label %57

57:                                               ; preds = %52, %47
  %58 = phi i64 [ %53, %52 ], [ 0, %47 ]
  %59 = phi %"struct.SkSL::ASTNode"* [ %56, %52 ], [ null, %47 ]
  %60 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %58
  %62 = ptrtoint %"struct.SkSL::ASTNode"* %61 to i64
  %63 = load i32, i32* %1, align 4
  %64 = load i32, i32* %2, align 4
  %65 = bitcast float* %3 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %"struct.SkSL::ASTNode"* %60 to i64*
  store i64 %15, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 1
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 1, i32 1
  store i32 4, i32* %69, align 4
  %70 = bitcast %"struct.SkSL::ASTNode::NodeData"* %68 to i32*
  store i32 %66, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 2
  store i32 %63, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 3
  store i32 %64, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 4, i32 0
  store i32 -1, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 5, i32 0
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %59, i64 %13, i32 6, i32 0
  store i32 -1, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 1
  %77 = ptrtoint %"struct.SkSL::ASTNode"* %76 to i64
  %78 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %6, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  %80 = load i64, i64* %8, align 8
  %81 = ptrtoint %"struct.SkSL::ASTNode"* %79 to i64
  %82 = sub i64 %80, %81
  %83 = sdiv exact i64 %82, -160
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %60, i64 %83
  %85 = ptrtoint %"struct.SkSL::ASTNode"* %84 to i64
  %86 = icmp sgt i64 %82, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %57
  %88 = bitcast %"struct.SkSL::ASTNode"* %84 to i8*
  %89 = bitcast %"struct.SkSL::ASTNode"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 %82, i1 false) #15
  %90 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  br label %91

91:                                               ; preds = %87, %57
  %92 = phi %"struct.SkSL::ASTNode"* [ %79, %57 ], [ %90, %87 ]
  store i64 %85, i64* %10, align 8
  store i64 %77, i64* %8, align 8
  store i64 %62, i64* %43, align 8
  %93 = icmp eq %"struct.SkSL::ASTNode"* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = bitcast %"struct.SkSL::ASTNode"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %94, %91, %21
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL6Parser11boolLiteralEPb(%"class.SkSL::Parser"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 87
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %11 = bitcast %"struct.SkSL::Token"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %14 = load i32, i32* %13, align 4
  store i32 87, i32* %6, align 4
  br label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  %17 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %16) #15
  %18 = extractvalue { i64, i32 } %17, 0
  %19 = extractvalue { i64, i32 } %17, 1
  br label %20

20:                                               ; preds = %15, %9
  %21 = phi i32 [ %14, %9 ], [ %19, %15 ]
  %22 = phi i64 [ %12, %9 ], [ %18, %15 ]
  %23 = trunc i64 %22 to i32
  %24 = add i32 %23, -83
  %25 = icmp ult i32 %24, 3
  br i1 %25, label %26, label %47

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3
  %28 = bitcast %"struct.SkSL::Token"* %27 to i64*
  %29 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 3, i32 2
  %30 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 1
  br label %31

31:                                               ; preds = %41, %26
  %32 = load i32, i32* %6, align 4
  %33 = icmp eq i32 %32, 87
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = load i64, i64* %28, align 4
  %36 = load i32, i32* %29, align 4
  store i32 87, i32* %6, align 4
  br label %41

37:                                               ; preds = %31
  %38 = tail call { i64, i32 } @_ZN4SkSL5Lexer4nextEv(%"class.SkSL::Lexer"* %30) #15
  %39 = extractvalue { i64, i32 } %38, 0
  %40 = extractvalue { i64, i32 } %38, 1
  br label %41

41:                                               ; preds = %37, %34
  %42 = phi i32 [ %36, %34 ], [ %40, %37 ]
  %43 = phi i64 [ %35, %34 ], [ %39, %37 ]
  %44 = trunc i64 %43 to i32
  %45 = add i32 %44, -83
  %46 = icmp ult i32 %45, 3
  br i1 %46, label %31, label %47

47:                                               ; preds = %41, %20
  %48 = phi i64 [ %22, %20 ], [ %43, %41 ]
  %49 = phi i32 [ %21, %20 ], [ %42, %41 ]
  %50 = trunc i64 %48 to i32
  switch i32 %50, label %53 [
    i32 3, label %51
    i32 4, label %52
  ]

51:                                               ; preds = %47
  store i8 1, i8* %1, align 1
  br label %108

52:                                               ; preds = %47
  store i8 0, i8* %1, align 1
  br label %108

53:                                               ; preds = %47
  %54 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #15
  %55 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #15
  %56 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %0, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = ashr i64 %48, 32
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = sext i32 %49 to i64
  %61 = icmp ugt i32 %49, -17
  br i1 %61, label %62, label %64

62:                                               ; preds = %53
  %63 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %63) #16
  unreachable

64:                                               ; preds = %53
  %65 = icmp ult i32 %49, 23
  br i1 %65, label %74, label %66

66:                                               ; preds = %64
  %67 = add nuw nsw i64 %60, 16
  %68 = and i64 %67, -16
  %69 = tail call i8* @_Znwm(i64 %68) #14
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %69, i8** %70, align 8
  %71 = or i64 %68, -9223372036854775808
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %60, i64* %73, align 8
  br label %79

74:                                               ; preds = %64
  %75 = trunc i32 %49 to i8
  %76 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 %75, i8* %77, align 1
  %78 = icmp eq i32 %49, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %74, %66
  %80 = phi i8* [ %69, %66 ], [ %55, %74 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %80, i8* align 1 %59, i64 %60, i1 false) #15
  br label %81

81:                                               ; preds = %74, %79
  %82 = phi i8* [ %55, %74 ], [ %80, %79 ]
  %83 = getelementptr inbounds i8, i8* %82, i64 %60
  store i8 0, i8* %83, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.94, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #15
  call void @_ZN4SkSL6Parser5errorENS_5TokenENS_6StringE(%"class.SkSL::Parser"* %0, i64 %48, i32 undef, %"class.SkSL::String"* nonnull %3)
  %84 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %81, %88
  %92 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %91, %96
  %100 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %99, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #15
  br label %108

108:                                              ; preds = %107, %52, %51
  %109 = phi i1 [ false, %107 ], [ true, %52 ], [ true, %51 ]
  ret i1 %109
}

declare zeroext i1 @_ZN4SkSL4stodERKNS_14StringFragmentEPf(%"struct.SkSL::StringFragment"* dereferenceable(16), float*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD2Ev(%"class.SkSL::Type"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD0Ev(%"class.SkSL::Type"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %"class.SkSL::Type"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %30) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Type"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 18
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8, !noalias !7
  %5 = icmp eq %"class.SkSL::Type"* %4, null
  %6 = select i1 %5, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %4
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8, !noalias !7
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8, !noalias !7
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #14
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8, !alias.scope !7
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8, !alias.scope !7
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8, !alias.scope !7
  br label %30

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i8
  %26 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1, !alias.scope !7
  %28 = bitcast %"class.SkSL::String"* %0 to i8*
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24, %16
  %31 = phi i8* [ %19, %16 ], [ %28, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %8, i64 %10, i1 false) #15
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i8* [ %28, %24 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %10
  store i8 0, i8* %34, align 1
  ret void
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4SkSL7ASTNodeENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.45"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.SkSL::ASTNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.SkSL::ASTNode"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 160
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.SkSL::ASTNode"*
  %14 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %25, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.SkSL::ASTNode"* %14 to i64
  br label %25

18:                                               ; preds = %12, %18
  %19 = phi %"struct.SkSL::ASTNode"* [ %23, %18 ], [ %13, %12 ]
  %20 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %19, i64 0, i32 2
  %21 = bitcast i32* %20 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 22, i32 -1, i32 -1>, <4 x i32>* %21, align 4
  %22 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %19, i64 0, i32 6, i32 0
  store i32 -1, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %19, i64 1
  %24 = icmp eq %"struct.SkSL::ASTNode"* %23, %14
  br i1 %24, label %16, label %18

25:                                               ; preds = %12, %16
  %26 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %26, i64* %7, align 8
  br label %84

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::vector.45"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %8, %29
  %31 = sdiv exact i64 %30, 160
  %32 = add i64 %31, %1
  %33 = icmp ugt i64 %32, 115292150460684697
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::vector.45"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #16
  unreachable

36:                                               ; preds = %27
  %37 = sub i64 %5, %29
  %38 = sdiv exact i64 %37, 160
  %39 = icmp ult i64 %38, 57646075230342348
  br i1 %39, label %40, label %45

40:                                               ; preds = %36
  %41 = shl nsw i64 %38, 1
  %42 = icmp ult i64 %41, %32
  %43 = select i1 %42, i64 %32, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %36, %40
  %46 = phi i64 [ %43, %40 ], [ 115292150460684697, %36 ]
  %47 = mul i64 %46, 160
  %48 = tail call i8* @_Znwm(i64 %47) #14
  %49 = bitcast i8* %48 to %"struct.SkSL::ASTNode"*
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi i64 [ %46, %45 ], [ 0, %40 ]
  %52 = phi %"struct.SkSL::ASTNode"* [ %49, %45 ], [ null, %40 ]
  %53 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %52, i64 %31
  %54 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %52, i64 %51
  %55 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %53, i64 %1
  br label %56

56:                                               ; preds = %50, %56
  %57 = phi %"struct.SkSL::ASTNode"* [ %61, %56 ], [ %53, %50 ]
  %58 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 0, i32 2
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 22, i32 -1, i32 -1>, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 0, i32 6, i32 0
  store i32 -1, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %57, i64 1
  %62 = icmp eq %"struct.SkSL::ASTNode"* %55, %61
  br i1 %62, label %63, label %56

63:                                               ; preds = %56
  %64 = ptrtoint %"struct.SkSL::ASTNode"* %54 to i64
  %65 = ptrtoint %"struct.SkSL::ASTNode"* %55 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 0
  %67 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %66, align 8
  %68 = load i64, i64* %7, align 8
  %69 = ptrtoint %"struct.SkSL::ASTNode"* %67 to i64
  %70 = sub i64 %68, %69
  %71 = sdiv exact i64 %70, -160
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %53, i64 %71
  %73 = ptrtoint %"struct.SkSL::ASTNode"* %72 to i64
  %74 = icmp sgt i64 %70, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %63
  %76 = bitcast %"struct.SkSL::ASTNode"* %72 to i8*
  %77 = bitcast %"struct.SkSL::ASTNode"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %70, i1 false) #15
  %78 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %66, align 8
  br label %79

79:                                               ; preds = %63, %75
  %80 = phi %"struct.SkSL::ASTNode"* [ %67, %63 ], [ %78, %75 ]
  store i64 %73, i64* %28, align 8
  store i64 %65, i64* %7, align 8
  store i64 %64, i64* %4, align 8
  %81 = icmp eq %"struct.SkSL::ASTNode"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.SkSL::ASTNode"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  br label %84

84:                                               ; preds = %82, %79, %25
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Layout"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca %"class.SkSL::String", align 8
  %36 = alloca %"class.SkSL::String", align 8
  %37 = alloca %"class.SkSL::String", align 8
  %38 = alloca %"class.SkSL::String", align 8
  %39 = alloca %"class.SkSL::String", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = alloca %"class.SkSL::String", align 8
  %42 = alloca %"class.SkSL::String", align 8
  %43 = alloca %"class.SkSL::String", align 8
  %44 = alloca %"class.SkSL::String", align 8
  %45 = alloca %"class.SkSL::String", align 8
  %46 = alloca %"class.SkSL::String", align 8
  %47 = alloca %"class.SkSL::String", align 8
  %48 = alloca %"class.SkSL::String", align 8
  %49 = alloca %"class.SkSL::String", align 8
  %50 = alloca %"class.SkSL::String", align 8
  %51 = alloca %"class.SkSL::String", align 8
  %52 = alloca %"class.SkSL::String", align 8
  %53 = alloca %"class.SkSL::String", align 8
  %54 = alloca %"class.SkSL::String", align 8
  %55 = alloca %"class.SkSL::String", align 8
  %56 = alloca %"class.SkSL::String", align 8
  %57 = alloca %"class.SkSL::String", align 8
  %58 = alloca %"class.SkSL::String", align 8
  %59 = alloca %"class.SkSL::String", align 8
  %60 = alloca %"class.SkSL::String", align 8
  %61 = alloca %"class.SkSL::String", align 8
  %62 = alloca %"class.SkSL::String", align 8
  %63 = alloca %"class.SkSL::String", align 8
  %64 = alloca %"class.SkSL::String", align 8
  %65 = alloca %"class.SkSL::String", align 8
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #15
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, -1
  br i1 %71, label %72, label %111

72:                                               ; preds = %2
  %73 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #15
  %74 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #15
  %75 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #15
  %76 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 0, i8* %77, align 1, !alias.scope !10
  store i8 0, i8* %75, align 8, !alias.scope !10
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i64 0, i64 0)) #15
  %78 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #15
  %79 = load i32, i32* %69, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %79) #15
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #15
  %80 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #15
  %81 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #14
  br label %88

88:                                               ; preds = %72, %85
  %89 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #15
  %97 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %96, %101
  %105 = load i8, i8* %77, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #14
  br label %110

110:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #15
  br label %111

111:                                              ; preds = %110, %2
  %112 = phi i8 [ 0, %110 ], [ 1, %2 ]
  %113 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, -1
  br i1 %115, label %116, label %161

116:                                              ; preds = %111
  %117 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #15
  %118 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #15
  %119 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #15
  %120 = icmp eq i8 %112, 0
  %121 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  br i1 %120, label %124, label %123

123:                                              ; preds = %116
  store i8 0, i8* %122, align 1, !alias.scope !13
  store i8 0, i8* %119, align 8, !alias.scope !13
  br label %127

124:                                              ; preds = %116
  store i8 2, i8* %122, align 1, !alias.scope !13
  %125 = bitcast %"class.SkSL::String"* %9 to i16*
  store i16 8236, i16* %125, align 8, !alias.scope !13
  %126 = getelementptr inbounds i8, i8* %119, i64 2
  store i8 0, i8* %126, align 2, !alias.scope !13
  br label %127

127:                                              ; preds = %123, %124
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i64 0, i64 0)) #15
  %128 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #15
  %129 = load i32, i32* %113, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %10, i32 %129) #15
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #15
  %130 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %7) #15
  %131 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #14
  br label %138

138:                                              ; preds = %127, %135
  %139 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #14
  br label %146

146:                                              ; preds = %138, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #15
  %147 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #14
  br label %154

154:                                              ; preds = %146, %151
  %155 = load i8, i8* %122, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #14
  br label %160

160:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #15
  br label %161

161:                                              ; preds = %160, %111
  %162 = phi i8 [ 0, %160 ], [ %112, %111 ]
  %163 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = icmp sgt i32 %164, -1
  br i1 %165, label %166, label %211

166:                                              ; preds = %161
  %167 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #15
  %168 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #15
  %169 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #15
  %170 = icmp eq i8 %162, 0
  %171 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  br i1 %170, label %174, label %173

173:                                              ; preds = %166
  store i8 0, i8* %172, align 1, !alias.scope !16
  store i8 0, i8* %169, align 8, !alias.scope !16
  br label %177

174:                                              ; preds = %166
  store i8 2, i8* %172, align 1, !alias.scope !16
  %175 = bitcast %"class.SkSL::String"* %13 to i16*
  store i16 8236, i16* %175, align 8, !alias.scope !16
  %176 = getelementptr inbounds i8, i8* %169, i64 2
  store i8 0, i8* %176, align 2, !alias.scope !16
  br label %177

177:                                              ; preds = %173, %174
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i64 0, i64 0)) #15
  %178 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #15
  %179 = load i32, i32* %163, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %14, i32 %179) #15
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #15
  %180 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #15
  %181 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #14
  br label %188

188:                                              ; preds = %177, %185
  %189 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #14
  br label %196

196:                                              ; preds = %188, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #15
  %197 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %203) #14
  br label %204

204:                                              ; preds = %196, %201
  %205 = load i8, i8* %172, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #14
  br label %210

210:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #15
  br label %211

211:                                              ; preds = %210, %161
  %212 = phi i8 [ 0, %210 ], [ %162, %161 ]
  %213 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %214 = load i32, i32* %213, align 8
  %215 = icmp sgt i32 %214, -1
  br i1 %215, label %216, label %261

216:                                              ; preds = %211
  %217 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #15
  %218 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #15
  %219 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #15
  %220 = icmp eq i8 %212, 0
  %221 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  br i1 %220, label %224, label %223

223:                                              ; preds = %216
  store i8 0, i8* %222, align 1, !alias.scope !19
  store i8 0, i8* %219, align 8, !alias.scope !19
  br label %227

224:                                              ; preds = %216
  store i8 2, i8* %222, align 1, !alias.scope !19
  %225 = bitcast %"class.SkSL::String"* %17 to i16*
  store i16 8236, i16* %225, align 8, !alias.scope !19
  %226 = getelementptr inbounds i8, i8* %219, i64 2
  store i8 0, i8* %226, align 2, !alias.scope !19
  br label %227

227:                                              ; preds = %223, %224
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i64 0, i64 0)) #15
  %228 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #15
  %229 = load i32, i32* %213, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %18, i32 %229) #15
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, %"class.SkSL::String"* nonnull dereferenceable(24) %18) #15
  %230 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %15) #15
  %231 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #14
  br label %238

238:                                              ; preds = %227, %235
  %239 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #14
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #15
  %247 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  call void @_ZdlPv(i8* %253) #14
  br label %254

254:                                              ; preds = %246, %251
  %255 = load i8, i8* %222, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #14
  br label %260

260:                                              ; preds = %254, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #15
  br label %261

261:                                              ; preds = %260, %211
  %262 = phi i8 [ 0, %260 ], [ %212, %211 ]
  %263 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, -1
  br i1 %265, label %266, label %311

266:                                              ; preds = %261
  %267 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #15
  %268 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #15
  %269 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %269) #15
  %270 = icmp eq i8 %262, 0
  %271 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  br i1 %270, label %274, label %273

273:                                              ; preds = %266
  store i8 0, i8* %272, align 1, !alias.scope !22
  store i8 0, i8* %269, align 8, !alias.scope !22
  br label %277

274:                                              ; preds = %266
  store i8 2, i8* %272, align 1, !alias.scope !22
  %275 = bitcast %"class.SkSL::String"* %21 to i16*
  store i16 8236, i16* %275, align 8, !alias.scope !22
  %276 = getelementptr inbounds i8, i8* %269, i64 2
  store i8 0, i8* %276, align 2, !alias.scope !22
  br label %277

277:                                              ; preds = %273, %274
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0)) #15
  %278 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #15
  %279 = load i32, i32* %263, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %22, i32 %279) #15
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, %"class.SkSL::String"* nonnull dereferenceable(24) %22) #15
  %280 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %19) #15
  %281 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #14
  br label %288

288:                                              ; preds = %277, %285
  %289 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %289, i64 0, i32 1, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  call void @_ZdlPv(i8* %295) #14
  br label %296

296:                                              ; preds = %288, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #15
  %297 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  %299 = load i8, i8* %298, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %303) #14
  br label %304

304:                                              ; preds = %296, %301
  %305 = load i8, i8* %272, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #14
  br label %310

310:                                              ; preds = %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %269) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #15
  br label %311

311:                                              ; preds = %310, %261
  %312 = phi i8 [ 0, %310 ], [ %262, %261 ]
  %313 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, -1
  br i1 %315, label %316, label %361

316:                                              ; preds = %311
  %317 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %317) #15
  %318 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %318) #15
  %319 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #15
  %320 = icmp eq i8 %312, 0
  %321 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  br i1 %320, label %324, label %323

323:                                              ; preds = %316
  store i8 0, i8* %322, align 1, !alias.scope !25
  store i8 0, i8* %319, align 8, !alias.scope !25
  br label %327

324:                                              ; preds = %316
  store i8 2, i8* %322, align 1, !alias.scope !25
  %325 = bitcast %"class.SkSL::String"* %25 to i16*
  store i16 8236, i16* %325, align 8, !alias.scope !25
  %326 = getelementptr inbounds i8, i8* %319, i64 2
  store i8 0, i8* %326, align 2, !alias.scope !25
  br label %327

327:                                              ; preds = %323, %324
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i64 0, i64 0)) #15
  %328 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #15
  %329 = load i32, i32* %313, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %26, i32 %329) #15
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, %"class.SkSL::String"* nonnull dereferenceable(24) %26) #15
  %330 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %23) #15
  %331 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %327
  %336 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %337) #14
  br label %338

338:                                              ; preds = %327, %335
  %339 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #14
  br label %346

346:                                              ; preds = %338, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #15
  %347 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  call void @_ZdlPv(i8* %353) #14
  br label %354

354:                                              ; preds = %346, %351
  %355 = load i8, i8* %322, align 1
  %356 = icmp slt i8 %355, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load i8*, i8** %358, align 8
  call void @_ZdlPv(i8* %359) #14
  br label %360

360:                                              ; preds = %354, %357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %317) #15
  br label %361

361:                                              ; preds = %360, %311
  %362 = phi i8 [ 0, %360 ], [ %312, %311 ]
  %363 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %364 = load i32, i32* %363, align 4
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %411

366:                                              ; preds = %361
  %367 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %367) #15
  %368 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #15
  %369 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #15
  %370 = icmp eq i8 %362, 0
  %371 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  br i1 %370, label %374, label %373

373:                                              ; preds = %366
  store i8 0, i8* %372, align 1, !alias.scope !28
  store i8 0, i8* %369, align 8, !alias.scope !28
  br label %377

374:                                              ; preds = %366
  store i8 2, i8* %372, align 1, !alias.scope !28
  %375 = bitcast %"class.SkSL::String"* %29 to i16*
  store i16 8236, i16* %375, align 8, !alias.scope !28
  %376 = getelementptr inbounds i8, i8* %369, i64 2
  store i8 0, i8* %376, align 2, !alias.scope !28
  br label %377

377:                                              ; preds = %373, %374
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.113, i64 0, i64 0)) #15
  %378 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %378) #15
  %379 = load i32, i32* %363, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %30, i32 %379) #15
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::String"* nonnull %28, %"class.SkSL::String"* nonnull dereferenceable(24) %30) #15
  %380 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %27) #15
  %381 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %381, i64 0, i32 1, i32 0
  %383 = load i8, i8* %382, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %388

385:                                              ; preds = %377
  %386 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  call void @_ZdlPv(i8* %387) #14
  br label %388

388:                                              ; preds = %377, %385
  %389 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %389, i64 0, i32 1, i32 0
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %393, label %396

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  call void @_ZdlPv(i8* %395) #14
  br label %396

396:                                              ; preds = %388, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %378) #15
  %397 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %397, i64 0, i32 1, i32 0
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %401, label %404

401:                                              ; preds = %396
  %402 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load i8*, i8** %402, align 8
  call void @_ZdlPv(i8* %403) #14
  br label %404

404:                                              ; preds = %396, %401
  %405 = load i8, i8* %372, align 1
  %406 = icmp slt i8 %405, 0
  br i1 %406, label %407, label %410

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load i8*, i8** %408, align 8
  call void @_ZdlPv(i8* %409) #14
  br label %410

410:                                              ; preds = %404, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %367) #15
  br label %411

411:                                              ; preds = %410, %361
  %412 = phi i8 [ 0, %410 ], [ %362, %361 ]
  %413 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %414 = load i32, i32* %413, align 8
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %444, label %417

417:                                              ; preds = %411
  %418 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %418) #15
  %419 = bitcast %"class.SkSL::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #15
  %420 = icmp eq i8 %412, 0
  %421 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %421, i64 0, i32 1, i32 0
  br i1 %420, label %424, label %423

423:                                              ; preds = %417
  store i8 0, i8* %422, align 1, !alias.scope !31
  store i8 0, i8* %419, align 8, !alias.scope !31
  br label %427

424:                                              ; preds = %417
  store i8 2, i8* %422, align 1, !alias.scope !31
  %425 = bitcast %"class.SkSL::String"* %32 to i16*
  store i16 8236, i16* %425, align 8, !alias.scope !31
  %426 = getelementptr inbounds i8, i8* %419, i64 2
  store i8 0, i8* %426, align 2, !alias.scope !31
  br label %427

427:                                              ; preds = %423, %424
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %31, %"class.SkSL::String"* nonnull %32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)) #15
  %428 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %31) #15
  %429 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %429, i64 0, i32 1, i32 0
  %431 = load i8, i8* %430, align 1
  %432 = icmp slt i8 %431, 0
  br i1 %432, label %433, label %436

433:                                              ; preds = %427
  %434 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  call void @_ZdlPv(i8* %435) #14
  br label %436

436:                                              ; preds = %427, %433
  %437 = load i8, i8* %422, align 1
  %438 = icmp slt i8 %437, 0
  br i1 %438, label %439, label %442

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  call void @_ZdlPv(i8* %441) #14
  br label %442

442:                                              ; preds = %436, %439
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %418) #15
  %443 = load i32, i32* %413, align 8
  br label %444

444:                                              ; preds = %411, %442
  %445 = phi i32 [ %414, %411 ], [ %443, %442 ]
  %446 = phi i8 [ %412, %411 ], [ 0, %442 ]
  %447 = and i32 %445, 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %476, label %449

449:                                              ; preds = %444
  %450 = bitcast %"class.SkSL::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #15
  %451 = bitcast %"class.SkSL::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #15
  %452 = icmp eq i8 %446, 0
  %453 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %454 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %453, i64 0, i32 1, i32 0
  br i1 %452, label %456, label %455

455:                                              ; preds = %449
  store i8 0, i8* %454, align 1, !alias.scope !34
  store i8 0, i8* %451, align 8, !alias.scope !34
  br label %459

456:                                              ; preds = %449
  store i8 2, i8* %454, align 1, !alias.scope !34
  %457 = bitcast %"class.SkSL::String"* %34 to i16*
  store i16 8236, i16* %457, align 8, !alias.scope !34
  %458 = getelementptr inbounds i8, i8* %451, i64 2
  store i8 0, i8* %458, align 2, !alias.scope !34
  br label %459

459:                                              ; preds = %455, %456
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %33, %"class.SkSL::String"* nonnull %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0)) #15
  %460 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %33) #15
  %461 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %461, i64 0, i32 1, i32 0
  %463 = load i8, i8* %462, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %468

465:                                              ; preds = %459
  %466 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = load i8*, i8** %466, align 8
  call void @_ZdlPv(i8* %467) #14
  br label %468

468:                                              ; preds = %459, %465
  %469 = load i8, i8* %454, align 1
  %470 = icmp slt i8 %469, 0
  br i1 %470, label %471, label %474

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load i8*, i8** %472, align 8
  call void @_ZdlPv(i8* %473) #14
  br label %474

474:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #15
  %475 = load i32, i32* %413, align 8
  br label %476

476:                                              ; preds = %444, %474
  %477 = phi i32 [ %445, %444 ], [ %475, %474 ]
  %478 = phi i8 [ %446, %444 ], [ 0, %474 ]
  %479 = and i32 %477, 2
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %508, label %481

481:                                              ; preds = %476
  %482 = bitcast %"class.SkSL::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %482) #15
  %483 = bitcast %"class.SkSL::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #15
  %484 = icmp eq i8 %478, 0
  %485 = bitcast %"class.SkSL::String"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %486 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %485, i64 0, i32 1, i32 0
  br i1 %484, label %488, label %487

487:                                              ; preds = %481
  store i8 0, i8* %486, align 1, !alias.scope !37
  store i8 0, i8* %483, align 8, !alias.scope !37
  br label %491

488:                                              ; preds = %481
  store i8 2, i8* %486, align 1, !alias.scope !37
  %489 = bitcast %"class.SkSL::String"* %36 to i16*
  store i16 8236, i16* %489, align 8, !alias.scope !37
  %490 = getelementptr inbounds i8, i8* %483, i64 2
  store i8 0, i8* %490, align 2, !alias.scope !37
  br label %491

491:                                              ; preds = %487, %488
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %35, %"class.SkSL::String"* nonnull %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)) #15
  %492 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %35) #15
  %493 = bitcast %"class.SkSL::String"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %493, i64 0, i32 1, i32 0
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %491
  %498 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load i8*, i8** %498, align 8
  call void @_ZdlPv(i8* %499) #14
  br label %500

500:                                              ; preds = %491, %497
  %501 = load i8, i8* %486, align 1
  %502 = icmp slt i8 %501, 0
  br i1 %502, label %503, label %506

503:                                              ; preds = %500
  %504 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load i8*, i8** %504, align 8
  call void @_ZdlPv(i8* %505) #14
  br label %506

506:                                              ; preds = %500, %503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %482) #15
  %507 = load i32, i32* %413, align 8
  br label %508

508:                                              ; preds = %476, %506
  %509 = phi i32 [ %477, %476 ], [ %507, %506 ]
  %510 = phi i8 [ %478, %476 ], [ 0, %506 ]
  %511 = and i32 %509, 8
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %539, label %513

513:                                              ; preds = %508
  %514 = bitcast %"class.SkSL::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %514) #15
  %515 = bitcast %"class.SkSL::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %515) #15
  %516 = icmp eq i8 %510, 0
  %517 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %518 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %517, i64 0, i32 1, i32 0
  br i1 %516, label %520, label %519

519:                                              ; preds = %513
  store i8 0, i8* %518, align 1, !alias.scope !40
  store i8 0, i8* %515, align 8, !alias.scope !40
  br label %523

520:                                              ; preds = %513
  store i8 2, i8* %518, align 1, !alias.scope !40
  %521 = bitcast %"class.SkSL::String"* %38 to i16*
  store i16 8236, i16* %521, align 8, !alias.scope !40
  %522 = getelementptr inbounds i8, i8* %515, i64 2
  store i8 0, i8* %522, align 2, !alias.scope !40
  br label %523

523:                                              ; preds = %519, %520
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %37, %"class.SkSL::String"* nonnull %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0)) #15
  %524 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %37) #15
  %525 = bitcast %"class.SkSL::String"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %526 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %525, i64 0, i32 1, i32 0
  %527 = load i8, i8* %526, align 1
  %528 = icmp slt i8 %527, 0
  br i1 %528, label %529, label %532

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load i8*, i8** %530, align 8
  call void @_ZdlPv(i8* %531) #14
  br label %532

532:                                              ; preds = %523, %529
  %533 = load i8, i8* %518, align 1
  %534 = icmp slt i8 %533, 0
  br i1 %534, label %535, label %538

535:                                              ; preds = %532
  %536 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load i8*, i8** %536, align 8
  call void @_ZdlPv(i8* %537) #14
  br label %538

538:                                              ; preds = %532, %535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %515) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %514) #15
  br label %539

539:                                              ; preds = %508, %538
  %540 = phi i8 [ %510, %508 ], [ 0, %538 ]
  %541 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %542 = load i32, i32* %541, align 8
  switch i32 %542, label %721 [
    i32 0, label %543
    i32 1, label %568
    i32 2, label %593
    i32 3, label %618
    i32 4, label %643
    i32 5, label %668
    i32 6, label %693
  ]

543:                                              ; preds = %539
  %544 = bitcast %"class.SkSL::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #15
  %545 = bitcast %"class.SkSL::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %545) #15
  %546 = icmp eq i8 %540, 0
  %547 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %548 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %547, i64 0, i32 1, i32 0
  br i1 %546, label %550, label %549

549:                                              ; preds = %543
  store i8 0, i8* %548, align 1, !alias.scope !43
  store i8 0, i8* %545, align 8, !alias.scope !43
  br label %553

550:                                              ; preds = %543
  store i8 2, i8* %548, align 1, !alias.scope !43
  %551 = bitcast %"class.SkSL::String"* %40 to i16*
  store i16 8236, i16* %551, align 8, !alias.scope !43
  %552 = getelementptr inbounds i8, i8* %545, i64 2
  store i8 0, i8* %552, align 2, !alias.scope !43
  br label %553

553:                                              ; preds = %549, %550
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %39, %"class.SkSL::String"* nonnull %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #15
  %554 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %39) #15
  %555 = bitcast %"class.SkSL::String"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %555, i64 0, i32 1, i32 0
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %562

559:                                              ; preds = %553
  %560 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %561) #14
  br label %562

562:                                              ; preds = %553, %559
  %563 = load i8, i8* %548, align 1
  %564 = icmp slt i8 %563, 0
  br i1 %564, label %565, label %718

565:                                              ; preds = %562
  %566 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load i8*, i8** %566, align 8
  call void @_ZdlPv(i8* %567) #14
  br label %718

568:                                              ; preds = %539
  %569 = bitcast %"class.SkSL::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %569) #15
  %570 = bitcast %"class.SkSL::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %570) #15
  %571 = icmp eq i8 %540, 0
  %572 = bitcast %"class.SkSL::String"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  br i1 %571, label %575, label %574

574:                                              ; preds = %568
  store i8 0, i8* %573, align 1, !alias.scope !46
  store i8 0, i8* %570, align 8, !alias.scope !46
  br label %578

575:                                              ; preds = %568
  store i8 2, i8* %573, align 1, !alias.scope !46
  %576 = bitcast %"class.SkSL::String"* %42 to i16*
  store i16 8236, i16* %576, align 8, !alias.scope !46
  %577 = getelementptr inbounds i8, i8* %570, i64 2
  store i8 0, i8* %577, align 2, !alias.scope !46
  br label %578

578:                                              ; preds = %574, %575
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %41, %"class.SkSL::String"* nonnull %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #15
  %579 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %41) #15
  %580 = bitcast %"class.SkSL::String"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %581 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %580, i64 0, i32 1, i32 0
  %582 = load i8, i8* %581, align 1
  %583 = icmp slt i8 %582, 0
  br i1 %583, label %584, label %587

584:                                              ; preds = %578
  %585 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load i8*, i8** %585, align 8
  call void @_ZdlPv(i8* %586) #14
  br label %587

587:                                              ; preds = %578, %584
  %588 = load i8, i8* %573, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %718

590:                                              ; preds = %587
  %591 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8*, i8** %591, align 8
  call void @_ZdlPv(i8* %592) #14
  br label %718

593:                                              ; preds = %539
  %594 = bitcast %"class.SkSL::String"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %594) #15
  %595 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #15
  %596 = icmp eq i8 %540, 0
  %597 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %597, i64 0, i32 1, i32 0
  br i1 %596, label %600, label %599

599:                                              ; preds = %593
  store i8 0, i8* %598, align 1, !alias.scope !49
  store i8 0, i8* %595, align 8, !alias.scope !49
  br label %603

600:                                              ; preds = %593
  store i8 2, i8* %598, align 1, !alias.scope !49
  %601 = bitcast %"class.SkSL::String"* %44 to i16*
  store i16 8236, i16* %601, align 8, !alias.scope !49
  %602 = getelementptr inbounds i8, i8* %595, i64 2
  store i8 0, i8* %602, align 2, !alias.scope !49
  br label %603

603:                                              ; preds = %599, %600
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %43, %"class.SkSL::String"* nonnull %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #15
  %604 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %43) #15
  %605 = bitcast %"class.SkSL::String"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %605, i64 0, i32 1, i32 0
  %607 = load i8, i8* %606, align 1
  %608 = icmp slt i8 %607, 0
  br i1 %608, label %609, label %612

609:                                              ; preds = %603
  %610 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load i8*, i8** %610, align 8
  call void @_ZdlPv(i8* %611) #14
  br label %612

612:                                              ; preds = %603, %609
  %613 = load i8, i8* %598, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %718

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load i8*, i8** %616, align 8
  call void @_ZdlPv(i8* %617) #14
  br label %718

618:                                              ; preds = %539
  %619 = bitcast %"class.SkSL::String"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %619) #15
  %620 = bitcast %"class.SkSL::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %620) #15
  %621 = icmp eq i8 %540, 0
  %622 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %623 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %622, i64 0, i32 1, i32 0
  br i1 %621, label %625, label %624

624:                                              ; preds = %618
  store i8 0, i8* %623, align 1, !alias.scope !52
  store i8 0, i8* %620, align 8, !alias.scope !52
  br label %628

625:                                              ; preds = %618
  store i8 2, i8* %623, align 1, !alias.scope !52
  %626 = bitcast %"class.SkSL::String"* %46 to i16*
  store i16 8236, i16* %626, align 8, !alias.scope !52
  %627 = getelementptr inbounds i8, i8* %620, i64 2
  store i8 0, i8* %627, align 2, !alias.scope !52
  br label %628

628:                                              ; preds = %624, %625
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %45, %"class.SkSL::String"* nonnull %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0)) #15
  %629 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %45) #15
  %630 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  %632 = load i8, i8* %631, align 1
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %637

634:                                              ; preds = %628
  %635 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load i8*, i8** %635, align 8
  call void @_ZdlPv(i8* %636) #14
  br label %637

637:                                              ; preds = %628, %634
  %638 = load i8, i8* %623, align 1
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %640, label %718

640:                                              ; preds = %637
  %641 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %642 = load i8*, i8** %641, align 8
  call void @_ZdlPv(i8* %642) #14
  br label %718

643:                                              ; preds = %539
  %644 = bitcast %"class.SkSL::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %644) #15
  %645 = bitcast %"class.SkSL::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %645) #15
  %646 = icmp eq i8 %540, 0
  %647 = bitcast %"class.SkSL::String"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %648 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %647, i64 0, i32 1, i32 0
  br i1 %646, label %650, label %649

649:                                              ; preds = %643
  store i8 0, i8* %648, align 1, !alias.scope !55
  store i8 0, i8* %645, align 8, !alias.scope !55
  br label %653

650:                                              ; preds = %643
  store i8 2, i8* %648, align 1, !alias.scope !55
  %651 = bitcast %"class.SkSL::String"* %48 to i16*
  store i16 8236, i16* %651, align 8, !alias.scope !55
  %652 = getelementptr inbounds i8, i8* %645, i64 2
  store i8 0, i8* %652, align 2, !alias.scope !55
  br label %653

653:                                              ; preds = %649, %650
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %47, %"class.SkSL::String"* nonnull %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)) #15
  %654 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %47) #15
  %655 = bitcast %"class.SkSL::String"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %655, i64 0, i32 1, i32 0
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %653
  %660 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #14
  br label %662

662:                                              ; preds = %653, %659
  %663 = load i8, i8* %648, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %718

665:                                              ; preds = %662
  %666 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load i8*, i8** %666, align 8
  call void @_ZdlPv(i8* %667) #14
  br label %718

668:                                              ; preds = %539
  %669 = bitcast %"class.SkSL::String"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %669) #15
  %670 = bitcast %"class.SkSL::String"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %670) #15
  %671 = icmp eq i8 %540, 0
  %672 = bitcast %"class.SkSL::String"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %673 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %672, i64 0, i32 1, i32 0
  br i1 %671, label %675, label %674

674:                                              ; preds = %668
  store i8 0, i8* %673, align 1, !alias.scope !58
  store i8 0, i8* %670, align 8, !alias.scope !58
  br label %678

675:                                              ; preds = %668
  store i8 2, i8* %673, align 1, !alias.scope !58
  %676 = bitcast %"class.SkSL::String"* %50 to i16*
  store i16 8236, i16* %676, align 8, !alias.scope !58
  %677 = getelementptr inbounds i8, i8* %670, i64 2
  store i8 0, i8* %677, align 2, !alias.scope !58
  br label %678

678:                                              ; preds = %674, %675
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %49, %"class.SkSL::String"* nonnull %50, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #15
  %679 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %49) #15
  %680 = bitcast %"class.SkSL::String"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %681 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %680, i64 0, i32 1, i32 0
  %682 = load i8, i8* %681, align 1
  %683 = icmp slt i8 %682, 0
  br i1 %683, label %684, label %687

684:                                              ; preds = %678
  %685 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %686 = load i8*, i8** %685, align 8
  call void @_ZdlPv(i8* %686) #14
  br label %687

687:                                              ; preds = %678, %684
  %688 = load i8, i8* %673, align 1
  %689 = icmp slt i8 %688, 0
  br i1 %689, label %690, label %718

690:                                              ; preds = %687
  %691 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i8*, i8** %691, align 8
  call void @_ZdlPv(i8* %692) #14
  br label %718

693:                                              ; preds = %539
  %694 = bitcast %"class.SkSL::String"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %694) #15
  %695 = bitcast %"class.SkSL::String"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %695) #15
  %696 = icmp eq i8 %540, 0
  %697 = bitcast %"class.SkSL::String"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %697, i64 0, i32 1, i32 0
  br i1 %696, label %700, label %699

699:                                              ; preds = %693
  store i8 0, i8* %698, align 1, !alias.scope !61
  store i8 0, i8* %695, align 8, !alias.scope !61
  br label %703

700:                                              ; preds = %693
  store i8 2, i8* %698, align 1, !alias.scope !61
  %701 = bitcast %"class.SkSL::String"* %52 to i16*
  store i16 8236, i16* %701, align 8, !alias.scope !61
  %702 = getelementptr inbounds i8, i8* %695, i64 2
  store i8 0, i8* %702, align 2, !alias.scope !61
  br label %703

703:                                              ; preds = %699, %700
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %51, %"class.SkSL::String"* nonnull %52, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)) #15
  %704 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %51) #15
  %705 = bitcast %"class.SkSL::String"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %706 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %705, i64 0, i32 1, i32 0
  %707 = load i8, i8* %706, align 1
  %708 = icmp slt i8 %707, 0
  br i1 %708, label %709, label %712

709:                                              ; preds = %703
  %710 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load i8*, i8** %710, align 8
  call void @_ZdlPv(i8* %711) #14
  br label %712

712:                                              ; preds = %703, %709
  %713 = load i8, i8* %698, align 1
  %714 = icmp slt i8 %713, 0
  br i1 %714, label %715, label %718

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load i8*, i8** %716, align 8
  call void @_ZdlPv(i8* %717) #14
  br label %718

718:                                              ; preds = %715, %712, %690, %687, %665, %662, %640, %637, %615, %612, %590, %587, %565, %562
  %719 = phi i8* [ %545, %562 ], [ %545, %565 ], [ %570, %587 ], [ %570, %590 ], [ %595, %612 ], [ %595, %615 ], [ %620, %637 ], [ %620, %640 ], [ %645, %662 ], [ %645, %665 ], [ %670, %687 ], [ %670, %690 ], [ %695, %712 ], [ %695, %715 ]
  %720 = phi i8* [ %544, %562 ], [ %544, %565 ], [ %569, %587 ], [ %569, %590 ], [ %594, %612 ], [ %594, %615 ], [ %619, %637 ], [ %619, %640 ], [ %644, %662 ], [ %644, %665 ], [ %669, %687 ], [ %669, %690 ], [ %694, %712 ], [ %694, %715 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %719) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %720) #15
  br label %721

721:                                              ; preds = %718, %539
  %722 = phi i8 [ %540, %539 ], [ 0, %718 ]
  %723 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %724 = load i32, i32* %723, align 4
  %725 = icmp sgt i32 %724, -1
  br i1 %725, label %726, label %771

726:                                              ; preds = %721
  %727 = bitcast %"class.SkSL::String"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %727) #15
  %728 = bitcast %"class.SkSL::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %728) #15
  %729 = bitcast %"class.SkSL::String"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %729) #15
  %730 = icmp eq i8 %722, 0
  %731 = bitcast %"class.SkSL::String"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  br i1 %730, label %734, label %733

733:                                              ; preds = %726
  store i8 0, i8* %732, align 1, !alias.scope !64
  store i8 0, i8* %729, align 8, !alias.scope !64
  br label %737

734:                                              ; preds = %726
  store i8 2, i8* %732, align 1, !alias.scope !64
  %735 = bitcast %"class.SkSL::String"* %55 to i16*
  store i16 8236, i16* %735, align 8, !alias.scope !64
  %736 = getelementptr inbounds i8, i8* %729, i64 2
  store i8 0, i8* %736, align 2, !alias.scope !64
  br label %737

737:                                              ; preds = %733, %734
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %54, %"class.SkSL::String"* nonnull %55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i64 0, i64 0)) #15
  %738 = bitcast %"class.SkSL::String"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %738) #15
  %739 = load i32, i32* %723, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %56, i32 %739) #15
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %53, %"class.SkSL::String"* nonnull %54, %"class.SkSL::String"* nonnull dereferenceable(24) %56) #15
  %740 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %53) #15
  %741 = bitcast %"class.SkSL::String"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %742 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %741, i64 0, i32 1, i32 0
  %743 = load i8, i8* %742, align 1
  %744 = icmp slt i8 %743, 0
  br i1 %744, label %745, label %748

745:                                              ; preds = %737
  %746 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %747 = load i8*, i8** %746, align 8
  call void @_ZdlPv(i8* %747) #14
  br label %748

748:                                              ; preds = %737, %745
  %749 = bitcast %"class.SkSL::String"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %750 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %749, i64 0, i32 1, i32 0
  %751 = load i8, i8* %750, align 1
  %752 = icmp slt i8 %751, 0
  br i1 %752, label %753, label %756

753:                                              ; preds = %748
  %754 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load i8*, i8** %754, align 8
  call void @_ZdlPv(i8* %755) #14
  br label %756

756:                                              ; preds = %748, %753
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %738) #15
  %757 = bitcast %"class.SkSL::String"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %758 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %757, i64 0, i32 1, i32 0
  %759 = load i8, i8* %758, align 1
  %760 = icmp slt i8 %759, 0
  br i1 %760, label %761, label %764

761:                                              ; preds = %756
  %762 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = load i8*, i8** %762, align 8
  call void @_ZdlPv(i8* %763) #14
  br label %764

764:                                              ; preds = %756, %761
  %765 = load i8, i8* %732, align 1
  %766 = icmp slt i8 %765, 0
  br i1 %766, label %767, label %770

767:                                              ; preds = %764
  %768 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load i8*, i8** %768, align 8
  call void @_ZdlPv(i8* %769) #14
  br label %770

770:                                              ; preds = %764, %767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %729) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %728) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #15
  br label %771

771:                                              ; preds = %770, %721
  %772 = phi i8 [ 0, %770 ], [ %722, %721 ]
  %773 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %774 = load i32, i32* %773, align 8
  %775 = icmp sgt i32 %774, -1
  br i1 %775, label %776, label %821

776:                                              ; preds = %771
  %777 = bitcast %"class.SkSL::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %777) #15
  %778 = bitcast %"class.SkSL::String"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %778) #15
  %779 = bitcast %"class.SkSL::String"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %779) #15
  %780 = icmp eq i8 %772, 0
  %781 = bitcast %"class.SkSL::String"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %782 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %781, i64 0, i32 1, i32 0
  br i1 %780, label %784, label %783

783:                                              ; preds = %776
  store i8 0, i8* %782, align 1, !alias.scope !67
  store i8 0, i8* %779, align 8, !alias.scope !67
  br label %787

784:                                              ; preds = %776
  store i8 2, i8* %782, align 1, !alias.scope !67
  %785 = bitcast %"class.SkSL::String"* %59 to i16*
  store i16 8236, i16* %785, align 8, !alias.scope !67
  %786 = getelementptr inbounds i8, i8* %779, i64 2
  store i8 0, i8* %786, align 2, !alias.scope !67
  br label %787

787:                                              ; preds = %783, %784
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %58, %"class.SkSL::String"* nonnull %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.115, i64 0, i64 0)) #15
  %788 = bitcast %"class.SkSL::String"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %788) #15
  %789 = load i32, i32* %773, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %60, i32 %789) #15
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %57, %"class.SkSL::String"* nonnull %58, %"class.SkSL::String"* nonnull dereferenceable(24) %60) #15
  %790 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %57) #15
  %791 = bitcast %"class.SkSL::String"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %792 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %791, i64 0, i32 1, i32 0
  %793 = load i8, i8* %792, align 1
  %794 = icmp slt i8 %793, 0
  br i1 %794, label %795, label %798

795:                                              ; preds = %787
  %796 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %797 = load i8*, i8** %796, align 8
  call void @_ZdlPv(i8* %797) #14
  br label %798

798:                                              ; preds = %787, %795
  %799 = bitcast %"class.SkSL::String"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %800 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %799, i64 0, i32 1, i32 0
  %801 = load i8, i8* %800, align 1
  %802 = icmp slt i8 %801, 0
  br i1 %802, label %803, label %806

803:                                              ; preds = %798
  %804 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %805 = load i8*, i8** %804, align 8
  call void @_ZdlPv(i8* %805) #14
  br label %806

806:                                              ; preds = %798, %803
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %788) #15
  %807 = bitcast %"class.SkSL::String"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %808 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %807, i64 0, i32 1, i32 0
  %809 = load i8, i8* %808, align 1
  %810 = icmp slt i8 %809, 0
  br i1 %810, label %811, label %814

811:                                              ; preds = %806
  %812 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %813 = load i8*, i8** %812, align 8
  call void @_ZdlPv(i8* %813) #14
  br label %814

814:                                              ; preds = %806, %811
  %815 = load i8, i8* %782, align 1
  %816 = icmp slt i8 %815, 0
  br i1 %816, label %817, label %820

817:                                              ; preds = %814
  %818 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load i8*, i8** %818, align 8
  call void @_ZdlPv(i8* %819) #14
  br label %820

820:                                              ; preds = %814, %817
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %779) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %778) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #15
  br label %821

821:                                              ; preds = %820, %771
  %822 = phi i8 [ 0, %820 ], [ %772, %771 ]
  %823 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %824 = load i64, i64* %823, align 8
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %864, label %826

826:                                              ; preds = %821
  %827 = bitcast %"class.SkSL::String"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %827) #15
  %828 = bitcast %"class.SkSL::String"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %828) #15
  %829 = bitcast %"class.SkSL::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %829) #15
  %830 = icmp eq i8 %822, 0
  %831 = bitcast %"class.SkSL::String"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %832 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %831, i64 0, i32 1, i32 0
  br i1 %830, label %834, label %833

833:                                              ; preds = %826
  store i8 0, i8* %832, align 1, !alias.scope !70
  store i8 0, i8* %829, align 8, !alias.scope !70
  br label %837

834:                                              ; preds = %826
  store i8 2, i8* %832, align 1, !alias.scope !70
  %835 = bitcast %"class.SkSL::String"* %63 to i16*
  store i16 8236, i16* %835, align 8, !alias.scope !70
  %836 = getelementptr inbounds i8, i8* %829, i64 2
  store i8 0, i8* %836, align 2, !alias.scope !70
  br label %837

837:                                              ; preds = %833, %834
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %62, %"class.SkSL::String"* nonnull %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i64 0, i64 0)) #15
  %838 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %839 = load i8*, i8** %838, align 8
  %840 = load i64, i64* %823, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %61, %"class.SkSL::String"* nonnull %62, i8* %839, i64 %840) #15
  %841 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %61) #15
  %842 = bitcast %"class.SkSL::String"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %843 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %842, i64 0, i32 1, i32 0
  %844 = load i8, i8* %843, align 1
  %845 = icmp slt i8 %844, 0
  br i1 %845, label %846, label %849

846:                                              ; preds = %837
  %847 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %848 = load i8*, i8** %847, align 8
  call void @_ZdlPv(i8* %848) #14
  br label %849

849:                                              ; preds = %837, %846
  %850 = bitcast %"class.SkSL::String"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %851 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %850, i64 0, i32 1, i32 0
  %852 = load i8, i8* %851, align 1
  %853 = icmp slt i8 %852, 0
  br i1 %853, label %854, label %857

854:                                              ; preds = %849
  %855 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load i8*, i8** %855, align 8
  call void @_ZdlPv(i8* %856) #14
  br label %857

857:                                              ; preds = %849, %854
  %858 = load i8, i8* %832, align 1
  %859 = icmp slt i8 %858, 0
  br i1 %859, label %860, label %863

860:                                              ; preds = %857
  %861 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load i8*, i8** %861, align 8
  call void @_ZdlPv(i8* %862) #14
  br label %863

863:                                              ; preds = %857, %860
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %829) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %828) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %827) #15
  br label %864

864:                                              ; preds = %821, %863
  %865 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %866 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %865, i64 0, i32 1, i32 0
  %867 = load i8, i8* %866, align 1
  %868 = icmp slt i8 %867, 0
  %869 = load i64, i64* %67, align 8
  %870 = zext i8 %867 to i64
  %871 = select i1 %868, i64 %869, i64 %870
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %891, label %873

873:                                              ; preds = %864
  %874 = bitcast %"class.SkSL::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %874) #15
  %875 = bitcast %"class.SkSL::String"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %875) #15
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %0) #15
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %64, %"class.SkSL::String"* nonnull %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.118, i64 0, i64 0)) #15
  %876 = load i8, i8* %866, align 1
  %877 = icmp slt i8 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %873
  %879 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %879) #14
  br label %880

880:                                              ; preds = %873, %878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %874, i64 24, i1 false) #15
  %881 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %882 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %881, i64 0, i32 1, i32 0
  store i8 0, i8* %882, align 1
  store i8 0, i8* %874, align 8
  %883 = bitcast %"class.SkSL::String"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %884 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %883, i64 0, i32 1, i32 0
  %885 = load i8, i8* %884, align 1
  %886 = icmp slt i8 %885, 0
  br i1 %886, label %887, label %890

887:                                              ; preds = %880
  %888 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %889 = load i8*, i8** %888, align 8
  call void @_ZdlPv(i8* %889) #14
  br label %890

890:                                              ; preds = %880, %887
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %875) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %874) #15
  br label %891

891:                                              ; preds = %864, %890
  %892 = load i32, i32* %413, align 8
  %893 = and i32 %892, 16
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %897, label %895

895:                                              ; preds = %891
  %896 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.119, i64 0, i64 0)) #15
  br label %897

897:                                              ; preds = %891, %895
  ret void
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #5

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #5

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.SkSL::String"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.96"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.SkSL::String"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #15
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #15
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #15, !range !73
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %67, label %41

41:                                               ; preds = %34
  %42 = add i64 %22, -1
  br label %43

43:                                               ; preds = %41, %63
  %44 = phi %"struct.std::__1::__hash_node_base"* [ %46, %63 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %42
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %63, label %67

63:                                               ; preds = %48, %60
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.SkSL::String"*
  %66 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %65, %"class.SkSL::String"* dereferenceable(24) %1) #15
  br i1 %66, label %156, label %43

67:                                               ; preds = %43, %60, %34, %5
  %68 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %60 ], [ %35, %43 ]
  %69 = call i8* @_Znwm(i64 48) #14, !noalias !74
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %72 = load i8*, i8** %71, align 8, !noalias !74
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %72, i64 24, i1 false) #15, !noalias !74
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #15, !noalias !74
  %73 = getelementptr inbounds i8, i8* %69, i64 40
  %74 = bitcast i8* %73 to i32*
  store i32 0, i32* %74, align 8, !noalias !74
  %75 = getelementptr inbounds i8, i8* %69, i64 8
  %76 = bitcast i8* %75 to i64*
  store i64 %20, i64* %76, align 8, !noalias !74
  %77 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %77, align 8, !noalias !74
  %78 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  %81 = uitofp i64 %80 to float
  %82 = uitofp i64 %22 to float
  %83 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %84 = load float, float* %83, align 4
  %85 = fmul float %84, %82
  %86 = fcmp olt float %85, %81
  %87 = or i1 %23, %86
  br i1 %87, label %88, label %111

88:                                               ; preds = %67
  %89 = shl i64 %22, 1
  %90 = icmp ult i64 %22, 3
  %91 = call i64 @llvm.ctpop.i64(i64 %22) #15, !range !73
  %92 = icmp ugt i64 %91, 1
  %93 = or i1 %90, %92
  %94 = zext i1 %93 to i64
  %95 = or i64 %89, %94
  %96 = fdiv float %81, %84
  %97 = call float @llvm.ceil.f32(float %96) #15
  %98 = fptoui float %97 to i64
  %99 = icmp ult i64 %95, %98
  %100 = select i1 %99, i64 %98, i64 %95
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %100)
  %101 = load i64, i64* %21, align 8
  %102 = call i64 @llvm.ctpop.i64(i64 %101) #15, !range !73
  %103 = icmp ugt i64 %102, 1
  br i1 %103, label %107, label %104

104:                                              ; preds = %88
  %105 = add i64 %101, -1
  %106 = and i64 %105, %20
  br label %111

107:                                              ; preds = %88
  %108 = icmp ult i64 %20, %101
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = urem i64 %20, %101
  br label %111

111:                                              ; preds = %109, %107, %104, %67
  %112 = phi i64 [ %22, %67 ], [ %101, %104 ], [ %101, %107 ], [ %101, %109 ]
  %113 = phi i64 [ %68, %67 ], [ %106, %104 ], [ %20, %107 ], [ %110, %109 ]
  %114 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %115, i64 %113
  %117 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base"* %117, null
  br i1 %118, label %119, label %145

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %121 = bitcast %"struct.std::__1::__hash_node_base"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast i8* %69 to i64*
  store i64 %122, i64* %123, align 8
  %124 = bitcast %"struct.std::__1::__hash_node_base"* %120 to i8**
  store i8* %69, i8** %124, align 8
  store %"struct.std::__1::__hash_node_base"* %120, %"struct.std::__1::__hash_node_base"** %116, align 8
  %125 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %77, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base"* %125, null
  br i1 %126, label %152, label %127

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %125, i64 1
  %129 = bitcast %"struct.std::__1::__hash_node_base"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = call i64 @llvm.ctpop.i64(i64 %112) #15, !range !73
  %132 = icmp ugt i64 %131, 1
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = add i64 %112, -1
  %135 = and i64 %130, %134
  br label %140

136:                                              ; preds = %127
  %137 = icmp ult i64 %130, %112
  br i1 %137, label %140, label %138

138:                                              ; preds = %136
  %139 = urem i64 %130, %112
  br label %140

140:                                              ; preds = %133, %136, %138
  %141 = phi i64 [ %135, %133 ], [ %139, %138 ], [ %130, %136 ]
  %142 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, i64 %141
  %144 = bitcast %"struct.std::__1::__hash_node_base"** %143 to i8**
  br label %150

145:                                              ; preds = %111
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast i8* %69 to i64*
  store i64 %147, i64* %148, align 8
  %149 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i8**
  br label %150

150:                                              ; preds = %140, %145
  %151 = phi i8** [ %149, %145 ], [ %144, %140 ]
  store i8* %69, i8** %151, align 8
  br label %152

152:                                              ; preds = %150, %119
  %153 = bitcast i8* %69 to %"struct.std::__1::__hash_node_base"*
  %154 = load i64, i64* %78, align 8
  %155 = add i64 %154, 1
  store i64 %155, i64* %78, align 8
  br label %156

156:                                              ; preds = %63, %152
  %157 = phi i8 [ 1, %152 ], [ 0, %63 ]
  %158 = phi %"struct.std::__1::__hash_node_base"* [ %153, %152 ], [ %46, %63 ]
  %159 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %158, 0
  %160 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %159, i8 %157, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %160
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !73
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !73
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !73
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #8 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #5

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %141, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !77

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %149, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !73
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %139, %135 ]
  %81 = phi i64 [ %71, %77 ], [ %137, %135 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %136, %135 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %135, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"class.SkSL::String"*
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to %"class.SkSL::String"*
  %109 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %108) #15
  br i1 %109, label %115, label %121

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %135

111:                                              ; preds = %115
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %112 to %"class.SkSL::String"*
  %114 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %106, %"class.SkSL::String"* dereferenceable(24) %113) #15
  br i1 %114, label %115, label %121

115:                                              ; preds = %104, %111
  %116 = phi %"struct.std::__1::__hash_node_base"** [ %118, %111 ], [ %101, %104 ]
  %117 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base"* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %115, %111, %104, %100
  %122 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %104 ], [ %117, %111 ], [ %117, %115 ]
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %126, i64 %93
  %128 = bitcast %"struct.std::__1::__hash_node_base"** %127 to i64**
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %123, align 8
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %93
  %133 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %133, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %134, align 8
  br label %135

135:                                              ; preds = %92, %121, %110
  %136 = phi %"struct.std::__1::__hash_node_base"* [ %80, %110 ], [ %82, %121 ], [ %80, %92 ]
  %137 = phi i64 [ %93, %110 ], [ %81, %121 ], [ %81, %92 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base"* %139, null
  br i1 %140, label %149, label %79

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %142, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"struct.std::__1::__hash_node_base"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #14
  br label %147

147:                                              ; preds = %141, %145
  %148 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %135, %70, %35, %147
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #13

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE(%"struct.SkSL::ASTNode"*, %"class.std::__1::vector.45"*, i32, i32) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %0, i64 0, i32 0
  store %"class.std::__1::vector.45"* %1, %"class.std::__1::vector.45"** %5, align 8
  %6 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %0, i64 0, i32 3
  store i32 %3, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %0, i64 0, i32 4, i32 0
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %0, i64 0, i32 5, i32 0
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %0, i64 0, i32 6, i32 0
  store i32 -1, i32* %10, align 4
  %11 = icmp ult i32 %3, 34
  br i1 %11, label %12, label %22

12:                                               ; preds = %4
  %13 = zext i32 %3 to i64
  %14 = lshr i64 14155624197, %13
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = sext i32 %3 to i64
  %19 = getelementptr inbounds [34 x i32], [34 x i32]* @switch.table._ZN4SkSL7ASTNodeC2EPNSt3__16vectorIS0_NS1_9allocatorIS0_EEEEiNS0_4KindE, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %0, i64 0, i32 1, i32 1
  store i32 %20, i32* %21, align 8
  br label %22

22:                                               ; preds = %12, %4, %17
  ret void
}

declare void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, %"class.SkSL::Symbol"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.19"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.19"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.19"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.19"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.19"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.19"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.19"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.19"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.19"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.19"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.19"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.19"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.19"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.19"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.19"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !79

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.19"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.19"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.19"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.19"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.19"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.19"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.19"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.19"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.19"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.19"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.19"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.19"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.19"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.19"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.19"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.19"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.19"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.19"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.19"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.19"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.19"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.19"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.19"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.19"*, %"class.std::__1::unique_ptr.19"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.19"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.19"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.19"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.19"*
  %138 = icmp eq %"class.std::__1::unique_ptr.19"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.19"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.19"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkSL::String"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #15
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #15
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %68, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #15, !range !73
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %68, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %66, %64 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %23, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %43
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %19
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %19
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %64, label %68

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"class.SkSL::String"*
  %63 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %62, %"class.SkSL::String"* dereferenceable(24) %1) #15
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base"* %66, null
  br i1 %67, label %68, label %44

68:                                               ; preds = %60, %64, %57, %38, %2, %31
  %69 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %60 ], [ null, %64 ], [ null, %57 ]
  ret %"struct.std::__1::__hash_node_base"* %69
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4SkSL6Parser21modifiersWithDefaultsEi: argument 0"}
!5 = distinct !{!5, !"_ZN4SkSL6Parser21modifiersWithDefaultsEi"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4SkSL4Type11displayNameEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!12 = distinct !{!12, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!15 = distinct !{!15, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!18 = distinct !{!18, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!21 = distinct !{!21, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!24 = distinct !{!24, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!27 = distinct !{!27, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!30 = distinct !{!30, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!33 = distinct !{!33, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!36 = distinct !{!36, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!39 = distinct !{!39, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!42 = distinct !{!42, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!45 = distinct !{!45, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!48 = distinct !{!48, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!51 = distinct !{!51, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!54 = distinct !{!54, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!57 = distinct !{!57, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!60 = distinct !{!60, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!63 = distinct !{!63, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!66 = distinct !{!66, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!69 = distinct !{!69, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!72 = distinct !{!72, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!73 = !{i64 0, i64 65}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS3_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!76 = distinct !{!76, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_6Parser11LayoutTokenEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS3_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!77 = distinct !{!77, !78}
!78 = !{!"llvm.loop.unroll.disable"}
!79 = distinct !{!79, !78}
