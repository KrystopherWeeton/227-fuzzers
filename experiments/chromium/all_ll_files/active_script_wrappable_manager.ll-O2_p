; ModuleID = '../../third_party/blink/renderer/platform/bindings/active_script_wrappable_manager.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/active_script_wrappable_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.175", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.110", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::Worklist.41"* }
%"class.blink::Worklist.41" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist.48"* }
%"class.blink::Worklist.48" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.90", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64 }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { float }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.113", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.122" }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"struct.std::__1::pair.139"*, i32, i32 }
%"struct.std::__1::pair.139" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.41"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.48"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.155" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.175" = type { %"struct.std::__1::__atomic_base.176" }
%"struct.std::__1::__atomic_base.176" = type { %"struct.std::__1::__cxx_atomic_impl.177" }
%"struct.std::__1::__cxx_atomic_impl.177" = type { %"struct.std::__1::__cxx_atomic_base_impl.178" }
%"struct.std::__1::__cxx_atomic_base_impl.178" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.183" }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.188", %"class.blink::FreeList", %"class.WTF::Vector.193" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.188" = type { %"class.WTF::VectorBuffer.189" }
%"class.WTF::VectorBuffer.189" = type { %"class.WTF::VectorBufferBase.190" }
%"class.WTF::VectorBufferBase.190" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%class.anon = type { %"class.blink::LivenessBroker" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_25ActiveScriptWrappableBaseEEEbPKT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_25ActiveScriptWrappableBaseEEENS3_6MemberIS6_EEEELj0ENS3_13HeapAllocatorEE7EraseAtEjj = comdat any

$_ZN5blink13HeapAllocator16NotifyNewObjectsINSt3__14pairINS_14UntracedMemberIKNS_25ActiveScriptWrappableBaseEEENS_6MemberIS6_EEEEN3WTF12VectorTraitsISA_EEEEvPT_m = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_14UntracedMemberIKNS_25ActiveScriptWrappableBaseEEENS_6MemberIS6_EEEEN3WTF12VectorTraitsISA_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink26WeakCallbackMethodDelegateINS_28ActiveScriptWrappableManagerEXadL_ZNS1_45CleanupInactiveAndClearActiveScriptWrappablesERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str = private unnamed_addr constant [28 x i8] c"position + length <= size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28ActiveScriptWrappableManager31RecomputeActiveScriptWrappablesENS0_13RecomputeModeE(%"class.blink::ActiveScriptWrappableManager"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %66

8:                                                ; preds = %4, %2
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #6
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #6
  br label %15

15:                                               ; preds = %8, %13
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %63, %15
  %30 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  %33 = load i64, i64* %19, align 8
  %34 = add i64 %33, -1
  store i64 %34, i64* %19, align 8
  br label %66

35:                                               ; preds = %15, %63
  %36 = phi %"struct.std::__1::pair"* [ %64, %63 ], [ %23, %15 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::ActiveScriptWrappableBase"*, %"class.blink::ActiveScriptWrappableBase"** %37, align 8
  %39 = bitcast %"class.blink::ActiveScriptWrappableBase"* %38 to i1 (%"class.blink::ActiveScriptWrappableBase"*)***
  %40 = load i1 (%"class.blink::ActiveScriptWrappableBase"*)**, i1 (%"class.blink::ActiveScriptWrappableBase"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::ActiveScriptWrappableBase"*)*, i1 (%"class.blink::ActiveScriptWrappableBase"*)** %40, i64 3
  %42 = load i1 (%"class.blink::ActiveScriptWrappableBase"*)*, i1 (%"class.blink::ActiveScriptWrappableBase"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::ActiveScriptWrappableBase"* %38) #6
  br i1 %43, label %63, label %44

44:                                               ; preds = %35
  %45 = load i1 (%"class.blink::ActiveScriptWrappableBase"*)**, i1 (%"class.blink::ActiveScriptWrappableBase"*)*** %39, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::ActiveScriptWrappableBase"*)*, i1 (%"class.blink::ActiveScriptWrappableBase"*)** %45, i64 4
  %47 = load i1 (%"class.blink::ActiveScriptWrappableBase"*)*, i1 (%"class.blink::ActiveScriptWrappableBase"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::ActiveScriptWrappableBase"* %38) #6
  br i1 %48, label %49, label %63

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::ActiveScriptWrappableBase"*, %"class.blink::ActiveScriptWrappableBase"** %51, align 8
  %53 = icmp eq %"class.blink::ActiveScriptWrappableBase"* %52, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %49
  %55 = load %"class.blink::ActiveScriptWrappableBase"*, %"class.blink::ActiveScriptWrappableBase"** %37, align 8
  %56 = ptrtoint %"class.blink::ActiveScriptWrappableBase"* %55 to i64
  %57 = bitcast %"class.blink::Member"* %50 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.blink::ActiveScriptWrappableBase"* %55 to i8*
  %62 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #6
  br label %63

63:                                               ; preds = %49, %35, %60, %54, %44
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %65 = icmp eq %"struct.std::__1::pair"* %64, %27
  br i1 %65, label %29, label %35

66:                                               ; preds = %4, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28ActiveScriptWrappableManager29IterateActiveScriptWrappablesEPNS_7VisitorE(%"class.blink::ActiveScriptWrappableManager"* nocapture, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink28ActiveScriptWrappableManager31RecomputeActiveScriptWrappablesENS0_13RecomputeModeE(%"class.blink::ActiveScriptWrappableManager"* %0, i32 1)
  %3 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %14

12:                                               ; preds = %85, %2
  %13 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 1
  store i64 0, i64* %13, align 8
  ret void

14:                                               ; preds = %10, %85
  %15 = phi %"struct.std::__1::pair"* [ %4, %10 ], [ %86, %85 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1
  %17 = bitcast %"class.blink::Member"* %16 to i64*
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %85, label %20

20:                                               ; preds = %14
  %21 = inttoptr i64 %18 to i8*
  %22 = and i64 %18, -131072
  %23 = inttoptr i64 %22 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 4138
  %25 = load i8, i8* %24, align 2
  %26 = icmp eq i8 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %23, i64 4160
  br label %67

29:                                               ; preds = %20
  %30 = getelementptr inbounds i8, i8* %23, i64 4096
  %31 = bitcast i8* %30 to %"class.blink::NormalPage"*
  %32 = getelementptr inbounds i8, i8* %23, i64 4400
  %33 = bitcast i8* %32 to i8**
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %18, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %31, i64 0, i32 2, i32 0, i32 1, i64 %38
  %40 = load atomic i8, i8* %39 acquire, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 2, %42
  %44 = trunc i32 %43 to i8
  %45 = add i8 %44, -1
  %46 = and i8 %45, %40
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %29, %48
  %49 = phi i64 [ %50, %48 ], [ %38, %29 ]
  %50 = add i64 %49, -1
  %51 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %31, i64 0, i32 2, i32 0, i32 1, i64 %50
  %52 = load atomic i8, i8* %51 acquire, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %48, label %54

54:                                               ; preds = %48, %29
  %55 = phi i64 [ %38, %29 ], [ %50, %48 ]
  %56 = phi i8 [ %46, %29 ], [ %52, %48 ]
  %57 = zext i8 %56 to i32
  %58 = tail call i32 @llvm.ctlz.i32(i32 %57, i1 true) #6, !range !3
  %59 = add nsw i32 %58, -24
  %60 = shl i64 %55, 3
  %61 = or i64 %60, 7
  %62 = sext i32 %59 to i64
  %63 = sub i64 %61, %62
  %64 = shl i64 %63, 3
  %65 = load i8*, i8** %33, align 16
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  br label %67

67:                                               ; preds = %54, %27
  %68 = phi i8* [ %28, %27 ], [ %66, %54 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 8
  %70 = getelementptr inbounds i8, i8* %68, i64 4
  %71 = bitcast i8* %70 to i16*
  %72 = load atomic i16, i16* %71 acquire, align 2
  %73 = lshr i16 %72, 2
  %74 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %75 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %74, i64 0, i32 0
  %76 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %75, align 8
  %77 = zext i16 %73 to i64
  %78 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %76, i64 %77
  %79 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %78, align 8
  %80 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %79, i64 0, i32 0
  %81 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %80, align 8
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %11, align 8
  %83 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, i64 5
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, align 8
  tail call void %84(%"class.blink::Visitor"* %1, i8* nonnull %21, i8* %69, void (%"class.blink::Visitor"*, i8*)* %81) #6
  br label %85

85:                                               ; preds = %14, %67
  store atomic i64 0, i64* %17 monotonic, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  %87 = icmp eq %"struct.std::__1::pair"* %86, %8
  br i1 %87, label %12, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28ActiveScriptWrappableManager45CleanupInactiveAndClearActiveScriptWrappablesERKNS_14LivenessBrokerE(%"class.blink::ActiveScriptWrappableManager"*, %"class.blink::LivenessBroker"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.anon, align 1
  %4 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 %9
  %11 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  br label %15

15:                                               ; preds = %22, %13
  %16 = phi %"struct.std::__1::pair"* [ %6, %13 ], [ %23, %22 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 1
  %18 = bitcast %"class.blink::Member"* %17 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::ActiveScriptWrappableBase"*, %"class.blink::ActiveScriptWrappableBase"** %19, align 8
  %21 = call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_25ActiveScriptWrappableBaseEEEbPKT_(%"class.blink::LivenessBroker"* nonnull %14, %"class.blink::ActiveScriptWrappableBase"* %20) #6
  br i1 %21, label %22, label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %24 = icmp eq %"struct.std::__1::pair"* %23, %10
  br i1 %24, label %60, label %15

25:                                               ; preds = %15, %2
  %26 = phi %"struct.std::__1::pair"* [ %6, %2 ], [ %16, %15 ]
  %27 = icmp eq %"struct.std::__1::pair"* %26, %10
  br i1 %27, label %60, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %30 = icmp eq %"struct.std::__1::pair"* %29, %10
  br i1 %30, label %60, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  br label %33

33:                                               ; preds = %56, %31
  %34 = phi %"struct.std::__1::pair"* [ %29, %31 ], [ %58, %56 ]
  %35 = phi %"struct.std::__1::pair"* [ %26, %31 ], [ %34, %56 ]
  %36 = phi %"struct.std::__1::pair"* [ %26, %31 ], [ %57, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1, i32 1
  %38 = bitcast %"class.blink::Member"* %37 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::ActiveScriptWrappableBase"*, %"class.blink::ActiveScriptWrappableBase"** %39, align 8
  %41 = call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_25ActiveScriptWrappableBaseEEEbPKT_(%"class.blink::LivenessBroker"* nonnull %32, %"class.blink::ActiveScriptWrappableBase"* %40) #6
  br i1 %41, label %42, label %56

42:                                               ; preds = %33
  %43 = bitcast %"struct.std::__1::pair"* %34 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"struct.std::__1::pair"* %36 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %47 = load i64, i64* %38, align 8
  %48 = bitcast %"class.blink::Member"* %46 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %42
  %52 = inttoptr i64 %47 to i8*
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #6
  br label %54

54:                                               ; preds = %51, %42
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  br label %56

56:                                               ; preds = %54, %33
  %57 = phi %"struct.std::__1::pair"* [ %36, %33 ], [ %55, %54 ]
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  %59 = icmp eq %"struct.std::__1::pair"* %58, %10
  br i1 %59, label %60, label %33

60:                                               ; preds = %22, %56, %25, %28
  %61 = phi %"struct.std::__1::pair"* [ %10, %25 ], [ %26, %28 ], [ %57, %56 ], [ %10, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  %62 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %62, i64 %64
  %66 = ptrtoint %"struct.std::__1::pair"* %62 to i64
  %67 = ptrtoint %"struct.std::__1::pair"* %61 to i64
  %68 = sub i64 %67, %66
  %69 = lshr exact i64 %68, 4
  %70 = trunc i64 %69 to i32
  %71 = ptrtoint %"struct.std::__1::pair"* %65 to i64
  %72 = sub i64 %71, %67
  %73 = lshr exact i64 %72, 4
  %74 = trunc i64 %73 to i32
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_25ActiveScriptWrappableBaseEEENS3_6MemberIS6_EEEELj0ENS3_13HeapAllocatorEE7EraseAtEjj(%"class.WTF::Vector"* %4, i32 %70, i32 %74) #6
  %75 = getelementptr inbounds %"class.blink::ActiveScriptWrappableManager", %"class.blink::ActiveScriptWrappableManager"* %0, i64 0, i32 1
  store i64 0, i64* %75, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28ActiveScriptWrappableManager5TraceEPNS_7VisitorE(%"class.blink::ActiveScriptWrappableManager"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ActiveScriptWrappableManager"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.blink::ActiveScriptWrappableManager"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #6
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_14UntracedMemberIKNS_25ActiveScriptWrappableBaseEEENS_6MemberIS6_EEEEN3WTF12VectorTraitsISA_EEEEE5TraceEPNS_7VisitorEPKv) #6
  br label %17

17:                                               ; preds = %2, %11
  %18 = bitcast %"class.blink::ActiveScriptWrappableManager"* %0 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %20 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %20, i64 2
  %22 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink26WeakCallbackMethodDelegateINS_28ActiveScriptWrappableManagerEXadL_ZNS1_45CleanupInactiveAndClearActiveScriptWrappablesERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv, i8* %18) #6
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_25ActiveScriptWrappableBaseEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::ActiveScriptWrappableBase"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::ActiveScriptWrappableBase"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #6, !range !3
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_25ActiveScriptWrappableBaseEEENS3_6MemberIS6_EEEELj0ENS3_13HeapAllocatorEE7EraseAtEjj(%"class.WTF::Vector"*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %133, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = add i32 %2, %1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ugt i32 %11, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %10, align 8
  br label %26

17:                                               ; preds = %8
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %11) #6
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i8* %18, i8* %19) #6
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %10, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2085, %"class.logging::CheckOpResult"* nonnull %5) #6
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  br label %26

26:                                               ; preds = %16, %17, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %27, align 8
  %29 = zext i32 %1 to i64
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 %29
  %31 = zext i32 %2 to i64
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %31
  %33 = load i32, i32* %12, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 %34
  %36 = icmp ne %"struct.std::__1::pair"* %30, null
  %37 = icmp ne %"struct.std::__1::pair"* %32, null
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %123, !prof !4

39:                                               ; preds = %26
  %40 = icmp ult %"struct.std::__1::pair"* %32, %35
  br i1 %40, label %41, label %115

41:                                               ; preds = %39
  %42 = shl nuw nsw i64 %34, 4
  %43 = add nuw nsw i64 %31, %29
  %44 = shl nuw nsw i64 %43, 4
  %45 = xor i64 %44, -1
  %46 = add nsw i64 %42, %45
  %47 = lshr i64 %46, 4
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %41, %51
  %52 = phi %"struct.std::__1::pair"* [ %64, %51 ], [ %30, %41 ]
  %53 = phi %"struct.std::__1::pair"* [ %63, %51 ], [ %32, %41 ]
  %54 = phi i64 [ %65, %51 ], [ %49, %41 ]
  %55 = bitcast %"struct.std::__1::pair"* %53 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.std::__1::pair"* %52 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 0, i32 1
  %60 = bitcast %"class.blink::Member"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.blink::Member"* %58 to i64*
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 1
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 1
  %65 = add i64 %54, -1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %51, !llvm.loop !5

67:                                               ; preds = %51, %41
  %68 = phi %"struct.std::__1::pair"* [ %30, %41 ], [ %64, %51 ]
  %69 = phi %"struct.std::__1::pair"* [ %32, %41 ], [ %63, %51 ]
  %70 = icmp ult i64 %46, 48
  br i1 %70, label %115, label %71

71:                                               ; preds = %67, %71
  %72 = phi %"struct.std::__1::pair"* [ %113, %71 ], [ %68, %67 ]
  %73 = phi %"struct.std::__1::pair"* [ %112, %71 ], [ %69, %67 ]
  %74 = bitcast %"struct.std::__1::pair"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"struct.std::__1::pair"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 0, i32 1
  %79 = bitcast %"class.blink::Member"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::Member"* %77 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 1
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 1
  %84 = bitcast %"struct.std::__1::pair"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"struct.std::__1::pair"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 1, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 1, i32 1
  %89 = bitcast %"class.blink::Member"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.blink::Member"* %87 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 2
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 2
  %94 = bitcast %"struct.std::__1::pair"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"struct.std::__1::pair"* %93 to i64*
  store atomic i64 %95, i64* %96 monotonic, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 2, i32 1
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 2, i32 1
  %99 = bitcast %"class.blink::Member"* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.blink::Member"* %97 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 3
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 3
  %104 = bitcast %"struct.std::__1::pair"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"struct.std::__1::pair"* %103 to i64*
  store atomic i64 %105, i64* %106 monotonic, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 3, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 3, i32 1
  %109 = bitcast %"class.blink::Member"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.blink::Member"* %107 to i64*
  store atomic i64 %110, i64* %111 monotonic, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %73, i64 4
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 4
  %114 = icmp ult %"struct.std::__1::pair"* %112, %35
  br i1 %114, label %71, label %115

115:                                              ; preds = %67, %71, %39
  %116 = ptrtoint %"struct.std::__1::pair"* %35 to i64
  %117 = ptrtoint %"struct.std::__1::pair"* %32 to i64
  %118 = sub i64 %116, %117
  %119 = ashr exact i64 %118, 4
  call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINSt3__14pairINS_14UntracedMemberIKNS_25ActiveScriptWrappableBaseEEENS_6MemberIS6_EEEEN3WTF12VectorTraitsISA_EEEEvPT_m(%"struct.std::__1::pair"* nonnull %30, i64 %119) #6
  %120 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %27, align 8
  %121 = load i32, i32* %12, align 4
  %122 = zext i32 %121 to i64
  br label %123

123:                                              ; preds = %26, %115
  %124 = phi i64 [ %34, %26 ], [ %122, %115 ]
  %125 = phi %"struct.std::__1::pair"* [ %28, %26 ], [ %120, %115 ]
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %125, i64 %124
  %127 = sub nsw i64 0, %31
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 %127
  %129 = bitcast %"struct.std::__1::pair"* %128 to i8*
  %130 = shl nuw nsw i64 %31, 4
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %129, i64 %130) #6
  %131 = load i32, i32* %12, align 4
  %132 = sub i32 %131, %2
  store i32 %132, i32* %12, align 4
  br label %133

133:                                              ; preds = %3, %123
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator16NotifyNewObjectsINSt3__14pairINS_14UntracedMemberIKNS_25ActiveScriptWrappableBaseEEENS_6MemberIS6_EEEEN3WTF12VectorTraitsISA_EEEEvPT_m(%"struct.std::__1::pair"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.std::__1::pair"* %0 to i8*
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %111, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #6
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #6
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 9
  %18 = load i8, i8* %17, align 1, !range !7
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %111, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %108, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %103, %25
  %28 = phi i8* [ %3, %25 ], [ %104, %103 ]
  %29 = phi i64 [ %1, %25 ], [ %30, %103 ]
  %30 = add i64 %29, -1
  %31 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %26, align 8
  %32 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %31, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds i8, i8* %28, i64 8
  %34 = bitcast i8* %33 to i64*
  %35 = load atomic i64, i64* %34 monotonic, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %103, label %37

37:                                               ; preds = %27
  %38 = inttoptr i64 %35 to i8*
  %39 = and i64 %35, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4138
  %42 = load i8, i8* %41, align 2
  %43 = icmp eq i8 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 4160
  br label %84

46:                                               ; preds = %37
  %47 = getelementptr inbounds i8, i8* %40, i64 4096
  %48 = bitcast i8* %47 to %"class.blink::NormalPage"*
  %49 = getelementptr inbounds i8, i8* %40, i64 4400
  %50 = bitcast i8* %49 to i8**
  %51 = bitcast i8* %49 to i64*
  %52 = load i64, i64* %51, align 16
  %53 = sub i64 %35, %52
  %54 = lshr i64 %53, 3
  %55 = lshr i64 %53, 6
  %56 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %48, i64 0, i32 2, i32 0, i32 1, i64 %55
  %57 = load atomic i8, i8* %56 acquire, align 1
  %58 = trunc i64 %54 to i32
  %59 = and i32 %58, 7
  %60 = shl i32 2, %59
  %61 = trunc i32 %60 to i8
  %62 = add i8 %61, -1
  %63 = and i8 %62, %57
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %71

65:                                               ; preds = %46, %65
  %66 = phi i64 [ %67, %65 ], [ %55, %46 ]
  %67 = add i64 %66, -1
  %68 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %48, i64 0, i32 2, i32 0, i32 1, i64 %67
  %69 = load atomic i8, i8* %68 acquire, align 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %65, label %71

71:                                               ; preds = %65, %46
  %72 = phi i64 [ %55, %46 ], [ %67, %65 ]
  %73 = phi i8 [ %63, %46 ], [ %69, %65 ]
  %74 = zext i8 %73 to i32
  %75 = tail call i32 @llvm.ctlz.i32(i32 %74, i1 true) #6, !range !3
  %76 = add nsw i32 %75, -24
  %77 = shl i64 %72, 3
  %78 = or i64 %77, 7
  %79 = sext i32 %76 to i64
  %80 = sub i64 %78, %79
  %81 = shl i64 %80, 3
  %82 = load i8*, i8** %50, align 16
  %83 = getelementptr inbounds i8, i8* %82, i64 %81
  br label %84

84:                                               ; preds = %71, %44
  %85 = phi i8* [ %45, %44 ], [ %83, %71 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 8
  %87 = getelementptr inbounds i8, i8* %85, i64 4
  %88 = bitcast i8* %87 to i16*
  %89 = load atomic i16, i16* %88 acquire, align 2
  %90 = lshr i16 %89, 2
  %91 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %92 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %91, i64 0, i32 0
  %93 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %92, align 8
  %94 = zext i16 %90 to i64
  %95 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %93, i64 %94
  %96 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %95, align 8
  %97 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %96, i64 0, i32 0
  %98 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %97, align 8
  %99 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %100 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %100, i64 5
  %102 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, align 8
  tail call void %102(%"class.blink::Visitor"* %32, i8* nonnull %38, i8* %86, void (%"class.blink::Visitor"*, i8*)* %98) #6
  br label %103

103:                                              ; preds = %27, %84
  %104 = getelementptr inbounds i8, i8* %28, i64 16
  %105 = icmp eq i64 %30, 0
  br i1 %105, label %106, label %27

106:                                              ; preds = %103
  %107 = load i64, i64* %21, align 8
  br label %108

108:                                              ; preds = %106, %20
  %109 = phi i64 [ %107, %106 ], [ %23, %20 ]
  %110 = add i64 %109, -1
  store i64 %110, i64* %21, align 8
  br label %111

111:                                              ; preds = %2, %13, %108
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_14UntracedMemberIKNS_25ActiveScriptWrappableBaseEEENS_6MemberIS6_EEEEN3WTF12VectorTraitsISA_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_14UntracedMemberIKNS_25ActiveScriptWrappableBaseEEENS_6MemberIS6_EEEEN3WTF12VectorTraitsISA_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #6
  br i1 %28, label %128, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.std::__1::pair"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %128, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %52, %125
  %55 = phi i64 [ %126, %125 ], [ 0, %52 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %125, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = and i64 %58, -131072
  %63 = inttoptr i64 %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 4138
  %65 = load i8, i8* %64, align 2
  %66 = icmp eq i8 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = getelementptr inbounds i8, i8* %63, i64 4160
  br label %107

69:                                               ; preds = %60
  %70 = getelementptr inbounds i8, i8* %63, i64 4096
  %71 = bitcast i8* %70 to %"class.blink::NormalPage"*
  %72 = getelementptr inbounds i8, i8* %63, i64 4400
  %73 = bitcast i8* %72 to i8**
  %74 = bitcast i8* %72 to i64*
  %75 = load i64, i64* %74, align 16
  %76 = sub i64 %58, %75
  %77 = lshr i64 %76, 3
  %78 = lshr i64 %76, 6
  %79 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %71, i64 0, i32 2, i32 0, i32 1, i64 %78
  %80 = load atomic i8, i8* %79 acquire, align 1
  %81 = trunc i64 %77 to i32
  %82 = and i32 %81, 7
  %83 = shl i32 2, %82
  %84 = trunc i32 %83 to i8
  %85 = add i8 %84, -1
  %86 = and i8 %85, %80
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %69, %88
  %89 = phi i64 [ %90, %88 ], [ %78, %69 ]
  %90 = add i64 %89, -1
  %91 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %71, i64 0, i32 2, i32 0, i32 1, i64 %90
  %92 = load atomic i8, i8* %91 acquire, align 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %88, label %94

94:                                               ; preds = %88, %69
  %95 = phi i64 [ %78, %69 ], [ %90, %88 ]
  %96 = phi i8 [ %86, %69 ], [ %92, %88 ]
  %97 = zext i8 %96 to i32
  %98 = tail call i32 @llvm.ctlz.i32(i32 %97, i1 true) #6, !range !3
  %99 = add nsw i32 %98, -24
  %100 = shl i64 %95, 3
  %101 = or i64 %100, 7
  %102 = sext i32 %99 to i64
  %103 = sub i64 %101, %102
  %104 = shl i64 %103, 3
  %105 = load i8*, i8** %73, align 16
  %106 = getelementptr inbounds i8, i8* %105, i64 %104
  br label %107

107:                                              ; preds = %94, %67
  %108 = phi i8* [ %68, %67 ], [ %106, %94 ]
  %109 = getelementptr inbounds i8, i8* %108, i64 8
  %110 = getelementptr inbounds i8, i8* %108, i64 4
  %111 = bitcast i8* %110 to i16*
  %112 = load atomic i16, i16* %111 acquire, align 2
  %113 = lshr i16 %112, 2
  %114 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %115 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %114, i64 0, i32 0
  %116 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %115, align 8
  %117 = zext i16 %113 to i64
  %118 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %116, i64 %117
  %119 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %118, align 8
  %120 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %119, i64 0, i32 0
  %121 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %120, align 8
  %122 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %123 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, i64 5
  %124 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %123, align 8
  tail call void %124(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* %109, void (%"class.blink::Visitor"*, i8*)* %121) #6
  br label %125

125:                                              ; preds = %54, %107
  %126 = add nuw nsw i64 %55, 1
  %127 = icmp eq i64 %126, %50
  br i1 %127, label %128, label %54

128:                                              ; preds = %125, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26WeakCallbackMethodDelegateINS_28ActiveScriptWrappableManagerEXadL_ZNS1_45CleanupInactiveAndClearActiveScriptWrappablesERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ActiveScriptWrappableManager"*
  tail call void @_ZN5blink28ActiveScriptWrappableManager45CleanupInactiveAndClearActiveScriptWrappablesERKNS_14LivenessBrokerE(%"class.blink::ActiveScriptWrappableManager"* %3, %"class.blink::LivenessBroker"* dereferenceable(1) undef)
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i32 24, i32 33}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{i8 0, i8 2}
