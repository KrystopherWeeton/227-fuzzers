; ModuleID = '../../third_party/blink/renderer/core/layout/ng/exclusions/ng_layout_opportunity.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/exclusions/ng_layout_opportunity.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted", %"class.WTF::Vector", %"class.WTF::Vector" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.0*, i32, i32 }
%class.scoped_refptr.0 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr" }
%"class.WTF::RefCounted.1" = type { %"class.base::RefCounted.2" }
%"class.base::RefCounted.2" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.858, %"class.WTF::Vector.859", %"class.std::__1::unique_ptr.864", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.889, %"class.blink::Persistent.890" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.3, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.3 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.692", %"class.std::__1::unique_ptr.694" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.256", %"class.blink::DataRef.404", %"class.blink::DataRef.408", %"class.blink::DataRef.608", %"class.blink::DataRef.675", %"class.blink::DataRef.679", %"class.blink::DataRef.683", %"class.blink::DataRef.687", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.5", %"class.blink::DataRef.7", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.5" = type { %"class.base::RefCounted.6" }
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.7" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.9", %"class.blink::Font" }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.40 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.14, %class.scoped_refptr.20, %class.scoped_refptr.30, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.39 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.13 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.13 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1291", [4 x i8] }>
%"class.WTF::RefCounted.1291" = type { %"class.base::RefCounted.1292" }
%"class.base::RefCounted.1292" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.14 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.18", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.15" }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17" }
%"class.WTF::VectorBufferBase.17" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.18" = type { %"class.base::RefCounted.19" }
%"class.base::RefCounted.19" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.20 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.21", %"class.WTF::RefCounted.28", [4 x i8] }>
%"class.blink::FontSettings.21" = type { %"class.WTF::Vector.22" }
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.24" }
%"class.WTF::VectorBufferBase.24" = type { %"class.blink::FontTagValuePair.25"*, i32, i32 }
%"class.blink::FontTagValuePair.25" = type { i32, float }
%"class.WTF::RefCounted.28" = type { %"class.base::RefCounted.29" }
%"class.base::RefCounted.29" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.30 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.31", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.36, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.31" = type { %"class.base::RefCounted.32" }
%"class.base::RefCounted.32" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.36 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.37", [4 x i8] }>
%"class.WTF::RefCounted.37" = type { %"class.base::RefCounted.38" }
%"class.base::RefCounted.38" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.39 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.40 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.41", %"class.WTF::Vector.43", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.41" = type { %"class.base::RefCounted.42" }
%"class.base::RefCounted.42" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.43" = type { %"class.WTF::VectorBuffer.44" }
%"class.WTF::VectorBuffer.44" = type { %"class.WTF::VectorBufferBase.45", [8 x i8] }
%"class.WTF::VectorBufferBase.45" = type { %class.scoped_refptr.46*, i32, i32 }
%class.scoped_refptr.46 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.47", [4 x i8] }>
%"class.WTF::RefCounted.47" = type { %"class.base::RefCounted.48" }
%"class.base::RefCounted.48" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.63", %class.scoped_refptr.68, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.47" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.51 }
%union.anon.51 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.62, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.52" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.52" }>
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.57" }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.62 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.66, %class.scoped_refptr.66 }
%class.scoped_refptr.66 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.68 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.69", [4 x i8] }>
%"class.WTF::RefCounted.69" = type { %"class.base::RefCounted.70" }
%"class.base::RefCounted.70" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.71", i32, [4 x i8], %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.225", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.243", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.250", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.189", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl.110" }
%"struct.std::__1::__cxx_atomic_impl.110" = type { %"struct.std::__1::__cxx_atomic_base_impl.111" }
%"struct.std::__1::__cxx_atomic_base_impl.111" = type { i64 }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::Worklist.118"* }
%"class.blink::Worklist.118" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist.125"* }
%"class.blink::Worklist.125" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::Worklist.132"* }
%"class.blink::Worklist.132" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::Worklist.139"* }
%"class.blink::Worklist.139" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist.146"* }
%"class.blink::Worklist.146" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.107" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.167", %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.183", [4 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169", %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { i64 }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { float }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.192", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.201" }
%"class.WTF::Vector.201" = type { %"class.WTF::VectorBuffer.202" }
%"class.WTF::VectorBuffer.202" = type { %"class.WTF::VectorBufferBase.203" }
%"class.WTF::VectorBufferBase.203" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.217" }
%"class.WTF::VectorBuffer.217" = type { %"class.WTF::VectorBufferBase.218" }
%"class.WTF::VectorBufferBase.218" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.231" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.118"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.125"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.132"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.139"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.146"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1284", i64 }
%"class.std::__1::vector.1284" = type { %"class.std::__1::__vector_base.1285" }
%"class.std::__1::__vector_base.1285" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1286" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.250" = type { %"struct.std::__1::__atomic_base.251" }
%"struct.std::__1::__atomic_base.251" = type { %"struct.std::__1::__cxx_atomic_impl.252" }
%"struct.std::__1::__cxx_atomic_impl.252" = type { %"struct.std::__1::__cxx_atomic_base_impl.253" }
%"struct.std::__1::__cxx_atomic_base_impl.253" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.254 }
%class.scoped_refptr.254 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.52" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.57" }
%"class.blink::Length" = type <{ %union.anon.255, i8, i8, i8, i8 }>
%union.anon.255 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.256" = type { %class.scoped_refptr.257 }
%class.scoped_refptr.257 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.258", [4 x i8], %"class.blink::DataRef.260", %"class.blink::DataRef.292", %"class.WTF::Vector.296", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.301, %class.scoped_refptr.310, %"class.blink::Persistent.318", %"class.blink::Persistent.320", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.258" = type { %"class.base::RefCounted.259" }
%"class.base::RefCounted.259" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.260" = type { %class.scoped_refptr.261 }
%class.scoped_refptr.261 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.262", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.264, %class.scoped_refptr.271, %"class.blink::Persistent.282", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.262" = type { %"class.base::RefCounted.263" }
%"class.base::RefCounted.263" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.264 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.265", %"class.WTF::Vector.266" }
%"class.base::RefCountedThreadSafe.265" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.266" = type { %"class.WTF::VectorBuffer.267" }
%"class.WTF::VectorBuffer.267" = type { %"class.WTF::VectorBufferBase.268" }
%"class.WTF::VectorBufferBase.268" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.271 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.272", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.272" = type { %"class.base::RefCounted.273" }
%"class.base::RefCounted.273" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1430 }
%class.scoped_refptr.1430 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1431", %"class.WTF::Vector.591", %"class.WTF::Vector.1433", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1431" = type { %"class.base::RefCounted.1432" }
%"class.base::RefCounted.1432" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1433" = type { %"class.WTF::VectorBuffer.1434" }
%"class.WTF::VectorBuffer.1434" = type { %"class.WTF::VectorBufferBase.1435" }
%"class.WTF::VectorBufferBase.1435" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1436 }
%union.anon.1436 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.276" }
%"class.blink::PersistentBase.276" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.281" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.277" }
%"class.WTF::HashMap.277" = type { %"class.WTF::HashTable.278" }
%"class.WTF::HashTable.278" = type <{ %"struct.WTF::KeyValuePair.280"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.280" = type opaque
%"class.blink::PersistentNodePtr.281" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.282" = type { %"class.blink::PersistentBase.283" }
%"class.blink::PersistentBase.283" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.281" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.286" }
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.292" = type { %class.scoped_refptr.293 }
%class.scoped_refptr.293 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.294", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.294" = type { %"class.base::RefCounted.295" }
%"class.base::RefCounted.295" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.301 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.302", %"class.WTF::Vector.304" }
%"class.WTF::RefCounted.302" = type { %"class.base::RefCounted.303" }
%"class.base::RefCounted.303" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.304" = type { %"class.WTF::VectorBuffer.305" }
%"class.WTF::VectorBuffer.305" = type { %"class.WTF::VectorBufferBase.306" }
%"class.WTF::VectorBufferBase.306" = type { %"struct.std::__1::pair.307"*, i32, i32 }
%"struct.std::__1::pair.307" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.310 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.311", [4 x i8], %"class.WTF::Vector.313" }
%"class.WTF::RefCounted.311" = type { %"class.base::RefCounted.312" }
%"class.base::RefCounted.312" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.313" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.315", [28 x i8] }>
%"class.WTF::VectorBufferBase.315" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.318" = type { %"class.blink::PersistentBase.319" }
%"class.blink::PersistentBase.319" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.281" }
%"class.blink::Persistent.320" = type { %"class.blink::PersistentBase.321" }
%"class.blink::PersistentBase.321" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.281" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.324", %"class.blink::Member.402" }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.326", %"class.blink::Member.338", %"class.blink::Member.332", %"class.blink::Member.340", %"class.blink::Member.340", %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::Member.386", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.391", %"class.blink::HeapVector.393" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.330", %"class.blink::Member.330" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.330", %"class.blink::Member.332", %"class.blink::Member.330", %"class.blink::Member.330", %"class.blink::Member.334" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::Node"* }
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.919", %"class.WTF::Vector.919", i8, i32, %"class.blink::Member.926", %"class.blink::Member.928", %"class.blink::Member.930", %"class.blink::Member.932", %"class.blink::Member.934", %"class.blink::Member.936", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.944", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.950", %"class.blink::Member.952", %"class.blink::Member.399", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.955", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.375", %"class.blink::Member.355", %"class.blink::Member.979", %"class.blink::Member.355", %"class.blink::Member.355", %"class.blink::Member.355", %"class.blink::UserActionElementSet", %"class.blink::Member.988", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.996", i16, i8, %"class.blink::Member.1003", %"class.blink::Member.1005", %"class.blink::Member.1007", %"class.blink::Member.1009", %"class.blink::TextLinkColors", %"class.blink::Member.1011", i8, [7 x i8], %"class.blink::HeapHashMap.1013", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.355", %"class.WTF::Vector.1020", %"class.blink::Member.1025", %"class.blink::Member.1027", i8, %"class.blink::Member.355", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1029", %"class.blink::HeapVector.1031", %"class.std::__1::unique_ptr.1039", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1045", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1058", %"class.WTF::Vector.1060", i8, i8, %"class.std::__1::unique_ptr.1065", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.375", %"class.blink::HeapVector.1071", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1079", i8, i32, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1085", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1087", %"class.WTF::HashMap.1089", %"class.blink::Member.1094", %"class.blink::Member.1096", %"class.blink::Member.1098", %"class.blink::Member.1100", %"class.blink::Member.338", %"class.blink::Member.338", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1102", i8, i32, %"class.blink::Member.1109", %"class.blink::Member.1111", i32, %"class.blink::Member.1113", %"class.blink::Member.1115", %"class.blink::Member.1117", %"class.std::__1::unique_ptr.1119", i64, %"class.std::__1::unique_ptr.1125", i32, i32, %"class.blink::Member.1140", %"class.blink::Member.1142", %"class.blink::Member.1144", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1146", %"class.WTF::Vector.1148", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1153", %"class.blink::Member.1160", %"class.std::__1::unique_ptr.1162", %"class.blink::Member.1168", i8, i8, %"class.WTF::String", %"class.blink::Member.1170", i8, [7 x i8], %"class.blink::HeapHashMap.1172", %"class.blink::HeapObserverSet", %"class.blink::Member.1186", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1188", i32, i8, i8, %"class.blink::WeakMember.1190", %"class.blink::Member.1191" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.912" }
%"class.blink::HeapHashMap.912" = type { %"class.WTF::HashMap.915" }
%"class.WTF::HashMap.915" = type { %"class.WTF::HashTable.916" }
%"class.WTF::HashTable.916" = type <{ %"struct.WTF::KeyValuePair.918"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.918" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.919" = type { %"class.WTF::VectorBuffer.920" }
%"class.WTF::VectorBuffer.920" = type { %"class.WTF::VectorBufferBase.921" }
%"class.WTF::VectorBufferBase.921" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.922 }
%class.scoped_refptr.922 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.923", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.923" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1204", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1253", i32, i8, [3 x i8], %"class.blink::HeapVector.1255", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1263", %"class.blink::Member.1265", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1274", %"class.blink::Member.1280", %"class.blink::Member.1282", i8, [7 x i8] }>
%"class.blink::Supplementable.1204" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1205" }
%"class.blink::HeapHashMap.1205" = type { %"class.WTF::HashMap.1208" }
%"class.WTF::HashMap.1208" = type { %"class.WTF::HashTable.1209" }
%"class.WTF::HashTable.1209" = type <{ %"struct.WTF::KeyValuePair.1211"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1211" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1220" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1212" }
%"class.blink::HeapObserverSet.1212" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1213" }
%"class.blink::HeapHashSet.1213" = type { %"class.WTF::HashSet.1216" }
%"class.WTF::HashSet.1216" = type { %"class.WTF::HashTable.1217" }
%"class.WTF::HashTable.1217" = type <{ %"class.blink::WeakMember.1219"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1219" = type opaque
%"class.blink::Supplementable.1220" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1221" }
%"class.blink::HeapHashMap.1221" = type { %"class.WTF::HashMap.1224" }
%"class.WTF::HashMap.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"struct.WTF::KeyValuePair.1227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1227" = type { i8*, %"class.blink::Member.1421" }
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1423" }
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1228, %"class.std::__1::unique_ptr.1237", %"class.std::__1::unique_ptr.1237", %"class.std::__1::unique_ptr.1243", %"class.std::__1::unique_ptr.1243", %"class.blink::Member.928", i32, [4 x i8], %"class.WTF::HashSet.1249", i32, i32 }
%class.scoped_refptr.1228 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1229", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1231", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1236 }
%"class.WTF::RefCounted.1229" = type { %"class.base::RefCounted.1230" }
%"class.base::RefCounted.1230" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1231" = type { %"class.absl::optional_internal::optional_data.1232" }
%"class.absl::optional_internal::optional_data.1232" = type { %"class.absl::optional_internal::optional_data_base.1233" }
%"class.absl::optional_internal::optional_data_base.1233" = type { %"class.absl::optional_internal::optional_data_dtor_base.1234" }
%"class.absl::optional_internal::optional_data_dtor_base.1234" = type { i8, %union.anon.1235 }
%union.anon.1235 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1236 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1237" = type { %"class.std::__1::__compressed_pair.1238" }
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1243" = type { %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1249" = type { %"class.WTF::HashTable.1250" }
%"class.WTF::HashTable.1250" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1255" = type { %"class.WTF::Vector.1258" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.blink::Member.1261"*, i32, i32 }
%"class.blink::Member.1261" = type opaque
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1267", i32, i32 }
%"class.blink::HeapHashMap.1267" = type { %"class.WTF::HashMap.1270" }
%"class.WTF::HashMap.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"struct.WTF::KeyValuePair.1273"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1273" = type opaque
%"class.std::__1::unique_ptr.1274" = type { %"class.std::__1::__compressed_pair.1275" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1276" }
%"struct.std::__1::__compressed_pair_elem.1276" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1280" = type { %"class.blink::MemberBase.1281" }
%"class.blink::MemberBase.1281" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1282" = type { %"class.blink::MemberBase.1283" }
%"class.blink::MemberBase.1283" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.944" = type { %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.938" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.938" = type { %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"class.blink::KURL"* }
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.954 }
%class.scoped_refptr.954 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.955" = type { %"class.WTF::VectorBuffer.956" }
%"class.WTF::VectorBuffer.956" = type { %"class.WTF::VectorBufferBase.957" }
%"class.WTF::VectorBufferBase.957" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.958 }
%class.scoped_refptr.958 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.959", i32, i32, %"class.blink::Persistent.961" }
%"class.WTF::RefCounted.959" = type { %"class.base::RefCounted.960" }
%"class.base::RefCounted.960" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.961" = type { %"class.blink::PersistentBase.962" }
%"class.blink::PersistentBase.962" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.281" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.965" }
%"class.blink::HeapHashMap.965" = type { %"class.WTF::HashMap.968" }
%"class.WTF::HashMap.968" = type { %"class.WTF::HashTable.969" }
%"class.WTF::HashTable.969" = type <{ %"struct.WTF::KeyValuePair.971"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.971" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.981" }
%"class.blink::HeapHashMap.981" = type { %"class.WTF::HashMap.984" }
%"class.WTF::HashMap.984" = type { %"class.WTF::HashTable.985" }
%"class.WTF::HashTable.985" = type <{ %"struct.WTF::KeyValuePair.987"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.987" = type opaque
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.992" }
%"class.WTF::HashSet.992" = type { %"class.WTF::HashTable.993" }
%"class.WTF::HashTable.993" = type <{ %"class.blink::WeakMember.995"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.995" = type opaque
%"class.blink::HeapHashSet.996" = type { %"class.WTF::HashSet.999" }
%"class.WTF::HashSet.999" = type { %"class.WTF::HashTable.1000" }
%"class.WTF::HashTable.1000" = type <{ %"class.blink::WeakMember.1002"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1002" = type opaque
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1013" = type { %"class.WTF::HashMap.1016" }
%"class.WTF::HashMap.1016" = type { %"class.WTF::HashTable.1017" }
%"class.WTF::HashTable.1017" = type <{ %"struct.WTF::KeyValuePair.1019"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1019" = type opaque
%"class.WTF::Vector.1020" = type { %"class.WTF::VectorBuffer.1021" }
%"class.WTF::VectorBuffer.1021" = type { %"class.WTF::VectorBufferBase.1022" }
%"class.WTF::VectorBufferBase.1022" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.360" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.357 }
%class.scoped_refptr.357 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.358", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.358" = type { %"class.base::RefCounted.359" }
%"class.base::RefCounted.359" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.364", %"class.blink::Member.366", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.364" = type { %"class.WTF::SingleThreadedBitField.365" }
%"class.WTF::SingleThreadedBitField.365" = type { i32 }
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.368 }
%class.scoped_refptr.368 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.369", %"class.WTF::AtomicString", %"class.WTF::Vector.371" }
%"class.WTF::RefCounted.369" = type { %"class.base::RefCounted.370" }
%"class.base::RefCounted.370" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.371" = type { %"class.WTF::VectorBuffer.372" }
%"class.WTF::VectorBuffer.372" = type { %"class.WTF::VectorBufferBase.298", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1031" = type { %"class.WTF::Vector.1034" }
%"class.WTF::Vector.1034" = type { %"class.WTF::VectorBuffer.1035" }
%"class.WTF::VectorBuffer.1035" = type { %"class.WTF::VectorBufferBase.1036" }
%"class.WTF::VectorBufferBase.1036" = type { %"class.blink::Member.1037"*, i32, i32 }
%"class.blink::Member.1037" = type opaque
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1045" = type { %"class.WTF::HashSet.1048" }
%"class.WTF::HashSet.1048" = type { %"class.WTF::HashTable.1049" }
%"class.WTF::HashTable.1049" = type <{ %"class.blink::WeakMember.1051"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1051" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1052", i32, [4 x i8] }>
%"class.WTF::Vector.1052" = type { %"class.WTF::VectorBuffer.1053" }
%"class.WTF::VectorBuffer.1053" = type { %"class.WTF::VectorBufferBase.1054" }
%"class.WTF::VectorBufferBase.1054" = type { %"struct.std::__1::pair.1055"*, i32, i32 }
%"struct.std::__1::pair.1055" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1060" = type { %"class.WTF::VectorBuffer.1061" }
%"class.WTF::VectorBuffer.1061" = type { %"class.WTF::VectorBufferBase.1062" }
%"class.WTF::VectorBufferBase.1062" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.375" = type { %"class.WTF::Vector.378" }
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.380" }
%"class.WTF::VectorBufferBase.380" = type { %"class.blink::Member.355"*, i32, i32 }
%"class.blink::HeapVector.1071" = type { %"class.WTF::Vector.1074" }
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { %"class.blink::Member.1077"*, i32, i32 }
%"class.blink::Member.1077" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.338" }
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1089" = type { %"class.WTF::HashTable.1090" }
%"class.WTF::HashTable.1090" = type <{ %"struct.WTF::KeyValuePair.1093"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1093" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.978", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.975, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.975 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.976" }>
%"class.base::RefCountedThreadSafe.976" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.977 }
%class.scoped_refptr.977 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.978" = type { %"class.blink::MemberBase.339" }
%"class.blink::HeapHashSet.1102" = type { %"class.WTF::HashSet.1105" }
%"class.WTF::HashSet.1105" = type { %"class.WTF::HashTable.1106" }
%"class.WTF::HashTable.1106" = type <{ %"class.blink::Member.1108"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1108" = type opaque
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1113" = type { %"class.blink::MemberBase.1114" }
%"class.blink::MemberBase.1114" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1125" = type { %"class.std::__1::__compressed_pair.1126" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1128", %"class.WTF::HashSet.1128", %"class.WTF::HashSet.1128", %"class.WTF::HashSet.1128", %"class.WTF::HashSet.1128", %"class.WTF::HashSet.1128", i32, [4 x i8], %"class.WTF::HashMap.1132", %"class.WTF::HashMap.1132", %"class.WTF::HashMap.1132", %"class.WTF::HashMap.1132", %"class.WTF::HashMap.1132", %"class.WTF::HashMap.1132", %"class.WTF::HashMap.1132", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1128" = type { %"class.WTF::HashTable.1129" }
%"class.WTF::HashTable.1129" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1132" = type { %"class.WTF::HashTable.1133" }
%"class.WTF::HashTable.1133" = type <{ %"struct.WTF::KeyValuePair.1136"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1136" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1142" = type { %"class.blink::MemberBase.1143" }
%"class.blink::MemberBase.1143" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1148" = type { %"class.WTF::VectorBuffer.1149" }
%"class.WTF::VectorBuffer.1149" = type { %"class.WTF::VectorBufferBase.1150" }
%"class.WTF::VectorBufferBase.1150" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1153" = type { %"class.WTF::HashMap.1156" }
%"class.WTF::HashMap.1156" = type { %"class.WTF::HashTable.1157" }
%"class.WTF::HashTable.1157" = type <{ %"struct.WTF::KeyValuePair.1159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1159" = type opaque
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1162" = type { %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1172" = type { %"class.WTF::HashMap.1175" }
%"class.WTF::HashMap.1175" = type { %"class.WTF::HashTable.1176" }
%"class.WTF::HashTable.1176" = type <{ %"struct.WTF::KeyValuePair.1178"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1178" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1179" }
%"class.blink::HeapHashSet.1179" = type { %"class.WTF::HashSet.1182" }
%"class.WTF::HashSet.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"class.blink::WeakMember.1185"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1185" = type opaque
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.338", %"class.blink::HeapHashSet.1195", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1202", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1195" = type { %"class.WTF::HashSet.1198" }
%"class.WTF::HashSet.1198" = type { %"class.WTF::HashTable.1199" }
%"class.WTF::HashTable.1199" = type <{ %"class.blink::Member.1201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1201" = type opaque
%"class.blink::HeapTaskRunnerTimer.1202" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1203", { i64, i64 } }
%"class.blink::WeakMember.1203" = type { %"class.blink::MemberBase.1189" }
%"class.blink::WeakMember.1190" = type { %"class.blink::MemberBase.331" }
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.344" }
%"class.blink::HeapHashMap.344" = type { %"class.WTF::HashMap.347" }
%"class.WTF::HashMap.347" = type { %"class.WTF::HashTable.348" }
%"class.WTF::HashTable.348" = type <{ %"struct.WTF::KeyValuePair.350"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.350" = type { %"class.WTF::AtomicString", %"class.blink::Member.351" }
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.355", i32, %"class.blink::HeapVector.375" }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.388" }
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::HeapHashMap.390"* }
%"class.blink::HeapHashMap.390" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.393" = type { %"class.WTF::Vector.396" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.blink::Member.399"*, i32, i32 }
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.404" = type { %class.scoped_refptr.405 }
%class.scoped_refptr.405 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.406", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.406" = type { %"class.base::RefCounted.407" }
%"class.base::RefCounted.407" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.408" = type { %class.scoped_refptr.409 }
%class.scoped_refptr.409 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.410", [4 x i8], %"class.blink::DataRef.412", %"class.blink::DataRef.478", %"class.blink::TransformOperations", %class.scoped_refptr.310, %"class.blink::Persistent.602", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.410" = type { %"class.base::RefCounted.411" }
%"class.base::RefCounted.411" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.412" = type { %class.scoped_refptr.413 }
%class.scoped_refptr.413 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.414", [4 x i8], %"class.blink::DataRef.416", %"class.blink::Persistent.454", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.414" = type { %"class.base::RefCounted.415" }
%"class.base::RefCounted.415" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.416" = type { %class.scoped_refptr.417 }
%class.scoped_refptr.417 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.418", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.436, %class.scoped_refptr.439, %class.scoped_refptr.442, %class.scoped_refptr.445, %class.scoped_refptr.446, %class.scoped_refptr.447, %"class.blink::Persistent.454", %"class.blink::Persistent.469", %"class.absl::optional.473", %"class.absl::optional.473", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.418" = type { %"class.base::RefCounted.419" }
%"class.base::RefCounted.419" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.420", %"class.std::__1::unique_ptr.425" }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.428", %"class.WTF::Vector.420", i32, i32 }
%"class.WTF::Vector.428" = type { %"class.WTF::VectorBuffer.429" }
%"class.WTF::VectorBuffer.429" = type { %"class.WTF::VectorBufferBase.430" }
%"class.WTF::VectorBufferBase.430" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.436 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.437", [4 x i8] }>
%"class.WTF::RefCounted.437" = type { %"class.base::RefCounted.438" }
%"class.base::RefCounted.438" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.439 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.440", [4 x i8] }>
%"class.WTF::RefCounted.440" = type { %"class.base::RefCounted.441" }
%"class.base::RefCounted.441" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.442 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.443" }>
%"class.WTF::RefCounted.443" = type { %"class.base::RefCounted.444" }
%"class.base::RefCounted.444" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.445 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.446 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.447 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.448", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.448" = type { %"class.base::RefCounted.449" }
%"class.base::RefCounted.449" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.450" }
%"class.blink::DataRef.450" = type { %class.scoped_refptr.451 }
%class.scoped_refptr.451 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.318", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.452" }
%"class.WTF::RefCounted.452" = type { %"class.base::RefCounted.453" }
%"class.base::RefCounted.453" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.469" = type { %"class.blink::PersistentBase.470" }
%"class.blink::PersistentBase.470" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.281" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.439, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.473" = type { %"class.absl::optional_internal::optional_data.474" }
%"class.absl::optional_internal::optional_data.474" = type { %"class.absl::optional_internal::optional_data_base.475" }
%"class.absl::optional_internal::optional_data_base.475" = type { %"class.absl::optional_internal::optional_data_dtor_base.476" }
%"class.absl::optional_internal::optional_data_dtor_base.476" = type { i8, [3 x i8], %union.anon.477 }
%union.anon.477 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.454" = type { %"class.blink::PersistentBase.455" }
%"class.blink::PersistentBase.455" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.281" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.458" }
%"class.blink::HeapVector.458" = type { %"class.WTF::Vector.461" }
%"class.WTF::Vector.461" = type { %"class.WTF::VectorBuffer.462" }
%"class.WTF::VectorBuffer.462" = type { %"class.WTF::VectorBufferBase.463" }
%"class.WTF::VectorBufferBase.463" = type { %"class.blink::Member.464"*, i32, i32 }
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.478" = type { %class.scoped_refptr.479 }
%class.scoped_refptr.479 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.480", %"class.blink::DataRef.482", %"class.blink::DataRef.486", %"class.blink::DataRef.495", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.563", %"class.std::__1::unique_ptr.574", %"class.std::__1::unique_ptr.585", %"class.WTF::Vector.591", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.480" = type { %"class.base::RefCounted.481" }
%"class.base::RefCounted.481" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.482" = type { %class.scoped_refptr.483 }
%class.scoped_refptr.483 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.484", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.484" = type { %"class.base::RefCounted.485" }
%"class.base::RefCounted.485" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.486" = type { %class.scoped_refptr.487 }
%class.scoped_refptr.487 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.488", [4 x i8], %"class.WTF::Vector.490", i8, [7 x i8] }>
%"class.WTF::RefCounted.488" = type { %"class.base::RefCounted.489" }
%"class.base::RefCounted.489" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.490" = type { %"class.WTF::VectorBuffer.491" }
%"class.WTF::VectorBuffer.491" = type { %"class.WTF::VectorBufferBase.492" }
%"class.WTF::VectorBufferBase.492" = type { i32*, i32, i32 }
%"class.blink::DataRef.495" = type { %class.scoped_refptr.496 }
%class.scoped_refptr.496 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.497", [4 x i8], %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.499", %"class.WTF::HashMap.504", %"class.WTF::HashMap.504", %"class.WTF::HashMap.504", %"class.WTF::HashMap.504", %"class.WTF::HashMap.509", %"class.WTF::Vector.420", %"class.WTF::Vector.420", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.497" = type { %"class.base::RefCounted.498" }
%"class.base::RefCounted.498" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"struct.WTF::KeyValuePair.503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.503" = type { %"class.WTF::String", %"class.WTF::Vector.1425" }
%"class.WTF::Vector.1425" = type { %"class.WTF::VectorBuffer.1426" }
%"class.WTF::VectorBuffer.1426" = type { %"class.WTF::VectorBufferBase.1427" }
%"class.WTF::VectorBufferBase.1427" = type { i64*, i32, i32 }
%"class.WTF::HashMap.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"struct.WTF::KeyValuePair.508"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.508" = type { i64, %"class.WTF::Vector.591" }
%"class.WTF::HashMap.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.517" }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.521" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1300", %"class.absl::optional.1300", %"class.absl::optional.1300" }
%"class.absl::optional.1300" = type { %"class.absl::optional_internal::optional_data.1301" }
%"class.absl::optional_internal::optional_data.1301" = type { %"class.absl::optional_internal::optional_data_base.1302" }
%"class.absl::optional_internal::optional_data_base.1302" = type { %"class.absl::optional_internal::optional_data_dtor_base.1303" }
%"class.absl::optional_internal::optional_data_dtor_base.1303" = type { i8, %union.anon.1304 }
%union.anon.1304 = type { i32 }
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.296", %"class.WTF::Vector.540", %"class.WTF::Vector.528", %"class.WTF::Vector.545", %"class.WTF::Vector.550", %"class.WTF::Vector.555" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.528", %"class.WTF::Vector.528", %"class.WTF::Vector.533" }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %class.scoped_refptr.536*, i32, i32 }
%class.scoped_refptr.536 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.537" }
%"class.base::RefCountedThreadSafe.537" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { double*, i32, i32 }
%"class.WTF::Vector.545" = type { %"class.WTF::VectorBuffer.546" }
%"class.WTF::VectorBuffer.546" = type { %"class.WTF::VectorBufferBase.547" }
%"class.WTF::VectorBufferBase.547" = type { i32*, i32, i32 }
%"class.WTF::Vector.550" = type { %"class.WTF::VectorBuffer.551" }
%"class.WTF::VectorBuffer.551" = type { %"class.WTF::VectorBufferBase.552" }
%"class.WTF::VectorBufferBase.552" = type { i32*, i32, i32 }
%"class.WTF::Vector.555" = type { %"class.WTF::VectorBuffer.556" }
%"class.WTF::VectorBuffer.556" = type { %"class.WTF::VectorBufferBase.557" }
%"class.WTF::VectorBufferBase.557" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.566" }
%"class.WTF::Vector.566" = type { %"class.WTF::VectorBuffer.567" }
%"class.WTF::VectorBuffer.567" = type { %"class.WTF::VectorBufferBase.568" }
%"class.WTF::VectorBufferBase.568" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.577" }
%"class.WTF::Vector.577" = type { %"class.WTF::VectorBuffer.578" }
%"class.WTF::VectorBuffer.578" = type { %"class.WTF::VectorBufferBase.579" }
%"class.WTF::VectorBufferBase.579" = type { %"class.blink::Persistent.318"*, i32, i32 }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.318", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.596" }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { %class.scoped_refptr.599*, i32, i32 }
%class.scoped_refptr.599 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.443", [4 x i8] }>
%"class.blink::Persistent.602" = type { %"class.blink::PersistentBase.603" }
%"class.blink::PersistentBase.603" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.281" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.606" }
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.608" = type { %class.scoped_refptr.609 }
%class.scoped_refptr.609 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.610", [4 x i8], %"class.blink::DataRef.612", %"class.blink::DataRef.616", %"class.blink::DataRef.637", %"class.blink::DataRef.655", %"class.blink::DataRef.667", %"class.blink::DataRef.671", %class.scoped_refptr.641, i32, [4 x i8] }>
%"class.WTF::RefCounted.610" = type { %"class.base::RefCounted.611" }
%"class.base::RefCounted.611" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.612" = type { %class.scoped_refptr.613 }
%class.scoped_refptr.613 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.614", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.614" = type { %"class.base::RefCounted.615" }
%"class.base::RefCounted.615" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.616" = type { %class.scoped_refptr.617 }
%class.scoped_refptr.617 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.618", %class.scoped_refptr.620, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.618" = type { %"class.base::RefCounted.619" }
%"class.base::RefCounted.619" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.620 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.621", %"class.std::__1::unique_ptr.627", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.440" }>
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.630, i32, %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", i8, i8 }>
%class.sk_sp.630 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.631, %class.SkTDArray.632, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.52" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.631 = type { i8*, i32, i32 }
%class.SkTDArray.632 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.633 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.52", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.633 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.250", [3 x i8] }
%"class.blink::DataRef.637" = type { %class.scoped_refptr.638 }
%class.scoped_refptr.638 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.639", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.639" = type { %"class.base::RefCounted.640" }
%"class.base::RefCounted.640" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.641, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.657", [4 x i8], %class.scoped_refptr.659, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.base::RefCountedData.660"* }
%"class.base::RefCountedData.660" = type { %"class.base::RefCountedThreadSafe.661", %"class.WTF::Vector.662" }
%"class.base::RefCountedThreadSafe.661" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.662" = type { %"class.WTF::VectorBuffer.663" }
%"class.WTF::VectorBuffer.663" = type { %"class.WTF::VectorBufferBase.664" }
%"class.WTF::VectorBufferBase.664" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.667" = type { %class.scoped_refptr.668 }
%class.scoped_refptr.668 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.669", %class.scoped_refptr.641, %class.scoped_refptr.641, %class.scoped_refptr.641 }
%"class.WTF::RefCounted.669" = type { %"class.base::RefCounted.670" }
%"class.base::RefCounted.670" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.671" = type { %class.scoped_refptr.672 }
%class.scoped_refptr.672 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.673", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.673" = type { %"class.base::RefCounted.674" }
%"class.base::RefCounted.674" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.641 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.642", %"class.blink::Persistent.644", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.642" = type { %"class.base::RefCounted.643" }
%"class.base::RefCounted.643" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.644" = type { %"class.blink::PersistentBase.645" }
%"class.blink::PersistentBase.645" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.281" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.355", %"class.blink::HeapHashMap.648" }
%"class.blink::HeapHashMap.648" = type { %"class.WTF::HashMap.651" }
%"class.WTF::HashMap.651" = type { %"class.WTF::HashTable.652" }
%"class.WTF::HashTable.652" = type <{ %"struct.WTF::KeyValuePair.654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.654" = type opaque
%"class.blink::DataRef.675" = type { %class.scoped_refptr.676 }
%class.scoped_refptr.676 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.677", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.677" = type { %"class.base::RefCounted.678" }
%"class.base::RefCounted.678" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.679" = type { %class.scoped_refptr.680 }
%class.scoped_refptr.680 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.681", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.683" = type { %class.scoped_refptr.684 }
%class.scoped_refptr.684 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.685", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.685" = type { %"class.base::RefCounted.686" }
%"class.base::RefCounted.686" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.687" = type { %class.scoped_refptr.688 }
%class.scoped_refptr.688 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.689", %class.scoped_refptr.691 }
%"class.WTF::RefCounted.689" = type { %"class.base::RefCounted.690" }
%"class.base::RefCounted.690" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.691 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.910", %"class.blink::StyleVariables", %class.scoped_refptr.691 }
%"class.WTF::RefCounted.910" = type { %"class.base::RefCounted.911" }
%"class.base::RefCounted.911" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.692" = type { %"class.base::RefCounted.693" }
%"class.base::RefCounted.693" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.697" }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.WTF::Vector.700"* }
%"class.WTF::Vector.700" = type { %"class.WTF::VectorBuffer.1440" }
%"class.WTF::VectorBuffer.1440" = type { %"class.WTF::VectorBufferBase.1441", [32 x i8] }
%"class.WTF::VectorBufferBase.1441" = type { %class.scoped_refptr.3*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.708" }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.711", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.838", i8, %"class.absl::optional.844", %class.scoped_refptr.820, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.849" }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.720, %class.scoped_refptr.720, %class.scoped_refptr.720, %class.scoped_refptr.720, %class.scoped_refptr.720, %class.scoped_refptr.720, %class.scoped_refptr.755, %class.scoped_refptr.769, %class.scoped_refptr.770, %class.scoped_refptr.770, %class.scoped_refptr.770, %class.scoped_refptr.770, %class.scoped_refptr.770, %class.scoped_refptr.770, %class.scoped_refptr.810, %class.scoped_refptr.811, %class.scoped_refptr.811, %class.scoped_refptr.811, %class.scoped_refptr.811, %class.scoped_refptr.811, %class.scoped_refptr.811, %class.scoped_refptr.811, %class.scoped_refptr.811, %class.scoped_refptr.834 }
%class.scoped_refptr.720 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.737" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.721", i8, i8, %class.scoped_refptr.723, i32, i32 }
%"class.WTF::RefCounted.721" = type { %"class.base::RefCounted.722" }
%"class.base::RefCounted.722" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.723 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.730, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.731", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.724" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.730 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.756", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.756" = type { %"class.WTF::RefCounted.757", i8, i8, %class.scoped_refptr.730, i32, i32 }
%"class.WTF::RefCounted.757" = type { %"class.base::RefCounted.758" }
%"class.base::RefCounted.758" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.759" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.759" = type { %"class.absl::optional_internal::optional_data.760" }
%"class.absl::optional_internal::optional_data.760" = type { %"class.absl::optional_internal::optional_data_base.761" }
%"class.absl::optional_internal::optional_data_base.761" = type { %"class.absl::optional_internal::optional_data_dtor_base.762" }
%"class.absl::optional_internal::optional_data_dtor_base.762" = type { i8, %union.anon.763 }
%union.anon.763 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.764" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.731" = type { %"class.std::__1::__compressed_pair.732" }
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.746", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.755 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.769 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.770 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.771" }
%"class.blink::PaintPropertyNode.771" = type { %"class.WTF::RefCounted.772", i8, i8, %class.scoped_refptr.774, i32, i32 }
%"class.WTF::RefCounted.772" = type { %"class.base::RefCounted.773" }
%"class.base::RefCounted.773" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.774 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.723, %class.scoped_refptr.775, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.797", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.775 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.812" }
%"class.blink::PaintPropertyNode.812" = type { %"class.WTF::RefCounted.813", i8, i8, %class.scoped_refptr.775, i32, i32 }
%"class.WTF::RefCounted.813" = type { %"class.base::RefCounted.814" }
%"class.base::RefCounted.814" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.776" }
%"class.std::__1::vector.776" = type { %"class.std::__1::__vector_base.777" }
%"class.std::__1::__vector_base.777" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.792" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.778, [20 x float], i32, [4 x i8], %"class.std::__1::vector.785", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.778 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.779, i32, %"class.absl::optional.780", i8, i32 }
%class.sk_sp.779 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.780" = type { %"class.absl::optional_internal::optional_data.781" }
%"class.absl::optional_internal::optional_data.781" = type { %"class.absl::optional_internal::optional_data_base.782" }
%"class.absl::optional_internal::optional_data_base.782" = type { %"class.absl::optional_internal::optional_data_dtor_base.783" }
%"class.absl::optional_internal::optional_data_dtor_base.783" = type { i8, %union.anon.784 }
%union.anon.784 = type { %struct.SkRect }
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.787" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.793" }
%"struct.std::__1::__compressed_pair_elem.793" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.803" }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { i32*, i32*, %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { i32* }
%class.scoped_refptr.810 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.811 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.823" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.723, %"class.absl::optional.815", %class.scoped_refptr.820, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.815" = type { %"class.absl::optional_internal::optional_data.816" }
%"class.absl::optional_internal::optional_data.816" = type { %"class.absl::optional_internal::optional_data_base.817" }
%"class.absl::optional_internal::optional_data_base.817" = type { %"class.absl::optional_internal::optional_data_dtor_base.818" }
%"class.absl::optional_internal::optional_data_dtor_base.818" = type { i8, [3 x i8], %union.anon.819 }
%union.anon.819 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.826", i32, [4 x i8] }>
%"class.WTF::Vector.826" = type { %"class.WTF::VectorBuffer.827" }
%"class.WTF::VectorBuffer.827" = type { %"class.WTF::VectorBufferBase.828" }
%"class.WTF::VectorBufferBase.828" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.834 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.723, %class.scoped_refptr.775, %class.scoped_refptr.774 }
%"class.absl::optional.844" = type { %"class.absl::optional_internal::optional_data.845" }
%"class.absl::optional_internal::optional_data.845" = type { %"class.absl::optional_internal::optional_data_base.846" }
%"class.absl::optional_internal::optional_data_base.846" = type { %"class.absl::optional_internal::optional_data_dtor_base.847" }
%"class.absl::optional_internal::optional_data_dtor_base.847" = type { i8, %union.anon.848 }
%union.anon.848 = type { %"class.blink::IntRect" }
%class.scoped_refptr.820 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.821", [4 x i8] }
%"class.WTF::RefCounted.821" = type { %"class.base::RefCounted.822" }
%"class.base::RefCounted.822" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.858 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.859" = type { %"class.WTF::VectorBuffer.860" }
%"class.WTF::VectorBuffer.860" = type { %"class.WTF::VectorBufferBase.861", [8 x i8] }
%"class.WTF::VectorBufferBase.861" = type { %class.scoped_refptr.858*, i32, i32 }
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.867", %"class.absl::optional.876", %"class.absl::optional.881" }
%"class.absl::optional.867" = type { %"class.absl::optional_internal::optional_data.868" }
%"class.absl::optional_internal::optional_data.868" = type { %"class.absl::optional_internal::optional_data_base.869" }
%"class.absl::optional_internal::optional_data_base.869" = type { %"class.absl::optional_internal::optional_data_dtor_base.870" }
%"class.absl::optional_internal::optional_data_dtor_base.870" = type { i8, %union.anon.871 }
%union.anon.871 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.876" = type { %"class.absl::optional_internal::optional_data.877" }
%"class.absl::optional_internal::optional_data.877" = type { %"class.absl::optional_internal::optional_data_base.878" }
%"class.absl::optional_internal::optional_data_base.878" = type { %"class.absl::optional_internal::optional_data_dtor_base.879" }
%"class.absl::optional_internal::optional_data_dtor_base.879" = type { i8, [3 x i8], %union.anon.880 }
%union.anon.880 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.881" = type { %"class.absl::optional_internal::optional_data.882" }
%"class.absl::optional_internal::optional_data.882" = type { %"class.absl::optional_internal::optional_data_base.883" }
%"class.absl::optional_internal::optional_data_base.883" = type { %"class.absl::optional_internal::optional_data_dtor_base.884" }
%"class.absl::optional_internal::optional_data_dtor_base.884" = type { i8, %union.anon.885 }
%union.anon.885 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.889 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.890" = type { %"class.blink::PersistentBase.891" }
%"class.blink::PersistentBase.891" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.281" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.894", %"struct.blink::PhysicalRect", %"class.blink::Member.903" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.WTF::HashSet"* }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.897" }
%"class.WTF::HashTable.897" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1293, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1293 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1294 }
%union.anon.1294 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1328 }
%class.scoped_refptr.1328 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1329", [4 x i8], %"class.std::__1::unique_ptr.1331", i64, %"class.WTF::Vector.1335", %"class.WTF::Vector.1340", %"class.WTF::Vector.1346", %"class.WTF::Vector.1364", %class.scoped_refptr.1228, %"class.WTF::HashMap.1370", %"class.WTF::Vector.1375", %"class.WTF::Vector.1335", %"class.WTF::Vector.1380", %"class.WTF::HashMap.1385", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1329" = type { %"class.base::RefCountedThreadSafe.1330" }
%"class.base::RefCountedThreadSafe.1330" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1331" = type { %"class.std::__1::__compressed_pair.1332" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.1333" }
%"struct.std::__1::__compressed_pair_elem.1333" = type { i8* }
%"class.WTF::Vector.1340" = type { %"class.WTF::VectorBuffer.1341" }
%"class.WTF::VectorBuffer.1341" = type { %"class.WTF::VectorBufferBase.1342", [8 x i8] }
%"class.WTF::VectorBufferBase.1342" = type { %class.scoped_refptr.1343*, i32, i32 }
%class.scoped_refptr.1343 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1346" = type { %"class.WTF::VectorBuffer.1347" }
%"class.WTF::VectorBuffer.1347" = type { %"class.WTF::VectorBufferBase.1348" }
%"class.WTF::VectorBufferBase.1348" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1350", %"class.std::__1::unique_ptr.1356" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1349 }
%class.scoped_refptr.1349 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1356" = type { %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1364" = type { %"class.WTF::VectorBuffer.1365" }
%"class.WTF::VectorBuffer.1365" = type { %"class.WTF::VectorBufferBase.1366" }
%"class.WTF::VectorBufferBase.1366" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1367", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1367" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1370" = type { %"class.WTF::HashTable.1371" }
%"class.WTF::HashTable.1371" = type <{ %"struct.WTF::KeyValuePair.1374"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1374" = type opaque
%"class.WTF::Vector.1375" = type { %"class.WTF::VectorBuffer.1376" }
%"class.WTF::VectorBuffer.1376" = type { %"class.WTF::VectorBufferBase.1377" }
%"class.WTF::VectorBufferBase.1377" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1335" = type { %"class.WTF::VectorBuffer.1336" }
%"class.WTF::VectorBuffer.1336" = type { %"class.WTF::VectorBufferBase.1337", [16 x i8] }
%"class.WTF::VectorBufferBase.1337" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1380" = type { %"class.WTF::VectorBuffer.1381" }
%"class.WTF::VectorBuffer.1381" = type { %"class.WTF::VectorBufferBase.1382" }
%"class.WTF::VectorBufferBase.1382" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1385" = type { %"class.WTF::HashTable.1386" }
%"class.WTF::HashTable.1386" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { i8**, %"class.std::__1::unique_ptr.1444" }
%"class.std::__1::unique_ptr.1444" = type { %"class.std::__1::__compressed_pair.1445" }
%"class.std::__1::__compressed_pair.1445" = type { %"struct.std::__1::__compressed_pair_elem.1446" }
%"struct.std::__1::__compressed_pair_elem.1446" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1390" }
%"class.std::__1::unique_ptr.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1393, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1396" }
%class.scoped_refptr.1393 = type { %"class.base::RefCountedData.1394"* }
%"class.base::RefCountedData.1394" = type { %"class.base::RefCountedThreadSafe.1395", %"class.WTF::Vector" }
%"class.base::RefCountedThreadSafe.1395" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1396" = type { %"class.std::__1::__compressed_pair.1397" }
%"class.std::__1::__compressed_pair.1397" = type { %"struct.std::__1::__compressed_pair_elem.1398" }
%"struct.std::__1::__compressed_pair_elem.1398" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1399", %"class.WTF::Vector.1410", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1399" = type { %"class.WTF::VectorBuffer.1400" }
%"class.WTF::VectorBuffer.1400" = type { %"class.WTF::VectorBufferBase.1401", [320 x i8] }
%"class.WTF::VectorBufferBase.1401" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1402", %"class.WTF::Vector.1402", %class.scoped_refptr.1407, i8, [7 x i8] }>
%"class.WTF::Vector.1402" = type { %"class.WTF::VectorBuffer.1403" }
%"class.WTF::VectorBuffer.1403" = type { %"class.WTF::VectorBufferBase.1404", [8 x i8] }
%"class.WTF::VectorBufferBase.1404" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1407 = type { %"class.blink::NGShapeExclusions"* }
%"class.WTF::Vector.1410" = type { %"class.WTF::VectorBuffer.1411" }
%"class.WTF::VectorBuffer.1411" = type { %"class.WTF::VectorBufferBase.1412", [288 x i8] }
%"class.WTF::VectorBufferBase.1412" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1402", %"class.WTF::Vector.1402" }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%"class.blink::ShapeOutsideInfo" = type <{ %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1450", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::ShapeOutsideDeltas", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1450" = type { %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.1452" }
%"struct.std::__1::__compressed_pair_elem.1452" = type { %"class.blink::Shape"* }
%"class.blink::Shape" = type { i32 (...)**, i8, float }
%"class.blink::ShapeOutsideDeltas" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19NGLayoutOpportunity23IsBlockDeltaBelowShapesENS_10LayoutUnitE(%"struct.blink::NGLayoutOpportunity"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %class.scoped_refptr.0*, %class.scoped_refptr.0** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %1, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %1) #4
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  br label %23

21:                                               ; preds = %23
  %22 = icmp eq %class.scoped_refptr.0* %30, %10
  br i1 %22, label %31, label %23

23:                                               ; preds = %12, %21
  %24 = phi %class.scoped_refptr.0* [ %6, %12 ], [ %30, %21 ]
  %25 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %24, i64 0, i32 0
  %26 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %26, i64 0, i32 1, i32 1, i32 1, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %20, %28
  %30 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %24, i64 1
  br i1 %29, label %58, label %21

31:                                               ; preds = %21, %2
  %32 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %class.scoped_refptr.0*, %class.scoped_refptr.0** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %4, i64 0, i32 2, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %33, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %1, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %41, i32 %1) #4
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !2
  br label %50

48:                                               ; preds = %50
  %49 = icmp eq %class.scoped_refptr.0* %57, %37
  br i1 %49, label %58, label %50

50:                                               ; preds = %39, %48
  %51 = phi %class.scoped_refptr.0* [ %33, %39 ], [ %57, %48 ]
  %52 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %51, i64 0, i32 0
  %53 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %52, align 8
  %54 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %53, i64 0, i32 1, i32 1, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %47, %55
  %57 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %51, i64 1
  br i1 %56, label %58, label %48

58:                                               ; preds = %23, %48, %50, %31
  %59 = phi i1 [ true, %31 ], [ true, %48 ], [ false, %50 ], [ false, %23 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink19NGLayoutOpportunity21ComputeLineLeftOffsetERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_(%"struct.blink::NGLayoutOpportunity"* nocapture readonly, %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %5, align 8
  %7 = icmp eq %"class.blink::NGShapeExclusions"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %4, %8
  %13 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  br label %91

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %3, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %3) #4
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  %24 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1
  br i1 %27, label %33, label %29

29:                                               ; preds = %15
  %30 = getelementptr inbounds %union.anon.1293, %union.anon.1293* %28, i64 0, i32 0
  %31 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %31, i64 0, i32 3
  br label %35

33:                                               ; preds = %15
  %34 = bitcast %union.anon.1293* %28 to %"struct.blink::NGBfcOffset"*
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi %"struct.blink::NGBfcOffset"* [ %32, %29 ], [ %34, %33 ]
  %37 = bitcast %"struct.blink::NGBfcOffset"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %class.scoped_refptr.0*, %class.scoped_refptr.0** %40, align 8
  %42 = zext i32 %10 to i64
  %43 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %41, i64 %42
  %44 = icmp slt i32 %2, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %2) #4
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48
  br label %55

50:                                               ; preds = %87
  %51 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, %88
  %54 = select i1 %53, i32 %52, i32 %88
  br label %91

55:                                               ; preds = %35, %87
  %56 = phi i32 [ %39, %35 ], [ %88, %87 ]
  %57 = phi %class.scoped_refptr.0* [ %41, %35 ], [ %89, %87 ]
  %58 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %57, i64 0, i32 0
  %59 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %58, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %59, i64 0, i32 1, i32 1, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, %23
  br i1 %62, label %63, label %87

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %59, i64 0, i32 1, i32 0, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %49, %65
  br i1 %66, label %67, label %87

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %67
  %72 = tail call fastcc { i64, i8 } @_ZN5blink12_GLOBAL__N_115ExcludedSegmentERKNS_11NGExclusionENS_10LayoutUnitES4_(%"struct.blink::NGExclusion"* dereferenceable(40) %59, i32 %23, i32 %2)
  %73 = extractvalue { i64, i8 } %72, 0
  %74 = extractvalue { i64, i8 } %72, 1
  %75 = lshr i64 %73, 32
  %76 = trunc i64 %75 to i32
  %77 = and i8 %74, 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %71
  %80 = icmp slt i32 %56, %76
  %81 = select i1 %80, i32 %76, i32 %56
  br label %87

82:                                               ; preds = %67
  %83 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %59, i64 0, i32 1, i32 1, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %56, %84
  %86 = select i1 %85, i32 %84, i32 %56
  br label %87

87:                                               ; preds = %79, %71, %55, %82, %63
  %88 = phi i32 [ %56, %55 ], [ %86, %82 ], [ %56, %63 ], [ %56, %71 ], [ %81, %79 ]
  %89 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %57, i64 1
  %90 = icmp eq %class.scoped_refptr.0* %89, %43
  br i1 %90, label %50, label %55

91:                                               ; preds = %50, %12
  %92 = phi i32 [ %14, %12 ], [ %54, %50 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i8 } @_ZN5blink12_GLOBAL__N_115ExcludedSegmentERKNS_11NGExclusionENS_10LayoutUnitES4_(%"struct.blink::NGExclusion"* nocapture readonly dereferenceable(40), i32, i32) unnamed_addr #1 {
  %4 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::NGExclusionShapeData", %"struct.blink::NGExclusionShapeData"* %5, i64 0, i32 0
  %7 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %6, align 8
  %8 = tail call %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"* %7) #4
  %9 = tail call dereferenceable(16) %"class.blink::Shape"* @_ZNK5blink16ShapeOutsideInfo13ComputedShapeEv(%"class.blink::ShapeOutsideInfo"* %8) #4
  %10 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::NGExclusionShapeData", %"struct.blink::NGExclusionShapeData"* %5, i64 0, i32 1, i32 2, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %14) #4
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = getelementptr inbounds %"struct.blink::NGExclusionShapeData", %"struct.blink::NGExclusionShapeData"* %5, i64 0, i32 2, i32 2, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %22) #4
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  %29 = icmp sgt i32 %28, -1
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  %31 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %28) #4
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %30, i32 %33, !prof !2
  %35 = bitcast %"class.blink::Shape"* %9 to { i64, i64 } (%"class.blink::Shape"*)***
  %36 = load { i64, i64 } (%"class.blink::Shape"*)**, { i64, i64 } (%"class.blink::Shape"*)*** %35, align 8
  %37 = getelementptr inbounds { i64, i64 } (%"class.blink::Shape"*)*, { i64, i64 } (%"class.blink::Shape"*)** %36, i64 2
  %38 = load { i64, i64 } (%"class.blink::Shape"*)*, { i64, i64 } (%"class.blink::Shape"*)** %37, align 8
  %39 = tail call { i64, i64 } %38(%"class.blink::Shape"* %9) #4
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = lshr i64 %40, 32
  %42 = trunc i64 %41 to i32
  %43 = extractvalue { i64, i64 } %39, 1
  %44 = trunc i64 %43 to i32
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %189, label %46

46:                                               ; preds = %3
  %47 = lshr i64 %43, 32
  %48 = trunc i64 %47 to i32
  %49 = icmp slt i32 %48, 1
  br i1 %49, label %189, label %50

50:                                               ; preds = %46
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 %48) #4
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 2147483647, i32 %53, !prof !2
  %55 = icmp sgt i32 %54, %34
  br i1 %55, label %56, label %64

56:                                               ; preds = %50
  %57 = icmp slt i32 %2, 0
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %2) #4
  %60 = extractvalue { i32, i1 } %59, 1
  %61 = extractvalue { i32, i1 } %59, 0
  %62 = select i1 %60, i32 %58, i32 %61, !prof !2
  %63 = icmp sgt i32 %62, %42
  br i1 %63, label %68, label %64

64:                                               ; preds = %50, %56
  %65 = icmp eq i32 %2, 0
  %66 = icmp eq i32 %34, %42
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %189

68:                                               ; preds = %56, %64
  %69 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 2147483647
  br i1 %71, label %80, label %72

72:                                               ; preds = %68
  %73 = load i32, i32* %11, align 4
  %74 = icmp sgt i32 %73, -1
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %70, i32 %73) #4
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 %75, i32 %78, !prof !2
  br label %80

80:                                               ; preds = %68, %72
  %81 = phi i32 [ %79, %72 ], [ 2147483647, %68 ]
  %82 = load i32, i32* %21, align 4
  %83 = getelementptr inbounds %"struct.blink::NGExclusionShapeData", %"struct.blink::NGExclusionShapeData"* %5, i64 0, i32 2, i32 3, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %84, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %82, i32 %84) #4
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !2
  %91 = icmp sgt i32 %90, -1
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %81, i32 %90) #4
  %94 = extractvalue { i32, i1 } %93, 1
  %95 = extractvalue { i32, i1 } %93, 0
  %96 = select i1 %94, i32 %92, i32 %95, !prof !2
  %97 = load i32, i32* %13, align 4
  %98 = getelementptr inbounds %"struct.blink::NGExclusionShapeData", %"struct.blink::NGExclusionShapeData"* %5, i64 0, i32 1, i32 3, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %99) #4
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !2
  %106 = icmp sgt i32 %105, -1
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %96, i32 %105) #4
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %107, i32 %110, !prof !2
  %112 = icmp slt i32 %111, %2
  %113 = select i1 %112, i32 %111, i32 %2
  %114 = bitcast %"class.blink::Shape"* %9 to { i64, i8 } (%"class.blink::Shape"*, i32, i32)***
  %115 = load { i64, i8 } (%"class.blink::Shape"*, i32, i32)**, { i64, i8 } (%"class.blink::Shape"*, i32, i32)*** %114, align 8
  %116 = getelementptr inbounds { i64, i8 } (%"class.blink::Shape"*, i32, i32)*, { i64, i8 } (%"class.blink::Shape"*, i32, i32)** %115, i64 4
  %117 = load { i64, i8 } (%"class.blink::Shape"*, i32, i32)*, { i64, i8 } (%"class.blink::Shape"*, i32, i32)** %116, align 8
  %118 = tail call { i64, i8 } %117(%"class.blink::Shape"* %9, i32 %34, i32 %113) #4
  %119 = extractvalue { i64, i8 } %118, 0
  %120 = extractvalue { i64, i8 } %118, 1
  %121 = trunc i64 %119 to i32
  %122 = lshr i64 %119, 32
  %123 = trunc i64 %122 to i32
  %124 = getelementptr inbounds %"struct.blink::NGExclusionShapeData", %"struct.blink::NGExclusionShapeData"* %5, i64 0, i32 1, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"struct.blink::NGExclusionShapeData", %"struct.blink::NGExclusionShapeData"* %5, i64 0, i32 2, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp slt i32 %127, 0
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %125, i32 %127) #4
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !2
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %121, i32 %133) #4
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !2
  %140 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %123, i32 %133) #4
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %135, i32 %142, !prof !2
  %144 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 2147483647
  br i1 %146, label %147, label %154

147:                                              ; preds = %80
  %148 = icmp eq i32 %139, 2147483647
  %149 = icmp sgt i32 %139, 0
  %150 = select i1 %149, i32 %139, i32 0
  %151 = select i1 %148, i32 2147483647, i32 %150
  %152 = getelementptr inbounds %"struct.blink::NGBfcRect", %"struct.blink::NGBfcRect"* %10, i64 0, i32 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  br label %167

154:                                              ; preds = %80
  %155 = getelementptr inbounds %"struct.blink::NGBfcRect", %"struct.blink::NGBfcRect"* %10, i64 0, i32 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = icmp sgt i32 %156, -1
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %145, i32 %156) #4
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161
  %163 = icmp slt i32 %139, %162
  %164 = icmp sgt i32 %139, 0
  %165 = select i1 %164, i32 %139, i32 0
  %166 = select i1 %163, i32 %165, i32 %162
  br label %167

167:                                              ; preds = %147, %154
  %168 = phi i32 [ %156, %154 ], [ %153, %147 ]
  %169 = phi i32 [ %166, %154 ], [ %151, %147 ]
  %170 = phi i32 [ %162, %154 ], [ 2147483647, %147 ]
  %171 = icmp slt i32 %143, %170
  %172 = icmp sgt i32 %143, 0
  %173 = select i1 %172, i32 %143, i32 0
  %174 = select i1 %171, i32 %173, i32 %170
  %175 = icmp slt i32 %168, 0
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %169, i32 %168) #4
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !2
  %181 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %174, i32 %168) #4
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %176, i32 %183, !prof !2
  %185 = zext i32 %184 to i64
  %186 = shl nuw i64 %185, 32
  %187 = zext i32 %180 to i64
  %188 = or i64 %186, %187
  br label %189

189:                                              ; preds = %3, %46, %64, %167
  %190 = phi i8 [ %120, %167 ], [ 0, %64 ], [ 0, %46 ], [ 0, %3 ]
  %191 = phi i64 [ %188, %167 ], [ 0, %64 ], [ 0, %46 ], [ 0, %3 ]
  %192 = insertvalue { i64, i8 } undef, i64 %191, 0
  %193 = insertvalue { i64, i8 } %192, i8 %190, 1
  ret { i64, i8 } %193
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink19NGLayoutOpportunity22ComputeLineRightOffsetERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_(%"struct.blink::NGLayoutOpportunity"* nocapture readonly, %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %5, align 8
  %7 = icmp eq %"class.blink::NGShapeExclusions"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %6, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %4, %8
  %13 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  br label %99

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %3, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %3) #4
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  %24 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1
  br i1 %27, label %33, label %29

29:                                               ; preds = %15
  %30 = getelementptr inbounds %union.anon.1293, %union.anon.1293* %28, i64 0, i32 0
  %31 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %31, i64 0, i32 3
  br label %35

33:                                               ; preds = %15
  %34 = bitcast %union.anon.1293* %28 to %"struct.blink::NGBfcOffset"*
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi %"struct.blink::NGBfcOffset"* [ %32, %29 ], [ %34, %33 ]
  %37 = bitcast %"struct.blink::NGBfcOffset"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %41 to i32
  %43 = icmp slt i32 %42, 0
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %42) #4
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !2
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %class.scoped_refptr.0*, %class.scoped_refptr.0** %49, align 8
  %51 = zext i32 %10 to i64
  %52 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %50, i64 %51
  %53 = icmp slt i32 %2, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %2) #4
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57
  br label %64

59:                                               ; preds = %95
  %60 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %96, %61
  %63 = select i1 %62, i32 %61, i32 %96
  br label %99

64:                                               ; preds = %35, %95
  %65 = phi i32 [ %48, %35 ], [ %96, %95 ]
  %66 = phi %class.scoped_refptr.0* [ %50, %35 ], [ %97, %95 ]
  %67 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %66, i64 0, i32 0
  %68 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %68, i64 0, i32 1, i32 1, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, %23
  br i1 %71, label %72, label %95

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %68, i64 0, i32 1, i32 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %58, %74
  br i1 %75, label %76, label %95

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %68, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %77, align 8
  %79 = icmp eq %"struct.blink::NGExclusionShapeData"* %78, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %76
  %81 = tail call fastcc { i64, i8 } @_ZN5blink12_GLOBAL__N_115ExcludedSegmentERKNS_11NGExclusionENS_10LayoutUnitES4_(%"struct.blink::NGExclusion"* dereferenceable(40) %68, i32 %23, i32 %2)
  %82 = extractvalue { i64, i8 } %81, 0
  %83 = extractvalue { i64, i8 } %81, 1
  %84 = trunc i64 %82 to i32
  %85 = and i8 %83, 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %80
  %88 = icmp sgt i32 %65, %84
  %89 = select i1 %88, i32 %84, i32 %65
  br label %95

90:                                               ; preds = %76
  %91 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, %65
  %94 = select i1 %93, i32 %92, i32 %65
  br label %95

95:                                               ; preds = %87, %80, %64, %90, %72
  %96 = phi i32 [ %65, %64 ], [ %94, %90 ], [ %65, %72 ], [ %65, %80 ], [ %89, %87 ]
  %97 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %66, i64 1
  %98 = icmp eq %class.scoped_refptr.0* %97, %52
  br i1 %98, label %59, label %64

99:                                               ; preds = %59, %12
  %100 = phi i32 [ %14, %12 ], [ %63, %59 ]
  ret i32 %100
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #2

declare %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare dereferenceable(16) %"class.blink::Shape"* @_ZNK5blink16ShapeOutsideInfo13ComputedShapeEv(%"class.blink::ShapeOutsideInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #2

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
