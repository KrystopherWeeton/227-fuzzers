; ModuleID = '../../third_party/skia/src/gpu/gl/GrGLUtil.cpp'
source_filename = "../../third_party/skia/src/gpu/gl/GrGLUtil.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.GrGLInterface = type { %class.SkRefCnt.base, %union.anon, %class.GrGLExtensions, %"struct.GrGLInterface::Functions" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { i32 }
%class.GrGLExtensions = type { i8, %class.SkTArray }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.GrGLInterface::Functions" = type { %class.GrGLFunction, %class.GrGLFunction.1, %class.GrGLFunction.1, %class.GrGLFunction.2, %class.GrGLFunction.1, %class.GrGLFunction.2, %class.GrGLFunction.3, %class.GrGLFunction.1, %class.GrGLFunction.1, %class.GrGLFunction.1, %class.GrGLFunction.1, %class.GrGLFunction, %class.GrGLFunction.4, %class.GrGLFunction.5, %class.GrGLFunction, %class.GrGLFunction.1, %class.GrGLFunction.6, %class.GrGLFunction.7, %class.GrGLFunction.8, %class.GrGLFunction.9, %class.GrGLFunction, %class.GrGLFunction.5, %class.GrGLFunction.10, %class.GrGLFunction.11, %class.GrGLFunction.12, %class.GrGLFunction.13, %class.GrGLFunction, %class.GrGLFunction.14, %class.GrGLFunction.15, %class.GrGLFunction.16, %class.GrGLFunction.17, %class.GrGLFunction.9, %class.GrGLFunction, %class.GrGLFunction.18, %class.GrGLFunction.18, %class.GrGLFunction.18, %class.GrGLFunction, %class.GrGLFunction.18, %class.GrGLFunction.18, %class.GrGLFunction.18, %class.GrGLFunction, %class.GrGLFunction.18, %class.GrGLFunction.18, %class.GrGLFunction.19, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.20, %class.GrGLFunction.21, %class.GrGLFunction.22, %class.GrGLFunction, %class.GrGLFunction.18, %class.GrGLFunction.23, %class.GrGLFunction.24, %class.GrGLFunction.25, %class.GrGLFunction.26, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.4, %class.GrGLFunction, %class.GrGLFunction.4, %class.GrGLFunction.27, %class.GrGLFunction.28, %class.GrGLFunction.29, %class.GrGLFunction.30, %class.GrGLFunction, %class.GrGLFunction.31, %class.GrGLFunction.31, %class.GrGLFunction.31, %class.GrGLFunction, %class.GrGLFunction.31, %class.GrGLFunction.31, %class.GrGLFunction.31, %class.GrGLFunction.31, %class.GrGLFunction.31, %class.GrGLFunction.32, %class.GrGLFunction.17, %class.GrGLFunction.33, %class.GrGLFunction.34, %class.GrGLFunction.35, %class.GrGLFunction.36, %class.GrGLFunction.37, %class.GrGLFunction.32, %class.GrGLFunction.38, %class.GrGLFunction.32, %class.GrGLFunction.39, %class.GrGLFunction.40, %class.GrGLFunction.32, %class.GrGLFunction.32, %class.GrGLFunction.37, %class.GrGLFunction.32, %class.GrGLFunction.41, %class.GrGLFunction.42, %class.GrGLFunction.43, %class.GrGLFunction.44, %class.GrGLFunction.45, %class.GrGLFunction.46, %class.GrGLFunction, %class.GrGLFunction.27, %class.GrGLFunction.47, %class.GrGLFunction.48, %class.GrGLFunction.49, %class.GrGLFunction.16, %class.GrGLFunction.50, %class.GrGLFunction.51, %class.GrGLFunction, %class.GrGLFunction.52, %class.GrGLFunction.53, %class.GrGLFunction.54, %class.GrGLFunction.55, %class.GrGLFunction.55, %class.GrGLFunction.56, %class.GrGLFunction.57, %class.GrGLFunction.58, %class.GrGLFunction.59, %class.GrGLFunction.60, %class.GrGLFunction.61, %class.GrGLFunction.62, %class.GrGLFunction.63, %class.GrGLFunction.49, %class.GrGLFunction.49, %class.GrGLFunction.1, %class.GrGLFunction.4, %class.GrGLFunction.46, %class.GrGLFunction.1, %class.GrGLFunction, %class.GrGLFunction.64, %class.GrGLFunction.65, %class.GrGLFunction.66, %class.GrGLFunction.66, %class.GrGLFunction.66, %class.GrGLFunction.67, %class.GrGLFunction.4, %class.GrGLFunction.53, %class.GrGLFunction.68, %class.GrGLFunction.69, %class.GrGLFunction.1, %class.GrGLFunction.70, %class.GrGLFunction.71, %class.GrGLFunction.72, %class.GrGLFunction, %class.GrGLFunction.1, %class.GrGLFunction.73, %class.GrGLFunction.28, %class.GrGLFunction.50, %class.GrGLFunction.73, %class.GrGLFunction.74, %class.GrGLFunction.75, %class.GrGLFunction.76, %class.GrGLFunction.77, %class.GrGLFunction.53, %class.GrGLFunction.68, %class.GrGLFunction.75, %class.GrGLFunction.66, %class.GrGLFunction.4, %class.GrGLFunction.47, %class.GrGLFunction.78, %class.GrGLFunction.79, %class.GrGLFunction.80, %class.GrGLFunction.81, %class.GrGLFunction.82, %class.GrGLFunction.83, %class.GrGLFunction.80, %class.GrGLFunction.81, %class.GrGLFunction.84, %class.GrGLFunction.69, %class.GrGLFunction.80, %class.GrGLFunction.81, %class.GrGLFunction.85, %class.GrGLFunction.86, %class.GrGLFunction.80, %class.GrGLFunction.81, %class.GrGLFunction.87, %class.GrGLFunction.87, %class.GrGLFunction.87, %class.GrGLFunction.50, %class.GrGLFunction.88, %class.GrGLFunction.88, %class.GrGLFunction, %class.GrGLFunction.89, %class.GrGLFunction.90, %class.GrGLFunction.90, %class.GrGLFunction.90, %class.GrGLFunction.1, %class.GrGLFunction.91, %class.GrGLFunction.92, %class.GrGLFunction.69, %class.GrGLFunction, %class.GrGLFunction.93, %class.GrGLFunction.94, %class.GrGLFunction.95, %class.GrGLFunction.96, %class.GrGLFunction.97, %class.GrGLFunction.98, %class.GrGLFunction.99, %class.GrGLFunction.100, %class.GrGLFunction.101, %class.GrGLFunction.102, %class.GrGLFunction.103, %class.GrGLFunction.4, %class.GrGLFunction.103, %class.GrGLFunction.104, %class.GrGLFunction.105, %class.GrGLFunction }
%class.GrGLFunction.2 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.3 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.6 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.7 = type { void (i8*, i32, i64, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.8 = type { void (i8*, i32, i64, i64, i8*)*, [4 x i64] }
%class.GrGLFunction.5 = type { void (i8*, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.10 = type { void (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.11 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.12 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.13 = type { void (i8*, i8, i8, i8, i8)*, [4 x i64] }
%class.GrGLFunction.14 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.15 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.9 = type { i32 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.19 = type { void (i8*, i8)*, [4 x i64] }
%class.GrGLFunction.20 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.21 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.22 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.18 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.23 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.24 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.25 = type { void (i8*, i32, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.26 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.29 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.30 = type { void (i8*, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.31 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.17 = type { i32 (i8*)*, [4 x i64] }
%class.GrGLFunction.33 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.34 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.35 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.36 = type { void (i8*, i32, i32, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.38 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.39 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.40 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.37 = type { void (i8*, i32, i32, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.32 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.41 = type { void (i8*, i32, i32, i32*, i32*)*, [4 x i64] }
%class.GrGLFunction.42 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.43 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.44 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.45 = type { i32 (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.27 = type { void (i8*, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.48 = type { void (i8*, i32, i32, i32*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.16 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.51 = type { void (i8*, float)*, [4 x i64] }
%class.GrGLFunction.52 = type { void (i8*, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.54 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.55 = type { i8* (i8*, i32, i64, i64, i32)*, [4 x i64] }
%class.GrGLFunction.56 = type { i8* (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.57 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.58 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.59 = type { void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.60 = type { void (i8*, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.61 = type { void (i8*, i32, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.62 = type { void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.63 = type { void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.49 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.46 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.64 = type { void (i8*, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.65 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.67 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.70 = type { void (i8*, i32, i32, i8**, i32*)*, [4 x i64] }
%class.GrGLFunction.71 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.72 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.28 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.73 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.74 = type { void (i8*, i32, i32, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.76 = type { void (i8*, i32, i32, float)*, [4 x i64] }
%class.GrGLFunction.77 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.53 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.68 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.75 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.66 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.47 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.78 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.79 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.82 = type { void (i8*, i32, float, float)*, [4 x i64] }
%class.GrGLFunction.83 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.84 = type { void (i8*, i32, float, float, float)*, [4 x i64] }
%class.GrGLFunction.85 = type { void (i8*, i32, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.86 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.80 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.81 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.87 = type { void (i8*, i32, i32, i8, float*)*, [4 x i64] }
%class.GrGLFunction.50 = type { i8 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.88 = type { void (i8*, i8*)*, [4 x i64] }
%class.GrGLFunction.89 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.90 = type { void (i8*, i32, float*)*, [4 x i64] }
%class.GrGLFunction.1 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.91 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.92 = type { void (i8*, i32, i32, i32, i8, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.69 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.93 = type { %struct.__GLsync* (i8*, i32, i32)*, [4 x i64] }
%struct.__GLsync = type opaque
%class.GrGLFunction.94 = type { i8 (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.95 = type { i32 (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.96 = type { void (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.97 = type { void (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.98 = type { void (i8*, i32, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.99 = type { void (i8*, i32, i32, i32, i32, i32*, i8)*, [4 x i64] }
%class.GrGLFunction.100 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.101 = type { void (i8*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, [4 x i64] }
%class.GrGLFunction.102 = type { i32 (i8*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.4 = type { void (i8*)*, [4 x i64] }
%class.GrGLFunction.103 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.104 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.105 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction = type { void (i8*, i32)*, [4 x i64] }
%struct.GrGLDriverInfo = type <{ i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%"class.std::__1::tuple.111" = type { %"struct.std::__1::__tuple_impl.112" }
%"struct.std::__1::__tuple_impl.112" = type { %"class.std::__1::__tuple_leaf.113", %"class.std::__1::__tuple_leaf.114" }
%"class.std::__1::__tuple_leaf.113" = type { i32 }
%"class.std::__1::__tuple_leaf.114" = type { %class.SkString }

@.str = private unnamed_addr constant [47 x i8] c"../../third_party/skia/src/gpu/gl/GrGLUtil.cpp\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"nullptr GL version string.\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%d.%d\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"OpenGL ES %d.%d (WebGL %d.%d\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"OpenGL ES-%c%c %d.%d\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"OpenGL ES %d.%d\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"%d.%d Mesa %d.%d\00", align 1
@_ZZ17GrToGLStencilFunc13GrStencilTestE6gTable = internal unnamed_addr constant [8 x i32] [i32 519, i32 512, i32 516, i32 518, i32 513, i32 515, i32 514, i32 517], align 16
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"OpenGL ES GLSL ES %d.%d\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"ARM\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"Google Inc.\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"Imagination Technologies\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"Intel \00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"Intel\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"Qualcomm\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"freedreno\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"NVIDIA Corporation\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"ATI Technologies Inc.\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE9kTegraStr = internal constant [13 x i8] c"NVIDIA Tegra\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"GL_NV_path_rendering\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"PowerVR SGX 54%d\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA4Str = internal constant [9 x i8] c"Apple A4\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA5Str = internal constant [9 x i8] c"Apple A5\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA6Str = internal constant [9 x i8] c"Apple A6\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE16kPowerVRRogueStr = internal constant [14 x i8] c"PowerVR Rogue\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA7Str = internal constant [9 x i8] c"Apple A7\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA8Str = internal constant [9 x i8] c"Apple A8\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"Adreno (TM) %d\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"FD%d\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"Google SwiftShader\00", align 1
@.str.23 = private unnamed_addr constant [25 x i8] c"Intel Iris OpenGL Engine\00", align 1
@.str.24 = private unnamed_addr constant [29 x i8] c"Intel Iris Pro OpenGL Engine\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"Sandybridge\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"Bay Trail\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"Graphics\00", align 1
@.str.28 = private unnamed_addr constant [12 x i8] c"Graphics %d\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"Graphics P%d\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"UHD\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE10kRadeonStr = internal constant [8 x i8] c"Radeon \00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE6kTMStr = internal constant [6 x i8] c"(TM) \00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"R9 M3%c%c\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"R9 M4%c%c\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"HD 7%c%c%c Series\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"Pro 5%c%c%c\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"Pro Vega %i\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"llvmpipe\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE9kMaliGStr = internal constant [7 x i8] c"Mali-G\00", align 1
@_ZZL12get_rendererPKcRK14GrGLExtensionsE9kMaliTStr = internal constant [7 x i8] c"Mali-T\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"Mali-%d\00", align 1
@.str.38 = private unnamed_addr constant [22 x i8] c"%d.%d.%d NVIDIA %d.%d\00", align 1
@.str.39 = private unnamed_addr constant [32 x i8] c"%d.%d (Core Profile) Mesa %d.%d\00", align 1
@.str.40 = private unnamed_addr constant [29 x i8] c"OpenGL ES %d.%d NVIDIA %d.%d\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"OpenGL ES %d.%d Mesa %d.%d\00", align 1
@.str.42 = private unnamed_addr constant [39 x i8] c"OpenGL ES %d.%d SwiftShader %d.%d.0.%d\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"%d.%d INTEL-%d.%d.%d\00", align 1
@.str.44 = private unnamed_addr constant [24 x i8] c"OpenGL ES %d.%d V@%d.%d\00", align 1
@.str.45 = private unnamed_addr constant [31 x i8] c"OpenGL ES %d.%d build %d.%d@%d\00", align 1
@_ZZL22get_driver_and_version12GrGLStandard10GrGLVendorPKcS2_E15kEmulatorPrefix = internal constant [38 x i8] c"Android Emulator OpenGL ES Translator\00", align 16
@_ZZL17get_angle_backendPKcE7kHeader = internal constant [8 x i8] c"ANGLE (\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"Direct3D11\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"Direct3D9\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"OpenGL\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"HD Graphics\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"HD Graphics %i\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"HD Graphics P%i\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"Iris\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"Iris(TM) Graphics %i\00", align 1
@.str.54 = private unnamed_addr constant [25 x i8] c"Iris(TM) Pro Graphics %i\00", align 1
@.str.55 = private unnamed_addr constant [26 x i8] c"Iris(TM) Pro Graphics P%i\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"NVIDIA\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"Radeon\00", align 1
@.str.58 = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZZL17is_commamd_bufferPKcS0_E9kChromium = internal constant [9 x i8] c"Chromium\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"OpenGL ES %d.%d %8s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z30GrGLGetStandardInUseFromStringPKc(i8* readonly) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [2 x i8], align 1
  %7 = icmp eq i8* %0, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 29, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %34

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 -1431655766, i32* %2, align 4
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 -1431655766, i32* %3, align 4
  %12 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3) #11
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %32, label %14

14:                                               ; preds = %9
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  store i32 -1431655766, i32* %4, align 4
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 -1431655766, i32* %5, align 4
  %17 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %4, i32* nonnull %5, i32* nonnull %2, i32* nonnull %3) #11
  %18 = icmp eq i32 %17, 4
  br i1 %18, label %30, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %20) #11
  store i8 -86, i8* %20, align 1
  %21 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 1
  store i8 -86, i8* %21, align 1
  %22 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8* nonnull %20, i8* %21, i32* nonnull %2, i32* nonnull %3) #11
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3) #11
  %26 = icmp eq i32 %25, 2
  %27 = select i1 %26, i32 2, i32 0
  br label %28

28:                                               ; preds = %24, %19
  %29 = phi i32 [ 0, %19 ], [ %27, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %20) #11
  br label %30

30:                                               ; preds = %14, %28
  %31 = phi i32 [ %29, %28 ], [ 3, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  br label %32

32:                                               ; preds = %9, %30
  %33 = phi i32 [ %31, %30 ], [ 1, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  br label %34

34:                                               ; preds = %32, %8
  %35 = phi i32 [ %33, %32 ], [ 0, %8 ]
  ret i32 %35
}

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z24GrGLGetVersionFromStringPKc(i8* readonly) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [2 x i8], align 1
  %9 = icmp eq i8* %0, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 66, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %65

11:                                               ; preds = %1
  %12 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %2, align 4
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %3, align 4
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 -1431655766, i32* %4, align 4
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  store i32 -1431655766, i32* %5, align 4
  %16 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5) #11
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %18, label %23

18:                                               ; preds = %11
  %19 = load i32, i32* %2, align 4
  %20 = shl i32 %19, 16
  %21 = load i32, i32* %3, align 4
  %22 = or i32 %20, %21
  br label %63

23:                                               ; preds = %11
  %24 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3) #11
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = load i32, i32* %2, align 4
  %28 = shl i32 %27, 16
  %29 = load i32, i32* %3, align 4
  %30 = or i32 %28, %29
  br label %63

31:                                               ; preds = %23
  %32 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #11
  store i32 -1431655766, i32* %6, align 4
  %33 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #11
  store i32 -1431655766, i32* %7, align 4
  %34 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %6, i32* nonnull %7, i32* nonnull %2, i32* nonnull %3) #11
  %35 = icmp eq i32 %34, 4
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = load i32, i32* %2, align 4
  %38 = shl i32 %37, 16
  %39 = load i32, i32* %3, align 4
  %40 = or i32 %38, %39
  br label %61

41:                                               ; preds = %31
  %42 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %42) #11
  store i8 -86, i8* %42, align 1
  %43 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 1
  store i8 -86, i8* %43, align 1
  %44 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8* nonnull %42, i8* %43, i32* nonnull %2, i32* nonnull %3) #11
  %45 = icmp eq i32 %44, 4
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = load i32, i32* %2, align 4
  %48 = shl i32 %47, 16
  %49 = load i32, i32* %3, align 4
  %50 = or i32 %48, %49
  br label %59

51:                                               ; preds = %41
  %52 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i32* nonnull %2, i32* nonnull %3) #11
  %53 = icmp eq i32 %52, 2
  br i1 %53, label %54, label %59

54:                                               ; preds = %51
  %55 = load i32, i32* %2, align 4
  %56 = shl i32 %55, 16
  %57 = load i32, i32* %3, align 4
  %58 = or i32 %56, %57
  br label %59

59:                                               ; preds = %51, %54, %46
  %60 = phi i32 [ %50, %46 ], [ %58, %54 ], [ 0, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %42) #11
  br label %61

61:                                               ; preds = %59, %36
  %62 = phi i32 [ %40, %36 ], [ %60, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #11
  br label %63

63:                                               ; preds = %61, %26, %18
  %64 = phi i32 [ %22, %18 ], [ %30, %26 ], [ %62, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  br label %65

65:                                               ; preds = %63, %10
  %66 = phi i32 [ %64, %63 ], [ 0, %10 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z14GrGLGetVersionPK13GrGLInterface(%struct.GrGLInterface*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %0, i64 0, i32 3, i32 92, i32 0
  %3 = load i8* (i8*, i32)*, i8* (i8*, i32)** %2, align 8
  %4 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %0, i64 0, i32 3, i32 92, i32 1, i64 0
  %5 = bitcast i64* %4 to i8*
  %6 = tail call i8* %3(i8* %5, i32 7938) #11
  %7 = tail call i32 @_Z24GrGLGetVersionFromStringPKc(i8* %6)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z17GrGLGetDriverInfoPK13GrGLInterface(%struct.GrGLDriverInfo* noalias nocapture sret, %struct.GrGLInterface*) local_unnamed_addr #0 {
  %3 = alloca %class.SkTArray, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [9 x i8], align 1
  %12 = alloca %struct.GrGLDriverInfo, align 8
  %13 = alloca %class.SkString, align 8
  %14 = alloca %"class.std::__1::tuple.111", align 8
  %15 = icmp eq %struct.GrGLInterface* %1, null
  br i1 %15, label %16, label %25

16:                                               ; preds = %2
  %17 = bitcast %struct.GrGLDriverInfo* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 7>, <4 x i32>* %17, align 8
  %18 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %0, i64 0, i32 4
  store i32 36, i32* %18, align 8
  %19 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %0, i64 0, i32 5
  store i32 6, i32* %19, align 4
  %20 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %0, i64 0, i32 6
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %0, i64 0, i32 7
  %22 = bitcast i32* %21 to <4 x i32>*
  store <4 x i32> <i32 0, i32 7, i32 36, i32 6>, <4 x i32>* %22, align 8
  %23 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %0, i64 0, i32 11
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %0, i64 0, i32 12
  store i8 0, i8* %24, align 8
  br label %257

25:                                               ; preds = %2
  %26 = bitcast %struct.GrGLDriverInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 64, i1 false)
  %27 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 0
  %28 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 1
  %29 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 2
  %30 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 3
  %31 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 4
  %32 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 5
  %33 = bitcast i32* %29 to <4 x i32>*
  store <4 x i32> <i32 0, i32 7, i32 36, i32 6>, <4 x i32>* %33, align 8
  %34 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 6
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 7
  %36 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 8
  %37 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 9
  %38 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 10
  %39 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 0, i32 7, i32 36, i32 6>, <4 x i32>* %39, align 8
  %40 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 11
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %struct.GrGLDriverInfo, %struct.GrGLDriverInfo* %12, i64 0, i32 12
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %1, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %27, align 8
  %44 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %1, i64 0, i32 3, i32 92, i32 0
  %45 = load i8* (i8*, i32)*, i8* (i8*, i32)** %44, align 8
  %46 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %1, i64 0, i32 3, i32 92, i32 1, i64 0
  %47 = bitcast i64* %46 to i8*
  %48 = tail call i8* %45(i8* %47, i32 7938) #11
  %49 = icmp eq i8* %48, null
  %50 = select i1 %49, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %48
  %51 = load i8* (i8*, i32)*, i8* (i8*, i32)** %44, align 8
  %52 = tail call i8* %51(i8* %47, i32 35724) #11
  %53 = icmp eq i8* %52, null
  %54 = select i1 %53, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %52
  %55 = load i8* (i8*, i32)*, i8* (i8*, i32)** %44, align 8
  %56 = tail call i8* %55(i8* %47, i32 7937) #11
  %57 = icmp eq i8* %56, null
  %58 = select i1 %57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %56
  %59 = load i8* (i8*, i32)*, i8* (i8*, i32)** %44, align 8
  %60 = tail call i8* %59(i8* %47, i32 7936) #11
  %61 = icmp eq i8* %60, null
  %62 = select i1 %61, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %60
  %63 = tail call i32 @_Z24GrGLGetVersionFromStringPKc(i8* %50)
  store i32 %63, i32* %28, align 4
  %64 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #11
  store i32 -1431655766, i32* %7, align 4
  %65 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #11
  store i32 -1431655766, i32* %8, align 4
  %66 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %54, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* nonnull %7, i32* nonnull %8) #11
  %67 = icmp eq i32 %66, 2
  br i1 %67, label %68, label %73

68:                                               ; preds = %25
  %69 = load i32, i32* %7, align 4
  %70 = shl i32 %69, 16
  %71 = load i32, i32* %8, align 4
  %72 = or i32 %70, %71
  br label %81

73:                                               ; preds = %25
  %74 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %54, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i32* nonnull %7, i32* nonnull %8) #11
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %81

76:                                               ; preds = %73
  %77 = load i32, i32* %7, align 4
  %78 = shl i32 %77, 16
  %79 = load i32, i32* %8, align 4
  %80 = or i32 %78, %79
  br label %81

81:                                               ; preds = %68, %73, %76
  %82 = phi i32 [ %72, %68 ], [ %80, %76 ], [ 0, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #11
  store i32 %82, i32* %29, align 8
  %83 = call fastcc i32 @_ZL10get_vendorPKc(i8* %62)
  store i32 %83, i32* %30, align 4
  %84 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %1, i64 0, i32 2
  %85 = call fastcc i32 @_ZL12get_rendererPKcRK14GrGLExtensions(i8* %58, %class.GrGLExtensions* dereferenceable(24) %84)
  store i32 %85, i32* %31, align 8
  %86 = load i32, i32* %42, align 4
  %87 = call fastcc { i32, i64 } @_ZL22get_driver_and_version12GrGLStandard10GrGLVendorPKcS2_(i32 %86, i32 %83, i8* %58, i8* %50)
  %88 = extractvalue { i32, i64 } %87, 0
  %89 = extractvalue { i32, i64 } %87, 1
  store i32 %88, i32* %32, align 4
  store i64 %89, i64* %34, align 8
  %90 = bitcast %class.SkString* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11
  %91 = getelementptr inbounds %class.SkString, %class.SkString* %13, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %91, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %13) #11
  %92 = bitcast %"class.std::__1::tuple.111"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #11
  %93 = call i32 @strncmp(i8* %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZL17get_angle_backendPKcE7kHeader, i64 0, i64 0), i64 7) #12, !noalias !2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %127

95:                                               ; preds = %81
  %96 = call i64 @strlen(i8* %58) #12, !noalias !2
  %97 = shl i64 %96, 32
  %98 = add i64 %97, -4294967296
  %99 = ashr exact i64 %98, 32
  %100 = getelementptr inbounds i8, i8* %58, i64 %99
  %101 = load i8, i8* %100, align 1, !noalias !2
  %102 = icmp eq i8 %101, 41
  br i1 %102, label %103, label %127

103:                                              ; preds = %95
  %104 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11, !noalias !2
  %105 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %105, align 8, !noalias !2
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %5) #11
  %106 = getelementptr inbounds i8, i8* %58, i64 7
  %107 = ashr exact i64 %97, 32
  %108 = add nsw i64 %107, -8
  call void @_ZN8SkString3setEPKcm(%class.SkString* nonnull %5, i8* %106, i64 %108) #11
  %109 = call i8* @strstr(i8* %58, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0)) #12
  %110 = icmp eq i8* %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 0, i32 0
  store i32 2, i32* %112, align 8, !alias.scope !2
  %113 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 1, i32 0
  call void @_ZN8SkStringC1EOS_(%class.SkString* %113, %class.SkString* nonnull dereferenceable(8) %5) #11
  br label %131

114:                                              ; preds = %103
  %115 = call i8* @strstr(i8* %58, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0)) #12
  %116 = icmp eq i8* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 0, i32 0
  store i32 1, i32* %118, align 8, !alias.scope !2
  %119 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 1, i32 0
  call void @_ZN8SkStringC1EOS_(%class.SkString* %119, %class.SkString* nonnull dereferenceable(8) %5) #11
  br label %131

120:                                              ; preds = %114
  %121 = call i8* @strstr(i8* %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0)) #12
  %122 = icmp eq i8* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 0, i32 0
  store i32 3, i32* %124, align 8, !alias.scope !2
  %125 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 1, i32 0
  call void @_ZN8SkStringC1EOS_(%class.SkString* %125, %class.SkString* nonnull dereferenceable(8) %5) #11
  br label %131

126:                                              ; preds = %120
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11, !noalias !2
  br label %127

127:                                              ; preds = %126, %95, %81
  %128 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #11, !noalias !2
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %6) #11
  %129 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %129, align 8, !alias.scope !2
  %130 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 1, i32 0
  call void @_ZN8SkStringC1ERKS_(%class.SkString* %130, %class.SkString* nonnull dereferenceable(8) %6) #11
  br label %131

131:                                              ; preds = %111, %117, %123, %127
  %132 = phi %class.SkString* [ %5, %111 ], [ %5, %117 ], [ %5, %123 ], [ %6, %127 ]
  %133 = phi i8* [ %104, %111 ], [ %104, %117 ], [ %104, %123 ], [ %128, %127 ]
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %132) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #11, !noalias !2
  %134 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 0, i32 0
  %135 = load i32, i32* %134, align 8
  store i32 %135, i32* %35, align 8
  %136 = getelementptr inbounds %"class.std::__1::tuple.111", %"class.std::__1::tuple.111"* %14, i64 0, i32 0, i32 1, i32 0
  %137 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* nonnull %13, %class.SkString* dereferenceable(8) %136) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* %136) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #11
  switch i32 %135, label %241 [
    i32 1, label %138
    i32 2, label %138
    i32 3, label %182
  ]

138:                                              ; preds = %131, %131
  %139 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %91, align 8
  %140 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %139, i64 0, i32 2
  %141 = call i8* @strstr(i8* %140, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #12, !noalias !5
  %142 = icmp eq i8* %141, null
  br i1 %142, label %175, label %143

143:                                              ; preds = %138
  %144 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #11, !noalias !5
  store i32 -1431655766, i32* %4, align 4, !noalias !5
  %145 = call i8* @strstr(i8* %140, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i64 0, i64 0)) #12, !noalias !5
  %146 = icmp eq i8* %145, null
  br i1 %146, label %158, label %147

147:                                              ; preds = %143
  %148 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %145, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0), i32* nonnull %4) #11, !noalias !5
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %153, label %150

150:                                              ; preds = %147
  %151 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %145, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i64 0, i64 0), i32* nonnull %4) #11, !noalias !5
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %158

153:                                              ; preds = %150, %147
  %154 = load i32, i32* %4, align 4, !noalias !5
  switch i32 %154, label %173 [
    i32 2000, label %155
    i32 3000, label %155
    i32 4000, label %156
    i32 2500, label %156
    i32 510, label %157
    i32 515, label %157
    i32 520, label %157
    i32 530, label %157
  ]

155:                                              ; preds = %153, %153
  br label %173

156:                                              ; preds = %153, %153
  br label %173

157:                                              ; preds = %153, %153, %153, %153
  br label %173

158:                                              ; preds = %150, %143
  %159 = call i8* @strstr(i8* %140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0)) #12, !noalias !5
  %160 = icmp eq i8* %159, null
  br i1 %160, label %173, label %161

161:                                              ; preds = %158
  %162 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %159, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0), i32* nonnull %4) #11, !noalias !5
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %170, label %164

164:                                              ; preds = %161
  %165 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %159, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54, i64 0, i64 0), i32* nonnull %4) #11, !noalias !5
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %170, label %167

167:                                              ; preds = %164
  %168 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %159, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.55, i64 0, i64 0), i32* nonnull %4) #11, !noalias !5
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %173

170:                                              ; preds = %167, %164, %161
  %171 = load i32, i32* %4, align 4, !noalias !5
  switch i32 %171, label %173 [
    i32 540, label %172
    i32 550, label %172
    i32 555, label %172
    i32 580, label %172
  ]

172:                                              ; preds = %170, %170, %170, %170
  br label %173

173:                                              ; preds = %172, %170, %167, %158, %157, %156, %155, %153
  %174 = phi i32 [ 36, %158 ], [ 36, %170 ], [ 22, %172 ], [ 36, %167 ], [ 36, %153 ], [ 22, %157 ], [ 15, %156 ], [ 15, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #11, !noalias !5
  br label %236

175:                                              ; preds = %138
  %176 = call i8* @strstr(i8* %140, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0)) #12, !noalias !5
  %177 = icmp eq i8* %176, null
  br i1 %177, label %178, label %236

178:                                              ; preds = %175
  %179 = call i8* @strstr(i8* %140, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0)) #12, !noalias !5
  %180 = icmp eq i8* %179, null
  %181 = select i1 %180, i32 7, i32 6
  br label %236

182:                                              ; preds = %131
  %183 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %91, align 8
  %184 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %183, i64 0, i32 2
  %185 = bitcast %class.SkTArray* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #11, !noalias !8
  %186 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  %187 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 1
  store %class.SkString* null, %class.SkString** %186, align 8, !noalias !8
  store i64 1, i64* %187, align 8, !noalias !8
  call void @_Z10SkStrSplitPKcS0_14SkStrSplitModeP8SkTArrayI8SkStringLb0EE(i8* %184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.58, i64 0, i64 0), i32 1, %class.SkTArray* nonnull %3) #11, !noalias !8
  %188 = load i64, i64* %187, align 8, !noalias !8
  %189 = and i64 %188, 4294967294
  %190 = icmp eq i64 %189, 6
  br i1 %190, label %191, label %211

191:                                              ; preds = %182
  %192 = load %class.SkString*, %class.SkString** %186, align 8, !noalias !8
  %193 = getelementptr inbounds %class.SkString, %class.SkString* %192, i64 0, i32 0, i32 0
  %194 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %193, align 8, !noalias !8
  %195 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %194, i64 0, i32 2
  %196 = getelementptr inbounds %class.SkString, %class.SkString* %192, i64 1, i32 0, i32 0
  %197 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %196, align 8, !noalias !8
  %198 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %197, i64 0, i32 2
  %199 = getelementptr inbounds i8, i8* %198, i64 1
  %200 = getelementptr inbounds %class.SkString, %class.SkString* %192, i64 2, i32 0, i32 0
  %201 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %200, align 8, !noalias !8
  %202 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %201, i64 0, i32 2
  %203 = getelementptr inbounds i8, i8* %202, i64 1
  %204 = call fastcc i32 @_ZL10get_vendorPKc(i8* %195) #11, !noalias !8
  %205 = call fastcc { i32, i64 } @_ZL22get_driver_and_version12GrGLStandard10GrGLVendorPKcS2_(i32 2, i32 %204, i8* %199, i8* %203) #11, !noalias !8
  %206 = extractvalue { i32, i64 } %205, 0
  %207 = extractvalue { i32, i64 } %205, 1
  %208 = call fastcc i32 @_ZL12get_rendererPKcRK14GrGLExtensions(i8* %199, %class.GrGLExtensions* dereferenceable(24) %84) #11, !noalias !8
  %209 = load i64, i64* %187, align 8, !noalias !8
  %210 = and i64 %209, 4294967294
  br label %211

211:                                              ; preds = %191, %182
  %212 = phi i64 [ %210, %191 ], [ %189, %182 ]
  %213 = phi i64 [ %209, %191 ], [ %188, %182 ]
  %214 = phi i32 [ %204, %191 ], [ 7, %182 ]
  %215 = phi i32 [ %208, %191 ], [ 36, %182 ]
  %216 = phi i32 [ %206, %191 ], [ 6, %182 ]
  %217 = phi i64 [ %207, %191 ], [ 0, %182 ]
  %218 = icmp eq i64 %212, 0
  br i1 %218, label %219, label %223

219:                                              ; preds = %223, %211
  %220 = phi i64 [ %213, %211 ], [ %228, %223 ]
  %221 = and i64 %220, 1
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %235, label %232

223:                                              ; preds = %211, %223
  %224 = phi i64 [ %227, %223 ], [ 0, %211 ]
  %225 = load %class.SkString*, %class.SkString** %186, align 8, !noalias !8
  %226 = getelementptr inbounds %class.SkString, %class.SkString* %225, i64 %224
  call void @_ZN8SkStringD1Ev(%class.SkString* %226) #11, !noalias !8
  %227 = add nuw nsw i64 %224, 1
  %228 = load i64, i64* %187, align 8, !noalias !8
  %229 = lshr i64 %228, 1
  %230 = and i64 %229, 2147483647
  %231 = icmp ult i64 %227, %230
  br i1 %231, label %223, label %219

232:                                              ; preds = %219
  %233 = bitcast %class.SkTArray* %3 to i8**
  %234 = load i8*, i8** %233, align 8, !noalias !8
  call void @_Z7sk_freePv(i8* %234) #11, !noalias !8
  br label %235

235:                                              ; preds = %219, %232
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #11, !noalias !8
  br label %236

236:                                              ; preds = %178, %175, %173, %235
  %237 = phi i32 [ %214, %235 ], [ 3, %173 ], [ 5, %175 ], [ %181, %178 ]
  %238 = phi i32 [ %215, %235 ], [ %174, %173 ], [ 36, %175 ], [ 36, %178 ]
  %239 = phi i32 [ %216, %235 ], [ 6, %173 ], [ 6, %175 ], [ 6, %178 ]
  %240 = phi i64 [ %217, %235 ], [ 0, %173 ], [ 0, %175 ], [ 0, %178 ]
  store i32 %237, i32* %36, align 4
  store i32 %238, i32* %37, align 8
  store i32 %239, i32* %38, align 4
  store i64 %240, i64* %40, align 8
  br label %241

241:                                              ; preds = %236, %131
  %242 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %242) #11
  store i32 -1431655766, i32* %9, align 4
  %243 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %243) #11
  store i32 -1431655766, i32* %10, align 4
  %244 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %244) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %244, i8 0, i64 9, i1 false) #11
  %245 = call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZL17is_commamd_bufferPKcS0_E9kChromium, i64 0, i64 0)) #12
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %254, label %247

247:                                              ; preds = %241
  %248 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %50, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i64 0, i64 0), i32* nonnull %9, i32* nonnull %10, i8* nonnull %244) #11
  %249 = icmp eq i32 %248, 3
  br i1 %249, label %250, label %254

250:                                              ; preds = %247
  %251 = call i32 @bcmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZL17is_commamd_bufferPKcS0_E9kChromium, i64 0, i64 0), i8* nonnull %244, i64 9) #11
  %252 = icmp eq i32 %251, 0
  %253 = zext i1 %252 to i8
  br label %254

254:                                              ; preds = %241, %247, %250
  %255 = phi i8 [ 1, %241 ], [ 0, %247 ], [ %253, %250 ]
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %244) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %243) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %242) #11
  store i8 %255, i8* %41, align 8
  %256 = bitcast %struct.GrGLDriverInfo* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* nonnull align 8 %26, i64 64, i1 false)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #11
  br label %257

257:                                              ; preds = %254, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc i32 @_ZL10get_vendorPKc(i8* nocapture readonly) unnamed_addr #4 {
  %2 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)) #12
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %29, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)) #12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0)) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 6) #12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0)) #12
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %16
  %20 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %19
  %23 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0)) #12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #12
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i32 6, i32 7
  br label %29

29:                                               ; preds = %25, %22, %16, %19, %10, %13, %7, %4, %1
  %30 = phi i32 [ 0, %1 ], [ 1, %4 ], [ 2, %7 ], [ 3, %13 ], [ 3, %10 ], [ 4, %19 ], [ 4, %16 ], [ 5, %22 ], [ %28, %25 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL12get_rendererPKcRK14GrGLExtensions(i8* readonly, %class.GrGLExtensions* dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE9kTegraStr, i64 0, i64 0), i64 12) #12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = tail call zeroext i1 @_ZNK14GrGLExtensions3hasEPKc(%class.GrGLExtensions* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #11
  %15 = zext i1 %14 to i32
  br label %236

16:                                               ; preds = %2
  %17 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 -1431655766, i32* %3, align 4
  %18 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i32* nonnull %3) #11
  %19 = icmp eq i32 %18, 1
  %20 = load i32, i32* %3, align 4
  %21 = icmp ult i32 %20, 10
  %22 = and i1 %19, %21
  br i1 %22, label %234, label %23

23:                                               ; preds = %16
  %24 = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA4Str, i64 0, i64 0), i64 8) #12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %234, label %26

26:                                               ; preds = %23
  %27 = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA5Str, i64 0, i64 0), i64 8) #12
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %234, label %29

29:                                               ; preds = %26
  %30 = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA6Str, i64 0, i64 0), i64 8) #12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %234, label %32

32:                                               ; preds = %29
  %33 = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE16kPowerVRRogueStr, i64 0, i64 0), i64 13) #12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %234, label %35

35:                                               ; preds = %32
  %36 = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA7Str, i64 0, i64 0), i64 8) #12
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %234, label %38

38:                                               ; preds = %35
  %39 = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE11kAppleA8Str, i64 0, i64 0), i64 8) #12
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %234, label %41

41:                                               ; preds = %38
  %42 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #11
  store i32 -1431655766, i32* %4, align 4
  %43 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0), i32* nonnull %4) #11
  %44 = icmp slt i32 %43, 1
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32* nonnull %4) #11
  br label %47

47:                                               ; preds = %45, %41
  %48 = phi i32 [ %46, %45 ], [ %43, %41 ]
  %49 = icmp eq i32 %48, 1
  %50 = load i32, i32* %4, align 4
  %51 = icmp sgt i32 %50, 299
  %52 = and i1 %49, %51
  br i1 %52, label %53, label %72

53:                                               ; preds = %47
  %54 = icmp slt i32 %50, 400
  br i1 %54, label %232, label %55

55:                                               ; preds = %53
  %56 = icmp slt i32 %50, 500
  br i1 %56, label %57, label %60

57:                                               ; preds = %55
  %58 = icmp sgt i32 %50, 429
  %59 = select i1 %58, i32 5, i32 6
  br label %232

60:                                               ; preds = %55
  %61 = icmp slt i32 %50, 600
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = icmp eq i32 %50, 530
  %64 = select i1 %63, i32 7, i32 8
  br label %232

65:                                               ; preds = %60
  %66 = icmp slt i32 %50, 700
  br i1 %66, label %67, label %72

67:                                               ; preds = %65
  switch i32 %50, label %71 [
    i32 615, label %232
    i32 620, label %68
    i32 630, label %69
    i32 640, label %70
  ]

68:                                               ; preds = %67
  br label %232

69:                                               ; preds = %67
  br label %232

70:                                               ; preds = %67
  br label %232

71:                                               ; preds = %67
  br label %232

72:                                               ; preds = %65, %47
  %73 = call i32 @strcmp(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0), i8* %0) #12
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %232, label %75

75:                                               ; preds = %72
  %76 = call i8* @strstr(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #12
  %77 = icmp eq i8* %76, null
  br i1 %77, label %137, label %78

78:                                               ; preds = %75
  %79 = call i32 @strcmp(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0), i8* nonnull %76) #12
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %232, label %81

81:                                               ; preds = %78
  %82 = call i32 @strcmp(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i8* nonnull %76) #12
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %232, label %84

84:                                               ; preds = %81
  %85 = call i8* @strstr(i8* nonnull %76, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0)) #12
  %86 = icmp eq i8* %85, null
  br i1 %86, label %87, label %232

87:                                               ; preds = %84
  %88 = call i8* @strstr(i8* nonnull %76, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #12
  %89 = icmp eq i8* %88, null
  br i1 %89, label %90, label %232

90:                                               ; preds = %87
  %91 = call i8* @strstr(i8* nonnull %76, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0)) #12
  %92 = icmp eq i8* %91, null
  br i1 %92, label %137, label %93

93:                                               ; preds = %90
  %94 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #11
  store i32 -1431655766, i32* %5, align 4
  %95 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %91, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28, i64 0, i64 0), i32* nonnull %5) #11
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %93
  %98 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %91, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i32* nonnull %5) #11
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %134, label %100

100:                                              ; preds = %97, %93
  %101 = load i32, i32* %5, align 4
  switch i32 %101, label %102 [
    i32 3000, label %135
    i32 2000, label %135
    i32 4000, label %133
    i32 2500, label %133
  ]

102:                                              ; preds = %100
  %103 = add i32 %101, -4200
  %104 = icmp ult i32 %103, 1001
  br i1 %104, label %135, label %105

105:                                              ; preds = %102
  %106 = add i32 %101, -400
  %107 = icmp ult i32 %106, 6
  br i1 %107, label %135, label %108

108:                                              ; preds = %105
  %109 = add i32 %101, -5300
  %110 = icmp ult i32 %109, 1001
  br i1 %110, label %135, label %111

111:                                              ; preds = %108
  %112 = add i32 %101, -500
  %113 = icmp ult i32 %112, 6
  br i1 %113, label %135, label %114

114:                                              ; preds = %111
  %115 = add i32 %101, -510
  %116 = icmp ult i32 %115, 71
  br i1 %116, label %135, label %117

117:                                              ; preds = %114
  %118 = add i32 %101, -600
  %119 = icmp ult i32 %118, 6
  br i1 %119, label %135, label %120

120:                                              ; preds = %117
  switch i32 %101, label %125 [
    i32 630, label %121
    i32 610, label %121
  ]

121:                                              ; preds = %120, %120
  %122 = call i8* @strstr(i8* nonnull %76, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0)) #12
  %123 = icmp eq i8* %122, null
  %124 = select i1 %123, i32 24, i32 25
  br label %135

125:                                              ; preds = %120
  %126 = add i32 %101, -610
  %127 = icmp ult i32 %126, 41
  br i1 %127, label %135, label %128

128:                                              ; preds = %125
  %129 = icmp eq i32 %101, 655
  br i1 %129, label %135, label %130

130:                                              ; preds = %128
  %131 = add i32 %101, -910
  %132 = icmp ult i32 %131, 41
  br i1 %132, label %135, label %134

133:                                              ; preds = %100, %100
  br label %135

134:                                              ; preds = %130, %97
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #11
  br label %137

135:                                              ; preds = %121, %100, %100, %102, %105, %108, %111, %114, %117, %125, %128, %130, %133
  %136 = phi i32 [ 16, %133 ], [ 26, %130 ], [ 25, %128 ], [ 24, %125 ], [ 23, %117 ], [ 22, %114 ], [ 21, %111 ], [ 20, %108 ], [ 19, %105 ], [ 18, %102 ], [ 15, %100 ], [ 15, %100 ], [ %124, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #11
  br label %232

137:                                              ; preds = %90, %134, %75
  %138 = call i8* @strstr(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE10kRadeonStr, i64 0, i64 0)) #12
  %139 = icmp eq i8* %138, null
  br i1 %139, label %214, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds i8, i8* %138, i64 7
  %142 = call i32 @strncmp(i8* %141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE6kTMStr, i64 0, i64 0), i64 5) #12
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds i8, i8* %138, i64 12
  %145 = select i1 %143, i8* %144, i8* %141
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 -86, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 -86, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  store i8 -86, i8* %8, align 1
  %146 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #11
  store i32 -1431655766, i32* %9, align 4
  %147 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %145, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), i8* nonnull %6, i8* nonnull %7) #11
  %148 = icmp eq i32 %147, 2
  br i1 %148, label %149, label %159

149:                                              ; preds = %140
  %150 = load i8, i8* %6, align 1
  %151 = sext i8 %150 to i32
  %152 = add nsw i32 %151, -48
  %153 = icmp ult i32 %152, 10
  br i1 %153, label %154, label %159

154:                                              ; preds = %149
  %155 = load i8, i8* %7, align 1
  %156 = sext i8 %155 to i32
  %157 = add nsw i32 %156, -48
  %158 = icmp ult i32 %157, 10
  br i1 %158, label %211, label %159

159:                                              ; preds = %154, %149, %140
  %160 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %145, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* nonnull %6, i8* nonnull %7) #11
  %161 = icmp eq i32 %160, 2
  br i1 %161, label %162, label %172

162:                                              ; preds = %159
  %163 = load i8, i8* %6, align 1
  %164 = sext i8 %163 to i32
  %165 = add nsw i32 %164, -48
  %166 = icmp ult i32 %165, 10
  br i1 %166, label %167, label %172

167:                                              ; preds = %162
  %168 = load i8, i8* %7, align 1
  %169 = sext i8 %168 to i32
  %170 = add nsw i32 %169, -48
  %171 = icmp ult i32 %170, 10
  br i1 %171, label %211, label %172

172:                                              ; preds = %167, %162, %159
  %173 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %145, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* nonnull %6, i8* nonnull %7, i8* nonnull %8) #11
  %174 = icmp eq i32 %173, 3
  br i1 %174, label %175, label %190

175:                                              ; preds = %172
  %176 = load i8, i8* %6, align 1
  %177 = sext i8 %176 to i32
  %178 = add nsw i32 %177, -48
  %179 = icmp ult i32 %178, 10
  br i1 %179, label %180, label %190

180:                                              ; preds = %175
  %181 = load i8, i8* %7, align 1
  %182 = sext i8 %181 to i32
  %183 = add nsw i32 %182, -48
  %184 = icmp ult i32 %183, 10
  br i1 %184, label %185, label %190

185:                                              ; preds = %180
  %186 = load i8, i8* %8, align 1
  %187 = sext i8 %186 to i32
  %188 = add nsw i32 %187, -48
  %189 = icmp ult i32 %188, 10
  br i1 %189, label %211, label %190

190:                                              ; preds = %185, %180, %175, %172
  %191 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %145, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0), i8* nonnull %6, i8* nonnull %7, i8* nonnull %8) #11
  %192 = icmp eq i32 %191, 3
  br i1 %192, label %193, label %208

193:                                              ; preds = %190
  %194 = load i8, i8* %6, align 1
  %195 = sext i8 %194 to i32
  %196 = add nsw i32 %195, -48
  %197 = icmp ult i32 %196, 10
  br i1 %197, label %198, label %208

198:                                              ; preds = %193
  %199 = load i8, i8* %7, align 1
  %200 = sext i8 %199 to i32
  %201 = add nsw i32 %200, -48
  %202 = icmp ult i32 %201, 10
  br i1 %202, label %203, label %208

203:                                              ; preds = %198
  %204 = load i8, i8* %8, align 1
  %205 = sext i8 %204 to i32
  %206 = add nsw i32 %205, -48
  %207 = icmp ult i32 %206, 10
  br i1 %207, label %211, label %208

208:                                              ; preds = %203, %198, %193, %190
  %209 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %145, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i32* nonnull %9) #11
  %210 = icmp ne i32 %209, 1
  br label %211

211:                                              ; preds = %208, %203, %185, %167, %154
  %212 = phi i32 [ 32, %154 ], [ 33, %167 ], [ 31, %185 ], [ 34, %203 ], [ 35, %208 ]
  %213 = phi i1 [ false, %154 ], [ false, %167 ], [ false, %185 ], [ false, %203 ], [ %210, %208 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  br i1 %213, label %214, label %232

214:                                              ; preds = %211, %137
  %215 = call i8* @strstr(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0)) #12
  %216 = icmp eq i8* %215, null
  br i1 %216, label %217, label %232

217:                                              ; preds = %214
  %218 = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE9kMaliGStr, i64 0, i64 0), i64 6) #12
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %232, label %220

220:                                              ; preds = %217
  %221 = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZL12get_rendererPKcRK14GrGLExtensionsE9kMaliTStr, i64 0, i64 0), i64 6) #12
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %232, label %223

223:                                              ; preds = %220
  %224 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %224) #11
  store i32 -1431655766, i32* %10, align 4
  %225 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), i32* nonnull %10) #11
  %226 = icmp eq i32 %225, 1
  %227 = load i32, i32* %10, align 4
  %228 = add i32 %227, -400
  %229 = icmp ult i32 %228, 100
  %230 = and i1 %226, %229
  %231 = select i1 %230, i32 28, i32 36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %224) #11
  br label %232

232:                                              ; preds = %87, %84, %78, %81, %135, %211, %220, %217, %214, %72, %67, %53, %223, %71, %70, %69, %68, %62, %57
  %233 = phi i32 [ %59, %57 ], [ %64, %62 ], [ 10, %68 ], [ 11, %69 ], [ 12, %70 ], [ 13, %71 ], [ %231, %223 ], [ 4, %53 ], [ 9, %67 ], [ 14, %72 ], [ 27, %214 ], [ 29, %217 ], [ 30, %220 ], [ %212, %211 ], [ 17, %87 ], [ 15, %84 ], [ 18, %78 ], [ 18, %81 ], [ %136, %135 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #11
  br label %234

234:                                              ; preds = %32, %35, %38, %23, %26, %29, %16, %232
  %235 = phi i32 [ %233, %232 ], [ 2, %16 ], [ 2, %29 ], [ 2, %26 ], [ 2, %23 ], [ 3, %38 ], [ 3, %35 ], [ 3, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  br label %236

236:                                              ; preds = %234, %13
  %237 = phi i32 [ %15, %13 ], [ %235, %234 ]
  ret i32 %237
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i32, i64 } @_ZL22get_driver_and_version12GrGLStandard10GrGLVendorPKcS2_(i32, i32, i8* nocapture readonly, i8* nocapture readonly) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %5, align 4
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %6, align 4
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 -1431655766, i32* %7, align 4
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  store i32 -1431655766, i32* %8, align 4
  %16 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 -1431655766, i32* %9, align 4
  %17 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 -1431655766, i32* %10, align 4
  switch i32 %0, label %69 [
    i32 1, label %18
    i32 2, label %45
  ]

18:                                               ; preds = %4
  %19 = icmp eq i32 %1, 5
  br i1 %19, label %20, label %31

20:                                               ; preds = %18
  %21 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8, i32* nonnull %9) #11
  %22 = icmp eq i32 %21, 5
  br i1 %22, label %23, label %127

23:                                               ; preds = %20
  %24 = load i32, i32* %8, align 4
  %25 = zext i32 %24 to i64
  %26 = shl nuw i64 %25, 32
  %27 = load i32, i32* %9, align 4
  %28 = sext i32 %27 to i64
  %29 = shl nsw i64 %28, 16
  %30 = or i64 %29, %26
  br label %127

31:                                               ; preds = %18
  %32 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %8, i32* nonnull %9) #11
  %33 = icmp eq i32 %32, 4
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %8, i32* nonnull %9) #11
  %36 = icmp eq i32 %35, 4
  br i1 %36, label %37, label %69

37:                                               ; preds = %31, %34
  %38 = load i32, i32* %8, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = load i32, i32* %9, align 4
  %42 = sext i32 %41 to i64
  %43 = shl nsw i64 %42, 16
  %44 = or i64 %43, %40
  br label %127

45:                                               ; preds = %4
  %46 = icmp eq i32 %1, 5
  br i1 %46, label %47, label %58

47:                                               ; preds = %45
  %48 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %8, i32* nonnull %9) #11
  %49 = icmp eq i32 %48, 4
  br i1 %49, label %50, label %127

50:                                               ; preds = %47
  %51 = load i32, i32* %8, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw i64 %52, 32
  %54 = load i32, i32* %9, align 4
  %55 = sext i32 %54 to i64
  %56 = shl nsw i64 %55, 16
  %57 = or i64 %56, %53
  br label %127

58:                                               ; preds = %45
  %59 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %8, i32* nonnull %9) #11
  %60 = icmp eq i32 %59, 4
  br i1 %60, label %61, label %69

61:                                               ; preds = %58
  %62 = load i32, i32* %8, align 4
  %63 = zext i32 %62 to i64
  %64 = shl nuw i64 %63, 32
  %65 = load i32, i32* %9, align 4
  %66 = sext i32 %65 to i64
  %67 = shl nsw i64 %66, 16
  %68 = or i64 %67, %64
  br label %127

69:                                               ; preds = %34, %4, %58
  switch i32 %1, label %123 [
    i32 1, label %70
    i32 3, label %84
    i32 4, label %98
    i32 2, label %109
  ]

70:                                               ; preds = %69
  %71 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.42, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %8, i32* nonnull %9, i32* nonnull %10) #11
  %72 = icmp eq i32 %71, 5
  br i1 %72, label %73, label %127

73:                                               ; preds = %70
  %74 = load i32, i32* %8, align 4
  %75 = zext i32 %74 to i64
  %76 = shl nuw i64 %75, 32
  %77 = load i32, i32* %9, align 4
  %78 = sext i32 %77 to i64
  %79 = shl nsw i64 %78, 16
  %80 = or i64 %79, %76
  %81 = load i32, i32* %10, align 4
  %82 = sext i32 %81 to i64
  %83 = or i64 %80, %82
  br label %127

84:                                               ; preds = %69
  %85 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %8, i32* nonnull %9, i32* nonnull %10) #11
  %86 = icmp eq i32 %85, 5
  br i1 %86, label %87, label %127

87:                                               ; preds = %84
  %88 = load i32, i32* %8, align 4
  %89 = zext i32 %88 to i64
  %90 = shl nuw i64 %89, 32
  %91 = load i32, i32* %9, align 4
  %92 = sext i32 %91 to i64
  %93 = shl nsw i64 %92, 16
  %94 = or i64 %93, %90
  %95 = load i32, i32* %10, align 4
  %96 = sext i32 %95 to i64
  %97 = or i64 %94, %96
  br label %127

98:                                               ; preds = %69
  %99 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.44, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %8, i32* nonnull %9) #11
  %100 = icmp eq i32 %99, 4
  br i1 %100, label %101, label %127

101:                                              ; preds = %98
  %102 = load i32, i32* %8, align 4
  %103 = zext i32 %102 to i64
  %104 = shl nuw i64 %103, 32
  %105 = load i32, i32* %9, align 4
  %106 = sext i32 %105 to i64
  %107 = shl nsw i64 %106, 16
  %108 = or i64 %107, %104
  br label %127

109:                                              ; preds = %69
  %110 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #11
  store i32 -1431655766, i32* %11, align 4
  %111 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %8, i32* nonnull %9, i32* nonnull %11) #11
  %112 = icmp eq i32 %111, 5
  br i1 %112, label %113, label %121

113:                                              ; preds = %109
  %114 = load i32, i32* %8, align 4
  %115 = zext i32 %114 to i64
  %116 = shl nuw i64 %115, 32
  %117 = load i32, i32* %9, align 4
  %118 = sext i32 %117 to i64
  %119 = shl nsw i64 %118, 16
  %120 = or i64 %119, %116
  br label %121

121:                                              ; preds = %113, %109
  %122 = phi i64 [ %120, %113 ], [ 0, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #11
  br label %127

123:                                              ; preds = %69
  %124 = call i32 @strncmp(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_ZZL22get_driver_and_version12GrGLStandard10GrGLVendorPKcS2_E15kEmulatorPrefix, i64 0, i64 0), i8* %2, i64 37) #12
  %125 = icmp eq i32 %124, 0
  %126 = select i1 %125, i32 5, i32 6
  br label %127

127:                                              ; preds = %123, %37, %20, %23, %61, %47, %50, %98, %101, %84, %87, %70, %73, %121
  %128 = phi i32 [ 6, %121 ], [ 4, %101 ], [ 4, %98 ], [ 2, %87 ], [ 2, %84 ], [ 3, %73 ], [ 3, %70 ], [ 0, %37 ], [ 1, %20 ], [ 1, %23 ], [ 0, %61 ], [ 1, %47 ], [ 1, %50 ], [ %126, %123 ]
  %129 = phi i64 [ %122, %121 ], [ %108, %101 ], [ 0, %98 ], [ %97, %87 ], [ 0, %84 ], [ %83, %73 ], [ 0, %70 ], [ %44, %37 ], [ 0, %20 ], [ %30, %23 ], [ %68, %61 ], [ 0, %47 ], [ %57, %50 ], [ 0, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  %130 = insertvalue { i32, i64 } undef, i32 %128, 0
  %131 = insertvalue { i32, i64 } %130, i64 %129, 1
  ret { i32, i64 } %131
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_Z17GrToGLStencilFunc13GrStencilTest(i16 zeroext) local_unnamed_addr #6 {
  %2 = zext i16 %0 to i64
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* @_ZZ17GrToGLStencilFunc13GrStencilTestE6gTable, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z22GrGLFormatIsCompressed10GrGLFormat(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 27
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @llvm.trap()
  unreachable

4:                                                ; preds = %1
  %5 = trunc i32 %0 to i27
  %6 = lshr i27 491520, %5
  %7 = and i27 %6, 1
  %8 = icmp ne i27 %7, 0
  ret i1 %8
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

declare zeroext i1 @_ZNK14GrGLExtensions3hasEPKc(%class.GrGLExtensions*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN8SkString3setEPKcm(%class.SkString*, i8*, i64) local_unnamed_addr #1

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #1

declare void @_Z10SkStrSplitPKcS0_14SkStrSplitModeP8SkTArrayI8SkStringLb0EE(i8*, i8*, i32, %class.SkTArray*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL17get_angle_backendPKc: argument 0"}
!4 = distinct !{!4, !"_ZL17get_angle_backendPKc"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZL33get_angle_d3d_vendor_and_rendererPKc: argument 0"}
!7 = distinct !{!7, !"_ZL33get_angle_d3d_vendor_and_rendererPKc"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZL32get_angle_gl_vendor_and_rendererPKcRK14GrGLExtensions: argument 0"}
!10 = distinct !{!10, !"_ZL32get_angle_gl_vendor_and_rendererPKcRK14GrGLExtensions"}
