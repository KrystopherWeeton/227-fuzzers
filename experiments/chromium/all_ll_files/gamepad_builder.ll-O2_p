; ModuleID = '../../device/vr/util/gamepad_builder.cc'
source_filename = "../../device/vr/util/gamepad_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::GamepadBuilder" = type { i32 (...)**, %"class.device::Gamepad" }
%"class.device::Gamepad" = type <{ i8, i8, [128 x i16], [2 x i8], i64, i32, i32, [16 x double], i32, [32 x %"class.device::GamepadButton"], %"class.device::GamepadHapticActuator", i32, %"class.device::GamepadPose", i32, i32, i8, [3 x i8] }>
%"class.device::GamepadButton" = type <{ i8, i8, i8, i8, double }>
%"class.device::GamepadHapticActuator" = type { i8, i32 }
%"class.device::GamepadPose" = type { i8, i8, i8, %"class.device::GamepadQuaternion", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector" }
%"class.device::GamepadQuaternion" = type { i8, float, float, float, float }
%"class.device::GamepadVector" = type { i8, float, float, float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [3 x i8], %union.anon.10 }
%union.anon.10 = type { %"class.device::Gamepad" }
%"struct.device::GamepadBuilder::ButtonData" = type { i8, i8, double, i32, double, double }

@_ZTVN6device14GamepadBuilderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::GamepadBuilder"*)* @_ZN6device14GamepadBuilderD2Ev to i8*), i8* bitcast (void (%"class.device::GamepadBuilder"*)* @_ZN6device14GamepadBuilderD0Ev to i8*), i8* bitcast (i1 (%"class.device::GamepadBuilder"*)* @_ZNK6device14GamepadBuilder7IsValidEv to i8*), i8* bitcast (void (%"class.absl::optional"*, %"class.device::GamepadBuilder"*)* @_ZN6device14GamepadBuilder10GetGamepadEv to i8*)] }, align 8

@_ZN6device14GamepadBuilderC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14GamepadMappingENS_5mojom12XRHandednessE = hidden unnamed_addr alias void (%"class.device::GamepadBuilder"*, %"class.std::__1::basic_string"*, i32, i32), void (%"class.device::GamepadBuilder"*, %"class.std::__1::basic_string"*, i32, i32)* @_ZN6device14GamepadBuilderC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14GamepadMappingENS_5mojom12XRHandednessE
@_ZN6device14GamepadBuilderD1Ev = hidden unnamed_addr alias void (%"class.device::GamepadBuilder"*), void (%"class.device::GamepadBuilder"*)* @_ZN6device14GamepadBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilderC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_14GamepadMappingENS_5mojom12XRHandednessE(%"class.device::GamepadBuilder"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6device14GamepadBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1
  tail call void @_ZN6device7GamepadC1Ev(%"class.device::Gamepad"* %7) #9
  %8 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %7, i64 0, i32 0
  store i8 1, i8* %8, align 8
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %10 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 4
  store i64 %9, i64* %10, align 4
  %11 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 11
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 13
  store i32 %3, i32* %12, align 4
  %13 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %21 = select i1 %17, i8* %19, i8* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.1"* nonnull sret %5, i8* %21, i64 %25) #9
  call void @_ZN6device7Gamepad5SetIDERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.device::Gamepad"* %7, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %5) #9
  %26 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %4
  %31 = bitcast %"class.std::__1::basic_string.1"* %5 to i8**
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %4, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  ret void
}

declare void @_ZN6device7GamepadC1Ev(%"class.device::Gamepad"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6device7Gamepad5SetIDERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.device::Gamepad"*, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.1"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device14GamepadBuilderD2Ev(%"class.device::GamepadBuilder"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilderD0Ev(%"class.device::GamepadBuilder"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.device::GamepadBuilder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6device14GamepadBuilder7IsValidEv(%"class.device::GamepadBuilder"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 11
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ %8, %5 ], [ true, %1 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilder10GetGamepadEv(%"class.absl::optional"* noalias sret, %"class.device::GamepadBuilder"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.device::GamepadBuilder"* %1 to i1 (%"class.device::GamepadBuilder"*)***
  %4 = load i1 (%"class.device::GamepadBuilder"*)**, i1 (%"class.device::GamepadBuilder"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.device::GamepadBuilder"*)*, i1 (%"class.device::GamepadBuilder"*)** %4, i64 2
  %6 = load i1 (%"class.device::GamepadBuilder"*)*, i1 (%"class.device::GamepadBuilder"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.device::GamepadBuilder"* %1) #9
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN6device7GamepadC1ERKS0_(%"class.device::Gamepad"* %11, %"class.device::Gamepad"* dereferenceable(920) %9) #9
  br label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 920, i1 false) #9
  br label %15

15:                                               ; preds = %12, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilder9AddButtonERKNS_13GamepadButtonE(%"class.device::GamepadBuilder"* nocapture, %"class.device::GamepadButton"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  store i32 %5, i32* %3, align 4
  %6 = zext i32 %4 to i64
  %7 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 9, i64 %6, i32 0
  %8 = getelementptr inbounds %"class.device::GamepadButton", %"class.device::GamepadButton"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 12, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilder9AddButtonERKNS0_10ButtonDataE(%"class.device::GamepadBuilder"* nocapture, %"struct.device::GamepadBuilder::ButtonData"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 2
  %8 = bitcast double* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 4
  %13 = zext i32 %11 to i64
  %14 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 9, i64 %13, i32 0
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds i8, i8* %14, i64 1
  store i8 %4, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %14, i64 2
  store i8 %6, i8* %16, align 2
  %17 = getelementptr inbounds i8, i8* %14, i64 4
  %18 = bitcast i8* %17 to i64*
  store i64 %9, i64* %18, align 4
  %19 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %30 [
    i32 0, label %56
    i32 2, label %21
  ]

21:                                               ; preds = %2
  %22 = load i8, i8* %5, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 5
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, 1
  %28 = zext i32 %26 to i64
  %29 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 7, i64 %28
  store double 0.000000e+00, double* %29, align 4
  br label %48

30:                                               ; preds = %2, %21
  %31 = icmp eq i32 %20, 1
  %32 = select i1 %31, double 1.600000e-01, double 0.000000e+00
  %33 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 4
  %34 = load double, double* %33, align 8
  %35 = tail call double @llvm.fabs.f64(double %34) #9
  %36 = fcmp olt double %35, %32
  %37 = select i1 %36, double 0.000000e+00, double %34
  %38 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 4
  %41 = zext i32 %39 to i64
  %42 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 7, i64 %41
  store double %37, double* %42, align 4
  %43 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 5
  %44 = load double, double* %43, align 8
  %45 = tail call double @llvm.fabs.f64(double %44) #9
  %46 = fcmp olt double %45, %32
  %47 = select i1 %46, double 0.000000e+00, double %44
  br label %48

48:                                               ; preds = %24, %30
  %49 = phi i32 [ %39, %30 ], [ %26, %24 ]
  %50 = phi i32* [ %38, %30 ], [ %25, %24 ]
  %51 = phi i32 [ %40, %30 ], [ %27, %24 ]
  %52 = phi double [ %47, %30 ], [ 0.000000e+00, %24 ]
  %53 = add i32 %49, 2
  store i32 %53, i32* %50, align 4
  %54 = zext i32 %51 to i64
  %55 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 7, i64 %54
  store double %52, double* %55, align 4
  br label %56

56:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilder7AddAxesERKNS0_10ButtonDataE(%"class.device::GamepadBuilder"* nocapture, %"struct.device::GamepadBuilder::ButtonData"* nocapture readonly dereferenceable(40)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, 1
  %14 = zext i32 %12 to i64
  %15 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 7, i64 %14
  store double 0.000000e+00, double* %15, align 4
  br label %34

16:                                               ; preds = %6, %2
  %17 = icmp eq i32 %4, 1
  %18 = select i1 %17, double 1.600000e-01, double 0.000000e+00
  %19 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 4
  %20 = load double, double* %19, align 8
  %21 = tail call double @llvm.fabs.f64(double %20) #9
  %22 = fcmp olt double %21, %18
  %23 = select i1 %22, double 0.000000e+00, double %20
  %24 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %24, align 4
  %27 = zext i32 %25 to i64
  %28 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 7, i64 %27
  store double %23, double* %28, align 4
  %29 = getelementptr inbounds %"struct.device::GamepadBuilder::ButtonData", %"struct.device::GamepadBuilder::ButtonData"* %1, i64 0, i32 5
  %30 = load double, double* %29, align 8
  %31 = tail call double @llvm.fabs.f64(double %30) #9
  %32 = fcmp olt double %31, %18
  %33 = select i1 %32, double 0.000000e+00, double %30
  br label %34

34:                                               ; preds = %16, %10
  %35 = phi i32 [ %25, %16 ], [ %12, %10 ]
  %36 = phi i32* [ %24, %16 ], [ %11, %10 ]
  %37 = phi i32 [ %26, %16 ], [ %13, %10 ]
  %38 = phi double [ %33, %16 ], [ 0.000000e+00, %10 ]
  %39 = add i32 %35, 2
  store i32 %39, i32* %36, align 4
  %40 = zext i32 %37 to i64
  %41 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 7, i64 %40
  store double %38, double* %41, align 4
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilder7AddAxisEdd(%"class.device::GamepadBuilder"* nocapture, double, double) local_unnamed_addr #6 align 2 {
  %4 = tail call double @llvm.fabs.f64(double %1)
  %5 = fcmp olt double %4, %2
  %6 = select i1 %5, double 0.000000e+00, double %1
  %7 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 4
  %10 = zext i32 %8 to i64
  %11 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 7, i64 %10
  store double %6, double* %11, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilder18AddPlaceholderAxesEv(%"class.device::GamepadBuilder"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  %5 = zext i32 %3 to i64
  %6 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 7, i64 %5
  store double 0.000000e+00, double* %6, align 4
  %7 = add i32 %3, 2
  store i32 %7, i32* %2, align 4
  %8 = zext i32 %4 to i64
  %9 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 7, i64 %8
  store double 0.000000e+00, double* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilder20AddPlaceholderButtonEv(%"class.device::GamepadBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = zext i32 %3 to i64
  %6 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 9, i64 %5, i32 0
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds i8, i8* %6, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 11, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6device14GamepadBuilder23RemovePlaceholderButtonEv(%"class.device::GamepadBuilder"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadBuilder", %"class.device::GamepadBuilder"* %0, i64 0, i32 1, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1
  store i32 %4, i32* %2, align 4
  ret void
}

declare void @_ZN6device7GamepadC1ERKS0_(%"class.device::Gamepad"*, %"class.device::Gamepad"* dereferenceable(920)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
