; ModuleID = '../../third_party/blink/renderer/core/intersection_observer/intersection_geometry.cc'
source_filename = "../../third_party/blink/renderer/core/intersection_observer/intersection_geometry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"struct.blink::IntersectionGeometry::RootGeometry" = type { float, %"struct.blink::PhysicalRect", %"class.blink::TransformationMatrix" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1834", [4 x i8] }>
%"class.WTF::RefCounted.1834" = type { %"class.base::RefCounted.1835" }
%"class.base::RefCounted.1835" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1827", i64 }
%"class.std::__1::vector.1827" = type { %"class.std::__1::__vector_base.1828" }
%"class.std::__1::__vector_base.1828" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1829" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2943 }
%class.scoped_refptr.2943 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2944", %"class.WTF::Vector.630", %"class.WTF::Vector.2946", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2944" = type { %"class.base::RefCounted.2945" }
%"class.base::RefCounted.2945" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2946" = type { %"class.WTF::VectorBuffer.2947" }
%"class.WTF::VectorBuffer.2947" = type { %"class.WTF::VectorBufferBase.2948" }
%"class.WTF::VectorBufferBase.2948" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2949 }
%union.anon.2949 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.771", %"class.WTF::Vector.771", i8, i32, %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::Member.1014", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1022", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1028", %"class.blink::Member.1030", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1033", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1056", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1065", double, double, i64, i64, %"class.blink::HeapHashSet.1067", %"class.blink::HeapHashSet.1074", i16, i8, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::TextLinkColors", %"class.blink::Member.1411", i8, [7 x i8], %"class.blink::HeapHashMap.1413", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1420", %"class.blink::Member.1425", %"class.blink::Member.1427", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1429", %"class.blink::HeapVector.1431", %"class.std::__1::unique_ptr.1439", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1445", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1458", %"class.WTF::Vector.1460", i8, i8, %"class.std::__1::unique_ptr.1465", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1471", i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::DocumentTiming", %"class.blink::Member.1479", i8, i32, %"class.blink::Member.1481", %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::Member.1487", %"class.WTF::HashMap.1489", %"class.blink::Member.1494", %"class.blink::Member.1496", %"class.blink::Member.1498", %"class.blink::Member.1500", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapHashSet.1502", i8, i32, %"class.blink::Member.1509", %"class.blink::Member.1511", i32, %"class.blink::Member.1513", %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.std::__1::unique_ptr.1519", i64, %"class.std::__1::unique_ptr.1525", i32, i32, %"class.blink::Member.1536", %"class.blink::Member.1538", %"class.blink::Member.1540", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1542", %"class.WTF::Vector.1544", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1549", %"class.blink::Member.1556", %"class.std::__1::unique_ptr.1558", %"class.blink::Member.1564", i8, i8, %"class.WTF::String", %"class.blink::Member.1566", i8, [7 x i8], %"class.blink::HeapHashMap.1568", %"class.blink::HeapObserverSet", %"class.blink::Member.1582", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1584", i32, i8, i8, %"class.blink::WeakMember.1586", %"class.blink::Member.1587" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.997" }
%"class.blink::HeapHashMap.997" = type { %"class.WTF::HashMap.1000" }
%"class.WTF::HashMap.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"struct.WTF::KeyValuePair.1003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1003" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.774 }
%class.scoped_refptr.774 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.775", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1611", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1678", i32, i8, [3 x i8], %"class.blink::HeapVector.1680", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1688", %"class.blink::Member.1690", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1699", %"class.blink::Member.1822", %"class.blink::Member.1824", i8, [7 x i8] }>
%"class.blink::Supplementable.1611" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1612" }
%"class.blink::HeapHashMap.1612" = type { %"class.WTF::HashMap.1615" }
%"class.WTF::HashMap.1615" = type { %"class.WTF::HashTable.1616" }
%"class.WTF::HashTable.1616" = type <{ %"struct.WTF::KeyValuePair.1618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1618" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1627" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1619" }
%"class.blink::HeapObserverSet.1619" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1620" }
%"class.blink::HeapHashSet.1620" = type { %"class.WTF::HashSet.1623" }
%"class.WTF::HashSet.1623" = type { %"class.WTF::HashTable.1624" }
%"class.WTF::HashTable.1624" = type <{ %"class.blink::WeakMember.1626"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1626" = type opaque
%"class.blink::Supplementable.1627" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1628" }
%"class.blink::HeapHashMap.1628" = type { %"class.WTF::HashMap.1631" }
%"class.WTF::HashMap.1631" = type { %"class.WTF::HashTable.1632" }
%"class.WTF::HashTable.1632" = type <{ %"struct.WTF::KeyValuePair.1634"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1634" = type { i8*, %"class.blink::Member.2929" }
%"class.blink::Member.2929" = type { %"class.blink::MemberBase.2930" }
%"class.blink::MemberBase.2930" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2931" }
%"class.blink::Member.2931" = type { %"class.blink::MemberBase.2932" }
%"class.blink::MemberBase.2932" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1635, %"class.std::__1::unique_ptr.1644", %"class.std::__1::unique_ptr.1644", %"class.std::__1::unique_ptr.1668", %"class.std::__1::unique_ptr.1668", %"class.blink::Member.1006", i32, [4 x i8], %"class.WTF::HashSet.1674", i32, i32 }
%class.scoped_refptr.1635 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1636", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1638", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1643 }
%"class.WTF::RefCounted.1636" = type { %"class.base::RefCounted.1637" }
%"class.base::RefCounted.1637" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1638" = type { %"class.absl::optional_internal::optional_data.1639" }
%"class.absl::optional_internal::optional_data.1639" = type { %"class.absl::optional_internal::optional_data_base.1640" }
%"class.absl::optional_internal::optional_data_base.1640" = type { %"class.absl::optional_internal::optional_data_dtor_base.1641" }
%"class.absl::optional_internal::optional_data_dtor_base.1641" = type { i8, %union.anon.1642 }
%union.anon.1642 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1643 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1644" = type { %"class.std::__1::__compressed_pair.1645" }
%"class.std::__1::__compressed_pair.1645" = type { %"struct.std::__1::__compressed_pair_elem.1646" }
%"struct.std::__1::__compressed_pair_elem.1646" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1655", %"class.std::__1::map.1664"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1638" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1647", %"class.std::__1::__compressed_pair.1652" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1655" = type { %"class.std::__1::__tree.1656" }
%"class.std::__1::__tree.1656" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1657", %"class.std::__1::__compressed_pair.1661" }
%"class.std::__1::__compressed_pair.1657" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1664" = type opaque
%"class.std::__1::unique_ptr.1668" = type { %"class.std::__1::__compressed_pair.1669" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1674" = type { %"class.WTF::HashTable.1675" }
%"class.WTF::HashTable.1675" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1680" = type { %"class.WTF::Vector.1683" }
%"class.WTF::Vector.1683" = type { %"class.WTF::VectorBuffer.1684" }
%"class.WTF::VectorBuffer.1684" = type { %"class.WTF::VectorBufferBase.1685" }
%"class.WTF::VectorBufferBase.1685" = type { %"class.blink::Member.1686"*, i32, i32 }
%"class.blink::Member.1686" = type opaque
%"class.blink::Member.1688" = type { %"class.blink::MemberBase.1689" }
%"class.blink::MemberBase.1689" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1690" = type { %"class.blink::MemberBase.1691" }
%"class.blink::MemberBase.1691" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1692", i32, i32 }
%"class.blink::HeapHashMap.1692" = type { %"class.WTF::HashMap.1695" }
%"class.WTF::HashMap.1695" = type { %"class.WTF::HashTable.1696" }
%"class.WTF::HashTable.1696" = type <{ %"struct.WTF::KeyValuePair.1698"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1698" = type opaque
%"class.std::__1::unique_ptr.1699" = type { %"class.std::__1::__compressed_pair.1700" }
%"class.std::__1::__compressed_pair.1700" = type { %"struct.std::__1::__compressed_pair_elem.1701" }
%"struct.std::__1::__compressed_pair_elem.1701" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1702" }
%"class.std::__1::unique_ptr.1702" = type { %"class.std::__1::__compressed_pair.1703" }
%"class.std::__1::__compressed_pair.1703" = type { %"struct.std::__1::__compressed_pair_elem.1704" }
%"struct.std::__1::__compressed_pair_elem.1704" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1705" }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.mojo::StructPtr.1708"*, i32, i32 }
%"class.mojo::StructPtr.1708" = type { %"class.std::__1::unique_ptr.1709" }
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1712", %"class.WTF::HashMap.1719", %"class.WTF::HashMap.1724", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1729", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1712" = type { %"class.std::__1::unique_ptr.1713" }
%"class.std::__1::unique_ptr.1713" = type { %"class.std::__1::__compressed_pair.1714" }
%"class.std::__1::__compressed_pair.1714" = type { %"struct.std::__1::__compressed_pair_elem.1715" }
%"struct.std::__1::__compressed_pair_elem.1715" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1719" = type { %"class.WTF::HashTable.1720" }
%"class.WTF::HashTable.1720" = type <{ %"struct.WTF::KeyValuePair.1723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1723" = type opaque
%"class.WTF::HashMap.1724" = type { %"class.WTF::HashTable.1725" }
%"class.WTF::HashTable.1725" = type <{ %"struct.WTF::KeyValuePair.1728"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1728" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1729" = type { %"class.std::__1::unique_ptr.1730" }
%"class.std::__1::unique_ptr.1730" = type { %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.1732" }
%"struct.std::__1::__compressed_pair_elem.1732" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1813" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1744", i32 }>
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1747", %"class.absl::optional.1748", %"class.absl::optional.1753", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1766", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1788", %"class.std::__1::map.1799", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1808", i8, %class.scoped_refptr.1758, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1809" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1747" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1748" = type { %"class.absl::optional_internal::optional_data.1749" }
%"class.absl::optional_internal::optional_data.1749" = type { %"class.absl::optional_internal::optional_data_base.1750" }
%"class.absl::optional_internal::optional_data_base.1750" = type { %"class.absl::optional_internal::optional_data_dtor_base.1751" }
%"class.absl::optional_internal::optional_data_dtor_base.1751" = type { i8, %union.anon.1752 }
%union.anon.1752 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1753" = type { %"class.absl::optional_internal::optional_data.1754" }
%"class.absl::optional_internal::optional_data.1754" = type { %"class.absl::optional_internal::optional_data_base.1755" }
%"class.absl::optional_internal::optional_data_base.1755" = type { %"class.absl::optional_internal::optional_data_dtor_base.1756" }
%"class.absl::optional_internal::optional_data_dtor_base.1756" = type { i8, %union.anon.1757 }
%union.anon.1757 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1758, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1759" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1759" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.993 }
%class.scoped_refptr.993 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1764 }
%class.scoped_refptr.1764 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1826", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1758, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1826" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1765 }
%class.scoped_refptr.1765 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1769", %class.scoped_refptr.1770 }
%"class.base::RepeatingCallback.1769" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1770 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1771", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1771" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1775", %"class.std::__1::unique_ptr.1781", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1787" }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1781" = type { %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1787" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1788" = type { %"class.std::__1::__tree.1789" }
%"class.std::__1::__tree.1789" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1790", %"class.std::__1::__compressed_pair.1794" }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.1794" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1799" = type { %"class.std::__1::__tree.1800" }
%"class.std::__1::__tree.1800" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1801", %"class.std::__1::__compressed_pair.1805" }
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.1805" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1808" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1758 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.779" }>
%"class.base::RefCountedThreadSafe.779" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1809" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1822" = type { %"class.blink::MemberBase.1823" }
%"class.blink::MemberBase.1823" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1824" = type { %"class.blink::MemberBase.1825" }
%"class.blink::MemberBase.1825" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1016" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::KURL"* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1032 }
%class.scoped_refptr.1032 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1037", i32, i32, %"class.blink::Persistent.1039" }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1039" = type { %"class.blink::PersistentBase.1040" }
%"class.blink::PersistentBase.1040" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1043" }
%"class.blink::HeapHashMap.1043" = type { %"class.WTF::HashMap.1046" }
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { %"class.blink::WeakMember.1050", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1058" }
%"class.blink::HeapHashMap.1058" = type { %"class.WTF::HashMap.1061" }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1067" = type { %"class.WTF::HashSet.1070" }
%"class.WTF::HashSet.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"class.blink::WeakMember.1073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type opaque
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::WeakMember.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1080" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1087", %"class.blink::Member.1114", %"class.blink::HeapHashMap.1116", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1123", %"class.blink::HeapHashSet.1123", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1129", %"class.blink::Member.1141", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::Member.1178", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1340", %"class.blink::Member.1346", %"class.blink::HeapHashMap.1348", %"class.blink::HeapHashMap.1355", %"class.std::__1::unique_ptr.1362", i32, %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1099", %"class.blink::HeapHashSet.1376", %"class.blink::HeapHashMap.1383", %"class.blink::Member.1390", %"class.blink::HeapHashMap.1392", %class.scoped_refptr.1399, %class.scoped_refptr.259, %"class.blink::Member.1304", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1400", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1091", %"class.blink::HeapVector.1099", i8 }>
%"class.blink::HeapVector.1091" = type { %"class.WTF::Vector.1094" }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"class.blink::Member.1097"*, i32, i32 }
%"class.blink::Member.1097" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1110", %"class.blink::Member.1112", %"class.blink::Member.1112", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1110" = type <{ %"class.blink::Member.1112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1112", %"class.blink::Member.1112" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::HeapHashSet.1123" = type { %"class.WTF::HashSet.1126" }
%"class.WTF::HashSet.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1131", %"class.blink::Member.1133" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1137", %"class.blink::Member.1139" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1602", %"class.blink::Member.1133", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.911] }
%"class.blink::HeapVector.1602" = type { %"class.WTF::Vector.1605" }
%"class.WTF::Vector.1605" = type { %"class.WTF::VectorBuffer.1606" }
%"class.WTF::VectorBuffer.1606" = type { %"class.WTF::VectorBufferBase.1607" }
%"class.WTF::VectorBufferBase.1607" = type { %"class.blink::Member.1139"*, i32, i32 }
%class.sk_sp.911 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.912, i32, %"class.absl::optional.913", i8, i32 }
%class.sk_sp.912 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.913" = type { %"class.absl::optional_internal::optional_data.914" }
%"class.absl::optional_internal::optional_data.914" = type { %"class.absl::optional_internal::optional_data_base.915" }
%"class.absl::optional_internal::optional_data_base.915" = type { %"class.absl::optional_internal::optional_data_dtor_base.916" }
%"class.absl::optional_internal::optional_data_dtor_base.916" = type { i8, %union.anon.917 }
%union.anon.917 = type { %struct.SkRect }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1114", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1145" }
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1152", %"class.std::__1::unique_ptr.1164" }
%"class.blink::HeapVector.1152" = type { %"class.WTF::Vector.1155" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1158" }
%"class.WTF::Vector.1158" = type { %"class.WTF::VectorBuffer.1159" }
%"class.WTF::VectorBuffer.1159" = type { %"class.WTF::VectorBufferBase.1160", [16 x i8] }
%"class.WTF::VectorBufferBase.1160" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1176", i8, [7 x i8] }>
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1200", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1187", %class.scoped_refptr.1192, %class.scoped_refptr.1199, %class.scoped_refptr.1198, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3020 }
%class.scoped_refptr.3020 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1193" = type { %"class.base::RefCounted.1194" }
%"class.base::RefCounted.1194" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1195" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1196" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1197" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1191" = type opaque
%class.scoped_refptr.1192 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1198, %class.scoped_refptr.1198 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1199 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1198 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1247", %"class.blink::HeapVector.1255", %"class.blink::HeapVector.1263", %"class.blink::HeapVector.1280", %"class.blink::HeapVector.1288", %"class.blink::HeapVector.1296", %"class.blink::HeapVector.1309", %"class.WTF::Vector.1316", i32, %"class.blink::Member.1322" }
%"class.blink::HeapHashMap.1204" = type { %"class.WTF::HashMap.1207" }
%"class.WTF::HashMap.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type { %"class.WTF::AtomicString", %"class.blink::Member.3030" }
%"class.blink::Member.3030" = type { %"class.blink::MemberBase.3031" }
%"class.blink::MemberBase.3031" = type { %"class.blink::HeapVector.1211"* }
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1221", i64, [4 x i32] }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1242" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1247" = type { %"class.WTF::Vector.1250" }
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"class.blink::Member.1253"*, i32, i32 }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.3026" }
%"class.blink::MemberBase.3026" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1255" = type { %"class.WTF::Vector.1258" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.blink::Member.1261"*, i32, i32 }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.3027" }
%"class.blink::MemberBase.3027" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1263" = type { %"class.WTF::Vector.1266" }
%"class.WTF::Vector.1266" = type { %"class.WTF::VectorBuffer.1267" }
%"class.WTF::VectorBuffer.1267" = type { %"class.WTF::VectorBufferBase.1268" }
%"class.WTF::VectorBufferBase.1268" = type { %"class.blink::Member.1269"*, i32, i32 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1271", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1271" = type { %"class.WTF::Vector.1274" }
%"class.WTF::Vector.1274" = type { %"class.WTF::VectorBuffer.1275" }
%"class.WTF::VectorBuffer.1275" = type { %"class.WTF::VectorBufferBase.1276" }
%"class.WTF::VectorBufferBase.1276" = type { %"class.blink::Member.1277"*, i32, i32 }
%"class.blink::Member.1277" = type opaque
%"class.blink::HeapVector.1280" = type { %"class.WTF::Vector.1283" }
%"class.WTF::Vector.1283" = type { %"class.WTF::VectorBuffer.1284" }
%"class.WTF::VectorBuffer.1284" = type { %"class.WTF::VectorBufferBase.1285" }
%"class.WTF::VectorBufferBase.1285" = type { %"class.blink::Member.1286"*, i32, i32 }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.3028" }
%"class.blink::MemberBase.3028" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1288" = type { %"class.WTF::Vector.1291" }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.blink::Member.1294"*, i32, i32 }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.3029" }
%"class.blink::MemberBase.3029" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", i32, [4 x i8] }>
%"class.blink::HeapVector.1296" = type { %"class.WTF::Vector.1299" }
%"class.WTF::Vector.1299" = type { %"class.WTF::VectorBuffer.1300" }
%"class.WTF::VectorBuffer.1300" = type { %"class.WTF::VectorBufferBase.1301" }
%"class.WTF::VectorBufferBase.1301" = type { %"class.blink::Member.1302"*, i32, i32 }
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304" }
%"class.blink::HeapVector.1309" = type { %"class.WTF::Vector.1312" }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1221", i32, i32 }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1319, i8, [7 x i8] }>
%class.scoped_refptr.1319 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326" }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1333" }
%"class.blink::HeapHashMap.1333" = type { %"class.WTF::HashMap.1336" }
%"class.WTF::HashMap.1336" = type { %"class.WTF::HashTable.1337" }
%"class.WTF::HashTable.1337" = type <{ %"struct.WTF::KeyValuePair.1339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1339" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3021", %"class.WTF::Vector.3021" }
%"class.WTF::Vector.3021" = type { %"class.WTF::VectorBuffer.3022" }
%"class.WTF::VectorBuffer.3022" = type { %"class.WTF::VectorBufferBase.3023" }
%"class.WTF::VectorBufferBase.3023" = type { %class.scoped_refptr.3020*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1340" = type { %"class.WTF::HashSet.1343" }
%"class.WTF::HashSet.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1348" = type { %"class.WTF::HashMap.1351" }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1354" = type opaque
%"class.blink::HeapHashMap.1355" = type { %"class.WTF::HashMap.1358" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type opaque
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1368" = type { %"class.WTF::Vector.1371" }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.std::__1::pair.1374"*, i32, i32 }
%"struct.std::__1::pair.1374" = type opaque
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"struct.std::__1::pair.1105"*, i32, i32 }
%"struct.std::__1::pair.1105" = type opaque
%"class.blink::HeapHashSet.1376" = type { %"class.WTF::HashSet.1379" }
%"class.WTF::HashSet.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"class.blink::WeakMember.1382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1382" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1383" = type { %"class.WTF::HashMap.1386" }
%"class.WTF::HashMap.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { %"class.WTF::AtomicString", %"class.blink::Member.1269" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1392" = type { %"class.WTF::HashMap.1395" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1398" = type opaque
%class.scoped_refptr.1399 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1400" = type { %"class.WTF::HashSet.1403" }
%"class.WTF::HashSet.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"class.blink::Member.1406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1413" = type { %"class.WTF::HashMap.1416" }
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1419" = type opaque
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1431" = type { %"class.WTF::Vector.1434" }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"class.blink::Member.1437"*, i32, i32 }
%"class.blink::Member.1437" = type opaque
%"class.std::__1::unique_ptr.1439" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1445" = type { %"class.WTF::HashSet.1448" }
%"class.WTF::HashSet.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"class.blink::WeakMember.1451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1451" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1452", i32, [4 x i8] }>
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454" }
%"class.WTF::VectorBufferBase.1454" = type { %"struct.std::__1::pair.1455"*, i32, i32 }
%"struct.std::__1::pair.1455" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1460" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1937", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2150", %"class.std::__1::unique_ptr.2156", %"class.std::__1::unique_ptr.2162", %class.scoped_refptr.1933, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2168", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1896", %"class.std::__1::unique_ptr.1906" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1852, %"class.WTF::Vector.1853", %"class.std::__1::unique_ptr.1858", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1879, %"class.blink::Persistent.1880" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1852 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1853" = type { %"class.WTF::VectorBuffer.1854" }
%"class.WTF::VectorBuffer.1854" = type { %"class.WTF::VectorBufferBase.1855", [8 x i8] }
%"class.WTF::VectorBufferBase.1855" = type { %class.scoped_refptr.1852*, i32, i32 }
%"class.std::__1::unique_ptr.1858" = type { %"class.std::__1::__compressed_pair.1859" }
%"class.std::__1::__compressed_pair.1859" = type { %"struct.std::__1::__compressed_pair_elem.1860" }
%"struct.std::__1::__compressed_pair_elem.1860" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1861", %"class.absl::optional.1866", %"class.absl::optional.1871" }
%"class.absl::optional.1861" = type { %"class.absl::optional_internal::optional_data.1862" }
%"class.absl::optional_internal::optional_data.1862" = type { %"class.absl::optional_internal::optional_data_base.1863" }
%"class.absl::optional_internal::optional_data_base.1863" = type { %"class.absl::optional_internal::optional_data_dtor_base.1864" }
%"class.absl::optional_internal::optional_data_dtor_base.1864" = type { i8, %union.anon.1865 }
%union.anon.1865 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1866" = type { %"class.absl::optional_internal::optional_data.1867" }
%"class.absl::optional_internal::optional_data.1867" = type { %"class.absl::optional_internal::optional_data_base.1868" }
%"class.absl::optional_internal::optional_data_base.1868" = type { %"class.absl::optional_internal::optional_data_dtor_base.1869" }
%"class.absl::optional_internal::optional_data_dtor_base.1869" = type { i8, [3 x i8], %union.anon.1870 }
%union.anon.1870 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1871" = type { %"class.absl::optional_internal::optional_data.1872" }
%"class.absl::optional_internal::optional_data.1872" = type { %"class.absl::optional_internal::optional_data_base.1873" }
%"class.absl::optional_internal::optional_data_base.1873" = type { %"class.absl::optional_internal::optional_data_dtor_base.1874" }
%"class.absl::optional_internal::optional_data_dtor_base.1874" = type { i8, %union.anon.1875 }
%union.anon.1875 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1879 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1836", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1836" = type { %"class.std::__1::__compressed_pair.1837" }
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.1838" }
%"struct.std::__1::__compressed_pair_elem.1838" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1839", %"class.absl::optional.1844" }
%"class.absl::optional.1839" = type { %"class.absl::optional_internal::optional_data.1840" }
%"class.absl::optional_internal::optional_data.1840" = type { %"class.absl::optional_internal::optional_data_base.1841" }
%"class.absl::optional_internal::optional_data_base.1841" = type { %"class.absl::optional_internal::optional_data_dtor_base.1842" }
%"class.absl::optional_internal::optional_data_dtor_base.1842" = type { i8, %union.anon.1843 }
%union.anon.1843 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1844" = type { %"class.absl::optional_internal::optional_data.1845" }
%"class.absl::optional_internal::optional_data.1845" = type { %"class.absl::optional_internal::optional_data_base.1846" }
%"class.absl::optional_internal::optional_data_base.1846" = type { %"class.absl::optional_internal::optional_data_dtor_base.1847" }
%"class.absl::optional_internal::optional_data_dtor_base.1847" = type { i8, %union.anon.1848 }
%union.anon.1848 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1880" = type { %"class.blink::PersistentBase.1881" }
%"class.blink::PersistentBase.1881" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1884", %"struct.blink::PhysicalRect", %"class.blink::Member.1894" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"class.WTF::HashSet.1887"* }
%"class.WTF::HashSet.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1896" = type { %"class.blink::PersistentBase.1897" }
%"class.blink::PersistentBase.1897" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1900", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1900" = type { %"class.std::__1::__compressed_pair.1901" }
%"class.std::__1::__compressed_pair.1901" = type { %"struct.std::__1::__compressed_pair_elem.1902" }
%"struct.std::__1::__compressed_pair_elem.1902" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1906" = type { %"class.std::__1::__compressed_pair.1907" }
%"class.std::__1::__compressed_pair.1907" = type { %"struct.std::__1::__compressed_pair_elem.1908" }
%"struct.std::__1::__compressed_pair_elem.1908" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1909", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1909" = type { %"class.WTF::HashTable.1912", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1912" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1915", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1915" = type { %"class.std::__1::__compressed_pair.1916" }
%"class.std::__1::__compressed_pair.1916" = type { %"struct.std::__1::__compressed_pair_elem.1917" }
%"struct.std::__1::__compressed_pair_elem.1917" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1918, %"class.std::__1::unique_ptr.1919", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1836", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1918 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2794", i16, %class.scoped_refptr.1918 }
%"class.WTF::ThreadSafeRefCounted.2794" = type { %"class.base::RefCountedThreadSafe.2795" }
%"class.base::RefCountedThreadSafe.2795" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1919" = type { %"class.std::__1::__compressed_pair.1920" }
%"class.std::__1::__compressed_pair.1920" = type { %"struct.std::__1::__compressed_pair_elem.1921" }
%"struct.std::__1::__compressed_pair_elem.1921" = type { %"class.WTF::Vector.1922"* }
%"class.WTF::Vector.1922" = type { %"class.WTF::VectorBuffer.1923" }
%"class.WTF::VectorBuffer.1923" = type { %"class.WTF::VectorBufferBase.1924" }
%"class.WTF::VectorBufferBase.1924" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1933, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1937" = type { %"class.blink::MemberBase.1938" }
%"class.blink::MemberBase.1938" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1941", %"class.blink::Member.1946", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1948", i8, i32, %"class.blink::Color", %"class.absl::optional.1951", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1956", %"class.blink::Member.1958", %"class.blink::Member.1958", %"class.std::__1::unique_ptr.1961", i32, [4 x i8], %"class.WTF::HashSet.1964", %"class.blink::Member.1971", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1973", %"class.blink::HeapHashSet.1980", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1986", i8, %"class.blink::Member.1992", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2004", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2018", i8, %"class.std::__1::unique_ptr.2024", %"class.std::__1::unique_ptr.2100", %"class.WTF::Vector.2106", i32, %class.scoped_refptr.2111, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2112", %"class.blink::Member.2114", %"class.blink::Member.2116", %"class.blink::HeapHashSet.2118", %"class.blink::HeapHashSet.2125", %"class.std::__1::unique_ptr.2132", %"class.std::__1::unique_ptr.2139", %"class.WTF::Vector.771" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1941" = type { %"class.WTF::HashTable.1942" }
%"class.WTF::HashTable.1942" = type <{ %class.scoped_refptr.1945*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1945 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1946" = type { %"class.blink::MemberBase.1947" }
%"class.blink::MemberBase.1947" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2354", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2362", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2376", %"class.blink::FrameLoader", %"class.blink::Member.2397", %"class.blink::Member.343", %"class.blink::Member.2398", %"class.blink::Member.2400", %"class.blink::Member.2416", %"class.blink::Member.2418", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2420", %class.scoped_refptr.2644, %"class.blink::Member.2645", %"class.blink::Member.2647", %"class.blink::Member.2649", %"class.blink::Member.2651", %"class.blink::Member.2653", %"class.blink::Member.2657", %"class.blink::Member.2659", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2663", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2669", %"class.std::__1::unique_ptr.2670", %"class.absl::optional.2342", i32, [4 x i8], %"class.std::__1::unique_ptr.2676", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2684", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2689", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2694", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2697", %"class.blink::Member.2699", %"class.blink::Member.2701", %"class.blink::Member.2703", %"class.mojo::StructPtr.2706", %"class.blink::Member.2715", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2717", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2187", %"class.blink::Member.2189", %"class.blink::Member.2191", i8, i32, i8, i32, %"class.blink::Member.2324", %"class.blink::Member.2214", %"class.blink::FrameLifecycle", %"class.blink::Member.2185", %"class.blink::Member.2185", %"class.blink::Member.2185", %"class.blink::Member.2185", %"class.blink::Member.2185", %"class.blink::Member.2185", %"class.blink::Member.1946", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2335", i8, %"class.base::UnguessableToken", %"class.absl::optional.2337", %"class.absl::optional.2342", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2185", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2187" = type { %"class.blink::MemberBase.2188" }
%"class.blink::MemberBase.2188" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2798", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2185", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2824", %"class.blink::Member.2828", %"class.blink::Member.2830", %"class.blink::Member.2832", %"class.blink::Member.2834", %"class.blink::Member.2836", %"class.blink::Member.2838", %"class.blink::Member.2840", %"class.blink::HeapObserverSet.2842", %"class.blink::Member.2850", %"class.blink::Member.2852", %"class.blink::Member.2854", %"class.blink::Member.2856", %"class.blink::Member.2858", %"class.blink::Member.2860", %"class.blink::Member.2862", %"class.blink::Member.2864", %"class.blink::Member.2866", %"class.blink::Member.2868", %"class.blink::Member.2870", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2895", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2902", %"class.blink::Member.2187", %"class.blink::Member.2187", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2910", %"class.std::__1::unique_ptr.2916", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2798" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2799" }
%"class.blink::HeapHashMap.2799" = type { %"class.WTF::HashMap.2802" }
%"class.WTF::HashMap.2802" = type { %"class.WTF::HashTable.2803" }
%"class.WTF::HashTable.2803" = type <{ %"struct.WTF::KeyValuePair.2805"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2805" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2806" }
%"class.std::__1::unique_ptr.2806" = type { %"class.std::__1::__compressed_pair.2807" }
%"class.std::__1::__compressed_pair.2807" = type { %"struct.std::__1::__compressed_pair_elem.2808" }
%"struct.std::__1::__compressed_pair_elem.2808" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2809", %"class.WTF::HashMap.2809", %"class.WTF::HashMap.2809", %"class.WTF::HashMap.2809", %"class.WTF::HashMap.2809", %"class.WTF::HashMap.2809", %"class.WTF::HashMap.2809", %"class.std::__1::unique_ptr.2814" }
%"class.WTF::HashMap.2809" = type { %"class.WTF::HashTable.2810" }
%"class.WTF::HashTable.2810" = type <{ %"struct.WTF::KeyValuePair.2813"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2813" = type opaque
%"class.std::__1::unique_ptr.2814" = type { %"class.std::__1::__compressed_pair.2815" }
%"class.std::__1::__compressed_pair.2815" = type { %"struct.std::__1::__compressed_pair_elem.2816" }
%"struct.std::__1::__compressed_pair_elem.2816" = type { %"class.WTF::Vector.2817"* }
%"class.WTF::Vector.2817" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2824" = type { %"class.blink::MemberBase.2825" }
%"class.blink::MemberBase.2825" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2187", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2828" = type { %"class.blink::MemberBase.2829" }
%"class.blink::MemberBase.2829" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2830" = type { %"class.blink::MemberBase.2831" }
%"class.blink::MemberBase.2831" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.2832" = type { %"class.blink::MemberBase.2833" }
%"class.blink::MemberBase.2833" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2834" = type { %"class.blink::MemberBase.2835" }
%"class.blink::MemberBase.2835" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2836" = type { %"class.blink::MemberBase.2837" }
%"class.blink::MemberBase.2837" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2838" = type { %"class.blink::MemberBase.2839" }
%"class.blink::MemberBase.2839" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2840" = type { %"class.blink::MemberBase.2841" }
%"class.blink::MemberBase.2841" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2842" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2843" }
%"class.blink::HeapHashSet.2843" = type { %"class.WTF::HashSet.2846" }
%"class.WTF::HashSet.2846" = type { %"class.WTF::HashTable.2847" }
%"class.WTF::HashTable.2847" = type <{ %"class.blink::WeakMember.2849"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2849" = type opaque
%"class.blink::Member.2850" = type { %"class.blink::MemberBase.2851" }
%"class.blink::MemberBase.2851" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2852" = type { %"class.blink::MemberBase.2853" }
%"class.blink::MemberBase.2853" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2854" = type { %"class.blink::MemberBase.2855" }
%"class.blink::MemberBase.2855" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2856" = type { %"class.blink::MemberBase.2857" }
%"class.blink::MemberBase.2857" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2858" = type { %"class.blink::MemberBase.2859" }
%"class.blink::MemberBase.2859" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2860" = type { %"class.blink::MemberBase.2861" }
%"class.blink::MemberBase.2861" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2862" = type { %"class.blink::MemberBase.2863" }
%"class.blink::MemberBase.2863" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2864" = type { %"class.blink::MemberBase.2865" }
%"class.blink::MemberBase.2865" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2866" = type { %"class.blink::MemberBase.2867" }
%"class.blink::MemberBase.2867" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2868" = type { %"class.blink::MemberBase.2869" }
%"class.blink::MemberBase.2869" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2870" = type { %"class.blink::MemberBase.2871" }
%"class.blink::MemberBase.2871" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2872" }
%"class.WTF::Deque.2872" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2875" }
%"class.WTF::VectorBuffer.2875" = type { %"class.WTF::VectorBufferBase.2876" }
%"class.WTF::VectorBufferBase.2876" = type { %"class.std::__1::unique_ptr.2877"*, i32, i32 }
%"class.std::__1::unique_ptr.2877" = type { %"class.std::__1::__compressed_pair.2878" }
%"class.std::__1::__compressed_pair.2878" = type { %"struct.std::__1::__compressed_pair_elem.2879" }
%"struct.std::__1::__compressed_pair_elem.2879" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2883", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2883" = type { %"class.std::__1::__bitset.2884" }
%"class.std::__1::__bitset.2884" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2885" }
%"class.absl::optional.2885" = type { %"class.absl::optional_internal::optional_data.2886" }
%"class.absl::optional_internal::optional_data.2886" = type { %"class.absl::optional_internal::optional_data_base.2887" }
%"class.absl::optional_internal::optional_data_base.2887" = type { %"class.absl::optional_internal::optional_data_dtor_base.2888" }
%"class.absl::optional_internal::optional_data_dtor_base.2888" = type { i8, %union.anon.2889 }
%union.anon.2889 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2890", i64, %"class.absl::optional.1748", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2890" = type { %"class.absl::optional_internal::optional_data.2891" }
%"class.absl::optional_internal::optional_data.2891" = type { %"class.absl::optional_internal::optional_data_base.2892" }
%"class.absl::optional_internal::optional_data_base.2892" = type { %"class.absl::optional_internal::optional_data_dtor_base.2893" }
%"class.absl::optional_internal::optional_data_dtor_base.2893" = type { i8, %union.anon.2894 }
%union.anon.2894 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2895" = type { %"class.std::__1::unique_ptr.2896" }
%"class.std::__1::unique_ptr.2896" = type { %"class.std::__1::__compressed_pair.2897" }
%"class.std::__1::__compressed_pair.2897" = type { %"struct.std::__1::__compressed_pair_elem.2898" }
%"struct.std::__1::__compressed_pair_elem.2898" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2902" = type { %"class.WTF::HashSet.2905" }
%"class.WTF::HashSet.2905" = type { %"class.WTF::HashTable.2906" }
%"class.WTF::HashTable.2906" = type <{ %"class.blink::WeakMember.2908"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2908" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2909" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2909" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2910" = type { %"class.std::__1::__compressed_pair.2911" }
%"class.std::__1::__compressed_pair.2911" = type { %"struct.std::__1::__compressed_pair_elem.2912" }
%"struct.std::__1::__compressed_pair_elem.2912" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2916" = type { %"class.std::__1::__compressed_pair.2917" }
%"class.std::__1::__compressed_pair.2917" = type { %"struct.std::__1::__compressed_pair_elem.2918" }
%"struct.std::__1::__compressed_pair_elem.2918" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.2189" = type { %"class.blink::MemberBase.2190" }
%"class.blink::MemberBase.2190" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2191" = type { %"class.blink::MemberBase.2192" }
%"class.blink::MemberBase.2192" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2185", %"class.blink::Member.2214", %"class.blink::Member.2216", %"class.blink::Member.2218", i8, %"class.WTF::Vector.2220" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2207" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2195" }
%"class.blink::HeapVector.2195" = type { %"class.WTF::Vector.2198" }
%"class.WTF::Vector.2198" = type { %"class.WTF::VectorBuffer.2199" }
%"class.WTF::VectorBuffer.2199" = type { %"class.WTF::VectorBufferBase.2200", [32 x i8] }
%"class.WTF::VectorBufferBase.2200" = type { %"struct.std::__1::pair.2201"*, i32, i32 }
%"struct.std::__1::pair.2201" = type { %"class.WTF::AtomicString", %"class.blink::Member.2202" }
%"class.blink::Member.2202" = type { %"class.blink::MemberBase.2203" }
%"class.blink::MemberBase.2203" = type { %"class.blink::HeapVector.2204"* }
%"class.blink::HeapVector.2204" = type opaque
%"class.std::__1::unique_ptr.2207" = type { %"class.std::__1::__compressed_pair.2208" }
%"class.std::__1::__compressed_pair.2208" = type { %"struct.std::__1::__compressed_pair_elem.2209" }
%"struct.std::__1::__compressed_pair_elem.2209" = type { %"class.WTF::Vector.2210"* }
%"class.WTF::Vector.2210" = type opaque
%"class.blink::Member.2216" = type { %"class.blink::MemberBase.2217" }
%"class.blink::MemberBase.2217" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2218" = type { %"class.blink::MemberBase.2219" }
%"class.blink::MemberBase.2219" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2220" = type { %"class.WTF::VectorBuffer.2221" }
%"class.WTF::VectorBuffer.2221" = type { %"class.WTF::VectorBufferBase.2222" }
%"class.WTF::VectorBufferBase.2222" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2316" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2223, %"class.std::__1::unique_ptr.1744", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1758, i32 }>
%class.scoped_refptr.2223 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1758, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2282", %"class.absl::optional.2287", %"class.absl::optional.2240", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2307", i8, [7 x i8], %class.scoped_refptr.1758, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1771" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1758, %"class.std::__1::unique_ptr.2224", %"class.absl::optional.2234", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2240", %"class.std::__1::unique_ptr.2245", i8, i64, %class.scoped_refptr.2279, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2280", %"class.base::WeakPtrFactory.2281" }
%"class.std::__1::unique_ptr.2224" = type { %"class.std::__1::__compressed_pair.2225" }
%"class.std::__1::__compressed_pair.2225" = type { %"struct.std::__1::__compressed_pair_elem.2226" }
%"struct.std::__1::__compressed_pair_elem.2226" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1758, i8, %"class.mojo::ScopedHandleBase.2227", %class.scoped_refptr.2228, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2229", i8*, %"class.base::WeakPtrFactory.2230" }
%"class.mojo::ScopedHandleBase.2227" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2228 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2229" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2230" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2234" = type { %"class.absl::optional_internal::optional_data.2235" }
%"class.absl::optional_internal::optional_data.2235" = type { %"class.absl::optional_internal::optional_data_base.2236" }
%"class.absl::optional_internal::optional_data_base.2236" = type { %"class.absl::optional_internal::optional_data_dtor_base.2237" }
%"class.absl::optional_internal::optional_data_dtor_base.2237" = type { i8, %union.anon.2238 }
%union.anon.2238 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2239", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2239" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2245" = type { %"class.std::__1::__compressed_pair.2246" }
%"class.std::__1::__compressed_pair.2246" = type { %"struct.std::__1::__compressed_pair_elem.2247" }
%"struct.std::__1::__compressed_pair_elem.2247" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2248", i8, i64, %class.scoped_refptr.2249, %class.scoped_refptr.2274 }
%"class.base::RepeatingCallback.2248" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2249 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2250", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2252", %"class.std::__1::map.2263", i8, [7 x i8] }>
%"class.base::RefCounted.2250" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2251 }
%class.scoped_refptr.2251 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2252" = type { %"class.std::__1::__tree.2253" }
%"class.std::__1::__tree.2253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2254", %"class.std::__1::__compressed_pair.2258" }
%"class.std::__1::__compressed_pair.2254" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.2258" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2263" = type { %"class.std::__1::__tree.2264" }
%"class.std::__1::__tree.2264" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2265", %"class.std::__1::__compressed_pair.2269" }
%"class.std::__1::__compressed_pair.2265" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.2269" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2274 = type { %"class.base::RefCountedData.2275"* }
%"class.base::RefCountedData.2275" = type opaque
%class.scoped_refptr.2279 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2280" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2281" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2282" = type { %"class.absl::optional_internal::optional_data.2283" }
%"class.absl::optional_internal::optional_data.2283" = type { %"class.absl::optional_internal::optional_data_base.2284" }
%"class.absl::optional_internal::optional_data_base.2284" = type { %"class.absl::optional_internal::optional_data_dtor_base.2285" }
%"class.absl::optional_internal::optional_data_dtor_base.2285" = type { i8, %union.anon.2286 }
%union.anon.2286 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2287" = type { %"class.absl::optional_internal::optional_data.2288" }
%"class.absl::optional_internal::optional_data.2288" = type { %"class.absl::optional_internal::optional_data_base.2289" }
%"class.absl::optional_internal::optional_data_base.2289" = type { %"class.absl::optional_internal::optional_data_dtor_base.2290" }
%"class.absl::optional_internal::optional_data_dtor_base.2290" = type { i8, [7 x i8], %union.anon.2291 }
%union.anon.2291 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2240" = type { %"class.absl::optional_internal::optional_data.2241" }
%"class.absl::optional_internal::optional_data.2241" = type { %"class.absl::optional_internal::optional_data_base.2242" }
%"class.absl::optional_internal::optional_data_base.2242" = type { %"class.absl::optional_internal::optional_data_dtor_base.2243" }
%"class.absl::optional_internal::optional_data_dtor_base.2243" = type { i8, %union.anon.2244 }
%union.anon.2244 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2292 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2292 = type { %"class.std::__1::map.2295" }
%"class.std::__1::map.2295" = type { %"class.std::__1::__tree.2296" }
%"class.std::__1::__tree.2296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2297", %"class.std::__1::__compressed_pair.2301" }
%"class.std::__1::__compressed_pair.2297" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.2301" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2306"*, i64 }
%"class.std::__1::unique_ptr.2306" = type opaque
%"class.std::__1::map.2307" = type { %"class.std::__1::__tree.2308" }
%"class.std::__1::__tree.2308" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2309", %"class.std::__1::__compressed_pair.2313" }
%"class.std::__1::__compressed_pair.2309" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.2313" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2316" = type { %"class.std::__1::__compressed_pair.2317" }
%"class.std::__1::__compressed_pair.2317" = type { %"struct.std::__1::__compressed_pair_elem.2318" }
%"struct.std::__1::__compressed_pair_elem.2318" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2324" = type { %"class.blink::MemberBase.2325" }
%"class.blink::MemberBase.2325" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2214" = type { %"class.blink::MemberBase.2215" }
%"class.blink::MemberBase.2215" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2185" = type { %"class.blink::MemberBase.2186" }
%"class.blink::MemberBase.2186" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2185", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2326" }
%"class.base::internal::flat_tree.2326" = type { %"class.std::__1::vector.2327" }
%"class.std::__1::vector.2327" = type { %"class.std::__1::__vector_base.2328" }
%"class.std::__1::__vector_base.2328" = type { %"struct.std::__1::pair.2329"*, %"struct.std::__1::pair.2329"*, %"class.std::__1::__compressed_pair.2330" }
%"struct.std::__1::pair.2329" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2330" = type { %"struct.std::__1::__compressed_pair_elem.2331" }
%"struct.std::__1::__compressed_pair_elem.2331" = type { %"struct.std::__1::pair.2329"* }
%"class.blink::Member.2335" = type { %"class.blink::MemberBase.2336" }
%"class.blink::MemberBase.2336" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2337" = type { %"class.absl::optional_internal::optional_data.2338" }
%"class.absl::optional_internal::optional_data.2338" = type { %"class.absl::optional_internal::optional_data_base.2339" }
%"class.absl::optional_internal::optional_data_base.2339" = type { %"class.absl::optional_internal::optional_data_dtor_base.2340" }
%"class.absl::optional_internal::optional_data_dtor_base.2340" = type { i8, %union.anon.2341 }
%union.anon.2341 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2347" }
%"class.blink::HeapHashSet.2347" = type { %"class.WTF::HashSet.2350" }
%"class.WTF::HashSet.2350" = type { %"class.WTF::HashTable.2351" }
%"class.WTF::HashTable.2351" = type <{ %"class.blink::WeakMember.2353"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2353" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2354" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2355" }
%"class.blink::HeapHashMap.2355" = type { %"class.WTF::HashMap.2358" }
%"class.WTF::HashMap.2358" = type { %"class.WTF::HashTable.2359" }
%"class.WTF::HashTable.2359" = type <{ %"struct.WTF::KeyValuePair.2361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2361" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2362" = type { %"class.std::__1::__compressed_pair.2363" }
%"class.std::__1::__compressed_pair.2363" = type { %"struct.std::__1::__compressed_pair_elem.2364" }
%"struct.std::__1::__compressed_pair_elem.2364" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2365", %"class.base::WeakPtrFactory.2370" }
%"class.WTF::HashMap.2365" = type { %"class.WTF::HashTable.2366" }
%"class.WTF::HashTable.2366" = type <{ %"struct.WTF::KeyValuePair.2369"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2369" = type opaque
%"class.base::WeakPtrFactory.2370" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2374" }
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2959" }
%"class.blink::WeakMember.2959" = type { %"class.blink::MemberBase.2960" }
%"class.blink::MemberBase.2960" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2961", i64, %"class.std::__1::map.2962", i8*, i64, %"class.base::WeakPtrFactory.2971" }
%"class.base::RepeatingCallback.2961" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2962" = type { %"class.std::__1::__tree.2963" }
%"class.std::__1::__tree.2963" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2964", %"class.std::__1::__compressed_pair.2968" }
%"class.std::__1::__compressed_pair.2964" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.2968" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.2971" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2376" = type { %"class.WTF::HashSet.2379" }
%"class.WTF::HashSet.2379" = type { %"class.WTF::HashTable.2380" }
%"class.WTF::HashTable.2380" = type <{ %"class.blink::WeakMember.2382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2382" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1946", %"class.blink::Member.2383", %"class.blink::Member.2385", %"class.std::__1::unique_ptr.2387", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2393" }
%"class.blink::Member.2383" = type { %"class.blink::MemberBase.2384" }
%"class.blink::MemberBase.2384" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2385" = type { %"class.blink::MemberBase.2386" }
%"class.blink::MemberBase.2386" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2387" = type { %"class.std::__1::__compressed_pair.2388" }
%"class.std::__1::__compressed_pair.2388" = type { %"struct.std::__1::__compressed_pair_elem.2389" }
%"struct.std::__1::__compressed_pair_elem.2389" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2393" = type { %"class.WTF::HashTable.2394" }
%"class.WTF::HashTable.2394" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2398" = type { %"class.blink::MemberBase.2399" }
%"class.blink::MemberBase.2399" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2400" = type { %"class.blink::MemberBase.2401" }
%"class.blink::MemberBase.2401" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1946", %"class.blink::Member.2404", %"class.blink::Member.2406", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2408", %"class.blink::Member.2414" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1055" }
%"class.blink::WeakMember.1055" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2404" = type { %"class.blink::MemberBase.2405" }
%"class.blink::MemberBase.2405" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2406" = type { %"class.blink::MemberBase.2407" }
%"class.blink::MemberBase.2407" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2408" = type { %"class.std::__1::__compressed_pair.2409" }
%"class.std::__1::__compressed_pair.2409" = type { %"struct.std::__1::__compressed_pair_elem.2410" }
%"struct.std::__1::__compressed_pair_elem.2410" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2414" = type { %"class.blink::MemberBase.2415" }
%"class.blink::MemberBase.2415" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2416" = type { %"class.blink::MemberBase.2417" }
%"class.blink::MemberBase.2417" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2420" = type { %"class.blink::MemberBase.2421" }
%"class.blink::MemberBase.2421" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2424", %"class.blink::HeapListHashSet.2435", %"class.blink::HeapListHashSet.2446", %"class.blink::HeapListHashSet.2457", %"class.blink::HeapListHashSet.2468", %"class.blink::HeapListHashSet.2479", %"class.blink::HeapListHashSet.2490", %"class.blink::HeapListHashSet.2501", %"class.blink::HeapListHashSet.2512", %"class.blink::HeapListHashSet.2523", %"class.blink::HeapListHashSet.2534", %"class.blink::HeapListHashSet.2545", %"class.blink::HeapListHashSet.2556", %"class.blink::HeapListHashSet.2567", %"class.blink::HeapListHashSet.2578", %"class.blink::HeapListHashSet.2589", %"class.blink::HeapListHashSet.2600", %"class.blink::HeapListHashSet.2611", %"class.blink::HeapListHashSet.2622", %"class.blink::HeapListHashSet.2633" }
%"class.blink::HeapListHashSet.2424" = type { %"class.WTF::ListHashSet.base.2434", [7 x i8] }
%"class.WTF::ListHashSet.base.2434" = type <{ %"class.WTF::HashTable.2429", %"class.blink::Member.2431", %"class.blink::Member.2431", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2429" = type <{ %"class.blink::Member.2431"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2431" = type { %"class.blink::MemberBase.2432" }
%"class.blink::MemberBase.2432" = type { %"class.blink::HeapListHashSetNode.2433"* }
%"class.blink::HeapListHashSetNode.2433" = type { %"class.blink::Member.2647", %"class.blink::Member.2431", %"class.blink::Member.2431" }
%"class.blink::HeapListHashSet.2435" = type { %"class.WTF::ListHashSet.base.2445", [7 x i8] }
%"class.WTF::ListHashSet.base.2445" = type <{ %"class.WTF::HashTable.2440", %"class.blink::Member.2442", %"class.blink::Member.2442", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2440" = type <{ %"class.blink::Member.2442"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2442" = type { %"class.blink::MemberBase.2443" }
%"class.blink::MemberBase.2443" = type { %"class.blink::HeapListHashSetNode.2444"* }
%"class.blink::HeapListHashSetNode.2444" = type { %"class.blink::Member.2790", %"class.blink::Member.2442", %"class.blink::Member.2442" }
%"class.blink::Member.2790" = type { %"class.blink::MemberBase.2791" }
%"class.blink::MemberBase.2791" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2446" = type { %"class.WTF::ListHashSet.base.2456", [7 x i8] }
%"class.WTF::ListHashSet.base.2456" = type <{ %"class.WTF::HashTable.2451", %"class.blink::Member.2453", %"class.blink::Member.2453", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2451" = type <{ %"class.blink::Member.2453"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2453" = type { %"class.blink::MemberBase.2454" }
%"class.blink::MemberBase.2454" = type { %"class.blink::HeapListHashSetNode.2455"* }
%"class.blink::HeapListHashSetNode.2455" = type { %"class.blink::Member.2786", %"class.blink::Member.2453", %"class.blink::Member.2453" }
%"class.blink::Member.2786" = type { %"class.blink::MemberBase.2787" }
%"class.blink::MemberBase.2787" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2457" = type { %"class.WTF::ListHashSet.base.2467", [7 x i8] }
%"class.WTF::ListHashSet.base.2467" = type <{ %"class.WTF::HashTable.2462", %"class.blink::Member.2464", %"class.blink::Member.2464", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2462" = type <{ %"class.blink::Member.2464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2464" = type { %"class.blink::MemberBase.2465" }
%"class.blink::MemberBase.2465" = type { %"class.blink::HeapListHashSetNode.2466"* }
%"class.blink::HeapListHashSetNode.2466" = type { %"class.blink::Member.2782", %"class.blink::Member.2464", %"class.blink::Member.2464" }
%"class.blink::Member.2782" = type { %"class.blink::MemberBase.2783" }
%"class.blink::MemberBase.2783" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2468" = type { %"class.WTF::ListHashSet.base.2478", [7 x i8] }
%"class.WTF::ListHashSet.base.2478" = type <{ %"class.WTF::HashTable.2473", %"class.blink::Member.2475", %"class.blink::Member.2475", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2473" = type <{ %"class.blink::Member.2475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2475" = type { %"class.blink::MemberBase.2476" }
%"class.blink::MemberBase.2476" = type { %"class.blink::HeapListHashSetNode.2477"* }
%"class.blink::HeapListHashSetNode.2477" = type { %"class.blink::Member.2778", %"class.blink::Member.2475", %"class.blink::Member.2475" }
%"class.blink::Member.2778" = type { %"class.blink::MemberBase.2779" }
%"class.blink::MemberBase.2779" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2479" = type { %"class.WTF::ListHashSet.base.2489", [7 x i8] }
%"class.WTF::ListHashSet.base.2489" = type <{ %"class.WTF::HashTable.2484", %"class.blink::Member.2486", %"class.blink::Member.2486", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2484" = type <{ %"class.blink::Member.2486"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2486" = type { %"class.blink::MemberBase.2487" }
%"class.blink::MemberBase.2487" = type { %"class.blink::HeapListHashSetNode.2488"* }
%"class.blink::HeapListHashSetNode.2488" = type { %"class.blink::Member.2774", %"class.blink::Member.2486", %"class.blink::Member.2486" }
%"class.blink::Member.2774" = type { %"class.blink::MemberBase.2775" }
%"class.blink::MemberBase.2775" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2490" = type { %"class.WTF::ListHashSet.base.2500", [7 x i8] }
%"class.WTF::ListHashSet.base.2500" = type <{ %"class.WTF::HashTable.2495", %"class.blink::Member.2497", %"class.blink::Member.2497", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2495" = type <{ %"class.blink::Member.2497"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2497" = type { %"class.blink::MemberBase.2498" }
%"class.blink::MemberBase.2498" = type { %"class.blink::HeapListHashSetNode.2499"* }
%"class.blink::HeapListHashSetNode.2499" = type { %"class.blink::Member.2770", %"class.blink::Member.2497", %"class.blink::Member.2497" }
%"class.blink::Member.2770" = type { %"class.blink::MemberBase.2771" }
%"class.blink::MemberBase.2771" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2501" = type { %"class.WTF::ListHashSet.base.2511", [7 x i8] }
%"class.WTF::ListHashSet.base.2511" = type <{ %"class.WTF::HashTable.2506", %"class.blink::Member.2508", %"class.blink::Member.2508", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2506" = type <{ %"class.blink::Member.2508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2508" = type { %"class.blink::MemberBase.2509" }
%"class.blink::MemberBase.2509" = type { %"class.blink::HeapListHashSetNode.2510"* }
%"class.blink::HeapListHashSetNode.2510" = type { %"class.blink::Member.2766", %"class.blink::Member.2508", %"class.blink::Member.2508" }
%"class.blink::Member.2766" = type { %"class.blink::MemberBase.2767" }
%"class.blink::MemberBase.2767" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2512" = type { %"class.WTF::ListHashSet.base.2522", [7 x i8] }
%"class.WTF::ListHashSet.base.2522" = type <{ %"class.WTF::HashTable.2517", %"class.blink::Member.2519", %"class.blink::Member.2519", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2517" = type <{ %"class.blink::Member.2519"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2519" = type { %"class.blink::MemberBase.2520" }
%"class.blink::MemberBase.2520" = type { %"class.blink::HeapListHashSetNode.2521"* }
%"class.blink::HeapListHashSetNode.2521" = type { %"class.blink::Member.2762", %"class.blink::Member.2519", %"class.blink::Member.2519" }
%"class.blink::Member.2762" = type { %"class.blink::MemberBase.2763" }
%"class.blink::MemberBase.2763" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2523" = type { %"class.WTF::ListHashSet.base.2533", [7 x i8] }
%"class.WTF::ListHashSet.base.2533" = type <{ %"class.WTF::HashTable.2528", %"class.blink::Member.2530", %"class.blink::Member.2530", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2528" = type <{ %"class.blink::Member.2530"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2530" = type { %"class.blink::MemberBase.2531" }
%"class.blink::MemberBase.2531" = type { %"class.blink::HeapListHashSetNode.2532"* }
%"class.blink::HeapListHashSetNode.2532" = type { %"class.blink::Member.2758", %"class.blink::Member.2530", %"class.blink::Member.2530" }
%"class.blink::Member.2758" = type { %"class.blink::MemberBase.2759" }
%"class.blink::MemberBase.2759" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2534" = type { %"class.WTF::ListHashSet.base.2544", [7 x i8] }
%"class.WTF::ListHashSet.base.2544" = type <{ %"class.WTF::HashTable.2539", %"class.blink::Member.2541", %"class.blink::Member.2541", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2539" = type <{ %"class.blink::Member.2541"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2541" = type { %"class.blink::MemberBase.2542" }
%"class.blink::MemberBase.2542" = type { %"class.blink::HeapListHashSetNode.2543"* }
%"class.blink::HeapListHashSetNode.2543" = type { %"class.blink::Member.2651", %"class.blink::Member.2541", %"class.blink::Member.2541" }
%"class.blink::HeapListHashSet.2545" = type { %"class.WTF::ListHashSet.base.2555", [7 x i8] }
%"class.WTF::ListHashSet.base.2555" = type <{ %"class.WTF::HashTable.2550", %"class.blink::Member.2552", %"class.blink::Member.2552", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2550" = type <{ %"class.blink::Member.2552"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2552" = type { %"class.blink::MemberBase.2553" }
%"class.blink::MemberBase.2553" = type { %"class.blink::HeapListHashSetNode.2554"* }
%"class.blink::HeapListHashSetNode.2554" = type { %"class.blink::Member.2752", %"class.blink::Member.2552", %"class.blink::Member.2552" }
%"class.blink::Member.2752" = type { %"class.blink::MemberBase.2753" }
%"class.blink::MemberBase.2753" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2556" = type { %"class.WTF::ListHashSet.base.2566", [7 x i8] }
%"class.WTF::ListHashSet.base.2566" = type <{ %"class.WTF::HashTable.2561", %"class.blink::Member.2563", %"class.blink::Member.2563", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2561" = type <{ %"class.blink::Member.2563"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2563" = type { %"class.blink::MemberBase.2564" }
%"class.blink::MemberBase.2564" = type { %"class.blink::HeapListHashSetNode.2565"* }
%"class.blink::HeapListHashSetNode.2565" = type { %"class.blink::Member.2748", %"class.blink::Member.2563", %"class.blink::Member.2563" }
%"class.blink::Member.2748" = type { %"class.blink::MemberBase.2749" }
%"class.blink::MemberBase.2749" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2567" = type { %"class.WTF::ListHashSet.base.2577", [7 x i8] }
%"class.WTF::ListHashSet.base.2577" = type <{ %"class.WTF::HashTable.2572", %"class.blink::Member.2574", %"class.blink::Member.2574", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2572" = type <{ %"class.blink::Member.2574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2574" = type { %"class.blink::MemberBase.2575" }
%"class.blink::MemberBase.2575" = type { %"class.blink::HeapListHashSetNode.2576"* }
%"class.blink::HeapListHashSetNode.2576" = type { %"class.blink::Member.2744", %"class.blink::Member.2574", %"class.blink::Member.2574" }
%"class.blink::Member.2744" = type { %"class.blink::MemberBase.2745" }
%"class.blink::MemberBase.2745" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2578" = type { %"class.WTF::ListHashSet.base.2588", [7 x i8] }
%"class.WTF::ListHashSet.base.2588" = type <{ %"class.WTF::HashTable.2583", %"class.blink::Member.2585", %"class.blink::Member.2585", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2583" = type <{ %"class.blink::Member.2585"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2585" = type { %"class.blink::MemberBase.2586" }
%"class.blink::MemberBase.2586" = type { %"class.blink::HeapListHashSetNode.2587"* }
%"class.blink::HeapListHashSetNode.2587" = type { %"class.blink::Member.2740", %"class.blink::Member.2585", %"class.blink::Member.2585" }
%"class.blink::Member.2740" = type { %"class.blink::MemberBase.2741" }
%"class.blink::MemberBase.2741" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2589" = type { %"class.WTF::ListHashSet.base.2599", [7 x i8] }
%"class.WTF::ListHashSet.base.2599" = type <{ %"class.WTF::HashTable.2594", %"class.blink::Member.2596", %"class.blink::Member.2596", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2594" = type <{ %"class.blink::Member.2596"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2596" = type { %"class.blink::MemberBase.2597" }
%"class.blink::MemberBase.2597" = type { %"class.blink::HeapListHashSetNode.2598"* }
%"class.blink::HeapListHashSetNode.2598" = type { %"class.blink::Member.2736", %"class.blink::Member.2596", %"class.blink::Member.2596" }
%"class.blink::Member.2736" = type { %"class.blink::MemberBase.2737" }
%"class.blink::MemberBase.2737" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2600" = type { %"class.WTF::ListHashSet.base.2610", [7 x i8] }
%"class.WTF::ListHashSet.base.2610" = type <{ %"class.WTF::HashTable.2605", %"class.blink::Member.2607", %"class.blink::Member.2607", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2605" = type <{ %"class.blink::Member.2607"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2607" = type { %"class.blink::MemberBase.2608" }
%"class.blink::MemberBase.2608" = type { %"class.blink::HeapListHashSetNode.2609"* }
%"class.blink::HeapListHashSetNode.2609" = type { %"class.blink::Member.2732", %"class.blink::Member.2607", %"class.blink::Member.2607" }
%"class.blink::Member.2732" = type { %"class.blink::MemberBase.2733" }
%"class.blink::MemberBase.2733" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2611" = type { %"class.WTF::ListHashSet.base.2621", [7 x i8] }
%"class.WTF::ListHashSet.base.2621" = type <{ %"class.WTF::HashTable.2616", %"class.blink::Member.2618", %"class.blink::Member.2618", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2616" = type <{ %"class.blink::Member.2618"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2618" = type { %"class.blink::MemberBase.2619" }
%"class.blink::MemberBase.2619" = type { %"class.blink::HeapListHashSetNode.2620"* }
%"class.blink::HeapListHashSetNode.2620" = type { %"class.blink::Member.2728", %"class.blink::Member.2618", %"class.blink::Member.2618" }
%"class.blink::Member.2728" = type { %"class.blink::MemberBase.2729" }
%"class.blink::MemberBase.2729" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2622" = type { %"class.WTF::ListHashSet.base.2632", [7 x i8] }
%"class.WTF::ListHashSet.base.2632" = type <{ %"class.WTF::HashTable.2627", %"class.blink::Member.2629", %"class.blink::Member.2629", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2627" = type <{ %"class.blink::Member.2629"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2629" = type { %"class.blink::MemberBase.2630" }
%"class.blink::MemberBase.2630" = type { %"class.blink::HeapListHashSetNode.2631"* }
%"class.blink::HeapListHashSetNode.2631" = type { %"class.blink::Member.2653", %"class.blink::Member.2629", %"class.blink::Member.2629" }
%"class.blink::HeapListHashSet.2633" = type { %"class.WTF::ListHashSet.base.2643", [7 x i8] }
%"class.WTF::ListHashSet.base.2643" = type <{ %"class.WTF::HashTable.2638", %"class.blink::Member.2640", %"class.blink::Member.2640", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2638" = type <{ %"class.blink::Member.2640"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2640" = type { %"class.blink::MemberBase.2641" }
%"class.blink::MemberBase.2641" = type { %"class.blink::HeapListHashSetNode.2642"* }
%"class.blink::HeapListHashSetNode.2642" = type { %"class.blink::Member.2645", %"class.blink::Member.2640", %"class.blink::Member.2640" }
%class.scoped_refptr.2644 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2645" = type { %"class.blink::MemberBase.2646" }
%"class.blink::MemberBase.2646" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2649" = type { %"class.blink::MemberBase.2650" }
%"class.blink::MemberBase.2650" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2651" = type { %"class.blink::MemberBase.2652" }
%"class.blink::MemberBase.2652" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2653" = type { %"class.blink::MemberBase.2654" }
%"class.blink::MemberBase.2654" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2657" = type { %"class.blink::MemberBase.2658" }
%"class.blink::MemberBase.2658" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2659" = type { %"class.blink::MemberBase.2660" }
%"class.blink::MemberBase.2660" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2661" }
%"class.blink::Member.2661" = type { %"class.blink::MemberBase.2662" }
%"class.blink::MemberBase.2662" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2974" }
%"class.mojo::Remote.2974" = type { %"class.mojo::internal::InterfacePtrState.2975" }
%"class.mojo::internal::InterfacePtrState.2975" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2976" }
%"class.std::__1::unique_ptr.2976" = type { %"class.std::__1::__compressed_pair.2977" }
%"class.std::__1::__compressed_pair.2977" = type { %"struct.std::__1::__compressed_pair_elem.2978" }
%"struct.std::__1::__compressed_pair_elem.2978" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2663" = type { %"class.std::__1::__compressed_pair.2664" }
%"class.std::__1::__compressed_pair.2664" = type { %"struct.std::__1::__compressed_pair_elem.2665" }
%"struct.std::__1::__compressed_pair_elem.2665" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2669" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2670" = type { %"class.std::__1::__compressed_pair.2671" }
%"class.std::__1::__compressed_pair.2671" = type { %"struct.std::__1::__compressed_pair_elem.2672" }
%"struct.std::__1::__compressed_pair_elem.2672" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2342" = type { %"class.absl::optional_internal::optional_data.2343" }
%"class.absl::optional_internal::optional_data.2343" = type { %"class.absl::optional_internal::optional_data_base.2344" }
%"class.absl::optional_internal::optional_data_base.2344" = type { %"class.absl::optional_internal::optional_data_dtor_base.2345" }
%"class.absl::optional_internal::optional_data_dtor_base.2345" = type { i8, %union.anon.2346 }
%union.anon.2346 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2676" = type { %"class.std::__1::__compressed_pair.2677" }
%"class.std::__1::__compressed_pair.2677" = type { %"struct.std::__1::__compressed_pair_elem.2678" }
%"struct.std::__1::__compressed_pair_elem.2678" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2682" }
%"class.blink::Member.2682" = type { %"class.blink::MemberBase.2683" }
%"class.blink::MemberBase.2683" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2984" }
%"class.mojo::AssociatedRemote.2984" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2985" }
%"class.mojo::internal::AssociatedInterfacePtrState.2985" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2986" }
%"class.std::__1::unique_ptr.2986" = type { %"class.std::__1::__compressed_pair.2987" }
%"class.std::__1::__compressed_pair.2987" = type { %"struct.std::__1::__compressed_pair_elem.2988" }
%"struct.std::__1::__compressed_pair_elem.2988" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2684" = type { %"class.blink::Member.2685" }
%"class.blink::Member.2685" = type { %"class.blink::MemberBase.2686" }
%"class.blink::MemberBase.2686" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2994" }
%"class.mojo::AssociatedRemote.2994" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2995" }
%"class.mojo::internal::AssociatedInterfacePtrState.2995" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2996" }
%"class.std::__1::unique_ptr.2996" = type { %"class.std::__1::__compressed_pair.2997" }
%"class.std::__1::__compressed_pair.2997" = type { %"struct.std::__1::__compressed_pair_elem.2998" }
%"struct.std::__1::__compressed_pair_elem.2998" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2687" }
%"class.blink::Member.2687" = type { %"class.blink::MemberBase.2688" }
%"class.blink::MemberBase.2688" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3004", %"class.blink::Member.1946", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3004" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3005" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1744" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3005" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2689" = type { %"class.blink::Member.2690" }
%"class.blink::Member.2690" = type { %"class.blink::MemberBase.2691" }
%"class.blink::MemberBase.2691" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3008", %"class.blink::Member.1946", %"class.mojo::AssociatedReceiver.3009" }
%"class.blink::ThreadState::PrefinalizerRegistration.3008" = type { i8 }
%"class.mojo::AssociatedReceiver.3009" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3010" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3010" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2692" }
%"class.blink::Member.2692" = type { %"class.blink::MemberBase.2693" }
%"class.blink::MemberBase.2693" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3013", %"class.blink::Member.1946", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3013" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2223, %"class.std::__1::unique_ptr.1744", %"class.base::WeakPtrFactory.3014" }
%"class.base::WeakPtrFactory.3014" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2694" = type { %"class.blink::Member.2695" }
%"class.blink::Member.2695" = type { %"class.blink::MemberBase.2696" }
%"class.blink::MemberBase.2696" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3017", %"class.blink::Member.1946", %"class.mojo::AssociatedReceiver.3018" }
%"class.blink::ThreadState::PrefinalizerRegistration.3017" = type { i8 }
%"class.mojo::AssociatedReceiver.3018" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3019" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3019" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2697" = type { %"class.blink::MemberBase.2698" }
%"class.blink::MemberBase.2698" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2699" = type { %"class.blink::MemberBase.2700" }
%"class.blink::MemberBase.2700" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2701" = type { %"class.blink::MemberBase.2702" }
%"class.blink::MemberBase.2702" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2703" = type { %"class.blink::MemberBase.2704" }
%"class.blink::MemberBase.2704" = type { %"class.blink::HeapHashMap.2705"* }
%"class.blink::HeapHashMap.2705" = type opaque
%"class.mojo::StructPtr.2706" = type { %"class.std::__1::unique_ptr.2707" }
%"class.std::__1::unique_ptr.2707" = type { %"class.std::__1::__compressed_pair.2708" }
%"class.std::__1::__compressed_pair.2708" = type { %"struct.std::__1::__compressed_pair_elem.2709" }
%"struct.std::__1::__compressed_pair_elem.2709" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2710", %"class.mojo::InlinedStructPtr.2711" }
%"class.mojo::InlinedStructPtr.2710" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2711" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2715" = type { %"class.blink::MemberBase.2716" }
%"class.blink::MemberBase.2716" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2717" = type { %"class.absl::optional_internal::optional_data.2718" }
%"class.absl::optional_internal::optional_data.2718" = type { %"class.absl::optional_internal::optional_data_base.2719" }
%"class.absl::optional_internal::optional_data_base.2719" = type { %"class.absl::optional_internal::optional_data_dtor_base.2720" }
%"class.absl::optional_internal::optional_data_dtor_base.2720" = type { i8, %union.anon.2721 }
%union.anon.2721 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1948" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1949", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.778, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.778 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1949" = type { %"class.blink::MemberBase.1950" }
%"class.absl::optional.1951" = type { %"class.absl::optional_internal::optional_data.1952" }
%"class.absl::optional_internal::optional_data.1952" = type { %"class.absl::optional_internal::optional_data_base.1953" }
%"class.absl::optional_internal::optional_data_base.1953" = type { %"class.absl::optional_internal::optional_data_dtor_base.1954" }
%"class.absl::optional_internal::optional_data_dtor_base.1954" = type { i8, %union.anon.1955 }
%union.anon.1955 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1958" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::HeapHashSet.1960"* }
%"class.blink::HeapHashSet.1960" = type opaque
%"class.std::__1::unique_ptr.1961" = type { %"class.std::__1::__compressed_pair.1962" }
%"class.std::__1::__compressed_pair.1962" = type { %"struct.std::__1::__compressed_pair_elem.1963" }
%"struct.std::__1::__compressed_pair_elem.1963" = type { %"class.WTF::HashSet.1964"* }
%"class.WTF::HashSet.1964" = type { %"class.WTF::HashTable.1965" }
%"class.WTF::HashTable.1965" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1973" = type { %"class.WTF::HashSet.1976" }
%"class.WTF::HashSet.1976" = type { %"class.WTF::HashTable.1977" }
%"class.WTF::HashTable.1977" = type <{ %"class.blink::Member.1979"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1979" = type opaque
%"class.blink::HeapHashSet.1980" = type { %"class.WTF::HashSet.1983" }
%"class.WTF::HashSet.1983" = type { %"class.WTF::HashTable.1984" }
%"class.WTF::HashTable.1984" = type <{ %"class.blink::Member.782"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.784", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.763", %"class.blink::Member.765", %"class.blink::Member.767", %"class.blink::Member.769", %"class.WTF::Vector.771", i16, %class.scoped_refptr.778 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.783" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1986" = type { %"class.std::__1::__compressed_pair.1987" }
%"class.std::__1::__compressed_pair.1987" = type { %"struct.std::__1::__compressed_pair_elem.1988" }
%"struct.std::__1::__compressed_pair_elem.1988" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1992" = type { %"class.blink::MemberBase.1993" }
%"class.blink::MemberBase.1993" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1996", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1996" = type { %"class.WTF::HashTable.1997" }
%"class.WTF::HashTable.1997" = type <{ %"struct.WTF::KeyValuePair.1999"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1999" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2000", i32, i32 }
%"class.WTF::Vector.2000" = type { %"class.WTF::VectorBuffer.2001" }
%"class.WTF::VectorBuffer.2001" = type { %"class.WTF::VectorBufferBase.2002" }
%"class.WTF::VectorBufferBase.2002" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2004" = type { %"class.WTF::LinkedHashSet.2007" }
%"class.WTF::LinkedHashSet.2007" = type { %"class.WTF::HashMap.2008", %"class.WTF::VectorBackedLinkedList.2012" }
%"class.WTF::HashMap.2008" = type { %"class.WTF::HashTable.2009" }
%"class.WTF::HashTable.2009" = type <{ %"struct.WTF::KeyValuePair.2011"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2011" = type opaque
%"class.WTF::VectorBackedLinkedList.2012" = type { %"class.WTF::Vector.2013", i32, i32 }
%"class.WTF::Vector.2013" = type { %"class.WTF::VectorBuffer.2014" }
%"class.WTF::VectorBuffer.2014" = type { %"class.WTF::VectorBufferBase.2015" }
%"class.WTF::VectorBufferBase.2015" = type { %"class.WTF::VectorBackedLinkedListNode.2016"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2016" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2018" = type { %"class.std::__1::__compressed_pair.2019" }
%"class.std::__1::__compressed_pair.2019" = type { %"struct.std::__1::__compressed_pair_elem.2020" }
%"struct.std::__1::__compressed_pair_elem.2020" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2024" = type { %"class.std::__1::__compressed_pair.2025" }
%"class.std::__1::__compressed_pair.2025" = type { %"struct.std::__1::__compressed_pair_elem.2026" }
%"struct.std::__1::__compressed_pair_elem.2026" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2027, %class.scoped_refptr.2027, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2077", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2082", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2027 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2028", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2035" }
%"class.WTF::RefCounted.2028" = type { %"class.base::RefCounted.2029" }
%"class.base::RefCounted.2029" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2030", i32, [4 x i8] }>
%"class.WTF::Vector.2030" = type { %"class.WTF::VectorBuffer.2031" }
%"class.WTF::VectorBuffer.2031" = type { %"class.WTF::VectorBufferBase.2032" }
%"class.WTF::VectorBufferBase.2032" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2035" = type { %"class.WTF::VectorBuffer.2036" }
%"class.WTF::VectorBuffer.2036" = type { %"class.WTF::VectorBufferBase.2037" }
%"class.WTF::VectorBufferBase.2037" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2038", %"class.std::__1::unique_ptr.2049", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.866, %class.scoped_refptr.908, %class.scoped_refptr.907 }
%class.scoped_refptr.866 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.864", i8, i8, %class.scoped_refptr.866, i32, i32 }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.908 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.945" }
%"class.blink::PaintPropertyNode.945" = type { %"class.WTF::RefCounted.946", i8, i8, %class.scoped_refptr.908, i32, i32 }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.907 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.904" }
%"class.blink::PaintPropertyNode.904" = type { %"class.WTF::RefCounted.905", i8, i8, %class.scoped_refptr.907, i32, i32 }
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2038" = type { %"class.std::__1::__compressed_pair.2039" }
%"class.std::__1::__compressed_pair.2039" = type { %"struct.std::__1::__compressed_pair_elem.2040" }
%"struct.std::__1::__compressed_pair_elem.2040" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2041", %"class.WTF::Vector.804", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2041" = type { %"class.WTF::VectorBuffer.2042" }
%"class.WTF::VectorBuffer.2042" = type { %"class.WTF::VectorBufferBase.2043" }
%"class.WTF::VectorBufferBase.2043" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.880" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.873, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.874", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.867" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.873 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.899", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.899" = type { %"class.WTF::RefCounted.900", i8, i8, %class.scoped_refptr.873, i32, i32 }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.794" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.799" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.889", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2049" = type { %"class.std::__1::__compressed_pair.2050" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2052", %"class.absl::optional.2052" }
%"class.absl::optional.2052" = type { %"class.absl::optional_internal::optional_data.2053" }
%"class.absl::optional_internal::optional_data.2053" = type { %"class.absl::optional_internal::optional_data_base.2054" }
%"class.absl::optional_internal::optional_data_base.2054" = type { %"class.absl::optional_internal::optional_data_dtor_base.2055" }
%"class.absl::optional_internal::optional_data_dtor_base.2055" = type { i8, [3 x i8], %union.anon.2056 }
%union.anon.2056 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2035"*, %"class.absl::optional.2062", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2062" = type { %"class.absl::optional_internal::optional_data.2063" }
%"class.absl::optional_internal::optional_data.2063" = type { %"class.absl::optional_internal::optional_data_base.2064" }
%"class.absl::optional_internal::optional_data_base.2064" = type { %"class.absl::optional_internal::optional_data_dtor_base.2065" }
%"class.absl::optional_internal::optional_data_dtor_base.2065" = type { i8, %union.anon.2066 }
%union.anon.2066 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2067", %"class.WTF::Vector.2072" }
%"class.WTF::Vector.2067" = type { %"class.WTF::VectorBuffer.2068" }
%"class.WTF::VectorBuffer.2068" = type { %"class.WTF::VectorBufferBase.2069", [128 x i8] }
%"class.WTF::VectorBufferBase.2069" = type { i32*, i32, i32 }
%"class.WTF::Vector.2072" = type { %"class.WTF::VectorBuffer.2073" }
%"class.WTF::VectorBuffer.2073" = type { %"class.WTF::VectorBufferBase.2074", [128 x i8] }
%"class.WTF::VectorBufferBase.2074" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2077" = type { %"class.WTF::VectorBuffer.2078" }
%"class.WTF::VectorBuffer.2078" = type { %"class.WTF::VectorBufferBase.2079" }
%"class.WTF::VectorBufferBase.2079" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2082" = type { %"class.WTF::HashTable.2083" }
%"class.WTF::HashTable.2083" = type <{ %"struct.WTF::KeyValuePair.2086"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2086" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2087", %"class.WTF::Vector.2092" }
%"class.WTF::HashMap.2087" = type { %"class.WTF::HashTable.2088" }
%"class.WTF::HashTable.2088" = type <{ %"struct.WTF::KeyValuePair.2091"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2091" = type opaque
%"class.WTF::Vector.2092" = type { %"class.WTF::VectorBuffer.2093" }
%"class.WTF::VectorBuffer.2093" = type { %"class.WTF::VectorBufferBase.2094" }
%"class.WTF::VectorBufferBase.2094" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2100" = type { %"class.std::__1::__compressed_pair.2101" }
%"class.std::__1::__compressed_pair.2101" = type { %"struct.std::__1::__compressed_pair_elem.2102" }
%"struct.std::__1::__compressed_pair_elem.2102" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2106" = type { %"class.WTF::VectorBuffer.2107" }
%"class.WTF::VectorBuffer.2107" = type { %"class.WTF::VectorBufferBase.2108" }
%"class.WTF::VectorBufferBase.2108" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2111 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2112" = type { %"class.blink::MemberBase.2113" }
%"class.blink::MemberBase.2113" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2114" = type { %"class.blink::MemberBase.2115" }
%"class.blink::MemberBase.2115" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2116" = type { %"class.blink::MemberBase.2117" }
%"class.blink::MemberBase.2117" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2118" = type { %"class.WTF::HashSet.2121" }
%"class.WTF::HashSet.2121" = type { %"class.WTF::HashTable.2122" }
%"class.WTF::HashTable.2122" = type <{ %"class.blink::WeakMember.2124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2124" = type opaque
%"class.blink::HeapHashSet.2125" = type { %"class.WTF::HashSet.2128" }
%"class.WTF::HashSet.2128" = type { %"class.WTF::HashTable.2129" }
%"class.WTF::HashTable.2129" = type <{ %"class.blink::WeakMember.2131"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2131" = type opaque
%"class.std::__1::unique_ptr.2132" = type { %"class.std::__1::__compressed_pair.2133" }
%"class.std::__1::__compressed_pair.2133" = type { %"struct.std::__1::__compressed_pair_elem.2134" }
%"struct.std::__1::__compressed_pair_elem.2134" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2135" }
%"class.base::time_internal::TimeBase.2135" = type { i64 }
%"class.std::__1::unique_ptr.2139" = type { %"class.std::__1::__compressed_pair.2140" }
%"class.std::__1::__compressed_pair.2140" = type { %"struct.std::__1::__compressed_pair_elem.2141" }
%"struct.std::__1::__compressed_pair_elem.2141" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2142", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2142" = type { %"class.absl::optional_internal::optional_data.2143" }
%"class.absl::optional_internal::optional_data.2143" = type { %"class.absl::optional_internal::optional_data_base.2144" }
%"class.absl::optional_internal::optional_data_base.2144" = type { %"class.absl::optional_internal::optional_data_dtor_base.2145" }
%"class.absl::optional_internal::optional_data_dtor_base.2145" = type { i8, %union.anon.2146 }
%union.anon.2146 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2150" = type { %"class.std::__1::__compressed_pair.2151" }
%"class.std::__1::__compressed_pair.2151" = type { %"struct.std::__1::__compressed_pair_elem.2152" }
%"struct.std::__1::__compressed_pair_elem.2152" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2156" = type { %"class.std::__1::__compressed_pair.2157" }
%"class.std::__1::__compressed_pair.2157" = type { %"struct.std::__1::__compressed_pair_elem.2158" }
%"struct.std::__1::__compressed_pair_elem.2158" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2162" = type { %"class.std::__1::__compressed_pair.2163" }
%"class.std::__1::__compressed_pair.2163" = type { %"struct.std::__1::__compressed_pair_elem.2164" }
%"struct.std::__1::__compressed_pair_elem.2164" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1933 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2168" = type { %"class.blink::PersistentBase.2169" }
%"class.blink::PersistentBase.2169" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2172", i64 }
%"class.blink::HeapVector.2172" = type { %"class.WTF::Vector.2175" }
%"class.WTF::Vector.2175" = type { %"class.WTF::VectorBuffer.2176" }
%"class.WTF::VectorBuffer.2176" = type { %"class.WTF::VectorBufferBase.2177", [368 x i8] }
%"class.WTF::VectorBufferBase.2177" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.782", i8, %"class.blink::Member.2178", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2178" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::HeapLinkedHashSet.2180"* }
%"class.blink::HeapLinkedHashSet.2180" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1471" = type { %"class.WTF::Vector.1474" }
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.1476" }
%"class.WTF::VectorBufferBase.1476" = type { %"class.blink::Member.1477"*, i32, i32 }
%"class.blink::Member.1477" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"struct.WTF::KeyValuePair.1493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1493" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1054" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1055", { i64, i64 } }
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1525" = type { %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.1527" }
%"struct.std::__1::__compressed_pair_elem.1527" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1528" = type { %"class.WTF::HashTable.1529" }
%"class.WTF::HashTable.1529" = type <{ %"struct.WTF::KeyValuePair.1532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1532" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1544" = type { %"class.WTF::VectorBuffer.1545" }
%"class.WTF::VectorBuffer.1545" = type { %"class.WTF::VectorBufferBase.1546" }
%"class.WTF::VectorBufferBase.1546" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1549" = type { %"class.WTF::HashMap.1552" }
%"class.WTF::HashMap.1552" = type { %"class.WTF::HashTable.1553" }
%"class.WTF::HashTable.1553" = type <{ %"struct.WTF::KeyValuePair.1555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1555" = type opaque
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1558" = type { %"class.std::__1::__compressed_pair.1559" }
%"class.std::__1::__compressed_pair.1559" = type { %"struct.std::__1::__compressed_pair_elem.1560" }
%"struct.std::__1::__compressed_pair_elem.1560" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1568" = type { %"class.WTF::HashMap.1571" }
%"class.WTF::HashMap.1571" = type { %"class.WTF::HashTable.1572" }
%"class.WTF::HashTable.1572" = type <{ %"struct.WTF::KeyValuePair.1574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1574" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1575" }
%"class.blink::HeapHashSet.1575" = type { %"class.WTF::HashSet.1578" }
%"class.WTF::HashSet.1578" = type { %"class.WTF::HashTable.1579" }
%"class.WTF::HashTable.1579" = type <{ %"class.blink::WeakMember.1581"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1581" = type opaque
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1591", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1598", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1591" = type { %"class.WTF::HashSet.1594" }
%"class.WTF::HashSet.1594" = type { %"class.WTF::HashTable.1595" }
%"class.WTF::HashTable.1595" = type <{ %"class.blink::Member.1597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1597" = type opaque
%"class.blink::HeapTaskRunnerTimer.1598" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1599", { i64, i64 } }
%"class.blink::WeakMember.1599" = type { %"class.blink::MemberBase.1585" }
%"class.blink::WeakMember.1586" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2933" }
%"class.WTF::Vector.2933" = type { %"class.WTF::VectorBuffer.2934" }
%"class.WTF::VectorBuffer.2934" = type { %"class.WTF::VectorBufferBase.2935" }
%"class.WTF::VectorBufferBase.2935" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2938", %"class.absl::optional.2938", %"class.absl::optional.2938" }
%"class.absl::optional.2938" = type { %"class.absl::optional_internal::optional_data.2939" }
%"class.absl::optional_internal::optional_data.2939" = type { %"class.absl::optional_internal::optional_data_base.2940" }
%"class.absl::optional_internal::optional_data_base.2940" = type { %"class.absl::optional_internal::optional_data_dtor_base.2941" }
%"class.absl::optional_internal::optional_data_dtor_base.2941" = type { i8, %union.anon.2942 }
%union.anon.2942 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.995", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2953" }
%"class.WTF::VectorBuffer.2953" = type { %"class.WTF::VectorBufferBase.2954", [32 x i8] }
%"class.WTF::VectorBufferBase.2954" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.971", i8, %"class.absl::optional.977", %class.scoped_refptr.953, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.982" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.753", %"class.blink::Persistent.759", %"class.std::__1::unique_ptr.819", %"class.blink::CullRect", %"class.std::__1::unique_ptr.835" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.786", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.814" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.780", %"class.blink::Member.782", %"class.blink::Member.782", i8, [7 x i8] }>
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.784", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.789", %"class.absl::optional.794", i8, i8, %"class.WTF::Vector.804" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.822", %"class.WTF::Vector.822", %"class.WTF::HashMap.827", %"class.WTF::Vector.822", i8, [7 x i8] }>
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.838", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.844", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.850", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.902, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.943, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.967 }
%class.scoped_refptr.863 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.898 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.902 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.903 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.866, %class.scoped_refptr.908, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.930", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.909" }
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.925" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.911, [20 x float], i32, [4 x i8], %"class.std::__1::vector.918", i32, [4 x i8] }>
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.936" }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { i32*, i32*, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { i32* }
%class.scoped_refptr.943 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.944 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.956" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.866, %"class.absl::optional.948", %class.scoped_refptr.953, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, [3 x i8], %union.anon.952 }
%union.anon.952 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.959", i32, [4 x i8] }>
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.967 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.blink::IntRect" }
%class.scoped_refptr.953 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.954", [4 x i8] }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::FragmentData"* }
%"class.blink::IntersectionGeometry" = type <{ %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", i32, [4 x i8], double, i32, [4 x i8] }>
%"class.WTF::Vector.2922" = type { %"class.WTF::VectorBuffer.2923" }
%"class.WTF::VectorBuffer.2923" = type { %"class.WTF::VectorBufferBase.2924" }
%"class.WTF::VectorBufferBase.2924" = type { float*, i32, i32 }
%"struct.blink::IntersectionGeometry::CachedRects" = type <{ %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", i8, i8, i8, i8 }>
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.838", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.absl::optional.3032" = type { %"class.absl::optional_internal::optional_data.3033" }
%"class.absl::optional_internal::optional_data.3033" = type { %"class.absl::optional_internal::optional_data_base.3034" }
%"class.absl::optional_internal::optional_data_base.3034" = type { %"class.absl::optional_internal::optional_data_dtor_base.3035" }
%"class.absl::optional_internal::optional_data_dtor_base.3035" = type { i8, %union.anon.3036 }
%union.anon.3036 = type { %"struct.blink::PhysicalRect" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3038", %"class.blink::Member.3040", %"class.blink::Member.3042", %"class.blink::Member.3061", %"class.blink::Member.3063" }
%"class.blink::Member.3038" = type { %"class.blink::MemberBase.3039" }
%"class.blink::MemberBase.3039" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3040" = type { %"class.blink::MemberBase.3041" }
%"class.blink::MemberBase.3041" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3042" = type { %"class.blink::MemberBase.3043" }
%"class.blink::MemberBase.3043" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3046", %"class.blink::HeapHashSet.3055" }
%"class.blink::HeapVector.3046" = type { %"class.WTF::Vector.3049" }
%"class.WTF::Vector.3049" = type { %"class.WTF::VectorBuffer.3050" }
%"class.WTF::VectorBuffer.3050" = type { %"class.WTF::VectorBufferBase.3051" }
%"class.WTF::VectorBufferBase.3051" = type { %"class.blink::Member.3052"*, i32, i32 }
%"class.blink::Member.3052" = type { %"class.blink::MemberBase.3053" }
%"class.blink::MemberBase.3053" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3055" = type { %"class.WTF::HashSet.3058" }
%"class.WTF::HashSet.3058" = type { %"class.WTF::HashTable.3059" }
%"class.WTF::HashTable.3059" = type <{ %"class.blink::Member.3052"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3061" = type { %"class.blink::MemberBase.3062" }
%"class.blink::MemberBase.3062" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3063" = type { %"class.blink::MemberBase.3064" }
%"class.blink::MemberBase.3064" = type { %"class.blink::HeapHashSet.3065"* }
%"class.blink::HeapHashSet.3065" = type opaque
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"struct.std::__1::pair.2927" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.blink::LayoutEmbeddedContent" = type <{ %"class.blink::LayoutReplaced", i32, [4 x i8] }>
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.3066 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.3066 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.3067" }
%"class.blink::InlineBoxList.3067" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::GeometryMapper::Translation2DOrMatrix" = type { %"class.blink::FloatSize", %"class.absl::optional.3070" }
%"class.absl::optional.3070" = type { %"class.absl::optional_internal::optional_data.3071" }
%"class.absl::optional_internal::optional_data.3071" = type { %"class.absl::optional_internal::optional_data_base.3072" }
%"class.absl::optional_internal::optional_data_base.3072" = type { %"class.absl::optional_internal::optional_data_dtor_base.3073" }
%"class.absl::optional_internal::optional_data_dtor_base.3073" = type { i8, %union.anon.3074 }
%union.anon.3074 = type { %"class.blink::TransformationMatrix" }

$_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv = comdat any

$_ZNK3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink14GeometryMapper23SourceToDestinationRectINS_10LayoutRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_ = comdat any

$_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj = comdat any

@__const.IntersectionGeometry.root_geometry = private unnamed_addr constant { float, %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::TransformationMatrix" } { float 0xFFFFFFFFE0000000, %"struct.blink::PhysicalRect" { %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalSize" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } } }, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::TransformationMatrix" { %"struct.blink::TransformationMatrix::Matrix4" { [4 x [4 x double]] [[4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF]] } } }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase65is_intersection_observer_document_scrolling_element_root_enabled_E = external local_unnamed_addr global i8, align 1

@_ZN5blink20IntersectionGeometry12RootGeometryC1EPKNS_12LayoutObjectERKN3WTF6VectorINS_6LengthELj0ENS5_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"struct.blink::IntersectionGeometry::RootGeometry"*, %"class.blink::LayoutObject"*, %"class.WTF::Vector.701"*), void (%"struct.blink::IntersectionGeometry::RootGeometry"*, %"class.blink::LayoutObject"*, %"class.WTF::Vector.701"*)* @_ZN5blink20IntersectionGeometry12RootGeometryC2EPKNS_12LayoutObjectERKN3WTF6VectorINS_6LengthELj0ENS5_18PartitionAllocatorEEE
@_ZN5blink20IntersectionGeometryC1EPKNS_4NodeERKNS_7ElementERKN3WTF6VectorINS_6LengthELj0ENS7_18PartitionAllocatorEEERKNS8_IfLj0ESA_EESD_jPNS0_11CachedRectsE = hidden unnamed_addr alias void (%"class.blink::IntersectionGeometry"*, %"class.blink::Node"*, %"class.blink::Element"*, %"class.WTF::Vector.701"*, %"class.WTF::Vector.2922"*, %"class.WTF::Vector.701"*, i32, %"struct.blink::IntersectionGeometry::CachedRects"*), void (%"class.blink::IntersectionGeometry"*, %"class.blink::Node"*, %"class.blink::Element"*, %"class.WTF::Vector.701"*, %"class.WTF::Vector.2922"*, %"class.WTF::Vector.701"*, i32, %"struct.blink::IntersectionGeometry::CachedRects"*)* @_ZN5blink20IntersectionGeometryC2EPKNS_4NodeERKNS_7ElementERKN3WTF6VectorINS_6LengthELj0ENS7_18PartitionAllocatorEEERKNS8_IfLj0ESA_EESD_jPNS0_11CachedRectsE
@_ZN5blink20IntersectionGeometryC1ERKNS0_12RootGeometryERKNS_4NodeERKNS_7ElementERKN3WTF6VectorIfLj0ENSA_18PartitionAllocatorEEERKNSB_INS_6LengthELj0ESC_EEjPNS0_11CachedRectsE = hidden unnamed_addr alias void (%"class.blink::IntersectionGeometry"*, %"struct.blink::IntersectionGeometry::RootGeometry"*, %"class.blink::Node"*, %"class.blink::Element"*, %"class.WTF::Vector.2922"*, %"class.WTF::Vector.701"*, i32, %"struct.blink::IntersectionGeometry::CachedRects"*), void (%"class.blink::IntersectionGeometry"*, %"struct.blink::IntersectionGeometry::RootGeometry"*, %"class.blink::Node"*, %"class.blink::Element"*, %"class.WTF::Vector.2922"*, %"class.WTF::Vector.701"*, i32, %"struct.blink::IntersectionGeometry::CachedRects"*)* @_ZN5blink20IntersectionGeometryC2ERKNS0_12RootGeometryERKNS_4NodeERKNS_7ElementERKN3WTF6VectorIfLj0ENSA_18PartitionAllocatorEEERKNSB_INS_6LengthELj0ESC_EEjPNS0_11CachedRectsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20IntersectionGeometry12RootGeometryC2EPKNS_12LayoutObjectERKN3WTF6VectorINS_6LengthELj0ENS5_18PartitionAllocatorEEE(%"struct.blink::IntersectionGeometry::RootGeometry"* nocapture, %"class.blink::LayoutObject"*, %"class.WTF::Vector.701"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TransformState", align 8
  %5 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %0, i64 0, i32 1
  %6 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false) #8
  %7 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %7, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %0, i64 0, i32 2, i32 0, i32 0, i64 0, i64 1
  %10 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %0, i64 0, i32 2, i32 0, i32 0, i64 1, i64 1
  %11 = bitcast double* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %10, align 8
  %12 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %0, i64 0, i32 2, i32 0, i32 0, i64 1, i64 2
  %13 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %0, i64 0, i32 2, i32 0, i32 0, i64 2, i64 2
  %14 = bitcast double* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %13, align 8
  %15 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %0, i64 0, i32 2, i32 0, i32 0, i64 2, i64 3
  %16 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %0, i64 0, i32 2, i32 0, i32 0, i64 3, i64 3
  %17 = bitcast double* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %18, label %88, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 16777216
  %24 = icmp eq i96 %23, 0
  br i1 %24, label %25, label %88

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %88, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 256
  %33 = icmp ne i32 %32, 0
  %34 = and i96 %22, 67108864
  %35 = icmp ne i96 %34, 0
  %36 = and i1 %35, %33
  br i1 %36, label %37, label %88

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %39 = bitcast %"class.blink::ComputedStyle"** %38 to %"class.blink::ComputedStyleBase"**
  %40 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %40, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %44, i64 0, i32 6
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"struct.blink::IntersectionGeometry::RootGeometry"* %0 to i32*
  store i32 %47, i32* %48, align 8
  %49 = tail call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_118InitializeRootRectEPKNS_12LayoutObjectERKN3WTF6VectorINS_6LengthELj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* nonnull %1, %"class.WTF::Vector.701"* dereferenceable(16) %2)
  %50 = extractvalue { i64, i64 } %49, 0
  %51 = extractvalue { i64, i64 } %49, 1
  %52 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 %50, i64* %52, align 4
  %53 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %0, i64 0, i32 1, i32 1
  %54 = bitcast %"struct.blink::PhysicalSize"* %53 to i64*
  store i64 %51, i64* %54, align 4
  %55 = bitcast %"class.blink::TransformState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %55) #8
  %56 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %4, i64 0, i32 3, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %4, i64 0, i32 3, i32 1, i32 0
  %59 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %4, i64 0, i32 4
  %60 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %4, i64 0, i32 5
  %61 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %4, i64 0, i32 6
  %62 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %4, i64 0, i32 7
  %63 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %4, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 40, i1 false) #8
  %64 = tail call noalias i8* @malloc(i64 128) #8
  %65 = bitcast i8* %64 to double*
  store double 1.000000e+00, double* %65, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 8
  %67 = getelementptr inbounds i8, i8* %64, i64 40
  %68 = bitcast i8* %67 to double*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %68, align 8
  %69 = getelementptr inbounds i8, i8* %64, i64 48
  %70 = getelementptr inbounds i8, i8* %64, i64 80
  %71 = bitcast i8* %70 to double*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %71, align 8
  %72 = getelementptr inbounds i8, i8* %64, i64 88
  %73 = getelementptr inbounds i8, i8* %64, i64 120
  %74 = bitcast i8* %73 to double*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %74, align 8
  %75 = bitcast %"class.blink::TransformationMatrix"** %56 to i8**
  store i8* %64, i8** %75, align 8
  store i32 0, i32* %57, align 8
  store i32 0, i32* %58, align 4
  store i8 1, i8* %59, align 8
  store i8 1, i8* %60, align 1
  store i8 0, i8* %61, align 2
  store i8 0, i8* %62, align 1
  store i32 0, i32* %63, align 4
  %76 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)***
  %77 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)** %77, i64 82
  %79 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)** %78, align 8
  call void %79(%"class.blink::LayoutObject"* nonnull %1, %"class.blink::LayoutBoxModelObject"* null, %"class.blink::TransformState"* nonnull dereferenceable(64) %4, i32 0) #8
  %80 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZNK5blink14TransformState20AccumulatedTransformEv(%"class.blink::TransformState"* nonnull %4) #8
  %81 = bitcast %"class.blink::TransformationMatrix"* %7 to i8*
  %82 = bitcast %"class.blink::TransformationMatrix"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 128, i1 false) #8
  %83 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %56, align 8
  store %"class.blink::TransformationMatrix"* null, %"class.blink::TransformationMatrix"** %56, align 8
  %84 = icmp eq %"class.blink::TransformationMatrix"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %37
  %86 = bitcast %"class.blink::TransformationMatrix"* %83 to i8*
  call void @free(i8* %86) #8
  br label %87

87:                                               ; preds = %37, %85
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %55) #8
  br label %88

88:                                               ; preds = %19, %25, %3, %29, %87
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_118InitializeRootRectEPKNS_12LayoutObjectERKN3WTF6VectorINS_6LengthELj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.701"* dereferenceable(16)) unnamed_addr #0 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = alloca %"class.absl::optional.3032", align 4
  %8 = bitcast { i64, i64 }* %3 to i32*
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %10 = bitcast i64* %9 to i32*
  %11 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #8
  %12 = icmp eq %"class.blink::LayoutObject"* %0, null
  br i1 %12, label %44, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, i64 92
  %17 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LayoutObject"* nonnull %0, i32 55) #8
  %19 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutView"*
  br i1 %18, label %20, label %44

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %20, %24
  %25 = phi %"class.blink::LayoutObject"* [ %27, %24 ], [ %0, %20 ]
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 7
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %24, label %31

31:                                               ; preds = %24, %20
  %32 = phi %"class.blink::Node"* [ %22, %20 ], [ %29, %24 ]
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = tail call zeroext i1 @_ZNK5blink8Document13IsInMainFrameEv(%"class.blink::Document"* %36) #8
  br i1 %37, label %38, label %44

38:                                               ; preds = %31
  %39 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  store i64 0, i64* %5, align 8
  %40 = call { i64, i64 } @_ZNK5blink10LayoutView16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutView"* nonnull %19, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6, i32 0) #8
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = extractvalue { i64, i64 } %40, 1
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %41, i64* %43, align 8
  store i64 %42, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  br label %114

44:                                               ; preds = %13, %2, %31
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %46 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %45 to i96*
  %47 = load i96, i96* %46, align 4
  %48 = and i96 %47, 8657043456
  %49 = icmp eq i96 %48, 8657043456
  br i1 %49, label %50, label %65

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = lshr i160 %55, 74
  %57 = trunc i160 %56 to i32
  %58 = and i32 %57, 7
  switch i32 %58, label %59 [
    i32 5, label %65
    i32 2, label %65
  ]

59:                                               ; preds = %50
  %60 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutBox"*
  %61 = tail call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"* %60)
  %62 = extractvalue { i64, i64 } %61, 0
  %63 = extractvalue { i64, i64 } %61, 1
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %62, i64* %64, align 8
  store i64 %63, i64* %9, align 8
  br label %114

65:                                               ; preds = %44, %50, %50
  %66 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutBoxModelObject"*
  %67 = bitcast %"class.blink::LayoutObject"* %0 to { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)***
  %68 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)**, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*** %67, align 8
  %69 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %68, i64 116
  %70 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %69, align 8
  %71 = tail call { i64, i64 } %70(%"class.blink::LayoutBoxModelObject"* %66) #8
  %72 = extractvalue { i64, i64 } %71, 0
  %73 = extractvalue { i64, i64 } %71, 1
  %74 = trunc i64 %72 to i32
  %75 = lshr i64 %72, 32
  %76 = trunc i64 %75 to i32
  %77 = icmp sgt i32 %74, 33554431
  br i1 %77, label %82, label %78

78:                                               ; preds = %65
  %79 = icmp slt i32 %74, -33554432
  %80 = shl i32 %74, 6
  %81 = select i1 %79, i32 -2147483648, i32 %80
  br label %82

82:                                               ; preds = %78, %65
  %83 = phi i32 [ 2147483647, %65 ], [ %81, %78 ]
  %84 = icmp sgt i32 %76, 33554431
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = icmp slt i32 %76, -33554432
  br i1 %86, label %90, label %87

87:                                               ; preds = %85
  %88 = shl nuw nsw i64 %75, 6
  %89 = trunc i64 %88 to i32
  br label %90

90:                                               ; preds = %85, %82, %87
  %91 = phi i32 [ %89, %87 ], [ 2147483647, %82 ], [ -2147483648, %85 ]
  %92 = trunc i64 %73 to i32
  %93 = lshr i64 %73, 32
  %94 = trunc i64 %93 to i32
  %95 = icmp sgt i32 %92, 33554431
  br i1 %95, label %100, label %96

96:                                               ; preds = %90
  %97 = icmp slt i32 %92, -33554432
  %98 = shl i32 %92, 6
  %99 = select i1 %97, i32 -2147483648, i32 %98
  br label %100

100:                                              ; preds = %96, %90
  %101 = phi i32 [ 2147483647, %90 ], [ %99, %96 ]
  %102 = icmp sgt i32 %94, 33554431
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = icmp slt i32 %94, -33554432
  br i1 %104, label %108, label %105

105:                                              ; preds = %103
  %106 = shl nuw nsw i64 %93, 6
  %107 = trunc i64 %106 to i32
  br label %108

108:                                              ; preds = %103, %100, %105
  %109 = phi i32 [ %107, %105 ], [ 2147483647, %100 ], [ -2147483648, %103 ]
  store i32 %83, i32* %8, align 8
  %110 = getelementptr inbounds i8, i8* %11, i64 4
  %111 = bitcast i8* %110 to i32*
  store i32 %91, i32* %111, align 4
  store i32 %101, i32* %10, align 8
  %112 = getelementptr inbounds i8, i8* %11, i64 12
  %113 = bitcast i8* %112 to i32*
  store i32 %109, i32* %113, align 4
  br label %114

114:                                              ; preds = %59, %108, %38
  %115 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %116 = bitcast %"class.blink::ComputedStyle"** %115 to %"class.blink::ComputedStyleBase"**
  %117 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %117, i64 0, i32 1, i32 0, i32 0
  %119 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %119, i64 0, i32 2, i32 0, i32 0
  %121 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %121, i64 0, i32 6
  %123 = load float, float* %122, align 8
  %124 = getelementptr inbounds %"class.absl::optional.3032", %"class.absl::optional.3032"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %124) #8
  store i8 0, i8* %124, align 4
  call fastcc void @_ZN5blink12_GLOBAL__N_111ApplyMarginERNS_12PhysicalRectERKN3WTF6VectorINS_6LengthELj0ENS3_18PartitionAllocatorEEEfRKN4absl8optionalIS1_EE(%"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.701"* dereferenceable(16) %1, float %123, %"class.absl::optional.3032"* nonnull dereferenceable(20) %7)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %124) #8
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = insertvalue { i64, i64 } undef, i64 %126, 0
  %128 = load i64, i64* %9, align 8
  %129 = insertvalue { i64, i64 } %127, i64 %128, 1
  ret { i64, i64 } %129
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZNK5blink14TransformState20AccumulatedTransformEv(%"class.blink::TransformState"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink20IntersectionGeometry28GetRootLayoutObjectForTargetEPKNS_4NodeEPNS_12LayoutObjectEb(%"class.blink::Node"* readonly, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::Node"* %0, null
  br i1 %4, label %5, label %32

5:                                                ; preds = %3
  %6 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %7, %11
  %12 = phi %"class.blink::LayoutObject"* [ %14, %11 ], [ %1, %7 ]
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 7
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %11, label %18

18:                                               ; preds = %11, %7
  %19 = phi %"class.blink::Node"* [ %9, %7 ], [ %16, %11 ]
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %23) #8
  %25 = icmp eq %"class.blink::LocalFrame"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = tail call dereferenceable(1176) %"class.blink::LocalFrame"* @_ZNK5blink10LocalFrame14LocalFrameRootEv(%"class.blink::LocalFrame"* nonnull %24) #8
  %28 = tail call %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"* nonnull %27) #8
  br label %29

29:                                               ; preds = %26, %18, %5
  %30 = phi %"class.blink::LayoutView"* [ null, %5 ], [ %28, %26 ], [ null, %18 ]
  %31 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %121

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 256
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %121, label %37

37:                                               ; preds = %32
  %38 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase65is_intersection_observer_document_scrolling_element_root_enabled_E, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %44, i64 0, i32 0, i32 0
  %46 = icmp eq %"class.blink::Node"* %45, %0
  br i1 %46, label %47, label %52

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 28, i32 3
  %49 = bitcast %"class.blink::Member.320"* %48 to %"class.blink::LayoutView"**
  %50 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %67

52:                                               ; preds = %37, %40
  %53 = and i32 %34, 1
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %54, label %60, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.blink::NodeData"** %55 to %"class.blink::NodeRareData"**
  %58 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %58, i64 0, i32 1, i32 0, i32 0
  br label %62

60:                                               ; preds = %52
  %61 = bitcast %"class.blink::NodeData"** %55 to %"class.blink::NodeRenderingData"**
  br label %62

62:                                               ; preds = %56, %60
  %63 = phi %"class.blink::NodeRenderingData"** [ %59, %56 ], [ %61, %60 ]
  %64 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %64, i64 0, i32 1
  %66 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %65, align 8
  br label %67

67:                                               ; preds = %62, %47
  %68 = phi %"class.blink::LayoutObject"* [ %51, %47 ], [ %66, %62 ]
  %69 = icmp eq %"class.blink::LayoutObject"* %1, null
  %70 = xor i1 %2, true
  %71 = or i1 %69, %70
  br i1 %71, label %121, label %72

72:                                               ; preds = %67
  %73 = icmp eq %"class.blink::LayoutObject"* %68, null
  %74 = icmp eq %"class.blink::LayoutObject"* %68, %1
  %75 = or i1 %74, %73
  br i1 %75, label %121, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 6, i32 0, i32 0
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %77, align 8
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %80, label %87

80:                                               ; preds = %76, %80
  %81 = phi %"class.blink::LayoutObject"* [ %83, %80 ], [ %68, %76 ]
  %82 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %81, i64 0, i32 7
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 6, i32 0, i32 0
  %85 = load %"class.blink::Node"*, %"class.blink::Node"** %84, align 8
  %86 = icmp eq %"class.blink::Node"* %85, null
  br i1 %86, label %80, label %87

87:                                               ; preds = %80, %76
  %88 = phi %"class.blink::Node"* [ %78, %76 ], [ %85, %80 ]
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %88, i64 0, i32 3, i32 0, i32 0
  %90 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %90, i64 0, i32 2, i32 0, i32 0
  %92 = load %"class.blink::Document"*, %"class.blink::Document"** %91, align 8
  %93 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %92) #8
  %94 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  br i1 %96, label %97, label %104

97:                                               ; preds = %87, %97
  %98 = phi %"class.blink::LayoutObject"* [ %100, %97 ], [ %1, %87 ]
  %99 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 7
  %100 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %100, i64 0, i32 6, i32 0, i32 0
  %102 = load %"class.blink::Node"*, %"class.blink::Node"** %101, align 8
  %103 = icmp eq %"class.blink::Node"* %102, null
  br i1 %103, label %97, label %104

104:                                              ; preds = %97, %87
  %105 = phi %"class.blink::Node"* [ %95, %87 ], [ %102, %97 ]
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 0, i32 3, i32 0, i32 0
  %107 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %107, i64 0, i32 2, i32 0, i32 0
  %109 = load %"class.blink::Document"*, %"class.blink::Document"** %108, align 8
  %110 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %109) #8
  %111 = icmp eq %"class.blink::LocalFrame"* %93, %110
  br i1 %111, label %112, label %121

112:                                              ; preds = %104, %112
  %113 = phi %"class.blink::LayoutObject"* [ %115, %112 ], [ %1, %104 ]
  %114 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %113, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #8
  %115 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = icmp ne %"class.blink::LayoutBlock"* %114, null
  %117 = icmp ne %"class.blink::LayoutObject"* %115, %68
  %118 = and i1 %116, %117
  br i1 %118, label %112, label %119

119:                                              ; preds = %112
  %120 = select i1 %116, %"class.blink::LayoutObject"* %68, %"class.blink::LayoutObject"* null
  ret %"class.blink::LayoutObject"* %120

121:                                              ; preds = %32, %29, %67, %104, %72
  %122 = phi %"class.blink::LayoutObject"* [ null, %72 ], [ null, %104 ], [ %31, %29 ], [ null, %32 ], [ %68, %67 ]
  ret %"class.blink::LayoutObject"* %122
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20IntersectionGeometryC2EPKNS_4NodeERKNS_7ElementERKN3WTF6VectorINS_6LengthELj0ENS7_18PartitionAllocatorEEERKNS8_IfLj0ESA_EESD_jPNS0_11CachedRectsE(%"class.blink::IntersectionGeometry"*, %"class.blink::Node"*, %"class.blink::Element"* dereferenceable(104), %"class.WTF::Vector.701"* dereferenceable(16), %"class.WTF::Vector.2922"* dereferenceable(16), %"class.WTF::Vector.701"* dereferenceable(16), i32, %"struct.blink::IntersectionGeometry::CachedRects"*) unnamed_addr #0 align 2 {
  %9 = alloca %"struct.blink::IntersectionGeometry::RootGeometry", align 8
  %10 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 4
  %11 = and i32 %6, 127
  %12 = bitcast %"class.blink::IntersectionGeometry"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 64, i1 false)
  store i32 %11, i32* %10, align 8
  %13 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 6
  store double 0.000000e+00, double* %13, align 8
  %14 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 7
  store i32 0, i32* %14, align 8
  %15 = icmp eq %"struct.blink::IntersectionGeometry::CachedRects"* %7, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"struct.blink::IntersectionGeometry::CachedRects", %"struct.blink::IntersectionGeometry::CachedRects"* %7, i64 0, i32 4
  store i8 0, i8* %17, align 2
  br label %18

18:                                               ; preds = %8, %16
  %19 = icmp eq %"class.blink::Node"* %1, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = load i32, i32* %10, align 8
  %22 = or i32 %21, 128
  store i32 %22, i32* %10, align 8
  br label %23

23:                                               ; preds = %18, %20
  %24 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 256
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %85, label %29

29:                                               ; preds = %23
  %30 = and i32 %26, 1
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %33 = bitcast %"class.blink::NodeData"** %32 to %"class.blink::NodeRareData"**
  %34 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %34, i64 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.blink::NodeData"** %32 to %"class.blink::NodeRenderingData"**
  %37 = select i1 %31, %"class.blink::NodeRenderingData"** %36, %"class.blink::NodeRenderingData"** %35
  %38 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %38, i64 0, i32 1
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %85, label %42

42:                                               ; preds = %29
  %43 = bitcast %"class.blink::LayoutObject"* %40 to i1 (%"class.blink::LayoutObject"*)***
  %44 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %44, i64 20
  %46 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::LayoutObject"* nonnull %40) #8
  br i1 %47, label %54, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 4
  %50 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %49 to i96*
  %51 = load i96, i96* %50, align 4
  %52 = and i96 %51, 33554432
  %53 = icmp eq i96 %52, 0
  br i1 %53, label %85, label %54

54:                                               ; preds = %48, %42
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 6, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %58, label %65

58:                                               ; preds = %54, %58
  %59 = phi %"class.blink::LayoutObject"* [ %61, %58 ], [ %40, %54 ]
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %59, i64 0, i32 7
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 6, i32 0, i32 0
  %63 = load %"class.blink::Node"*, %"class.blink::Node"** %62, align 8
  %64 = icmp eq %"class.blink::Node"* %63, null
  br i1 %64, label %58, label %65

65:                                               ; preds = %58, %54
  %66 = phi %"class.blink::Node"* [ %56, %54 ], [ %63, %58 ]
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %66, i64 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Document"*, %"class.blink::Document"** %69, align 8
  %71 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %70) #8
  %72 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %71, i64 0, i32 0, i32 8
  %73 = load i8, i8* %72, align 2, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %85, !prof !3

75:                                               ; preds = %65
  %76 = tail call zeroext i1 @_ZN5blink20DisplayLockUtilities31IsInLockedSubtreeCrossingFramesERKNS_4NodeENS_16IncludeSelfOrNotE(%"class.blink::Node"* dereferenceable(64) %24, i32 1) #8
  br i1 %76, label %85, label %77

77:                                               ; preds = %75
  %78 = load i32, i32* %10, align 8
  %79 = and i32 %78, 32
  %80 = icmp eq i32 %79, 0
  %81 = tail call %"class.blink::LayoutObject"* @_ZN5blink20IntersectionGeometry28GetRootLayoutObjectForTargetEPKNS_4NodeEPNS_12LayoutObjectEb(%"class.blink::Node"* %1, %"class.blink::LayoutObject"* nonnull %40, i1 zeroext %80)
  %82 = icmp eq %"class.blink::LayoutObject"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %77
  %84 = bitcast %"struct.blink::IntersectionGeometry::RootGeometry"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %84) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 8 bitcast ({ float, %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::TransformationMatrix" }* @__const.IntersectionGeometry.root_geometry to i8*), i64 152, i1 false)
  call void @_ZN5blink20IntersectionGeometry12RootGeometryC2EPKNS_12LayoutObjectERKN3WTF6VectorINS_6LengthELj0ENS5_18PartitionAllocatorEEE(%"struct.blink::IntersectionGeometry::RootGeometry"* nonnull %9, %"class.blink::LayoutObject"* nonnull %81, %"class.WTF::Vector.701"* dereferenceable(16) %3)
  call void @_ZN5blink20IntersectionGeometry15ComputeGeometryERKNS0_12RootGeometryEPKNS_12LayoutObjectES6_RKN3WTF6VectorIfLj0ENS7_18PartitionAllocatorEEERKNS8_INS_6LengthELj0ES9_EEPNS0_11CachedRectsE(%"class.blink::IntersectionGeometry"* %0, %"struct.blink::IntersectionGeometry::RootGeometry"* nonnull dereferenceable(152) %9, %"class.blink::LayoutObject"* nonnull %81, %"class.blink::LayoutObject"* nonnull %40, %"class.WTF::Vector.2922"* dereferenceable(16) %4, %"class.WTF::Vector.701"* dereferenceable(16) %5, %"struct.blink::IntersectionGeometry::CachedRects"* %7)
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %84) #8
  br label %85

85:                                               ; preds = %65, %75, %48, %29, %23, %83, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20IntersectionGeometry15ComputeGeometryERKNS0_12RootGeometryEPKNS_12LayoutObjectES6_RKN3WTF6VectorIfLj0ENS7_18PartitionAllocatorEEERKNS8_INS_6LengthELj0ES9_EEPNS0_11CachedRectsE(%"class.blink::IntersectionGeometry"*, %"struct.blink::IntersectionGeometry::RootGeometry"* dereferenceable(152), %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.WTF::Vector.2922"* dereferenceable(16), %"class.WTF::Vector.701"* dereferenceable(16), %"struct.blink::IntersectionGeometry::CachedRects"*) local_unnamed_addr #3 align 2 {
  %8 = alloca %"class.blink::HitTestResult", align 8
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to { i64, i64 }*
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.absl::optional.3032", align 4
  %14 = alloca %"class.WTF::Vector.701", align 8
  %15 = alloca i8, align 1
  %16 = alloca %"struct.std::__1::pair.2927", align 16
  %17 = alloca %"class.blink::PropertyTreeStateOrAlias", align 8
  %18 = alloca <4 x i32>, align 16
  %19 = bitcast <4 x i32>* %18 to { i64, i64 }*
  %20 = bitcast <4 x i32>* %18 to %"class.blink::LayoutRect"*
  %21 = alloca %"class.blink::TransformState", align 8
  %22 = alloca %"class.blink::TransformationMatrix", align 8
  %23 = alloca %"class.blink::FloatQuad", align 4
  %24 = alloca %"class.blink::FloatQuad", align 8
  %25 = alloca %"class.blink::FloatQuad", align 4
  %26 = alloca %"class.blink::FloatQuad", align 8
  %27 = alloca %"class.blink::FloatQuad", align 4
  %28 = alloca %"class.blink::FloatQuad", align 8
  %29 = alloca %"class.blink::FloatQuad", align 4
  %30 = alloca %"class.blink::FloatQuad", align 8
  %31 = alloca %"class.blink::FloatQuad", align 4
  %32 = alloca %"class.blink::FloatQuad", align 8
  %33 = alloca <4 x float>, align 16
  %34 = bitcast <4 x float>* %33 to { <2 x float>, <2 x float> }*
  %35 = bitcast <4 x float>* %33 to %"class.blink::FloatRect"*
  %36 = alloca <4 x float>, align 16
  %37 = bitcast <4 x float>* %36 to { <2 x float>, <2 x float> }*
  %38 = bitcast <4 x float>* %36 to %"class.blink::FloatRect"*
  %39 = alloca <4 x float>, align 16
  %40 = bitcast <4 x float>* %39 to { <2 x float>, <2 x float> }*
  %41 = bitcast <4 x float>* %39 to %"class.blink::FloatRect"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #8
  store i8 -86, i8* %15, align 1
  %42 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 32
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %7
  %47 = bitcast %"class.blink::IntersectionGeometry"* %0 to i8*
  %48 = bitcast %"struct.blink::IntersectionGeometry::CachedRects"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 4 %48, i64 16, i1 false)
  %49 = getelementptr inbounds %"struct.blink::IntersectionGeometry::CachedRects", %"struct.blink::IntersectionGeometry::CachedRects"* %6, i64 0, i32 3
  %50 = load i8, i8* %49, align 1, !range !2
  store i8 %50, i8* %15, align 1
  %51 = getelementptr inbounds %"struct.blink::IntersectionGeometry::CachedRects", %"struct.blink::IntersectionGeometry::CachedRects"* %6, i64 0, i32 1
  %52 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2
  %53 = bitcast %"struct.blink::PhysicalRect"* %52 to i8*
  %54 = bitcast %"struct.blink::PhysicalRect"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 4 %54, i64 16, i1 false)
  br label %348

55:                                               ; preds = %7
  %56 = bitcast %"struct.std::__1::pair.2927"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %56) #8
  %57 = getelementptr inbounds %"struct.std::__1::pair.2927", %"struct.std::__1::pair.2927"* %16, i64 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.2927", %"struct.std::__1::pair.2927"* %16, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 -86, i64 20, i1 false) #8, !alias.scope !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 0, i64 17, i1 false) #8, !alias.scope !4
  %59 = and i32 %43, 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %77, label %61

61:                                               ; preds = %55
  %62 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*)***
  %63 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %62, align 8, !noalias !4
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %63, i64 27
  %65 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutObject"* %3) #8
  br i1 %66, label %67, label %77

67:                                               ; preds = %61
  %68 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutEmbeddedContent"*
  %69 = tail call { i64, i64 } @_ZNK5blink21LayoutEmbeddedContent19ReplacedContentRectEv(%"class.blink::LayoutEmbeddedContent"* %68) #8
  %70 = extractvalue { i64, i64 } %69, 0
  %71 = extractvalue { i64, i64 } %69, 1
  %72 = bitcast %"struct.std::__1::pair.2927"* %16 to i64*
  store i64 %70, i64* %72, align 16, !alias.scope !4
  %73 = getelementptr inbounds %"struct.std::__1::pair.2927", %"struct.std::__1::pair.2927"* %16, i64 0, i32 0, i32 1
  %74 = bitcast %"struct.blink::PhysicalSize"* %73 to i64*
  store i64 %71, i64* %74, align 8, !alias.scope !4
  %75 = lshr i64 %71, 32
  %76 = trunc i64 %75 to i32
  br label %292

77:                                               ; preds = %61, %55
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %79 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %78 to i96*
  %80 = load i96, i96* %79, align 4, !noalias !4
  %81 = and i96 %80, 67108864
  %82 = icmp eq i96 %81, 0
  br i1 %82, label %202, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutBox"*
  %85 = and i32 %43, 64
  %86 = icmp ne i32 %85, 0
  %87 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #8, !noalias !4
  %88 = bitcast <2 x i64>* %9 to %"struct.blink::PhysicalRect"*
  %89 = bitcast { i64, i64 }* %11 to %"struct.blink::PhysicalRect"*
  %90 = bitcast i64* %12 to %"struct.blink::PhysicalOffset"*
  %91 = bitcast <2 x i64>* %9 to i32*
  %92 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %88, i64 0, i32 0, i32 1, i32 0
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %94 = bitcast i64* %93 to i32*
  %95 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 1, i32 1, i32 1
  %96 = bitcast i8* %95 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -86, i64 16, i1 false) #8, !noalias !4
  %97 = load i64, i64* %96, align 4, !noalias !4
  %98 = trunc i64 %97 to i32
  %99 = lshr i64 %97, 32
  %100 = trunc i64 %99 to i32
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 1, i32 4, i32 0, i64 4
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 4, !noalias !4
  %104 = trunc i64 %103 to i32
  %105 = lshr i64 %103, 32
  %106 = trunc i64 %105 to i32
  %107 = srem i32 %98, 64
  %108 = icmp slt i32 %104, 0
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %104) #8
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %109, i32 %112, !prof !7
  %114 = sdiv i32 %113, 64
  %115 = srem i32 %113, 64
  %116 = add nsw i32 %115, 32
  %117 = ashr i32 %116, 6
  %118 = add nsw i32 %107, 32
  %119 = ashr i32 %118, 6
  %120 = sub nsw i32 %114, %119
  %121 = add nsw i32 %117, %120
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %83
  %124 = add i32 %104, 4
  %125 = icmp ugt i32 %124, 8
  br i1 %125, label %126, label %129, !prof !8

126:                                              ; preds = %123
  %127 = icmp sgt i32 %104, 0
  %128 = select i1 %127, i32 1, i32 -1
  br label %129

129:                                              ; preds = %126, %123, %83
  %130 = phi i32 [ %128, %126 ], [ %121, %83 ], [ 0, %123 ]
  %131 = srem i32 %100, 64
  %132 = icmp slt i32 %106, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %131, i32 %106) #8
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !7
  %138 = sdiv i32 %137, 64
  %139 = srem i32 %137, 64
  %140 = add nsw i32 %139, 32
  %141 = ashr i32 %140, 6
  %142 = add nsw i32 %131, 32
  %143 = ashr i32 %142, 6
  %144 = sub nsw i32 %138, %143
  %145 = add nsw i32 %141, %144
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %153

147:                                              ; preds = %129
  %148 = add i32 %106, 4
  %149 = icmp ugt i32 %148, 8
  br i1 %149, label %150, label %153, !prof !8

150:                                              ; preds = %147
  %151 = icmp sgt i32 %106, 0
  %152 = select i1 %151, i32 1, i32 -1
  br label %153

153:                                              ; preds = %150, %147, %129
  %154 = phi i32 [ %152, %150 ], [ %145, %129 ], [ 0, %147 ]
  store i32 0, i32* %91, align 16, !noalias !4
  store i32 0, i32* %92, align 4, !noalias !4
  %155 = icmp sgt i32 %130, 33554431
  br i1 %155, label %160, label %156

156:                                              ; preds = %153
  %157 = icmp slt i32 %130, -33554432
  %158 = shl i32 %130, 6
  %159 = select i1 %157, i32 -2147483648, i32 %158
  br label %160

160:                                              ; preds = %156, %153
  %161 = phi i32 [ 2147483647, %153 ], [ %159, %156 ]
  store i32 %161, i32* %94, align 8, !noalias !4
  %162 = icmp sgt i32 %154, 33554431
  br i1 %162, label %167, label %163

163:                                              ; preds = %160
  %164 = icmp slt i32 %154, -33554432
  %165 = shl i32 %154, 6
  %166 = select i1 %164, i32 -2147483648, i32 %165
  br label %167

167:                                              ; preds = %163, %160
  %168 = phi i32 [ 2147483647, %160 ], [ %166, %163 ]
  %169 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %88, i64 0, i32 1, i32 1, i32 0
  store i32 %168, i32* %169, align 4, !noalias !4
  %170 = and i96 %80, 464227514732017603087171584
  %171 = icmp eq i96 %170, 464227514732017603087171584
  %172 = and i1 %86, %171
  br i1 %172, label %173, label %196

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %175 = bitcast %"class.blink::ComputedStyle"** %174 to %"class.blink::ComputedStyleBase"**
  %176 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %175, align 8, !noalias !4
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %176, i64 0, i32 3, i32 0, i32 0
  %178 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %178, i64 0, i32 3, i32 0, i32 0
  %180 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %180, i64 0, i32 38, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %196, label %184

184:                                              ; preds = %173
  %185 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #8, !noalias !4
  %186 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #8, !noalias !4
  %187 = bitcast %"class.blink::LayoutObject"* %3 to { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)***
  store i64 0, i64* %12, align 8, !noalias !4
  %188 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)**, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*** %187, align 8, !noalias !4
  %189 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %188, i64 177
  %190 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %189, align 8
  %191 = call { i64, i64 } %190(%"class.blink::LayoutBox"* %84, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %90, i32 0) #8
  %192 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %193 = extractvalue { i64, i64 } %191, 0
  store i64 %193, i64* %192, align 8, !noalias !4
  %194 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %195 = extractvalue { i64, i64 } %191, 1
  store i64 %195, i64* %194, align 8, !noalias !4
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %88, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %89) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #8, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #8, !noalias !4
  br label %196

196:                                              ; preds = %184, %173, %167
  %197 = load <2 x i64>, <2 x i64>* %9, align 16, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #8, !noalias !4
  %198 = bitcast %"struct.std::__1::pair.2927"* %16 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %198, align 16, !alias.scope !4
  %199 = extractelement <2 x i64> %197, i32 1
  %200 = lshr i64 %199, 32
  %201 = trunc i64 %200 to i32
  br label %292

202:                                              ; preds = %77
  %203 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*)***
  %204 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %203, align 8, !noalias !4
  %205 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %204, i64 26
  %206 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %205, align 8
  %207 = tail call zeroext i1 %206(%"class.blink::LayoutObject"* %3) #8
  br i1 %207, label %208, label %278

208:                                              ; preds = %202
  %209 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutBoxModelObject"*
  %210 = tail call { <2 x float>, <2 x float> } @_ZNK5blink20LayoutBoxModelObject25LocalBoundingBoxFloatRectEv(%"class.blink::LayoutBoxModelObject"* %209) #8
  %211 = extractvalue { <2 x float>, <2 x float> } %210, 0
  %212 = extractvalue { <2 x float>, <2 x float> } %210, 1
  %213 = extractelement <2 x float> %211, i32 0
  %214 = fmul float %213, 6.400000e+01
  %215 = tail call float @llvm.floor.f32(float %214) #8
  %216 = fcmp ult float %215, 0xC1E0000000000000
  %217 = fcmp ugt float %215, 0x41DFFFFFE0000000
  %218 = fcmp ogt float %215, 0xC1E0000000000000
  %219 = select i1 %218, float %215, float 0xC1E0000000000000
  %220 = fptosi float %219 to i32
  %221 = select i1 %216, i32 0, i32 2147483647
  %222 = select i1 %217, i32 %221, i32 %220
  %223 = extractelement <2 x float> %211, i32 1
  %224 = fmul float %223, 6.400000e+01
  %225 = tail call float @llvm.floor.f32(float %224) #8
  %226 = fcmp ult float %225, 0xC1E0000000000000
  %227 = fcmp ugt float %225, 0x41DFFFFFE0000000
  %228 = fcmp ogt float %225, 0xC1E0000000000000
  %229 = select i1 %228, float %225, float 0xC1E0000000000000
  %230 = fptosi float %229 to i32
  %231 = select i1 %226, i32 0, i32 2147483647
  %232 = select i1 %227, i32 %231, i32 %230
  %233 = extractelement <2 x float> %212, i32 0
  %234 = fadd float %213, %233
  %235 = fmul float %234, 6.400000e+01
  %236 = tail call float @llvm.ceil.f32(float %235) #8
  %237 = fcmp ult float %236, 0xC1E0000000000000
  %238 = fcmp ugt float %236, 0x41DFFFFFE0000000
  %239 = fcmp ogt float %236, 0xC1E0000000000000
  %240 = select i1 %239, float %236, float 0xC1E0000000000000
  %241 = fptosi float %240 to i32
  %242 = select i1 %237, i32 0, i32 2147483647
  %243 = select i1 %238, i32 %242, i32 %241
  %244 = icmp sgt i32 %222, -1
  %245 = select i1 %244, i32 -2147483648, i32 2147483647
  %246 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %243, i32 %222) #8
  %247 = extractvalue { i32, i1 } %246, 1
  %248 = extractvalue { i32, i1 } %246, 0
  %249 = select i1 %247, i32 %245, i32 %248, !prof !7
  %250 = extractelement <2 x float> %212, i32 1
  %251 = fadd float %223, %250
  %252 = fmul float %251, 6.400000e+01
  %253 = tail call float @llvm.ceil.f32(float %252) #8
  %254 = fcmp ult float %253, 0xC1E0000000000000
  %255 = fcmp ugt float %253, 0x41DFFFFFE0000000
  %256 = fcmp ogt float %253, 0xC1E0000000000000
  %257 = select i1 %256, float %253, float 0xC1E0000000000000
  %258 = fptosi float %257 to i32
  %259 = select i1 %254, i32 0, i32 2147483647
  %260 = select i1 %255, i32 %259, i32 %258
  %261 = icmp sgt i32 %232, -1
  %262 = select i1 %261, i32 -2147483648, i32 2147483647
  %263 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %260, i32 %232) #8
  %264 = extractvalue { i32, i1 } %263, 1
  %265 = extractvalue { i32, i1 } %263, 0
  %266 = select i1 %264, i32 %262, i32 %265, !prof !7
  %267 = zext i32 %232 to i64
  %268 = shl nuw i64 %267, 32
  %269 = zext i32 %222 to i64
  %270 = or i64 %268, %269
  %271 = zext i32 %266 to i64
  %272 = shl nuw i64 %271, 32
  %273 = zext i32 %249 to i64
  %274 = or i64 %272, %273
  %275 = bitcast %"struct.std::__1::pair.2927"* %16 to i64*
  store i64 %270, i64* %275, align 16, !alias.scope !4
  %276 = getelementptr inbounds %"struct.std::__1::pair.2927", %"struct.std::__1::pair.2927"* %16, i64 0, i32 0, i32 1
  %277 = bitcast %"struct.blink::PhysicalSize"* %276 to i64*
  store i64 %274, i64* %277, align 8, !alias.scope !4
  br label %292

278:                                              ; preds = %202
  %279 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutText"*
  %280 = bitcast %"class.blink::LayoutObject"* %3 to { i64, i64 } (%"class.blink::LayoutText"*)***
  %281 = load { i64, i64 } (%"class.blink::LayoutText"*)**, { i64, i64 } (%"class.blink::LayoutText"*)*** %280, align 8, !noalias !4
  %282 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutText"*)*, { i64, i64 } (%"class.blink::LayoutText"*)** %281, i64 113
  %283 = load { i64, i64 } (%"class.blink::LayoutText"*)*, { i64, i64 } (%"class.blink::LayoutText"*)** %282, align 8
  %284 = tail call { i64, i64 } %283(%"class.blink::LayoutText"* %279) #8
  %285 = extractvalue { i64, i64 } %284, 0
  %286 = extractvalue { i64, i64 } %284, 1
  %287 = bitcast %"struct.std::__1::pair.2927"* %16 to i64*
  store i64 %285, i64* %287, align 16, !alias.scope !4
  %288 = getelementptr inbounds %"struct.std::__1::pair.2927", %"struct.std::__1::pair.2927"* %16, i64 0, i32 0, i32 1
  %289 = bitcast %"struct.blink::PhysicalSize"* %288 to i64*
  store i64 %286, i64* %289, align 8, !alias.scope !4
  %290 = lshr i64 %286, 32
  %291 = trunc i64 %290 to i32
  br label %292

292:                                              ; preds = %278, %208, %196, %67
  %293 = phi i32 [ %201, %196 ], [ %291, %278 ], [ %266, %208 ], [ %76, %67 ]
  %294 = phi i64 [ %199, %196 ], [ %286, %278 ], [ %274, %208 ], [ %71, %67 ]
  %295 = trunc i64 %294 to i32
  %296 = icmp eq i32 %295, 0
  %297 = icmp eq i32 %293, 0
  %298 = or i1 %297, %296
  %299 = zext i1 %298 to i8
  store i8 %299, i8* %58, align 16, !alias.scope !4
  %300 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 5, i32 0
  %301 = bitcast %"class.blink::ComputedStyle"** %300 to %"class.blink::ComputedStyleBase"**
  %302 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %301, align 8, !noalias !4
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %302, i64 0, i32 1, i32 0, i32 0
  %304 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %303, align 8, !noalias !4
  %305 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %304, i64 0, i32 2, i32 0, i32 0
  %306 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %305, align 8, !noalias !4
  %307 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %306, i64 0, i32 6
  %308 = load float, float* %307, align 8, !noalias !4
  %309 = getelementptr inbounds %"class.absl::optional.3032", %"class.absl::optional.3032"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %309) #8, !noalias !4
  %310 = bitcast %"class.WTF::Vector.701"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %310) #8, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %310, i8 0, i64 16, i1 false) #8, !noalias !4
  %311 = call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_118InitializeRootRectEPKNS_12LayoutObjectERKN3WTF6VectorINS_6LengthELj0ENS4_18PartitionAllocatorEEE(%"class.blink::LayoutObject"* %2, %"class.WTF::Vector.701"* nonnull dereferenceable(16) %14) #8, !noalias !4
  %312 = extractvalue { i64, i64 } %311, 0
  %313 = extractvalue { i64, i64 } %311, 1
  store i8 1, i8* %309, align 4, !noalias !4
  %314 = getelementptr inbounds %"class.absl::optional.3032", %"class.absl::optional.3032"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %315 = bitcast %union.anon.3036* %314 to i64*
  store i64 %312, i64* %315, align 4, !noalias !4
  %316 = getelementptr inbounds %"class.absl::optional.3032", %"class.absl::optional.3032"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %317 = bitcast %"struct.blink::PhysicalSize"* %316 to i64*
  store i64 %313, i64* %317, align 4, !noalias !4
  call fastcc void @_ZN5blink12_GLOBAL__N_111ApplyMarginERNS_12PhysicalRectERKN3WTF6VectorINS_6LengthELj0ENS3_18PartitionAllocatorEEEfRKN4absl8optionalIS1_EE(%"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %57, %"class.WTF::Vector.701"* dereferenceable(16) %5, float %308, %"class.absl::optional.3032"* nonnull dereferenceable(20) %13) #8
  %318 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %14, i64 0, i32 0, i32 0, i32 0
  %319 = load %"class.blink::Length"*, %"class.blink::Length"** %318, align 8, !noalias !4
  %320 = icmp eq %"class.blink::Length"* %319, null
  br i1 %320, label %343, label %321, !prof !3

321:                                              ; preds = %292
  %322 = bitcast %"class.blink::Length"* %319 to i8*
  %323 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %14, i64 0, i32 0, i32 0, i32 2
  %324 = load i32, i32* %323, align 4, !noalias !4
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %341, label %326, !prof !7

326:                                              ; preds = %321
  %327 = zext i32 %324 to i64
  %328 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %319, i64 %327
  br label %329

329:                                              ; preds = %335, %326
  %330 = phi %"class.blink::Length"* [ %336, %335 ], [ %319, %326 ]
  %331 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %330, i64 0, i32 2
  %332 = load i8, i8* %331, align 1
  %333 = icmp eq i8 %332, 8
  br i1 %333, label %334, label %335

334:                                              ; preds = %329
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %330) #8
  br label %335

335:                                              ; preds = %334, %329
  %336 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %330, i64 1
  %337 = icmp eq %"class.blink::Length"* %336, %328
  br i1 %337, label %338, label %329

338:                                              ; preds = %335
  store i32 0, i32* %323, align 4, !noalias !4
  %339 = bitcast %"class.WTF::Vector.701"* %14 to i8**
  %340 = load i8*, i8** %339, align 8, !noalias !4
  br label %341

341:                                              ; preds = %338, %321
  %342 = phi i8* [ %340, %338 ], [ %322, %321 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %342) #8
  store %"class.blink::Length"* null, %"class.blink::Length"** %318, align 8, !noalias !4
  br label %343

343:                                              ; preds = %292, %341
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %310) #8, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %309) #8, !noalias !4
  %344 = bitcast %"class.blink::IntersectionGeometry"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %344, i8* nonnull align 16 %56, i64 16, i1 false) #8
  %345 = load i8, i8* %58, align 16, !range !2
  store i8 %345, i8* %15, align 1
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %56) #8
  %346 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2
  %347 = bitcast %"struct.blink::PhysicalRect"* %346 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %347, i8* align 4 %344, i64 16, i1 false)
  br label %348

348:                                              ; preds = %343, %46
  %349 = phi i8 [ %345, %343 ], [ %50, %46 ]
  %350 = icmp ne %"struct.blink::IntersectionGeometry::CachedRects"* %6, null
  br i1 %350, label %351, label %355

351:                                              ; preds = %348
  %352 = bitcast %"struct.blink::IntersectionGeometry::CachedRects"* %6 to i8*
  %353 = bitcast %"class.blink::IntersectionGeometry"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %352, i8* align 4 %353, i64 16, i1 false)
  %354 = getelementptr inbounds %"struct.blink::IntersectionGeometry::CachedRects", %"struct.blink::IntersectionGeometry::CachedRects"* %6, i64 0, i32 3
  store i8 %349, i8* %354, align 1
  br label %355

355:                                              ; preds = %351, %348
  %356 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %1, i64 0, i32 1
  %357 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 3
  %358 = bitcast %"struct.blink::PhysicalRect"* %357 to i8*
  %359 = bitcast %"struct.blink::PhysicalRect"* %356 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %358, i8* align 4 %359, i64 16, i1 false)
  %360 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2
  %361 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1
  %362 = call zeroext i1 @_ZN5blink20IntersectionGeometry10ClipToRootEPKNS_12LayoutObjectES3_RKNS_12PhysicalRectERS4_S7_PNS0_11CachedRectsE(%"class.blink::IntersectionGeometry"* %0, %"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject"* %3, %"struct.blink::PhysicalRect"* dereferenceable(16) %357, %"struct.blink::PhysicalRect"* dereferenceable(16) %360, %"struct.blink::PhysicalRect"* dereferenceable(16) %361, %"struct.blink::IntersectionGeometry::CachedRects"* %6)
  %363 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %363) #8
  %364 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %17, i64 0, i32 0
  %365 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %365, i8 0, i64 24, i1 false)
  %366 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %367 = load %"class.blink::Node"*, %"class.blink::Node"** %366, align 8
  %368 = icmp eq %"class.blink::Node"* %367, null
  br i1 %368, label %369, label %376

369:                                              ; preds = %355, %369
  %370 = phi %"class.blink::LayoutObject"* [ %372, %369 ], [ %3, %355 ]
  %371 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %370, i64 0, i32 7
  %372 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %371, align 8
  %373 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %372, i64 0, i32 6, i32 0, i32 0
  %374 = load %"class.blink::Node"*, %"class.blink::Node"** %373, align 8
  %375 = icmp eq %"class.blink::Node"* %374, null
  br i1 %375, label %369, label %376

376:                                              ; preds = %369, %355
  %377 = phi %"class.blink::Node"* [ %367, %355 ], [ %374, %369 ]
  %378 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %377, i64 0, i32 3, i32 0, i32 0
  %379 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %378, align 8
  %380 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %379, i64 0, i32 2, i32 0, i32 0
  %381 = load %"class.blink::Document"*, %"class.blink::Document"** %380, align 8
  %382 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %381, i64 0, i32 113
  %383 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %382, align 8
  %384 = icmp eq %"class.blink::LayoutView"* %383, null
  br i1 %384, label %487, label %385

385:                                              ; preds = %376
  %386 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %383, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %387 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %386 to i96*
  %388 = load i96, i96* %387, align 4
  %389 = and i96 %388, 6291456
  %390 = icmp eq i96 %389, 0
  br i1 %390, label %391, label %487

391:                                              ; preds = %385
  %392 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject20GetPropertyContainerEPNS0_16AncestorSkipInfoEPNS_24PropertyTreeStateOrAliasE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null, %"class.blink::PropertyTreeStateOrAlias"* nonnull %17) #8
  %393 = icmp eq %"class.blink::LayoutObject"* %392, null
  br i1 %393, label %487, label %394

394:                                              ; preds = %391
  %395 = bitcast <4 x i32>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %395) #8
  %396 = getelementptr inbounds <4 x i32>, <4 x i32>* %18, i64 0, i64 0
  %397 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %20, i64 0, i32 0, i32 1, i32 0
  %398 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 1
  %399 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %400 = load i32, i32* %399, align 4
  %401 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %404 = load i32, i32* %403, align 4
  %405 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %406 = load i32, i32* %405, align 4
  %407 = zext i32 %406 to i64
  %408 = shl nuw i64 %407, 32
  %409 = zext i32 %404 to i64
  %410 = or i64 %408, %409
  store i64 %410, i64* %398, align 8
  %411 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 10
  %412 = bitcast %"class.blink::FragmentData"* %411 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = lshr i64 %413, 32
  %415 = trunc i64 %414 to i32
  %416 = trunc i64 %413 to i32
  %417 = icmp slt i32 %416, 0
  %418 = select i1 %417, i32 -2147483648, i32 2147483647
  %419 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %400, i32 %416) #8
  %420 = extractvalue { i32, i1 } %419, 1
  %421 = extractvalue { i32, i1 } %419, 0
  %422 = select i1 %420, i32 %418, i32 %421, !prof !7
  store i32 %422, i32* %396, align 16
  %423 = icmp slt i32 %415, 0
  %424 = select i1 %423, i32 -2147483648, i32 2147483647
  %425 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %402, i32 %415) #8
  %426 = extractvalue { i32, i1 } %425, 1
  %427 = extractvalue { i32, i1 } %425, 0
  %428 = select i1 %426, i32 %424, i32 %427, !prof !7
  store i32 %428, i32* %397, align 4
  %429 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %364, align 8
  %430 = load %"class.blink::Node"*, %"class.blink::Node"** %366, align 8
  %431 = icmp eq %"class.blink::Node"* %430, null
  br i1 %431, label %432, label %439

432:                                              ; preds = %394, %432
  %433 = phi %"class.blink::LayoutObject"* [ %435, %432 ], [ %3, %394 ]
  %434 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %433, i64 0, i32 7
  %435 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %434, align 8
  %436 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %435, i64 0, i32 6, i32 0, i32 0
  %437 = load %"class.blink::Node"*, %"class.blink::Node"** %436, align 8
  %438 = icmp eq %"class.blink::Node"* %437, null
  br i1 %438, label %432, label %439

439:                                              ; preds = %432, %394
  %440 = phi %"class.blink::Node"* [ %430, %394 ], [ %437, %432 ]
  %441 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %440, i64 0, i32 3, i32 0, i32 0
  %442 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %441, align 8
  %443 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %442, i64 0, i32 2, i32 0, i32 0
  %444 = load %"class.blink::Document"*, %"class.blink::Document"** %443, align 8
  %445 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %444, i64 0, i32 113
  %446 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %445, align 8
  %447 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %446, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %448 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %447, align 8, !noalias !9
  %449 = icmp eq %"struct.blink::FragmentData::RareData"* %448, null
  br i1 %449, label %454, label %450

450:                                              ; preds = %439
  %451 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %448, i64 0, i32 5, i32 0, i32 0, i32 0
  %452 = load %"class.blink::RefCountedPropertyTreeState"*, %"class.blink::RefCountedPropertyTreeState"** %451, align 8, !noalias !9
  %453 = icmp eq %"class.blink::RefCountedPropertyTreeState"* %452, null
  br i1 %453, label %454, label %457

454:                                              ; preds = %450, %439
  %455 = call dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() #8, !noalias !9
  %456 = bitcast %"class.blink::PropertyTreeState"* %455 to i64*
  br label %459

457:                                              ; preds = %450
  %458 = bitcast %"class.blink::RefCountedPropertyTreeState"* %452 to i64*
  br label %459

459:                                              ; preds = %454, %457
  %460 = phi i64* [ %456, %454 ], [ %458, %457 ]
  %461 = bitcast i64* %460 to %"class.blink::TransformPaintPropertyNodeOrAlias"**
  %462 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %461, align 8
  br label %463

463:                                              ; preds = %468, %459
  %464 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %429, %459 ], [ %466, %468 ]
  %465 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %464, i64 0, i32 0, i32 3, i32 0
  %466 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %465, align 8
  %467 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %466, null
  br i1 %467, label %472, label %468

468:                                              ; preds = %463
  %469 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %464, i64 0, i32 0, i32 1
  %470 = load i8, i8* %469, align 4, !range !2
  %471 = icmp eq i8 %470, 0
  br i1 %471, label %472, label %463

472:                                              ; preds = %468, %463
  %473 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %464 to %"class.blink::TransformPaintPropertyNode"*
  br label %474

474:                                              ; preds = %479, %472
  %475 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %462, %472 ], [ %477, %479 ]
  %476 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %475, i64 0, i32 0, i32 3, i32 0
  %477 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %476, align 8
  %478 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %477, null
  br i1 %478, label %483, label %479

479:                                              ; preds = %474
  %480 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %475, i64 0, i32 0, i32 1
  %481 = load i8, i8* %480, align 4, !range !2
  %482 = icmp eq i8 %481, 0
  br i1 %482, label %483, label %474

483:                                              ; preds = %474, %479
  %484 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %475 to %"class.blink::TransformPaintPropertyNode"*
  call void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_10LayoutRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %473, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %484, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %20) #8
  %485 = load <4 x i32>, <4 x i32>* %18, align 16
  %486 = bitcast %"class.blink::IntersectionGeometry"* %0 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %486, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %395) #8
  br label %495

487:                                              ; preds = %391, %376, %385
  %488 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 0
  %489 = call { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %3, %"struct.blink::PhysicalRect"* dereferenceable(16) %488, %"class.blink::LayoutBoxModelObject"* null, i32 0) #8
  %490 = extractvalue { i64, i64 } %489, 0
  %491 = extractvalue { i64, i64 } %489, 1
  %492 = bitcast %"class.blink::IntersectionGeometry"* %0 to i64*
  store i64 %490, i64* %492, align 8
  %493 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 0, i32 1
  %494 = bitcast %"struct.blink::PhysicalSize"* %493 to i64*
  store i64 %491, i64* %494, align 8
  br label %495

495:                                              ; preds = %487, %483
  br i1 %362, label %496, label %936

496:                                              ; preds = %495
  %497 = load i32, i32* %42, align 8
  %498 = trunc i32 %497 to i8
  %499 = icmp slt i8 %498, 0
  br i1 %499, label %500, label %740

500:                                              ; preds = %496
  %501 = bitcast %"class.blink::TransformState"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %501) #8
  %502 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %21, i64 0, i32 2, i32 0, i32 0, i32 0
  %503 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %21, i64 0, i32 3, i32 0, i32 0
  %504 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %21, i64 0, i32 3, i32 1, i32 0
  %505 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %21, i64 0, i32 4
  %506 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %21, i64 0, i32 5
  %507 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %21, i64 0, i32 6
  %508 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %21, i64 0, i32 7
  %509 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %21, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %501, i8 0, i64 40, i1 false) #8
  %510 = call noalias i8* @malloc(i64 128) #8
  %511 = bitcast i8* %510 to double*
  store double 1.000000e+00, double* %511, align 8
  %512 = getelementptr inbounds i8, i8* %510, i64 8
  %513 = getelementptr inbounds i8, i8* %510, i64 40
  %514 = bitcast i8* %513 to double*
  call void @llvm.memset.p0i8.i64(i8* align 8 %512, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %514, align 8
  %515 = getelementptr inbounds i8, i8* %510, i64 48
  %516 = getelementptr inbounds i8, i8* %510, i64 80
  %517 = bitcast i8* %516 to double*
  call void @llvm.memset.p0i8.i64(i8* align 8 %515, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %517, align 8
  %518 = getelementptr inbounds i8, i8* %510, i64 88
  %519 = getelementptr inbounds i8, i8* %510, i64 120
  %520 = bitcast i8* %519 to double*
  call void @llvm.memset.p0i8.i64(i8* align 8 %518, i8 0, i64 32, i1 false) #8
  store double 1.000000e+00, double* %520, align 8
  %521 = bitcast %"class.blink::TransformationMatrix"** %502 to i8**
  store i8* %510, i8** %521, align 8
  store i32 0, i32* %503, align 8
  store i32 0, i32* %504, align 4
  store i8 1, i8* %505, align 8
  store i8 1, i8* %506, align 1
  store i8 0, i8* %507, align 2
  store i8 0, i8* %508, align 1
  store i32 1, i32* %509, align 4
  %522 = load %"class.blink::Node"*, %"class.blink::Node"** %366, align 8
  %523 = icmp eq %"class.blink::Node"* %522, null
  br i1 %523, label %524, label %531

524:                                              ; preds = %500, %524
  %525 = phi %"class.blink::LayoutObject"* [ %527, %524 ], [ %3, %500 ]
  %526 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %525, i64 0, i32 7
  %527 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %526, align 8
  %528 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %527, i64 0, i32 6, i32 0, i32 0
  %529 = load %"class.blink::Node"*, %"class.blink::Node"** %528, align 8
  %530 = icmp eq %"class.blink::Node"* %529, null
  br i1 %530, label %524, label %531

531:                                              ; preds = %524, %500
  %532 = phi %"class.blink::Node"* [ %522, %500 ], [ %529, %524 ]
  %533 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %532, i64 0, i32 3, i32 0, i32 0
  %534 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %533, align 8
  %535 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %534, i64 0, i32 2, i32 0, i32 0
  %536 = load %"class.blink::Document"*, %"class.blink::Document"** %535, align 8
  %537 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %536, i64 0, i32 113
  %538 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %537, align 8
  call void @_ZNK5blink10LayoutView18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutView"* %538, %"class.blink::LayoutBoxModelObject"* null, %"class.blink::TransformState"* nonnull dereferenceable(64) %21, i32 72) #8
  %539 = bitcast %"class.blink::TransformationMatrix"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %539) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %539, i8 -1, i64 128, i1 false)
  %540 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZNK5blink14TransformState20AccumulatedTransformEv(%"class.blink::TransformState"* nonnull %21) #8
  call void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* nonnull sret %22, %"class.blink::TransformationMatrix"* %540) #8
  %541 = bitcast %"class.blink::FloatQuad"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %541) #8
  %542 = bitcast %"class.blink::FloatQuad"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %542) #8
  %543 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %361, i64 0, i32 0, i32 0, i32 0
  %544 = load i32, i32* %543, align 4
  %545 = sitofp i32 %544 to float
  %546 = fmul float %545, 1.562500e-02
  %547 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %548 = load i32, i32* %547, align 4
  %549 = sitofp i32 %548 to float
  %550 = fmul float %549, 1.562500e-02
  %551 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %552 = load i32, i32* %551, align 4
  %553 = sitofp i32 %552 to float
  %554 = fmul float %553, 1.562500e-02
  %555 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %556 = load i32, i32* %555, align 4
  %557 = sitofp i32 %556 to float
  %558 = fmul float %557, 1.562500e-02
  %559 = insertelement <2 x float> undef, float %546, i32 0
  %560 = insertelement <2 x float> %559, float %550, i32 1
  %561 = bitcast %"class.blink::FloatQuad"* %24 to <2 x float>*
  store <2 x float> %560, <2 x float>* %561, align 8
  %562 = fadd float %546, %554
  %563 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %24, i64 0, i32 1, i32 0
  store float %562, float* %563, align 8
  %564 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %24, i64 0, i32 1, i32 1
  store float %550, float* %564, align 4
  %565 = fadd float %550, %558
  %566 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %24, i64 0, i32 2, i32 0
  store float %562, float* %566, align 8
  %567 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %24, i64 0, i32 2, i32 1
  store float %565, float* %567, align 4
  %568 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %24, i64 0, i32 3, i32 0
  store float %546, float* %568, align 8
  %569 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %24, i64 0, i32 3, i32 1
  store float %565, float* %569, align 4
  call void @_ZNK5blink20TransformationMatrix11ProjectQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* nonnull sret %23, %"class.blink::TransformationMatrix"* nonnull %22, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %24) #8
  %570 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* nonnull %23) #8
  %571 = extractvalue { <2 x float>, <2 x float> } %570, 0
  %572 = extractvalue { <2 x float>, <2 x float> } %570, 1
  %573 = extractelement <2 x float> %571, i32 0
  %574 = fmul float %573, 6.400000e+01
  %575 = call float @llvm.floor.f32(float %574) #8
  %576 = fcmp ult float %575, 0xC1E0000000000000
  %577 = fcmp ugt float %575, 0x41DFFFFFE0000000
  %578 = fcmp ogt float %575, 0xC1E0000000000000
  %579 = select i1 %578, float %575, float 0xC1E0000000000000
  %580 = fptosi float %579 to i32
  %581 = select i1 %576, i32 0, i32 2147483647
  %582 = select i1 %577, i32 %581, i32 %580
  %583 = extractelement <2 x float> %571, i32 1
  %584 = fmul float %583, 6.400000e+01
  %585 = call float @llvm.floor.f32(float %584) #8
  %586 = fcmp ult float %585, 0xC1E0000000000000
  %587 = fcmp ugt float %585, 0x41DFFFFFE0000000
  %588 = fcmp ogt float %585, 0xC1E0000000000000
  %589 = select i1 %588, float %585, float 0xC1E0000000000000
  %590 = fptosi float %589 to i32
  %591 = select i1 %586, i32 0, i32 2147483647
  %592 = select i1 %587, i32 %591, i32 %590
  %593 = extractelement <2 x float> %572, i32 0
  %594 = fadd float %573, %593
  %595 = fmul float %594, 6.400000e+01
  %596 = call float @llvm.ceil.f32(float %595) #8
  %597 = fcmp ult float %596, 0xC1E0000000000000
  %598 = fcmp ugt float %596, 0x41DFFFFFE0000000
  %599 = fcmp ogt float %596, 0xC1E0000000000000
  %600 = select i1 %599, float %596, float 0xC1E0000000000000
  %601 = fptosi float %600 to i32
  %602 = select i1 %597, i32 0, i32 2147483647
  %603 = select i1 %598, i32 %602, i32 %601
  %604 = icmp sgt i32 %582, -1
  %605 = select i1 %604, i32 -2147483648, i32 2147483647
  %606 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %603, i32 %582) #8
  %607 = extractvalue { i32, i1 } %606, 1
  %608 = extractvalue { i32, i1 } %606, 0
  %609 = select i1 %607, i32 %605, i32 %608, !prof !7
  %610 = extractelement <2 x float> %572, i32 1
  %611 = fadd float %583, %610
  %612 = fmul float %611, 6.400000e+01
  %613 = call float @llvm.ceil.f32(float %612) #8
  %614 = fcmp ult float %613, 0xC1E0000000000000
  %615 = fcmp ugt float %613, 0x41DFFFFFE0000000
  %616 = fcmp ogt float %613, 0xC1E0000000000000
  %617 = select i1 %616, float %613, float 0xC1E0000000000000
  %618 = fptosi float %617 to i32
  %619 = select i1 %614, i32 0, i32 2147483647
  %620 = select i1 %615, i32 %619, i32 %618
  %621 = icmp sgt i32 %592, -1
  %622 = select i1 %621, i32 -2147483648, i32 2147483647
  %623 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %620, i32 %592) #8
  %624 = extractvalue { i32, i1 } %623, 1
  %625 = extractvalue { i32, i1 } %623, 0
  %626 = select i1 %624, i32 %622, i32 %625, !prof !7
  %627 = zext i32 %592 to i64
  %628 = shl nuw i64 %627, 32
  %629 = zext i32 %582 to i64
  %630 = or i64 %628, %629
  %631 = zext i32 %626 to i64
  %632 = shl nuw i64 %631, 32
  %633 = zext i32 %609 to i64
  %634 = or i64 %632, %633
  %635 = bitcast %"struct.blink::PhysicalRect"* %361 to i64*
  store i64 %630, i64* %635, align 8
  %636 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 1
  %637 = bitcast %"struct.blink::PhysicalSize"* %636 to i64*
  store i64 %634, i64* %637, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %542) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %541) #8
  %638 = bitcast %"class.blink::FloatQuad"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %638) #8
  %639 = bitcast %"class.blink::FloatQuad"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %639) #8
  %640 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %360, i64 0, i32 0, i32 0, i32 0
  %641 = load i32, i32* %640, align 4
  %642 = sitofp i32 %641 to float
  %643 = fmul float %642, 1.562500e-02
  %644 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %645 = load i32, i32* %644, align 4
  %646 = sitofp i32 %645 to float
  %647 = fmul float %646, 1.562500e-02
  %648 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %649 = load i32, i32* %648, align 4
  %650 = sitofp i32 %649 to float
  %651 = fmul float %650, 1.562500e-02
  %652 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %653 = load i32, i32* %652, align 4
  %654 = sitofp i32 %653 to float
  %655 = fmul float %654, 1.562500e-02
  %656 = insertelement <2 x float> undef, float %643, i32 0
  %657 = insertelement <2 x float> %656, float %647, i32 1
  %658 = bitcast %"class.blink::FloatQuad"* %26 to <2 x float>*
  store <2 x float> %657, <2 x float>* %658, align 8
  %659 = fadd float %643, %651
  %660 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %26, i64 0, i32 1, i32 0
  store float %659, float* %660, align 8
  %661 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %26, i64 0, i32 1, i32 1
  store float %647, float* %661, align 4
  %662 = fadd float %647, %655
  %663 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %26, i64 0, i32 2, i32 0
  store float %659, float* %663, align 8
  %664 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %26, i64 0, i32 2, i32 1
  store float %662, float* %664, align 4
  %665 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %26, i64 0, i32 3, i32 0
  store float %643, float* %665, align 8
  %666 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %26, i64 0, i32 3, i32 1
  store float %662, float* %666, align 4
  call void @_ZNK5blink20TransformationMatrix11ProjectQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* nonnull sret %25, %"class.blink::TransformationMatrix"* nonnull %22, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %26) #8
  %667 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* nonnull %25) #8
  %668 = extractvalue { <2 x float>, <2 x float> } %667, 0
  %669 = extractvalue { <2 x float>, <2 x float> } %667, 1
  %670 = extractelement <2 x float> %668, i32 0
  %671 = fmul float %670, 6.400000e+01
  %672 = call float @llvm.floor.f32(float %671) #8
  %673 = fcmp ult float %672, 0xC1E0000000000000
  %674 = fcmp ugt float %672, 0x41DFFFFFE0000000
  %675 = fcmp ogt float %672, 0xC1E0000000000000
  %676 = select i1 %675, float %672, float 0xC1E0000000000000
  %677 = fptosi float %676 to i32
  %678 = select i1 %673, i32 0, i32 2147483647
  %679 = select i1 %674, i32 %678, i32 %677
  %680 = extractelement <2 x float> %668, i32 1
  %681 = fmul float %680, 6.400000e+01
  %682 = call float @llvm.floor.f32(float %681) #8
  %683 = fcmp ult float %682, 0xC1E0000000000000
  %684 = fcmp ugt float %682, 0x41DFFFFFE0000000
  %685 = fcmp ogt float %682, 0xC1E0000000000000
  %686 = select i1 %685, float %682, float 0xC1E0000000000000
  %687 = fptosi float %686 to i32
  %688 = select i1 %683, i32 0, i32 2147483647
  %689 = select i1 %684, i32 %688, i32 %687
  %690 = extractelement <2 x float> %669, i32 0
  %691 = fadd float %670, %690
  %692 = fmul float %691, 6.400000e+01
  %693 = call float @llvm.ceil.f32(float %692) #8
  %694 = fcmp ult float %693, 0xC1E0000000000000
  %695 = fcmp ugt float %693, 0x41DFFFFFE0000000
  %696 = fcmp ogt float %693, 0xC1E0000000000000
  %697 = select i1 %696, float %693, float 0xC1E0000000000000
  %698 = fptosi float %697 to i32
  %699 = select i1 %694, i32 0, i32 2147483647
  %700 = select i1 %695, i32 %699, i32 %698
  %701 = icmp sgt i32 %679, -1
  %702 = select i1 %701, i32 -2147483648, i32 2147483647
  %703 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %700, i32 %679) #8
  %704 = extractvalue { i32, i1 } %703, 1
  %705 = extractvalue { i32, i1 } %703, 0
  %706 = select i1 %704, i32 %702, i32 %705, !prof !7
  %707 = extractelement <2 x float> %669, i32 1
  %708 = fadd float %680, %707
  %709 = fmul float %708, 6.400000e+01
  %710 = call float @llvm.ceil.f32(float %709) #8
  %711 = fcmp ult float %710, 0xC1E0000000000000
  %712 = fcmp ugt float %710, 0x41DFFFFFE0000000
  %713 = fcmp ogt float %710, 0xC1E0000000000000
  %714 = select i1 %713, float %710, float 0xC1E0000000000000
  %715 = fptosi float %714 to i32
  %716 = select i1 %711, i32 0, i32 2147483647
  %717 = select i1 %712, i32 %716, i32 %715
  %718 = icmp sgt i32 %689, -1
  %719 = select i1 %718, i32 -2147483648, i32 2147483647
  %720 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %717, i32 %689) #8
  %721 = extractvalue { i32, i1 } %720, 1
  %722 = extractvalue { i32, i1 } %720, 0
  %723 = select i1 %721, i32 %719, i32 %722, !prof !7
  %724 = zext i32 %689 to i64
  %725 = shl nuw i64 %724, 32
  %726 = zext i32 %679 to i64
  %727 = or i64 %725, %726
  %728 = zext i32 %723 to i64
  %729 = shl nuw i64 %728, 32
  %730 = zext i32 %706 to i64
  %731 = or i64 %729, %730
  %732 = bitcast %"struct.blink::PhysicalRect"* %360 to i64*
  store i64 %727, i64* %732, align 8
  %733 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2, i32 1
  %734 = bitcast %"struct.blink::PhysicalSize"* %733 to i64*
  store i64 %731, i64* %734, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %639) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %638) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %539) #8
  %735 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %502, align 8
  store %"class.blink::TransformationMatrix"* null, %"class.blink::TransformationMatrix"** %502, align 8
  %736 = icmp eq %"class.blink::TransformationMatrix"* %735, null
  br i1 %736, label %739, label %737

737:                                              ; preds = %531
  %738 = bitcast %"class.blink::TransformationMatrix"* %735 to i8*
  call void @free(i8* %738) #8
  br label %739

739:                                              ; preds = %531, %737
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %501) #8
  br label %938

740:                                              ; preds = %496
  %741 = bitcast %"class.blink::FloatQuad"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %741) #8
  %742 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %1, i64 0, i32 2
  %743 = bitcast %"class.blink::FloatQuad"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %743) #8
  %744 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %361, i64 0, i32 0, i32 0, i32 0
  %745 = load i32, i32* %744, align 4
  %746 = sitofp i32 %745 to float
  %747 = fmul float %746, 1.562500e-02
  %748 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %749 = load i32, i32* %748, align 4
  %750 = sitofp i32 %749 to float
  %751 = fmul float %750, 1.562500e-02
  %752 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %753 = load i32, i32* %752, align 4
  %754 = sitofp i32 %753 to float
  %755 = fmul float %754, 1.562500e-02
  %756 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %757 = load i32, i32* %756, align 4
  %758 = sitofp i32 %757 to float
  %759 = fmul float %758, 1.562500e-02
  %760 = insertelement <2 x float> undef, float %747, i32 0
  %761 = insertelement <2 x float> %760, float %751, i32 1
  %762 = bitcast %"class.blink::FloatQuad"* %28 to <2 x float>*
  store <2 x float> %761, <2 x float>* %762, align 8
  %763 = fadd float %747, %755
  %764 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %28, i64 0, i32 1, i32 0
  store float %763, float* %764, align 8
  %765 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %28, i64 0, i32 1, i32 1
  store float %751, float* %765, align 4
  %766 = fadd float %751, %759
  %767 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %28, i64 0, i32 2, i32 0
  store float %763, float* %767, align 8
  %768 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %28, i64 0, i32 2, i32 1
  store float %766, float* %768, align 4
  %769 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %28, i64 0, i32 3, i32 0
  store float %747, float* %769, align 8
  %770 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %28, i64 0, i32 3, i32 1
  store float %766, float* %770, align 4
  call void @_ZNK5blink20TransformationMatrix7MapQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* nonnull sret %27, %"class.blink::TransformationMatrix"* %742, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %28) #8
  %771 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* nonnull %27) #8
  %772 = extractvalue { <2 x float>, <2 x float> } %771, 0
  %773 = extractvalue { <2 x float>, <2 x float> } %771, 1
  %774 = extractelement <2 x float> %772, i32 0
  %775 = fmul float %774, 6.400000e+01
  %776 = call float @llvm.floor.f32(float %775) #8
  %777 = fcmp ult float %776, 0xC1E0000000000000
  %778 = fcmp ugt float %776, 0x41DFFFFFE0000000
  %779 = fcmp ogt float %776, 0xC1E0000000000000
  %780 = select i1 %779, float %776, float 0xC1E0000000000000
  %781 = fptosi float %780 to i32
  %782 = select i1 %777, i32 0, i32 2147483647
  %783 = select i1 %778, i32 %782, i32 %781
  %784 = extractelement <2 x float> %772, i32 1
  %785 = fmul float %784, 6.400000e+01
  %786 = call float @llvm.floor.f32(float %785) #8
  %787 = fcmp ult float %786, 0xC1E0000000000000
  %788 = fcmp ugt float %786, 0x41DFFFFFE0000000
  %789 = fcmp ogt float %786, 0xC1E0000000000000
  %790 = select i1 %789, float %786, float 0xC1E0000000000000
  %791 = fptosi float %790 to i32
  %792 = select i1 %787, i32 0, i32 2147483647
  %793 = select i1 %788, i32 %792, i32 %791
  %794 = extractelement <2 x float> %773, i32 0
  %795 = fadd float %774, %794
  %796 = fmul float %795, 6.400000e+01
  %797 = call float @llvm.ceil.f32(float %796) #8
  %798 = fcmp ult float %797, 0xC1E0000000000000
  %799 = fcmp ugt float %797, 0x41DFFFFFE0000000
  %800 = fcmp ogt float %797, 0xC1E0000000000000
  %801 = select i1 %800, float %797, float 0xC1E0000000000000
  %802 = fptosi float %801 to i32
  %803 = select i1 %798, i32 0, i32 2147483647
  %804 = select i1 %799, i32 %803, i32 %802
  %805 = icmp sgt i32 %783, -1
  %806 = select i1 %805, i32 -2147483648, i32 2147483647
  %807 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %804, i32 %783) #8
  %808 = extractvalue { i32, i1 } %807, 1
  %809 = extractvalue { i32, i1 } %807, 0
  %810 = select i1 %808, i32 %806, i32 %809, !prof !7
  %811 = extractelement <2 x float> %773, i32 1
  %812 = fadd float %784, %811
  %813 = fmul float %812, 6.400000e+01
  %814 = call float @llvm.ceil.f32(float %813) #8
  %815 = fcmp ult float %814, 0xC1E0000000000000
  %816 = fcmp ugt float %814, 0x41DFFFFFE0000000
  %817 = fcmp ogt float %814, 0xC1E0000000000000
  %818 = select i1 %817, float %814, float 0xC1E0000000000000
  %819 = fptosi float %818 to i32
  %820 = select i1 %815, i32 0, i32 2147483647
  %821 = select i1 %816, i32 %820, i32 %819
  %822 = icmp sgt i32 %793, -1
  %823 = select i1 %822, i32 -2147483648, i32 2147483647
  %824 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %821, i32 %793) #8
  %825 = extractvalue { i32, i1 } %824, 1
  %826 = extractvalue { i32, i1 } %824, 0
  %827 = select i1 %825, i32 %823, i32 %826, !prof !7
  %828 = zext i32 %793 to i64
  %829 = shl nuw i64 %828, 32
  %830 = zext i32 %783 to i64
  %831 = or i64 %829, %830
  %832 = zext i32 %827 to i64
  %833 = shl nuw i64 %832, 32
  %834 = zext i32 %810 to i64
  %835 = or i64 %833, %834
  %836 = bitcast %"struct.blink::PhysicalRect"* %361 to i64*
  store i64 %831, i64* %836, align 8
  %837 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 1
  %838 = bitcast %"struct.blink::PhysicalSize"* %837 to i64*
  store i64 %835, i64* %838, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %743) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %741) #8
  %839 = bitcast %"class.blink::FloatQuad"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %839) #8
  %840 = bitcast %"class.blink::FloatQuad"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %840) #8
  %841 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %360, i64 0, i32 0, i32 0, i32 0
  %842 = load i32, i32* %841, align 4
  %843 = sitofp i32 %842 to float
  %844 = fmul float %843, 1.562500e-02
  %845 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %846 = load i32, i32* %845, align 4
  %847 = sitofp i32 %846 to float
  %848 = fmul float %847, 1.562500e-02
  %849 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %850 = load i32, i32* %849, align 4
  %851 = sitofp i32 %850 to float
  %852 = fmul float %851, 1.562500e-02
  %853 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %854 = load i32, i32* %853, align 4
  %855 = sitofp i32 %854 to float
  %856 = fmul float %855, 1.562500e-02
  %857 = insertelement <2 x float> undef, float %844, i32 0
  %858 = insertelement <2 x float> %857, float %848, i32 1
  %859 = bitcast %"class.blink::FloatQuad"* %30 to <2 x float>*
  store <2 x float> %858, <2 x float>* %859, align 8
  %860 = fadd float %844, %852
  %861 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %30, i64 0, i32 1, i32 0
  store float %860, float* %861, align 8
  %862 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %30, i64 0, i32 1, i32 1
  store float %848, float* %862, align 4
  %863 = fadd float %848, %856
  %864 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %30, i64 0, i32 2, i32 0
  store float %860, float* %864, align 8
  %865 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %30, i64 0, i32 2, i32 1
  store float %863, float* %865, align 4
  %866 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %30, i64 0, i32 3, i32 0
  store float %844, float* %866, align 8
  %867 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %30, i64 0, i32 3, i32 1
  store float %863, float* %867, align 4
  call void @_ZNK5blink20TransformationMatrix7MapQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* nonnull sret %29, %"class.blink::TransformationMatrix"* %742, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %30) #8
  %868 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* nonnull %29) #8
  %869 = extractvalue { <2 x float>, <2 x float> } %868, 0
  %870 = extractvalue { <2 x float>, <2 x float> } %868, 1
  %871 = extractelement <2 x float> %869, i32 0
  %872 = fmul float %871, 6.400000e+01
  %873 = call float @llvm.floor.f32(float %872) #8
  %874 = fcmp ult float %873, 0xC1E0000000000000
  %875 = fcmp ugt float %873, 0x41DFFFFFE0000000
  %876 = fcmp ogt float %873, 0xC1E0000000000000
  %877 = select i1 %876, float %873, float 0xC1E0000000000000
  %878 = fptosi float %877 to i32
  %879 = select i1 %874, i32 0, i32 2147483647
  %880 = select i1 %875, i32 %879, i32 %878
  %881 = extractelement <2 x float> %869, i32 1
  %882 = fmul float %881, 6.400000e+01
  %883 = call float @llvm.floor.f32(float %882) #8
  %884 = fcmp ult float %883, 0xC1E0000000000000
  %885 = fcmp ugt float %883, 0x41DFFFFFE0000000
  %886 = fcmp ogt float %883, 0xC1E0000000000000
  %887 = select i1 %886, float %883, float 0xC1E0000000000000
  %888 = fptosi float %887 to i32
  %889 = select i1 %884, i32 0, i32 2147483647
  %890 = select i1 %885, i32 %889, i32 %888
  %891 = extractelement <2 x float> %870, i32 0
  %892 = fadd float %871, %891
  %893 = fmul float %892, 6.400000e+01
  %894 = call float @llvm.ceil.f32(float %893) #8
  %895 = fcmp ult float %894, 0xC1E0000000000000
  %896 = fcmp ugt float %894, 0x41DFFFFFE0000000
  %897 = fcmp ogt float %894, 0xC1E0000000000000
  %898 = select i1 %897, float %894, float 0xC1E0000000000000
  %899 = fptosi float %898 to i32
  %900 = select i1 %895, i32 0, i32 2147483647
  %901 = select i1 %896, i32 %900, i32 %899
  %902 = icmp sgt i32 %880, -1
  %903 = select i1 %902, i32 -2147483648, i32 2147483647
  %904 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %901, i32 %880) #8
  %905 = extractvalue { i32, i1 } %904, 1
  %906 = extractvalue { i32, i1 } %904, 0
  %907 = select i1 %905, i32 %903, i32 %906, !prof !7
  %908 = extractelement <2 x float> %870, i32 1
  %909 = fadd float %881, %908
  %910 = fmul float %909, 6.400000e+01
  %911 = call float @llvm.ceil.f32(float %910) #8
  %912 = fcmp ult float %911, 0xC1E0000000000000
  %913 = fcmp ugt float %911, 0x41DFFFFFE0000000
  %914 = fcmp ogt float %911, 0xC1E0000000000000
  %915 = select i1 %914, float %911, float 0xC1E0000000000000
  %916 = fptosi float %915 to i32
  %917 = select i1 %912, i32 0, i32 2147483647
  %918 = select i1 %913, i32 %917, i32 %916
  %919 = icmp sgt i32 %890, -1
  %920 = select i1 %919, i32 -2147483648, i32 2147483647
  %921 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %918, i32 %890) #8
  %922 = extractvalue { i32, i1 } %921, 1
  %923 = extractvalue { i32, i1 } %921, 0
  %924 = select i1 %922, i32 %920, i32 %923, !prof !7
  %925 = zext i32 %890 to i64
  %926 = shl nuw i64 %925, 32
  %927 = zext i32 %880 to i64
  %928 = or i64 %926, %927
  %929 = zext i32 %924 to i64
  %930 = shl nuw i64 %929, 32
  %931 = zext i32 %907 to i64
  %932 = or i64 %930, %931
  %933 = bitcast %"struct.blink::PhysicalRect"* %360 to i64*
  store i64 %928, i64* %933, align 8
  %934 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 2, i32 1
  %935 = bitcast %"struct.blink::PhysicalSize"* %934 to i64*
  store i64 %932, i64* %935, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %840) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %839) #8
  br label %938

936:                                              ; preds = %495
  %937 = bitcast %"struct.blink::PhysicalRect"* %361 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %937, i8 0, i64 16, i1 false)
  br label %938

938:                                              ; preds = %739, %740, %936
  %939 = bitcast %"class.blink::FloatQuad"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %939) #8
  %940 = getelementptr inbounds %"struct.blink::IntersectionGeometry::RootGeometry", %"struct.blink::IntersectionGeometry::RootGeometry"* %1, i64 0, i32 2
  %941 = bitcast %"class.blink::FloatQuad"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %941) #8
  %942 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %357, i64 0, i32 0, i32 0, i32 0
  %943 = load i32, i32* %942, align 4
  %944 = sitofp i32 %943 to float
  %945 = fmul float %944, 1.562500e-02
  %946 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %947 = load i32, i32* %946, align 4
  %948 = sitofp i32 %947 to float
  %949 = fmul float %948, 1.562500e-02
  %950 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %951 = load i32, i32* %950, align 4
  %952 = sitofp i32 %951 to float
  %953 = fmul float %952, 1.562500e-02
  %954 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 3, i32 1, i32 1, i32 0
  %955 = load i32, i32* %954, align 4
  %956 = sitofp i32 %955 to float
  %957 = fmul float %956, 1.562500e-02
  %958 = insertelement <2 x float> undef, float %945, i32 0
  %959 = insertelement <2 x float> %958, float %949, i32 1
  %960 = bitcast %"class.blink::FloatQuad"* %32 to <2 x float>*
  store <2 x float> %959, <2 x float>* %960, align 8
  %961 = fadd float %945, %953
  %962 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %32, i64 0, i32 1, i32 0
  store float %961, float* %962, align 8
  %963 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %32, i64 0, i32 1, i32 1
  store float %949, float* %963, align 4
  %964 = fadd float %949, %957
  %965 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %32, i64 0, i32 2, i32 0
  store float %961, float* %965, align 8
  %966 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %32, i64 0, i32 2, i32 1
  store float %964, float* %966, align 4
  %967 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %32, i64 0, i32 3, i32 0
  store float %945, float* %967, align 8
  %968 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %32, i64 0, i32 3, i32 1
  store float %964, float* %968, align 4
  call void @_ZNK5blink20TransformationMatrix7MapQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* nonnull sret %31, %"class.blink::TransformationMatrix"* %940, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %32) #8
  %969 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* nonnull %31) #8
  %970 = extractvalue { <2 x float>, <2 x float> } %969, 0
  %971 = extractvalue { <2 x float>, <2 x float> } %969, 1
  %972 = extractelement <2 x float> %970, i32 0
  %973 = fmul float %972, 6.400000e+01
  %974 = call float @llvm.floor.f32(float %973) #8
  %975 = fcmp ult float %974, 0xC1E0000000000000
  %976 = fcmp ugt float %974, 0x41DFFFFFE0000000
  %977 = fcmp ogt float %974, 0xC1E0000000000000
  %978 = select i1 %977, float %974, float 0xC1E0000000000000
  %979 = fptosi float %978 to i32
  %980 = select i1 %975, i32 0, i32 2147483647
  %981 = select i1 %976, i32 %980, i32 %979
  %982 = extractelement <2 x float> %970, i32 1
  %983 = fmul float %982, 6.400000e+01
  %984 = call float @llvm.floor.f32(float %983) #8
  %985 = fcmp ult float %984, 0xC1E0000000000000
  %986 = fcmp ugt float %984, 0x41DFFFFFE0000000
  %987 = fcmp ogt float %984, 0xC1E0000000000000
  %988 = select i1 %987, float %984, float 0xC1E0000000000000
  %989 = fptosi float %988 to i32
  %990 = select i1 %985, i32 0, i32 2147483647
  %991 = select i1 %986, i32 %990, i32 %989
  %992 = extractelement <2 x float> %971, i32 0
  %993 = fadd float %972, %992
  %994 = fmul float %993, 6.400000e+01
  %995 = call float @llvm.ceil.f32(float %994) #8
  %996 = fcmp ult float %995, 0xC1E0000000000000
  %997 = fcmp ugt float %995, 0x41DFFFFFE0000000
  %998 = fcmp ogt float %995, 0xC1E0000000000000
  %999 = select i1 %998, float %995, float 0xC1E0000000000000
  %1000 = fptosi float %999 to i32
  %1001 = select i1 %996, i32 0, i32 2147483647
  %1002 = select i1 %997, i32 %1001, i32 %1000
  %1003 = icmp sgt i32 %981, -1
  %1004 = select i1 %1003, i32 -2147483648, i32 2147483647
  %1005 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1002, i32 %981) #8
  %1006 = extractvalue { i32, i1 } %1005, 1
  %1007 = extractvalue { i32, i1 } %1005, 0
  %1008 = select i1 %1006, i32 %1004, i32 %1007, !prof !7
  %1009 = extractelement <2 x float> %971, i32 1
  %1010 = fadd float %982, %1009
  %1011 = fmul float %1010, 6.400000e+01
  %1012 = call float @llvm.ceil.f32(float %1011) #8
  %1013 = fcmp ult float %1012, 0xC1E0000000000000
  %1014 = fcmp ugt float %1012, 0x41DFFFFFE0000000
  %1015 = fcmp ogt float %1012, 0xC1E0000000000000
  %1016 = select i1 %1015, float %1012, float 0xC1E0000000000000
  %1017 = fptosi float %1016 to i32
  %1018 = select i1 %1013, i32 0, i32 2147483647
  %1019 = select i1 %1014, i32 %1018, i32 %1017
  %1020 = icmp sgt i32 %991, -1
  %1021 = select i1 %1020, i32 -2147483648, i32 2147483647
  %1022 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1019, i32 %991) #8
  %1023 = extractvalue { i32, i1 } %1022, 1
  %1024 = extractvalue { i32, i1 } %1022, 0
  %1025 = select i1 %1023, i32 %1021, i32 %1024, !prof !7
  %1026 = zext i32 %991 to i64
  %1027 = shl nuw i64 %1026, 32
  %1028 = zext i32 %981 to i64
  %1029 = or i64 %1027, %1028
  %1030 = zext i32 %1025 to i64
  %1031 = shl nuw i64 %1030, 32
  %1032 = zext i32 %1008 to i64
  %1033 = or i64 %1031, %1032
  %1034 = bitcast %"struct.blink::PhysicalRect"* %357 to i64*
  store i64 %1029, i64* %1034, align 8
  %1035 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 3, i32 1
  %1036 = bitcast %"struct.blink::PhysicalSize"* %1035 to i64*
  store i64 %1033, i64* %1036, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %941) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %939) #8
  br i1 %362, label %1037, label %1095

1037:                                             ; preds = %938
  %1038 = load i32, i32* %42, align 8
  %1039 = and i32 %1038, 4
  %1040 = icmp ne i32 %1039, 0
  %1041 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 0
  %1042 = select i1 %1040, %"struct.blink::PhysicalRect"* %357, %"struct.blink::PhysicalRect"* %1041
  %1043 = load i8, i8* %15, align 1
  %1044 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1042, i64 0, i32 1, i32 0, i32 0
  %1045 = load i32, i32* %1044, align 4
  %1046 = icmp eq i32 %1045, 0
  br i1 %1046, label %1075, label %1047

1047:                                             ; preds = %1037
  %1048 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1042, i64 0, i32 1, i32 1, i32 0
  %1049 = load i32, i32* %1048, align 4
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1075, label %1051

1051:                                             ; preds = %1047
  %1052 = and i8 %1043, 1
  %1053 = icmp ne i8 %1052, 0
  %1054 = xor i1 %1040, true
  %1055 = and i1 %1053, %1054
  br i1 %1055, label %1075, label %1056

1056:                                             ; preds = %1051
  %1057 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %1058 = load i32, i32* %1057, align 4
  %1059 = sitofp i32 %1058 to float
  %1060 = fmul float %1059, 1.562500e-02
  %1061 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %1062 = load i32, i32* %1061, align 4
  %1063 = sitofp i32 %1062 to float
  %1064 = fmul float %1063, 1.562500e-02
  %1065 = fmul float %1060, %1064
  %1066 = sitofp i32 %1045 to float
  %1067 = fmul float %1066, 1.562500e-02
  %1068 = sitofp i32 %1049 to float
  %1069 = fmul float %1068, 1.562500e-02
  %1070 = fmul float %1067, %1069
  %1071 = fdiv float %1065, %1070
  %1072 = fcmp ogt float %1071, 1.000000e+00
  %1073 = select i1 %1072, float 1.000000e+00, float %1071
  %1074 = fpext float %1073 to double
  br label %1075

1075:                                             ; preds = %1047, %1051, %1037, %1056
  %1076 = phi double [ %1074, %1056 ], [ 1.000000e+00, %1037 ], [ 1.000000e+00, %1051 ], [ 1.000000e+00, %1047 ]
  %1077 = phi float [ %1073, %1056 ], [ 1.000000e+00, %1037 ], [ 1.000000e+00, %1051 ], [ 1.000000e+00, %1047 ]
  %1078 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 6
  store double %1076, double* %1078, align 8
  %1079 = getelementptr inbounds %"class.WTF::Vector.2922", %"class.WTF::Vector.2922"* %4, i64 0, i32 0, i32 0, i32 2
  %1080 = load i32, i32* %1079, align 4
  %1081 = icmp eq i32 %1080, 0
  br i1 %1081, label %1082, label %1084

1082:                                             ; preds = %1075
  %1083 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 7
  store i32 0, i32* %1083, align 8
  br label %1162

1084:                                             ; preds = %1075, %1089
  %1085 = phi i32 [ %1090, %1089 ], [ 0, %1075 ]
  %1086 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2922"* %4, i32 %1085) #8
  %1087 = load float, float* %1086, align 4
  %1088 = fcmp ugt float %1087, %1077
  br i1 %1088, label %1098, label %1089

1089:                                             ; preds = %1084
  %1090 = add nuw i32 %1085, 1
  %1091 = load i32, i32* %1079, align 4
  %1092 = icmp ult i32 %1090, %1091
  br i1 %1092, label %1084, label %1093

1093:                                             ; preds = %1089
  %1094 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 7
  store i32 %1090, i32* %1094, align 8
  br label %1101

1095:                                             ; preds = %938
  %1096 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 6
  store double 0.000000e+00, double* %1096, align 8
  %1097 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 7
  store i32 0, i32* %1097, align 8
  br label %1162

1098:                                             ; preds = %1084
  %1099 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 7
  store i32 %1085, i32* %1099, align 8
  %1100 = icmp eq i32 %1085, 0
  br i1 %1100, label %1162, label %1101

1101:                                             ; preds = %1093, %1098
  %1102 = load i32, i32* %42, align 8
  %1103 = and i32 %1102, 2
  %1104 = icmp eq i32 %1103, 0
  br i1 %1104, label %1162, label %1105

1105:                                             ; preds = %1101
  %1106 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 0
  %1107 = load %"class.blink::Node"*, %"class.blink::Node"** %366, align 8
  %1108 = icmp eq %"class.blink::Node"* %1107, null
  br i1 %1108, label %1109, label %1116

1109:                                             ; preds = %1105, %1109
  %1110 = phi %"class.blink::LayoutObject"* [ %1112, %1109 ], [ %3, %1105 ]
  %1111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1110, i64 0, i32 7
  %1112 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1111, align 8
  %1113 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1112, i64 0, i32 6, i32 0, i32 0
  %1114 = load %"class.blink::Node"*, %"class.blink::Node"** %1113, align 8
  %1115 = icmp eq %"class.blink::Node"* %1114, null
  br i1 %1115, label %1109, label %1116

1116:                                             ; preds = %1109, %1105
  %1117 = phi %"class.blink::Node"* [ %1107, %1105 ], [ %1114, %1109 ]
  %1118 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1117, i64 0, i32 3, i32 0, i32 0
  %1119 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1118, align 8
  %1120 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1119, i64 0, i32 2, i32 0, i32 0
  %1121 = load %"class.blink::Document"*, %"class.blink::Document"** %1120, align 8
  %1122 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1121) #8
  %1123 = call dereferenceable(1176) %"class.blink::LocalFrame"* @_ZNK5blink10LocalFrame14LocalFrameRootEv(%"class.blink::LocalFrame"* %1122) #8
  %1124 = call i32 @_ZNK5blink10LocalFrame17GetOcclusionStateEv(%"class.blink::LocalFrame"* %1123) #8
  %1125 = icmp eq i32 %1124, 2
  br i1 %1125, label %1126, label %1162

1126:                                             ; preds = %1116
  %1127 = call zeroext i1 @_ZNK5blink12LayoutObject26HasDistortingVisualEffectsEv(%"class.blink::LayoutObject"* %3) #8
  br i1 %1127, label %1162, label %1128

1128:                                             ; preds = %1126
  %1129 = bitcast %"class.blink::HitTestResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %1129) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1129, i8 -86, i64 112, i1 false) #8
  call void @_ZNK5blink12LayoutObject19HitTestForOcclusionERKNS_12PhysicalRectE(%"class.blink::HitTestResult"* nonnull sret %8, %"class.blink::LayoutObject"* %3, %"struct.blink::PhysicalRect"* dereferenceable(16) %1106) #8
  %1130 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %8, i64 0, i32 2, i32 0, i32 0
  %1131 = load %"class.blink::Node"*, %"class.blink::Node"** %1130, align 8
  %1132 = icmp eq %"class.blink::Node"* %1131, null
  br i1 %1132, label %1155, label %1133

1133:                                             ; preds = %1128
  %1134 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %1135 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1134 to i96*
  %1136 = load i96, i96* %1135, align 4
  %1137 = and i96 %1136, 16777216
  %1138 = icmp eq i96 %1137, 0
  br i1 %1138, label %1139, label %1142

1139:                                             ; preds = %1133
  %1140 = load %"class.blink::Node"*, %"class.blink::Node"** %366, align 8
  %1141 = icmp eq %"class.blink::Node"* %1131, %1140
  br i1 %1141, label %1155, label %1142

1142:                                             ; preds = %1139, %1133
  %1143 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*)***
  %1144 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %1143, align 8
  %1145 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1144, i64 26
  %1146 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1145, align 8
  %1147 = call zeroext i1 %1146(%"class.blink::LayoutObject"* %3) #8
  br i1 %1147, label %1149, label %1148

1148:                                             ; preds = %1142
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1129) #8
  br label %1162

1149:                                             ; preds = %1142
  %1150 = load i96, i96* %1135, align 4
  %1151 = and i96 %1150, 16777216
  %1152 = icmp eq i96 %1151, 0
  br i1 %1152, label %1153, label %1156

1153:                                             ; preds = %1149
  %1154 = load %"class.blink::Node"*, %"class.blink::Node"** %366, align 8
  br label %1156

1155:                                             ; preds = %1128, %1139
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1129) #8
  br label %1159

1156:                                             ; preds = %1149, %1153
  %1157 = phi %"class.blink::Node"* [ %1154, %1153 ], [ null, %1149 ]
  %1158 = call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* nonnull %1131, %"class.blink::Node"* %1157) #8
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1129) #8
  br i1 %1158, label %1159, label %1162

1159:                                             ; preds = %1155, %1156
  %1160 = load i32, i32* %42, align 8
  %1161 = or i32 %1160, 256
  store i32 %1161, i32* %42, align 8
  br label %1162

1162:                                             ; preds = %1082, %1095, %1101, %1098, %1126, %1116, %1148, %1159, %1156
  %1163 = load i32, i32* %42, align 8
  %1164 = and i32 %1163, 16
  %1165 = icmp eq i32 %1164, 0
  br i1 %1165, label %1435, label %1166

1166:                                             ; preds = %1162
  %1167 = bitcast <4 x float>* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1167) #8
  %1168 = bitcast %"class.blink::IntersectionGeometry"* %0 to <4 x i32>*
  %1169 = load <4 x i32>, <4 x i32>* %1168, align 4
  %1170 = shufflevector <4 x i32> %1169, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %1171 = sitofp <4 x i32> %1170 to <4 x float>
  %1172 = fmul <4 x float> %1171, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1173 = shufflevector <4 x float> %1172, <4 x float> undef, <2 x i32> <i32 3, i32 2>
  %1174 = shufflevector <4 x float> %1172, <4 x float> undef, <2 x i32> <i32 1, i32 0>
  %1175 = bitcast <4 x float>* %33 to <2 x float>*
  store <2 x float> %1173, <2 x float>* %1175, align 16
  %1176 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %34, i64 0, i32 1
  store <2 x float> %1174, <2 x float>* %1176, align 8
  %1177 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %1178 = bitcast %"class.blink::ComputedStyle"** %1177 to %"class.blink::ComputedStyleBase"**
  %1179 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %1178, align 8
  %1180 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %1179, i64 0, i32 1, i32 0, i32 0
  %1181 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1180, align 8
  %1182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1181, i64 0, i32 2, i32 0, i32 0
  %1183 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %1182, align 8
  %1184 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %1183, i64 0, i32 6
  %1185 = load float, float* %1184, align 8
  %1186 = fcmp une float %1185, 1.000000e+00
  br i1 %1186, label %1187, label %1191

1187:                                             ; preds = %1166
  %1188 = fdiv float 1.000000e+00, %1185
  call void @_ZN5blink9FloatRect5ScaleEff(%"class.blink::FloatRect"* nonnull %35, float %1188, float %1188) #8
  %1189 = load <4 x float>, <4 x float>* %33, align 16
  %1190 = shufflevector <4 x float> %1189, <4 x float> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  br label %1191

1191:                                             ; preds = %1166, %1187
  %1192 = phi <4 x float> [ %1172, %1166 ], [ %1190, %1187 ]
  %1193 = extractelement <4 x float> %1192, i32 3
  %1194 = fmul float %1193, 6.400000e+01
  %1195 = call float @llvm.floor.f32(float %1194) #8
  %1196 = fcmp ult float %1195, 0xC1E0000000000000
  %1197 = fcmp ugt float %1195, 0x41DFFFFFE0000000
  %1198 = fcmp ogt float %1195, 0xC1E0000000000000
  %1199 = select i1 %1198, float %1195, float 0xC1E0000000000000
  %1200 = fptosi float %1199 to i32
  %1201 = select i1 %1196, i32 0, i32 2147483647
  %1202 = select i1 %1197, i32 %1201, i32 %1200
  %1203 = extractelement <4 x float> %1192, i32 2
  %1204 = fmul float %1203, 6.400000e+01
  %1205 = call float @llvm.floor.f32(float %1204) #8
  %1206 = fcmp ult float %1205, 0xC1E0000000000000
  %1207 = fcmp ugt float %1205, 0x41DFFFFFE0000000
  %1208 = fcmp ogt float %1205, 0xC1E0000000000000
  %1209 = select i1 %1208, float %1205, float 0xC1E0000000000000
  %1210 = fptosi float %1209 to i32
  %1211 = select i1 %1206, i32 0, i32 2147483647
  %1212 = select i1 %1207, i32 %1211, i32 %1210
  %1213 = extractelement <4 x float> %1192, i32 1
  %1214 = fadd float %1193, %1213
  %1215 = fmul float %1214, 6.400000e+01
  %1216 = call float @llvm.ceil.f32(float %1215) #8
  %1217 = fcmp ult float %1216, 0xC1E0000000000000
  %1218 = fcmp ugt float %1216, 0x41DFFFFFE0000000
  %1219 = fcmp ogt float %1216, 0xC1E0000000000000
  %1220 = select i1 %1219, float %1216, float 0xC1E0000000000000
  %1221 = fptosi float %1220 to i32
  %1222 = select i1 %1217, i32 0, i32 2147483647
  %1223 = select i1 %1218, i32 %1222, i32 %1221
  %1224 = icmp sgt i32 %1202, -1
  %1225 = select i1 %1224, i32 -2147483648, i32 2147483647
  %1226 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1223, i32 %1202) #8
  %1227 = extractvalue { i32, i1 } %1226, 1
  %1228 = extractvalue { i32, i1 } %1226, 0
  %1229 = select i1 %1227, i32 %1225, i32 %1228, !prof !7
  %1230 = extractelement <4 x float> %1192, i32 0
  %1231 = fadd float %1203, %1230
  %1232 = fmul float %1231, 6.400000e+01
  %1233 = call float @llvm.ceil.f32(float %1232) #8
  %1234 = fcmp ult float %1233, 0xC1E0000000000000
  %1235 = fcmp ugt float %1233, 0x41DFFFFFE0000000
  %1236 = fcmp ogt float %1233, 0xC1E0000000000000
  %1237 = select i1 %1236, float %1233, float 0xC1E0000000000000
  %1238 = fptosi float %1237 to i32
  %1239 = select i1 %1234, i32 0, i32 2147483647
  %1240 = select i1 %1235, i32 %1239, i32 %1238
  %1241 = icmp sgt i32 %1212, -1
  %1242 = select i1 %1241, i32 -2147483648, i32 2147483647
  %1243 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1240, i32 %1212) #8
  %1244 = extractvalue { i32, i1 } %1243, 1
  %1245 = extractvalue { i32, i1 } %1243, 0
  %1246 = select i1 %1244, i32 %1242, i32 %1245, !prof !7
  %1247 = zext i32 %1212 to i64
  %1248 = shl nuw i64 %1247, 32
  %1249 = zext i32 %1202 to i64
  %1250 = or i64 %1248, %1249
  %1251 = zext i32 %1246 to i64
  %1252 = shl nuw i64 %1251, 32
  %1253 = zext i32 %1229 to i64
  %1254 = or i64 %1252, %1253
  %1255 = bitcast %"class.blink::IntersectionGeometry"* %0 to i64*
  store i64 %1250, i64* %1255, align 8
  %1256 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 0, i32 1
  %1257 = bitcast %"struct.blink::PhysicalSize"* %1256 to i64*
  store i64 %1254, i64* %1257, align 8
  %1258 = bitcast <4 x float>* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1258) #8
  %1259 = bitcast %"struct.blink::PhysicalRect"* %361 to <4 x i32>*
  %1260 = load <4 x i32>, <4 x i32>* %1259, align 4
  %1261 = shufflevector <4 x i32> %1260, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %1262 = sitofp <4 x i32> %1261 to <4 x float>
  %1263 = fmul <4 x float> %1262, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1264 = shufflevector <4 x float> %1263, <4 x float> undef, <2 x i32> <i32 3, i32 2>
  %1265 = shufflevector <4 x float> %1263, <4 x float> undef, <2 x i32> <i32 1, i32 0>
  %1266 = bitcast <4 x float>* %36 to <2 x float>*
  store <2 x float> %1264, <2 x float>* %1266, align 16
  %1267 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %37, i64 0, i32 1
  store <2 x float> %1265, <2 x float>* %1267, align 8
  %1268 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %1178, align 8
  %1269 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %1268, i64 0, i32 1, i32 0, i32 0
  %1270 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1269, align 8
  %1271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1270, i64 0, i32 2, i32 0, i32 0
  %1272 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %1271, align 8
  %1273 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %1272, i64 0, i32 6
  %1274 = load float, float* %1273, align 8
  %1275 = fcmp une float %1274, 1.000000e+00
  br i1 %1275, label %1276, label %1280

1276:                                             ; preds = %1191
  %1277 = fdiv float 1.000000e+00, %1274
  call void @_ZN5blink9FloatRect5ScaleEff(%"class.blink::FloatRect"* nonnull %38, float %1277, float %1277) #8
  %1278 = load <4 x float>, <4 x float>* %36, align 16
  %1279 = shufflevector <4 x float> %1278, <4 x float> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  br label %1280

1280:                                             ; preds = %1191, %1276
  %1281 = phi <4 x float> [ %1263, %1191 ], [ %1279, %1276 ]
  %1282 = extractelement <4 x float> %1281, i32 3
  %1283 = fmul float %1282, 6.400000e+01
  %1284 = call float @llvm.floor.f32(float %1283) #8
  %1285 = fcmp ult float %1284, 0xC1E0000000000000
  %1286 = fcmp ugt float %1284, 0x41DFFFFFE0000000
  %1287 = fcmp ogt float %1284, 0xC1E0000000000000
  %1288 = select i1 %1287, float %1284, float 0xC1E0000000000000
  %1289 = fptosi float %1288 to i32
  %1290 = select i1 %1285, i32 0, i32 2147483647
  %1291 = select i1 %1286, i32 %1290, i32 %1289
  %1292 = extractelement <4 x float> %1281, i32 2
  %1293 = fmul float %1292, 6.400000e+01
  %1294 = call float @llvm.floor.f32(float %1293) #8
  %1295 = fcmp ult float %1294, 0xC1E0000000000000
  %1296 = fcmp ugt float %1294, 0x41DFFFFFE0000000
  %1297 = fcmp ogt float %1294, 0xC1E0000000000000
  %1298 = select i1 %1297, float %1294, float 0xC1E0000000000000
  %1299 = fptosi float %1298 to i32
  %1300 = select i1 %1295, i32 0, i32 2147483647
  %1301 = select i1 %1296, i32 %1300, i32 %1299
  %1302 = extractelement <4 x float> %1281, i32 1
  %1303 = fadd float %1282, %1302
  %1304 = fmul float %1303, 6.400000e+01
  %1305 = call float @llvm.ceil.f32(float %1304) #8
  %1306 = fcmp ult float %1305, 0xC1E0000000000000
  %1307 = fcmp ugt float %1305, 0x41DFFFFFE0000000
  %1308 = fcmp ogt float %1305, 0xC1E0000000000000
  %1309 = select i1 %1308, float %1305, float 0xC1E0000000000000
  %1310 = fptosi float %1309 to i32
  %1311 = select i1 %1306, i32 0, i32 2147483647
  %1312 = select i1 %1307, i32 %1311, i32 %1310
  %1313 = icmp sgt i32 %1291, -1
  %1314 = select i1 %1313, i32 -2147483648, i32 2147483647
  %1315 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1312, i32 %1291) #8
  %1316 = extractvalue { i32, i1 } %1315, 1
  %1317 = extractvalue { i32, i1 } %1315, 0
  %1318 = select i1 %1316, i32 %1314, i32 %1317, !prof !7
  %1319 = extractelement <4 x float> %1281, i32 0
  %1320 = fadd float %1292, %1319
  %1321 = fmul float %1320, 6.400000e+01
  %1322 = call float @llvm.ceil.f32(float %1321) #8
  %1323 = fcmp ult float %1322, 0xC1E0000000000000
  %1324 = fcmp ugt float %1322, 0x41DFFFFFE0000000
  %1325 = fcmp ogt float %1322, 0xC1E0000000000000
  %1326 = select i1 %1325, float %1322, float 0xC1E0000000000000
  %1327 = fptosi float %1326 to i32
  %1328 = select i1 %1323, i32 0, i32 2147483647
  %1329 = select i1 %1324, i32 %1328, i32 %1327
  %1330 = icmp sgt i32 %1301, -1
  %1331 = select i1 %1330, i32 -2147483648, i32 2147483647
  %1332 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1329, i32 %1301) #8
  %1333 = extractvalue { i32, i1 } %1332, 1
  %1334 = extractvalue { i32, i1 } %1332, 0
  %1335 = select i1 %1333, i32 %1331, i32 %1334, !prof !7
  %1336 = zext i32 %1301 to i64
  %1337 = shl nuw i64 %1336, 32
  %1338 = zext i32 %1291 to i64
  %1339 = or i64 %1337, %1338
  %1340 = zext i32 %1335 to i64
  %1341 = shl nuw i64 %1340, 32
  %1342 = zext i32 %1318 to i64
  %1343 = or i64 %1341, %1342
  %1344 = bitcast %"struct.blink::PhysicalRect"* %361 to i64*
  store i64 %1339, i64* %1344, align 8
  %1345 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 1, i32 1
  %1346 = bitcast %"struct.blink::PhysicalSize"* %1345 to i64*
  store i64 %1343, i64* %1346, align 8
  %1347 = bitcast <4 x float>* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1347) #8
  %1348 = bitcast %"struct.blink::PhysicalRect"* %357 to <4 x i32>*
  %1349 = load <4 x i32>, <4 x i32>* %1348, align 4
  %1350 = shufflevector <4 x i32> %1349, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %1351 = sitofp <4 x i32> %1350 to <4 x float>
  %1352 = fmul <4 x float> %1351, <float 1.562500e-02, float 1.562500e-02, float 1.562500e-02, float 1.562500e-02>
  %1353 = shufflevector <4 x float> %1352, <4 x float> undef, <2 x i32> <i32 3, i32 2>
  %1354 = shufflevector <4 x float> %1352, <4 x float> undef, <2 x i32> <i32 1, i32 0>
  %1355 = bitcast <4 x float>* %39 to <2 x float>*
  store <2 x float> %1353, <2 x float>* %1355, align 16
  %1356 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %40, i64 0, i32 1
  store <2 x float> %1354, <2 x float>* %1356, align 8
  %1357 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 5, i32 0
  %1358 = bitcast %"class.blink::ComputedStyle"** %1357 to %"class.blink::ComputedStyleBase"**
  %1359 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %1358, align 8
  %1360 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %1359, i64 0, i32 1, i32 0, i32 0
  %1361 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1360, align 8
  %1362 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1361, i64 0, i32 2, i32 0, i32 0
  %1363 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %1362, align 8
  %1364 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %1363, i64 0, i32 6
  %1365 = load float, float* %1364, align 8
  %1366 = fcmp une float %1365, 1.000000e+00
  br i1 %1366, label %1367, label %1371

1367:                                             ; preds = %1280
  %1368 = fdiv float 1.000000e+00, %1365
  call void @_ZN5blink9FloatRect5ScaleEff(%"class.blink::FloatRect"* nonnull %41, float %1368, float %1368) #8
  %1369 = load <4 x float>, <4 x float>* %39, align 16
  %1370 = shufflevector <4 x float> %1369, <4 x float> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  br label %1371

1371:                                             ; preds = %1280, %1367
  %1372 = phi <4 x float> [ %1352, %1280 ], [ %1370, %1367 ]
  %1373 = extractelement <4 x float> %1372, i32 3
  %1374 = fmul float %1373, 6.400000e+01
  %1375 = call float @llvm.floor.f32(float %1374) #8
  %1376 = fcmp ult float %1375, 0xC1E0000000000000
  %1377 = fcmp ugt float %1375, 0x41DFFFFFE0000000
  %1378 = fcmp ogt float %1375, 0xC1E0000000000000
  %1379 = select i1 %1378, float %1375, float 0xC1E0000000000000
  %1380 = fptosi float %1379 to i32
  %1381 = select i1 %1376, i32 0, i32 2147483647
  %1382 = select i1 %1377, i32 %1381, i32 %1380
  %1383 = extractelement <4 x float> %1372, i32 2
  %1384 = fmul float %1383, 6.400000e+01
  %1385 = call float @llvm.floor.f32(float %1384) #8
  %1386 = fcmp ult float %1385, 0xC1E0000000000000
  %1387 = fcmp ugt float %1385, 0x41DFFFFFE0000000
  %1388 = fcmp ogt float %1385, 0xC1E0000000000000
  %1389 = select i1 %1388, float %1385, float 0xC1E0000000000000
  %1390 = fptosi float %1389 to i32
  %1391 = select i1 %1386, i32 0, i32 2147483647
  %1392 = select i1 %1387, i32 %1391, i32 %1390
  %1393 = extractelement <4 x float> %1372, i32 1
  %1394 = fadd float %1373, %1393
  %1395 = fmul float %1394, 6.400000e+01
  %1396 = call float @llvm.ceil.f32(float %1395) #8
  %1397 = fcmp ult float %1396, 0xC1E0000000000000
  %1398 = fcmp ugt float %1396, 0x41DFFFFFE0000000
  %1399 = fcmp ogt float %1396, 0xC1E0000000000000
  %1400 = select i1 %1399, float %1396, float 0xC1E0000000000000
  %1401 = fptosi float %1400 to i32
  %1402 = select i1 %1397, i32 0, i32 2147483647
  %1403 = select i1 %1398, i32 %1402, i32 %1401
  %1404 = icmp sgt i32 %1382, -1
  %1405 = select i1 %1404, i32 -2147483648, i32 2147483647
  %1406 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1403, i32 %1382) #8
  %1407 = extractvalue { i32, i1 } %1406, 1
  %1408 = extractvalue { i32, i1 } %1406, 0
  %1409 = select i1 %1407, i32 %1405, i32 %1408, !prof !7
  %1410 = extractelement <4 x float> %1372, i32 0
  %1411 = fadd float %1383, %1410
  %1412 = fmul float %1411, 6.400000e+01
  %1413 = call float @llvm.ceil.f32(float %1412) #8
  %1414 = fcmp ult float %1413, 0xC1E0000000000000
  %1415 = fcmp ugt float %1413, 0x41DFFFFFE0000000
  %1416 = fcmp ogt float %1413, 0xC1E0000000000000
  %1417 = select i1 %1416, float %1413, float 0xC1E0000000000000
  %1418 = fptosi float %1417 to i32
  %1419 = select i1 %1414, i32 0, i32 2147483647
  %1420 = select i1 %1415, i32 %1419, i32 %1418
  %1421 = icmp sgt i32 %1392, -1
  %1422 = select i1 %1421, i32 -2147483648, i32 2147483647
  %1423 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1420, i32 %1392) #8
  %1424 = extractvalue { i32, i1 } %1423, 1
  %1425 = extractvalue { i32, i1 } %1423, 0
  %1426 = select i1 %1424, i32 %1422, i32 %1425, !prof !7
  %1427 = zext i32 %1392 to i64
  %1428 = shl nuw i64 %1427, 32
  %1429 = zext i32 %1382 to i64
  %1430 = or i64 %1428, %1429
  %1431 = zext i32 %1426 to i64
  %1432 = shl nuw i64 %1431, 32
  %1433 = zext i32 %1409 to i64
  %1434 = or i64 %1432, %1433
  store i64 %1430, i64* %1034, align 8
  store i64 %1434, i64* %1036, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1347) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1258) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1167) #8
  br label %1435

1435:                                             ; preds = %1162, %1371
  br i1 %350, label %1436, label %1438

1436:                                             ; preds = %1435
  %1437 = getelementptr inbounds %"struct.blink::IntersectionGeometry::CachedRects", %"struct.blink::IntersectionGeometry::CachedRects"* %6, i64 0, i32 4
  store i8 1, i8* %1437, align 2
  br label %1438

1438:                                             ; preds = %1436, %1435
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %363) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20IntersectionGeometryC2ERKNS0_12RootGeometryERKNS_4NodeERKNS_7ElementERKN3WTF6VectorIfLj0ENSA_18PartitionAllocatorEEERKNSB_INS_6LengthELj0ESC_EEjPNS0_11CachedRectsE(%"class.blink::IntersectionGeometry"*, %"struct.blink::IntersectionGeometry::RootGeometry"* dereferenceable(152), %"class.blink::Node"* dereferenceable(64), %"class.blink::Element"* dereferenceable(104), %"class.WTF::Vector.2922"* dereferenceable(16), %"class.WTF::Vector.701"* dereferenceable(16), i32, %"struct.blink::IntersectionGeometry::CachedRects"*) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 4
  %10 = and i32 %6, 127
  %11 = bitcast %"class.blink::IntersectionGeometry"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 64, i1 false)
  store i32 %10, i32* %9, align 8
  %12 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 6
  store double 0.000000e+00, double* %12, align 8
  %13 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 7
  store i32 0, i32* %13, align 8
  %14 = icmp eq %"struct.blink::IntersectionGeometry::CachedRects"* %7, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.blink::IntersectionGeometry::CachedRects", %"struct.blink::IntersectionGeometry::CachedRects"* %7, i64 0, i32 4
  store i8 0, i8* %16, align 2
  br label %17

17:                                               ; preds = %8, %15
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 256
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %78, label %23

23:                                               ; preds = %17
  %24 = and i32 %20, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %27 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRareData"**
  %28 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.blink::NodeData"** %26 to %"class.blink::NodeRenderingData"**
  %31 = select i1 %25, %"class.blink::NodeRenderingData"** %30, %"class.blink::NodeRenderingData"** %29
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %78, label %36

36:                                               ; preds = %23
  %37 = bitcast %"class.blink::LayoutObject"* %34 to i1 (%"class.blink::LayoutObject"*)***
  %38 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %38, i64 20
  %40 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* nonnull %34) #8
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 4
  %44 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %43 to i96*
  %45 = load i96, i96* %44, align 4
  %46 = and i96 %45, 33554432
  %47 = icmp eq i96 %46, 0
  br i1 %47, label %78, label %48

48:                                               ; preds = %42, %36
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %52, label %59

52:                                               ; preds = %48, %52
  %53 = phi %"class.blink::LayoutObject"* [ %55, %52 ], [ %34, %48 ]
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %53, i64 0, i32 7
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 6, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %52, label %59

59:                                               ; preds = %52, %48
  %60 = phi %"class.blink::Node"* [ %50, %48 ], [ %57, %52 ]
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %60, i64 0, i32 3, i32 0, i32 0
  %62 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::Document"*, %"class.blink::Document"** %63, align 8
  %65 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %64) #8
  %66 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %65, i64 0, i32 0, i32 8
  %67 = load i8, i8* %66, align 2, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %78, !prof !3

69:                                               ; preds = %59
  %70 = tail call zeroext i1 @_ZN5blink20DisplayLockUtilities31IsInLockedSubtreeCrossingFramesERKNS_4NodeENS_16IncludeSelfOrNotE(%"class.blink::Node"* dereferenceable(64) %18, i32 1) #8
  br i1 %70, label %78, label %71

71:                                               ; preds = %69
  %72 = load i32, i32* %9, align 8
  %73 = and i32 %72, 32
  %74 = icmp eq i32 %73, 0
  %75 = tail call %"class.blink::LayoutObject"* @_ZN5blink20IntersectionGeometry28GetRootLayoutObjectForTargetEPKNS_4NodeEPNS_12LayoutObjectEb(%"class.blink::Node"* %2, %"class.blink::LayoutObject"* nonnull %34, i1 zeroext %74)
  %76 = icmp eq %"class.blink::LayoutObject"* %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %71
  tail call void @_ZN5blink20IntersectionGeometry15ComputeGeometryERKNS0_12RootGeometryEPKNS_12LayoutObjectES6_RKN3WTF6VectorIfLj0ENS7_18PartitionAllocatorEEERKNS8_INS_6LengthELj0ES9_EEPNS0_11CachedRectsE(%"class.blink::IntersectionGeometry"* %0, %"struct.blink::IntersectionGeometry::RootGeometry"* dereferenceable(152) %1, %"class.blink::LayoutObject"* nonnull %75, %"class.blink::LayoutObject"* nonnull %34, %"class.WTF::Vector.2922"* dereferenceable(16) %4, %"class.WTF::Vector.701"* dereferenceable(16) %5, %"struct.blink::IntersectionGeometry::CachedRects"* %7)
  br label %78

78:                                               ; preds = %59, %69, %42, %23, %17, %77, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20IntersectionGeometry10ClipToRootEPKNS_12LayoutObjectES3_RKNS_12PhysicalRectERS4_S7_PNS0_11CachedRectsE(%"class.blink::IntersectionGeometry"* nocapture readonly, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::IntersectionGeometry::CachedRects"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.blink::PhysicalRect", align 4
  %9 = alloca %"struct.blink::PhysicalRect", align 4
  %10 = alloca %"struct.blink::PhysicalRect", align 4
  %11 = getelementptr inbounds %"class.blink::IntersectionGeometry", %"class.blink::IntersectionGeometry"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %33

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %26

19:                                               ; preds = %15, %19
  %20 = phi %"class.blink::LayoutObject"* [ %22, %19 ], [ %1, %15 ]
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 7
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 6, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %19, label %26

26:                                               ; preds = %19, %15
  %27 = phi %"class.blink::Node"* [ %17, %15 ], [ %24, %19 ]
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  %32 = tail call zeroext i1 @_ZNK5blink8Document13IsInMainFrameEv(%"class.blink::Document"* %31) #8
  br i1 %32, label %33, label %35

33:                                               ; preds = %26, %7
  %34 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBox"*
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi %"class.blink::LayoutBox"* [ %34, %33 ], [ null, %26 ]
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %47

40:                                               ; preds = %35, %40
  %41 = phi %"class.blink::LayoutObject"* [ %43, %40 ], [ %2, %35 ]
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 7
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %43, i64 0, i32 6, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %40, label %47

47:                                               ; preds = %40, %35
  %48 = phi %"class.blink::Node"* [ %38, %35 ], [ %45, %40 ]
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::Document"*, %"class.blink::Document"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 113
  %54 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutView"* %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %58 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %57 to i96*
  %59 = load i96, i96* %58, align 4
  %60 = and i96 %59, 6291456
  %61 = icmp eq i96 %60, 0
  %62 = select i1 %61, i32 7, i32 5
  br label %63

63:                                               ; preds = %56, %47
  %64 = phi i32 [ 5, %47 ], [ %62, %56 ]
  %65 = load i32, i32* %11, align 8
  %66 = and i32 %65, 32
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.blink::IntersectionGeometry::CachedRects", %"struct.blink::IntersectionGeometry::CachedRects"* %6, i64 0, i32 2
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = icmp ne i8 %70, 0
  br label %75

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %36, i64 0, i32 0
  %74 = tail call zeroext i1 @_ZNK5blink12LayoutObject30MapToVisualRectInAncestorSpaceEPKNS_20LayoutBoxModelObjectERNS_12PhysicalRectENS_15VisualRectFlagsE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutBoxModelObject"* %73, %"struct.blink::PhysicalRect"* dereferenceable(16) %4, i32 %64) #8
  br label %75

75:                                               ; preds = %72, %68
  %76 = phi i1 [ %71, %68 ], [ %74, %72 ]
  %77 = icmp eq %"struct.blink::IntersectionGeometry::CachedRects"* %6, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.blink::IntersectionGeometry::CachedRects", %"struct.blink::IntersectionGeometry::CachedRects"* %6, i64 0, i32 1
  %80 = bitcast %"struct.blink::PhysicalRect"* %79 to i8*
  %81 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 16, i1 false)
  %82 = getelementptr inbounds %"struct.blink::IntersectionGeometry::CachedRects", %"struct.blink::IntersectionGeometry::CachedRects"* %6, i64 0, i32 2
  %83 = zext i1 %76 to i8
  store i8 %83, i8* %82, align 4
  br label %84

84:                                               ; preds = %75, %78
  %85 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %85, i8 0, i64 16, i1 false)
  br i1 %76, label %86, label %388

86:                                               ; preds = %84
  %87 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  %88 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 16, i1 false)
  %89 = icmp eq %"class.blink::LayoutBox"* %36, null
  br i1 %89, label %234, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %36, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %36, i64 0, i32 0, i32 0, i32 4
  %93 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %92 to i96*
  %94 = load i96, i96* %93, align 4
  %95 = and i96 %94, 8589934592
  %96 = icmp eq i96 %95, 0
  br i1 %96, label %204, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %36, i64 0, i32 0, i32 0, i32 5, i32 0
  %99 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %99, i64 0, i32 0, i32 9
  %101 = bitcast [20 x i8]* %100 to i160*
  %102 = load i160, i160* %101, align 8
  %103 = lshr i160 %102, 74
  %104 = trunc i160 %103 to i32
  %105 = and i32 %104, 7
  switch i32 %105, label %106 [
    i32 5, label %204
    i32 2, label %204
  ]

106:                                              ; preds = %97
  %107 = tail call i64 @_ZNK5blink9LayoutBox12ScrollOriginEv(%"class.blink::LayoutBox"* nonnull %36) #8
  %108 = trunc i64 %107 to i32
  %109 = lshr i64 %107, 32
  %110 = trunc i64 %109 to i32
  %111 = icmp sgt i32 %108, 33554431
  br i1 %111, label %116, label %112

112:                                              ; preds = %106
  %113 = icmp slt i32 %108, -33554432
  %114 = shl i32 %108, 6
  %115 = select i1 %113, i32 -2147483648, i32 %114
  br label %116

116:                                              ; preds = %112, %106
  %117 = phi i32 [ 2147483647, %106 ], [ %115, %112 ]
  %118 = icmp sgt i32 %110, 33554431
  br i1 %118, label %124, label %119

119:                                              ; preds = %116
  %120 = icmp slt i32 %110, -33554432
  %121 = shl nuw nsw i64 %109, 6
  %122 = trunc i64 %121 to i32
  %123 = select i1 %120, i32 -2147483648, i32 %122
  br label %124

124:                                              ; preds = %119, %116
  %125 = phi i32 [ 2147483647, %116 ], [ %123, %119 ]
  %126 = tail call i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"* nonnull %36) #8
  %127 = trunc i64 %126 to i32
  %128 = lshr i64 %126, 32
  %129 = trunc i64 %128 to i32
  %130 = icmp slt i32 %127, 0
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %127) #8
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !7
  %136 = icmp slt i32 %129, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %125, i32 %129) #8
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !7
  %142 = tail call i1 @llvm.is.constant.i32(i32 %135) #8
  br i1 %142, label %143, label %147

143:                                              ; preds = %124
  %144 = sub i32 0, %135
  %145 = icmp eq i32 %144, -2147483648
  %146 = select i1 %145, i32 2147483647, i32 %144
  br label %152

147:                                              ; preds = %124
  %148 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %135) #8
  %149 = extractvalue { i32, i1 } %148, 1
  %150 = extractvalue { i32, i1 } %148, 0
  %151 = select i1 %149, i32 2147483647, i32 %150
  br label %152

152:                                              ; preds = %147, %143
  %153 = phi i32 [ %146, %143 ], [ %151, %147 ]
  %154 = tail call i1 @llvm.is.constant.i32(i32 %141) #8
  br i1 %154, label %155, label %159

155:                                              ; preds = %152
  %156 = sub i32 0, %141
  %157 = icmp eq i32 %156, -2147483648
  %158 = select i1 %157, i32 2147483647, i32 %156
  br label %164

159:                                              ; preds = %152
  %160 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %141) #8
  %161 = extractvalue { i32, i1 } %160, 1
  %162 = extractvalue { i32, i1 } %160, 0
  %163 = select i1 %161, i32 2147483647, i32 %162
  br label %164

164:                                              ; preds = %155, %159
  %165 = phi i32 [ %158, %155 ], [ %163, %159 ]
  %166 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = icmp slt i32 %153, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %167, i32 %153) #8
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172, !prof !7
  %174 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 1, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = icmp slt i32 %165, 0
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  %178 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %175, i32 %165) #8
  %179 = extractvalue { i32, i1 } %178, 1
  %180 = extractvalue { i32, i1 } %178, 0
  %181 = select i1 %179, i32 %177, i32 %180, !prof !7
  %182 = zext i32 %181 to i64
  %183 = shl nuw i64 %182, 32
  %184 = zext i32 %173 to i64
  %185 = or i64 %183, %184
  %186 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 %185, i64* %186, align 4
  %187 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %188, i32 %153) #8
  %190 = extractvalue { i32, i1 } %189, 1
  %191 = extractvalue { i32, i1 } %189, 0
  %192 = select i1 %190, i32 %169, i32 %191, !prof !7
  %193 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 1, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %194, i32 %165) #8
  %196 = extractvalue { i32, i1 } %195, 1
  %197 = extractvalue { i32, i1 } %195, 0
  %198 = select i1 %196, i32 %177, i32 %197, !prof !7
  %199 = zext i32 %198 to i64
  %200 = shl nuw i64 %199, 32
  %201 = zext i32 %192 to i64
  %202 = or i64 %200, %201
  %203 = bitcast %"struct.blink::PhysicalRect"* %4 to i64*
  store i64 %202, i64* %203, align 4
  br label %204

204:                                              ; preds = %97, %97, %90, %164
  %205 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 0, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %36, i64 0, i32 0, i32 0, i32 5, i32 0
  %214 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %214, i64 0, i32 0, i32 9
  %216 = bitcast [20 x i8]* %215 to i160*
  %217 = load i160, i160* %216, align 8
  %218 = and i160 %217, 15211807202738752817960438464512
  %219 = icmp eq i160 %218, 5070602400912917605986812821504
  br i1 %219, label %220, label %226, !prof !7

220:                                              ; preds = %204
  %221 = bitcast %"class.blink::LayoutBox"* %36 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %222 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %221, align 8
  %223 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %222, i64 106
  %224 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %223, align 8
  %225 = tail call i32 %224(%"class.blink::LayoutObject"* %91, i32 %206, i32 %210, %"class.blink::LayoutBox"* null) #8
  br label %226

226:                                              ; preds = %204, %220
  %227 = phi i32 [ %225, %220 ], [ %206, %204 ]
  %228 = bitcast %"struct.blink::PhysicalRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %228) #8
  %229 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 %227, i32* %229, align 4
  %230 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %8, i64 0, i32 0, i32 1, i32 0
  store i32 %208, i32* %230, align 4
  %231 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %8, i64 0, i32 1, i32 0, i32 0
  store i32 %210, i32* %231, align 4
  %232 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %8, i64 0, i32 1, i32 1, i32 0
  store i32 %212, i32* %232, align 4
  %233 = call zeroext i1 @_ZN5blink12PhysicalRect18InclusiveIntersectERKS0_(%"struct.blink::PhysicalRect"* %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %228) #8
  br label %388

234:                                              ; preds = %86
  %235 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %236 = load %"class.blink::Node"*, %"class.blink::Node"** %235, align 8
  %237 = icmp eq %"class.blink::Node"* %236, null
  br i1 %237, label %238, label %245

238:                                              ; preds = %234, %238
  %239 = phi %"class.blink::LayoutObject"* [ %241, %238 ], [ %1, %234 ]
  %240 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %239, i64 0, i32 7
  %241 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %240, align 8
  %242 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %241, i64 0, i32 6, i32 0, i32 0
  %243 = load %"class.blink::Node"*, %"class.blink::Node"** %242, align 8
  %244 = icmp eq %"class.blink::Node"* %243, null
  br i1 %244, label %238, label %245

245:                                              ; preds = %238, %234
  %246 = phi %"class.blink::Node"* [ %236, %234 ], [ %243, %238 ]
  %247 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %246, i64 0, i32 3, i32 0, i32 0
  %248 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %248, i64 0, i32 2, i32 0, i32 0
  %250 = load %"class.blink::Document"*, %"class.blink::Document"** %249, align 8
  %251 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %250) #8
  %252 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %251, i64 0, i32 34, i32 0, i32 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %251, i64 0, i32 34, i32 0, i32 1, i32 0
  %255 = load i32, i32* %254, align 4
  %256 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %251, i64 0, i32 34, i32 0, i32 1, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = icmp slt i32 %255, 1
  %259 = icmp slt i32 %257, 1
  %260 = or i1 %258, %259
  br i1 %260, label %261, label %263

261:                                              ; preds = %245
  %262 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %262, i8 0, i64 16, i1 false)
  br label %388

263:                                              ; preds = %245
  %264 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %251, i64 0, i32 34, i32 0, i32 0, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = tail call %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"* %251) #8
  %267 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %266, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = bitcast %"struct.blink::PhysicalRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %268) #8
  %269 = icmp sgt i32 %265, 33554431
  br i1 %269, label %274, label %270

270:                                              ; preds = %263
  %271 = icmp slt i32 %265, -33554432
  %272 = shl i32 %265, 6
  %273 = select i1 %271, i32 -2147483648, i32 %272
  br label %274

274:                                              ; preds = %270, %263
  %275 = phi i32 [ 2147483647, %263 ], [ %273, %270 ]
  %276 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 %275, i32* %276, align 4
  %277 = icmp sgt i32 %253, 33554431
  br i1 %277, label %282, label %278

278:                                              ; preds = %274
  %279 = icmp slt i32 %253, -33554432
  %280 = shl i32 %253, 6
  %281 = select i1 %279, i32 -2147483648, i32 %280
  br label %282

282:                                              ; preds = %278, %274
  %283 = phi i32 [ 2147483647, %274 ], [ %281, %278 ]
  %284 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 0, i32 1, i32 0
  store i32 %283, i32* %284, align 4
  %285 = icmp sgt i32 %255, 33554431
  %286 = shl i32 %255, 6
  %287 = select i1 %285, i32 2147483647, i32 %286
  %288 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 1, i32 0, i32 0
  store i32 %287, i32* %288, align 4
  %289 = icmp sgt i32 %257, 33554431
  %290 = shl i32 %257, 6
  %291 = select i1 %289, i32 2147483647, i32 %290
  %292 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 1, i32 1, i32 0
  store i32 %291, i32* %292, align 4
  %293 = call { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %267, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9, %"class.blink::LayoutBoxModelObject"* null, i32 72) #8
  %294 = extractvalue { i64, i64 } %293, 0
  %295 = trunc i64 %294 to i32
  %296 = lshr i64 %294, 32
  %297 = trunc i64 %296 to i32
  %298 = extractvalue { i64, i64 } %293, 1
  %299 = sdiv i32 %295, 64
  %300 = srem i32 %295, 64
  %301 = add nsw i32 %300, 32
  %302 = ashr i32 %301, 6
  %303 = add nsw i32 %302, %299
  %304 = sdiv i32 %297, 64
  %305 = srem i32 %297, 64
  %306 = add nsw i32 %305, 32
  %307 = ashr i32 %306, 6
  %308 = add nsw i32 %307, %304
  %309 = trunc i64 %298 to i32
  %310 = icmp slt i32 %309, 0
  %311 = select i1 %310, i32 -2147483648, i32 2147483647
  %312 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %300, i32 %309) #8
  %313 = extractvalue { i32, i1 } %312, 1
  %314 = extractvalue { i32, i1 } %312, 0
  %315 = select i1 %313, i32 %311, i32 %314, !prof !7
  %316 = sdiv i32 %315, 64
  %317 = srem i32 %315, 64
  %318 = add nsw i32 %317, 32
  %319 = ashr i32 %318, 6
  %320 = sub nsw i32 %316, %302
  %321 = add nsw i32 %319, %320
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %329

323:                                              ; preds = %282
  %324 = add i32 %309, 4
  %325 = icmp ugt i32 %324, 8
  br i1 %325, label %326, label %329, !prof !8

326:                                              ; preds = %323
  %327 = icmp sgt i32 %309, 0
  %328 = select i1 %327, i32 1, i32 -1
  br label %329

329:                                              ; preds = %326, %323, %282
  %330 = phi i32 [ %328, %326 ], [ %321, %282 ], [ 0, %323 ]
  %331 = lshr i64 %298, 32
  %332 = trunc i64 %331 to i32
  %333 = icmp slt i32 %332, 0
  %334 = select i1 %333, i32 -2147483648, i32 2147483647
  %335 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %305, i32 %332) #8
  %336 = extractvalue { i32, i1 } %335, 1
  %337 = extractvalue { i32, i1 } %335, 0
  %338 = select i1 %336, i32 %334, i32 %337, !prof !7
  %339 = sdiv i32 %338, 64
  %340 = srem i32 %338, 64
  %341 = add nsw i32 %340, 32
  %342 = ashr i32 %341, 6
  %343 = sub nsw i32 %339, %307
  %344 = add nsw i32 %342, %343
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %352

346:                                              ; preds = %329
  %347 = add i32 %332, 4
  %348 = icmp ugt i32 %347, 8
  br i1 %348, label %349, label %352, !prof !8

349:                                              ; preds = %346
  %350 = icmp sgt i32 %332, 0
  %351 = select i1 %350, i32 1, i32 -1
  br label %352

352:                                              ; preds = %329, %346, %349
  %353 = phi i32 [ %351, %349 ], [ %344, %329 ], [ 0, %346 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #8
  %354 = bitcast %"struct.blink::PhysicalRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %354) #8
  %355 = icmp sgt i32 %303, 33554431
  br i1 %355, label %360, label %356

356:                                              ; preds = %352
  %357 = icmp slt i32 %303, -33554432
  %358 = shl i32 %303, 6
  %359 = select i1 %357, i32 -2147483648, i32 %358
  br label %360

360:                                              ; preds = %356, %352
  %361 = phi i32 [ 2147483647, %352 ], [ %359, %356 ]
  %362 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 %361, i32* %362, align 4
  %363 = icmp sgt i32 %308, 33554431
  br i1 %363, label %368, label %364

364:                                              ; preds = %360
  %365 = icmp slt i32 %308, -33554432
  %366 = shl i32 %308, 6
  %367 = select i1 %365, i32 -2147483648, i32 %366
  br label %368

368:                                              ; preds = %364, %360
  %369 = phi i32 [ 2147483647, %360 ], [ %367, %364 ]
  %370 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 0, i32 1, i32 0
  store i32 %369, i32* %370, align 4
  %371 = icmp sgt i32 %330, 33554431
  br i1 %371, label %376, label %372

372:                                              ; preds = %368
  %373 = icmp slt i32 %330, -33554432
  %374 = shl i32 %330, 6
  %375 = select i1 %373, i32 -2147483648, i32 %374
  br label %376

376:                                              ; preds = %372, %368
  %377 = phi i32 [ 2147483647, %368 ], [ %375, %372 ]
  %378 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 1, i32 0, i32 0
  store i32 %377, i32* %378, align 4
  %379 = icmp sgt i32 %353, 33554431
  br i1 %379, label %384, label %380

380:                                              ; preds = %376
  %381 = icmp slt i32 %353, -33554432
  %382 = shl i32 %353, 6
  %383 = select i1 %381, i32 -2147483648, i32 %382
  br label %384

384:                                              ; preds = %380, %376
  %385 = phi i32 [ 2147483647, %376 ], [ %383, %380 ]
  %386 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 1, i32 1, i32 0
  store i32 %385, i32* %386, align 4
  %387 = call zeroext i1 @_ZN5blink12PhysicalRect18InclusiveIntersectERKS0_(%"struct.blink::PhysicalRect"* %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %354) #8
  br label %388

388:                                              ; preds = %261, %384, %226, %84
  %389 = phi i1 [ %233, %226 ], [ false, %84 ], [ false, %261 ], [ %387, %384 ]
  ret i1 %389
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject20GetPropertyContainerEPNS0_16AncestorSkipInfoEPNS_24PropertyTreeStateOrAliasE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*, %"class.blink::PropertyTreeStateOrAlias"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #2

declare void @_ZNK5blink10LayoutView18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutView"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5blink20TransformationMatrix7InverseEv(%"class.blink::TransformationMatrix"* sret, %"class.blink::TransformationMatrix"*) local_unnamed_addr #2

declare void @_ZNK5blink20TransformationMatrix11ProjectQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* sret, %"class.blink::TransformationMatrix"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #2

declare void @_ZNK5blink20TransformationMatrix7MapQuadERKNS_9FloatQuadE(%"class.blink::FloatQuad"* sret, %"class.blink::TransformationMatrix"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink20IntersectionGeometry25FirstThresholdGreaterThanEfRKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::IntersectionGeometry"* nocapture readnone, float, %"class.WTF::Vector.2922"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.2922", %"class.WTF::Vector.2922"* %2, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3, %12
  %8 = phi i32 [ %13, %12 ], [ 0, %3 ]
  %9 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2922"* %2, i32 %8) #8
  %10 = load float, float* %9, align 4
  %11 = fcmp ugt float %10, %1
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = add nuw i32 %8, 1
  %14 = load i32, i32* %4, align 4
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %7, label %16

16:                                               ; preds = %12, %7, %3
  %17 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %13, %12 ]
  ret i32 %17
}

declare zeroext i1 @_ZNK5blink8Document13IsInMainFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12LayoutObject30MapToVisualRectInAncestorSpaceEPKNS_20LayoutBoxModelObjectERNS_12PhysicalRectENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) local_unnamed_addr #2

declare i64 @_ZNK5blink9LayoutBox12ScrollOriginEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12PhysicalRect18InclusiveIntersectERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink10LayoutView16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutView"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #8
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #8
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #8
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %35, %29, %9, %1
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = phi i1 [ false, %35 ], [ false, %25 ], [ false, %15 ], [ %45, %39 ]
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %49 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %50 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, i64 124
  %52 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, align 8
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %48) #8
  br i1 %47, label %65, label %54

54:                                               ; preds = %46
  %55 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #8
  %56 = extractvalue { i64, i64 } %55, 1
  %57 = lshr i64 %56, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %58) #8
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !7
  br label %65

65:                                               ; preds = %46, %54
  %66 = phi i32 [ %64, %54 ], [ %53, %46 ]
  %67 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %68 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, i64 120
  %69 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %68, align 8
  %70 = tail call i32 %69(%"class.blink::LayoutBoxModelObject"* %48) #8
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 %70) #8
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !7
  %77 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %77, i64 0, i32 0, i32 9
  %79 = bitcast [20 x i8]* %78 to i160*
  %80 = load i160, i160* %79, align 8
  %81 = and i160 %80, 1190036353683150593851392
  %82 = icmp eq i160 %81, 340010386766614455386112
  br i1 %82, label %112, label %83

83:                                               ; preds = %65
  %84 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %85 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %84 to i96*
  %86 = load i96, i96* %85, align 4
  %87 = and i96 %86, 8589934592
  %88 = icmp eq i96 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %83
  %90 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #8
  %91 = icmp eq %"class.blink::PaintLayerScrollableArea"* %90, null
  br i1 %91, label %119, label %92

92:                                               ; preds = %89
  %93 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #8
  %94 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %93, i64 0, i32 6, i32 3
  %95 = load i8, i8* %94, align 8
  %96 = and i8 %95, 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %93, i64 0, i32 6, i32 1, i32 0, i32 0
  %100 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %99, align 8
  %101 = icmp eq %"class.blink::Scrollbar"* %100, null
  br i1 %101, label %102, label %119

102:                                              ; preds = %98, %92
  %103 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %48) #8
  %104 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %103, i64 0, i32 6, i32 3
  %105 = load i8, i8* %104, align 8
  %106 = and i8 %105, 2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %103, i64 0, i32 6, i32 2, i32 0, i32 0
  %110 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %109, align 8
  %111 = icmp eq %"class.blink::Scrollbar"* %110, null
  br i1 %111, label %112, label %119

112:                                              ; preds = %108, %102, %83, %65
  %113 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 9
  %115 = bitcast [20 x i8]* %114 to i160*
  %116 = load i160, i160* %115, align 8
  %117 = and i160 %116, 270215977642229760
  %118 = icmp eq i160 %117, 0
  br label %119

119:                                              ; preds = %89, %98, %108, %112
  %120 = phi i1 [ false, %108 ], [ false, %98 ], [ false, %89 ], [ %118, %112 ]
  %121 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %122 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %121, i64 122
  %123 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %122, align 8
  %124 = tail call i32 %123(%"class.blink::LayoutBoxModelObject"* %48) #8
  br i1 %120, label %135, label %125

125:                                              ; preds = %119
  %126 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1) #8
  %127 = extractvalue { i64, i64 } %126, 0
  %128 = trunc i64 %127 to i32
  %129 = icmp slt i32 %128, 0
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %124, i32 %128) #8
  %132 = extractvalue { i32, i1 } %131, 1
  %133 = extractvalue { i32, i1 } %131, 0
  %134 = select i1 %132, i32 %130, i32 %133, !prof !7
  br label %135

135:                                              ; preds = %119, %125
  %136 = phi i32 [ %134, %125 ], [ %124, %119 ]
  %137 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %138 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %137, i64 118
  %139 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %138, align 8
  %140 = tail call i32 %139(%"class.blink::LayoutBoxModelObject"* %48) #8
  %141 = icmp slt i32 %140, 0
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %140) #8
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !7
  %147 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #8
  %148 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %149 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %148, i64 120
  %150 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %149, align 8
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %48) #8
  %152 = icmp sgt i32 %151, -1
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %147, i32 %151) #8
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !7
  %158 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %159 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %158, i64 121
  %160 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %159, align 8
  %161 = tail call i32 %160(%"class.blink::LayoutBoxModelObject"* %48) #8
  %162 = icmp sgt i32 %161, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %157, i32 %161) #8
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !7
  %168 = icmp sgt i32 %167, 0
  %169 = select i1 %168, i32 %167, i32 0
  %170 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #8
  %171 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %172 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %171, i64 118
  %173 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %172, align 8
  %174 = tail call i32 %173(%"class.blink::LayoutBoxModelObject"* %48) #8
  %175 = icmp sgt i32 %174, -1
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %170, i32 %174) #8
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !7
  %181 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %49, align 8
  %182 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %181, i64 119
  %183 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %182, align 8
  %184 = tail call i32 %183(%"class.blink::LayoutBoxModelObject"* %48) #8
  %185 = icmp sgt i32 %184, -1
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %180, i32 %184) #8
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !7
  %191 = icmp sgt i32 %190, 0
  %192 = select i1 %191, i32 %190, i32 0
  %193 = zext i32 %146 to i64
  %194 = shl nuw i64 %193, 32
  %195 = zext i32 %76 to i64
  %196 = or i64 %194, %195
  %197 = insertvalue { i64, i64 } undef, i64 %196, 0
  %198 = zext i32 %192 to i64
  %199 = shl nuw nsw i64 %198, 32
  %200 = zext i32 %169 to i64
  %201 = or i64 %199, %200
  %202 = insertvalue { i64, i64 } %197, i64 %201, 1
  ret { i64, i64 } %202
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_111ApplyMarginERNS_12PhysicalRectERKN3WTF6VectorINS_6LengthELj0ENS3_18PartitionAllocatorEEEfRKN4absl8optionalIS1_EE(%"struct.blink::PhysicalRect"* dereferenceable(16), %"class.WTF::Vector.701"* dereferenceable(16), float, %"class.absl::optional.3032"* nocapture readonly dereferenceable(20)) unnamed_addr #0 {
  %5 = alloca %"class.blink::LayoutRectOutsets", align 4
  %6 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %235, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.absl::optional.3032", %"class.absl::optional.3032"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.absl::optional.3032", %"class.absl::optional.3032"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = select i1 %12, %"struct.blink::PhysicalRect"* %0, %"struct.blink::PhysicalRect"* %13
  %15 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %14, i64 0, i32 1
  %16 = bitcast %"struct.blink::PhysicalSize"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = bitcast %"class.blink::LayoutRectOutsets"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 3, i32 0
  %23 = bitcast %"class.blink::LayoutRectOutsets"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 -86, i64 16, i1 false)
  %24 = tail call dereferenceable(8) %"class.blink::Length"* @_ZNK3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %1, i32 0) #8
  %25 = lshr i64 %17, 32
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 1
  br i1 %29, label %30, label %54

30:                                               ; preds = %9
  %31 = sitofp i32 %26 to float
  %32 = fmul float %31, 1.562500e-02
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 3
  %34 = load i8, i8* %33, align 2, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.blink::Length"* %24 to float*
  %38 = load float, float* %37, align 4
  br label %43

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi float [ %38, %36 ], [ %42, %39 ]
  %45 = fmul float %32, %44
  %46 = fpext float %45 to double
  %47 = fdiv double %46, 1.000000e+02
  %48 = fptosi double %47 to i32
  %49 = icmp sgt i32 %48, 33554431
  br i1 %49, label %76, label %50

50:                                               ; preds = %43
  %51 = icmp slt i32 %48, -33554432
  %52 = shl i32 %48, 6
  %53 = select i1 %51, i32 -2147483648, i32 %52
  br label %76

54:                                               ; preds = %9
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 3
  %56 = load i8, i8* %55, align 2, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.blink::Length"* %24 to float*
  %60 = load float, float* %59, align 4
  br label %65

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = sitofp i32 %63 to float
  br label %65

65:                                               ; preds = %61, %58
  %66 = phi float [ %60, %58 ], [ %64, %61 ]
  %67 = fmul float %66, %2
  %68 = fmul float %67, 6.400000e+01
  %69 = fcmp ult float %68, 0xC1E0000000000000
  %70 = fcmp ugt float %68, 0x41DFFFFFE0000000
  %71 = fcmp ogt float %68, 0xC1E0000000000000
  %72 = select i1 %71, float %68, float 0xC1E0000000000000
  %73 = fptosi float %72 to i32
  %74 = select i1 %69, i32 0, i32 2147483647
  %75 = select i1 %70, i32 %74, i32 %73
  br label %76

76:                                               ; preds = %43, %65, %50
  %77 = phi i32 [ %53, %50 ], [ %75, %65 ], [ 2147483647, %43 ]
  %78 = tail call dereferenceable(8) %"class.blink::Length"* @_ZNK3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %1, i32 1) #8
  %79 = trunc i64 %17 to i32
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %78, i64 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 1
  br i1 %82, label %83, label %107

83:                                               ; preds = %76
  %84 = sitofp i32 %79 to float
  %85 = fmul float %84, 1.562500e-02
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %78, i64 0, i32 3
  %87 = load i8, i8* %86, align 2, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %83
  %90 = bitcast %"class.blink::Length"* %78 to float*
  %91 = load float, float* %90, align 4
  br label %96

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %78, i64 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = sitofp i32 %94 to float
  br label %96

96:                                               ; preds = %92, %89
  %97 = phi float [ %91, %89 ], [ %95, %92 ]
  %98 = fmul float %85, %97
  %99 = fpext float %98 to double
  %100 = fdiv double %99, 1.000000e+02
  %101 = fptosi double %100 to i32
  %102 = icmp sgt i32 %101, 33554431
  br i1 %102, label %129, label %103

103:                                              ; preds = %96
  %104 = icmp slt i32 %101, -33554432
  %105 = shl i32 %101, 6
  %106 = select i1 %104, i32 -2147483648, i32 %105
  br label %129

107:                                              ; preds = %76
  %108 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %78, i64 0, i32 3
  %109 = load i8, i8* %108, align 2, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = bitcast %"class.blink::Length"* %78 to float*
  %113 = load float, float* %112, align 4
  br label %118

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %78, i64 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = sitofp i32 %116 to float
  br label %118

118:                                              ; preds = %114, %111
  %119 = phi float [ %113, %111 ], [ %117, %114 ]
  %120 = fmul float %119, %2
  %121 = fmul float %120, 6.400000e+01
  %122 = fcmp ult float %121, 0xC1E0000000000000
  %123 = fcmp ugt float %121, 0x41DFFFFFE0000000
  %124 = fcmp ogt float %121, 0xC1E0000000000000
  %125 = select i1 %124, float %121, float 0xC1E0000000000000
  %126 = fptosi float %125 to i32
  %127 = select i1 %122, i32 0, i32 2147483647
  %128 = select i1 %123, i32 %127, i32 %126
  br label %129

129:                                              ; preds = %96, %118, %103
  %130 = phi i32 [ %106, %103 ], [ %128, %118 ], [ 2147483647, %96 ]
  %131 = tail call dereferenceable(8) %"class.blink::Length"* @_ZNK3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %1, i32 2) #8
  %132 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %131, i64 0, i32 2
  %133 = load i8, i8* %132, align 1
  %134 = icmp eq i8 %133, 1
  br i1 %134, label %135, label %159

135:                                              ; preds = %129
  %136 = sitofp i32 %26 to float
  %137 = fmul float %136, 1.562500e-02
  %138 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %131, i64 0, i32 3
  %139 = load i8, i8* %138, align 2, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %135
  %142 = bitcast %"class.blink::Length"* %131 to float*
  %143 = load float, float* %142, align 4
  br label %148

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %131, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = sitofp i32 %146 to float
  br label %148

148:                                              ; preds = %144, %141
  %149 = phi float [ %143, %141 ], [ %147, %144 ]
  %150 = fmul float %137, %149
  %151 = fpext float %150 to double
  %152 = fdiv double %151, 1.000000e+02
  %153 = fptosi double %152 to i32
  %154 = icmp sgt i32 %153, 33554431
  br i1 %154, label %181, label %155

155:                                              ; preds = %148
  %156 = icmp slt i32 %153, -33554432
  %157 = shl i32 %153, 6
  %158 = select i1 %156, i32 -2147483648, i32 %157
  br label %181

159:                                              ; preds = %129
  %160 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %131, i64 0, i32 3
  %161 = load i8, i8* %160, align 2, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %159
  %164 = bitcast %"class.blink::Length"* %131 to float*
  %165 = load float, float* %164, align 4
  br label %170

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %131, i64 0, i32 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = sitofp i32 %168 to float
  br label %170

170:                                              ; preds = %166, %163
  %171 = phi float [ %165, %163 ], [ %169, %166 ]
  %172 = fmul float %171, %2
  %173 = fmul float %172, 6.400000e+01
  %174 = fcmp ult float %173, 0xC1E0000000000000
  %175 = fcmp ugt float %173, 0x41DFFFFFE0000000
  %176 = fcmp ogt float %173, 0xC1E0000000000000
  %177 = select i1 %176, float %173, float 0xC1E0000000000000
  %178 = fptosi float %177 to i32
  %179 = select i1 %174, i32 0, i32 2147483647
  %180 = select i1 %175, i32 %179, i32 %178
  br label %181

181:                                              ; preds = %148, %170, %155
  %182 = phi i32 [ %158, %155 ], [ %180, %170 ], [ 2147483647, %148 ]
  %183 = tail call dereferenceable(8) %"class.blink::Length"* @_ZNK3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"* %1, i32 3) #8
  %184 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %183, i64 0, i32 2
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %185, 1
  br i1 %186, label %187, label %211

187:                                              ; preds = %181
  %188 = sitofp i32 %79 to float
  %189 = fmul float %188, 1.562500e-02
  %190 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %183, i64 0, i32 3
  %191 = load i8, i8* %190, align 2, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %187
  %194 = bitcast %"class.blink::Length"* %183 to float*
  %195 = load float, float* %194, align 4
  br label %200

196:                                              ; preds = %187
  %197 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %183, i64 0, i32 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = sitofp i32 %198 to float
  br label %200

200:                                              ; preds = %196, %193
  %201 = phi float [ %195, %193 ], [ %199, %196 ]
  %202 = fmul float %189, %201
  %203 = fpext float %202 to double
  %204 = fdiv double %203, 1.000000e+02
  %205 = fptosi double %204 to i32
  %206 = icmp sgt i32 %205, 33554431
  br i1 %206, label %233, label %207

207:                                              ; preds = %200
  %208 = icmp slt i32 %205, -33554432
  %209 = shl i32 %205, 6
  %210 = select i1 %208, i32 -2147483648, i32 %209
  br label %233

211:                                              ; preds = %181
  %212 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %183, i64 0, i32 3
  %213 = load i8, i8* %212, align 2, !range !2
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %211
  %216 = bitcast %"class.blink::Length"* %183 to float*
  %217 = load float, float* %216, align 4
  br label %222

218:                                              ; preds = %211
  %219 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %183, i64 0, i32 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = sitofp i32 %220 to float
  br label %222

222:                                              ; preds = %218, %215
  %223 = phi float [ %217, %215 ], [ %221, %218 ]
  %224 = fmul float %223, %2
  %225 = fmul float %224, 6.400000e+01
  %226 = fcmp ult float %225, 0xC1E0000000000000
  %227 = fcmp ugt float %225, 0x41DFFFFFE0000000
  %228 = fcmp ogt float %225, 0xC1E0000000000000
  %229 = select i1 %228, float %225, float 0xC1E0000000000000
  %230 = fptosi float %229 to i32
  %231 = select i1 %226, i32 0, i32 2147483647
  %232 = select i1 %227, i32 %231, i32 %230
  br label %233

233:                                              ; preds = %200, %222, %207
  %234 = phi i32 [ %210, %207 ], [ %232, %222 ], [ 2147483647, %200 ]
  store i32 %77, i32* %19, align 4
  store i32 %130, i32* %20, align 4
  store i32 %182, i32* %21, align 4
  store i32 %234, i32* %22, align 4
  call void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* %0, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  br label %235

235:                                              ; preds = %4, %233
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #5

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #2

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #4

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"*, %"class.blink::LayoutRectOutsets"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Length"* @_ZNK3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.701"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.701", %"class.WTF::Vector.701"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Length"*, %"class.blink::Length"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 %25
  ret %"class.blink::Length"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare dereferenceable(1176) %"class.blink::LocalFrame"* @_ZNK5blink10LocalFrame14LocalFrameRootEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20DisplayLockUtilities31IsInLockedSubtreeCrossingFramesERKNS_4NodeENS_16IncludeSelfOrNotE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #2

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink21LayoutEmbeddedContent19ReplacedContentRectEv(%"class.blink::LayoutEmbeddedContent"*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink20LayoutBoxModelObject25LocalBoundingBoxFloatRectEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #2

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

declare i32 @_ZNK5blink10LocalFrame17GetOcclusionStateEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12LayoutObject26HasDistortingVisualEffectsEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZNK5blink12LayoutObject19HitTestForOcclusionERKNS_12PhysicalRectE(%"class.blink::HitTestResult"* sret, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"*) unnamed_addr #6

declare void @_ZN5blink9FloatRect5ScaleEff(%"class.blink::FloatRect"*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_10LayoutRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca %"class.blink::GeometryMapper::Translation2DOrMatrix", align 8
  %7 = icmp eq %"class.blink::TransformPaintPropertyNode"* %0, %1
  br i1 %7, label %156, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %10, align 8
  %12 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %9, %11
  br i1 %12, label %13, label %54

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %14, align 8
  %16 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %15, null
  br i1 %16, label %17, label %54

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fmul float %19, 6.400000e+01
  %23 = fcmp ult float %22, 0xC1E0000000000000
  %24 = fcmp ugt float %22, 0x41DFFFFFE0000000
  %25 = fcmp ogt float %22, 0xC1E0000000000000
  %26 = select i1 %25, float %22, float 0xC1E0000000000000
  %27 = fptosi float %26 to i32
  %28 = select i1 %23, i32 0, i32 2147483647
  %29 = select i1 %24, i32 %28, i32 %27
  %30 = fmul float %21, 6.400000e+01
  %31 = fcmp ult float %30, 0xC1E0000000000000
  %32 = fcmp ugt float %30, 0x41DFFFFFE0000000
  %33 = fcmp ogt float %30, 0xC1E0000000000000
  %34 = select i1 %33, float %30, float 0xC1E0000000000000
  %35 = fptosi float %34 to i32
  %36 = select i1 %31, i32 0, i32 2147483647
  %37 = select i1 %32, i32 %36, i32 %35
  %38 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %29, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %29) #8
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !7
  store i32 %45, i32* %38, align 4
  %46 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 0, i32 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %37, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %37) #8
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !7
  store i32 %53, i32* %46, align 4
  br label %156

54:                                               ; preds = %13, %8
  %55 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0
  %56 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %57 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %56, align 8
  %58 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %55, %57
  br i1 %58, label %59, label %100

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %60, align 8
  %62 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %61, null
  br i1 %62, label %63, label %100

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = fmul float %65, -6.400000e+01
  %69 = fcmp ult float %68, 0xC1E0000000000000
  %70 = fcmp ugt float %68, 0x41DFFFFFE0000000
  %71 = fcmp ogt float %68, 0xC1E0000000000000
  %72 = select i1 %71, float %68, float 0xC1E0000000000000
  %73 = fptosi float %72 to i32
  %74 = select i1 %69, i32 0, i32 2147483647
  %75 = select i1 %70, i32 %74, i32 %73
  %76 = fmul float %67, -6.400000e+01
  %77 = fcmp ult float %76, 0xC1E0000000000000
  %78 = fcmp ugt float %76, 0x41DFFFFFE0000000
  %79 = fcmp ogt float %76, 0xC1E0000000000000
  %80 = select i1 %79, float %76, float 0xC1E0000000000000
  %81 = fptosi float %80 to i32
  %82 = select i1 %77, i32 0, i32 2147483647
  %83 = select i1 %78, i32 %82, i32 %81
  %84 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 0, i32 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %75, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %85, i32 %75) #8
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !7
  store i32 %91, i32* %84, align 4
  %92 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 0, i32 0, i32 1, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %83, 0
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %93, i32 %83) #8
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !7
  store i32 %99, i32* %92, align 4
  br label %156

100:                                              ; preds = %59, %54
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 0, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %101 = bitcast %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %101) #8
  call void @_ZN5blink14GeometryMapper37SourceToDestinationProjectionInternalERKNS_26TransformPaintPropertyNodeES3_RbS4_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* nonnull sret %6, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1, i8* nonnull dereferenceable(1) %4, i8* nonnull dereferenceable(1) %5) #8
  %102 = load i8, i8* %5, align 1, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = bitcast %"class.blink::LayoutRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 16, i1 false)
  br label %155

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %108 = load i8, i8* %107, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %147, !prof !3

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 0, i32 0
  %112 = load float, float* %111, align 8
  %113 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 0, i32 1
  %114 = load float, float* %113, align 4
  %115 = fmul float %112, 6.400000e+01
  %116 = fcmp ult float %115, 0xC1E0000000000000
  %117 = fcmp ugt float %115, 0x41DFFFFFE0000000
  %118 = fcmp ogt float %115, 0xC1E0000000000000
  %119 = select i1 %118, float %115, float 0xC1E0000000000000
  %120 = fptosi float %119 to i32
  %121 = select i1 %116, i32 0, i32 2147483647
  %122 = select i1 %117, i32 %121, i32 %120
  %123 = fmul float %114, 6.400000e+01
  %124 = fcmp ult float %123, 0xC1E0000000000000
  %125 = fcmp ugt float %123, 0x41DFFFFFE0000000
  %126 = fcmp ogt float %123, 0xC1E0000000000000
  %127 = select i1 %126, float %123, float 0xC1E0000000000000
  %128 = fptosi float %127 to i32
  %129 = select i1 %124, i32 0, i32 2147483647
  %130 = select i1 %125, i32 %129, i32 %128
  %131 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 0, i32 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp slt i32 %122, 0
  %134 = select i1 %133, i32 -2147483648, i32 2147483647
  %135 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %132, i32 %122) #8
  %136 = extractvalue { i32, i1 } %135, 1
  %137 = extractvalue { i32, i1 } %135, 0
  %138 = select i1 %136, i32 %134, i32 %137, !prof !7
  store i32 %138, i32* %131, align 4
  %139 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 0, i32 0, i32 1, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp slt i32 %130, 0
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %140, i32 %130) #8
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !7
  store i32 %146, i32* %139, align 4
  br label %155

147:                                              ; preds = %106
  %148 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %149 = call { i64, i64 } @_ZNK5blink20TransformationMatrix7MapRectERKNS_10LayoutRectE(%"class.blink::TransformationMatrix"* %148, %"class.blink::LayoutRect"* dereferenceable(16) %2) #8
  %150 = extractvalue { i64, i64 } %149, 0
  %151 = extractvalue { i64, i64 } %149, 1
  %152 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  store i64 %150, i64* %152, align 4
  %153 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %2, i64 0, i32 1
  %154 = bitcast %"class.blink::LayoutSize"* %153 to i64*
  store i64 %151, i64* %154, align 4
  br label %155

155:                                              ; preds = %147, %110, %104
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %101) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br label %156

156:                                              ; preds = %3, %155, %63, %17
  ret void
}

declare void @_ZN5blink14GeometryMapper37SourceToDestinationProjectionInternalERKNS_26TransformPaintPropertyNodeES3_RbS4_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* sret, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), i8* dereferenceable(1), i8* dereferenceable(1)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink20TransformationMatrix7MapRectERKNS_10LayoutRectE(%"class.blink::TransformationMatrix"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2922"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2922", %"class.WTF::Vector.2922"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.2922", %"class.WTF::Vector.2922"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink12_GLOBAL__N_120InitializeTargetRectEPKNS_12LayoutObjectEjRKN3WTF6VectorINS_6LengthELj0ENS4_18PartitionAllocatorEEES3_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink12_GLOBAL__N_120InitializeTargetRectEPKNS_12LayoutObjectEjRKN3WTF6VectorINS_6LengthELj0ENS4_18PartitionAllocatorEEES3_"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!"branch_weights", i32 4001, i32 4000000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink12FragmentData24LocalBorderBoxPropertiesEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink12FragmentData24LocalBorderBoxPropertiesEv"}
