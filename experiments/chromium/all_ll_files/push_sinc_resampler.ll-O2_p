; ModuleID = '../../third_party/webrtc/common_audio/resampler/push_sinc_resampler.cc'
source_filename = "../../third_party/webrtc/common_audio/resampler/push_sinc_resampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::PushSincResampler" = type { %"class.webrtc::SincResamplerCallback", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5", float*, i16*, i64, i8, i64 }
%"class.webrtc::SincResamplerCallback" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::SincResampler"* }
%"class.webrtc::SincResampler" = type { i32 (...)**, double, double, i8, %"class.webrtc::SincResamplerCallback"*, i64, i64, i64, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", float (float*, float*, float*, double)*, float*, float*, float*, float*, float* }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { float* }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.2" }

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t = comdat any

@_ZTVN6webrtc17PushSincResamplerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::PushSincResampler"*)* @_ZN6webrtc17PushSincResamplerD2Ev to i8*), i8* bitcast (void (%"class.webrtc::PushSincResampler"*)* @_ZN6webrtc17PushSincResamplerD0Ev to i8*), i8* bitcast (void (%"class.webrtc::PushSincResampler"*, i64, float*)* @_ZN6webrtc17PushSincResampler3RunEmPf to i8*)] }, align 8
@.str = private unnamed_addr constant [71 x i8] c"../../third_party/webrtc/common_audio/resampler/push_sinc_resampler.cc\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"source_length == resampler_->request_frames()\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"destination_capacity >= destination_frames_\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"source_available_ == frames\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t = linkonce_odr hidden constant [4 x i8] c"\0D\05\05\00", comdat, align 1

@_ZN6webrtc17PushSincResamplerC1Emm = hidden unnamed_addr alias void (%"class.webrtc::PushSincResampler"*, i64, i64), void (%"class.webrtc::PushSincResampler"*, i64, i64)* @_ZN6webrtc17PushSincResamplerC2Emm
@_ZN6webrtc17PushSincResamplerD1Ev = hidden unnamed_addr alias void (%"class.webrtc::PushSincResampler"*), void (%"class.webrtc::PushSincResampler"*)* @_ZN6webrtc17PushSincResamplerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17PushSincResamplerC2Emm(%"class.webrtc::PushSincResampler"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc17PushSincResamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 1
  %7 = tail call i8* @_Znwm(i64 144) #7
  %8 = bitcast i8* %7 to %"class.webrtc::SincResampler"*
  %9 = uitofp i64 %1 to double
  %10 = uitofp i64 %2 to double
  %11 = fdiv double %9, %10
  tail call void @_ZN6webrtc13SincResamplerC1EdmPNS_21SincResamplerCallbackE(%"class.webrtc::SincResampler"* nonnull %8, double %11, i64 %1, %"class.webrtc::SincResamplerCallback"* %4) #8
  %12 = ptrtoint i8* %7 to i64
  %13 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 5
  %16 = bitcast %"class.std::__1::unique_ptr.5"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false)
  store i64 %2, i64* %15, align 8
  %17 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 6
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 7
  store i64 0, i64* %18, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN6webrtc13SincResamplerC1EdmPNS_21SincResamplerCallbackE(%"class.webrtc::SincResampler"*, double, i64, %"class.webrtc::SincResamplerCallback"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17PushSincResamplerD2Ev(%"class.webrtc::PushSincResampler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc17PushSincResamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  store float* null, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast float* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.webrtc::SincResampler"*, %"class.webrtc::SincResampler"** %9, align 8
  store %"class.webrtc::SincResampler"* null, %"class.webrtc::SincResampler"** %9, align 8
  %11 = icmp eq %"class.webrtc::SincResampler"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.webrtc::SincResampler"* %10 to void (%"class.webrtc::SincResampler"*)***
  %14 = load void (%"class.webrtc::SincResampler"*)**, void (%"class.webrtc::SincResampler"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.webrtc::SincResampler"*)*, void (%"class.webrtc::SincResampler"*)** %14, i64 1
  %16 = load void (%"class.webrtc::SincResampler"*)*, void (%"class.webrtc::SincResampler"*)** %15, align 8
  tail call void %16(%"class.webrtc::SincResampler"* nonnull %10) #8
  br label %17

17:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17PushSincResamplerD0Ev(%"class.webrtc::PushSincResampler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc17PushSincResamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  store float* null, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast float* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #7
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.webrtc::SincResampler"*, %"class.webrtc::SincResampler"** %9, align 8
  store %"class.webrtc::SincResampler"* null, %"class.webrtc::SincResampler"** %9, align 8
  %11 = icmp eq %"class.webrtc::SincResampler"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.webrtc::SincResampler"* %10 to void (%"class.webrtc::SincResampler"*)***
  %14 = load void (%"class.webrtc::SincResampler"*)**, void (%"class.webrtc::SincResampler"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.webrtc::SincResampler"*)*, void (%"class.webrtc::SincResampler"*)** %14, i64 1
  %16 = load void (%"class.webrtc::SincResampler"*)*, void (%"class.webrtc::SincResampler"*)** %15, align 8
  tail call void %16(%"class.webrtc::SincResampler"* nonnull %10) #8
  br label %17

17:                                               ; preds = %8, %12
  %18 = bitcast %"class.webrtc::PushSincResampler"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6webrtc17PushSincResampler8ResampleEPKsmPsm(%"class.webrtc::PushSincResampler"* nocapture, i16*, i64, i16*, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load float*, float** %6, align 8
  %8 = icmp eq float* %7, null
  %9 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  br i1 %8, label %11, label %19

11:                                               ; preds = %5
  %12 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %10, i64 4)
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 -1, i64 %14
  %16 = tail call i8* @_Znam(i64 %15) #7
  %17 = bitcast float** %6 to i8**
  store i8* %16, i8** %17, align 8
  %18 = bitcast i8* %16 to float*
  br label %19

19:                                               ; preds = %5, %11
  %20 = phi float* [ %18, %11 ], [ %7, %5 ]
  %21 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 4
  store i16* %1, i16** %21, align 8
  %22 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 5
  %23 = tail call i64 @_ZN6webrtc17PushSincResampler8ResampleEPKfmPfm(%"class.webrtc::PushSincResampler"* %0, float* null, i64 %2, float* nonnull %20, i64 %10)
  %24 = load float*, float** %6, align 8
  %25 = load i64, i64* %22, align 8
  tail call void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float* %24, i64 %25, i16* %3) #8
  store i16* null, i16** %21, align 8
  %26 = load i64, i64* %22, align 8
  ret i64 %26
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6webrtc17PushSincResampler8ResampleEPKfmPfm(%"class.webrtc::PushSincResampler"* nocapture, float*, i64, float*, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.webrtc::SincResampler"*, %"class.webrtc::SincResampler"** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::SincResampler", %"class.webrtc::SincResampler"* %7, i64 0, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, %2
  br i1 %10, label %12, label %11

11:                                               ; preds = %5
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 52, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t, i64 0, i64 0), i64 %2, i64 %9) #9
  unreachable

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, %4
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 53, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t, i64 0, i64 0), i64 %4, i64 %14) #9
  unreachable

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 3
  store float* %1, float** %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 7
  store i64 %2, i64* %19, align 8
  %20 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 6
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = tail call i64 @_ZNK6webrtc13SincResampler9ChunkSizeEv(%"class.webrtc::SincResampler"* %7) #8
  tail call void @_ZN6webrtc13SincResampler8ResampleEmPf(%"class.webrtc::SincResampler"* %7, i64 %24, float* %3) #8
  %25 = load %"class.webrtc::SincResampler"*, %"class.webrtc::SincResampler"** %6, align 8
  %26 = load i64, i64* %13, align 8
  br label %27

27:                                               ; preds = %17, %23
  %28 = phi i64 [ %14, %17 ], [ %26, %23 ]
  %29 = phi %"class.webrtc::SincResampler"* [ %7, %17 ], [ %25, %23 ]
  tail call void @_ZN6webrtc13SincResampler8ResampleEmPf(%"class.webrtc::SincResampler"* %29, i64 %28, float* %3) #8
  store float* null, float** %18, align 8
  %30 = load i64, i64* %13, align 8
  ret i64 %30
}

declare void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float*, i64, i16*) local_unnamed_addr #2

declare void @_ZN6webrtc13SincResampler8ResampleEmPf(%"class.webrtc::SincResampler"*, i64, float*) local_unnamed_addr #2

declare i64 @_ZNK6webrtc13SincResampler9ChunkSizeEv(%"class.webrtc::SincResampler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17PushSincResampler3RunEmPf(%"class.webrtc::PushSincResampler"* nocapture, i64, float* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %1
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 83, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t, i64 0, i64 0), i64 %5, i64 %1) #9
  unreachable

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = bitcast float* %2 to i8*
  %14 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 %14, i1 false)
  store i8 0, i8* %9, align 8
  br label %78

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 3
  %17 = load float*, float** %16, align 8
  %18 = icmp eq float* %17, null
  br i1 %18, label %19, label %28

19:                                               ; preds = %15
  %20 = icmp eq i64 %1, 0
  br i1 %20, label %75, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.webrtc::PushSincResampler", %"class.webrtc::PushSincResampler"* %0, i64 0, i32 4
  %23 = add i64 %1, -1
  %24 = and i64 %1, 3
  %25 = icmp ult i64 %23, 3
  br i1 %25, label %61, label %26

26:                                               ; preds = %21
  %27 = sub i64 %1, %24
  br label %32

28:                                               ; preds = %15
  %29 = bitcast float* %2 to i8*
  %30 = bitcast float* %17 to i8*
  %31 = shl i64 %1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* nonnull align 4 %30, i64 %31, i1 false)
  br label %75

32:                                               ; preds = %32, %26
  %33 = phi i64 [ 0, %26 ], [ %58, %32 ]
  %34 = phi i64 [ %27, %26 ], [ %59, %32 ]
  %35 = load i16*, i16** %22, align 8
  %36 = getelementptr inbounds i16, i16* %35, i64 %33
  %37 = load i16, i16* %36, align 2
  %38 = sitofp i16 %37 to float
  %39 = getelementptr inbounds float, float* %2, i64 %33
  store float %38, float* %39, align 4
  %40 = or i64 %33, 1
  %41 = load i16*, i16** %22, align 8
  %42 = getelementptr inbounds i16, i16* %41, i64 %40
  %43 = load i16, i16* %42, align 2
  %44 = sitofp i16 %43 to float
  %45 = getelementptr inbounds float, float* %2, i64 %40
  store float %44, float* %45, align 4
  %46 = or i64 %33, 2
  %47 = load i16*, i16** %22, align 8
  %48 = getelementptr inbounds i16, i16* %47, i64 %46
  %49 = load i16, i16* %48, align 2
  %50 = sitofp i16 %49 to float
  %51 = getelementptr inbounds float, float* %2, i64 %46
  store float %50, float* %51, align 4
  %52 = or i64 %33, 3
  %53 = load i16*, i16** %22, align 8
  %54 = getelementptr inbounds i16, i16* %53, i64 %52
  %55 = load i16, i16* %54, align 2
  %56 = sitofp i16 %55 to float
  %57 = getelementptr inbounds float, float* %2, i64 %52
  store float %56, float* %57, align 4
  %58 = add nuw i64 %33, 4
  %59 = add i64 %34, -4
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %32

61:                                               ; preds = %32, %21
  %62 = phi i64 [ 0, %21 ], [ %58, %32 ]
  %63 = icmp eq i64 %24, 0
  br i1 %63, label %75, label %64

64:                                               ; preds = %61, %64
  %65 = phi i64 [ %72, %64 ], [ %62, %61 ]
  %66 = phi i64 [ %73, %64 ], [ %24, %61 ]
  %67 = load i16*, i16** %22, align 8
  %68 = getelementptr inbounds i16, i16* %67, i64 %65
  %69 = load i16, i16* %68, align 2
  %70 = sitofp i16 %69 to float
  %71 = getelementptr inbounds float, float* %2, i64 %65
  store float %70, float* %71, align 4
  %72 = add nuw i64 %65, 1
  %73 = add i64 %66, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %64, !llvm.loop !3

75:                                               ; preds = %61, %64, %19, %28
  %76 = load i64, i64* %4, align 8
  %77 = sub i64 %76, %1
  store i64 %77, i64* %4, align 8
  br label %78

78:                                               ; preds = %75, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
