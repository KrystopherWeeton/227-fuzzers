; ModuleID = '../../third_party/blink/renderer/core/html/html_table_rows_collection.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_table_rows_collection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HTMLTableRowsCollection" = type { %"class.blink::HTMLCollection" }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.333", %"class.blink::CollectionItemsCache" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.19", i16 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.337", %"class.blink::HeapHashMap.337" }
%"class.blink::HeapHashMap.337" = type { %"class.WTF::HashMap.340" }
%"class.WTF::HashMap.340" = type { %"class.WTF::HashTable.341" }
%"class.WTF::HashTable.341" = type <{ %"struct.WTF::KeyValuePair.343"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.343" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.344" }
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::HeapVector"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.34"*, i32, i32 }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.19", %"class.blink::Member.21", %"class.blink::Member.0", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.69", %"class.WTF::Vector.69", i8, i32, %"class.blink::Member.80", %"class.blink::Member.82", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.93", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.99", %"class.blink::Member.101", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.104", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.34", %"class.blink::Member.119", %"class.blink::Member.34", %"class.blink::Member.34", %"class.blink::Member.34", %"class.blink::UserActionElementSet", %"class.blink::Member.128", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.135", i16, i8, %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::Member.148", %"class.blink::TextLinkColors", %"class.blink::Member.150", i8, [7 x i8], %"class.blink::HeapHashMap.152", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.34", %"class.WTF::Vector.159", %"class.blink::Member.164", %"class.blink::Member.166", i8, %"class.blink::Member.34", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.168", %"class.blink::HeapVector.170", %"class.std::__1::unique_ptr.178", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.184", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.196", %"class.WTF::Vector.198", i8, i8, %"class.std::__1::unique_ptr.203", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.209", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.217", i8, i32, %"class.blink::Member.219", %"class.blink::Member.221", %"class.blink::Member.223", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.225", %"class.WTF::HashMap.227", %"class.blink::Member.232", %"class.blink::Member.234", %"class.blink::Member.236", %"class.blink::Member.238", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.240", i8, i32, %"class.blink::Member.247", %"class.blink::Member.249", i32, %"class.blink::Member.251", %"class.blink::Member.253", %"class.blink::Member.255", %"class.std::__1::unique_ptr.257", i64, %"class.std::__1::unique_ptr.263", i32, i32, %"class.blink::Member.269", %"class.blink::Member.271", %"class.blink::Member.273", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.275", %"class.WTF::Vector.277", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.282", %"class.blink::Member.289", %"class.std::__1::unique_ptr.291", %"class.blink::Member.297", i8, i8, %"class.WTF::String", %"class.blink::Member.299", i8, [7 x i8], %"class.blink::HeapHashMap.301", %"class.blink::HeapObserverSet", %"class.blink::Member.315", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.317", i32, i8, i8, %"class.blink::WeakMember.319", %"class.blink::Member.320" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.62" }
%"class.blink::HeapHashMap.62" = type { %"class.WTF::HashMap.65" }
%"class.WTF::HashMap.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"struct.WTF::KeyValuePair.68"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.68" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.73" }
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i32 }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.121" }
%"class.blink::HeapHashMap.121" = type { %"class.WTF::HashMap.124" }
%"class.WTF::HashMap.124" = type { %"class.WTF::HashTable.125" }
%"class.WTF::HashTable.125" = type <{ %"struct.WTF::KeyValuePair.127"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.127" = type opaque
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.132" }
%"class.WTF::HashTable.132" = type <{ %"class.blink::WeakMember.134"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.134" = type opaque
%"class.blink::HeapHashSet.135" = type { %"class.WTF::HashSet.138" }
%"class.WTF::HashSet.138" = type { %"class.WTF::HashTable.139" }
%"class.WTF::HashTable.139" = type <{ %"class.blink::WeakMember.141"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.141" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.152" = type { %"class.WTF::HashMap.155" }
%"class.WTF::HashMap.155" = type { %"class.WTF::HashTable.156" }
%"class.WTF::HashTable.156" = type <{ %"struct.WTF::KeyValuePair.158"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.158" = type opaque
%"class.WTF::Vector.159" = type { %"class.WTF::VectorBuffer.160" }
%"class.WTF::VectorBuffer.160" = type { %"class.WTF::VectorBufferBase.161" }
%"class.WTF::VectorBufferBase.161" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.166" = type { %"class.blink::MemberBase.167" }
%"class.blink::MemberBase.167" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.170" = type { %"class.WTF::Vector.173" }
%"class.WTF::Vector.173" = type { %"class.WTF::VectorBuffer.174" }
%"class.WTF::VectorBuffer.174" = type { %"class.WTF::VectorBufferBase.175" }
%"class.WTF::VectorBufferBase.175" = type { %"class.blink::Member.176"*, i32, i32 }
%"class.blink::Member.176" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.184" = type { %"class.WTF::HashSet.187" }
%"class.WTF::HashSet.187" = type { %"class.WTF::HashTable.188" }
%"class.WTF::HashTable.188" = type <{ %"class.blink::WeakMember.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.190" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.191", i32, [4 x i8] }>
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.198" = type { %"class.WTF::VectorBuffer.199" }
%"class.WTF::VectorBuffer.199" = type { %"class.WTF::VectorBufferBase.200" }
%"class.WTF::VectorBufferBase.200" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.209" = type { %"class.WTF::Vector.212" }
%"class.WTF::Vector.212" = type { %"class.WTF::VectorBuffer.213" }
%"class.WTF::VectorBuffer.213" = type { %"class.WTF::VectorBufferBase.214" }
%"class.WTF::VectorBufferBase.214" = type { %"class.blink::Member.215"*, i32, i32 }
%"class.blink::Member.215" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.21" }
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.221" = type { %"class.blink::MemberBase.222" }
%"class.blink::MemberBase.222" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.225" = type { %"class.blink::MemberBase.226" }
%"class.blink::MemberBase.226" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"struct.WTF::KeyValuePair.231"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.231" = type opaque
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.110, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.110 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.111" }>
%"class.base::RefCountedThreadSafe.111" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.112 }
%class.scoped_refptr.112 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.113", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.113" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.114" }
%"struct.std::__1::atomic.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.22" }
%"class.blink::HeapHashSet.240" = type { %"class.WTF::HashSet.243" }
%"class.WTF::HashSet.243" = type { %"class.WTF::HashTable.244" }
%"class.WTF::HashTable.244" = type <{ %"class.blink::Member.246"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.246" = type opaque
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.282" = type { %"class.WTF::HashMap.285" }
%"class.WTF::HashMap.285" = type { %"class.WTF::HashTable.286" }
%"class.WTF::HashTable.286" = type <{ %"struct.WTF::KeyValuePair.288"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.288" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.297" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.299" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.301" = type { %"class.WTF::HashMap.304" }
%"class.WTF::HashMap.304" = type { %"class.WTF::HashTable.305" }
%"class.WTF::HashTable.305" = type <{ %"struct.WTF::KeyValuePair.307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.307" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.308" }
%"class.blink::HeapHashSet.308" = type { %"class.WTF::HashSet.311" }
%"class.WTF::HashSet.311" = type { %"class.WTF::HashTable.312" }
%"class.WTF::HashTable.312" = type <{ %"class.blink::WeakMember.314"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.314" = type opaque
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.21", %"class.blink::HeapHashSet.324", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.331", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.324" = type { %"class.WTF::HashSet.327" }
%"class.WTF::HashSet.327" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"class.blink::Member.330"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.330" = type opaque
%"class.blink::HeapTaskRunnerTimer.331" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.332", { i64, i64 } }
%"class.blink::WeakMember.332" = type { %"class.blink::MemberBase.318" }
%"class.blink::WeakMember.319" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.30" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.34", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.34", i32, i32 }
%"class.blink::HTMLTableElement" = type { %"class.blink::HTMLElement", i8, i8, i8, i32, i16, %"class.blink::Member.14" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::HTMLTableRowElement" = type { %"class.blink::HTMLTablePartElement" }
%"class.blink::HTMLTablePartElement" = type { %"class.blink::HTMLElement" }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.346", i32, [4 x i8], %"class.std::__1::unique_ptr.482", %"class.std::__1::unique_ptr.482", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.499", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.517", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.524", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.462", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.382" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.382" = type { %"struct.std::__1::__atomic_base.383" }
%"struct.std::__1::__atomic_base.383" = type { %"struct.std::__1::__atomic_base.384" }
%"struct.std::__1::__atomic_base.384" = type { %"struct.std::__1::__cxx_atomic_impl.385" }
%"struct.std::__1::__cxx_atomic_impl.385" = type { %"struct.std::__1::__cxx_atomic_base_impl.386" }
%"struct.std::__1::__cxx_atomic_base_impl.386" = type { i64 }
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.blink::Worklist.393"* }
%"class.blink::Worklist.393" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.382" }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::Worklist.400"* }
%"class.blink::Worklist.400" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.382" }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::Worklist.407"* }
%"class.blink::Worklist.407" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.382" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::Worklist.414"* }
%"class.blink::Worklist.414" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.382" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::Worklist.421"* }
%"class.blink::Worklist.421" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.382" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::Worklist.428"* }
%"class.blink::Worklist.428" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.382" }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::Worklist.435"* }
%"class.blink::Worklist.435" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.382" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.442", %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.454", %"class.std::__1::__compressed_pair.456", [4 x i8] }>
%"class.std::__1::unique_ptr.442" = type { %"class.std::__1::__compressed_pair.443" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444", %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { i64 }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { float }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.465", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.474" }
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.490" }
%"class.WTF::VectorBuffer.490" = type { %"class.WTF::VectorBufferBase.491" }
%"class.WTF::VectorBufferBase.491" = type { %"struct.std::__1::pair.492"*, i32, i32 }
%"struct.std::__1::pair.492" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.505" }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.393"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.400"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.407"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.414"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.421"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.528" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.523 }
%class.scoped_refptr.523 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.524" = type { %"struct.std::__1::__atomic_base.525" }
%"struct.std::__1::__atomic_base.525" = type { %"struct.std::__1::__cxx_atomic_impl.526" }
%"struct.std::__1::__cxx_atomic_impl.526" = type { %"struct.std::__1::__cxx_atomic_base_impl.527" }
%"struct.std::__1::__cxx_atomic_base_impl.527" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type opaque
%"class.WTF::Vector.535" = type opaque

$_ZN5blink23HTMLTableRowsCollectionD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink14HTMLCollection18GetWrapperTypeInfoEv = comdat any

$_ZThn16_N5blink23HTMLTableRowsCollectionD1Ev = comdat any

$_ZThn16_N5blink23HTMLTableRowsCollectionD0Ev = comdat any

@_ZN5blink10html_names9kTheadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTfootTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink23HTMLTableRowsCollectionE = hidden unnamed_addr constant { [16 x i8*], [6 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*)* @_ZN5blink14HTMLCollectionD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLTableRowsCollection"*)* @_ZN5blink23HTMLTableRowsCollectionD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)* @_ZNK5blink14HTMLCollection5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLCollection"*)* @_ZNK5blink14HTMLCollection18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)* @_ZNK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"*)* @_ZNK5blink14HTMLCollection9namedItemERKN3WTF12AtomicStringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::HTMLTableRowsCollection"*, %"class.blink::Element"*)* @_ZNK5blink23HTMLTableRowsCollection16VirtualItemAfterEPNS_7ElementE to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.WTF::Vector.535"*)* @_ZN5blink14HTMLCollection22SupportedPropertyNamesERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*)* @_ZNK5blink14HTMLCollection17UpdateIdNameCacheEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink14HTMLCollection5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLTableRowsCollection"*)* @_ZThn16_N5blink23HTMLTableRowsCollectionD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLTableRowsCollection"*)* @_ZThn16_N5blink23HTMLTableRowsCollectionD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLCollection"*, %"class.blink::Document"*)* @_ZThn16_NK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE to i8*)] }, align 8
@_ZN5blink14HTMLCollection18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink10html_names6kTrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink23HTMLTableRowsCollectionC1ERNS_13ContainerNodeE = hidden unnamed_addr alias void (%"class.blink::HTMLTableRowsCollection"*, %"class.blink::ContainerNode"*), void (%"class.blink::HTMLTableRowsCollection"*, %"class.blink::ContainerNode"*)* @_ZN5blink23HTMLTableRowsCollectionC2ERNS_13ContainerNodeE
@_ZN5blink23HTMLTableRowsCollectionC1ERNS_13ContainerNodeENS_14CollectionTypeE = hidden unnamed_addr alias void (%"class.blink::HTMLTableRowsCollection"*, %"class.blink::ContainerNode"*, i32), void (%"class.blink::HTMLTableRowsCollection"*, %"class.blink::ContainerNode"*, i32)* @_ZN5blink23HTMLTableRowsCollectionC2ERNS_13ContainerNodeENS_14CollectionTypeE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLTableRowElement"* @_ZN5blink23HTMLTableRowsCollection8RowAfterERNS_16HTMLTableElementEPNS_19HTMLTableRowElementE(%"class.blink::HTMLTableElement"* readonly dereferenceable(128), %"class.blink::HTMLTableRowElement"*) local_unnamed_addr #0 align 2 {
  %3 = icmp ne %"class.blink::HTMLTableRowElement"* %1, null
  br i1 %3, label %4, label %39

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::HTMLTableRowElement", %"class.blink::HTMLTableRowElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %5) #5
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HTMLTableElement", %"class.blink::HTMLTableElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = icmp eq %"class.blink::Node"* %7, %8
  br i1 %9, label %53, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::HTMLTableRowElement", %"class.blink::HTMLTableRowElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %53, label %14

14:                                               ; preds = %10
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %15, i64 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %33, %14
  %18 = phi %"class.blink::Node"* [ %12, %14 ], [ %35, %33 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 48
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %17
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %26 = bitcast %"class.blink::Member"* %25 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %23, %17
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 5, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %53, label %17

37:                                               ; preds = %23
  %38 = bitcast %"class.blink::Node"* %18 to %"class.blink::HTMLTableRowElement"*
  br label %381

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.blink::HTMLTableElement", %"class.blink::HTMLTableElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %79, label %43

43:                                               ; preds = %39, %49
  %44 = phi %"class.blink::Node"* [ %51, %49 ], [ %41, %39 ]
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 48
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %79, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 5, i32 0, i32 0
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %79, label %43

53:                                               ; preds = %33, %10, %4
  %54 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE, align 8
  %55 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %5) #5
  %56 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %54, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %55, i64 1, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %62, %64
  br i1 %65, label %66, label %134

66:                                               ; preds = %53
  %67 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %5) #5
  %68 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %67, i64 0, i32 0
  br label %69

69:                                               ; preds = %74, %66
  %70 = phi %"class.blink::Node"* [ %68, %66 ], [ %72, %74 ]
  %71 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %70, i64 0, i32 5, i32 0, i32 0
  %72 = load %"class.blink::Node"*, %"class.blink::Node"** %71, align 8
  %73 = icmp eq %"class.blink::Node"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %72, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = and i32 %76, 48
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %69

79:                                               ; preds = %49, %43, %74, %69, %39
  %80 = phi %"class.blink::Node"* [ null, %39 ], [ %72, %69 ], [ %72, %74 ], [ %44, %43 ], [ null, %49 ]
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %134, label %82

82:                                               ; preds = %79
  %83 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE, align 8
  %84 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %89 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %88, i64 0, i32 0, i32 0, i32 0
  br label %90

90:                                               ; preds = %129, %82
  %91 = phi %"class.blink::Node"* [ %80, %82 ], [ %127, %129 ]
  %92 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 1, i32 2
  %93 = bitcast %"class.blink::Member"* %92 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, %87
  br i1 %97, label %98, label %123

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 1
  %100 = bitcast %"class.blink::Node"* %99 to %"class.blink::Node"**
  %101 = load %"class.blink::Node"*, %"class.blink::Node"** %100, align 8
  %102 = icmp eq %"class.blink::Node"* %101, null
  br i1 %102, label %123, label %103

103:                                              ; preds = %98, %119
  %104 = phi %"class.blink::Node"* [ %121, %119 ], [ %101, %98 ]
  %105 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %104, i64 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 48
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %119

109:                                              ; preds = %103
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %104, i64 1, i32 2
  %112 = bitcast %"class.blink::Member"* %111 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %113 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %115, %117
  br i1 %118, label %377, label %119

119:                                              ; preds = %109, %103
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %104, i64 0, i32 5, i32 0, i32 0
  %121 = load %"class.blink::Node"*, %"class.blink::Node"** %120, align 8
  %122 = icmp eq %"class.blink::Node"* %121, null
  br i1 %122, label %123, label %103

123:                                              ; preds = %119, %98, %90
  br label %124

124:                                              ; preds = %123, %129
  %125 = phi %"class.blink::Node"* [ %127, %129 ], [ %91, %123 ]
  %126 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 0, i32 5, i32 0, i32 0
  %127 = load %"class.blink::Node"*, %"class.blink::Node"** %126, align 8
  %128 = icmp eq %"class.blink::Node"* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %127, i64 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = and i32 %131, 48
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %90, label %124

134:                                              ; preds = %124, %53, %79
  br i1 %3, label %135, label %149

135:                                              ; preds = %134
  %136 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE, align 8
  %137 = getelementptr inbounds %"class.blink::HTMLTableRowElement", %"class.blink::HTMLTableRowElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %137) #5
  %139 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %136, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %138, i64 1, i32 0, i32 0, i32 0, i32 1
  %142 = bitcast %"class.blink::TraceWrapperV8Reference"* %141 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %143 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %143, i64 0, i32 3, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %140, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %145, %147
  br i1 %148, label %149, label %163

149:                                              ; preds = %135, %134
  %150 = getelementptr inbounds %"class.blink::HTMLTableElement", %"class.blink::HTMLTableElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %151 = load %"class.blink::Node"*, %"class.blink::Node"** %150, align 8
  %152 = icmp eq %"class.blink::Node"* %151, null
  br i1 %152, label %204, label %153

153:                                              ; preds = %149, %159
  %154 = phi %"class.blink::Node"* [ %161, %159 ], [ %151, %149 ]
  %155 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %154, i64 0, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = and i32 %156, 48
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %204, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %154, i64 0, i32 5, i32 0, i32 0
  %161 = load %"class.blink::Node"*, %"class.blink::Node"** %160, align 8
  %162 = icmp eq %"class.blink::Node"* %161, null
  br i1 %162, label %204, label %153

163:                                              ; preds = %135
  %164 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %137) #5
  %165 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %164, i64 0, i32 0
  %166 = getelementptr inbounds %"class.blink::HTMLTableElement", %"class.blink::HTMLTableElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = icmp eq %"class.blink::Node"* %165, %166
  br i1 %167, label %168, label %178

168:                                              ; preds = %163, %173
  %169 = phi %"class.blink::Node"* [ %171, %173 ], [ %137, %163 ]
  %170 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %169, i64 0, i32 5, i32 0, i32 0
  %171 = load %"class.blink::Node"*, %"class.blink::Node"** %170, align 8
  %172 = icmp eq %"class.blink::Node"* %171, null
  br i1 %172, label %204, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %171, i64 0, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = and i32 %175, 48
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %204, label %168

178:                                              ; preds = %163
  %179 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %180 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %137) #5
  %181 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %179, i64 0, i32 0, i32 0, i32 0
  %182 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %180, i64 1, i32 0, i32 0, i32 0, i32 1
  %184 = bitcast %"class.blink::TraceWrapperV8Reference"* %183 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %185 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %185, i64 0, i32 3, i32 0, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %182, i64 0, i32 3, i32 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %187, %189
  br i1 %190, label %191, label %281

191:                                              ; preds = %178
  %192 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %137) #5
  %193 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %192, i64 0, i32 0
  br label %194

194:                                              ; preds = %199, %191
  %195 = phi %"class.blink::Node"* [ %193, %191 ], [ %197, %199 ]
  %196 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %195, i64 0, i32 5, i32 0, i32 0
  %197 = load %"class.blink::Node"*, %"class.blink::Node"** %196, align 8
  %198 = icmp eq %"class.blink::Node"* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %197, i64 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = and i32 %201, 48
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %194

204:                                              ; preds = %199, %194, %173, %168, %159, %153, %149
  %205 = phi %"class.blink::Node"* [ null, %149 ], [ %154, %153 ], [ null, %159 ], [ %171, %168 ], [ %171, %173 ], [ %197, %194 ], [ %197, %199 ]
  %206 = icmp eq %"class.blink::Node"* %205, null
  br i1 %206, label %280, label %207

207:                                              ; preds = %204
  %208 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %209 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %208, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %211 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %210, i64 0, i32 0, i32 0, i32 0
  br label %212

212:                                              ; preds = %275, %207
  %213 = phi %"class.blink::Node"* [ %205, %207 ], [ %273, %275 ]
  %214 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %213, i64 0, i32 1
  %215 = load i32, i32* %214, align 8
  %216 = and i32 %215, 48
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %224, label %218

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %213, i64 1, i32 2
  %220 = bitcast %"class.blink::Member"* %219 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %221 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %221, i64 0, i32 3, i32 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  br label %236

224:                                              ; preds = %212
  %225 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %209, align 8
  %226 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %213, i64 1, i32 2
  %227 = bitcast %"class.blink::Member"* %226 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %228 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %228, i64 0, i32 3, i32 0, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %225, i64 0, i32 3, i32 0, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp ne %"class.WTF::StringImpl"* %230, %232
  %234 = icmp eq %"class.blink::Node"* %213, null
  %235 = or i1 %234, %233
  br i1 %235, label %236, label %379

236:                                              ; preds = %218, %224
  %237 = phi %"class.WTF::StringImpl"* [ %230, %224 ], [ %223, %218 ]
  %238 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %211, align 8
  %239 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %238, i64 0, i32 3, i32 0, i32 0, i32 0
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %237, %240
  br i1 %241, label %243, label %242

242:                                              ; preds = %264, %243, %236
  br label %270

243:                                              ; preds = %236
  %244 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %213, i64 1
  %245 = bitcast %"class.blink::Node"* %244 to %"class.blink::Node"**
  %246 = load %"class.blink::Node"*, %"class.blink::Node"** %245, align 8
  %247 = icmp eq %"class.blink::Node"* %246, null
  br i1 %247, label %242, label %248

248:                                              ; preds = %243, %264
  %249 = phi %"class.blink::Node"* [ %266, %264 ], [ %246, %243 ]
  %250 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %249, i64 0, i32 1
  %251 = load i32, i32* %250, align 8
  %252 = and i32 %251, 48
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %264

254:                                              ; preds = %248
  %255 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %209, align 8
  %256 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %249, i64 1, i32 2
  %257 = bitcast %"class.blink::Member"* %256 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %258 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %257, align 8
  %259 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %258, i64 0, i32 3, i32 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %255, i64 0, i32 3, i32 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %260, %262
  br i1 %263, label %268, label %264

264:                                              ; preds = %254, %248
  %265 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %249, i64 0, i32 5, i32 0, i32 0
  %266 = load %"class.blink::Node"*, %"class.blink::Node"** %265, align 8
  %267 = icmp eq %"class.blink::Node"* %266, null
  br i1 %267, label %242, label %248

268:                                              ; preds = %254
  %269 = bitcast %"class.blink::Node"* %249 to %"class.blink::HTMLTableRowElement"*
  br label %381

270:                                              ; preds = %242, %275
  %271 = phi %"class.blink::Node"* [ %273, %275 ], [ %213, %242 ]
  %272 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %271, i64 0, i32 5, i32 0, i32 0
  %273 = load %"class.blink::Node"*, %"class.blink::Node"** %272, align 8
  %274 = icmp eq %"class.blink::Node"* %273, null
  br i1 %274, label %280, label %275

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %273, i64 0, i32 1
  %277 = load i32, i32* %276, align 8
  %278 = and i32 %277, 48
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %212, label %270

280:                                              ; preds = %270, %204
  br i1 %3, label %281, label %295

281:                                              ; preds = %178, %280
  %282 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE, align 8
  %283 = getelementptr inbounds %"class.blink::HTMLTableRowElement", %"class.blink::HTMLTableRowElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %283) #5
  %285 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %282, i64 0, i32 0, i32 0, i32 0
  %286 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %285, align 8
  %287 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %284, i64 1, i32 0, i32 0, i32 0, i32 1
  %288 = bitcast %"class.blink::TraceWrapperV8Reference"* %287 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %289 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %288, align 8
  %290 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %289, i64 0, i32 3, i32 0, i32 0, i32 0
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %290, align 8
  %292 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %286, i64 0, i32 3, i32 0, i32 0, i32 0
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %291, %293
  br i1 %294, label %309, label %295

295:                                              ; preds = %281, %280
  %296 = getelementptr inbounds %"class.blink::HTMLTableElement", %"class.blink::HTMLTableElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %297 = load %"class.blink::Node"*, %"class.blink::Node"** %296, align 8
  %298 = icmp eq %"class.blink::Node"* %297, null
  br i1 %298, label %381, label %299

299:                                              ; preds = %295, %305
  %300 = phi %"class.blink::Node"* [ %307, %305 ], [ %297, %295 ]
  %301 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %300, i64 0, i32 1
  %302 = load i32, i32* %301, align 8
  %303 = and i32 %302, 48
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %322, label %305

305:                                              ; preds = %299
  %306 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %300, i64 0, i32 5, i32 0, i32 0
  %307 = load %"class.blink::Node"*, %"class.blink::Node"** %306, align 8
  %308 = icmp eq %"class.blink::Node"* %307, null
  br i1 %308, label %381, label %299

309:                                              ; preds = %281
  %310 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %283) #5
  %311 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %310, i64 0, i32 0
  br label %312

312:                                              ; preds = %317, %309
  %313 = phi %"class.blink::Node"* [ %311, %309 ], [ %315, %317 ]
  %314 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %313, i64 0, i32 5, i32 0, i32 0
  %315 = load %"class.blink::Node"*, %"class.blink::Node"** %314, align 8
  %316 = icmp eq %"class.blink::Node"* %315, null
  br i1 %316, label %381, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %315, i64 0, i32 1
  %319 = load i32, i32* %318, align 8
  %320 = and i32 %319, 48
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %312

322:                                              ; preds = %299, %317
  %323 = phi %"class.blink::Node"* [ %315, %317 ], [ %300, %299 ]
  %324 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE, align 8
  %325 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %324, i64 0, i32 0, i32 0, i32 0
  %326 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %325, align 8
  %327 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %326, i64 0, i32 3, i32 0, i32 0, i32 0
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %327, align 8
  %329 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %330 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %329, i64 0, i32 0, i32 0, i32 0
  br label %331

331:                                              ; preds = %372, %322
  %332 = phi %"class.blink::Node"* [ %323, %322 ], [ %370, %372 ]
  %333 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %332, i64 1, i32 2
  %334 = bitcast %"class.blink::Member"* %333 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %335 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %334, align 8
  %336 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %335, i64 0, i32 3, i32 0, i32 0, i32 0
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, %328
  br i1 %338, label %340, label %339

339:                                              ; preds = %361, %340, %331
  br label %367

340:                                              ; preds = %331
  %341 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %332, i64 1
  %342 = bitcast %"class.blink::Node"* %341 to %"class.blink::Node"**
  %343 = load %"class.blink::Node"*, %"class.blink::Node"** %342, align 8
  %344 = icmp eq %"class.blink::Node"* %343, null
  br i1 %344, label %339, label %345

345:                                              ; preds = %340, %361
  %346 = phi %"class.blink::Node"* [ %363, %361 ], [ %343, %340 ]
  %347 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %346, i64 0, i32 1
  %348 = load i32, i32* %347, align 8
  %349 = and i32 %348, 48
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %361

351:                                              ; preds = %345
  %352 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %330, align 8
  %353 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %346, i64 1, i32 2
  %354 = bitcast %"class.blink::Member"* %353 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %355 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %354, align 8
  %356 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %355, i64 0, i32 3, i32 0, i32 0, i32 0
  %357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %358 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %352, i64 0, i32 3, i32 0, i32 0, i32 0
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %357, %359
  br i1 %360, label %365, label %361

361:                                              ; preds = %351, %345
  %362 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %346, i64 0, i32 5, i32 0, i32 0
  %363 = load %"class.blink::Node"*, %"class.blink::Node"** %362, align 8
  %364 = icmp eq %"class.blink::Node"* %363, null
  br i1 %364, label %339, label %345

365:                                              ; preds = %351
  %366 = bitcast %"class.blink::Node"* %346 to %"class.blink::HTMLTableRowElement"*
  br label %381

367:                                              ; preds = %339, %372
  %368 = phi %"class.blink::Node"* [ %370, %372 ], [ %332, %339 ]
  %369 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %368, i64 0, i32 5, i32 0, i32 0
  %370 = load %"class.blink::Node"*, %"class.blink::Node"** %369, align 8
  %371 = icmp eq %"class.blink::Node"* %370, null
  br i1 %371, label %381, label %372

372:                                              ; preds = %367
  %373 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %370, i64 0, i32 1
  %374 = load i32, i32* %373, align 8
  %375 = and i32 %374, 48
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %331, label %367

377:                                              ; preds = %109
  %378 = bitcast %"class.blink::Node"* %104 to %"class.blink::HTMLTableRowElement"*
  br label %381

379:                                              ; preds = %224
  %380 = bitcast %"class.blink::Node"* %213 to %"class.blink::HTMLTableRowElement"*
  br label %381

381:                                              ; preds = %305, %312, %367, %379, %295, %268, %365, %37, %377
  %382 = phi %"class.blink::HTMLTableRowElement"* [ %38, %37 ], [ %378, %377 ], [ %366, %365 ], [ %269, %268 ], [ null, %295 ], [ %380, %379 ], [ null, %367 ], [ null, %312 ], [ null, %305 ]
  ret %"class.blink::HTMLTableRowElement"* %382
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::HTMLTableRowElement"* @_ZN5blink23HTMLTableRowsCollection7LastRowERNS_16HTMLTableElementE(%"class.blink::HTMLTableElement"* nocapture readonly dereferenceable(128)) local_unnamed_addr #2 align 2 {
  %2 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLTableElement", %"class.blink::HTMLTableElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %324, label %6

6:                                                ; preds = %1, %12
  %7 = phi %"class.blink::Node"* [ %14, %12 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 48
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %120, label %6

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %22 = bitcast %"class.blink::Member"* %21 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, %20
  br i1 %26, label %45, label %34

27:                                               ; preds = %39
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 1, i32 2
  %29 = bitcast %"class.blink::Member"* %28 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, %20
  br i1 %33, label %45, label %44

34:                                               ; preds = %16, %44
  %35 = phi %"class.blink::Node"* [ %37, %44 ], [ %7, %16 ]
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 4, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %120, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 48
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %27, label %44

44:                                               ; preds = %39, %27
  br label %34

45:                                               ; preds = %27, %16
  %46 = phi %"class.blink::Node"* [ %7, %16 ], [ %37, %27 ]
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %120, label %48

48:                                               ; preds = %45
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %48, %117
  %53 = phi %"class.blink::Node"* [ %46, %48 ], [ %118, %117 ]
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 1, i32 0, i32 0, i32 1
  %55 = bitcast %"class.blink::TraceWrapperV8Reference"* %54 to %"class.blink::Node"**
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %78, label %58

58:                                               ; preds = %52, %74
  %59 = phi %"class.blink::Node"* [ %76, %74 ], [ %56, %52 ]
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 48
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %74

64:                                               ; preds = %58
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 1, i32 2
  %67 = bitcast %"class.blink::Member"* %66 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 3, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %70, %72
  br i1 %73, label %322, label %74

74:                                               ; preds = %64, %58
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 0, i32 4, i32 0, i32 0
  %76 = load %"class.blink::Node"*, %"class.blink::Node"** %75, align 8
  %77 = icmp eq %"class.blink::Node"* %76, null
  br i1 %77, label %78, label %58

78:                                               ; preds = %74, %52
  br label %79

79:                                               ; preds = %78, %84
  %80 = phi %"class.blink::Node"* [ %82, %84 ], [ %53, %78 ]
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %80, i64 0, i32 4, i32 0, i32 0
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %81, align 8
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %120, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 48
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %79

89:                                               ; preds = %84
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 1, i32 2
  %94 = bitcast %"class.blink::Member"* %93 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %95 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, %92
  br i1 %98, label %117, label %106

99:                                               ; preds = %111
  %100 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 1, i32 2
  %101 = bitcast %"class.blink::Member"* %100 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, %92
  br i1 %105, label %117, label %116

106:                                              ; preds = %89, %116
  %107 = phi %"class.blink::Node"* [ %109, %116 ], [ %82, %89 ]
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 4, i32 0, i32 0
  %109 = load %"class.blink::Node"*, %"class.blink::Node"** %108, align 8
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %120, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 48
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %99, label %116

116:                                              ; preds = %111, %99
  br label %106

117:                                              ; preds = %99, %89
  %118 = phi %"class.blink::Node"* [ %82, %89 ], [ %109, %99 ]
  %119 = icmp eq %"class.blink::Node"* %118, null
  br i1 %119, label %120, label %52

120:                                              ; preds = %12, %34, %117, %79, %106, %45
  br i1 %5, label %324, label %121

121:                                              ; preds = %120, %127
  %122 = phi %"class.blink::Node"* [ %129, %127 ], [ %4, %120 ]
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %122, i64 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 48
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %122, i64 0, i32 4, i32 0, i32 0
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %128, align 8
  %130 = icmp eq %"class.blink::Node"* %129, null
  br i1 %130, label %202, label %121

131:                                              ; preds = %121
  %132 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %133 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %135 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %134, i64 0, i32 0, i32 0, i32 0
  br label %136

136:                                              ; preds = %197, %131
  %137 = phi %"class.blink::Node"* [ %122, %131 ], [ %195, %197 ]
  %138 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %137, i64 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = and i32 %139, 48
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %137, i64 1, i32 2
  %144 = bitcast %"class.blink::Member"* %143 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  br label %160

148:                                              ; preds = %136
  %149 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %150 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %137, i64 1, i32 2
  %151 = bitcast %"class.blink::Member"* %150 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %152 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 3, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %149, i64 0, i32 3, i32 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %154, %156
  br i1 %157, label %158, label %160

158:                                              ; preds = %148
  %159 = bitcast %"class.blink::Node"* %137 to %"class.blink::HTMLTableRowElement"*
  br label %324

160:                                              ; preds = %142, %148
  %161 = phi %"class.WTF::StringImpl"* [ %147, %142 ], [ %154, %148 ]
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %135, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %161, %164
  br i1 %165, label %166, label %191

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %137, i64 1, i32 0, i32 0, i32 1
  %168 = bitcast %"class.blink::TraceWrapperV8Reference"* %167 to %"class.blink::Node"**
  %169 = load %"class.blink::Node"*, %"class.blink::Node"** %168, align 8
  %170 = icmp eq %"class.blink::Node"* %169, null
  br i1 %170, label %191, label %171

171:                                              ; preds = %166, %187
  %172 = phi %"class.blink::Node"* [ %189, %187 ], [ %169, %166 ]
  %173 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %172, i64 0, i32 1
  %174 = load i32, i32* %173, align 8
  %175 = and i32 %174, 48
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %187

177:                                              ; preds = %171
  %178 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %179 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %172, i64 1, i32 2
  %180 = bitcast %"class.blink::Member"* %179 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %181 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %181, i64 0, i32 3, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %178, i64 0, i32 3, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %183, %185
  br i1 %186, label %320, label %187

187:                                              ; preds = %177, %171
  %188 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %172, i64 0, i32 4, i32 0, i32 0
  %189 = load %"class.blink::Node"*, %"class.blink::Node"** %188, align 8
  %190 = icmp eq %"class.blink::Node"* %189, null
  br i1 %190, label %191, label %171

191:                                              ; preds = %187, %166, %160
  br label %192

192:                                              ; preds = %191, %197
  %193 = phi %"class.blink::Node"* [ %195, %197 ], [ %137, %191 ]
  %194 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %193, i64 0, i32 4, i32 0, i32 0
  %195 = load %"class.blink::Node"*, %"class.blink::Node"** %194, align 8
  %196 = icmp eq %"class.blink::Node"* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %195, i64 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = and i32 %199, 48
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %136, label %192

202:                                              ; preds = %127, %192
  %203 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE, align 8
  br i1 %5, label %324, label %204

204:                                              ; preds = %202, %210
  %205 = phi %"class.blink::Node"* [ %212, %210 ], [ %4, %202 ]
  %206 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %205, i64 0, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = and i32 %207, 48
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %214, label %210

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %205, i64 0, i32 4, i32 0, i32 0
  %212 = load %"class.blink::Node"*, %"class.blink::Node"** %211, align 8
  %213 = icmp eq %"class.blink::Node"* %212, null
  br i1 %213, label %324, label %204

214:                                              ; preds = %204
  %215 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %203, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %215, align 8
  %217 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %216, i64 0, i32 3, i32 0, i32 0, i32 0
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %205, i64 1, i32 2
  %220 = bitcast %"class.blink::Member"* %219 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %221 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %221, i64 0, i32 3, i32 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, %218
  br i1 %224, label %243, label %232

225:                                              ; preds = %237
  %226 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 1, i32 2
  %227 = bitcast %"class.blink::Member"* %226 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %228 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %228, i64 0, i32 3, i32 0, i32 0, i32 0
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, %218
  br i1 %231, label %243, label %242

232:                                              ; preds = %214, %242
  %233 = phi %"class.blink::Node"* [ %235, %242 ], [ %205, %214 ]
  %234 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %233, i64 0, i32 4, i32 0, i32 0
  %235 = load %"class.blink::Node"*, %"class.blink::Node"** %234, align 8
  %236 = icmp eq %"class.blink::Node"* %235, null
  br i1 %236, label %324, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %235, i64 0, i32 1
  %239 = load i32, i32* %238, align 8
  %240 = and i32 %239, 48
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %225, label %242

242:                                              ; preds = %237, %225
  br label %232

243:                                              ; preds = %225, %214
  %244 = phi %"class.blink::Node"* [ %205, %214 ], [ %235, %225 ]
  %245 = icmp eq %"class.blink::Node"* %244, null
  br i1 %245, label %324, label %246

246:                                              ; preds = %243
  %247 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %248 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %247, i64 0, i32 0, i32 0, i32 0
  %249 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %203, i64 0, i32 0, i32 0, i32 0
  br label %250

250:                                              ; preds = %246, %315
  %251 = phi %"class.blink::Node"* [ %244, %246 ], [ %316, %315 ]
  %252 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %251, i64 1, i32 0, i32 0, i32 1
  %253 = bitcast %"class.blink::TraceWrapperV8Reference"* %252 to %"class.blink::Node"**
  %254 = load %"class.blink::Node"*, %"class.blink::Node"** %253, align 8
  %255 = icmp eq %"class.blink::Node"* %254, null
  br i1 %255, label %276, label %256

256:                                              ; preds = %250, %272
  %257 = phi %"class.blink::Node"* [ %274, %272 ], [ %254, %250 ]
  %258 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %257, i64 0, i32 1
  %259 = load i32, i32* %258, align 8
  %260 = and i32 %259, 48
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %272

262:                                              ; preds = %256
  %263 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %248, align 8
  %264 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %257, i64 1, i32 2
  %265 = bitcast %"class.blink::Member"* %264 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %266 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %265, align 8
  %267 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %266, i64 0, i32 3, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %263, i64 0, i32 3, i32 0, i32 0, i32 0
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %269, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %268, %270
  br i1 %271, label %318, label %272

272:                                              ; preds = %262, %256
  %273 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %257, i64 0, i32 4, i32 0, i32 0
  %274 = load %"class.blink::Node"*, %"class.blink::Node"** %273, align 8
  %275 = icmp eq %"class.blink::Node"* %274, null
  br i1 %275, label %276, label %256

276:                                              ; preds = %272, %250
  br label %277

277:                                              ; preds = %276, %282
  %278 = phi %"class.blink::Node"* [ %280, %282 ], [ %251, %276 ]
  %279 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %278, i64 0, i32 4, i32 0, i32 0
  %280 = load %"class.blink::Node"*, %"class.blink::Node"** %279, align 8
  %281 = icmp eq %"class.blink::Node"* %280, null
  br i1 %281, label %324, label %282

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %280, i64 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = and i32 %284, 48
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %277

287:                                              ; preds = %282
  %288 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %249, align 8
  %289 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %288, i64 0, i32 3, i32 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %280, i64 1, i32 2
  %292 = bitcast %"class.blink::Member"* %291 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %293 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %292, align 8
  %294 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %293, i64 0, i32 3, i32 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, %290
  br i1 %296, label %315, label %304

297:                                              ; preds = %309
  %298 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %307, i64 1, i32 2
  %299 = bitcast %"class.blink::Member"* %298 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %300 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %300, i64 0, i32 3, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, %290
  br i1 %303, label %315, label %314

304:                                              ; preds = %287, %314
  %305 = phi %"class.blink::Node"* [ %307, %314 ], [ %280, %287 ]
  %306 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %305, i64 0, i32 4, i32 0, i32 0
  %307 = load %"class.blink::Node"*, %"class.blink::Node"** %306, align 8
  %308 = icmp eq %"class.blink::Node"* %307, null
  br i1 %308, label %324, label %309

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %307, i64 0, i32 1
  %311 = load i32, i32* %310, align 8
  %312 = and i32 %311, 48
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %297, label %314

314:                                              ; preds = %309, %297
  br label %304

315:                                              ; preds = %297, %287
  %316 = phi %"class.blink::Node"* [ %280, %287 ], [ %307, %297 ]
  %317 = icmp eq %"class.blink::Node"* %316, null
  br i1 %317, label %324, label %250

318:                                              ; preds = %262
  %319 = bitcast %"class.blink::Node"* %257 to %"class.blink::HTMLTableRowElement"*
  br label %324

320:                                              ; preds = %177
  %321 = bitcast %"class.blink::Node"* %172 to %"class.blink::HTMLTableRowElement"*
  br label %324

322:                                              ; preds = %64
  %323 = bitcast %"class.blink::Node"* %59 to %"class.blink::HTMLTableRowElement"*
  br label %324

324:                                              ; preds = %210, %232, %315, %277, %304, %1, %120, %202, %243, %318, %322, %320, %158
  %325 = phi %"class.blink::HTMLTableRowElement"* [ %159, %158 ], [ %321, %320 ], [ %323, %322 ], [ %319, %318 ], [ null, %243 ], [ null, %202 ], [ null, %120 ], [ null, %1 ], [ null, %304 ], [ null, %277 ], [ null, %315 ], [ null, %232 ], [ null, %210 ]
  ret %"class.blink::HTMLTableRowElement"* %325
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23HTMLTableRowsCollectionC2ERNS_13ContainerNodeE(%"class.blink::HTMLTableRowsCollection"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 0, i32 0
  tail call void @_ZN5blink14HTMLCollectionC2ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE(%"class.blink::HTMLCollection"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 11, i32 0) #5
  %4 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink23HTMLTableRowsCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink23HTMLTableRowsCollectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN5blink14HTMLCollectionC2ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE(%"class.blink::HTMLCollection"*, %"class.blink::ContainerNode"* dereferenceable(80), i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23HTMLTableRowsCollectionC2ERNS_13ContainerNodeENS_14CollectionTypeE(%"class.blink::HTMLTableRowsCollection"*, %"class.blink::ContainerNode"* dereferenceable(80), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 0, i32 0
  tail call void @_ZN5blink14HTMLCollectionC2ERNS_13ContainerNodeENS_14CollectionTypeENS0_21ItemAfterOverrideTypeE(%"class.blink::HTMLCollection"* %4, %"class.blink::ContainerNode"* dereferenceable(80) %1, i32 11, i32 0) #5
  %5 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink23HTMLTableRowsCollectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink23HTMLTableRowsCollectionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink23HTMLTableRowsCollection16VirtualItemAfterEPNS_7ElementE(%"class.blink::HTMLTableRowsCollection"* nocapture readonly, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %4 = bitcast %"class.blink::ContainerNode"** %3 to %"class.blink::HTMLTableElement"**
  %5 = load %"class.blink::HTMLTableElement"*, %"class.blink::HTMLTableElement"** %4, align 8
  %6 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLTableRowElement"*
  %7 = tail call %"class.blink::HTMLTableRowElement"* @_ZN5blink23HTMLTableRowsCollection8RowAfterERNS_16HTMLTableElementEPNS_19HTMLTableRowElementE(%"class.blink::HTMLTableElement"* dereferenceable(128) %5, %"class.blink::HTMLTableRowElement"* %6)
  %8 = getelementptr inbounds %"class.blink::HTMLTableRowElement", %"class.blink::HTMLTableRowElement"* %7, i64 0, i32 0, i32 0, i32 0
  ret %"class.blink::Element"* %8
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14HTMLCollectionD2Ev(%"class.blink::HTMLCollection"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23HTMLTableRowsCollectionD0Ev(%"class.blink::HTMLTableRowsCollection"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 0, i32 0
  tail call void @_ZN5blink14HTMLCollectionD2Ev(%"class.blink::HTMLCollection"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink14HTMLCollection5TraceEPNS_7VisitorE(%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink14HTMLCollection18GetWrapperTypeInfoEv(%"class.blink::HTMLCollection"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14HTMLCollection18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare void @_ZNK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE(%"class.blink::HTMLCollection"*, %"class.blink::Document"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink14HTMLCollection9namedItemERKN3WTF12AtomicStringE(%"class.blink::HTMLCollection"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink14HTMLCollection22SupportedPropertyNamesERN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::HTMLCollection"*, %"class.WTF::Vector.535"*) unnamed_addr #1

declare void @_ZNK5blink14HTMLCollection17UpdateIdNameCacheEv(%"class.blink::HTMLCollection"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_NK5blink14HTMLCollection5TraceEPNS_7VisitorE(%"class.blink::HTMLCollection"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink23HTMLTableRowsCollectionD1Ev(%"class.blink::HTMLTableRowsCollection"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 -1, i32 0, i32 4, i32 2
  %3 = bitcast %"class.blink::HeapVector"* %2 to %"class.blink::HTMLCollection"*
  tail call void @_ZN5blink14HTMLCollectionD2Ev(%"class.blink::HTMLCollection"* %3) #5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink23HTMLTableRowsCollectionD0Ev(%"class.blink::HTMLTableRowsCollection"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTableRowsCollection", %"class.blink::HTMLTableRowsCollection"* %0, i64 -1, i32 0, i32 4, i32 2
  %3 = bitcast %"class.blink::HeapVector"* %2 to %"class.blink::HTMLCollection"*
  tail call void @_ZN5blink14HTMLCollectionD2Ev(%"class.blink::HTMLCollection"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_NK5blink14HTMLCollection15InvalidateCacheEPNS_8DocumentE(%"class.blink::HTMLCollection"*, %"class.blink::Document"*) unnamed_addr #0 align 2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
