; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_pagerendercontext.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_pagerendercontext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_PageRenderContext = type { %"class.CPDF_Page::RenderContextIface", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.125" }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.CPDF_PageRenderContext::AnnotListIface"* }
%"class.CPDF_PageRenderContext::AnnotListIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CPDF_RenderOptions* }
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr" }
%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr", i32, %"class.std::__1::map" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.20", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.26" }
%"class.fxcrt::RetainPtr.20" = type { %"class.std::__1::unique_ptr.21" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.CPDF_RenderContext* }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.38", %"class.fxcrt::UnownedPtr.61", %"class.std::__1::vector" }
%"class.fxcrt::RetainPtr.38" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.48" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.42" }
%"class.fxcrt::RetainPtr.42" = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.140" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.143", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.158", [4 x i8] }>
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145", %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { float }
%"class.std::__1::map.48" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.fxcrt::UnownedPtr.61" = type { %class.CPDF_PageRenderCache* }
%class.CPDF_PageRenderCache = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.117" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.62", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.62" = type { %class.CPDF_PageObjectHolder* }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr.38", %"class.fxcrt::RetainPtr.38", %"class.std::__1::map.63", %"class.std::__1::map.74", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr.38", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set" }
%"class.std::__1::map.63" = type { %"class.std::__1::__tree.64" }
%"class.std::__1::__tree.64" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::map.74" = type { %"class.std::__1::__tree.75" }
%"class.std::__1::__tree.75" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.104" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.98"**, %"class.std::__1::unique_ptr.98"**, %"class.std::__1::unique_ptr.98"**, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.166" }
%"class.fxcrt::RetainPtr.166" = type { %"class.std::__1::unique_ptr.167" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.170", %"class.std::__1::vector.177" }
%"class.std::__1::vector.170" = type { %"class.std::__1::__vector_base.171" }
%"class.std::__1::__vector_base.171" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.172" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"class.std::__1::unique_ptr.179"*, %"class.std::__1::unique_ptr.179"*, %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::unique_ptr.179" = type opaque
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.std::__1::unique_ptr.179"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.187" }
%"class.fxcrt::SharedCopyOnWrite.187" = type { %"class.fxcrt::RetainPtr.188" }
%"class.fxcrt::RetainPtr.188" = type { %"class.std::__1::unique_ptr.189" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.192" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { float*, float*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.201" }
%"class.fxcrt::SharedCopyOnWrite.201" = type { %"class.fxcrt::RetainPtr.202" }
%"class.fxcrt::RetainPtr.202" = type { %"class.std::__1::unique_ptr.203" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.192", %"class.std::__1::unique_ptr.206", %"class.fxcrt::RetainPtr.212" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %class.PatternValue* }
%class.PatternValue = type opaque
%"class.fxcrt::RetainPtr.212" = type { %"class.std::__1::unique_ptr.213" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.220" }
%"class.fxcrt::SharedCopyOnWrite.220" = type { %"class.fxcrt::RetainPtr.221" }
%"class.fxcrt::RetainPtr.221" = type { %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.225", %"class.fxcrt::UnownedPtr.231", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.225" = type { %"class.std::__1::unique_ptr.226" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::UnownedPtr.231" = type { %class.CPDF_Document* }
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.234" }
%"class.fxcrt::SharedCopyOnWrite.234" = type { %"class.fxcrt::RetainPtr.235" }
%"class.fxcrt::RetainPtr.235" = type { %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.245", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.251", %"class.fxcrt::RetainPtr.257", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.251", %"class.fxcrt::RetainPtr.251", %"class.fxcrt::RetainPtr.251", float, float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.239" }
%"class.fxcrt::RetainPtr.239" = type { %"class.std::__1::unique_ptr.240" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.245" = type { %"class.std::__1::unique_ptr.246" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %class.CPDF_Object* }
%"class.fxcrt::RetainPtr.257" = type { %"class.std::__1::unique_ptr.258" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.251" = type { %"class.std::__1::unique_ptr.252" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %class.CPDF_Object* }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.265" }
%"class.fxcrt::RetainPtr.265" = type { %"class.std::__1::unique_ptr.266" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.269" }
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.fxcrt::RetainPtr.271"*, %"class.fxcrt::RetainPtr.271"*, %"class.std::__1::__compressed_pair.272" }
%"class.fxcrt::RetainPtr.271" = type opaque
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.fxcrt::RetainPtr.271"* }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::unique_ptr.98"** }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.108" }
%"class.std::__1::__tree.108" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.CPDF_RenderContext::Layer"* }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.CPDF_ProgressiveRenderer* }
%class.CPDF_ProgressiveRenderer = type { i32, %"class.fxcrt::UnownedPtr.128", %"class.fxcrt::UnownedPtr.129", %"class.fxcrt::UnownedPtr.130", %"class.std::__1::unique_ptr.131", %class.CFX_FloatRect, i32, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__deque_iterator" }
%"class.fxcrt::UnownedPtr.128" = type { %class.CPDF_RenderContext* }
%"class.fxcrt::UnownedPtr.129" = type { %class.CFX_RenderDevice* }
%"class.fxcrt::UnownedPtr.130" = type { %class.CPDF_RenderOptions* }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %class.CPDF_RenderStatus* }
%class.CPDF_RenderStatus = type opaque
%"class.std::__1::__deque_iterator" = type { %"class.std::__1::unique_ptr.98"**, %"class.std::__1::unique_ptr.98"* }

@_ZTV22CPDF_PageRenderContext = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_PageRenderContext*)* @_ZN22CPDF_PageRenderContextD2Ev to i8*), i8* bitcast (void (%class.CPDF_PageRenderContext*)* @_ZN22CPDF_PageRenderContextD0Ev to i8*)] }, align 8

@_ZN22CPDF_PageRenderContextC1Ev = hidden unnamed_addr alias void (%class.CPDF_PageRenderContext*), void (%class.CPDF_PageRenderContext*)* @_ZN22CPDF_PageRenderContextC2Ev
@_ZN22CPDF_PageRenderContextD1Ev = hidden unnamed_addr alias void (%class.CPDF_PageRenderContext*), void (%class.CPDF_PageRenderContext*)* @_ZN22CPDF_PageRenderContextD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN22CPDF_PageRenderContextC2Ev(%class.CPDF_PageRenderContext* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PageRenderContext, %class.CPDF_PageRenderContext* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV22CPDF_PageRenderContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PageRenderContext, %class.CPDF_PageRenderContext* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22CPDF_PageRenderContextD2Ev(%class.CPDF_PageRenderContext* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PageRenderContext, %class.CPDF_PageRenderContext* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV22CPDF_PageRenderContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PageRenderContext, %class.CPDF_PageRenderContext* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_ProgressiveRenderer*, %class.CPDF_ProgressiveRenderer** %3, align 8
  store %class.CPDF_ProgressiveRenderer* null, %class.CPDF_ProgressiveRenderer** %3, align 8
  %5 = icmp eq %class.CPDF_ProgressiveRenderer* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN24CPDF_ProgressiveRendererD1Ev(%class.CPDF_ProgressiveRenderer* nonnull %4) #5
  %7 = bitcast %class.CPDF_ProgressiveRenderer* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CPDF_PageRenderContext, %class.CPDF_PageRenderContext* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %9, align 8
  store %class.CPDF_RenderContext* null, %class.CPDF_RenderContext** %9, align 8
  %11 = icmp eq %class.CPDF_RenderContext* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN18CPDF_RenderContextD1Ev(%class.CPDF_RenderContext* nonnull %10) #5
  %13 = bitcast %class.CPDF_RenderContext* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %class.CPDF_PageRenderContext, %class.CPDF_PageRenderContext* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %15, align 8
  store %class.CFX_RenderDevice* null, %class.CFX_RenderDevice** %15, align 8
  %17 = icmp eq %class.CFX_RenderDevice* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %class.CFX_RenderDevice* %16 to void (%class.CFX_RenderDevice*)***
  %20 = load void (%class.CFX_RenderDevice*)**, void (%class.CFX_RenderDevice*)*** %19, align 8
  %21 = getelementptr inbounds void (%class.CFX_RenderDevice*)*, void (%class.CFX_RenderDevice*)** %20, i64 1
  %22 = load void (%class.CFX_RenderDevice*)*, void (%class.CFX_RenderDevice*)** %21, align 8
  tail call void %22(%class.CFX_RenderDevice* nonnull %16) #5
  br label %23

23:                                               ; preds = %14, %18
  %24 = getelementptr inbounds %class.CPDF_PageRenderContext, %class.CPDF_PageRenderContext* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %class.CPDF_RenderOptions*, %class.CPDF_RenderOptions** %24, align 8
  store %class.CPDF_RenderOptions* null, %class.CPDF_RenderOptions** %24, align 8
  %26 = icmp eq %class.CPDF_RenderOptions* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @_ZN18CPDF_RenderOptionsD1Ev(%class.CPDF_RenderOptions* nonnull %25) #5
  %28 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %25, i64 0, i32 0
  tail call void @_ZdlPv(i8* %28) #6
  br label %29

29:                                               ; preds = %23, %27
  %30 = getelementptr inbounds %class.CPDF_PageRenderContext, %class.CPDF_PageRenderContext* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.CPDF_PageRenderContext::AnnotListIface"*, %"class.CPDF_PageRenderContext::AnnotListIface"** %30, align 8
  store %"class.CPDF_PageRenderContext::AnnotListIface"* null, %"class.CPDF_PageRenderContext::AnnotListIface"** %30, align 8
  %32 = icmp eq %"class.CPDF_PageRenderContext::AnnotListIface"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.CPDF_PageRenderContext::AnnotListIface"* %31 to void (%"class.CPDF_PageRenderContext::AnnotListIface"*)***
  %35 = load void (%"class.CPDF_PageRenderContext::AnnotListIface"*)**, void (%"class.CPDF_PageRenderContext::AnnotListIface"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.CPDF_PageRenderContext::AnnotListIface"*)*, void (%"class.CPDF_PageRenderContext::AnnotListIface"*)** %35, i64 1
  %37 = load void (%"class.CPDF_PageRenderContext::AnnotListIface"*)*, void (%"class.CPDF_PageRenderContext::AnnotListIface"*)** %36, align 8
  tail call void %37(%"class.CPDF_PageRenderContext::AnnotListIface"* nonnull %31) #5
  br label %38

38:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22CPDF_PageRenderContextD0Ev(%class.CPDF_PageRenderContext*) unnamed_addr #1 align 2 {
  tail call void @_ZN22CPDF_PageRenderContextD2Ev(%class.CPDF_PageRenderContext* %0) #5
  %2 = bitcast %class.CPDF_PageRenderContext* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18CPDF_RenderOptionsD1Ev(%class.CPDF_RenderOptions*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18CPDF_RenderContextD1Ev(%class.CPDF_RenderContext*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN24CPDF_ProgressiveRendererD1Ev(%class.CPDF_ProgressiveRenderer*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
