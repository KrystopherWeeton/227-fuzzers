; ModuleID = '../../base/third_party/libevent/select.c'
source_filename = "../../base/third_party/libevent/select.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.event_base = type { %struct.eventop*, i8*, i32, i32, i32, i32, %struct.event_list**, i32, %struct.evsignal_info, %struct.event_list, %struct.timeval, %struct.min_heap, %struct.timeval }
%struct.eventop = type { i8*, {}*, i32 (i8*, %struct.event*)*, i32 (i8*, %struct.event*)*, i32 (%struct.event_base*, i8*, %struct.timeval*)*, void (%struct.event_base*, i8*)*, i32 }
%struct.evsignal_info = type { %struct.event, [2 x i32], i32, i32, [65 x %struct.event_list], [65 x i32], %struct.sigaction**, i32 }
%struct.event = type { %struct.anon, %struct.anon.0, %struct.anon.1, i32, %struct.event_base*, i32, i16, i16, i16*, %struct.timeval, i32, void (i32, i16, i8*)*, i8*, i32, i32 }
%struct.anon = type { %struct.event*, %struct.event** }
%struct.anon.0 = type { %struct.event*, %struct.event** }
%struct.anon.1 = type { %struct.event*, %struct.event** }
%struct.sigaction = type { %union.anon, %struct.__sigset_t, i32, void ()* }
%union.anon = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%struct.event_list = type { %struct.event*, %struct.event** }
%struct.min_heap = type { %struct.event**, i32, i32 }
%struct.timeval = type { i64, i64 }
%struct.selectop = type { i32, i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.event**, %struct.event** }
%struct.fd_set = type { [16 x i64] }

@.str = private unnamed_addr constant [7 x i8] c"select\00", align 1
@selectops = hidden local_unnamed_addr constant { i8*, i8* (%struct.event_base*)*, i32 (i8*, %struct.event*)*, i32 (i8*, %struct.event*)*, i32 (%struct.event_base*, i8*, %struct.timeval*)*, void (%struct.event_base*, i8*)*, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* (%struct.event_base*)* @select_init, i32 (i8*, %struct.event*)* @select_add, i32 (i8*, %struct.event*)* @select_del, i32 (%struct.event_base*, i8*, %struct.timeval*)* @select_dispatch, void (%struct.event_base*, i8*)* @select_dealloc, i32 0 }, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"EVENT_NOSELECT\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal noalias i8* @select_init(%struct.event_base*) #0 {
  %2 = tail call i8* @evutil_getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #6
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %11

4:                                                ; preds = %1
  %5 = tail call noalias i8* @calloc(i64 1, i64 56) #6
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = bitcast i8* %5 to %struct.selectop*
  %9 = tail call fastcc i32 @select_resize(%struct.selectop* nonnull %8, i32 8)
  %10 = tail call i32 @evsignal_init(%struct.event_base* %0) #6
  br label %11

11:                                               ; preds = %4, %1, %7
  %12 = phi i8* [ %5, %7 ], [ null, %1 ], [ null, %4 ]
  ret i8* %12
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @select_add(i8* nocapture, %struct.event*) #0 {
  %3 = bitcast i8* %0 to %struct.selectop*
  %4 = getelementptr inbounds %struct.event, %struct.event* %1, i64 0, i32 6
  %5 = load i16, i16* %4, align 4
  %6 = and i16 %5, 8
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @evsignal_add(%struct.event* %1) #6
  br label %88

10:                                               ; preds = %2
  %11 = bitcast i8* %0 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.event, %struct.event* %1, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %41

16:                                               ; preds = %10
  %17 = getelementptr inbounds i8, i8* %0, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = icmp ugt i32 %19, 8
  %21 = select i1 %20, i32 %19, i32 8
  %22 = add nsw i32 %14, 64
  %23 = sdiv i32 %22, 64
  %24 = sext i32 %23 to i64
  %25 = shl nsw i64 %24, 3
  br label %26

26:                                               ; preds = %26, %16
  %27 = phi i32 [ %21, %16 ], [ %30, %26 ]
  %28 = sext i32 %27 to i64
  %29 = icmp ugt i64 %25, %28
  %30 = shl nsw i32 %27, 1
  br i1 %29, label %26, label %31

31:                                               ; preds = %26
  %32 = icmp eq i32 %27, %19
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = tail call fastcc i32 @select_resize(%struct.selectop* %3, i32 %27)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %88

36:                                               ; preds = %33
  %37 = load i32, i32* %13, align 8
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i32 [ %37, %36 ], [ %14, %31 ]
  store i32 %39, i32* %11, align 8
  %40 = load i16, i16* %4, align 4
  br label %41

41:                                               ; preds = %38, %10
  %42 = phi i16 [ %40, %38 ], [ %5, %10 ]
  %43 = and i16 %42, 2
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %65, label %45

45:                                               ; preds = %41
  %46 = load i32, i32* %13, align 8
  %47 = srem i32 %46, 64
  %48 = zext i32 %47 to i64
  %49 = shl i64 1, %48
  %50 = getelementptr inbounds i8, i8* %0, i64 8
  %51 = bitcast i8* %50 to %struct.fd_set**
  %52 = load %struct.fd_set*, %struct.fd_set** %51, align 8
  %53 = sdiv i32 %46, 64
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %52, i64 0, i32 0, i64 %54
  %56 = load i64, i64* %55, align 8
  %57 = or i64 %49, %56
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds i8, i8* %0, i64 40
  %59 = bitcast i8* %58 to %struct.event***
  %60 = load %struct.event**, %struct.event*** %59, align 8
  %61 = load i32, i32* %13, align 8
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.event*, %struct.event** %60, i64 %62
  store %struct.event* %1, %struct.event** %63, align 8
  %64 = load i16, i16* %4, align 4
  br label %65

65:                                               ; preds = %41, %45
  %66 = phi i16 [ %42, %41 ], [ %64, %45 ]
  %67 = and i16 %66, 4
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %65
  %70 = load i32, i32* %13, align 8
  %71 = srem i32 %70, 64
  %72 = zext i32 %71 to i64
  %73 = shl i64 1, %72
  %74 = getelementptr inbounds i8, i8* %0, i64 16
  %75 = bitcast i8* %74 to %struct.fd_set**
  %76 = load %struct.fd_set*, %struct.fd_set** %75, align 8
  %77 = sdiv i32 %70, 64
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %76, i64 0, i32 0, i64 %78
  %80 = load i64, i64* %79, align 8
  %81 = or i64 %73, %80
  store i64 %81, i64* %79, align 8
  %82 = getelementptr inbounds i8, i8* %0, i64 48
  %83 = bitcast i8* %82 to %struct.event***
  %84 = load %struct.event**, %struct.event*** %83, align 8
  %85 = load i32, i32* %13, align 8
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %struct.event*, %struct.event** %84, i64 %86
  store %struct.event* %1, %struct.event** %87, align 8
  br label %88

88:                                               ; preds = %69, %65, %33, %8
  %89 = phi i32 [ %9, %8 ], [ -1, %33 ], [ 0, %65 ], [ 0, %69 ]
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @select_del(i8* nocapture readonly, %struct.event*) #0 {
  %3 = getelementptr inbounds %struct.event, %struct.event* %1, i64 0, i32 6
  %4 = load i16, i16* %3, align 4
  %5 = sext i16 %4 to i32
  %6 = and i32 %5, 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @evsignal_del(%struct.event* %1) #6
  br label %63

10:                                               ; preds = %2
  %11 = bitcast i8* %0 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.event, %struct.event* %1, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %63, label %16

16:                                               ; preds = %10
  %17 = and i32 %5, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %39, label %19

19:                                               ; preds = %16
  %20 = srem i32 %14, 64
  %21 = zext i32 %20 to i64
  %22 = shl i64 1, %21
  %23 = xor i64 %22, -1
  %24 = getelementptr inbounds i8, i8* %0, i64 8
  %25 = bitcast i8* %24 to %struct.fd_set**
  %26 = load %struct.fd_set*, %struct.fd_set** %25, align 8
  %27 = sdiv i32 %14, 64
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %26, i64 0, i32 0, i64 %28
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, %23
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds i8, i8* %0, i64 40
  %33 = bitcast i8* %32 to %struct.event***
  %34 = load %struct.event**, %struct.event*** %33, align 8
  %35 = load i32, i32* %13, align 8
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.event*, %struct.event** %34, i64 %36
  store %struct.event* null, %struct.event** %37, align 8
  %38 = load i16, i16* %3, align 4
  br label %39

39:                                               ; preds = %16, %19
  %40 = phi i16 [ %4, %16 ], [ %38, %19 ]
  %41 = and i16 %40, 4
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %63, label %43

43:                                               ; preds = %39
  %44 = load i32, i32* %13, align 8
  %45 = srem i32 %44, 64
  %46 = zext i32 %45 to i64
  %47 = shl i64 1, %46
  %48 = xor i64 %47, -1
  %49 = getelementptr inbounds i8, i8* %0, i64 16
  %50 = bitcast i8* %49 to %struct.fd_set**
  %51 = load %struct.fd_set*, %struct.fd_set** %50, align 8
  %52 = sdiv i32 %44, 64
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %51, i64 0, i32 0, i64 %53
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, %48
  store i64 %56, i64* %54, align 8
  %57 = getelementptr inbounds i8, i8* %0, i64 48
  %58 = bitcast i8* %57 to %struct.event***
  %59 = load %struct.event**, %struct.event*** %58, align 8
  %60 = load i32, i32* %13, align 8
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %struct.event*, %struct.event** %59, i64 %61
  store %struct.event* null, %struct.event** %62, align 8
  br label %63

63:                                               ; preds = %43, %39, %10, %8
  %64 = phi i32 [ %9, %8 ], [ 0, %10 ], [ 0, %39 ], [ 0, %43 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @select_dispatch(%struct.event_base*, i8* nocapture readonly, %struct.timeval*) #0 {
  %4 = getelementptr inbounds i8, i8* %1, i64 24
  %5 = bitcast i8* %4 to %struct.fd_set**
  %6 = bitcast i8* %4 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 8
  %9 = bitcast i8* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %1, i64 4
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %10, i64 %14, i1 false)
  %15 = getelementptr inbounds i8, i8* %1, i64 32
  %16 = bitcast i8* %15 to %struct.fd_set**
  %17 = bitcast i8* %15 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %1, i64 16
  %20 = bitcast i8* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = load i32, i32* %12, align 4
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %21, i64 %23, i1 false)
  %24 = bitcast i8* %1 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  %27 = load %struct.fd_set*, %struct.fd_set** %5, align 8
  %28 = load %struct.fd_set*, %struct.fd_set** %16, align 8
  %29 = tail call i32 @select(i32 %26, %struct.fd_set* %27, %struct.fd_set* %28, %struct.fd_set* null, %struct.timeval* %2) #6
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %37

31:                                               ; preds = %3
  %32 = tail call i32* @__errno_location() #7
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #6
  br label %117

36:                                               ; preds = %31
  tail call void @evsignal_process(%struct.event_base* %0) #6
  br label %117

37:                                               ; preds = %3
  %38 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 3
  %39 = load volatile i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %37
  tail call void @evsignal_process(%struct.event_base* %0) #6
  br label %42

42:                                               ; preds = %37, %41
  %43 = tail call i64 @random() #6
  %44 = load i32, i32* %24, align 8
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %117, label %46

46:                                               ; preds = %42
  %47 = add nuw nsw i32 %44, 1
  %48 = sext i32 %47 to i64
  %49 = srem i64 %43, %48
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds i8, i8* %1, i64 40
  %52 = bitcast i8* %51 to %struct.event***
  %53 = getelementptr inbounds i8, i8* %1, i64 48
  %54 = bitcast i8* %53 to %struct.event***
  br label %55

55:                                               ; preds = %113, %46
  %56 = phi i32 [ %44, %46 ], [ %115, %113 ]
  %57 = phi i32 [ 0, %46 ], [ %114, %113 ]
  %58 = phi i32 [ %50, %46 ], [ %61, %113 ]
  %59 = add nsw i32 %58, 1
  %60 = icmp slt i32 %58, %56
  %61 = select i1 %60, i32 %59, i32 0
  %62 = load %struct.fd_set*, %struct.fd_set** %5, align 8
  %63 = sdiv i32 %61, 64
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %62, i64 0, i32 0, i64 %64
  %66 = load i64, i64* %65, align 8
  %67 = srem i32 %61, 64
  %68 = zext i32 %67 to i64
  %69 = shl i64 1, %68
  %70 = and i64 %66, %69
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %55
  %73 = load %struct.event**, %struct.event*** %52, align 8
  %74 = sext i32 %61 to i64
  %75 = getelementptr inbounds %struct.event*, %struct.event** %73, i64 %74
  %76 = load %struct.event*, %struct.event** %75, align 8
  br label %77

77:                                               ; preds = %55, %72
  %78 = phi i32 [ 2, %72 ], [ 0, %55 ]
  %79 = phi %struct.event* [ %76, %72 ], [ null, %55 ]
  %80 = load %struct.fd_set*, %struct.fd_set** %16, align 8
  %81 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %80, i64 0, i32 0, i64 %64
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, %69
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %77
  %86 = load %struct.event**, %struct.event*** %54, align 8
  %87 = sext i32 %61 to i64
  %88 = getelementptr inbounds %struct.event*, %struct.event** %86, i64 %87
  %89 = load %struct.event*, %struct.event** %88, align 8
  %90 = or i32 %78, 4
  br label %91

91:                                               ; preds = %77, %85
  %92 = phi i32 [ %90, %85 ], [ %78, %77 ]
  %93 = phi %struct.event* [ %89, %85 ], [ null, %77 ]
  %94 = icmp eq %struct.event* %79, null
  br i1 %94, label %102, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.event, %struct.event* %79, i64 0, i32 6
  %97 = load i16, i16* %96, align 4
  %98 = sext i16 %97 to i32
  %99 = and i32 %92, %98
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %95
  tail call void @event_active(%struct.event* nonnull %79, i32 %99, i16 signext 1) #6
  br label %102

102:                                              ; preds = %95, %91, %101
  %103 = icmp eq %struct.event* %93, null
  %104 = icmp eq %struct.event* %93, %79
  %105 = or i1 %103, %104
  br i1 %105, label %113, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.event, %struct.event* %93, i64 0, i32 6
  %108 = load i16, i16* %107, align 4
  %109 = sext i16 %108 to i32
  %110 = and i32 %92, %109
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %106
  tail call void @event_active(%struct.event* nonnull %93, i32 %110, i16 signext 1) #6
  br label %113

113:                                              ; preds = %106, %102, %112
  %114 = add nuw nsw i32 %57, 1
  %115 = load i32, i32* %24, align 8
  %116 = icmp slt i32 %57, %115
  br i1 %116, label %55, label %117

117:                                              ; preds = %113, %42, %36, %35
  %118 = phi i32 [ -1, %35 ], [ 0, %36 ], [ 0, %42 ], [ 0, %113 ]
  ret i32 %118
}

; Function Attrs: nounwind ssp uwtable
define internal void @select_dealloc(%struct.event_base*, i8* nocapture) #0 {
  tail call void @evsignal_dealloc(%struct.event_base* %0) #6
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to %struct.fd_set**
  %5 = load %struct.fd_set*, %struct.fd_set** %4, align 8
  %6 = icmp eq %struct.fd_set* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.fd_set* %5 to i8*
  tail call void @free(i8* %8) #6
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds i8, i8* %1, i64 16
  %11 = bitcast i8* %10 to %struct.fd_set**
  %12 = load %struct.fd_set*, %struct.fd_set** %11, align 8
  %13 = icmp eq %struct.fd_set* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = bitcast %struct.fd_set* %12 to i8*
  tail call void @free(i8* %15) #6
  br label %16

16:                                               ; preds = %9, %14
  %17 = getelementptr inbounds i8, i8* %1, i64 24
  %18 = bitcast i8* %17 to %struct.fd_set**
  %19 = load %struct.fd_set*, %struct.fd_set** %18, align 8
  %20 = icmp eq %struct.fd_set* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %struct.fd_set* %19 to i8*
  tail call void @free(i8* %22) #6
  br label %23

23:                                               ; preds = %16, %21
  %24 = getelementptr inbounds i8, i8* %1, i64 32
  %25 = bitcast i8* %24 to %struct.fd_set**
  %26 = load %struct.fd_set*, %struct.fd_set** %25, align 8
  %27 = icmp eq %struct.fd_set* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = bitcast %struct.fd_set* %26 to i8*
  tail call void @free(i8* %29) #6
  br label %30

30:                                               ; preds = %23, %28
  %31 = getelementptr inbounds i8, i8* %1, i64 40
  %32 = bitcast i8* %31 to %struct.event***
  %33 = load %struct.event**, %struct.event*** %32, align 8
  %34 = icmp eq %struct.event** %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = bitcast %struct.event** %33 to i8*
  tail call void @free(i8* %36) #6
  br label %37

37:                                               ; preds = %30, %35
  %38 = getelementptr inbounds i8, i8* %1, i64 48
  %39 = bitcast i8* %38 to %struct.event***
  %40 = load %struct.event**, %struct.event*** %39, align 8
  %41 = icmp eq %struct.event** %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = bitcast %struct.event** %40 to i8*
  tail call void @free(i8* %43) #6
  br label %44

44:                                               ; preds = %37, %42
  tail call void @free(i8* %1) #6
  ret void
}

declare i8* @evutil_getenv(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @select_resize(%struct.selectop* nocapture, i32) unnamed_addr #0 {
  %3 = sext i32 %1 to i64
  %4 = lshr i64 %3, 3
  %5 = shl i64 %4, 6
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %struct.selectop, %struct.selectop* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = lshr i32 %8, 3
  %10 = shl i32 %9, 6
  %11 = getelementptr inbounds %struct.selectop, %struct.selectop* %0, i64 0, i32 2
  %12 = bitcast %struct.fd_set** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i8* @realloc(i8* %13, i64 %3) #6
  %15 = icmp eq i8* %14, null
  br i1 %15, label %71, label %16

16:                                               ; preds = %2
  store i8* %14, i8** %12, align 8
  %17 = getelementptr inbounds %struct.selectop, %struct.selectop* %0, i64 0, i32 4
  %18 = bitcast %struct.fd_set** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i8* @realloc(i8* %19, i64 %3) #6
  %21 = icmp eq i8* %20, null
  br i1 %21, label %71, label %22

22:                                               ; preds = %16
  store i8* %20, i8** %18, align 8
  %23 = getelementptr inbounds %struct.selectop, %struct.selectop* %0, i64 0, i32 3
  %24 = bitcast %struct.fd_set** %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i8* @realloc(i8* %25, i64 %3) #6
  %27 = icmp eq i8* %26, null
  br i1 %27, label %71, label %28

28:                                               ; preds = %22
  store i8* %26, i8** %24, align 8
  %29 = getelementptr inbounds %struct.selectop, %struct.selectop* %0, i64 0, i32 5
  %30 = bitcast %struct.fd_set** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = tail call i8* @realloc(i8* %31, i64 %3) #6
  %33 = icmp eq i8* %32, null
  br i1 %33, label %71, label %34

34:                                               ; preds = %28
  store i8* %32, i8** %30, align 8
  %35 = getelementptr inbounds %struct.selectop, %struct.selectop* %0, i64 0, i32 6
  %36 = bitcast %struct.event*** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = shl i64 %4, 38
  %39 = ashr exact i64 %38, 29
  %40 = tail call i8* @realloc(i8* %37, i64 %39) #6
  %41 = icmp eq i8* %40, null
  br i1 %41, label %71, label %42

42:                                               ; preds = %34
  store i8* %40, i8** %36, align 8
  %43 = getelementptr inbounds %struct.selectop, %struct.selectop* %0, i64 0, i32 7
  %44 = bitcast %struct.event*** %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = tail call i8* @realloc(i8* %45, i64 %39) #6
  %47 = icmp eq i8* %46, null
  br i1 %47, label %71, label %48

48:                                               ; preds = %42
  store i8* %46, i8** %44, align 8
  %49 = load i8*, i8** %12, align 8
  %50 = load i32, i32* %7, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = sub nsw i32 %1, %50
  %54 = sext i32 %53 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %52, i8 0, i64 %54, i1 false)
  %55 = load i8*, i8** %24, align 8
  %56 = load i32, i32* %7, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %55, i64 %57
  %59 = sub nsw i32 %1, %56
  %60 = sext i32 %59 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %58, i8 0, i64 %60, i1 false)
  %61 = load %struct.event**, %struct.event*** %35, align 8
  %62 = sext i32 %10 to i64
  %63 = getelementptr inbounds %struct.event*, %struct.event** %61, i64 %62
  %64 = bitcast %struct.event** %63 to i8*
  %65 = sub nsw i32 %6, %10
  %66 = sext i32 %65 to i64
  %67 = shl nsw i64 %66, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 %67, i1 false)
  %68 = load %struct.event**, %struct.event*** %43, align 8
  %69 = getelementptr inbounds %struct.event*, %struct.event** %68, i64 %62
  %70 = bitcast %struct.event** %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 %67, i1 false)
  store i32 %1, i32* %7, align 4
  br label %72

71:                                               ; preds = %42, %34, %28, %22, %16, %2
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %72

72:                                               ; preds = %71, %48
  %73 = phi i32 [ -1, %71 ], [ 0, %48 ]
  ret i32 %73
}

declare i32 @evsignal_init(%struct.event_base*) local_unnamed_addr #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @event_warn(i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

declare void @evsignal_process(%struct.event_base*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @random() local_unnamed_addr #3

declare void @event_active(%struct.event*, i32, i16 signext) local_unnamed_addr #1

declare i32 @evsignal_add(%struct.event*) local_unnamed_addr #1

declare i32 @evsignal_del(%struct.event*) local_unnamed_addr #1

declare void @evsignal_dealloc(%struct.event_base*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
