; ModuleID = '../../base/debug/debugger_posix.cc'
source_filename = "../../base/debug/debugger_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::Process" = type { i32 }

@.str = private unnamed_addr constant [18 x i8] c"/proc/self/status\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"TracerPid:\09\00", align 1
@_ZZN4base5debug13BreakDebuggerEvE44static_variable_to_make_this_function_unique = internal global i32 0, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base5debug18GetDebuggerProcessEv(%"class.base::Process"* noalias sret) local_unnamed_addr #0 {
  %2 = alloca [1024 x i8], align 16
  %3 = alloca i32, align 4
  %4 = tail call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 0) #10
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZN4base7ProcessC1Ei(%"class.base::Process"* %0, i32 0) #10
  br label %54

7:                                                ; preds = %1
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1024, i1 false)
  br label %9

9:                                                ; preds = %12, %7
  %10 = call i64 @read(i32 %4, i8* nonnull %8, i64 1024) #10
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = tail call i32* @__errno_location() #11
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 4
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %12
  %17 = tail call i32 @close(i32 %4) #10
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = tail call i32* @__errno_location() #11
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 4
  br i1 %22, label %26, label %25

23:                                               ; preds = %16
  %24 = icmp slt i32 %17, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %19, %23
  tail call void @_ZN4base7ProcessC1Ei(%"class.base::Process"* %0, i32 0) #10
  br label %53

26:                                               ; preds = %19, %23
  %27 = icmp slt i64 %10, 1
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @_ZN4base7ProcessC1Ei(%"class.base::Process"* %0, i32 0) #10
  br label %53

29:                                               ; preds = %26
  %30 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* nonnull %8, i64 %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11, i64 0) #10
  %31 = icmp eq i64 %30, -1
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZN4base7ProcessC1Ei(%"class.base::Process"* %0, i32 0) #10
  br label %53

33:                                               ; preds = %29
  %34 = add i64 %30, 11
  %35 = icmp ugt i64 %10, %34
  br i1 %35, label %36, label %46

36:                                               ; preds = %33
  %37 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 %34
  %38 = sub i64 %10, %34
  %39 = call i8* @memchr(i8* %37, i32 10, i64 %38) #10
  %40 = icmp eq i8* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = ptrtoint i8* %39 to i64
  %43 = ptrtoint [1024 x i8]* %2 to i64
  %44 = sub i64 %42, %43
  %45 = icmp eq i64 %44, -1
  br i1 %45, label %46, label %47

46:                                               ; preds = %36, %33, %41
  call void @_ZN4base7ProcessC1Ei(%"class.base::Process"* %0, i32 0) #10
  br label %53

47:                                               ; preds = %41
  %48 = sub i64 %44, %34
  %49 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #10
  store i32 0, i32* %3, align 4
  %50 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %37, i64 %48, i32* nonnull %3) #10
  %51 = load i32, i32* %3, align 4
  %52 = select i1 %50, i32 %51, i32 0
  call void @_ZN4base7ProcessC1Ei(%"class.base::Process"* %0, i32 %52) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #10
  br label %53

53:                                               ; preds = %32, %47, %46, %28, %25
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #10
  br label %54

54:                                               ; preds = %53, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #2

declare void @_ZN4base7ProcessC1Ei(%"class.base::Process"*, i32) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @close(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base5debug13BeingDebuggedEv() local_unnamed_addr #0 {
  %1 = alloca %"class.base::Process", align 4
  %2 = bitcast %"class.base::Process"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #10
  call void @_ZN4base5debug18GetDebuggerProcessEv(%"class.base::Process"* nonnull sret %1)
  %3 = call zeroext i1 @_ZNK4base7Process7IsValidEv(%"class.base::Process"* nonnull %1) #10
  call void @_ZN4base7ProcessD1Ev(%"class.base::Process"* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #10
  ret i1 %3
}

declare zeroext i1 @_ZNK4base7Process7IsValidEv(%"class.base::Process"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base7ProcessD1Ev(%"class.base::Process"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base5debug14VerifyDebuggerEv() local_unnamed_addr #6 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base5debug13BreakDebuggerEv() local_unnamed_addr #7 {
  tail call void @_ZN4base5debug5AliasEPKv(i8* bitcast (i32* @_ZZN4base5debug13BreakDebuggerEvE44static_variable_to_make_this_function_unique to i8*)) #10
  tail call void @abort() #12
  unreachable
}

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
