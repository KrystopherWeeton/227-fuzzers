; ModuleID = '../../base/time/time_exploded_posix.cc'
source_filename = "../../base/time/time_exploded_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [40 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }

@_ZZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"*, i1 zeroext, %"struct.base::Time::Exploded"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm, align 16
  %6 = tail call i64 @_ZNK4base4Time39ToRoundedDownMillisecondsSinceUnixEpochEv(%"class.base::Time"* %0) #7
  %7 = sdiv i64 %6, 1000
  %8 = srem i64 %6, 1000
  %9 = icmp slt i64 %8, 0
  %10 = add nsw i64 %8, 1000
  %11 = ashr i64 %8, 63
  %12 = add nsw i64 %11, %7
  %13 = select i1 %9, i64 %10, i64 %8
  %14 = bitcast %struct.tm* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  store i64 %12, i64* %4, align 8
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22, !prof !2

18:                                               ; preds = %3
  %19 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock) #7
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to %"class.base::internal::LockImpl"*)) #7
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock) #7
  br label %22

22:                                               ; preds = %21, %18, %3
  %23 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to %union.pthread_mutex_t*)) #7
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !3

25:                                               ; preds = %22
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to %"class.base::internal::LockImpl"*)) #7
  br label %26

26:                                               ; preds = %25, %22
  br i1 %1, label %27, label %29

27:                                               ; preds = %26
  %28 = call %struct.tm* @localtime_r(i64* nonnull %4, %struct.tm* nonnull %5) #7
  br label %31

29:                                               ; preds = %26
  %30 = call %struct.tm* @gmtime_r(i64* nonnull %4, %struct.tm* nonnull %5) #7
  br label %31

31:                                               ; preds = %27, %29
  %32 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to %union.pthread_mutex_t*)) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %33 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, 1900
  %36 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 0
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 4
  %38 = load i32, i32* %37, align 16
  %39 = add nsw i32 %38, 1
  %40 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 1
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 2
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 3
  %45 = bitcast %struct.tm* %5 to <4 x i32>*
  %46 = load <4 x i32>, <4 x i32>* %45, align 16
  %47 = shufflevector <4 x i32> %46, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %48 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> %47, <4 x i32>* %48, align 4
  %49 = trunc i64 %13 to i32
  %50 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 7
  store i32 %49, i32* %50, align 4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZNK4base4Time39ToRoundedDownMillisecondsSinceUnixEpochEv(%"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext, %"struct.base::Time::Exploded"* dereferenceable(32), %"class.base::Time"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.tm, align 16
  %5 = alloca %struct.tm, align 8
  %6 = alloca %"class.base::Time", align 8
  %7 = alloca %"struct.base::Time::Exploded", align 4
  %8 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 -1) #7
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 -1900)
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = or i1 %11, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 0, i64* %18, align 8
  br label %91

19:                                               ; preds = %3
  %20 = extractvalue { i32, i1 } %14, 0
  %21 = extractvalue { i32, i1 } %10, 0
  %22 = bitcast %struct.tm* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %22) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 40, i1 false)
  %23 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %1, i64 0, i32 3
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 4
  %26 = shufflevector <4 x i32> %25, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %27 = bitcast %struct.tm* %4 to <4 x i32>*
  store <4 x i32> %26, <4 x i32>* %27, align 16
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 4
  store i32 %21, i32* %28, align 16
  %29 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 5
  store i32 %20, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %1, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 6
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 7
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 8
  store i32 -1, i32* %34, align 16
  %35 = getelementptr inbounds %struct.tm, %struct.tm* %4, i64 0, i32 9
  %36 = bitcast %struct.tm* %5 to i8*
  %37 = bitcast i64* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %36)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 16 %22, i64 56, i1 false)
  %38 = call fastcc i64 @_ZN12_GLOBAL__N_121SysTimeFromTimeStructEP2tmb(%struct.tm* nonnull %4, i1 zeroext %0)
  %39 = icmp eq i64 %38, -1
  br i1 %39, label %40, label %58

40:                                               ; preds = %19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %22, i8* nonnull align 8 %36, i64 56, i1 false)
  store i32 0, i32* %34, align 16
  %41 = call fastcc i64 @_ZN12_GLOBAL__N_121SysTimeFromTimeStructEP2tmb(%struct.tm* nonnull %4, i1 zeroext %0)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %22, i8* nonnull align 8 %36, i64 56, i1 false)
  store i32 1, i32* %34, align 16
  %42 = call fastcc i64 @_ZN12_GLOBAL__N_121SysTimeFromTimeStructEP2tmb(%struct.tm* nonnull %4, i1 zeroext %0)
  %43 = icmp slt i64 %41, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = icmp slt i64 %42, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %44
  %47 = icmp slt i64 %42, %41
  %48 = select i1 %47, i64 %42, i64 %41
  br label %58

49:                                               ; preds = %40
  %50 = icmp eq i64 %42, -1
  br i1 %50, label %51, label %58

51:                                               ; preds = %49
  %52 = load i32, i32* %12, align 4
  %53 = add i32 %52, -1969
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = icmp slt i32 %52, 1969
  %57 = select i1 %56, i64 -2147483648000, i64 2147483647999
  br label %73

58:                                               ; preds = %44, %46, %19, %51, %49
  %59 = phi i64 [ -1, %51 ], [ %42, %49 ], [ %41, %44 ], [ %48, %46 ], [ %38, %19 ]
  %60 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %59, i64 1000) #7
  %61 = extractvalue { i64, i1 } %60, 1
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %1, i64 0, i32 7
  %64 = load i32, i32* %63, align 4
  %65 = extractvalue { i64, i1 } %60, 0
  %66 = sext i32 %64 to i64
  %67 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %65, i64 %66) #7
  %68 = extractvalue { i64, i1 } %67, 1
  br i1 %68, label %71, label %69

69:                                               ; preds = %62
  %70 = extractvalue { i64, i1 } %67, 0
  br label %73

71:                                               ; preds = %62, %58
  %72 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 0, i64* %72, align 8
  br label %89

73:                                               ; preds = %69, %55
  %74 = phi i64 [ %57, %55 ], [ %70, %69 ]
  %75 = bitcast %"class.base::Time"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #7
  %76 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  store i64 0, i64* %76, align 8
  %77 = call zeroext i1 @_ZN4base4Time30FromMillisecondsSinceUnixEpochElPS0_(i64 %74, %"class.base::Time"* nonnull %6) #7
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 0, i64* %79, align 8
  br label %87

80:                                               ; preds = %73
  %81 = bitcast %"struct.base::Time::Exploded"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #7
  %82 = bitcast %"struct.base::Time::Exploded"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %82, i8 -86, i64 32, i1 false)
  call void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"* nonnull %6, i1 zeroext %0, %"struct.base::Time::Exploded"* nonnull %7) #7
  %83 = call zeroext i1 @_ZN4base4Time20ExplodedMostlyEqualsERKNS0_8ExplodedES3_(%"struct.base::Time::Exploded"* nonnull dereferenceable(32) %7, %"struct.base::Time::Exploded"* dereferenceable(32) %1) #7
  %84 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %85 = load i64, i64* %76, align 8
  %86 = select i1 %83, i64 %85, i64 0
  store i64 %86, i64* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #7
  br label %87

87:                                               ; preds = %80, %78
  %88 = phi i1 [ %83, %80 ], [ false, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #7
  br label %89

89:                                               ; preds = %71, %87
  %90 = phi i1 [ %88, %87 ], [ false, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %22) #7
  br label %91

91:                                               ; preds = %89, %17
  %92 = phi i1 [ %90, %89 ], [ false, %17 ]
  ret i1 %92
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN12_GLOBAL__N_121SysTimeFromTimeStructEP2tmb(%struct.tm*, i1 zeroext) unnamed_addr #0 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to %"class.base::internal::LockImpl"*)) #7
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock) #7
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to %union.pthread_mutex_t*)) #7
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12, !prof !3

12:                                               ; preds = %9
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to %"class.base::internal::LockImpl"*)) #7
  br label %13

13:                                               ; preds = %9, %12
  br i1 %1, label %14, label %16

14:                                               ; preds = %13
  %15 = tail call i64 @mktime(%struct.tm* %0) #7
  br label %18

16:                                               ; preds = %13
  %17 = tail call i64 @timegm(%struct.tm* %0) #7
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN12_GLOBAL__N_126GetSysTimeToTimeStructLockEvE4lock to %union.pthread_mutex_t*)) #7
  ret i64 %19
}

declare zeroext i1 @_ZN4base4Time30FromMillisecondsSinceUnixEpochElPS0_(i64, %"class.base::Time"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base4Time20ExplodedMostlyEqualsERKNS0_8ExplodedES3_(%"struct.base::Time::Exploded"* dereferenceable(32), %"struct.base::Time::Exploded"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind
declare %struct.tm* @localtime_r(i64*, %struct.tm*) local_unnamed_addr #3

; Function Attrs: nounwind
declare %struct.tm* @gmtime_r(i64*, %struct.tm*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #4

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @mktime(%struct.tm* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind
declare i64 @timegm(%struct.tm*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
