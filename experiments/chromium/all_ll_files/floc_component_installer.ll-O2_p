; ModuleID = '../../chrome/browser/component_updater/floc_component_installer.cc'
source_filename = "../../chrome/browser/component_updater/floc_component_installer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.component_updater::FlocComponentInstallerPolicy" = type { %"class.component_updater::ComponentInstallerPolicy", %"class.federated_learning::FlocSortingLshClustersService"* }
%"class.component_updater::ComponentInstallerPolicy" = type { i32 (...)** }
%"class.federated_learning::FlocSortingLshClustersService" = type { i32 (...)**, %class.scoped_refptr, %"class.base::ObserverList", i8, %"class.base::FilePath", %"class.base::Version", %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Version" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%"struct.update_client::CrxInstaller::Result" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.20" }
%"union.absl::variant_internal::DestructibleUnionImpl.20" = type { %"union.absl::variant_internal::DestructibleUnionImpl.21" }
%"union.absl::variant_internal::DestructibleUnionImpl.21" = type { %"union.absl::variant_internal::DestructibleUnionImpl.22" }
%"union.absl::variant_internal::DestructibleUnionImpl.22" = type { %"union.absl::variant_internal::DestructibleUnionImpl.23" }
%"union.absl::variant_internal::DestructibleUnionImpl.23" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i8*, i8*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i8* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { i64 }
%"class.component_updater::ComponentUpdateService" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.78", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.78" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.component_updater::ComponentInstaller" = type { %"class.update_client::CrxInstaller.base", %"class.base::FilePath", %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.62", %class.scoped_refptr.68, %class.scoped_refptr, %class.scoped_refptr.70 }
%"class.update_client::CrxInstaller.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.61" }>
%"class.base::RefCountedThreadSafe.61" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.component_updater::ComponentInstallerPolicy"* }
%class.scoped_refptr.68 = type { %"class.update_client::ActionHandler"* }
%"class.update_client::ActionHandler" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.69", [4 x i8] }>
%"class.base::RefCountedThreadSafe.69" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.70 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type opaque
%"class.update_client::CrxInstaller" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.61", [4 x i8] }>

@_ZTVN17component_updater28FlocComponentInstallerPolicyE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.component_updater::FlocComponentInstallerPolicy"*)* @_ZN17component_updater28FlocComponentInstallerPolicyD2Ev to i8*), i8* bitcast (void (%"class.component_updater::FlocComponentInstallerPolicy"*)* @_ZN17component_updater28FlocComponentInstallerPolicyD0Ev to i8*), i8* bitcast (i1 (%"class.component_updater::FlocComponentInstallerPolicy"*, %"class.base::DictionaryValue"*, %"class.base::FilePath"*)* @_ZNK17component_updater28FlocComponentInstallerPolicy18VerifyInstallationERKN4base15DictionaryValueERKNS1_8FilePathE to i8*), i8* bitcast (i1 (%"class.component_updater::FlocComponentInstallerPolicy"*)* @_ZNK17component_updater28FlocComponentInstallerPolicy42SupportsGroupPolicyEnabledComponentUpdatesEv to i8*), i8* bitcast (i1 (%"class.component_updater::FlocComponentInstallerPolicy"*)* @_ZNK17component_updater28FlocComponentInstallerPolicy25RequiresNetworkEncryptionEv to i8*), i8* bitcast (void (%"struct.update_client::CrxInstaller::Result"*, %"class.component_updater::FlocComponentInstallerPolicy"*, %"class.base::DictionaryValue"*, %"class.base::FilePath"*)* @_ZN17component_updater28FlocComponentInstallerPolicy15OnCustomInstallERKN4base15DictionaryValueERKNS1_8FilePathE to i8*), i8* bitcast (void (%"class.component_updater::FlocComponentInstallerPolicy"*)* @_ZN17component_updater28FlocComponentInstallerPolicy17OnCustomUninstallEv to i8*), i8* bitcast (void (%"class.component_updater::FlocComponentInstallerPolicy"*, %"class.base::Version"*, %"class.base::FilePath"*, %"class.base::DictionaryValue"*)* @_ZN17component_updater28FlocComponentInstallerPolicy14ComponentReadyERKN4base7VersionERKNS1_8FilePathENSt3__110unique_ptrINS1_15DictionaryValueENS8_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.base::FilePath"*, %"class.component_updater::FlocComponentInstallerPolicy"*)* @_ZNK17component_updater28FlocComponentInstallerPolicy21GetRelativeInstallDirEv to i8*), i8* bitcast (void (%"class.component_updater::FlocComponentInstallerPolicy"*, %"class.std::__1::vector.25"*)* @_ZNK17component_updater28FlocComponentInstallerPolicy7GetHashEPNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.component_updater::FlocComponentInstallerPolicy"*)* @_ZNK17component_updater28FlocComponentInstallerPolicy7GetNameEv to i8*), i8* bitcast (void (%"class.std::__1::map"*, %"class.component_updater::FlocComponentInstallerPolicy"*)* @_ZNK17component_updater28FlocComponentInstallerPolicy22GetInstallerAttributesEv to i8*)] }, align 8
@_ZN18federated_learning27kSortingLshClustersFileNameE = external constant [0 x i8], align 1
@_ZN18federated_learning31kManifestFlocComponentFormatKeyE = external constant [0 x i8], align 1
@_ZN18federated_learning34kCurrentFlocComponentFormatVersionE = external local_unnamed_addr constant i32, align 4
@_ZN18federated_learning22kTopLevelDirectoryNameE = external constant [0 x i8], align 1
@_ZN17component_updaterL29kFlocComponentPublicKeySHA256E = internal constant [32 x i8] c",\07}\F7\EB8\97\9E\AE\DCS\91\5C\AB\FF\89\BC\F0\D90\D2.\8Fh:\F9!\91\9F\C1\84\A1", align 16
@_ZN17component_updaterL33kFlocComponentFetcherManifestNameE = internal unnamed_addr constant [30 x i8] c"Federated Learning of Cohorts\00", align 16

@_ZN17component_updater28FlocComponentInstallerPolicyC1EPN18federated_learning29FlocSortingLshClustersServiceE = hidden unnamed_addr alias void (%"class.component_updater::FlocComponentInstallerPolicy"*, %"class.federated_learning::FlocSortingLshClustersService"*), void (%"class.component_updater::FlocComponentInstallerPolicy"*, %"class.federated_learning::FlocSortingLshClustersService"*)* @_ZN17component_updater28FlocComponentInstallerPolicyC2EPN18federated_learning29FlocSortingLshClustersServiceE
@_ZN17component_updater28FlocComponentInstallerPolicyD1Ev = hidden unnamed_addr alias void (%"class.component_updater::FlocComponentInstallerPolicy"*), void (%"class.component_updater::FlocComponentInstallerPolicy"*)* @_ZN17component_updater28FlocComponentInstallerPolicyD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17component_updater28FlocComponentInstallerPolicyC2EPN18federated_learning29FlocSortingLshClustersServiceE(%"class.component_updater::FlocComponentInstallerPolicy"* nocapture, %"class.federated_learning::FlocSortingLshClustersService"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.component_updater::FlocComponentInstallerPolicy", %"class.component_updater::FlocComponentInstallerPolicy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN17component_updater28FlocComponentInstallerPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.component_updater::FlocComponentInstallerPolicy", %"class.component_updater::FlocComponentInstallerPolicy"* %0, i64 0, i32 1
  store %"class.federated_learning::FlocSortingLshClustersService"* %1, %"class.federated_learning::FlocSortingLshClustersService"** %4, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17component_updater24ComponentInstallerPolicyD2Ev(%"class.component_updater::ComponentInstallerPolicy"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater28FlocComponentInstallerPolicyD2Ev(%"class.component_updater::FlocComponentInstallerPolicy"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::FlocComponentInstallerPolicy", %"class.component_updater::FlocComponentInstallerPolicy"* %0, i64 0, i32 0
  tail call void @_ZN17component_updater24ComponentInstallerPolicyD2Ev(%"class.component_updater::ComponentInstallerPolicy"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater28FlocComponentInstallerPolicyD0Ev(%"class.component_updater::FlocComponentInstallerPolicy"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.component_updater::FlocComponentInstallerPolicy", %"class.component_updater::FlocComponentInstallerPolicy"* %0, i64 0, i32 0
  tail call void @_ZN17component_updater24ComponentInstallerPolicyD2Ev(%"class.component_updater::ComponentInstallerPolicy"* %2) #9
  %3 = bitcast %"class.component_updater::FlocComponentInstallerPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater28FlocComponentInstallerPolicy42SupportsGroupPolicyEnabledComponentUpdatesEv(%"class.component_updater::FlocComponentInstallerPolicy"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater28FlocComponentInstallerPolicy25RequiresNetworkEncryptionEv(%"class.component_updater::FlocComponentInstallerPolicy"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater28FlocComponentInstallerPolicy15OnCustomInstallERKN4base15DictionaryValueERKNS1_8FilePathE(%"struct.update_client::CrxInstaller::Result"* noalias nocapture sret, %"class.component_updater::FlocComponentInstallerPolicy"* nocapture readnone, %"class.base::DictionaryValue"* nocapture readnone dereferenceable(32), %"class.base::FilePath"* nocapture readnone dereferenceable(24)) unnamed_addr #2 align 2 {
  %5 = bitcast %"struct.update_client::CrxInstaller::Result"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17component_updater28FlocComponentInstallerPolicy17OnCustomUninstallEv(%"class.component_updater::FlocComponentInstallerPolicy"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater28FlocComponentInstallerPolicy14ComponentReadyERKN4base7VersionERKNS1_8FilePathENSt3__110unique_ptrINS1_15DictionaryValueENS8_14default_deleteISA_EEEE(%"class.component_updater::FlocComponentInstallerPolicy"* nocapture readonly, %"class.base::Version"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24), %"class.base::DictionaryValue"*) unnamed_addr #2 align 2 {
  %5 = alloca %"class.base::FilePath", align 8
  %6 = getelementptr inbounds %"class.component_updater::FlocComponentInstallerPolicy", %"class.component_updater::FlocComponentInstallerPolicy"* %0, i64 0, i32 1
  %7 = load %"class.federated_learning::FlocSortingLshClustersService"*, %"class.federated_learning::FlocSortingLshClustersService"** %6, align 8
  %8 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN18federated_learning27kSortingLshClustersFileNameE, i64 0, i64 0)) #9
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %5, %"class.base::FilePath"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN18federated_learning27kSortingLshClustersFileNameE, i64 0, i64 0), i64 %9) #9
  %10 = bitcast %"class.federated_learning::FlocSortingLshClustersService"* %7 to void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::FilePath"*, %"class.base::Version"*)***
  %11 = load void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::FilePath"*, %"class.base::Version"*)**, void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::FilePath"*, %"class.base::Version"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::FilePath"*, %"class.base::Version"*)*, void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::FilePath"*, %"class.base::Version"*)** %11, i64 2
  %13 = load void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::FilePath"*, %"class.base::Version"*)*, void (%"class.federated_learning::FlocSortingLshClustersService"*, %"class.base::FilePath"*, %"class.base::Version"*)** %12, align 8
  call void %13(%"class.federated_learning::FlocSortingLshClustersService"* %7, %"class.base::FilePath"* nonnull dereferenceable(24) %5, %"class.base::Version"* dereferenceable(24) %1) #9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  %14 = icmp eq %"class.base::DictionaryValue"* %3, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %16) #9
  %17 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %4, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17component_updater28FlocComponentInstallerPolicy18VerifyInstallationERKN4base15DictionaryValueERKNS1_8FilePathE(%"class.component_updater::FlocComponentInstallerPolicy"* nocapture readnone, %"class.base::DictionaryValue"* dereferenceable(32), %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = tail call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24) %2) #9
  br i1 %5, label %6, label %16

6:                                                ; preds = %3
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9
  store i32 0, i32* %4, align 4
  %8 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN18federated_learning31kManifestFlocComponentFormatKeyE, i64 0, i64 0)) #9
  %9 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN18federated_learning31kManifestFlocComponentFormatKeyE, i64 0, i64 0), i64 %8, i32* nonnull %4) #9
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = load i32, i32* %4, align 4
  %12 = load i32, i32* @_ZN18federated_learning34kCurrentFlocComponentFormatVersionE, align 4
  %13 = icmp eq i32 %11, %12
  br label %14

14:                                               ; preds = %10, %6
  %15 = phi i1 [ false, %6 ], [ %13, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i1 [ %15, %14 ], [ false, %3 ]
  ret i1 %17
}

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #6

declare zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"*, i8*, i64, i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater28FlocComponentInstallerPolicy21GetRelativeInstallDirEv(%"class.base::FilePath"* noalias sret, %"class.component_updater::FlocComponentInstallerPolicy"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN18federated_learning22kTopLevelDirectoryNameE, i64 0, i64 0)) #9
  tail call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN18federated_learning22kTopLevelDirectoryNameE, i64 0, i64 0), i64 %3) #9
  ret void
}

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater28FlocComponentInstallerPolicy7GetHashEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.component_updater::FlocComponentInstallerPolicy"* nocapture readnone, %"class.std::__1::vector.25"* nocapture) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.25"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp ult i64 %8, 32
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %36, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %1, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %7
  %16 = icmp ult i64 %15, 32
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* @_ZN17component_updaterL29kFlocComponentPublicKeySHA256E, i64 0, i64 %15
  %18 = select i1 %16, i8* %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updaterL29kFlocComponentPublicKeySHA256E, i64 1, i64 0)
  %19 = ptrtoint i8* %18 to i64
  %20 = sub i64 %19, ptrtoint ([32 x i8]* @_ZN17component_updaterL29kFlocComponentPublicKeySHA256E to i64)
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updaterL29kFlocComponentPublicKeySHA256E, i64 0, i64 0), i64 %20, i1 false) #9
  br label %23

23:                                               ; preds = %22, %11
  br i1 %16, label %24, label %34

24:                                               ; preds = %23
  %25 = load i64, i64* %13, align 8
  %26 = sub i64 ptrtoint (i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updaterL29kFlocComponentPublicKeySHA256E, i64 1, i64 0) to i64), %19
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = inttoptr i64 %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %18, i64 %26, i1 false) #9
  %30 = getelementptr inbounds i8, i8* %29, i64 %26
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %28, %24
  %33 = phi i64 [ %31, %28 ], [ %25, %24 ]
  store i64 %33, i64* %13, align 8
  br label %58

34:                                               ; preds = %23
  %35 = getelementptr inbounds i8, i8* %10, i64 %20
  store i8* %35, i8** %12, align 8
  br label %58

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %1, i64 0, i32 0, i32 0
  %38 = icmp eq i64 %7, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %1, i64 0, i32 0, i32 1
  %41 = bitcast i8** %40 to i64*
  store i64 %7, i64* %41, align 8
  tail call void @_ZdlPv(i8* nonnull %10) #10
  %42 = bitcast %"class.std::__1::vector.25"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #9
  br label %45

43:                                               ; preds = %36
  %44 = icmp ult i64 %5, 4611686018427387903
  br i1 %44, label %45, label %50

45:                                               ; preds = %39, %43
  %46 = phi i64 [ 0, %39 ], [ %5, %43 ]
  %47 = shl i64 %46, 1
  %48 = icmp ugt i64 %47, 32
  %49 = select i1 %48, i64 %47, i64 32
  br label %50

50:                                               ; preds = %45, %43
  %51 = phi i64 [ %49, %45 ], [ 9223372036854775807, %43 ]
  %52 = tail call i8* @_Znwm(i64 %51) #10
  %53 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %1, i64 0, i32 0, i32 1
  store i8* %52, i8** %53, align 8
  store i8* %52, i8** %37, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 %51
  store i8* %54, i8** %3, align 8
  %55 = bitcast i8** %53 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 16 getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN17component_updaterL29kFlocComponentPublicKeySHA256E, i64 0, i64 0), i64 32, i1 false) #9
  %56 = getelementptr inbounds i8, i8* %52, i64 32
  %57 = ptrtoint i8* %56 to i64
  store i64 %57, i64* %55, align 8
  br label %58

58:                                               ; preds = %32, %34, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater28FlocComponentInstallerPolicy7GetNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.component_updater::FlocComponentInstallerPolicy"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #10
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %6, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %3, i8* align 16 getelementptr inbounds ([30 x i8], [30 x i8]* @_ZN17component_updaterL33kFlocComponentFetcherManifestNameE, i64 0, i64 0), i64 29, i1 false) #9
  %7 = getelementptr inbounds i8, i8* %3, i64 29
  store i8 0, i8* %7, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17component_updater28FlocComponentInstallerPolicy22GetInstallerAttributesEv(%"class.std::__1::map"* noalias sret, %"class.component_updater::FlocComponentInstallerPolicy"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_node_base"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17component_updater21RegisterFlocComponentEPNS_22ComponentUpdateServiceEPN18federated_learning29FlocSortingLshClustersServiceE(%"class.component_updater::ComponentUpdateService"*, %"class.federated_learning::FlocSortingLshClustersService"*) local_unnamed_addr #2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = ptrtoint %"class.federated_learning::FlocSortingLshClustersService"* %1 to i64
  %5 = tail call i8* @_Znwm(i64 16) #10
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN17component_updater28FlocComponentInstallerPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = tail call i8* @_Znwm(i64 120) #10
  %10 = bitcast i8* %9 to %"class.component_updater::ComponentInstaller"*
  %11 = bitcast i8* %5 to %"class.component_updater::ComponentInstallerPolicy"*
  tail call void @_ZN17component_updater18ComponentInstallerC1ENSt3__110unique_ptrINS_24ComponentInstallerPolicyENS1_14default_deleteIS3_EEEE13scoped_refptrIN13update_client13ActionHandlerEE(%"class.component_updater::ComponentInstaller"* nonnull %10, %"class.component_updater::ComponentInstallerPolicy"* nonnull %11, %"class.update_client::ActionHandler"* null) #9
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  call void @_ZN17component_updater18ComponentInstaller8RegisterEPNS_22ComponentUpdateServiceEN4base12OnceCallbackIFvvEEE(%"class.component_updater::ComponentInstaller"* nonnull %10, %"class.component_updater::ComponentUpdateService"* %0, %"class.base::OnceCallback"* nonnull %3) #9
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #9
  %17 = atomicrmw sub i32* %13, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %2
  %20 = bitcast i8* %9 to %"class.update_client::CrxInstaller"*
  %21 = bitcast i8* %9 to void (%"class.update_client::CrxInstaller"*)***
  %22 = load void (%"class.update_client::CrxInstaller"*)**, void (%"class.update_client::CrxInstaller"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.update_client::CrxInstaller"*)*, void (%"class.update_client::CrxInstaller"*)** %22, i64 5
  %24 = load void (%"class.update_client::CrxInstaller"*)*, void (%"class.update_client::CrxInstaller"*)** %23, align 8
  call void %24(%"class.update_client::CrxInstaller"* nonnull %20) #9
  br label %25

25:                                               ; preds = %2, %19
  ret void
}

declare void @_ZN17component_updater18ComponentInstaller8RegisterEPNS_22ComponentUpdateServiceEN4base12OnceCallbackIFvvEEE(%"class.component_updater::ComponentInstaller"*, %"class.component_updater::ComponentUpdateService"*, %"class.base::OnceCallback"*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN17component_updater18ComponentInstallerC1ENSt3__110unique_ptrINS_24ComponentInstallerPolicyENS1_14default_deleteIS3_EEEE13scoped_refptrIN13update_client13ActionHandlerEE(%"class.component_updater::ComponentInstaller"*, %"class.component_updater::ComponentInstallerPolicy"*, %"class.update_client::ActionHandler"*) unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
