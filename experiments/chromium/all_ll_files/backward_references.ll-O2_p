; ModuleID = '../../third_party/brotli/enc/backward_references.c'
source_filename = "../../third_party/brotli/enc/backward_references.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.BrotliEncoderParams = type { i32, i32, i32, i32, i64, i64, i32, i32, %struct.BrotliHasherParams, %struct.BrotliDistanceParams, %struct.BrotliEncoderDictionary }
%struct.BrotliHasherParams = type { i32, i32, i32, i32, i32 }
%struct.BrotliDistanceParams = type { i32, i32, i32, i32, i64 }
%struct.BrotliEncoderDictionary = type { %struct.BrotliDictionary*, i32, i32, i64, i16*, i8*, i16*, %struct.DictWord* }
%struct.BrotliDictionary = type { [32 x i8], [32 x i32], i64, i8* }
%struct.DictWord = type { i8, i8, i16 }
%struct.Hasher = type { %struct.HasherCommon, %union.anon }
%struct.HasherCommon = type { i8*, i64, i64, %struct.BrotliHasherParams, i32 }
%union.anon = type { %struct.H42 }
%struct.H42 = type { [512 x i16], i64, i8*, %struct.HasherCommon* }
%struct.Command = type { i32, i32, i32, i16, i16 }
%struct.BankH40 = type { [65536 x %struct.SlotH40] }
%struct.SlotH40 = type { i16, i16 }
%struct.BankH41 = type { [65536 x %struct.SlotH41] }
%struct.SlotH41 = type { i16, i16 }
%struct.BankH42 = type { [512 x %struct.SlotH42] }
%struct.SlotH42 = type { i16, i16 }

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliCreateBackwardReferences(i64, i64, i8* readonly, i64, i8* nocapture readnone, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher*, i32*, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %13 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %5, i64 0, i32 8, i32 0
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %27 [
    i32 2, label %15
    i32 3, label %16
    i32 4, label %17
    i32 5, label %18
    i32 6, label %19
    i32 40, label %20
    i32 41, label %21
    i32 42, label %22
    i32 54, label %23
    i32 35, label %24
    i32 55, label %25
    i32 65, label %26
  ]

15:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH2(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

16:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH3(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

17:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH4(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

18:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH5(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

19:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH6(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

20:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH40(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

21:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH41(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

22:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH42(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

23:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH54(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

24:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH35(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

25:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH55(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

26:                                               ; preds = %12
  tail call fastcc void @CreateBackwardReferencesNH65(i64 %0, i64 %1, i8* %2, i64 %3, %struct.BrotliEncoderParams* %5, %struct.Hasher* %6, i32* %7, i64* %8, %struct.Command* %9, i64* %10, i64* %11)
  br label %27

27:                                               ; preds = %12, %15, %16, %17, %18, %19, %20, %21, %22, %23, %24, %25, %26
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH2(i64, i64, i8* nocapture readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* nocapture readonly, i32* nocapture, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = add i64 %15, -16
  %17 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* %7, align 8
  %20 = add i64 %1, %0
  %21 = icmp ugt i64 %0, 7
  %22 = add i64 %20, -7
  %23 = select i1 %21, i64 %22, i64 %1
  %24 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 9
  %27 = select i1 %26, i64 64, i64 512
  %28 = add i64 %1, 8
  %29 = icmp ult i64 %28, %20
  br i1 %29, label %30, label %941

30:                                               ; preds = %11
  %31 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1
  %32 = add i64 %27, %1
  %33 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 4
  %34 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %35 = bitcast i16* %34 to i32**
  %36 = and i64 %3, 4294967295
  %37 = bitcast %union.anon* %31 to %struct.HasherCommon**
  %38 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 5
  %39 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 2
  %40 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 3
  %41 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 0
  %42 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 4
  %43 = shl nuw nsw i64 %27, 2
  %44 = getelementptr inbounds i32, i32* %6, i64 1
  %45 = getelementptr inbounds i32, i32* %6, i64 2
  %46 = getelementptr inbounds i32, i32* %6, i64 3
  %47 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %48 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  br label %49

49:                                               ; preds = %30, %933
  %50 = phi i64 [ %0, %30 ], [ %940, %933 ]
  %51 = phi i64 [ %1, %30 ], [ %937, %933 ]
  %52 = phi %struct.Command* [ %8, %30 ], [ %936, %933 ]
  %53 = phi i64 [ %32, %30 ], [ %935, %933 ]
  %54 = phi i64 [ %19, %30 ], [ %934, %933 ]
  %55 = icmp ult i64 %51, %16
  %56 = select i1 %55, i64 %51, i64 %16
  %57 = add i64 %51, %18
  %58 = icmp ult i64 %57, %16
  %59 = select i1 %58, i64 %57, i64 %16
  %60 = load i64, i64* %33, align 8
  %61 = load i32*, i32** %35, align 8, !alias.scope !2, !noalias !5
  %62 = and i64 %51, %3
  %63 = getelementptr inbounds i8, i8* %2, i64 %62
  %64 = load i8, i8* %63, align 1, !alias.scope !9, !noalias !10
  %65 = bitcast i8* %63 to i64*
  %66 = load i64, i64* %65, align 8, !alias.scope !9, !noalias !10
  %67 = mul i64 %66, -4819355556693147648
  %68 = lshr i64 %67, 48
  %69 = load i32, i32* %6, align 4, !alias.scope !11, !noalias !12
  %70 = sext i32 %69 to i64
  %71 = sub i64 %51, %70
  %72 = icmp ult i64 %71, %51
  br i1 %72, label %73, label %131

73:                                               ; preds = %49
  %74 = and i64 %36, %71
  %75 = getelementptr inbounds i8, i8* %2, i64 %74
  %76 = load i8, i8* %75, align 1, !alias.scope !9, !noalias !10
  %77 = icmp eq i8 %64, %76
  br i1 %77, label %78, label %131

78:                                               ; preds = %73
  %79 = lshr i64 %50, 3
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %108, label %81, !prof !13

81:                                               ; preds = %78
  %82 = bitcast i8* %75 to i64*
  %83 = load i64, i64* %82, align 8, !alias.scope !9, !noalias !10
  %84 = icmp eq i64 %66, %83
  br i1 %84, label %85, label %100, !prof !13

85:                                               ; preds = %81, %93
  %86 = phi i64 [ %90, %93 ], [ 0, %81 ]
  %87 = phi i8* [ %89, %93 ], [ %63, %81 ]
  %88 = phi i64 [ %91, %93 ], [ %79, %81 ]
  %89 = getelementptr inbounds i8, i8* %87, i64 8
  %90 = add nuw i64 %86, 8
  %91 = add nsw i64 %88, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %108, label %93, !prof !13

93:                                               ; preds = %85
  %94 = bitcast i8* %89 to i64*
  %95 = load i64, i64* %94, align 8, !alias.scope !9, !noalias !10
  %96 = getelementptr inbounds i8, i8* %75, i64 %90
  %97 = bitcast i8* %96 to i64*
  %98 = load i64, i64* %97, align 8, !alias.scope !9, !noalias !10
  %99 = icmp eq i64 %95, %98
  br i1 %99, label %85, label %100, !prof !13

100:                                              ; preds = %93, %81
  %101 = phi i64 [ %66, %81 ], [ %95, %93 ]
  %102 = phi i64 [ 0, %81 ], [ %90, %93 ]
  %103 = phi i64 [ %83, %81 ], [ %98, %93 ]
  %104 = xor i64 %103, %101
  %105 = tail call i64 @llvm.cttz.i64(i64 %104, i1 true) #4, !range !14
  %106 = lshr i64 %105, 3
  %107 = or i64 %106, %102
  br label %121

108:                                              ; preds = %85, %78
  %109 = phi i64 [ 0, %78 ], [ %90, %85 ]
  %110 = phi i8* [ %63, %78 ], [ %89, %85 ]
  %111 = and i64 %50, 7
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds i8, i8* %75, i64 %109
  %115 = load i8, i8* %114, align 1, !alias.scope !9, !noalias !10
  %116 = load i8, i8* %110, align 1, !alias.scope !9, !noalias !10
  %117 = icmp eq i8 %115, %116
  br i1 %117, label %118, label %121, !prof !15

118:                                              ; preds = %113
  %119 = add i64 %109, 1
  %120 = icmp eq i64 %111, 1
  br i1 %120, label %121, label %952

121:                                              ; preds = %997, %118, %113, %952, %958, %961, %967, %970, %976, %979, %985, %988, %994, %108, %100
  %122 = phi i64 [ %107, %100 ], [ %109, %108 ], [ %109, %113 ], [ %119, %118 ], [ %119, %952 ], [ %959, %958 ], [ %959, %961 ], [ %968, %967 ], [ %968, %970 ], [ %977, %976 ], [ %977, %979 ], [ %986, %985 ], [ %986, %988 ], [ %995, %994 ], [ %1004, %997 ]
  %123 = icmp ugt i64 %122, 3
  br i1 %123, label %124, label %131

124:                                              ; preds = %121
  %125 = mul i64 %122, 135
  %126 = add i64 %125, 1935
  %127 = icmp ugt i64 %126, 2020
  br i1 %127, label %128, label %131

128:                                              ; preds = %124
  %129 = trunc i64 %51 to i32
  %130 = getelementptr inbounds i32, i32* %61, i64 %68
  store i32 %129, i32* %130, align 4, !noalias !16
  br label %316

131:                                              ; preds = %124, %121, %73, %49
  %132 = getelementptr inbounds i32, i32* %61, i64 %68
  %133 = load i32, i32* %132, align 4, !noalias !16
  %134 = zext i32 %133 to i64
  %135 = trunc i64 %51 to i32
  store i32 %135, i32* %132, align 4, !noalias !16
  %136 = sub i64 %51, %134
  %137 = and i64 %134, %3
  %138 = getelementptr inbounds i8, i8* %2, i64 %137
  %139 = load i8, i8* %138, align 1, !alias.scope !9, !noalias !10
  %140 = icmp eq i8 %64, %139
  %141 = add i64 %136, -1
  %142 = icmp ult i64 %141, %56
  %143 = and i1 %140, %142
  br i1 %143, label %144, label %884, !prof !17

144:                                              ; preds = %131
  %145 = lshr i64 %50, 3
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %174, label %147, !prof !13

147:                                              ; preds = %144
  %148 = bitcast i8* %138 to i64*
  %149 = load i64, i64* %148, align 8, !alias.scope !9, !noalias !10
  %150 = icmp eq i64 %66, %149
  br i1 %150, label %151, label %166, !prof !13

151:                                              ; preds = %147, %159
  %152 = phi i64 [ %156, %159 ], [ 0, %147 ]
  %153 = phi i8* [ %155, %159 ], [ %63, %147 ]
  %154 = phi i64 [ %157, %159 ], [ %145, %147 ]
  %155 = getelementptr inbounds i8, i8* %153, i64 8
  %156 = add nuw i64 %152, 8
  %157 = add nsw i64 %154, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %174, label %159, !prof !13

159:                                              ; preds = %151
  %160 = bitcast i8* %155 to i64*
  %161 = load i64, i64* %160, align 8, !alias.scope !9, !noalias !10
  %162 = getelementptr inbounds i8, i8* %138, i64 %156
  %163 = bitcast i8* %162 to i64*
  %164 = load i64, i64* %163, align 8, !alias.scope !9, !noalias !10
  %165 = icmp eq i64 %161, %164
  br i1 %165, label %151, label %166, !prof !13

166:                                              ; preds = %159, %147
  %167 = phi i64 [ %66, %147 ], [ %161, %159 ]
  %168 = phi i64 [ 0, %147 ], [ %156, %159 ]
  %169 = phi i64 [ %149, %147 ], [ %164, %159 ]
  %170 = xor i64 %169, %167
  %171 = tail call i64 @llvm.cttz.i64(i64 %170, i1 true) #4, !range !14
  %172 = lshr i64 %171, 3
  %173 = or i64 %172, %168
  br label %187

174:                                              ; preds = %151, %144
  %175 = phi i64 [ 0, %144 ], [ %156, %151 ]
  %176 = phi i8* [ %63, %144 ], [ %155, %151 ]
  %177 = and i64 %50, 7
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %187, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds i8, i8* %138, i64 %175
  %181 = load i8, i8* %180, align 1, !alias.scope !9, !noalias !10
  %182 = load i8, i8* %176, align 1, !alias.scope !9, !noalias !10
  %183 = icmp eq i8 %181, %182
  br i1 %183, label %184, label %187, !prof !15

184:                                              ; preds = %179
  %185 = add i64 %175, 1
  %186 = icmp eq i64 %177, 1
  br i1 %186, label %187, label %1005

187:                                              ; preds = %1050, %184, %179, %1005, %1011, %1014, %1020, %1023, %1029, %1032, %1038, %1041, %1047, %174, %166
  %188 = phi i64 [ %173, %166 ], [ %175, %174 ], [ %175, %179 ], [ %185, %184 ], [ %185, %1005 ], [ %1012, %1011 ], [ %1012, %1014 ], [ %1021, %1020 ], [ %1021, %1023 ], [ %1030, %1029 ], [ %1030, %1032 ], [ %1039, %1038 ], [ %1039, %1041 ], [ %1048, %1047 ], [ %1057, %1050 ]
  %189 = icmp ugt i64 %188, 3
  br i1 %189, label %190, label %200

190:                                              ; preds = %187
  %191 = mul i64 %188, 135
  %192 = trunc i64 %136 to i32
  %193 = tail call i32 @llvm.ctlz.i32(i32 %192, i1 true) #4, !range !18
  %194 = xor i32 %193, 31
  %195 = mul nsw i32 %194, -30
  %196 = add nsw i32 %195, 1920
  %197 = zext i32 %196 to i64
  %198 = add i64 %191, %197
  %199 = icmp ugt i64 %198, 2020
  br i1 %199, label %316, label %200

200:                                              ; preds = %190, %187
  %201 = load %struct.HasherCommon*, %struct.HasherCommon** %37, align 8, !alias.scope !2, !noalias !5
  %202 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %201, i64 0, i32 2
  %203 = load i64, i64* %202, align 8, !noalias !16
  %204 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %201, i64 0, i32 1
  %205 = load i64, i64* %204, align 8, !noalias !16
  %206 = lshr i64 %205, 7
  %207 = icmp ult i64 %203, %206
  br i1 %207, label %884, label %208

208:                                              ; preds = %200
  %209 = mul i64 %66, 506832829
  %210 = lshr i64 %209, 17
  %211 = and i64 %210, 32766
  %212 = add i64 %59, 1
  %213 = add i64 %205, 1
  store i64 %213, i64* %204, align 8, !noalias !16
  %214 = load i8*, i8** %38, align 8, !noalias !16
  %215 = getelementptr inbounds i8, i8* %214, i64 %211
  %216 = load i8, i8* %215, align 1, !noalias !16
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %884, label %218

218:                                              ; preds = %208
  %219 = zext i8 %216 to i64
  %220 = load i16*, i16** %42, align 8, !noalias !16
  %221 = getelementptr inbounds i16, i16* %220, i64 %211
  %222 = load i16, i16* %221, align 2, !noalias !16
  %223 = zext i16 %222 to i64
  %224 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %41, align 8, !noalias !16
  %225 = icmp ult i64 %50, %219
  br i1 %225, label %884, label %226

226:                                              ; preds = %218
  %227 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %224, i64 0, i32 1, i64 %219
  %228 = load i32, i32* %227, align 4, !noalias !16
  %229 = zext i32 %228 to i64
  %230 = mul nuw nsw i64 %223, %219
  %231 = add nuw nsw i64 %230, %229
  %232 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %224, i64 0, i32 3
  %233 = load i8*, i8** %232, align 8, !noalias !16
  %234 = getelementptr inbounds i8, i8* %233, i64 %231
  %235 = lshr i64 %219, 3
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %264, label %237, !prof !13

237:                                              ; preds = %226
  %238 = bitcast i8* %234 to i64*
  %239 = load i64, i64* %238, align 8, !noalias !16
  %240 = icmp eq i64 %239, %66
  br i1 %240, label %241, label %256, !prof !13

241:                                              ; preds = %237, %249
  %242 = phi i64 [ %246, %249 ], [ 0, %237 ]
  %243 = phi i8* [ %245, %249 ], [ %234, %237 ]
  %244 = phi i64 [ %247, %249 ], [ %235, %237 ]
  %245 = getelementptr inbounds i8, i8* %243, i64 8
  %246 = add nuw nsw i64 %242, 8
  %247 = add nsw i64 %244, -1
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %264, label %249, !prof !13

249:                                              ; preds = %241
  %250 = getelementptr inbounds i8, i8* %63, i64 %246
  %251 = bitcast i8* %250 to i64*
  %252 = load i64, i64* %251, align 8, !alias.scope !9, !noalias !10
  %253 = bitcast i8* %245 to i64*
  %254 = load i64, i64* %253, align 8, !noalias !16
  %255 = icmp eq i64 %254, %252
  br i1 %255, label %241, label %256, !prof !13

256:                                              ; preds = %249, %237
  %257 = phi i64 [ %66, %237 ], [ %252, %249 ]
  %258 = phi i64 [ 0, %237 ], [ %246, %249 ]
  %259 = phi i64 [ %239, %237 ], [ %254, %249 ]
  %260 = xor i64 %259, %257
  %261 = tail call i64 @llvm.cttz.i64(i64 %260, i1 true) #4, !range !14
  %262 = lshr i64 %261, 3
  %263 = or i64 %262, %258
  br label %277

264:                                              ; preds = %241, %226
  %265 = phi i64 [ 0, %226 ], [ %246, %241 ]
  %266 = phi i8* [ %234, %226 ], [ %245, %241 ]
  %267 = and i64 %219, 7
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %277, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds i8, i8* %63, i64 %265
  %271 = load i8, i8* %270, align 1, !alias.scope !9, !noalias !10
  %272 = load i8, i8* %266, align 1, !noalias !16
  %273 = icmp eq i8 %271, %272
  br i1 %273, label %274, label %277, !prof !15

274:                                              ; preds = %269
  %275 = add nuw nsw i64 %265, 1
  %276 = icmp eq i64 %267, 1
  br i1 %276, label %277, label %1058

277:                                              ; preds = %1103, %274, %269, %1058, %1064, %1067, %1073, %1076, %1082, %1085, %1091, %1094, %1100, %264, %256
  %278 = phi i64 [ %263, %256 ], [ %265, %264 ], [ %265, %269 ], [ %275, %274 ], [ %275, %1058 ], [ %1065, %1064 ], [ %1065, %1067 ], [ %1074, %1073 ], [ %1074, %1076 ], [ %1083, %1082 ], [ %1083, %1085 ], [ %1092, %1091 ], [ %1092, %1094 ], [ %1101, %1100 ], [ %1110, %1103 ]
  %279 = load i32, i32* %39, align 4, !noalias !16
  %280 = zext i32 %279 to i64
  %281 = add i64 %278, %280
  %282 = icmp ule i64 %281, %219
  %283 = icmp eq i64 %278, 0
  %284 = or i1 %283, %282
  br i1 %284, label %884, label %285

285:                                              ; preds = %277
  %286 = sub i64 %219, %278
  %287 = shl i64 %286, 2
  %288 = load i64, i64* %40, align 8, !noalias !16
  %289 = mul i64 %286, 6
  %290 = lshr i64 %288, %289
  %291 = and i64 %290, 63
  %292 = add i64 %291, %287
  %293 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %224, i64 0, i32 0, i64 %219
  %294 = load i8, i8* %293, align 1, !noalias !16
  %295 = zext i8 %294 to i64
  %296 = shl i64 %292, %295
  %297 = add i64 %212, %223
  %298 = add i64 %297, %296
  %299 = icmp ugt i64 %298, %60
  br i1 %299, label %884, label %300

300:                                              ; preds = %285
  %301 = mul i64 %278, 135
  %302 = add i64 %301, 1920
  %303 = trunc i64 %298 to i32
  %304 = tail call i32 @llvm.ctlz.i32(i32 %303, i1 true) #4, !range !18
  %305 = xor i32 %304, 31
  %306 = mul nuw nsw i32 %305, 30
  %307 = zext i32 %306 to i64
  %308 = sub i64 %302, %307
  %309 = icmp ult i64 %308, 2020
  br i1 %309, label %884, label %310

310:                                              ; preds = %300
  %311 = zext i8 %216 to i32
  %312 = trunc i64 %278 to i32
  %313 = sub nsw i32 %311, %312
  %314 = add i64 %203, 1
  store i64 %314, i64* %202, align 8, !noalias !16
  %315 = icmp eq i64 %308, 2020
  br i1 %315, label %884, label %316

316:                                              ; preds = %310, %190, %128
  %317 = phi i32 [ 0, %128 ], [ 0, %190 ], [ %313, %310 ]
  %318 = phi i64 [ %126, %128 ], [ %198, %190 ], [ %308, %310 ]
  %319 = phi i64 [ %70, %128 ], [ %136, %190 ], [ %298, %310 ]
  %320 = phi i64 [ %122, %128 ], [ %188, %190 ], [ %278, %310 ]
  br label %321

321:                                              ; preds = %316, %615
  %322 = phi i32 [ %607, %615 ], [ %317, %316 ]
  %323 = phi i64 [ %608, %615 ], [ %318, %316 ]
  %324 = phi i64 [ %609, %615 ], [ %319, %316 ]
  %325 = phi i64 [ %610, %615 ], [ %320, %316 ]
  %326 = phi i64 [ %616, %615 ], [ %54, %316 ]
  %327 = phi i64 [ %330, %615 ], [ %50, %316 ]
  %328 = phi i32 [ %617, %615 ], [ 0, %316 ]
  %329 = phi i64 [ %339, %615 ], [ %51, %316 ]
  %330 = add i64 %327, -1
  %331 = load i32, i32* %24, align 4
  %332 = icmp slt i32 %331, 5
  br i1 %332, label %333, label %337

333:                                              ; preds = %321
  %334 = add i64 %325, -1
  %335 = icmp ult i64 %334, %330
  %336 = select i1 %335, i64 %334, i64 %330
  br label %337

337:                                              ; preds = %321, %333
  %338 = phi i64 [ %336, %333 ], [ 0, %321 ]
  %339 = add i64 %329, 1
  %340 = icmp ult i64 %339, %16
  %341 = select i1 %340, i64 %339, i64 %16
  %342 = add i64 %339, %18
  %343 = icmp ult i64 %342, %16
  %344 = select i1 %343, i64 %342, i64 %16
  %345 = load i64, i64* %33, align 8
  %346 = load i32*, i32** %35, align 8, !alias.scope !19, !noalias !22
  %347 = and i64 %339, %3
  %348 = add i64 %338, %347
  %349 = getelementptr inbounds i8, i8* %2, i64 %348
  %350 = load i8, i8* %349, align 1, !alias.scope !26, !noalias !27
  %351 = getelementptr inbounds i8, i8* %2, i64 %347
  %352 = bitcast i8* %351 to i64*
  %353 = load i64, i64* %352, align 8, !alias.scope !26, !noalias !27
  %354 = mul i64 %353, -4819355556693147648
  %355 = lshr i64 %354, 48
  %356 = load i32, i32* %6, align 4, !alias.scope !28, !noalias !29
  %357 = sext i32 %356 to i64
  %358 = sub i64 %339, %357
  %359 = icmp ult i64 %358, %339
  br i1 %359, label %360, label %420

360:                                              ; preds = %337
  %361 = and i64 %36, %358
  %362 = add i64 %361, %338
  %363 = getelementptr inbounds i8, i8* %2, i64 %362
  %364 = load i8, i8* %363, align 1, !alias.scope !26, !noalias !27
  %365 = icmp eq i8 %350, %364
  br i1 %365, label %366, label %420

366:                                              ; preds = %360
  %367 = getelementptr inbounds i8, i8* %2, i64 %361
  %368 = lshr i64 %330, 3
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %397, label %370, !prof !13

370:                                              ; preds = %366
  %371 = bitcast i8* %367 to i64*
  %372 = load i64, i64* %371, align 8, !alias.scope !26, !noalias !27
  %373 = icmp eq i64 %353, %372
  br i1 %373, label %374, label %389, !prof !13

374:                                              ; preds = %370, %382
  %375 = phi i64 [ %379, %382 ], [ 0, %370 ]
  %376 = phi i8* [ %378, %382 ], [ %351, %370 ]
  %377 = phi i64 [ %380, %382 ], [ %368, %370 ]
  %378 = getelementptr inbounds i8, i8* %376, i64 8
  %379 = add nuw i64 %375, 8
  %380 = add nsw i64 %377, -1
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %397, label %382, !prof !13

382:                                              ; preds = %374
  %383 = bitcast i8* %378 to i64*
  %384 = load i64, i64* %383, align 8, !alias.scope !26, !noalias !27
  %385 = getelementptr inbounds i8, i8* %367, i64 %379
  %386 = bitcast i8* %385 to i64*
  %387 = load i64, i64* %386, align 8, !alias.scope !26, !noalias !27
  %388 = icmp eq i64 %384, %387
  br i1 %388, label %374, label %389, !prof !13

389:                                              ; preds = %382, %370
  %390 = phi i64 [ %353, %370 ], [ %384, %382 ]
  %391 = phi i64 [ 0, %370 ], [ %379, %382 ]
  %392 = phi i64 [ %372, %370 ], [ %387, %382 ]
  %393 = xor i64 %392, %390
  %394 = tail call i64 @llvm.cttz.i64(i64 %393, i1 true) #4, !range !14
  %395 = lshr i64 %394, 3
  %396 = or i64 %395, %391
  br label %410

397:                                              ; preds = %374, %366
  %398 = phi i64 [ 0, %366 ], [ %379, %374 ]
  %399 = phi i8* [ %351, %366 ], [ %378, %374 ]
  %400 = and i64 %330, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %410, label %402

402:                                              ; preds = %397
  %403 = getelementptr inbounds i8, i8* %367, i64 %398
  %404 = load i8, i8* %403, align 1, !alias.scope !26, !noalias !27
  %405 = load i8, i8* %399, align 1, !alias.scope !26, !noalias !27
  %406 = icmp eq i8 %404, %405
  br i1 %406, label %407, label %410, !prof !15

407:                                              ; preds = %402
  %408 = add i64 %398, 1
  %409 = icmp eq i64 %400, 1
  br i1 %409, label %410, label %1111

410:                                              ; preds = %1156, %407, %402, %1111, %1117, %1120, %1126, %1129, %1135, %1138, %1144, %1147, %1153, %397, %389
  %411 = phi i64 [ %396, %389 ], [ %398, %397 ], [ %398, %402 ], [ %408, %407 ], [ %408, %1111 ], [ %1118, %1117 ], [ %1118, %1120 ], [ %1127, %1126 ], [ %1127, %1129 ], [ %1136, %1135 ], [ %1136, %1138 ], [ %1145, %1144 ], [ %1145, %1147 ], [ %1154, %1153 ], [ %1163, %1156 ]
  %412 = icmp ugt i64 %411, 3
  br i1 %412, label %413, label %420

413:                                              ; preds = %410
  %414 = mul i64 %411, 135
  %415 = add i64 %414, 1935
  %416 = icmp ugt i64 %415, 2020
  br i1 %416, label %417, label %420

417:                                              ; preds = %413
  %418 = trunc i64 %339 to i32
  %419 = getelementptr inbounds i32, i32* %346, i64 %355
  store i32 %418, i32* %419, align 4, !noalias !30
  br label %606

420:                                              ; preds = %413, %410, %360, %337
  %421 = getelementptr inbounds i32, i32* %346, i64 %355
  %422 = load i32, i32* %421, align 4, !noalias !30
  %423 = zext i32 %422 to i64
  %424 = trunc i64 %339 to i32
  store i32 %424, i32* %421, align 4, !noalias !30
  %425 = sub i64 %339, %423
  %426 = and i64 %423, %3
  %427 = add i64 %426, %338
  %428 = getelementptr inbounds i8, i8* %2, i64 %427
  %429 = load i8, i8* %428, align 1, !alias.scope !26, !noalias !27
  %430 = icmp eq i8 %350, %429
  %431 = add i64 %425, -1
  %432 = icmp ult i64 %431, %341
  %433 = and i1 %430, %432
  br i1 %433, label %434, label %606, !prof !17

434:                                              ; preds = %420
  %435 = getelementptr inbounds i8, i8* %2, i64 %426
  %436 = lshr i64 %330, 3
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %465, label %438, !prof !13

438:                                              ; preds = %434
  %439 = bitcast i8* %435 to i64*
  %440 = load i64, i64* %439, align 8, !alias.scope !26, !noalias !27
  %441 = icmp eq i64 %353, %440
  br i1 %441, label %442, label %457, !prof !13

442:                                              ; preds = %438, %450
  %443 = phi i64 [ %447, %450 ], [ 0, %438 ]
  %444 = phi i8* [ %446, %450 ], [ %351, %438 ]
  %445 = phi i64 [ %448, %450 ], [ %436, %438 ]
  %446 = getelementptr inbounds i8, i8* %444, i64 8
  %447 = add nuw i64 %443, 8
  %448 = add nsw i64 %445, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %465, label %450, !prof !13

450:                                              ; preds = %442
  %451 = bitcast i8* %446 to i64*
  %452 = load i64, i64* %451, align 8, !alias.scope !26, !noalias !27
  %453 = getelementptr inbounds i8, i8* %435, i64 %447
  %454 = bitcast i8* %453 to i64*
  %455 = load i64, i64* %454, align 8, !alias.scope !26, !noalias !27
  %456 = icmp eq i64 %452, %455
  br i1 %456, label %442, label %457, !prof !13

457:                                              ; preds = %450, %438
  %458 = phi i64 [ %353, %438 ], [ %452, %450 ]
  %459 = phi i64 [ 0, %438 ], [ %447, %450 ]
  %460 = phi i64 [ %440, %438 ], [ %455, %450 ]
  %461 = xor i64 %460, %458
  %462 = tail call i64 @llvm.cttz.i64(i64 %461, i1 true) #4, !range !14
  %463 = lshr i64 %462, 3
  %464 = or i64 %463, %459
  br label %478

465:                                              ; preds = %442, %434
  %466 = phi i64 [ 0, %434 ], [ %447, %442 ]
  %467 = phi i8* [ %351, %434 ], [ %446, %442 ]
  %468 = and i64 %330, 7
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %478, label %470

470:                                              ; preds = %465
  %471 = getelementptr inbounds i8, i8* %435, i64 %466
  %472 = load i8, i8* %471, align 1, !alias.scope !26, !noalias !27
  %473 = load i8, i8* %467, align 1, !alias.scope !26, !noalias !27
  %474 = icmp eq i8 %472, %473
  br i1 %474, label %475, label %478, !prof !15

475:                                              ; preds = %470
  %476 = add i64 %466, 1
  %477 = icmp eq i64 %468, 1
  br i1 %477, label %478, label %1164

478:                                              ; preds = %1209, %475, %470, %1164, %1170, %1173, %1179, %1182, %1188, %1191, %1197, %1200, %1206, %465, %457
  %479 = phi i64 [ %464, %457 ], [ %466, %465 ], [ %466, %470 ], [ %476, %475 ], [ %476, %1164 ], [ %1171, %1170 ], [ %1171, %1173 ], [ %1180, %1179 ], [ %1180, %1182 ], [ %1189, %1188 ], [ %1189, %1191 ], [ %1198, %1197 ], [ %1198, %1200 ], [ %1207, %1206 ], [ %1216, %1209 ]
  %480 = icmp ugt i64 %479, 3
  br i1 %480, label %481, label %491

481:                                              ; preds = %478
  %482 = mul i64 %479, 135
  %483 = trunc i64 %425 to i32
  %484 = tail call i32 @llvm.ctlz.i32(i32 %483, i1 true) #4, !range !18
  %485 = xor i32 %484, 31
  %486 = mul nsw i32 %485, -30
  %487 = add nsw i32 %486, 1920
  %488 = zext i32 %487 to i64
  %489 = add i64 %482, %488
  %490 = icmp ugt i64 %489, 2020
  br i1 %490, label %606, label %491

491:                                              ; preds = %481, %478
  %492 = load %struct.HasherCommon*, %struct.HasherCommon** %37, align 8, !alias.scope !19, !noalias !22
  %493 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %492, i64 0, i32 2
  %494 = load i64, i64* %493, align 8, !noalias !30
  %495 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %492, i64 0, i32 1
  %496 = load i64, i64* %495, align 8, !noalias !30
  %497 = lshr i64 %496, 7
  %498 = icmp ult i64 %494, %497
  br i1 %498, label %606, label %499

499:                                              ; preds = %491
  %500 = mul i64 %353, 506832829
  %501 = lshr i64 %500, 17
  %502 = and i64 %501, 32766
  %503 = add i64 %344, 1
  %504 = add i64 %496, 1
  store i64 %504, i64* %495, align 8, !noalias !30
  %505 = load i8*, i8** %38, align 8, !noalias !30
  %506 = getelementptr inbounds i8, i8* %505, i64 %502
  %507 = load i8, i8* %506, align 1, !noalias !30
  %508 = icmp eq i8 %507, 0
  br i1 %508, label %606, label %509

509:                                              ; preds = %499
  %510 = zext i8 %507 to i64
  %511 = load i16*, i16** %42, align 8, !noalias !30
  %512 = getelementptr inbounds i16, i16* %511, i64 %502
  %513 = load i16, i16* %512, align 2, !noalias !30
  %514 = zext i16 %513 to i64
  %515 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %41, align 8, !noalias !30
  %516 = icmp ult i64 %330, %510
  br i1 %516, label %606, label %517

517:                                              ; preds = %509
  %518 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %515, i64 0, i32 1, i64 %510
  %519 = load i32, i32* %518, align 4, !noalias !30
  %520 = zext i32 %519 to i64
  %521 = mul nuw nsw i64 %514, %510
  %522 = add nuw nsw i64 %521, %520
  %523 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %515, i64 0, i32 3
  %524 = load i8*, i8** %523, align 8, !noalias !30
  %525 = getelementptr inbounds i8, i8* %524, i64 %522
  %526 = lshr i64 %510, 3
  %527 = icmp eq i64 %526, 0
  br i1 %527, label %555, label %528, !prof !13

528:                                              ; preds = %517
  %529 = bitcast i8* %525 to i64*
  %530 = load i64, i64* %529, align 8, !noalias !30
  %531 = icmp eq i64 %530, %353
  br i1 %531, label %532, label %547, !prof !13

532:                                              ; preds = %528, %540
  %533 = phi i64 [ %537, %540 ], [ 0, %528 ]
  %534 = phi i8* [ %536, %540 ], [ %525, %528 ]
  %535 = phi i64 [ %538, %540 ], [ %526, %528 ]
  %536 = getelementptr inbounds i8, i8* %534, i64 8
  %537 = add nuw nsw i64 %533, 8
  %538 = add nsw i64 %535, -1
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %555, label %540, !prof !13

540:                                              ; preds = %532
  %541 = getelementptr inbounds i8, i8* %351, i64 %537
  %542 = bitcast i8* %541 to i64*
  %543 = load i64, i64* %542, align 8, !alias.scope !26, !noalias !27
  %544 = bitcast i8* %536 to i64*
  %545 = load i64, i64* %544, align 8, !noalias !30
  %546 = icmp eq i64 %545, %543
  br i1 %546, label %532, label %547, !prof !13

547:                                              ; preds = %540, %528
  %548 = phi i64 [ %353, %528 ], [ %543, %540 ]
  %549 = phi i64 [ 0, %528 ], [ %537, %540 ]
  %550 = phi i64 [ %530, %528 ], [ %545, %540 ]
  %551 = xor i64 %550, %548
  %552 = tail call i64 @llvm.cttz.i64(i64 %551, i1 true) #4, !range !14
  %553 = lshr i64 %552, 3
  %554 = or i64 %553, %549
  br label %568

555:                                              ; preds = %532, %517
  %556 = phi i64 [ 0, %517 ], [ %537, %532 ]
  %557 = phi i8* [ %525, %517 ], [ %536, %532 ]
  %558 = and i64 %510, 7
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %568, label %560

560:                                              ; preds = %555
  %561 = getelementptr inbounds i8, i8* %351, i64 %556
  %562 = load i8, i8* %561, align 1, !alias.scope !26, !noalias !27
  %563 = load i8, i8* %557, align 1, !noalias !30
  %564 = icmp eq i8 %562, %563
  br i1 %564, label %565, label %568, !prof !15

565:                                              ; preds = %560
  %566 = add nuw nsw i64 %556, 1
  %567 = icmp eq i64 %558, 1
  br i1 %567, label %568, label %1217

568:                                              ; preds = %1262, %565, %560, %1217, %1223, %1226, %1232, %1235, %1241, %1244, %1250, %1253, %1259, %555, %547
  %569 = phi i64 [ %554, %547 ], [ %556, %555 ], [ %556, %560 ], [ %566, %565 ], [ %566, %1217 ], [ %1224, %1223 ], [ %1224, %1226 ], [ %1233, %1232 ], [ %1233, %1235 ], [ %1242, %1241 ], [ %1242, %1244 ], [ %1251, %1250 ], [ %1251, %1253 ], [ %1260, %1259 ], [ %1269, %1262 ]
  %570 = load i32, i32* %39, align 4, !noalias !30
  %571 = zext i32 %570 to i64
  %572 = add i64 %569, %571
  %573 = icmp ule i64 %572, %510
  %574 = icmp eq i64 %569, 0
  %575 = or i1 %574, %573
  br i1 %575, label %606, label %576

576:                                              ; preds = %568
  %577 = sub i64 %510, %569
  %578 = shl i64 %577, 2
  %579 = load i64, i64* %40, align 8, !noalias !30
  %580 = mul i64 %577, 6
  %581 = lshr i64 %579, %580
  %582 = and i64 %581, 63
  %583 = add i64 %582, %578
  %584 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %515, i64 0, i32 0, i64 %510
  %585 = load i8, i8* %584, align 1, !noalias !30
  %586 = zext i8 %585 to i64
  %587 = shl i64 %583, %586
  %588 = add i64 %503, %514
  %589 = add i64 %588, %587
  %590 = icmp ugt i64 %589, %345
  br i1 %590, label %606, label %591

591:                                              ; preds = %576
  %592 = mul i64 %569, 135
  %593 = add i64 %592, 1920
  %594 = trunc i64 %589 to i32
  %595 = tail call i32 @llvm.ctlz.i32(i32 %594, i1 true) #4, !range !18
  %596 = xor i32 %595, 31
  %597 = mul nuw nsw i32 %596, 30
  %598 = zext i32 %597 to i64
  %599 = sub i64 %593, %598
  %600 = icmp ult i64 %599, 2020
  br i1 %600, label %606, label %601

601:                                              ; preds = %591
  %602 = zext i8 %507 to i32
  %603 = trunc i64 %569 to i32
  %604 = sub nsw i32 %602, %603
  %605 = add i64 %494, 1
  store i64 %605, i64* %493, align 8, !noalias !30
  br label %606

606:                                              ; preds = %481, %417, %420, %491, %499, %509, %568, %576, %591, %601
  %607 = phi i32 [ 0, %417 ], [ 0, %491 ], [ 0, %499 ], [ 0, %509 ], [ 0, %568 ], [ 0, %576 ], [ 0, %591 ], [ %604, %601 ], [ 0, %420 ], [ 0, %481 ]
  %608 = phi i64 [ %415, %417 ], [ 2020, %491 ], [ 2020, %499 ], [ 2020, %509 ], [ 2020, %568 ], [ 2020, %576 ], [ 2020, %591 ], [ %599, %601 ], [ 2020, %420 ], [ %489, %481 ]
  %609 = phi i64 [ %357, %417 ], [ 0, %491 ], [ 0, %499 ], [ 0, %509 ], [ 0, %568 ], [ 0, %576 ], [ 0, %591 ], [ %589, %601 ], [ 0, %420 ], [ %425, %481 ]
  %610 = phi i64 [ %411, %417 ], [ %338, %491 ], [ %338, %499 ], [ %338, %509 ], [ %338, %568 ], [ %338, %576 ], [ %338, %591 ], [ %569, %601 ], [ %338, %420 ], [ %479, %481 ]
  %611 = add i64 %323, 175
  %612 = icmp ult i64 %608, %611
  br i1 %612, label %613, label %615

613:                                              ; preds = %606
  %614 = add i64 %329, %18
  br label %622

615:                                              ; preds = %606
  %616 = add i64 %326, 1
  %617 = add nuw nsw i32 %328, 1
  %618 = icmp ult i32 %617, 4
  %619 = add i64 %329, 9
  %620 = icmp ult i64 %619, %20
  %621 = and i1 %618, %620
  br i1 %621, label %321, label %622

622:                                              ; preds = %615, %613
  %623 = phi i64 [ %614, %613 ], [ %342, %615 ]
  %624 = phi i32 [ %322, %613 ], [ %607, %615 ]
  %625 = phi i64 [ %324, %613 ], [ %609, %615 ]
  %626 = phi i64 [ %325, %613 ], [ %610, %615 ]
  %627 = phi i64 [ %326, %613 ], [ %616, %615 ]
  %628 = phi i64 [ %329, %613 ], [ %339, %615 ]
  %629 = shl i64 %626, 1
  %630 = add i64 %629, %27
  %631 = add i64 %630, %628
  %632 = icmp ult i64 %623, %16
  %633 = select i1 %632, i64 %623, i64 %16
  %634 = icmp ugt i64 %625, %633
  br i1 %634, label %670, label %635

635:                                              ; preds = %622
  %636 = add i64 %625, 3
  %637 = load i32, i32* %6, align 4
  %638 = sext i32 %637 to i64
  %639 = sub i64 %636, %638
  %640 = load i32, i32* %44, align 4
  %641 = sext i32 %640 to i64
  %642 = sub i64 %636, %641
  %643 = icmp eq i64 %625, %638
  br i1 %643, label %682, label %644

644:                                              ; preds = %635
  %645 = icmp eq i64 %625, %641
  br i1 %645, label %672, label %646

646:                                              ; preds = %644
  %647 = icmp ult i64 %639, 7
  br i1 %647, label %648, label %654

648:                                              ; preds = %646
  %649 = trunc i64 %639 to i32
  %650 = shl i32 %649, 2
  %651 = lshr i32 158663784, %650
  %652 = and i32 %651, 15
  %653 = zext i32 %652 to i64
  br label %672

654:                                              ; preds = %646
  %655 = icmp ult i64 %642, 7
  br i1 %655, label %656, label %662

656:                                              ; preds = %654
  %657 = trunc i64 %642 to i32
  %658 = shl i32 %657, 2
  %659 = lshr i32 266017486, %658
  %660 = and i32 %659, 15
  %661 = zext i32 %660 to i64
  br label %672

662:                                              ; preds = %654
  %663 = load i32, i32* %45, align 4
  %664 = sext i32 %663 to i64
  %665 = icmp eq i64 %625, %664
  br i1 %665, label %672, label %666

666:                                              ; preds = %662
  %667 = load i32, i32* %46, align 4
  %668 = sext i32 %667 to i64
  %669 = icmp eq i64 %625, %668
  br i1 %669, label %672, label %670

670:                                              ; preds = %666, %622
  %671 = add i64 %625, 15
  br label %672

672:                                              ; preds = %644, %648, %656, %662, %666, %670
  %673 = phi i64 [ %671, %670 ], [ 3, %666 ], [ 2, %662 ], [ 1, %644 ], [ %661, %656 ], [ %653, %648 ]
  %674 = icmp ule i64 %625, %633
  %675 = icmp ne i64 %673, 0
  %676 = and i1 %674, %675
  br i1 %676, label %677, label %682

677:                                              ; preds = %672
  %678 = load i32, i32* %45, align 4
  store i32 %678, i32* %46, align 4
  %679 = load i32, i32* %44, align 4
  store i32 %679, i32* %45, align 4
  %680 = load i32, i32* %6, align 4
  store i32 %680, i32* %44, align 4
  %681 = trunc i64 %625 to i32
  store i32 %681, i32* %6, align 4
  br label %682

682:                                              ; preds = %635, %677, %672
  %683 = phi i64 [ %673, %677 ], [ %673, %672 ], [ 0, %635 ]
  %684 = getelementptr inbounds %struct.Command, %struct.Command* %52, i64 1
  %685 = trunc i64 %627 to i32
  %686 = getelementptr inbounds %struct.Command, %struct.Command* %52, i64 0, i32 0
  store i32 %685, i32* %686, align 4
  %687 = shl i32 %624, 25
  %688 = trunc i64 %626 to i32
  %689 = or i32 %687, %688
  %690 = getelementptr inbounds %struct.Command, %struct.Command* %52, i64 0, i32 1
  store i32 %689, i32* %690, align 4
  %691 = load i32, i32* %47, align 4
  %692 = zext i32 %691 to i64
  %693 = load i32, i32* %48, align 8
  %694 = zext i32 %693 to i64
  %695 = getelementptr inbounds %struct.Command, %struct.Command* %52, i64 0, i32 4
  %696 = getelementptr inbounds %struct.Command, %struct.Command* %52, i64 0, i32 2
  %697 = add nuw nsw i64 %692, 16
  %698 = icmp ugt i64 %697, %683
  br i1 %698, label %699, label %701

699:                                              ; preds = %682
  %700 = trunc i64 %683 to i16
  store i16 %700, i16* %695, align 2
  br label %731

701:                                              ; preds = %682
  %702 = shl i64 4, %694
  %703 = add i64 %683, -16
  %704 = sub i64 %703, %692
  %705 = add i64 %704, %702
  %706 = trunc i64 %705 to i32
  %707 = tail call i32 @llvm.ctlz.i32(i32 %706, i1 true) #4, !range !18
  %708 = sub nsw i32 30, %707
  %709 = zext i32 %708 to i64
  %710 = shl nsw i32 -1, %693
  %711 = xor i32 %710, 65535
  %712 = zext i32 %711 to i64
  %713 = and i64 %705, %712
  %714 = lshr i64 %705, %709
  %715 = and i64 %714, 1
  %716 = or i64 %715, 2
  %717 = shl i64 %716, %709
  %718 = sub nsw i64 %709, %694
  %719 = shl nsw i64 %718, 10
  %720 = shl nsw i64 %718, 1
  %721 = add nsw i64 %720, -2
  %722 = or i64 %721, %715
  %723 = shl i64 %722, %694
  %724 = add nuw nsw i64 %713, %697
  %725 = add i64 %724, %723
  %726 = or i64 %725, %719
  %727 = trunc i64 %726 to i16
  store i16 %727, i16* %695, align 2
  %728 = sub i64 %705, %717
  %729 = lshr i64 %728, %694
  %730 = trunc i64 %729 to i32
  br label %731

731:                                              ; preds = %701, %699
  %732 = phi i16 [ %727, %701 ], [ %700, %699 ]
  %733 = phi i32 [ %730, %701 ], [ 0, %699 ]
  store i32 %733, i32* %696, align 4
  %734 = add nsw i32 %624, %688
  %735 = sext i32 %734 to i64
  %736 = and i16 %732, 1023
  %737 = icmp eq i16 %736, 0
  %738 = getelementptr inbounds %struct.Command, %struct.Command* %52, i64 0, i32 3
  %739 = icmp ult i64 %627, 6
  br i1 %739, label %740, label %742

740:                                              ; preds = %731
  %741 = trunc i64 %627 to i16
  br label %768

742:                                              ; preds = %731
  %743 = icmp ult i64 %627, 130
  br i1 %743, label %744, label %756

744:                                              ; preds = %742
  %745 = add nsw i64 %627, -2
  %746 = trunc i64 %745 to i32
  %747 = tail call i32 @llvm.ctlz.i32(i32 %746, i1 true) #4, !range !18
  %748 = sub nsw i32 30, %747
  %749 = shl nsw i32 %748, 1
  %750 = zext i32 %749 to i64
  %751 = zext i32 %748 to i64
  %752 = lshr i64 %745, %751
  %753 = add nuw nsw i64 %752, %750
  %754 = trunc i64 %753 to i16
  %755 = add i16 %754, 2
  br label %768

756:                                              ; preds = %742
  %757 = icmp ult i64 %627, 2114
  br i1 %757, label %758, label %763

758:                                              ; preds = %756
  %759 = add nsw i32 %685, -66
  %760 = tail call i32 @llvm.ctlz.i32(i32 %759, i1 true) #4, !range !18
  %761 = trunc i32 %760 to i16
  %762 = sub nuw nsw i16 41, %761
  br label %768

763:                                              ; preds = %756
  %764 = icmp ult i64 %627, 6210
  br i1 %764, label %768, label %765

765:                                              ; preds = %763
  %766 = icmp ult i64 %627, 22594
  %767 = select i1 %766, i16 22, i16 23
  br label %768

768:                                              ; preds = %765, %763, %758, %744, %740
  %769 = phi i16 [ %741, %740 ], [ %755, %744 ], [ %762, %758 ], [ 21, %763 ], [ %767, %765 ]
  %770 = icmp ult i32 %734, 10
  br i1 %770, label %771, label %774

771:                                              ; preds = %768
  %772 = trunc i32 %734 to i16
  %773 = add nsw i16 %772, -2
  br label %795

774:                                              ; preds = %768
  %775 = icmp ult i32 %734, 134
  br i1 %775, label %776, label %788

776:                                              ; preds = %774
  %777 = add nsw i64 %735, -6
  %778 = trunc i64 %777 to i32
  %779 = tail call i32 @llvm.ctlz.i32(i32 %778, i1 true) #4, !range !18
  %780 = sub nsw i32 30, %779
  %781 = shl nsw i32 %780, 1
  %782 = zext i32 %781 to i64
  %783 = zext i32 %780 to i64
  %784 = lshr i64 %777, %783
  %785 = add nuw nsw i64 %784, %782
  %786 = trunc i64 %785 to i16
  %787 = add i16 %786, 4
  br label %795

788:                                              ; preds = %774
  %789 = icmp ult i32 %734, 2118
  br i1 %789, label %790, label %795

790:                                              ; preds = %788
  %791 = add nsw i32 %734, -70
  %792 = tail call i32 @llvm.ctlz.i32(i32 %791, i1 true) #4, !range !18
  %793 = trunc i32 %792 to i16
  %794 = sub nuw nsw i16 43, %793
  br label %795

795:                                              ; preds = %790, %788, %776, %771
  %796 = phi i16 [ %773, %771 ], [ %787, %776 ], [ %794, %790 ], [ 23, %788 ]
  %797 = and i16 %796, 7
  %798 = shl i16 %769, 3
  %799 = and i16 %798, 56
  %800 = or i16 %797, %799
  %801 = icmp ult i16 %769, 8
  %802 = and i1 %737, %801
  %803 = icmp ult i16 %796, 16
  %804 = and i1 %802, %803
  br i1 %804, label %805, label %809

805:                                              ; preds = %795
  %806 = icmp ult i16 %796, 8
  %807 = or i16 %800, 64
  %808 = select i1 %806, i16 %800, i16 %807
  br label %824

809:                                              ; preds = %795
  %810 = lshr i16 %796, 3
  %811 = lshr i16 %769, 3
  %812 = mul nuw nsw i16 %811, 3
  %813 = add nuw nsw i16 %810, %812
  %814 = zext i16 %813 to i32
  %815 = shl nuw i16 %813, 1
  %816 = zext i16 %815 to i32
  %817 = shl nuw nsw i32 %814, 6
  %818 = add nuw nsw i32 %817, 64
  %819 = lshr i32 5377344, %816
  %820 = and i32 %819, 192
  %821 = add nuw nsw i32 %818, %820
  %822 = trunc i32 %821 to i16
  %823 = or i16 %800, %822
  br label %824

824:                                              ; preds = %805, %809
  %825 = phi i16 [ %808, %805 ], [ %823, %809 ]
  store i16 %825, i16* %738, align 2
  %826 = load i64, i64* %10, align 8
  %827 = add i64 %826, %627
  store i64 %827, i64* %10, align 8
  %828 = add i64 %628, 2
  %829 = add i64 %628, %626
  %830 = icmp ult i64 %829, %23
  %831 = select i1 %830, i64 %829, i64 %23
  %832 = lshr i64 %626, 2
  %833 = icmp ult i64 %625, %832
  br i1 %833, label %834, label %841

834:                                              ; preds = %824
  %835 = shl i64 %625, 2
  %836 = sub i64 %829, %835
  %837 = icmp ugt i64 %828, %836
  %838 = select i1 %837, i64 %828, i64 %836
  %839 = icmp ult i64 %831, %838
  %840 = select i1 %839, i64 %831, i64 %838
  br label %841

841:                                              ; preds = %834, %824
  %842 = phi i64 [ %840, %834 ], [ %828, %824 ]
  %843 = icmp ugt i64 %831, %842
  br i1 %843, label %844, label %933

844:                                              ; preds = %841
  %845 = load i32*, i32** %35, align 8, !alias.scope !31, !noalias !36
  %846 = sub i64 %831, %842
  %847 = and i64 %846, 1
  %848 = icmp eq i64 %847, 0
  br i1 %848, label %859, label %849

849:                                              ; preds = %844
  %850 = and i64 %842, %3
  %851 = getelementptr inbounds i8, i8* %2, i64 %850
  %852 = bitcast i8* %851 to i64*
  %853 = load i64, i64* %852, align 8, !alias.scope !36, !noalias !31
  %854 = mul i64 %853, -4819355556693147648
  %855 = lshr i64 %854, 48
  %856 = trunc i64 %842 to i32
  %857 = getelementptr inbounds i32, i32* %845, i64 %855
  store i32 %856, i32* %857, align 4, !noalias !39
  %858 = add nuw i64 %842, 1
  br label %859

859:                                              ; preds = %849, %844
  %860 = phi i64 [ %858, %849 ], [ %842, %844 ]
  %861 = add i64 %842, 1
  %862 = icmp eq i64 %831, %861
  br i1 %862, label %933, label %863

863:                                              ; preds = %859, %863
  %864 = phi i64 [ %882, %863 ], [ %860, %859 ]
  %865 = and i64 %864, %3
  %866 = getelementptr inbounds i8, i8* %2, i64 %865
  %867 = bitcast i8* %866 to i64*
  %868 = load i64, i64* %867, align 8, !alias.scope !36, !noalias !31
  %869 = mul i64 %868, -4819355556693147648
  %870 = lshr i64 %869, 48
  %871 = trunc i64 %864 to i32
  %872 = getelementptr inbounds i32, i32* %845, i64 %870
  store i32 %871, i32* %872, align 4, !noalias !39
  %873 = add nuw i64 %864, 1
  %874 = and i64 %873, %3
  %875 = getelementptr inbounds i8, i8* %2, i64 %874
  %876 = bitcast i8* %875 to i64*
  %877 = load i64, i64* %876, align 8, !alias.scope !36, !noalias !31
  %878 = mul i64 %877, -4819355556693147648
  %879 = lshr i64 %878, 48
  %880 = trunc i64 %873 to i32
  %881 = getelementptr inbounds i32, i32* %845, i64 %879
  store i32 %880, i32* %881, align 4, !noalias !39
  %882 = add nuw i64 %864, 2
  %883 = icmp eq i64 %882, %831
  br i1 %883, label %933, label %863

884:                                              ; preds = %310, %131, %300, %285, %277, %218, %208, %200
  %885 = add i64 %54, 1
  %886 = add i64 %51, 1
  %887 = icmp ugt i64 %886, %53
  br i1 %887, label %888, label %933

888:                                              ; preds = %884
  %889 = add i64 %53, %43
  %890 = icmp ugt i64 %886, %889
  br i1 %890, label %891, label %912

891:                                              ; preds = %888
  %892 = add i64 %51, 17
  %893 = icmp ult i64 %892, %22
  %894 = select i1 %893, i64 %892, i64 %22
  %895 = icmp ult i64 %886, %894
  br i1 %895, label %896, label %933

896:                                              ; preds = %891
  %897 = load i32*, i32** %35, align 8, !alias.scope !40, !noalias !43
  br label %898

898:                                              ; preds = %896, %898
  %899 = phi i64 [ %886, %896 ], [ %910, %898 ]
  %900 = phi i64 [ %885, %896 ], [ %909, %898 ]
  %901 = and i64 %899, %3
  %902 = getelementptr inbounds i8, i8* %2, i64 %901
  %903 = bitcast i8* %902 to i64*
  %904 = load i64, i64* %903, align 8, !alias.scope !43, !noalias !40
  %905 = mul i64 %904, -4819355556693147648
  %906 = lshr i64 %905, 48
  %907 = trunc i64 %899 to i32
  %908 = getelementptr inbounds i32, i32* %897, i64 %906
  store i32 %907, i32* %908, align 4, !noalias !45
  %909 = add i64 %900, 4
  %910 = add i64 %899, 4
  %911 = icmp ult i64 %910, %894
  br i1 %911, label %898, label %933

912:                                              ; preds = %888
  %913 = add i64 %51, 9
  %914 = icmp ult i64 %913, %22
  %915 = select i1 %914, i64 %913, i64 %22
  %916 = icmp ult i64 %886, %915
  br i1 %916, label %917, label %933

917:                                              ; preds = %912
  %918 = load i32*, i32** %35, align 8, !alias.scope !46, !noalias !49
  br label %919

919:                                              ; preds = %917, %919
  %920 = phi i64 [ %886, %917 ], [ %931, %919 ]
  %921 = phi i64 [ %885, %917 ], [ %930, %919 ]
  %922 = and i64 %920, %3
  %923 = getelementptr inbounds i8, i8* %2, i64 %922
  %924 = bitcast i8* %923 to i64*
  %925 = load i64, i64* %924, align 8, !alias.scope !49, !noalias !46
  %926 = mul i64 %925, -4819355556693147648
  %927 = lshr i64 %926, 48
  %928 = trunc i64 %920 to i32
  %929 = getelementptr inbounds i32, i32* %918, i64 %927
  store i32 %928, i32* %929, align 4, !noalias !51
  %930 = add i64 %921, 2
  %931 = add i64 %920, 2
  %932 = icmp ult i64 %931, %915
  br i1 %932, label %919, label %933

933:                                              ; preds = %919, %898, %859, %863, %912, %891, %841, %884
  %934 = phi i64 [ %885, %884 ], [ 0, %841 ], [ %885, %891 ], [ %885, %912 ], [ 0, %863 ], [ 0, %859 ], [ %909, %898 ], [ %930, %919 ]
  %935 = phi i64 [ %53, %884 ], [ %631, %841 ], [ %53, %891 ], [ %53, %912 ], [ %631, %863 ], [ %631, %859 ], [ %53, %898 ], [ %53, %919 ]
  %936 = phi %struct.Command* [ %52, %884 ], [ %684, %841 ], [ %52, %891 ], [ %52, %912 ], [ %684, %863 ], [ %684, %859 ], [ %52, %898 ], [ %52, %919 ]
  %937 = phi i64 [ %886, %884 ], [ %829, %841 ], [ %886, %891 ], [ %886, %912 ], [ %829, %863 ], [ %829, %859 ], [ %910, %898 ], [ %931, %919 ]
  %938 = add i64 %937, 8
  %939 = icmp ult i64 %938, %20
  %940 = sub i64 %20, %937
  br i1 %939, label %49, label %941

941:                                              ; preds = %933, %11
  %942 = phi i64 [ %19, %11 ], [ %934, %933 ]
  %943 = phi %struct.Command* [ %8, %11 ], [ %936, %933 ]
  %944 = phi i64 [ %0, %11 ], [ %940, %933 ]
  %945 = add i64 %944, %942
  store i64 %945, i64* %7, align 8
  %946 = ptrtoint %struct.Command* %943 to i64
  %947 = ptrtoint %struct.Command* %8 to i64
  %948 = sub i64 %946, %947
  %949 = ashr exact i64 %948, 4
  %950 = load i64, i64* %9, align 8
  %951 = add i64 %950, %949
  store i64 %951, i64* %9, align 8
  ret void

952:                                              ; preds = %118
  %953 = getelementptr inbounds i8, i8* %110, i64 1
  %954 = getelementptr inbounds i8, i8* %75, i64 %119
  %955 = load i8, i8* %954, align 1, !alias.scope !9, !noalias !10
  %956 = load i8, i8* %953, align 1, !alias.scope !9, !noalias !10
  %957 = icmp eq i8 %955, %956
  br i1 %957, label %958, label %121, !prof !15

958:                                              ; preds = %952
  %959 = add i64 %109, 2
  %960 = icmp eq i64 %111, 2
  br i1 %960, label %121, label %961

961:                                              ; preds = %958
  %962 = getelementptr inbounds i8, i8* %110, i64 2
  %963 = getelementptr inbounds i8, i8* %75, i64 %959
  %964 = load i8, i8* %963, align 1, !alias.scope !9, !noalias !10
  %965 = load i8, i8* %962, align 1, !alias.scope !9, !noalias !10
  %966 = icmp eq i8 %964, %965
  br i1 %966, label %967, label %121, !prof !15

967:                                              ; preds = %961
  %968 = add i64 %109, 3
  %969 = icmp eq i64 %111, 3
  br i1 %969, label %121, label %970

970:                                              ; preds = %967
  %971 = getelementptr inbounds i8, i8* %110, i64 3
  %972 = getelementptr inbounds i8, i8* %75, i64 %968
  %973 = load i8, i8* %972, align 1, !alias.scope !9, !noalias !10
  %974 = load i8, i8* %971, align 1, !alias.scope !9, !noalias !10
  %975 = icmp eq i8 %973, %974
  br i1 %975, label %976, label %121, !prof !15

976:                                              ; preds = %970
  %977 = add i64 %109, 4
  %978 = icmp eq i64 %111, 4
  br i1 %978, label %121, label %979

979:                                              ; preds = %976
  %980 = getelementptr inbounds i8, i8* %110, i64 4
  %981 = getelementptr inbounds i8, i8* %75, i64 %977
  %982 = load i8, i8* %981, align 1, !alias.scope !9, !noalias !10
  %983 = load i8, i8* %980, align 1, !alias.scope !9, !noalias !10
  %984 = icmp eq i8 %982, %983
  br i1 %984, label %985, label %121, !prof !15

985:                                              ; preds = %979
  %986 = add i64 %109, 5
  %987 = icmp eq i64 %111, 5
  br i1 %987, label %121, label %988

988:                                              ; preds = %985
  %989 = getelementptr inbounds i8, i8* %110, i64 5
  %990 = getelementptr inbounds i8, i8* %75, i64 %986
  %991 = load i8, i8* %990, align 1, !alias.scope !9, !noalias !10
  %992 = load i8, i8* %989, align 1, !alias.scope !9, !noalias !10
  %993 = icmp eq i8 %991, %992
  br i1 %993, label %994, label %121, !prof !15

994:                                              ; preds = %988
  %995 = add i64 %109, 6
  %996 = icmp eq i64 %111, 6
  br i1 %996, label %121, label %997

997:                                              ; preds = %994
  %998 = getelementptr inbounds i8, i8* %110, i64 6
  %999 = getelementptr inbounds i8, i8* %75, i64 %995
  %1000 = load i8, i8* %999, align 1, !alias.scope !9, !noalias !10
  %1001 = load i8, i8* %998, align 1, !alias.scope !9, !noalias !10
  %1002 = icmp eq i8 %1000, %1001
  %1003 = add i64 %109, 7
  %1004 = select i1 %1002, i64 %1003, i64 %995, !prof !15
  br label %121

1005:                                             ; preds = %184
  %1006 = getelementptr inbounds i8, i8* %176, i64 1
  %1007 = getelementptr inbounds i8, i8* %138, i64 %185
  %1008 = load i8, i8* %1007, align 1, !alias.scope !9, !noalias !10
  %1009 = load i8, i8* %1006, align 1, !alias.scope !9, !noalias !10
  %1010 = icmp eq i8 %1008, %1009
  br i1 %1010, label %1011, label %187, !prof !15

1011:                                             ; preds = %1005
  %1012 = add i64 %175, 2
  %1013 = icmp eq i64 %177, 2
  br i1 %1013, label %187, label %1014

1014:                                             ; preds = %1011
  %1015 = getelementptr inbounds i8, i8* %176, i64 2
  %1016 = getelementptr inbounds i8, i8* %138, i64 %1012
  %1017 = load i8, i8* %1016, align 1, !alias.scope !9, !noalias !10
  %1018 = load i8, i8* %1015, align 1, !alias.scope !9, !noalias !10
  %1019 = icmp eq i8 %1017, %1018
  br i1 %1019, label %1020, label %187, !prof !15

1020:                                             ; preds = %1014
  %1021 = add i64 %175, 3
  %1022 = icmp eq i64 %177, 3
  br i1 %1022, label %187, label %1023

1023:                                             ; preds = %1020
  %1024 = getelementptr inbounds i8, i8* %176, i64 3
  %1025 = getelementptr inbounds i8, i8* %138, i64 %1021
  %1026 = load i8, i8* %1025, align 1, !alias.scope !9, !noalias !10
  %1027 = load i8, i8* %1024, align 1, !alias.scope !9, !noalias !10
  %1028 = icmp eq i8 %1026, %1027
  br i1 %1028, label %1029, label %187, !prof !15

1029:                                             ; preds = %1023
  %1030 = add i64 %175, 4
  %1031 = icmp eq i64 %177, 4
  br i1 %1031, label %187, label %1032

1032:                                             ; preds = %1029
  %1033 = getelementptr inbounds i8, i8* %176, i64 4
  %1034 = getelementptr inbounds i8, i8* %138, i64 %1030
  %1035 = load i8, i8* %1034, align 1, !alias.scope !9, !noalias !10
  %1036 = load i8, i8* %1033, align 1, !alias.scope !9, !noalias !10
  %1037 = icmp eq i8 %1035, %1036
  br i1 %1037, label %1038, label %187, !prof !15

1038:                                             ; preds = %1032
  %1039 = add i64 %175, 5
  %1040 = icmp eq i64 %177, 5
  br i1 %1040, label %187, label %1041

1041:                                             ; preds = %1038
  %1042 = getelementptr inbounds i8, i8* %176, i64 5
  %1043 = getelementptr inbounds i8, i8* %138, i64 %1039
  %1044 = load i8, i8* %1043, align 1, !alias.scope !9, !noalias !10
  %1045 = load i8, i8* %1042, align 1, !alias.scope !9, !noalias !10
  %1046 = icmp eq i8 %1044, %1045
  br i1 %1046, label %1047, label %187, !prof !15

1047:                                             ; preds = %1041
  %1048 = add i64 %175, 6
  %1049 = icmp eq i64 %177, 6
  br i1 %1049, label %187, label %1050

1050:                                             ; preds = %1047
  %1051 = getelementptr inbounds i8, i8* %176, i64 6
  %1052 = getelementptr inbounds i8, i8* %138, i64 %1048
  %1053 = load i8, i8* %1052, align 1, !alias.scope !9, !noalias !10
  %1054 = load i8, i8* %1051, align 1, !alias.scope !9, !noalias !10
  %1055 = icmp eq i8 %1053, %1054
  %1056 = add i64 %175, 7
  %1057 = select i1 %1055, i64 %1056, i64 %1048, !prof !15
  br label %187

1058:                                             ; preds = %274
  %1059 = getelementptr inbounds i8, i8* %266, i64 1
  %1060 = getelementptr inbounds i8, i8* %63, i64 %275
  %1061 = load i8, i8* %1060, align 1, !alias.scope !9, !noalias !10
  %1062 = load i8, i8* %1059, align 1, !noalias !16
  %1063 = icmp eq i8 %1061, %1062
  br i1 %1063, label %1064, label %277, !prof !15

1064:                                             ; preds = %1058
  %1065 = add nuw nsw i64 %265, 2
  %1066 = icmp eq i64 %267, 2
  br i1 %1066, label %277, label %1067

1067:                                             ; preds = %1064
  %1068 = getelementptr inbounds i8, i8* %266, i64 2
  %1069 = getelementptr inbounds i8, i8* %63, i64 %1065
  %1070 = load i8, i8* %1069, align 1, !alias.scope !9, !noalias !10
  %1071 = load i8, i8* %1068, align 1, !noalias !16
  %1072 = icmp eq i8 %1070, %1071
  br i1 %1072, label %1073, label %277, !prof !15

1073:                                             ; preds = %1067
  %1074 = add nuw nsw i64 %265, 3
  %1075 = icmp eq i64 %267, 3
  br i1 %1075, label %277, label %1076

1076:                                             ; preds = %1073
  %1077 = getelementptr inbounds i8, i8* %266, i64 3
  %1078 = getelementptr inbounds i8, i8* %63, i64 %1074
  %1079 = load i8, i8* %1078, align 1, !alias.scope !9, !noalias !10
  %1080 = load i8, i8* %1077, align 1, !noalias !16
  %1081 = icmp eq i8 %1079, %1080
  br i1 %1081, label %1082, label %277, !prof !15

1082:                                             ; preds = %1076
  %1083 = add nuw nsw i64 %265, 4
  %1084 = icmp eq i64 %267, 4
  br i1 %1084, label %277, label %1085

1085:                                             ; preds = %1082
  %1086 = getelementptr inbounds i8, i8* %266, i64 4
  %1087 = getelementptr inbounds i8, i8* %63, i64 %1083
  %1088 = load i8, i8* %1087, align 1, !alias.scope !9, !noalias !10
  %1089 = load i8, i8* %1086, align 1, !noalias !16
  %1090 = icmp eq i8 %1088, %1089
  br i1 %1090, label %1091, label %277, !prof !15

1091:                                             ; preds = %1085
  %1092 = add nuw nsw i64 %265, 5
  %1093 = icmp eq i64 %267, 5
  br i1 %1093, label %277, label %1094

1094:                                             ; preds = %1091
  %1095 = getelementptr inbounds i8, i8* %266, i64 5
  %1096 = getelementptr inbounds i8, i8* %63, i64 %1092
  %1097 = load i8, i8* %1096, align 1, !alias.scope !9, !noalias !10
  %1098 = load i8, i8* %1095, align 1, !noalias !16
  %1099 = icmp eq i8 %1097, %1098
  br i1 %1099, label %1100, label %277, !prof !15

1100:                                             ; preds = %1094
  %1101 = add nuw nsw i64 %265, 6
  %1102 = icmp eq i64 %267, 6
  br i1 %1102, label %277, label %1103

1103:                                             ; preds = %1100
  %1104 = getelementptr inbounds i8, i8* %266, i64 6
  %1105 = getelementptr inbounds i8, i8* %63, i64 %1101
  %1106 = load i8, i8* %1105, align 1, !alias.scope !9, !noalias !10
  %1107 = load i8, i8* %1104, align 1, !noalias !16
  %1108 = icmp eq i8 %1106, %1107
  %1109 = add nuw nsw i64 %265, 7
  %1110 = select i1 %1108, i64 %1109, i64 %1101, !prof !15
  br label %277

1111:                                             ; preds = %407
  %1112 = getelementptr inbounds i8, i8* %399, i64 1
  %1113 = getelementptr inbounds i8, i8* %367, i64 %408
  %1114 = load i8, i8* %1113, align 1, !alias.scope !26, !noalias !27
  %1115 = load i8, i8* %1112, align 1, !alias.scope !26, !noalias !27
  %1116 = icmp eq i8 %1114, %1115
  br i1 %1116, label %1117, label %410, !prof !15

1117:                                             ; preds = %1111
  %1118 = add i64 %398, 2
  %1119 = icmp eq i64 %400, 2
  br i1 %1119, label %410, label %1120

1120:                                             ; preds = %1117
  %1121 = getelementptr inbounds i8, i8* %399, i64 2
  %1122 = getelementptr inbounds i8, i8* %367, i64 %1118
  %1123 = load i8, i8* %1122, align 1, !alias.scope !26, !noalias !27
  %1124 = load i8, i8* %1121, align 1, !alias.scope !26, !noalias !27
  %1125 = icmp eq i8 %1123, %1124
  br i1 %1125, label %1126, label %410, !prof !15

1126:                                             ; preds = %1120
  %1127 = add i64 %398, 3
  %1128 = icmp eq i64 %400, 3
  br i1 %1128, label %410, label %1129

1129:                                             ; preds = %1126
  %1130 = getelementptr inbounds i8, i8* %399, i64 3
  %1131 = getelementptr inbounds i8, i8* %367, i64 %1127
  %1132 = load i8, i8* %1131, align 1, !alias.scope !26, !noalias !27
  %1133 = load i8, i8* %1130, align 1, !alias.scope !26, !noalias !27
  %1134 = icmp eq i8 %1132, %1133
  br i1 %1134, label %1135, label %410, !prof !15

1135:                                             ; preds = %1129
  %1136 = add i64 %398, 4
  %1137 = icmp eq i64 %400, 4
  br i1 %1137, label %410, label %1138

1138:                                             ; preds = %1135
  %1139 = getelementptr inbounds i8, i8* %399, i64 4
  %1140 = getelementptr inbounds i8, i8* %367, i64 %1136
  %1141 = load i8, i8* %1140, align 1, !alias.scope !26, !noalias !27
  %1142 = load i8, i8* %1139, align 1, !alias.scope !26, !noalias !27
  %1143 = icmp eq i8 %1141, %1142
  br i1 %1143, label %1144, label %410, !prof !15

1144:                                             ; preds = %1138
  %1145 = add i64 %398, 5
  %1146 = icmp eq i64 %400, 5
  br i1 %1146, label %410, label %1147

1147:                                             ; preds = %1144
  %1148 = getelementptr inbounds i8, i8* %399, i64 5
  %1149 = getelementptr inbounds i8, i8* %367, i64 %1145
  %1150 = load i8, i8* %1149, align 1, !alias.scope !26, !noalias !27
  %1151 = load i8, i8* %1148, align 1, !alias.scope !26, !noalias !27
  %1152 = icmp eq i8 %1150, %1151
  br i1 %1152, label %1153, label %410, !prof !15

1153:                                             ; preds = %1147
  %1154 = add i64 %398, 6
  %1155 = icmp eq i64 %400, 6
  br i1 %1155, label %410, label %1156

1156:                                             ; preds = %1153
  %1157 = getelementptr inbounds i8, i8* %399, i64 6
  %1158 = getelementptr inbounds i8, i8* %367, i64 %1154
  %1159 = load i8, i8* %1158, align 1, !alias.scope !26, !noalias !27
  %1160 = load i8, i8* %1157, align 1, !alias.scope !26, !noalias !27
  %1161 = icmp eq i8 %1159, %1160
  %1162 = add i64 %398, 7
  %1163 = select i1 %1161, i64 %1162, i64 %1154, !prof !15
  br label %410

1164:                                             ; preds = %475
  %1165 = getelementptr inbounds i8, i8* %467, i64 1
  %1166 = getelementptr inbounds i8, i8* %435, i64 %476
  %1167 = load i8, i8* %1166, align 1, !alias.scope !26, !noalias !27
  %1168 = load i8, i8* %1165, align 1, !alias.scope !26, !noalias !27
  %1169 = icmp eq i8 %1167, %1168
  br i1 %1169, label %1170, label %478, !prof !15

1170:                                             ; preds = %1164
  %1171 = add i64 %466, 2
  %1172 = icmp eq i64 %468, 2
  br i1 %1172, label %478, label %1173

1173:                                             ; preds = %1170
  %1174 = getelementptr inbounds i8, i8* %467, i64 2
  %1175 = getelementptr inbounds i8, i8* %435, i64 %1171
  %1176 = load i8, i8* %1175, align 1, !alias.scope !26, !noalias !27
  %1177 = load i8, i8* %1174, align 1, !alias.scope !26, !noalias !27
  %1178 = icmp eq i8 %1176, %1177
  br i1 %1178, label %1179, label %478, !prof !15

1179:                                             ; preds = %1173
  %1180 = add i64 %466, 3
  %1181 = icmp eq i64 %468, 3
  br i1 %1181, label %478, label %1182

1182:                                             ; preds = %1179
  %1183 = getelementptr inbounds i8, i8* %467, i64 3
  %1184 = getelementptr inbounds i8, i8* %435, i64 %1180
  %1185 = load i8, i8* %1184, align 1, !alias.scope !26, !noalias !27
  %1186 = load i8, i8* %1183, align 1, !alias.scope !26, !noalias !27
  %1187 = icmp eq i8 %1185, %1186
  br i1 %1187, label %1188, label %478, !prof !15

1188:                                             ; preds = %1182
  %1189 = add i64 %466, 4
  %1190 = icmp eq i64 %468, 4
  br i1 %1190, label %478, label %1191

1191:                                             ; preds = %1188
  %1192 = getelementptr inbounds i8, i8* %467, i64 4
  %1193 = getelementptr inbounds i8, i8* %435, i64 %1189
  %1194 = load i8, i8* %1193, align 1, !alias.scope !26, !noalias !27
  %1195 = load i8, i8* %1192, align 1, !alias.scope !26, !noalias !27
  %1196 = icmp eq i8 %1194, %1195
  br i1 %1196, label %1197, label %478, !prof !15

1197:                                             ; preds = %1191
  %1198 = add i64 %466, 5
  %1199 = icmp eq i64 %468, 5
  br i1 %1199, label %478, label %1200

1200:                                             ; preds = %1197
  %1201 = getelementptr inbounds i8, i8* %467, i64 5
  %1202 = getelementptr inbounds i8, i8* %435, i64 %1198
  %1203 = load i8, i8* %1202, align 1, !alias.scope !26, !noalias !27
  %1204 = load i8, i8* %1201, align 1, !alias.scope !26, !noalias !27
  %1205 = icmp eq i8 %1203, %1204
  br i1 %1205, label %1206, label %478, !prof !15

1206:                                             ; preds = %1200
  %1207 = add i64 %466, 6
  %1208 = icmp eq i64 %468, 6
  br i1 %1208, label %478, label %1209

1209:                                             ; preds = %1206
  %1210 = getelementptr inbounds i8, i8* %467, i64 6
  %1211 = getelementptr inbounds i8, i8* %435, i64 %1207
  %1212 = load i8, i8* %1211, align 1, !alias.scope !26, !noalias !27
  %1213 = load i8, i8* %1210, align 1, !alias.scope !26, !noalias !27
  %1214 = icmp eq i8 %1212, %1213
  %1215 = add i64 %466, 7
  %1216 = select i1 %1214, i64 %1215, i64 %1207, !prof !15
  br label %478

1217:                                             ; preds = %565
  %1218 = getelementptr inbounds i8, i8* %557, i64 1
  %1219 = getelementptr inbounds i8, i8* %351, i64 %566
  %1220 = load i8, i8* %1219, align 1, !alias.scope !26, !noalias !27
  %1221 = load i8, i8* %1218, align 1, !noalias !30
  %1222 = icmp eq i8 %1220, %1221
  br i1 %1222, label %1223, label %568, !prof !15

1223:                                             ; preds = %1217
  %1224 = add nuw nsw i64 %556, 2
  %1225 = icmp eq i64 %558, 2
  br i1 %1225, label %568, label %1226

1226:                                             ; preds = %1223
  %1227 = getelementptr inbounds i8, i8* %557, i64 2
  %1228 = getelementptr inbounds i8, i8* %351, i64 %1224
  %1229 = load i8, i8* %1228, align 1, !alias.scope !26, !noalias !27
  %1230 = load i8, i8* %1227, align 1, !noalias !30
  %1231 = icmp eq i8 %1229, %1230
  br i1 %1231, label %1232, label %568, !prof !15

1232:                                             ; preds = %1226
  %1233 = add nuw nsw i64 %556, 3
  %1234 = icmp eq i64 %558, 3
  br i1 %1234, label %568, label %1235

1235:                                             ; preds = %1232
  %1236 = getelementptr inbounds i8, i8* %557, i64 3
  %1237 = getelementptr inbounds i8, i8* %351, i64 %1233
  %1238 = load i8, i8* %1237, align 1, !alias.scope !26, !noalias !27
  %1239 = load i8, i8* %1236, align 1, !noalias !30
  %1240 = icmp eq i8 %1238, %1239
  br i1 %1240, label %1241, label %568, !prof !15

1241:                                             ; preds = %1235
  %1242 = add nuw nsw i64 %556, 4
  %1243 = icmp eq i64 %558, 4
  br i1 %1243, label %568, label %1244

1244:                                             ; preds = %1241
  %1245 = getelementptr inbounds i8, i8* %557, i64 4
  %1246 = getelementptr inbounds i8, i8* %351, i64 %1242
  %1247 = load i8, i8* %1246, align 1, !alias.scope !26, !noalias !27
  %1248 = load i8, i8* %1245, align 1, !noalias !30
  %1249 = icmp eq i8 %1247, %1248
  br i1 %1249, label %1250, label %568, !prof !15

1250:                                             ; preds = %1244
  %1251 = add nuw nsw i64 %556, 5
  %1252 = icmp eq i64 %558, 5
  br i1 %1252, label %568, label %1253

1253:                                             ; preds = %1250
  %1254 = getelementptr inbounds i8, i8* %557, i64 5
  %1255 = getelementptr inbounds i8, i8* %351, i64 %1251
  %1256 = load i8, i8* %1255, align 1, !alias.scope !26, !noalias !27
  %1257 = load i8, i8* %1254, align 1, !noalias !30
  %1258 = icmp eq i8 %1256, %1257
  br i1 %1258, label %1259, label %568, !prof !15

1259:                                             ; preds = %1253
  %1260 = add nuw nsw i64 %556, 6
  %1261 = icmp eq i64 %558, 6
  br i1 %1261, label %568, label %1262

1262:                                             ; preds = %1259
  %1263 = getelementptr inbounds i8, i8* %557, i64 6
  %1264 = getelementptr inbounds i8, i8* %351, i64 %1260
  %1265 = load i8, i8* %1264, align 1, !alias.scope !26, !noalias !27
  %1266 = load i8, i8* %1263, align 1, !noalias !30
  %1267 = icmp eq i8 %1265, %1266
  %1268 = add nuw nsw i64 %556, 7
  %1269 = select i1 %1267, i64 %1268, i64 %1260, !prof !15
  br label %568
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH3(i64, i64, i8* readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* nocapture readonly, i32* nocapture, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = alloca [2 x i64], align 16
  %13 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = shl i64 1, %15
  %17 = add i64 %16, -16
  %18 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = load i64, i64* %7, align 8
  %21 = add i64 %1, %0
  %22 = icmp ugt i64 %0, 7
  %23 = add i64 %21, -7
  %24 = select i1 %22, i64 %23, i64 %1
  %25 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 9
  %28 = select i1 %27, i64 64, i64 512
  %29 = add i64 %1, 8
  %30 = icmp ult i64 %29, %21
  br i1 %30, label %31, label %896

31:                                               ; preds = %11
  %32 = add i64 %28, %1
  %33 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %34 = bitcast i16* %33 to i32**
  %35 = and i64 %3, 4294967295
  %36 = bitcast [2 x i64]* %12 to i8*
  %37 = getelementptr inbounds [2 x i64], [2 x i64]* %12, i64 0, i64 0
  %38 = getelementptr inbounds [2 x i64], [2 x i64]* %12, i64 0, i64 1
  %39 = shl nuw nsw i64 %28, 2
  %40 = getelementptr inbounds i32, i32* %6, i64 1
  %41 = getelementptr inbounds i32, i32* %6, i64 2
  %42 = getelementptr inbounds i32, i32* %6, i64 3
  %43 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %44 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  br label %45

45:                                               ; preds = %31, %888
  %46 = phi i64 [ %0, %31 ], [ %895, %888 ]
  %47 = phi i64 [ %1, %31 ], [ %892, %888 ]
  %48 = phi %struct.Command* [ %8, %31 ], [ %891, %888 ]
  %49 = phi i64 [ %32, %31 ], [ %890, %888 ]
  %50 = phi i64 [ %20, %31 ], [ %889, %888 ]
  %51 = icmp ult i64 %47, %17
  %52 = select i1 %51, i64 %47, i64 %17
  %53 = load i32*, i32** %34, align 8, !alias.scope !52, !noalias !55
  %54 = and i64 %47, %3
  %55 = getelementptr inbounds i8, i8* %2, i64 %54
  %56 = load i8, i8* %55, align 1, !alias.scope !59, !noalias !60
  %57 = zext i8 %56 to i32
  %58 = bitcast i8* %55 to i64*
  %59 = load i64, i64* %58, align 8, !alias.scope !59, !noalias !60
  %60 = mul i64 %59, -4819355556693147648
  %61 = lshr i64 %60, 48
  %62 = load i32, i32* %6, align 4, !alias.scope !61, !noalias !62
  %63 = sext i32 %62 to i64
  %64 = sub i64 %47, %63
  %65 = icmp ult i64 %64, %47
  br i1 %65, label %66, label %126

66:                                               ; preds = %45
  %67 = and i64 %35, %64
  %68 = getelementptr inbounds i8, i8* %2, i64 %67
  %69 = load i8, i8* %68, align 1, !alias.scope !59, !noalias !60
  %70 = icmp eq i8 %56, %69
  br i1 %70, label %71, label %126

71:                                               ; preds = %66
  %72 = lshr i64 %46, 3
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %101, label %74, !prof !13

74:                                               ; preds = %71
  %75 = bitcast i8* %68 to i64*
  %76 = load i64, i64* %75, align 8, !alias.scope !59, !noalias !60
  %77 = icmp eq i64 %59, %76
  br i1 %77, label %78, label %93, !prof !13

78:                                               ; preds = %74, %86
  %79 = phi i64 [ %83, %86 ], [ 0, %74 ]
  %80 = phi i8* [ %82, %86 ], [ %55, %74 ]
  %81 = phi i64 [ %84, %86 ], [ %72, %74 ]
  %82 = getelementptr inbounds i8, i8* %80, i64 8
  %83 = add nuw i64 %79, 8
  %84 = add nsw i64 %81, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %101, label %86, !prof !13

86:                                               ; preds = %78
  %87 = bitcast i8* %82 to i64*
  %88 = load i64, i64* %87, align 8, !alias.scope !59, !noalias !60
  %89 = getelementptr inbounds i8, i8* %68, i64 %83
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8, !alias.scope !59, !noalias !60
  %92 = icmp eq i64 %88, %91
  br i1 %92, label %78, label %93, !prof !13

93:                                               ; preds = %86, %74
  %94 = phi i64 [ %59, %74 ], [ %88, %86 ]
  %95 = phi i64 [ 0, %74 ], [ %83, %86 ]
  %96 = phi i64 [ %76, %74 ], [ %91, %86 ]
  %97 = xor i64 %96, %94
  %98 = tail call i64 @llvm.cttz.i64(i64 %97, i1 true) #4, !range !14
  %99 = lshr i64 %98, 3
  %100 = or i64 %99, %95
  br label %114

101:                                              ; preds = %78, %71
  %102 = phi i64 [ 0, %71 ], [ %83, %78 ]
  %103 = phi i8* [ %55, %71 ], [ %82, %78 ]
  %104 = and i64 %46, 7
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds i8, i8* %68, i64 %102
  %108 = load i8, i8* %107, align 1, !alias.scope !59, !noalias !60
  %109 = load i8, i8* %103, align 1, !alias.scope !59, !noalias !60
  %110 = icmp eq i8 %108, %109
  br i1 %110, label %111, label %114, !prof !15

111:                                              ; preds = %106
  %112 = add i64 %102, 1
  %113 = icmp eq i64 %104, 1
  br i1 %113, label %114, label %907

114:                                              ; preds = %952, %111, %106, %907, %913, %916, %922, %925, %931, %934, %940, %943, %949, %101, %93
  %115 = phi i64 [ %100, %93 ], [ %102, %101 ], [ %102, %106 ], [ %112, %111 ], [ %112, %907 ], [ %914, %913 ], [ %914, %916 ], [ %923, %922 ], [ %923, %925 ], [ %932, %931 ], [ %932, %934 ], [ %941, %940 ], [ %941, %943 ], [ %950, %949 ], [ %959, %952 ]
  %116 = icmp ugt i64 %115, 3
  br i1 %116, label %117, label %126

117:                                              ; preds = %114
  %118 = mul i64 %115, 135
  %119 = add i64 %118, 1935
  %120 = icmp ugt i64 %119, 2020
  br i1 %120, label %121, label %126

121:                                              ; preds = %117
  %122 = add i64 %115, %54
  %123 = getelementptr inbounds i8, i8* %2, i64 %122
  %124 = load i8, i8* %123, align 1, !alias.scope !59, !noalias !60
  %125 = zext i8 %124 to i32
  br label %126

126:                                              ; preds = %121, %117, %114, %66, %45
  %127 = phi i64 [ %119, %121 ], [ 2020, %117 ], [ 2020, %114 ], [ 2020, %66 ], [ 2020, %45 ]
  %128 = phi i64 [ %63, %121 ], [ 0, %117 ], [ 0, %114 ], [ 0, %66 ], [ 0, %45 ]
  %129 = phi i64 [ %115, %121 ], [ 0, %117 ], [ 0, %114 ], [ 0, %66 ], [ 0, %45 ]
  %130 = phi i32 [ %125, %121 ], [ %57, %117 ], [ %57, %114 ], [ %57, %66 ], [ %57, %45 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #4, !noalias !63
  store i64 %61, i64* %37, align 16, !noalias !63
  %131 = add nuw nsw i64 %61, 8
  %132 = and i64 %131, 65535
  store i64 %132, i64* %38, align 8, !noalias !63
  %133 = lshr i64 %47, 3
  %134 = and i64 %133, 1
  %135 = getelementptr inbounds [2 x i64], [2 x i64]* %12, i64 0, i64 %134
  %136 = load i64, i64* %135, align 8, !noalias !63
  %137 = lshr i64 %46, 3
  %138 = icmp eq i64 %137, 0
  %139 = and i64 %46, 7
  %140 = icmp eq i64 %139, 0
  %141 = getelementptr inbounds i32, i32* %53, i64 %61
  %142 = load i32, i32* %141, align 4, !noalias !63
  %143 = zext i32 %142 to i64
  %144 = sub i64 %47, %143
  %145 = and i64 %143, %3
  %146 = add i64 %145, %129
  %147 = getelementptr inbounds i8, i8* %2, i64 %146
  %148 = load i8, i8* %147, align 1, !alias.scope !59, !noalias !60
  %149 = zext i8 %148 to i32
  %150 = icmp eq i32 %130, %149
  %151 = add i64 %144, -1
  %152 = icmp ult i64 %151, %52
  %153 = and i1 %150, %152
  br i1 %153, label %154, label %212, !prof !17

154:                                              ; preds = %126
  %155 = getelementptr inbounds i8, i8* %2, i64 %145
  br i1 %138, label %183, label %156, !prof !13

156:                                              ; preds = %154
  %157 = bitcast i8* %155 to i64*
  %158 = load i64, i64* %157, align 8, !alias.scope !59, !noalias !60
  %159 = icmp eq i64 %59, %158
  br i1 %159, label %160, label %175, !prof !13

160:                                              ; preds = %156, %168
  %161 = phi i64 [ %165, %168 ], [ 0, %156 ]
  %162 = phi i8* [ %164, %168 ], [ %55, %156 ]
  %163 = phi i64 [ %166, %168 ], [ %137, %156 ]
  %164 = getelementptr inbounds i8, i8* %162, i64 8
  %165 = add nuw i64 %161, 8
  %166 = add nsw i64 %163, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %183, label %168, !prof !13

168:                                              ; preds = %160
  %169 = bitcast i8* %164 to i64*
  %170 = load i64, i64* %169, align 8, !alias.scope !59, !noalias !60
  %171 = getelementptr inbounds i8, i8* %155, i64 %165
  %172 = bitcast i8* %171 to i64*
  %173 = load i64, i64* %172, align 8, !alias.scope !59, !noalias !60
  %174 = icmp eq i64 %170, %173
  br i1 %174, label %160, label %175, !prof !13

175:                                              ; preds = %168, %156
  %176 = phi i64 [ %59, %156 ], [ %170, %168 ]
  %177 = phi i64 [ 0, %156 ], [ %165, %168 ]
  %178 = phi i64 [ %158, %156 ], [ %173, %168 ]
  %179 = xor i64 %178, %176
  %180 = tail call i64 @llvm.cttz.i64(i64 %179, i1 true) #4, !range !14
  %181 = lshr i64 %180, 3
  %182 = or i64 %181, %177
  br label %194

183:                                              ; preds = %160, %154
  %184 = phi i64 [ 0, %154 ], [ %165, %160 ]
  %185 = phi i8* [ %55, %154 ], [ %164, %160 ]
  br i1 %140, label %194, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds i8, i8* %155, i64 %184
  %188 = load i8, i8* %187, align 1, !alias.scope !59, !noalias !60
  %189 = load i8, i8* %185, align 1, !alias.scope !59, !noalias !60
  %190 = icmp eq i8 %188, %189
  br i1 %190, label %191, label %194, !prof !15

191:                                              ; preds = %186
  %192 = add i64 %184, 1
  %193 = icmp eq i64 %139, 1
  br i1 %193, label %194, label %960

194:                                              ; preds = %1005, %191, %186, %960, %966, %969, %975, %978, %984, %987, %993, %996, %1002, %183, %175
  %195 = phi i64 [ %182, %175 ], [ %184, %183 ], [ %184, %186 ], [ %192, %191 ], [ %192, %960 ], [ %967, %966 ], [ %967, %969 ], [ %976, %975 ], [ %976, %978 ], [ %985, %984 ], [ %985, %987 ], [ %994, %993 ], [ %994, %996 ], [ %1003, %1002 ], [ %1012, %1005 ]
  %196 = icmp ugt i64 %195, 3
  br i1 %196, label %197, label %212

197:                                              ; preds = %194
  %198 = mul i64 %195, 135
  %199 = trunc i64 %144 to i32
  %200 = tail call i32 @llvm.ctlz.i32(i32 %199, i1 true) #4, !range !18
  %201 = xor i32 %200, 31
  %202 = mul nsw i32 %201, -30
  %203 = add nsw i32 %202, 1920
  %204 = zext i32 %203 to i64
  %205 = add i64 %198, %204
  %206 = icmp ult i64 %127, %205
  br i1 %206, label %207, label %212

207:                                              ; preds = %197
  %208 = add i64 %195, %54
  %209 = getelementptr inbounds i8, i8* %2, i64 %208
  %210 = load i8, i8* %209, align 1, !alias.scope !59, !noalias !60
  %211 = zext i8 %210 to i32
  br label %212

212:                                              ; preds = %207, %197, %194, %126
  %213 = phi i64 [ %205, %207 ], [ %127, %197 ], [ %127, %194 ], [ %127, %126 ]
  %214 = phi i64 [ %144, %207 ], [ %128, %197 ], [ %128, %194 ], [ %128, %126 ]
  %215 = phi i64 [ %195, %207 ], [ %129, %197 ], [ %129, %194 ], [ %129, %126 ]
  %216 = phi i32 [ %211, %207 ], [ %130, %197 ], [ %130, %194 ], [ %130, %126 ]
  %217 = getelementptr inbounds i32, i32* %53, i64 %132
  %218 = load i32, i32* %217, align 4, !noalias !63
  %219 = zext i32 %218 to i64
  %220 = sub i64 %47, %219
  %221 = and i64 %219, %3
  %222 = add i64 %221, %215
  %223 = getelementptr inbounds i8, i8* %2, i64 %222
  %224 = load i8, i8* %223, align 1, !alias.scope !59, !noalias !60
  %225 = zext i8 %224 to i32
  %226 = icmp eq i32 %216, %225
  %227 = add i64 %220, -1
  %228 = icmp ult i64 %227, %52
  %229 = and i1 %226, %228
  br i1 %229, label %230, label %286, !prof !17

230:                                              ; preds = %212
  %231 = getelementptr inbounds i8, i8* %2, i64 %221
  br i1 %138, label %259, label %232, !prof !13

232:                                              ; preds = %230
  %233 = bitcast i8* %231 to i64*
  %234 = load i64, i64* %233, align 8, !alias.scope !59, !noalias !60
  %235 = icmp eq i64 %59, %234
  br i1 %235, label %244, label %236, !prof !13

236:                                              ; preds = %252, %232
  %237 = phi i64 [ %59, %232 ], [ %254, %252 ]
  %238 = phi i64 [ 0, %232 ], [ %249, %252 ]
  %239 = phi i64 [ %234, %232 ], [ %257, %252 ]
  %240 = xor i64 %239, %237
  %241 = tail call i64 @llvm.cttz.i64(i64 %240, i1 true) #4, !range !14
  %242 = lshr i64 %241, 3
  %243 = or i64 %242, %238
  br label %270

244:                                              ; preds = %232, %252
  %245 = phi i64 [ %249, %252 ], [ 0, %232 ]
  %246 = phi i8* [ %248, %252 ], [ %55, %232 ]
  %247 = phi i64 [ %250, %252 ], [ %137, %232 ]
  %248 = getelementptr inbounds i8, i8* %246, i64 8
  %249 = add nuw i64 %245, 8
  %250 = add nsw i64 %247, -1
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %259, label %252, !prof !13

252:                                              ; preds = %244
  %253 = bitcast i8* %248 to i64*
  %254 = load i64, i64* %253, align 8, !alias.scope !59, !noalias !60
  %255 = getelementptr inbounds i8, i8* %231, i64 %249
  %256 = bitcast i8* %255 to i64*
  %257 = load i64, i64* %256, align 8, !alias.scope !59, !noalias !60
  %258 = icmp eq i64 %254, %257
  br i1 %258, label %244, label %236, !prof !13

259:                                              ; preds = %244, %230
  %260 = phi i64 [ 0, %230 ], [ %249, %244 ]
  %261 = phi i8* [ %55, %230 ], [ %248, %244 ]
  br i1 %140, label %270, label %262

262:                                              ; preds = %259
  %263 = getelementptr inbounds i8, i8* %231, i64 %260
  %264 = load i8, i8* %263, align 1, !alias.scope !59, !noalias !60
  %265 = load i8, i8* %261, align 1, !alias.scope !59, !noalias !60
  %266 = icmp eq i8 %264, %265
  br i1 %266, label %267, label %270, !prof !15

267:                                              ; preds = %262
  %268 = add i64 %260, 1
  %269 = icmp eq i64 %139, 1
  br i1 %269, label %270, label %1013

270:                                              ; preds = %1058, %267, %262, %1013, %1019, %1022, %1028, %1031, %1037, %1040, %1046, %1049, %1055, %259, %236
  %271 = phi i64 [ %243, %236 ], [ %260, %259 ], [ %260, %262 ], [ %268, %267 ], [ %268, %1013 ], [ %1020, %1019 ], [ %1020, %1022 ], [ %1029, %1028 ], [ %1029, %1031 ], [ %1038, %1037 ], [ %1038, %1040 ], [ %1047, %1046 ], [ %1047, %1049 ], [ %1056, %1055 ], [ %1065, %1058 ]
  %272 = icmp ugt i64 %271, 3
  br i1 %272, label %273, label %286

273:                                              ; preds = %270
  %274 = mul i64 %271, 135
  %275 = trunc i64 %220 to i32
  %276 = tail call i32 @llvm.ctlz.i32(i32 %275, i1 true) #4, !range !18
  %277 = xor i32 %276, 31
  %278 = mul nsw i32 %277, -30
  %279 = add nsw i32 %278, 1920
  %280 = zext i32 %279 to i64
  %281 = add i64 %274, %280
  %282 = icmp ult i64 %213, %281
  %283 = select i1 %282, i64 %281, i64 %213
  %284 = select i1 %282, i64 %220, i64 %214
  %285 = select i1 %282, i64 %271, i64 %215
  br label %286

286:                                              ; preds = %273, %212, %270
  %287 = phi i64 [ %213, %270 ], [ %213, %212 ], [ %283, %273 ]
  %288 = phi i64 [ %214, %270 ], [ %214, %212 ], [ %284, %273 ]
  %289 = phi i64 [ %215, %270 ], [ %215, %212 ], [ %285, %273 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #4, !noalias !63
  %290 = trunc i64 %47 to i32
  %291 = getelementptr inbounds i32, i32* %53, i64 %136
  store i32 %290, i32* %291, align 4, !noalias !63
  %292 = icmp ugt i64 %287, 2020
  br i1 %292, label %293, label %833

293:                                              ; preds = %286, %558
  %294 = phi i64 [ %551, %558 ], [ %287, %286 ]
  %295 = phi i64 [ %552, %558 ], [ %288, %286 ]
  %296 = phi i64 [ %553, %558 ], [ %289, %286 ]
  %297 = phi i64 [ %559, %558 ], [ %50, %286 ]
  %298 = phi i64 [ %301, %558 ], [ %46, %286 ]
  %299 = phi i32 [ %560, %558 ], [ 0, %286 ]
  %300 = phi i64 [ %310, %558 ], [ %47, %286 ]
  %301 = add i64 %298, -1
  %302 = load i32, i32* %25, align 4
  %303 = icmp slt i32 %302, 5
  br i1 %303, label %304, label %308

304:                                              ; preds = %293
  %305 = add i64 %296, -1
  %306 = icmp ult i64 %305, %301
  %307 = select i1 %306, i64 %305, i64 %301
  br label %308

308:                                              ; preds = %293, %304
  %309 = phi i64 [ %307, %304 ], [ 0, %293 ]
  %310 = add i64 %300, 1
  %311 = icmp ult i64 %310, %17
  %312 = select i1 %311, i64 %310, i64 %17
  %313 = load i32*, i32** %34, align 8, !alias.scope !64, !noalias !67
  %314 = and i64 %310, %3
  %315 = add i64 %309, %314
  %316 = getelementptr inbounds i8, i8* %2, i64 %315
  %317 = load i8, i8* %316, align 1, !alias.scope !71, !noalias !72
  %318 = zext i8 %317 to i32
  %319 = getelementptr inbounds i8, i8* %2, i64 %314
  %320 = bitcast i8* %319 to i64*
  %321 = load i64, i64* %320, align 8, !alias.scope !71, !noalias !72
  %322 = mul i64 %321, -4819355556693147648
  %323 = lshr i64 %322, 48
  %324 = load i32, i32* %6, align 4, !alias.scope !73, !noalias !74
  %325 = sext i32 %324 to i64
  %326 = sub i64 %310, %325
  %327 = icmp ult i64 %326, %310
  br i1 %327, label %328, label %390

328:                                              ; preds = %308
  %329 = and i64 %35, %326
  %330 = add i64 %329, %309
  %331 = getelementptr inbounds i8, i8* %2, i64 %330
  %332 = load i8, i8* %331, align 1, !alias.scope !71, !noalias !72
  %333 = icmp eq i8 %317, %332
  br i1 %333, label %334, label %390

334:                                              ; preds = %328
  %335 = getelementptr inbounds i8, i8* %2, i64 %329
  %336 = lshr i64 %301, 3
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %365, label %338, !prof !13

338:                                              ; preds = %334
  %339 = bitcast i8* %335 to i64*
  %340 = load i64, i64* %339, align 8, !alias.scope !71, !noalias !72
  %341 = icmp eq i64 %321, %340
  br i1 %341, label %342, label %357, !prof !13

342:                                              ; preds = %338, %350
  %343 = phi i64 [ %347, %350 ], [ 0, %338 ]
  %344 = phi i8* [ %346, %350 ], [ %319, %338 ]
  %345 = phi i64 [ %348, %350 ], [ %336, %338 ]
  %346 = getelementptr inbounds i8, i8* %344, i64 8
  %347 = add nuw i64 %343, 8
  %348 = add nsw i64 %345, -1
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %365, label %350, !prof !13

350:                                              ; preds = %342
  %351 = bitcast i8* %346 to i64*
  %352 = load i64, i64* %351, align 8, !alias.scope !71, !noalias !72
  %353 = getelementptr inbounds i8, i8* %335, i64 %347
  %354 = bitcast i8* %353 to i64*
  %355 = load i64, i64* %354, align 8, !alias.scope !71, !noalias !72
  %356 = icmp eq i64 %352, %355
  br i1 %356, label %342, label %357, !prof !13

357:                                              ; preds = %350, %338
  %358 = phi i64 [ %321, %338 ], [ %352, %350 ]
  %359 = phi i64 [ 0, %338 ], [ %347, %350 ]
  %360 = phi i64 [ %340, %338 ], [ %355, %350 ]
  %361 = xor i64 %360, %358
  %362 = tail call i64 @llvm.cttz.i64(i64 %361, i1 true) #4, !range !14
  %363 = lshr i64 %362, 3
  %364 = or i64 %363, %359
  br label %378

365:                                              ; preds = %342, %334
  %366 = phi i64 [ 0, %334 ], [ %347, %342 ]
  %367 = phi i8* [ %319, %334 ], [ %346, %342 ]
  %368 = and i64 %301, 7
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %378, label %370

370:                                              ; preds = %365
  %371 = getelementptr inbounds i8, i8* %335, i64 %366
  %372 = load i8, i8* %371, align 1, !alias.scope !71, !noalias !72
  %373 = load i8, i8* %367, align 1, !alias.scope !71, !noalias !72
  %374 = icmp eq i8 %372, %373
  br i1 %374, label %375, label %378, !prof !15

375:                                              ; preds = %370
  %376 = add i64 %366, 1
  %377 = icmp eq i64 %368, 1
  br i1 %377, label %378, label %1066

378:                                              ; preds = %1111, %375, %370, %1066, %1072, %1075, %1081, %1084, %1090, %1093, %1099, %1102, %1108, %365, %357
  %379 = phi i64 [ %364, %357 ], [ %366, %365 ], [ %366, %370 ], [ %376, %375 ], [ %376, %1066 ], [ %1073, %1072 ], [ %1073, %1075 ], [ %1082, %1081 ], [ %1082, %1084 ], [ %1091, %1090 ], [ %1091, %1093 ], [ %1100, %1099 ], [ %1100, %1102 ], [ %1109, %1108 ], [ %1118, %1111 ]
  %380 = icmp ugt i64 %379, 3
  br i1 %380, label %381, label %390

381:                                              ; preds = %378
  %382 = mul i64 %379, 135
  %383 = add i64 %382, 1935
  %384 = icmp ugt i64 %383, 2020
  br i1 %384, label %385, label %390

385:                                              ; preds = %381
  %386 = add i64 %379, %314
  %387 = getelementptr inbounds i8, i8* %2, i64 %386
  %388 = load i8, i8* %387, align 1, !alias.scope !71, !noalias !72
  %389 = zext i8 %388 to i32
  br label %390

390:                                              ; preds = %385, %381, %378, %328, %308
  %391 = phi i64 [ %383, %385 ], [ 2020, %381 ], [ 2020, %378 ], [ 2020, %328 ], [ 2020, %308 ]
  %392 = phi i64 [ %325, %385 ], [ 0, %381 ], [ 0, %378 ], [ 0, %328 ], [ 0, %308 ]
  %393 = phi i64 [ %379, %385 ], [ %309, %381 ], [ %309, %378 ], [ %309, %328 ], [ %309, %308 ]
  %394 = phi i32 [ %389, %385 ], [ %318, %381 ], [ %318, %378 ], [ %318, %328 ], [ %318, %308 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #4, !noalias !75
  store i64 %323, i64* %37, align 16, !noalias !75
  %395 = add nuw nsw i64 %323, 8
  %396 = and i64 %395, 65535
  store i64 %396, i64* %38, align 8, !noalias !75
  %397 = lshr i64 %310, 3
  %398 = and i64 %397, 1
  %399 = getelementptr inbounds [2 x i64], [2 x i64]* %12, i64 0, i64 %398
  %400 = load i64, i64* %399, align 8, !noalias !75
  %401 = lshr i64 %301, 3
  %402 = icmp eq i64 %401, 0
  %403 = and i64 %301, 7
  %404 = icmp eq i64 %403, 0
  %405 = getelementptr inbounds i32, i32* %313, i64 %323
  %406 = load i32, i32* %405, align 4, !noalias !75
  %407 = zext i32 %406 to i64
  %408 = sub i64 %310, %407
  %409 = and i64 %407, %3
  %410 = add i64 %409, %393
  %411 = getelementptr inbounds i8, i8* %2, i64 %410
  %412 = load i8, i8* %411, align 1, !alias.scope !71, !noalias !72
  %413 = zext i8 %412 to i32
  %414 = icmp eq i32 %394, %413
  %415 = add i64 %408, -1
  %416 = icmp ult i64 %415, %312
  %417 = and i1 %414, %416
  br i1 %417, label %418, label %476, !prof !17

418:                                              ; preds = %390
  %419 = getelementptr inbounds i8, i8* %2, i64 %409
  br i1 %402, label %447, label %420, !prof !13

420:                                              ; preds = %418
  %421 = bitcast i8* %419 to i64*
  %422 = load i64, i64* %421, align 8, !alias.scope !71, !noalias !72
  %423 = icmp eq i64 %321, %422
  br i1 %423, label %424, label %439, !prof !13

424:                                              ; preds = %420, %432
  %425 = phi i64 [ %429, %432 ], [ 0, %420 ]
  %426 = phi i8* [ %428, %432 ], [ %319, %420 ]
  %427 = phi i64 [ %430, %432 ], [ %401, %420 ]
  %428 = getelementptr inbounds i8, i8* %426, i64 8
  %429 = add nuw i64 %425, 8
  %430 = add nsw i64 %427, -1
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %447, label %432, !prof !13

432:                                              ; preds = %424
  %433 = bitcast i8* %428 to i64*
  %434 = load i64, i64* %433, align 8, !alias.scope !71, !noalias !72
  %435 = getelementptr inbounds i8, i8* %419, i64 %429
  %436 = bitcast i8* %435 to i64*
  %437 = load i64, i64* %436, align 8, !alias.scope !71, !noalias !72
  %438 = icmp eq i64 %434, %437
  br i1 %438, label %424, label %439, !prof !13

439:                                              ; preds = %432, %420
  %440 = phi i64 [ %321, %420 ], [ %434, %432 ]
  %441 = phi i64 [ 0, %420 ], [ %429, %432 ]
  %442 = phi i64 [ %422, %420 ], [ %437, %432 ]
  %443 = xor i64 %442, %440
  %444 = tail call i64 @llvm.cttz.i64(i64 %443, i1 true) #4, !range !14
  %445 = lshr i64 %444, 3
  %446 = or i64 %445, %441
  br label %458

447:                                              ; preds = %424, %418
  %448 = phi i64 [ 0, %418 ], [ %429, %424 ]
  %449 = phi i8* [ %319, %418 ], [ %428, %424 ]
  br i1 %404, label %458, label %450

450:                                              ; preds = %447
  %451 = getelementptr inbounds i8, i8* %419, i64 %448
  %452 = load i8, i8* %451, align 1, !alias.scope !71, !noalias !72
  %453 = load i8, i8* %449, align 1, !alias.scope !71, !noalias !72
  %454 = icmp eq i8 %452, %453
  br i1 %454, label %455, label %458, !prof !15

455:                                              ; preds = %450
  %456 = add i64 %448, 1
  %457 = icmp eq i64 %403, 1
  br i1 %457, label %458, label %1119

458:                                              ; preds = %1164, %455, %450, %1119, %1125, %1128, %1134, %1137, %1143, %1146, %1152, %1155, %1161, %447, %439
  %459 = phi i64 [ %446, %439 ], [ %448, %447 ], [ %448, %450 ], [ %456, %455 ], [ %456, %1119 ], [ %1126, %1125 ], [ %1126, %1128 ], [ %1135, %1134 ], [ %1135, %1137 ], [ %1144, %1143 ], [ %1144, %1146 ], [ %1153, %1152 ], [ %1153, %1155 ], [ %1162, %1161 ], [ %1171, %1164 ]
  %460 = icmp ugt i64 %459, 3
  br i1 %460, label %461, label %476

461:                                              ; preds = %458
  %462 = mul i64 %459, 135
  %463 = trunc i64 %408 to i32
  %464 = tail call i32 @llvm.ctlz.i32(i32 %463, i1 true) #4, !range !18
  %465 = xor i32 %464, 31
  %466 = mul nsw i32 %465, -30
  %467 = add nsw i32 %466, 1920
  %468 = zext i32 %467 to i64
  %469 = add i64 %462, %468
  %470 = icmp ult i64 %391, %469
  br i1 %470, label %471, label %476

471:                                              ; preds = %461
  %472 = add i64 %459, %314
  %473 = getelementptr inbounds i8, i8* %2, i64 %472
  %474 = load i8, i8* %473, align 1, !alias.scope !71, !noalias !72
  %475 = zext i8 %474 to i32
  br label %476

476:                                              ; preds = %471, %461, %458, %390
  %477 = phi i64 [ %469, %471 ], [ %391, %461 ], [ %391, %458 ], [ %391, %390 ]
  %478 = phi i64 [ %408, %471 ], [ %392, %461 ], [ %392, %458 ], [ %392, %390 ]
  %479 = phi i64 [ %459, %471 ], [ %393, %461 ], [ %393, %458 ], [ %393, %390 ]
  %480 = phi i32 [ %475, %471 ], [ %394, %461 ], [ %394, %458 ], [ %394, %390 ]
  %481 = getelementptr inbounds i32, i32* %313, i64 %396
  %482 = load i32, i32* %481, align 4, !noalias !75
  %483 = zext i32 %482 to i64
  %484 = sub i64 %310, %483
  %485 = and i64 %483, %3
  %486 = add i64 %485, %479
  %487 = getelementptr inbounds i8, i8* %2, i64 %486
  %488 = load i8, i8* %487, align 1, !alias.scope !71, !noalias !72
  %489 = zext i8 %488 to i32
  %490 = icmp eq i32 %480, %489
  %491 = add i64 %484, -1
  %492 = icmp ult i64 %491, %312
  %493 = and i1 %490, %492
  br i1 %493, label %494, label %550, !prof !17

494:                                              ; preds = %476
  %495 = getelementptr inbounds i8, i8* %2, i64 %485
  br i1 %402, label %523, label %496, !prof !13

496:                                              ; preds = %494
  %497 = bitcast i8* %495 to i64*
  %498 = load i64, i64* %497, align 8, !alias.scope !71, !noalias !72
  %499 = icmp eq i64 %321, %498
  br i1 %499, label %508, label %500, !prof !13

500:                                              ; preds = %516, %496
  %501 = phi i64 [ %321, %496 ], [ %518, %516 ]
  %502 = phi i64 [ 0, %496 ], [ %513, %516 ]
  %503 = phi i64 [ %498, %496 ], [ %521, %516 ]
  %504 = xor i64 %503, %501
  %505 = tail call i64 @llvm.cttz.i64(i64 %504, i1 true) #4, !range !14
  %506 = lshr i64 %505, 3
  %507 = or i64 %506, %502
  br label %534

508:                                              ; preds = %496, %516
  %509 = phi i64 [ %513, %516 ], [ 0, %496 ]
  %510 = phi i8* [ %512, %516 ], [ %319, %496 ]
  %511 = phi i64 [ %514, %516 ], [ %401, %496 ]
  %512 = getelementptr inbounds i8, i8* %510, i64 8
  %513 = add nuw i64 %509, 8
  %514 = add nsw i64 %511, -1
  %515 = icmp eq i64 %514, 0
  br i1 %515, label %523, label %516, !prof !13

516:                                              ; preds = %508
  %517 = bitcast i8* %512 to i64*
  %518 = load i64, i64* %517, align 8, !alias.scope !71, !noalias !72
  %519 = getelementptr inbounds i8, i8* %495, i64 %513
  %520 = bitcast i8* %519 to i64*
  %521 = load i64, i64* %520, align 8, !alias.scope !71, !noalias !72
  %522 = icmp eq i64 %518, %521
  br i1 %522, label %508, label %500, !prof !13

523:                                              ; preds = %508, %494
  %524 = phi i64 [ 0, %494 ], [ %513, %508 ]
  %525 = phi i8* [ %319, %494 ], [ %512, %508 ]
  br i1 %404, label %534, label %526

526:                                              ; preds = %523
  %527 = getelementptr inbounds i8, i8* %495, i64 %524
  %528 = load i8, i8* %527, align 1, !alias.scope !71, !noalias !72
  %529 = load i8, i8* %525, align 1, !alias.scope !71, !noalias !72
  %530 = icmp eq i8 %528, %529
  br i1 %530, label %531, label %534, !prof !15

531:                                              ; preds = %526
  %532 = add i64 %524, 1
  %533 = icmp eq i64 %403, 1
  br i1 %533, label %534, label %1172

534:                                              ; preds = %1217, %531, %526, %1172, %1178, %1181, %1187, %1190, %1196, %1199, %1205, %1208, %1214, %523, %500
  %535 = phi i64 [ %507, %500 ], [ %524, %523 ], [ %524, %526 ], [ %532, %531 ], [ %532, %1172 ], [ %1179, %1178 ], [ %1179, %1181 ], [ %1188, %1187 ], [ %1188, %1190 ], [ %1197, %1196 ], [ %1197, %1199 ], [ %1206, %1205 ], [ %1206, %1208 ], [ %1215, %1214 ], [ %1224, %1217 ]
  %536 = icmp ugt i64 %535, 3
  br i1 %536, label %537, label %550

537:                                              ; preds = %534
  %538 = mul i64 %535, 135
  %539 = trunc i64 %484 to i32
  %540 = tail call i32 @llvm.ctlz.i32(i32 %539, i1 true) #4, !range !18
  %541 = xor i32 %540, 31
  %542 = mul nsw i32 %541, -30
  %543 = add nsw i32 %542, 1920
  %544 = zext i32 %543 to i64
  %545 = add i64 %538, %544
  %546 = icmp ult i64 %477, %545
  %547 = select i1 %546, i64 %545, i64 %477
  %548 = select i1 %546, i64 %484, i64 %478
  %549 = select i1 %546, i64 %535, i64 %479
  br label %550

550:                                              ; preds = %537, %476, %534
  %551 = phi i64 [ %477, %534 ], [ %477, %476 ], [ %547, %537 ]
  %552 = phi i64 [ %478, %534 ], [ %478, %476 ], [ %548, %537 ]
  %553 = phi i64 [ %479, %534 ], [ %479, %476 ], [ %549, %537 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #4, !noalias !75
  %554 = trunc i64 %310 to i32
  %555 = getelementptr inbounds i32, i32* %313, i64 %400
  store i32 %554, i32* %555, align 4, !noalias !75
  %556 = add i64 %294, 175
  %557 = icmp ult i64 %551, %556
  br i1 %557, label %565, label %558

558:                                              ; preds = %550
  %559 = add i64 %297, 1
  %560 = add nuw nsw i32 %299, 1
  %561 = icmp ult i32 %560, 4
  %562 = add i64 %300, 9
  %563 = icmp ult i64 %562, %21
  %564 = and i1 %561, %563
  br i1 %564, label %293, label %565

565:                                              ; preds = %558, %550
  %566 = phi i64 [ %295, %550 ], [ %552, %558 ]
  %567 = phi i64 [ %296, %550 ], [ %553, %558 ]
  %568 = phi i64 [ %297, %550 ], [ %559, %558 ]
  %569 = phi i64 [ %300, %550 ], [ %310, %558 ]
  %570 = shl i64 %567, 1
  %571 = add i64 %570, %28
  %572 = add i64 %571, %569
  %573 = add i64 %569, %19
  %574 = icmp ult i64 %573, %17
  %575 = select i1 %574, i64 %573, i64 %17
  %576 = icmp ugt i64 %566, %575
  br i1 %576, label %612, label %577

577:                                              ; preds = %565
  %578 = add i64 %566, 3
  %579 = load i32, i32* %6, align 4
  %580 = sext i32 %579 to i64
  %581 = sub i64 %578, %580
  %582 = load i32, i32* %40, align 4
  %583 = sext i32 %582 to i64
  %584 = sub i64 %578, %583
  %585 = icmp eq i64 %566, %580
  br i1 %585, label %624, label %586

586:                                              ; preds = %577
  %587 = icmp eq i64 %566, %583
  br i1 %587, label %614, label %588

588:                                              ; preds = %586
  %589 = icmp ult i64 %581, 7
  br i1 %589, label %590, label %596

590:                                              ; preds = %588
  %591 = trunc i64 %581 to i32
  %592 = shl i32 %591, 2
  %593 = lshr i32 158663784, %592
  %594 = and i32 %593, 15
  %595 = zext i32 %594 to i64
  br label %614

596:                                              ; preds = %588
  %597 = icmp ult i64 %584, 7
  br i1 %597, label %598, label %604

598:                                              ; preds = %596
  %599 = trunc i64 %584 to i32
  %600 = shl i32 %599, 2
  %601 = lshr i32 266017486, %600
  %602 = and i32 %601, 15
  %603 = zext i32 %602 to i64
  br label %614

604:                                              ; preds = %596
  %605 = load i32, i32* %41, align 4
  %606 = sext i32 %605 to i64
  %607 = icmp eq i64 %566, %606
  br i1 %607, label %614, label %608

608:                                              ; preds = %604
  %609 = load i32, i32* %42, align 4
  %610 = sext i32 %609 to i64
  %611 = icmp eq i64 %566, %610
  br i1 %611, label %614, label %612

612:                                              ; preds = %608, %565
  %613 = add i64 %566, 15
  br label %614

614:                                              ; preds = %586, %590, %598, %604, %608, %612
  %615 = phi i64 [ %613, %612 ], [ 3, %608 ], [ 2, %604 ], [ 1, %586 ], [ %603, %598 ], [ %595, %590 ]
  %616 = icmp ule i64 %566, %575
  %617 = icmp ne i64 %615, 0
  %618 = and i1 %616, %617
  br i1 %618, label %619, label %624

619:                                              ; preds = %614
  %620 = load i32, i32* %41, align 4
  store i32 %620, i32* %42, align 4
  %621 = load i32, i32* %40, align 4
  store i32 %621, i32* %41, align 4
  %622 = load i32, i32* %6, align 4
  store i32 %622, i32* %40, align 4
  %623 = trunc i64 %566 to i32
  store i32 %623, i32* %6, align 4
  br label %624

624:                                              ; preds = %577, %619, %614
  %625 = phi i64 [ %615, %619 ], [ %615, %614 ], [ 0, %577 ]
  %626 = getelementptr inbounds %struct.Command, %struct.Command* %48, i64 1
  %627 = trunc i64 %568 to i32
  %628 = getelementptr inbounds %struct.Command, %struct.Command* %48, i64 0, i32 0
  store i32 %627, i32* %628, align 4
  %629 = trunc i64 %567 to i32
  %630 = getelementptr inbounds %struct.Command, %struct.Command* %48, i64 0, i32 1
  store i32 %629, i32* %630, align 4
  %631 = load i32, i32* %43, align 4
  %632 = zext i32 %631 to i64
  %633 = load i32, i32* %44, align 8
  %634 = zext i32 %633 to i64
  %635 = getelementptr inbounds %struct.Command, %struct.Command* %48, i64 0, i32 4
  %636 = getelementptr inbounds %struct.Command, %struct.Command* %48, i64 0, i32 2
  %637 = add nuw nsw i64 %632, 16
  %638 = icmp ugt i64 %637, %625
  br i1 %638, label %639, label %641

639:                                              ; preds = %624
  %640 = trunc i64 %625 to i16
  store i16 %640, i16* %635, align 2
  br label %671

641:                                              ; preds = %624
  %642 = shl i64 4, %634
  %643 = add i64 %625, -16
  %644 = sub i64 %643, %632
  %645 = add i64 %644, %642
  %646 = trunc i64 %645 to i32
  %647 = tail call i32 @llvm.ctlz.i32(i32 %646, i1 true) #4, !range !18
  %648 = sub nsw i32 30, %647
  %649 = zext i32 %648 to i64
  %650 = shl nsw i32 -1, %633
  %651 = xor i32 %650, 65535
  %652 = zext i32 %651 to i64
  %653 = and i64 %645, %652
  %654 = lshr i64 %645, %649
  %655 = and i64 %654, 1
  %656 = or i64 %655, 2
  %657 = shl i64 %656, %649
  %658 = sub nsw i64 %649, %634
  %659 = shl nsw i64 %658, 10
  %660 = shl nsw i64 %658, 1
  %661 = add nsw i64 %660, -2
  %662 = or i64 %661, %655
  %663 = shl i64 %662, %634
  %664 = add nuw nsw i64 %653, %637
  %665 = add i64 %664, %663
  %666 = or i64 %665, %659
  %667 = trunc i64 %666 to i16
  store i16 %667, i16* %635, align 2
  %668 = sub i64 %645, %657
  %669 = lshr i64 %668, %634
  %670 = trunc i64 %669 to i32
  br label %671

671:                                              ; preds = %641, %639
  %672 = phi i16 [ %667, %641 ], [ %640, %639 ]
  %673 = phi i32 [ %670, %641 ], [ 0, %639 ]
  store i32 %673, i32* %636, align 4
  %674 = shl i64 %567, 32
  %675 = ashr exact i64 %674, 32
  %676 = and i16 %672, 1023
  %677 = icmp eq i16 %676, 0
  %678 = getelementptr inbounds %struct.Command, %struct.Command* %48, i64 0, i32 3
  %679 = icmp ult i64 %568, 6
  br i1 %679, label %680, label %682

680:                                              ; preds = %671
  %681 = trunc i64 %568 to i16
  br label %708

682:                                              ; preds = %671
  %683 = icmp ult i64 %568, 130
  br i1 %683, label %684, label %696

684:                                              ; preds = %682
  %685 = add nsw i64 %568, -2
  %686 = trunc i64 %685 to i32
  %687 = tail call i32 @llvm.ctlz.i32(i32 %686, i1 true) #4, !range !18
  %688 = sub nsw i32 30, %687
  %689 = shl nsw i32 %688, 1
  %690 = zext i32 %689 to i64
  %691 = zext i32 %688 to i64
  %692 = lshr i64 %685, %691
  %693 = add nuw nsw i64 %692, %690
  %694 = trunc i64 %693 to i16
  %695 = add i16 %694, 2
  br label %708

696:                                              ; preds = %682
  %697 = icmp ult i64 %568, 2114
  br i1 %697, label %698, label %703

698:                                              ; preds = %696
  %699 = add nsw i32 %627, -66
  %700 = tail call i32 @llvm.ctlz.i32(i32 %699, i1 true) #4, !range !18
  %701 = trunc i32 %700 to i16
  %702 = sub nuw nsw i16 41, %701
  br label %708

703:                                              ; preds = %696
  %704 = icmp ult i64 %568, 6210
  br i1 %704, label %708, label %705

705:                                              ; preds = %703
  %706 = icmp ult i64 %568, 22594
  %707 = select i1 %706, i16 22, i16 23
  br label %708

708:                                              ; preds = %705, %703, %698, %684, %680
  %709 = phi i16 [ %681, %680 ], [ %695, %684 ], [ %702, %698 ], [ 21, %703 ], [ %707, %705 ]
  %710 = icmp ult i32 %629, 10
  br i1 %710, label %711, label %714

711:                                              ; preds = %708
  %712 = trunc i64 %567 to i16
  %713 = add nsw i16 %712, -2
  br label %735

714:                                              ; preds = %708
  %715 = icmp ult i32 %629, 134
  br i1 %715, label %716, label %728

716:                                              ; preds = %714
  %717 = add nsw i64 %675, -6
  %718 = trunc i64 %717 to i32
  %719 = tail call i32 @llvm.ctlz.i32(i32 %718, i1 true) #4, !range !18
  %720 = sub nsw i32 30, %719
  %721 = shl nsw i32 %720, 1
  %722 = zext i32 %721 to i64
  %723 = zext i32 %720 to i64
  %724 = lshr i64 %717, %723
  %725 = add nuw nsw i64 %724, %722
  %726 = trunc i64 %725 to i16
  %727 = add i16 %726, 4
  br label %735

728:                                              ; preds = %714
  %729 = icmp ult i32 %629, 2118
  br i1 %729, label %730, label %735

730:                                              ; preds = %728
  %731 = add nsw i32 %629, -70
  %732 = tail call i32 @llvm.ctlz.i32(i32 %731, i1 true) #4, !range !18
  %733 = trunc i32 %732 to i16
  %734 = sub nuw nsw i16 43, %733
  br label %735

735:                                              ; preds = %730, %728, %716, %711
  %736 = phi i16 [ %713, %711 ], [ %727, %716 ], [ %734, %730 ], [ 23, %728 ]
  %737 = and i16 %736, 7
  %738 = shl i16 %709, 3
  %739 = and i16 %738, 56
  %740 = or i16 %737, %739
  %741 = icmp ult i16 %709, 8
  %742 = and i1 %677, %741
  %743 = icmp ult i16 %736, 16
  %744 = and i1 %742, %743
  br i1 %744, label %745, label %749

745:                                              ; preds = %735
  %746 = icmp ult i16 %736, 8
  %747 = or i16 %740, 64
  %748 = select i1 %746, i16 %740, i16 %747
  br label %764

749:                                              ; preds = %735
  %750 = lshr i16 %736, 3
  %751 = lshr i16 %709, 3
  %752 = mul nuw nsw i16 %751, 3
  %753 = add nuw nsw i16 %750, %752
  %754 = zext i16 %753 to i32
  %755 = shl nuw i16 %753, 1
  %756 = zext i16 %755 to i32
  %757 = shl nuw nsw i32 %754, 6
  %758 = add nuw nsw i32 %757, 64
  %759 = lshr i32 5377344, %756
  %760 = and i32 %759, 192
  %761 = add nuw nsw i32 %758, %760
  %762 = trunc i32 %761 to i16
  %763 = or i16 %740, %762
  br label %764

764:                                              ; preds = %745, %749
  %765 = phi i16 [ %748, %745 ], [ %763, %749 ]
  store i16 %765, i16* %678, align 2
  %766 = load i64, i64* %10, align 8
  %767 = add i64 %766, %568
  store i64 %767, i64* %10, align 8
  %768 = add i64 %569, 2
  %769 = add i64 %569, %567
  %770 = icmp ult i64 %769, %24
  %771 = select i1 %770, i64 %769, i64 %24
  %772 = lshr i64 %567, 2
  %773 = icmp ult i64 %566, %772
  br i1 %773, label %774, label %781

774:                                              ; preds = %764
  %775 = shl i64 %566, 2
  %776 = sub i64 %769, %775
  %777 = icmp ugt i64 %768, %776
  %778 = select i1 %777, i64 %768, i64 %776
  %779 = icmp ult i64 %771, %778
  %780 = select i1 %779, i64 %771, i64 %778
  br label %781

781:                                              ; preds = %774, %764
  %782 = phi i64 [ %780, %774 ], [ %768, %764 ]
  %783 = icmp ugt i64 %771, %782
  br i1 %783, label %784, label %888

784:                                              ; preds = %781
  %785 = load i32*, i32** %34, align 8, !alias.scope !76, !noalias !81
  %786 = sub i64 %771, %782
  %787 = and i64 %786, 1
  %788 = icmp eq i64 %787, 0
  br i1 %788, label %802, label %789

789:                                              ; preds = %784
  %790 = and i64 %782, %3
  %791 = getelementptr inbounds i8, i8* %2, i64 %790
  %792 = bitcast i8* %791 to i64*
  %793 = load i64, i64* %792, align 8, !alias.scope !81, !noalias !76
  %794 = mul i64 %793, -4819355556693147648
  %795 = lshr i64 %794, 48
  %796 = trunc i64 %782 to i32
  %797 = and i64 %782, 8
  %798 = add nuw nsw i64 %795, %797
  %799 = and i64 %798, 65535
  %800 = getelementptr inbounds i32, i32* %785, i64 %799
  store i32 %796, i32* %800, align 4, !noalias !84
  %801 = add nuw i64 %782, 1
  br label %802

802:                                              ; preds = %789, %784
  %803 = phi i64 [ %801, %789 ], [ %782, %784 ]
  %804 = add i64 %782, 1
  %805 = icmp eq i64 %771, %804
  br i1 %805, label %888, label %806

806:                                              ; preds = %802, %806
  %807 = phi i64 [ %831, %806 ], [ %803, %802 ]
  %808 = and i64 %807, %3
  %809 = getelementptr inbounds i8, i8* %2, i64 %808
  %810 = bitcast i8* %809 to i64*
  %811 = load i64, i64* %810, align 8, !alias.scope !81, !noalias !76
  %812 = mul i64 %811, -4819355556693147648
  %813 = lshr i64 %812, 48
  %814 = trunc i64 %807 to i32
  %815 = and i64 %807, 8
  %816 = add nuw nsw i64 %813, %815
  %817 = and i64 %816, 65535
  %818 = getelementptr inbounds i32, i32* %785, i64 %817
  store i32 %814, i32* %818, align 4, !noalias !84
  %819 = add nuw i64 %807, 1
  %820 = and i64 %819, %3
  %821 = getelementptr inbounds i8, i8* %2, i64 %820
  %822 = bitcast i8* %821 to i64*
  %823 = load i64, i64* %822, align 8, !alias.scope !81, !noalias !76
  %824 = mul i64 %823, -4819355556693147648
  %825 = lshr i64 %824, 48
  %826 = trunc i64 %819 to i32
  %827 = and i64 %819, 8
  %828 = add nuw nsw i64 %825, %827
  %829 = and i64 %828, 65535
  %830 = getelementptr inbounds i32, i32* %785, i64 %829
  store i32 %826, i32* %830, align 4, !noalias !84
  %831 = add nuw i64 %807, 2
  %832 = icmp eq i64 %831, %771
  br i1 %832, label %888, label %806

833:                                              ; preds = %286
  %834 = add i64 %50, 1
  %835 = add i64 %47, 1
  %836 = icmp ugt i64 %835, %49
  br i1 %836, label %837, label %888

837:                                              ; preds = %833
  %838 = add i64 %49, %39
  %839 = icmp ugt i64 %835, %838
  br i1 %839, label %840, label %864

840:                                              ; preds = %837
  %841 = add i64 %47, 17
  %842 = icmp ult i64 %841, %23
  %843 = select i1 %842, i64 %841, i64 %23
  %844 = icmp ult i64 %835, %843
  br i1 %844, label %845, label %888

845:                                              ; preds = %840
  %846 = load i32*, i32** %34, align 8, !alias.scope !85, !noalias !88
  br label %847

847:                                              ; preds = %845, %847
  %848 = phi i64 [ %835, %845 ], [ %862, %847 ]
  %849 = phi i64 [ %834, %845 ], [ %861, %847 ]
  %850 = and i64 %848, %3
  %851 = getelementptr inbounds i8, i8* %2, i64 %850
  %852 = bitcast i8* %851 to i64*
  %853 = load i64, i64* %852, align 8, !alias.scope !88, !noalias !85
  %854 = mul i64 %853, -4819355556693147648
  %855 = lshr i64 %854, 48
  %856 = trunc i64 %848 to i32
  %857 = and i64 %848, 8
  %858 = add nuw nsw i64 %855, %857
  %859 = and i64 %858, 65535
  %860 = getelementptr inbounds i32, i32* %846, i64 %859
  store i32 %856, i32* %860, align 4, !noalias !90
  %861 = add i64 %849, 4
  %862 = add i64 %848, 4
  %863 = icmp ult i64 %862, %843
  br i1 %863, label %847, label %888

864:                                              ; preds = %837
  %865 = add i64 %47, 9
  %866 = icmp ult i64 %865, %23
  %867 = select i1 %866, i64 %865, i64 %23
  %868 = icmp ult i64 %835, %867
  br i1 %868, label %869, label %888

869:                                              ; preds = %864
  %870 = load i32*, i32** %34, align 8, !alias.scope !91, !noalias !94
  br label %871

871:                                              ; preds = %869, %871
  %872 = phi i64 [ %835, %869 ], [ %886, %871 ]
  %873 = phi i64 [ %834, %869 ], [ %885, %871 ]
  %874 = and i64 %872, %3
  %875 = getelementptr inbounds i8, i8* %2, i64 %874
  %876 = bitcast i8* %875 to i64*
  %877 = load i64, i64* %876, align 8, !alias.scope !94, !noalias !91
  %878 = mul i64 %877, -4819355556693147648
  %879 = lshr i64 %878, 48
  %880 = trunc i64 %872 to i32
  %881 = and i64 %872, 8
  %882 = add nuw nsw i64 %879, %881
  %883 = and i64 %882, 65535
  %884 = getelementptr inbounds i32, i32* %870, i64 %883
  store i32 %880, i32* %884, align 4, !noalias !96
  %885 = add i64 %873, 2
  %886 = add i64 %872, 2
  %887 = icmp ult i64 %886, %867
  br i1 %887, label %871, label %888

888:                                              ; preds = %871, %847, %802, %806, %864, %840, %781, %833
  %889 = phi i64 [ %834, %833 ], [ 0, %781 ], [ %834, %840 ], [ %834, %864 ], [ 0, %806 ], [ 0, %802 ], [ %861, %847 ], [ %885, %871 ]
  %890 = phi i64 [ %49, %833 ], [ %572, %781 ], [ %49, %840 ], [ %49, %864 ], [ %572, %806 ], [ %572, %802 ], [ %49, %847 ], [ %49, %871 ]
  %891 = phi %struct.Command* [ %48, %833 ], [ %626, %781 ], [ %48, %840 ], [ %48, %864 ], [ %626, %806 ], [ %626, %802 ], [ %48, %847 ], [ %48, %871 ]
  %892 = phi i64 [ %835, %833 ], [ %769, %781 ], [ %835, %840 ], [ %835, %864 ], [ %769, %806 ], [ %769, %802 ], [ %862, %847 ], [ %886, %871 ]
  %893 = add i64 %892, 8
  %894 = icmp ult i64 %893, %21
  %895 = sub i64 %21, %892
  br i1 %894, label %45, label %896

896:                                              ; preds = %888, %11
  %897 = phi i64 [ %20, %11 ], [ %889, %888 ]
  %898 = phi %struct.Command* [ %8, %11 ], [ %891, %888 ]
  %899 = phi i64 [ %0, %11 ], [ %895, %888 ]
  %900 = add i64 %899, %897
  store i64 %900, i64* %7, align 8
  %901 = ptrtoint %struct.Command* %898 to i64
  %902 = ptrtoint %struct.Command* %8 to i64
  %903 = sub i64 %901, %902
  %904 = ashr exact i64 %903, 4
  %905 = load i64, i64* %9, align 8
  %906 = add i64 %905, %904
  store i64 %906, i64* %9, align 8
  ret void

907:                                              ; preds = %111
  %908 = getelementptr inbounds i8, i8* %103, i64 1
  %909 = getelementptr inbounds i8, i8* %68, i64 %112
  %910 = load i8, i8* %909, align 1, !alias.scope !59, !noalias !60
  %911 = load i8, i8* %908, align 1, !alias.scope !59, !noalias !60
  %912 = icmp eq i8 %910, %911
  br i1 %912, label %913, label %114, !prof !15

913:                                              ; preds = %907
  %914 = add i64 %102, 2
  %915 = icmp eq i64 %104, 2
  br i1 %915, label %114, label %916

916:                                              ; preds = %913
  %917 = getelementptr inbounds i8, i8* %103, i64 2
  %918 = getelementptr inbounds i8, i8* %68, i64 %914
  %919 = load i8, i8* %918, align 1, !alias.scope !59, !noalias !60
  %920 = load i8, i8* %917, align 1, !alias.scope !59, !noalias !60
  %921 = icmp eq i8 %919, %920
  br i1 %921, label %922, label %114, !prof !15

922:                                              ; preds = %916
  %923 = add i64 %102, 3
  %924 = icmp eq i64 %104, 3
  br i1 %924, label %114, label %925

925:                                              ; preds = %922
  %926 = getelementptr inbounds i8, i8* %103, i64 3
  %927 = getelementptr inbounds i8, i8* %68, i64 %923
  %928 = load i8, i8* %927, align 1, !alias.scope !59, !noalias !60
  %929 = load i8, i8* %926, align 1, !alias.scope !59, !noalias !60
  %930 = icmp eq i8 %928, %929
  br i1 %930, label %931, label %114, !prof !15

931:                                              ; preds = %925
  %932 = add i64 %102, 4
  %933 = icmp eq i64 %104, 4
  br i1 %933, label %114, label %934

934:                                              ; preds = %931
  %935 = getelementptr inbounds i8, i8* %103, i64 4
  %936 = getelementptr inbounds i8, i8* %68, i64 %932
  %937 = load i8, i8* %936, align 1, !alias.scope !59, !noalias !60
  %938 = load i8, i8* %935, align 1, !alias.scope !59, !noalias !60
  %939 = icmp eq i8 %937, %938
  br i1 %939, label %940, label %114, !prof !15

940:                                              ; preds = %934
  %941 = add i64 %102, 5
  %942 = icmp eq i64 %104, 5
  br i1 %942, label %114, label %943

943:                                              ; preds = %940
  %944 = getelementptr inbounds i8, i8* %103, i64 5
  %945 = getelementptr inbounds i8, i8* %68, i64 %941
  %946 = load i8, i8* %945, align 1, !alias.scope !59, !noalias !60
  %947 = load i8, i8* %944, align 1, !alias.scope !59, !noalias !60
  %948 = icmp eq i8 %946, %947
  br i1 %948, label %949, label %114, !prof !15

949:                                              ; preds = %943
  %950 = add i64 %102, 6
  %951 = icmp eq i64 %104, 6
  br i1 %951, label %114, label %952

952:                                              ; preds = %949
  %953 = getelementptr inbounds i8, i8* %103, i64 6
  %954 = getelementptr inbounds i8, i8* %68, i64 %950
  %955 = load i8, i8* %954, align 1, !alias.scope !59, !noalias !60
  %956 = load i8, i8* %953, align 1, !alias.scope !59, !noalias !60
  %957 = icmp eq i8 %955, %956
  %958 = add i64 %102, 7
  %959 = select i1 %957, i64 %958, i64 %950, !prof !15
  br label %114

960:                                              ; preds = %191
  %961 = getelementptr inbounds i8, i8* %185, i64 1
  %962 = getelementptr inbounds i8, i8* %155, i64 %192
  %963 = load i8, i8* %962, align 1, !alias.scope !59, !noalias !60
  %964 = load i8, i8* %961, align 1, !alias.scope !59, !noalias !60
  %965 = icmp eq i8 %963, %964
  br i1 %965, label %966, label %194, !prof !15

966:                                              ; preds = %960
  %967 = add i64 %184, 2
  %968 = icmp eq i64 %139, 2
  br i1 %968, label %194, label %969

969:                                              ; preds = %966
  %970 = getelementptr inbounds i8, i8* %185, i64 2
  %971 = getelementptr inbounds i8, i8* %155, i64 %967
  %972 = load i8, i8* %971, align 1, !alias.scope !59, !noalias !60
  %973 = load i8, i8* %970, align 1, !alias.scope !59, !noalias !60
  %974 = icmp eq i8 %972, %973
  br i1 %974, label %975, label %194, !prof !15

975:                                              ; preds = %969
  %976 = add i64 %184, 3
  %977 = icmp eq i64 %139, 3
  br i1 %977, label %194, label %978

978:                                              ; preds = %975
  %979 = getelementptr inbounds i8, i8* %185, i64 3
  %980 = getelementptr inbounds i8, i8* %155, i64 %976
  %981 = load i8, i8* %980, align 1, !alias.scope !59, !noalias !60
  %982 = load i8, i8* %979, align 1, !alias.scope !59, !noalias !60
  %983 = icmp eq i8 %981, %982
  br i1 %983, label %984, label %194, !prof !15

984:                                              ; preds = %978
  %985 = add i64 %184, 4
  %986 = icmp eq i64 %139, 4
  br i1 %986, label %194, label %987

987:                                              ; preds = %984
  %988 = getelementptr inbounds i8, i8* %185, i64 4
  %989 = getelementptr inbounds i8, i8* %155, i64 %985
  %990 = load i8, i8* %989, align 1, !alias.scope !59, !noalias !60
  %991 = load i8, i8* %988, align 1, !alias.scope !59, !noalias !60
  %992 = icmp eq i8 %990, %991
  br i1 %992, label %993, label %194, !prof !15

993:                                              ; preds = %987
  %994 = add i64 %184, 5
  %995 = icmp eq i64 %139, 5
  br i1 %995, label %194, label %996

996:                                              ; preds = %993
  %997 = getelementptr inbounds i8, i8* %185, i64 5
  %998 = getelementptr inbounds i8, i8* %155, i64 %994
  %999 = load i8, i8* %998, align 1, !alias.scope !59, !noalias !60
  %1000 = load i8, i8* %997, align 1, !alias.scope !59, !noalias !60
  %1001 = icmp eq i8 %999, %1000
  br i1 %1001, label %1002, label %194, !prof !15

1002:                                             ; preds = %996
  %1003 = add i64 %184, 6
  %1004 = icmp eq i64 %139, 6
  br i1 %1004, label %194, label %1005

1005:                                             ; preds = %1002
  %1006 = getelementptr inbounds i8, i8* %185, i64 6
  %1007 = getelementptr inbounds i8, i8* %155, i64 %1003
  %1008 = load i8, i8* %1007, align 1, !alias.scope !59, !noalias !60
  %1009 = load i8, i8* %1006, align 1, !alias.scope !59, !noalias !60
  %1010 = icmp eq i8 %1008, %1009
  %1011 = add i64 %184, 7
  %1012 = select i1 %1010, i64 %1011, i64 %1003, !prof !15
  br label %194

1013:                                             ; preds = %267
  %1014 = getelementptr inbounds i8, i8* %261, i64 1
  %1015 = getelementptr inbounds i8, i8* %231, i64 %268
  %1016 = load i8, i8* %1015, align 1, !alias.scope !59, !noalias !60
  %1017 = load i8, i8* %1014, align 1, !alias.scope !59, !noalias !60
  %1018 = icmp eq i8 %1016, %1017
  br i1 %1018, label %1019, label %270, !prof !15

1019:                                             ; preds = %1013
  %1020 = add i64 %260, 2
  %1021 = icmp eq i64 %139, 2
  br i1 %1021, label %270, label %1022

1022:                                             ; preds = %1019
  %1023 = getelementptr inbounds i8, i8* %261, i64 2
  %1024 = getelementptr inbounds i8, i8* %231, i64 %1020
  %1025 = load i8, i8* %1024, align 1, !alias.scope !59, !noalias !60
  %1026 = load i8, i8* %1023, align 1, !alias.scope !59, !noalias !60
  %1027 = icmp eq i8 %1025, %1026
  br i1 %1027, label %1028, label %270, !prof !15

1028:                                             ; preds = %1022
  %1029 = add i64 %260, 3
  %1030 = icmp eq i64 %139, 3
  br i1 %1030, label %270, label %1031

1031:                                             ; preds = %1028
  %1032 = getelementptr inbounds i8, i8* %261, i64 3
  %1033 = getelementptr inbounds i8, i8* %231, i64 %1029
  %1034 = load i8, i8* %1033, align 1, !alias.scope !59, !noalias !60
  %1035 = load i8, i8* %1032, align 1, !alias.scope !59, !noalias !60
  %1036 = icmp eq i8 %1034, %1035
  br i1 %1036, label %1037, label %270, !prof !15

1037:                                             ; preds = %1031
  %1038 = add i64 %260, 4
  %1039 = icmp eq i64 %139, 4
  br i1 %1039, label %270, label %1040

1040:                                             ; preds = %1037
  %1041 = getelementptr inbounds i8, i8* %261, i64 4
  %1042 = getelementptr inbounds i8, i8* %231, i64 %1038
  %1043 = load i8, i8* %1042, align 1, !alias.scope !59, !noalias !60
  %1044 = load i8, i8* %1041, align 1, !alias.scope !59, !noalias !60
  %1045 = icmp eq i8 %1043, %1044
  br i1 %1045, label %1046, label %270, !prof !15

1046:                                             ; preds = %1040
  %1047 = add i64 %260, 5
  %1048 = icmp eq i64 %139, 5
  br i1 %1048, label %270, label %1049

1049:                                             ; preds = %1046
  %1050 = getelementptr inbounds i8, i8* %261, i64 5
  %1051 = getelementptr inbounds i8, i8* %231, i64 %1047
  %1052 = load i8, i8* %1051, align 1, !alias.scope !59, !noalias !60
  %1053 = load i8, i8* %1050, align 1, !alias.scope !59, !noalias !60
  %1054 = icmp eq i8 %1052, %1053
  br i1 %1054, label %1055, label %270, !prof !15

1055:                                             ; preds = %1049
  %1056 = add i64 %260, 6
  %1057 = icmp eq i64 %139, 6
  br i1 %1057, label %270, label %1058

1058:                                             ; preds = %1055
  %1059 = getelementptr inbounds i8, i8* %261, i64 6
  %1060 = getelementptr inbounds i8, i8* %231, i64 %1056
  %1061 = load i8, i8* %1060, align 1, !alias.scope !59, !noalias !60
  %1062 = load i8, i8* %1059, align 1, !alias.scope !59, !noalias !60
  %1063 = icmp eq i8 %1061, %1062
  %1064 = add i64 %260, 7
  %1065 = select i1 %1063, i64 %1064, i64 %1056, !prof !15
  br label %270

1066:                                             ; preds = %375
  %1067 = getelementptr inbounds i8, i8* %367, i64 1
  %1068 = getelementptr inbounds i8, i8* %335, i64 %376
  %1069 = load i8, i8* %1068, align 1, !alias.scope !71, !noalias !72
  %1070 = load i8, i8* %1067, align 1, !alias.scope !71, !noalias !72
  %1071 = icmp eq i8 %1069, %1070
  br i1 %1071, label %1072, label %378, !prof !15

1072:                                             ; preds = %1066
  %1073 = add i64 %366, 2
  %1074 = icmp eq i64 %368, 2
  br i1 %1074, label %378, label %1075

1075:                                             ; preds = %1072
  %1076 = getelementptr inbounds i8, i8* %367, i64 2
  %1077 = getelementptr inbounds i8, i8* %335, i64 %1073
  %1078 = load i8, i8* %1077, align 1, !alias.scope !71, !noalias !72
  %1079 = load i8, i8* %1076, align 1, !alias.scope !71, !noalias !72
  %1080 = icmp eq i8 %1078, %1079
  br i1 %1080, label %1081, label %378, !prof !15

1081:                                             ; preds = %1075
  %1082 = add i64 %366, 3
  %1083 = icmp eq i64 %368, 3
  br i1 %1083, label %378, label %1084

1084:                                             ; preds = %1081
  %1085 = getelementptr inbounds i8, i8* %367, i64 3
  %1086 = getelementptr inbounds i8, i8* %335, i64 %1082
  %1087 = load i8, i8* %1086, align 1, !alias.scope !71, !noalias !72
  %1088 = load i8, i8* %1085, align 1, !alias.scope !71, !noalias !72
  %1089 = icmp eq i8 %1087, %1088
  br i1 %1089, label %1090, label %378, !prof !15

1090:                                             ; preds = %1084
  %1091 = add i64 %366, 4
  %1092 = icmp eq i64 %368, 4
  br i1 %1092, label %378, label %1093

1093:                                             ; preds = %1090
  %1094 = getelementptr inbounds i8, i8* %367, i64 4
  %1095 = getelementptr inbounds i8, i8* %335, i64 %1091
  %1096 = load i8, i8* %1095, align 1, !alias.scope !71, !noalias !72
  %1097 = load i8, i8* %1094, align 1, !alias.scope !71, !noalias !72
  %1098 = icmp eq i8 %1096, %1097
  br i1 %1098, label %1099, label %378, !prof !15

1099:                                             ; preds = %1093
  %1100 = add i64 %366, 5
  %1101 = icmp eq i64 %368, 5
  br i1 %1101, label %378, label %1102

1102:                                             ; preds = %1099
  %1103 = getelementptr inbounds i8, i8* %367, i64 5
  %1104 = getelementptr inbounds i8, i8* %335, i64 %1100
  %1105 = load i8, i8* %1104, align 1, !alias.scope !71, !noalias !72
  %1106 = load i8, i8* %1103, align 1, !alias.scope !71, !noalias !72
  %1107 = icmp eq i8 %1105, %1106
  br i1 %1107, label %1108, label %378, !prof !15

1108:                                             ; preds = %1102
  %1109 = add i64 %366, 6
  %1110 = icmp eq i64 %368, 6
  br i1 %1110, label %378, label %1111

1111:                                             ; preds = %1108
  %1112 = getelementptr inbounds i8, i8* %367, i64 6
  %1113 = getelementptr inbounds i8, i8* %335, i64 %1109
  %1114 = load i8, i8* %1113, align 1, !alias.scope !71, !noalias !72
  %1115 = load i8, i8* %1112, align 1, !alias.scope !71, !noalias !72
  %1116 = icmp eq i8 %1114, %1115
  %1117 = add i64 %366, 7
  %1118 = select i1 %1116, i64 %1117, i64 %1109, !prof !15
  br label %378

1119:                                             ; preds = %455
  %1120 = getelementptr inbounds i8, i8* %449, i64 1
  %1121 = getelementptr inbounds i8, i8* %419, i64 %456
  %1122 = load i8, i8* %1121, align 1, !alias.scope !71, !noalias !72
  %1123 = load i8, i8* %1120, align 1, !alias.scope !71, !noalias !72
  %1124 = icmp eq i8 %1122, %1123
  br i1 %1124, label %1125, label %458, !prof !15

1125:                                             ; preds = %1119
  %1126 = add i64 %448, 2
  %1127 = icmp eq i64 %403, 2
  br i1 %1127, label %458, label %1128

1128:                                             ; preds = %1125
  %1129 = getelementptr inbounds i8, i8* %449, i64 2
  %1130 = getelementptr inbounds i8, i8* %419, i64 %1126
  %1131 = load i8, i8* %1130, align 1, !alias.scope !71, !noalias !72
  %1132 = load i8, i8* %1129, align 1, !alias.scope !71, !noalias !72
  %1133 = icmp eq i8 %1131, %1132
  br i1 %1133, label %1134, label %458, !prof !15

1134:                                             ; preds = %1128
  %1135 = add i64 %448, 3
  %1136 = icmp eq i64 %403, 3
  br i1 %1136, label %458, label %1137

1137:                                             ; preds = %1134
  %1138 = getelementptr inbounds i8, i8* %449, i64 3
  %1139 = getelementptr inbounds i8, i8* %419, i64 %1135
  %1140 = load i8, i8* %1139, align 1, !alias.scope !71, !noalias !72
  %1141 = load i8, i8* %1138, align 1, !alias.scope !71, !noalias !72
  %1142 = icmp eq i8 %1140, %1141
  br i1 %1142, label %1143, label %458, !prof !15

1143:                                             ; preds = %1137
  %1144 = add i64 %448, 4
  %1145 = icmp eq i64 %403, 4
  br i1 %1145, label %458, label %1146

1146:                                             ; preds = %1143
  %1147 = getelementptr inbounds i8, i8* %449, i64 4
  %1148 = getelementptr inbounds i8, i8* %419, i64 %1144
  %1149 = load i8, i8* %1148, align 1, !alias.scope !71, !noalias !72
  %1150 = load i8, i8* %1147, align 1, !alias.scope !71, !noalias !72
  %1151 = icmp eq i8 %1149, %1150
  br i1 %1151, label %1152, label %458, !prof !15

1152:                                             ; preds = %1146
  %1153 = add i64 %448, 5
  %1154 = icmp eq i64 %403, 5
  br i1 %1154, label %458, label %1155

1155:                                             ; preds = %1152
  %1156 = getelementptr inbounds i8, i8* %449, i64 5
  %1157 = getelementptr inbounds i8, i8* %419, i64 %1153
  %1158 = load i8, i8* %1157, align 1, !alias.scope !71, !noalias !72
  %1159 = load i8, i8* %1156, align 1, !alias.scope !71, !noalias !72
  %1160 = icmp eq i8 %1158, %1159
  br i1 %1160, label %1161, label %458, !prof !15

1161:                                             ; preds = %1155
  %1162 = add i64 %448, 6
  %1163 = icmp eq i64 %403, 6
  br i1 %1163, label %458, label %1164

1164:                                             ; preds = %1161
  %1165 = getelementptr inbounds i8, i8* %449, i64 6
  %1166 = getelementptr inbounds i8, i8* %419, i64 %1162
  %1167 = load i8, i8* %1166, align 1, !alias.scope !71, !noalias !72
  %1168 = load i8, i8* %1165, align 1, !alias.scope !71, !noalias !72
  %1169 = icmp eq i8 %1167, %1168
  %1170 = add i64 %448, 7
  %1171 = select i1 %1169, i64 %1170, i64 %1162, !prof !15
  br label %458

1172:                                             ; preds = %531
  %1173 = getelementptr inbounds i8, i8* %525, i64 1
  %1174 = getelementptr inbounds i8, i8* %495, i64 %532
  %1175 = load i8, i8* %1174, align 1, !alias.scope !71, !noalias !72
  %1176 = load i8, i8* %1173, align 1, !alias.scope !71, !noalias !72
  %1177 = icmp eq i8 %1175, %1176
  br i1 %1177, label %1178, label %534, !prof !15

1178:                                             ; preds = %1172
  %1179 = add i64 %524, 2
  %1180 = icmp eq i64 %403, 2
  br i1 %1180, label %534, label %1181

1181:                                             ; preds = %1178
  %1182 = getelementptr inbounds i8, i8* %525, i64 2
  %1183 = getelementptr inbounds i8, i8* %495, i64 %1179
  %1184 = load i8, i8* %1183, align 1, !alias.scope !71, !noalias !72
  %1185 = load i8, i8* %1182, align 1, !alias.scope !71, !noalias !72
  %1186 = icmp eq i8 %1184, %1185
  br i1 %1186, label %1187, label %534, !prof !15

1187:                                             ; preds = %1181
  %1188 = add i64 %524, 3
  %1189 = icmp eq i64 %403, 3
  br i1 %1189, label %534, label %1190

1190:                                             ; preds = %1187
  %1191 = getelementptr inbounds i8, i8* %525, i64 3
  %1192 = getelementptr inbounds i8, i8* %495, i64 %1188
  %1193 = load i8, i8* %1192, align 1, !alias.scope !71, !noalias !72
  %1194 = load i8, i8* %1191, align 1, !alias.scope !71, !noalias !72
  %1195 = icmp eq i8 %1193, %1194
  br i1 %1195, label %1196, label %534, !prof !15

1196:                                             ; preds = %1190
  %1197 = add i64 %524, 4
  %1198 = icmp eq i64 %403, 4
  br i1 %1198, label %534, label %1199

1199:                                             ; preds = %1196
  %1200 = getelementptr inbounds i8, i8* %525, i64 4
  %1201 = getelementptr inbounds i8, i8* %495, i64 %1197
  %1202 = load i8, i8* %1201, align 1, !alias.scope !71, !noalias !72
  %1203 = load i8, i8* %1200, align 1, !alias.scope !71, !noalias !72
  %1204 = icmp eq i8 %1202, %1203
  br i1 %1204, label %1205, label %534, !prof !15

1205:                                             ; preds = %1199
  %1206 = add i64 %524, 5
  %1207 = icmp eq i64 %403, 5
  br i1 %1207, label %534, label %1208

1208:                                             ; preds = %1205
  %1209 = getelementptr inbounds i8, i8* %525, i64 5
  %1210 = getelementptr inbounds i8, i8* %495, i64 %1206
  %1211 = load i8, i8* %1210, align 1, !alias.scope !71, !noalias !72
  %1212 = load i8, i8* %1209, align 1, !alias.scope !71, !noalias !72
  %1213 = icmp eq i8 %1211, %1212
  br i1 %1213, label %1214, label %534, !prof !15

1214:                                             ; preds = %1208
  %1215 = add i64 %524, 6
  %1216 = icmp eq i64 %403, 6
  br i1 %1216, label %534, label %1217

1217:                                             ; preds = %1214
  %1218 = getelementptr inbounds i8, i8* %525, i64 6
  %1219 = getelementptr inbounds i8, i8* %495, i64 %1215
  %1220 = load i8, i8* %1219, align 1, !alias.scope !71, !noalias !72
  %1221 = load i8, i8* %1218, align 1, !alias.scope !71, !noalias !72
  %1222 = icmp eq i8 %1220, %1221
  %1223 = add i64 %524, 7
  %1224 = select i1 %1222, i64 %1223, i64 %1215, !prof !15
  br label %534
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH4(i64, i64, i8* nocapture readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* nocapture readonly, i32* nocapture, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = alloca [4 x i64], align 16
  %13 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = shl i64 1, %15
  %17 = add i64 %16, -16
  %18 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = load i64, i64* %7, align 8
  %21 = add i64 %1, %0
  %22 = icmp ugt i64 %0, 7
  %23 = add i64 %21, -7
  %24 = select i1 %22, i64 %23, i64 %1
  %25 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 9
  %28 = select i1 %27, i64 64, i64 512
  %29 = add i64 %1, 8
  %30 = icmp ult i64 %29, %21
  br i1 %30, label %31, label %1041

31:                                               ; preds = %11
  %32 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1
  %33 = add i64 %28, %1
  %34 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 4
  %35 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %36 = bitcast i16* %35 to i32**
  %37 = and i64 %3, 4294967295
  %38 = bitcast [4 x i64]* %12 to i8*
  %39 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0
  %40 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 1
  %41 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 3
  %42 = bitcast %union.anon* %32 to %struct.HasherCommon**
  %43 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 5
  %44 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 2
  %45 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 3
  %46 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 0
  %47 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 4
  %48 = shl nuw nsw i64 %28, 2
  %49 = getelementptr inbounds i32, i32* %6, i64 1
  %50 = getelementptr inbounds i32, i32* %6, i64 2
  %51 = getelementptr inbounds i32, i32* %6, i64 3
  %52 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %53 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  %54 = bitcast i64* %40 to <2 x i64>*
  %55 = bitcast i64* %40 to <2 x i64>*
  br label %56

56:                                               ; preds = %31, %1033
  %57 = phi i64 [ %0, %31 ], [ %1040, %1033 ]
  %58 = phi i64 [ %1, %31 ], [ %1037, %1033 ]
  %59 = phi %struct.Command* [ %8, %31 ], [ %1036, %1033 ]
  %60 = phi i64 [ %33, %31 ], [ %1035, %1033 ]
  %61 = phi i64 [ %20, %31 ], [ %1034, %1033 ]
  %62 = icmp ult i64 %58, %17
  %63 = select i1 %62, i64 %58, i64 %17
  %64 = add i64 %58, %19
  %65 = icmp ult i64 %64, %17
  %66 = select i1 %65, i64 %64, i64 %17
  %67 = load i64, i64* %34, align 8
  %68 = load i32*, i32** %36, align 8, !alias.scope !97, !noalias !100
  %69 = and i64 %58, %3
  %70 = getelementptr inbounds i8, i8* %2, i64 %69
  %71 = load i8, i8* %70, align 1, !alias.scope !104, !noalias !105
  %72 = zext i8 %71 to i32
  %73 = bitcast i8* %70 to i64*
  %74 = load i64, i64* %73, align 8, !alias.scope !104, !noalias !105
  %75 = mul i64 %74, -4819355556693147648
  %76 = lshr i64 %75, 47
  %77 = load i32, i32* %6, align 4, !alias.scope !106, !noalias !107
  %78 = sext i32 %77 to i64
  %79 = sub i64 %58, %78
  %80 = icmp ult i64 %79, %58
  br i1 %80, label %81, label %141

81:                                               ; preds = %56
  %82 = and i64 %37, %79
  %83 = getelementptr inbounds i8, i8* %2, i64 %82
  %84 = load i8, i8* %83, align 1, !alias.scope !104, !noalias !105
  %85 = icmp eq i8 %71, %84
  br i1 %85, label %86, label %141

86:                                               ; preds = %81
  %87 = lshr i64 %57, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %116, label %89, !prof !13

89:                                               ; preds = %86
  %90 = bitcast i8* %83 to i64*
  %91 = load i64, i64* %90, align 8, !alias.scope !104, !noalias !105
  %92 = icmp eq i64 %74, %91
  br i1 %92, label %93, label %108, !prof !13

93:                                               ; preds = %89, %101
  %94 = phi i64 [ %98, %101 ], [ 0, %89 ]
  %95 = phi i8* [ %97, %101 ], [ %70, %89 ]
  %96 = phi i64 [ %99, %101 ], [ %87, %89 ]
  %97 = getelementptr inbounds i8, i8* %95, i64 8
  %98 = add nuw i64 %94, 8
  %99 = add nsw i64 %96, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %116, label %101, !prof !13

101:                                              ; preds = %93
  %102 = bitcast i8* %97 to i64*
  %103 = load i64, i64* %102, align 8, !alias.scope !104, !noalias !105
  %104 = getelementptr inbounds i8, i8* %83, i64 %98
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8, !alias.scope !104, !noalias !105
  %107 = icmp eq i64 %103, %106
  br i1 %107, label %93, label %108, !prof !13

108:                                              ; preds = %101, %89
  %109 = phi i64 [ %74, %89 ], [ %103, %101 ]
  %110 = phi i64 [ 0, %89 ], [ %98, %101 ]
  %111 = phi i64 [ %91, %89 ], [ %106, %101 ]
  %112 = xor i64 %111, %109
  %113 = tail call i64 @llvm.cttz.i64(i64 %112, i1 true) #4, !range !14
  %114 = lshr i64 %113, 3
  %115 = or i64 %114, %110
  br label %129

116:                                              ; preds = %93, %86
  %117 = phi i64 [ 0, %86 ], [ %98, %93 ]
  %118 = phi i8* [ %70, %86 ], [ %97, %93 ]
  %119 = and i64 %57, 7
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %129, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds i8, i8* %83, i64 %117
  %123 = load i8, i8* %122, align 1, !alias.scope !104, !noalias !105
  %124 = load i8, i8* %118, align 1, !alias.scope !104, !noalias !105
  %125 = icmp eq i8 %123, %124
  br i1 %125, label %126, label %129, !prof !15

126:                                              ; preds = %121
  %127 = add i64 %117, 1
  %128 = icmp eq i64 %119, 1
  br i1 %128, label %129, label %1052

129:                                              ; preds = %1097, %126, %121, %1052, %1058, %1061, %1067, %1070, %1076, %1079, %1085, %1088, %1094, %116, %108
  %130 = phi i64 [ %115, %108 ], [ %117, %116 ], [ %117, %121 ], [ %127, %126 ], [ %127, %1052 ], [ %1059, %1058 ], [ %1059, %1061 ], [ %1068, %1067 ], [ %1068, %1070 ], [ %1077, %1076 ], [ %1077, %1079 ], [ %1086, %1085 ], [ %1086, %1088 ], [ %1095, %1094 ], [ %1104, %1097 ]
  %131 = icmp ugt i64 %130, 3
  br i1 %131, label %132, label %141

132:                                              ; preds = %129
  %133 = mul i64 %130, 135
  %134 = add i64 %133, 1935
  %135 = icmp ugt i64 %134, 2020
  br i1 %135, label %136, label %141

136:                                              ; preds = %132
  %137 = add i64 %130, %69
  %138 = getelementptr inbounds i8, i8* %2, i64 %137
  %139 = load i8, i8* %138, align 1, !alias.scope !104, !noalias !105
  %140 = zext i8 %139 to i32
  br label %141

141:                                              ; preds = %136, %132, %129, %81, %56
  %142 = phi i64 [ %134, %136 ], [ 2020, %132 ], [ 2020, %129 ], [ 2020, %81 ], [ 2020, %56 ]
  %143 = phi i64 [ %78, %136 ], [ 0, %132 ], [ 0, %129 ], [ 0, %81 ], [ 0, %56 ]
  %144 = phi i64 [ %130, %136 ], [ 0, %132 ], [ 0, %129 ], [ 0, %81 ], [ 0, %56 ]
  %145 = phi i32 [ %140, %136 ], [ %72, %132 ], [ %72, %129 ], [ %72, %81 ], [ %72, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #4, !noalias !108
  store i64 %76, i64* %39, align 16, !noalias !108
  %146 = insertelement <2 x i64> undef, i64 %76, i32 0
  %147 = shufflevector <2 x i64> %146, <2 x i64> undef, <2 x i32> zeroinitializer
  %148 = add nuw nsw <2 x i64> %147, <i64 8, i64 16>
  %149 = and <2 x i64> %148, <i64 131071, i64 131071>
  store <2 x i64> %149, <2 x i64>* %54, align 8, !noalias !108
  %150 = add nuw nsw i64 %76, 24
  %151 = and i64 %150, 131071
  store i64 %151, i64* %41, align 8, !noalias !108
  %152 = lshr i64 %58, 3
  %153 = and i64 %152, 3
  %154 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %153
  %155 = load i64, i64* %154, align 8, !noalias !108
  %156 = lshr i64 %57, 3
  %157 = icmp eq i64 %156, 0
  %158 = and i64 %57, 7
  %159 = icmp eq i64 %158, 0
  %160 = icmp eq i64 %158, 1
  %161 = icmp eq i64 %158, 2
  %162 = icmp eq i64 %158, 3
  %163 = icmp eq i64 %158, 4
  %164 = icmp eq i64 %158, 5
  %165 = icmp eq i64 %158, 6
  br label %166

166:                                              ; preds = %247, %141
  %167 = phi i64 [ %142, %141 ], [ %239, %247 ]
  %168 = phi i64 [ %143, %141 ], [ %240, %247 ]
  %169 = phi i64 [ %144, %141 ], [ %241, %247 ]
  %170 = phi i64 [ %76, %141 ], [ %249, %247 ]
  %171 = phi i64 [ 0, %141 ], [ %245, %247 ]
  %172 = phi i64 [ %144, %141 ], [ %244, %247 ]
  %173 = phi i64 [ %142, %141 ], [ %243, %247 ]
  %174 = phi i32 [ %145, %141 ], [ %242, %247 ]
  %175 = getelementptr inbounds i32, i32* %68, i64 %170
  %176 = load i32, i32* %175, align 4, !noalias !108
  %177 = zext i32 %176 to i64
  %178 = sub i64 %58, %177
  %179 = and i64 %177, %3
  %180 = add i64 %179, %172
  %181 = getelementptr inbounds i8, i8* %2, i64 %180
  %182 = load i8, i8* %181, align 1, !alias.scope !104, !noalias !105
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %174, %183
  %185 = add i64 %178, -1
  %186 = icmp ult i64 %185, %63
  %187 = and i1 %184, %186
  br i1 %187, label %188, label %238, !prof !17

188:                                              ; preds = %166
  %189 = getelementptr inbounds i8, i8* %2, i64 %179
  br i1 %157, label %210, label %190, !prof !13

190:                                              ; preds = %188, %200
  %191 = phi i64 [ %203, %200 ], [ %156, %188 ]
  %192 = phi i8* [ %201, %200 ], [ %70, %188 ]
  %193 = phi i64 [ %202, %200 ], [ 0, %188 ]
  %194 = bitcast i8* %192 to i64*
  %195 = load i64, i64* %194, align 8, !alias.scope !104, !noalias !105
  %196 = getelementptr inbounds i8, i8* %189, i64 %193
  %197 = bitcast i8* %196 to i64*
  %198 = load i64, i64* %197, align 8, !alias.scope !104, !noalias !105
  %199 = icmp eq i64 %195, %198
  br i1 %199, label %200, label %205, !prof !13

200:                                              ; preds = %190
  %201 = getelementptr inbounds i8, i8* %192, i64 8
  %202 = add nuw i64 %193, 8
  %203 = add nsw i64 %191, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %210, label %190, !prof !13

205:                                              ; preds = %190
  %206 = xor i64 %198, %195
  %207 = tail call i64 @llvm.cttz.i64(i64 %206, i1 true) #4, !range !14
  %208 = lshr i64 %207, 3
  %209 = or i64 %208, %193
  br label %220

210:                                              ; preds = %200, %188
  %211 = phi i64 [ 0, %188 ], [ %202, %200 ]
  %212 = phi i8* [ %70, %188 ], [ %201, %200 ]
  br i1 %159, label %220, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds i8, i8* %189, i64 %211
  %215 = load i8, i8* %214, align 1, !alias.scope !104, !noalias !105
  %216 = load i8, i8* %212, align 1, !alias.scope !104, !noalias !105
  %217 = icmp eq i8 %215, %216
  br i1 %217, label %218, label %220, !prof !15

218:                                              ; preds = %213
  %219 = add i64 %211, 1
  br i1 %160, label %220, label %1105

220:                                              ; preds = %1145, %218, %213, %1105, %1111, %1113, %1119, %1121, %1127, %1129, %1135, %1137, %1143, %210, %205
  %221 = phi i64 [ %209, %205 ], [ %211, %210 ], [ %211, %213 ], [ %219, %218 ], [ %219, %1105 ], [ %1112, %1111 ], [ %1112, %1113 ], [ %1120, %1119 ], [ %1120, %1121 ], [ %1128, %1127 ], [ %1128, %1129 ], [ %1136, %1135 ], [ %1136, %1137 ], [ %1144, %1143 ], [ %1152, %1145 ]
  %222 = icmp ugt i64 %221, 3
  br i1 %222, label %223, label %238

223:                                              ; preds = %220
  %224 = mul i64 %221, 135
  %225 = trunc i64 %178 to i32
  %226 = tail call i32 @llvm.ctlz.i32(i32 %225, i1 true) #4, !range !18
  %227 = xor i32 %226, 31
  %228 = mul nsw i32 %227, -30
  %229 = add nsw i32 %228, 1920
  %230 = zext i32 %229 to i64
  %231 = add i64 %224, %230
  %232 = icmp ult i64 %173, %231
  br i1 %232, label %233, label %238

233:                                              ; preds = %223
  %234 = add i64 %221, %69
  %235 = getelementptr inbounds i8, i8* %2, i64 %234
  %236 = load i8, i8* %235, align 1, !alias.scope !104, !noalias !105
  %237 = zext i8 %236 to i32
  br label %238

238:                                              ; preds = %233, %223, %220, %166
  %239 = phi i64 [ %231, %233 ], [ %167, %223 ], [ %167, %220 ], [ %167, %166 ]
  %240 = phi i64 [ %178, %233 ], [ %168, %223 ], [ %168, %220 ], [ %168, %166 ]
  %241 = phi i64 [ %221, %233 ], [ %169, %223 ], [ %169, %220 ], [ %169, %166 ]
  %242 = phi i32 [ %237, %233 ], [ %174, %223 ], [ %174, %220 ], [ %174, %166 ]
  %243 = phi i64 [ %231, %233 ], [ %173, %223 ], [ %173, %220 ], [ %173, %166 ]
  %244 = phi i64 [ %221, %233 ], [ %172, %223 ], [ %172, %220 ], [ %172, %166 ]
  %245 = add nuw nsw i64 %171, 1
  %246 = icmp eq i64 %245, 4
  br i1 %246, label %250, label %247

247:                                              ; preds = %238
  %248 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %245
  %249 = load i64, i64* %248, align 8, !noalias !108
  br label %166

250:                                              ; preds = %238
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #4, !noalias !108
  %251 = icmp eq i64 %243, 2020
  br i1 %251, label %252, label %360

252:                                              ; preds = %250
  %253 = load %struct.HasherCommon*, %struct.HasherCommon** %42, align 8, !alias.scope !97, !noalias !100
  %254 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %253, i64 0, i32 2
  %255 = load i64, i64* %254, align 8, !noalias !108
  %256 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %253, i64 0, i32 1
  %257 = load i64, i64* %256, align 8, !noalias !108
  %258 = lshr i64 %257, 7
  %259 = icmp ult i64 %255, %258
  br i1 %259, label %360, label %260

260:                                              ; preds = %252
  %261 = mul i64 %74, 506832829
  %262 = lshr i64 %261, 17
  %263 = and i64 %262, 32766
  %264 = add i64 %66, 1
  %265 = add i64 %257, 1
  store i64 %265, i64* %256, align 8, !noalias !108
  %266 = load i8*, i8** %43, align 8, !noalias !108
  %267 = getelementptr inbounds i8, i8* %266, i64 %263
  %268 = load i8, i8* %267, align 1, !noalias !108
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %360, label %270

270:                                              ; preds = %260
  %271 = zext i8 %268 to i64
  %272 = load i16*, i16** %47, align 8, !noalias !108
  %273 = getelementptr inbounds i16, i16* %272, i64 %263
  %274 = load i16, i16* %273, align 2, !noalias !108
  %275 = zext i16 %274 to i64
  %276 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %46, align 8, !noalias !108
  %277 = icmp ult i64 %57, %271
  br i1 %277, label %360, label %278

278:                                              ; preds = %270
  %279 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %276, i64 0, i32 1, i64 %271
  %280 = load i32, i32* %279, align 4, !noalias !108
  %281 = zext i32 %280 to i64
  %282 = mul nuw nsw i64 %275, %271
  %283 = add nuw nsw i64 %282, %281
  %284 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %276, i64 0, i32 3
  %285 = load i8*, i8** %284, align 8, !noalias !108
  %286 = getelementptr inbounds i8, i8* %285, i64 %283
  %287 = lshr i64 %271, 3
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %309, label %289, !prof !13

289:                                              ; preds = %278, %299
  %290 = phi i64 [ %302, %299 ], [ %287, %278 ]
  %291 = phi i8* [ %300, %299 ], [ %286, %278 ]
  %292 = phi i64 [ %301, %299 ], [ 0, %278 ]
  %293 = bitcast i8* %291 to i64*
  %294 = load i64, i64* %293, align 8, !noalias !108
  %295 = getelementptr inbounds i8, i8* %70, i64 %292
  %296 = bitcast i8* %295 to i64*
  %297 = load i64, i64* %296, align 8, !alias.scope !104, !noalias !105
  %298 = icmp eq i64 %294, %297
  br i1 %298, label %299, label %304, !prof !13

299:                                              ; preds = %289
  %300 = getelementptr inbounds i8, i8* %291, i64 8
  %301 = add nuw nsw i64 %292, 8
  %302 = add nsw i64 %290, -1
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %309, label %289, !prof !13

304:                                              ; preds = %289
  %305 = xor i64 %297, %294
  %306 = tail call i64 @llvm.cttz.i64(i64 %305, i1 true) #4, !range !14
  %307 = lshr i64 %306, 3
  %308 = or i64 %307, %292
  br label %322

309:                                              ; preds = %299, %278
  %310 = phi i64 [ 0, %278 ], [ %301, %299 ]
  %311 = phi i8* [ %286, %278 ], [ %300, %299 ]
  %312 = and i64 %271, 7
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %322, label %314

314:                                              ; preds = %309
  %315 = getelementptr inbounds i8, i8* %70, i64 %310
  %316 = load i8, i8* %315, align 1, !alias.scope !104, !noalias !105
  %317 = load i8, i8* %311, align 1, !noalias !108
  %318 = icmp eq i8 %316, %317
  br i1 %318, label %319, label %322, !prof !15

319:                                              ; preds = %314
  %320 = add nuw nsw i64 %310, 1
  %321 = icmp eq i64 %312, 1
  br i1 %321, label %322, label %1153

322:                                              ; preds = %1198, %319, %314, %1153, %1159, %1162, %1168, %1171, %1177, %1180, %1186, %1189, %1195, %309, %304
  %323 = phi i64 [ %308, %304 ], [ %310, %309 ], [ %310, %314 ], [ %320, %319 ], [ %320, %1153 ], [ %1160, %1159 ], [ %1160, %1162 ], [ %1169, %1168 ], [ %1169, %1171 ], [ %1178, %1177 ], [ %1178, %1180 ], [ %1187, %1186 ], [ %1187, %1189 ], [ %1196, %1195 ], [ %1205, %1198 ]
  %324 = load i32, i32* %44, align 4, !noalias !108
  %325 = zext i32 %324 to i64
  %326 = add i64 %323, %325
  %327 = icmp ule i64 %326, %271
  %328 = icmp eq i64 %323, 0
  %329 = or i1 %328, %327
  br i1 %329, label %360, label %330

330:                                              ; preds = %322
  %331 = sub i64 %271, %323
  %332 = shl i64 %331, 2
  %333 = load i64, i64* %45, align 8, !noalias !108
  %334 = mul i64 %331, 6
  %335 = lshr i64 %333, %334
  %336 = and i64 %335, 63
  %337 = add i64 %336, %332
  %338 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %276, i64 0, i32 0, i64 %271
  %339 = load i8, i8* %338, align 1, !noalias !108
  %340 = zext i8 %339 to i64
  %341 = shl i64 %337, %340
  %342 = add i64 %264, %275
  %343 = add i64 %342, %341
  %344 = icmp ugt i64 %343, %67
  br i1 %344, label %360, label %345

345:                                              ; preds = %330
  %346 = mul i64 %323, 135
  %347 = add i64 %346, 1920
  %348 = trunc i64 %343 to i32
  %349 = tail call i32 @llvm.ctlz.i32(i32 %348, i1 true) #4, !range !18
  %350 = xor i32 %349, 31
  %351 = mul nuw nsw i32 %350, 30
  %352 = zext i32 %351 to i64
  %353 = sub i64 %347, %352
  %354 = icmp ult i64 %353, 2020
  br i1 %354, label %360, label %355

355:                                              ; preds = %345
  %356 = zext i8 %268 to i32
  %357 = trunc i64 %323 to i32
  %358 = sub nsw i32 %356, %357
  %359 = add i64 %255, 1
  store i64 %359, i64* %254, align 8, !noalias !108
  br label %360

360:                                              ; preds = %250, %252, %260, %270, %322, %330, %345, %355
  %361 = phi i32 [ 0, %252 ], [ 0, %260 ], [ 0, %270 ], [ 0, %322 ], [ 0, %330 ], [ 0, %345 ], [ %358, %355 ], [ 0, %250 ]
  %362 = phi i64 [ %239, %252 ], [ %239, %260 ], [ %239, %270 ], [ %239, %322 ], [ %239, %330 ], [ %239, %345 ], [ %353, %355 ], [ %239, %250 ]
  %363 = phi i64 [ %240, %252 ], [ %240, %260 ], [ %240, %270 ], [ %240, %322 ], [ %240, %330 ], [ %240, %345 ], [ %343, %355 ], [ %240, %250 ]
  %364 = phi i64 [ %241, %252 ], [ %241, %260 ], [ %241, %270 ], [ %241, %322 ], [ %241, %330 ], [ %241, %345 ], [ %323, %355 ], [ %241, %250 ]
  %365 = trunc i64 %58 to i32
  %366 = getelementptr inbounds i32, i32* %68, i64 %155
  store i32 %365, i32* %366, align 4, !noalias !108
  %367 = icmp ugt i64 %362, 2020
  br i1 %367, label %368, label %978

368:                                              ; preds = %360, %700
  %369 = phi i32 [ %690, %700 ], [ %361, %360 ]
  %370 = phi i64 [ %691, %700 ], [ %362, %360 ]
  %371 = phi i64 [ %692, %700 ], [ %363, %360 ]
  %372 = phi i64 [ %693, %700 ], [ %364, %360 ]
  %373 = phi i64 [ %701, %700 ], [ %61, %360 ]
  %374 = phi i64 [ %377, %700 ], [ %57, %360 ]
  %375 = phi i32 [ %702, %700 ], [ 0, %360 ]
  %376 = phi i64 [ %386, %700 ], [ %58, %360 ]
  %377 = add i64 %374, -1
  %378 = load i32, i32* %25, align 4
  %379 = icmp slt i32 %378, 5
  br i1 %379, label %380, label %384

380:                                              ; preds = %368
  %381 = add i64 %372, -1
  %382 = icmp ult i64 %381, %377
  %383 = select i1 %382, i64 %381, i64 %377
  br label %384

384:                                              ; preds = %368, %380
  %385 = phi i64 [ %383, %380 ], [ 0, %368 ]
  %386 = add i64 %376, 1
  %387 = icmp ult i64 %386, %17
  %388 = select i1 %387, i64 %386, i64 %17
  %389 = add i64 %386, %19
  %390 = icmp ult i64 %389, %17
  %391 = select i1 %390, i64 %389, i64 %17
  %392 = load i64, i64* %34, align 8
  %393 = load i32*, i32** %36, align 8, !alias.scope !109, !noalias !112
  %394 = and i64 %386, %3
  %395 = add i64 %385, %394
  %396 = getelementptr inbounds i8, i8* %2, i64 %395
  %397 = load i8, i8* %396, align 1, !alias.scope !116, !noalias !117
  %398 = zext i8 %397 to i32
  %399 = getelementptr inbounds i8, i8* %2, i64 %394
  %400 = bitcast i8* %399 to i64*
  %401 = load i64, i64* %400, align 8, !alias.scope !116, !noalias !117
  %402 = mul i64 %401, -4819355556693147648
  %403 = lshr i64 %402, 47
  %404 = load i32, i32* %6, align 4, !alias.scope !118, !noalias !119
  %405 = sext i32 %404 to i64
  %406 = sub i64 %386, %405
  %407 = icmp ult i64 %406, %386
  br i1 %407, label %408, label %470

408:                                              ; preds = %384
  %409 = and i64 %37, %406
  %410 = add i64 %409, %385
  %411 = getelementptr inbounds i8, i8* %2, i64 %410
  %412 = load i8, i8* %411, align 1, !alias.scope !116, !noalias !117
  %413 = icmp eq i8 %397, %412
  br i1 %413, label %414, label %470

414:                                              ; preds = %408
  %415 = getelementptr inbounds i8, i8* %2, i64 %409
  %416 = lshr i64 %377, 3
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %445, label %418, !prof !13

418:                                              ; preds = %414
  %419 = bitcast i8* %415 to i64*
  %420 = load i64, i64* %419, align 8, !alias.scope !116, !noalias !117
  %421 = icmp eq i64 %401, %420
  br i1 %421, label %422, label %437, !prof !13

422:                                              ; preds = %418, %430
  %423 = phi i64 [ %427, %430 ], [ 0, %418 ]
  %424 = phi i8* [ %426, %430 ], [ %399, %418 ]
  %425 = phi i64 [ %428, %430 ], [ %416, %418 ]
  %426 = getelementptr inbounds i8, i8* %424, i64 8
  %427 = add nuw i64 %423, 8
  %428 = add nsw i64 %425, -1
  %429 = icmp eq i64 %428, 0
  br i1 %429, label %445, label %430, !prof !13

430:                                              ; preds = %422
  %431 = bitcast i8* %426 to i64*
  %432 = load i64, i64* %431, align 8, !alias.scope !116, !noalias !117
  %433 = getelementptr inbounds i8, i8* %415, i64 %427
  %434 = bitcast i8* %433 to i64*
  %435 = load i64, i64* %434, align 8, !alias.scope !116, !noalias !117
  %436 = icmp eq i64 %432, %435
  br i1 %436, label %422, label %437, !prof !13

437:                                              ; preds = %430, %418
  %438 = phi i64 [ %401, %418 ], [ %432, %430 ]
  %439 = phi i64 [ 0, %418 ], [ %427, %430 ]
  %440 = phi i64 [ %420, %418 ], [ %435, %430 ]
  %441 = xor i64 %440, %438
  %442 = tail call i64 @llvm.cttz.i64(i64 %441, i1 true) #4, !range !14
  %443 = lshr i64 %442, 3
  %444 = or i64 %443, %439
  br label %458

445:                                              ; preds = %422, %414
  %446 = phi i64 [ 0, %414 ], [ %427, %422 ]
  %447 = phi i8* [ %399, %414 ], [ %426, %422 ]
  %448 = and i64 %377, 7
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %458, label %450

450:                                              ; preds = %445
  %451 = getelementptr inbounds i8, i8* %415, i64 %446
  %452 = load i8, i8* %451, align 1, !alias.scope !116, !noalias !117
  %453 = load i8, i8* %447, align 1, !alias.scope !116, !noalias !117
  %454 = icmp eq i8 %452, %453
  br i1 %454, label %455, label %458, !prof !15

455:                                              ; preds = %450
  %456 = add i64 %446, 1
  %457 = icmp eq i64 %448, 1
  br i1 %457, label %458, label %1206

458:                                              ; preds = %1251, %455, %450, %1206, %1212, %1215, %1221, %1224, %1230, %1233, %1239, %1242, %1248, %445, %437
  %459 = phi i64 [ %444, %437 ], [ %446, %445 ], [ %446, %450 ], [ %456, %455 ], [ %456, %1206 ], [ %1213, %1212 ], [ %1213, %1215 ], [ %1222, %1221 ], [ %1222, %1224 ], [ %1231, %1230 ], [ %1231, %1233 ], [ %1240, %1239 ], [ %1240, %1242 ], [ %1249, %1248 ], [ %1258, %1251 ]
  %460 = icmp ugt i64 %459, 3
  br i1 %460, label %461, label %470

461:                                              ; preds = %458
  %462 = mul i64 %459, 135
  %463 = add i64 %462, 1935
  %464 = icmp ugt i64 %463, 2020
  br i1 %464, label %465, label %470

465:                                              ; preds = %461
  %466 = add i64 %459, %394
  %467 = getelementptr inbounds i8, i8* %2, i64 %466
  %468 = load i8, i8* %467, align 1, !alias.scope !116, !noalias !117
  %469 = zext i8 %468 to i32
  br label %470

470:                                              ; preds = %465, %461, %458, %408, %384
  %471 = phi i64 [ %463, %465 ], [ 2020, %461 ], [ 2020, %458 ], [ 2020, %408 ], [ 2020, %384 ]
  %472 = phi i64 [ %405, %465 ], [ 0, %461 ], [ 0, %458 ], [ 0, %408 ], [ 0, %384 ]
  %473 = phi i64 [ %459, %465 ], [ %385, %461 ], [ %385, %458 ], [ %385, %408 ], [ %385, %384 ]
  %474 = phi i32 [ %469, %465 ], [ %398, %461 ], [ %398, %458 ], [ %398, %408 ], [ %398, %384 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #4, !noalias !120
  store i64 %403, i64* %39, align 16, !noalias !120
  %475 = insertelement <2 x i64> undef, i64 %403, i32 0
  %476 = shufflevector <2 x i64> %475, <2 x i64> undef, <2 x i32> zeroinitializer
  %477 = add nuw nsw <2 x i64> %476, <i64 8, i64 16>
  %478 = and <2 x i64> %477, <i64 131071, i64 131071>
  store <2 x i64> %478, <2 x i64>* %55, align 8, !noalias !120
  %479 = add nuw nsw i64 %403, 24
  %480 = and i64 %479, 131071
  store i64 %480, i64* %41, align 8, !noalias !120
  %481 = lshr i64 %386, 3
  %482 = and i64 %481, 3
  %483 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %482
  %484 = load i64, i64* %483, align 8, !noalias !120
  %485 = lshr i64 %377, 3
  %486 = icmp eq i64 %485, 0
  %487 = and i64 %377, 7
  %488 = icmp eq i64 %487, 0
  %489 = icmp eq i64 %487, 1
  %490 = icmp eq i64 %487, 2
  %491 = icmp eq i64 %487, 3
  %492 = icmp eq i64 %487, 4
  %493 = icmp eq i64 %487, 5
  %494 = icmp eq i64 %487, 6
  br label %495

495:                                              ; preds = %576, %470
  %496 = phi i64 [ %471, %470 ], [ %568, %576 ]
  %497 = phi i64 [ %472, %470 ], [ %569, %576 ]
  %498 = phi i64 [ %473, %470 ], [ %570, %576 ]
  %499 = phi i64 [ %403, %470 ], [ %578, %576 ]
  %500 = phi i64 [ 0, %470 ], [ %574, %576 ]
  %501 = phi i64 [ %473, %470 ], [ %573, %576 ]
  %502 = phi i64 [ %471, %470 ], [ %572, %576 ]
  %503 = phi i32 [ %474, %470 ], [ %571, %576 ]
  %504 = getelementptr inbounds i32, i32* %393, i64 %499
  %505 = load i32, i32* %504, align 4, !noalias !120
  %506 = zext i32 %505 to i64
  %507 = sub i64 %386, %506
  %508 = and i64 %506, %3
  %509 = add i64 %508, %501
  %510 = getelementptr inbounds i8, i8* %2, i64 %509
  %511 = load i8, i8* %510, align 1, !alias.scope !116, !noalias !117
  %512 = zext i8 %511 to i32
  %513 = icmp eq i32 %503, %512
  %514 = add i64 %507, -1
  %515 = icmp ult i64 %514, %388
  %516 = and i1 %513, %515
  br i1 %516, label %517, label %567, !prof !17

517:                                              ; preds = %495
  %518 = getelementptr inbounds i8, i8* %2, i64 %508
  br i1 %486, label %539, label %519, !prof !13

519:                                              ; preds = %517, %529
  %520 = phi i64 [ %532, %529 ], [ %485, %517 ]
  %521 = phi i8* [ %530, %529 ], [ %399, %517 ]
  %522 = phi i64 [ %531, %529 ], [ 0, %517 ]
  %523 = bitcast i8* %521 to i64*
  %524 = load i64, i64* %523, align 8, !alias.scope !116, !noalias !117
  %525 = getelementptr inbounds i8, i8* %518, i64 %522
  %526 = bitcast i8* %525 to i64*
  %527 = load i64, i64* %526, align 8, !alias.scope !116, !noalias !117
  %528 = icmp eq i64 %524, %527
  br i1 %528, label %529, label %534, !prof !13

529:                                              ; preds = %519
  %530 = getelementptr inbounds i8, i8* %521, i64 8
  %531 = add nuw i64 %522, 8
  %532 = add nsw i64 %520, -1
  %533 = icmp eq i64 %532, 0
  br i1 %533, label %539, label %519, !prof !13

534:                                              ; preds = %519
  %535 = xor i64 %527, %524
  %536 = tail call i64 @llvm.cttz.i64(i64 %535, i1 true) #4, !range !14
  %537 = lshr i64 %536, 3
  %538 = or i64 %537, %522
  br label %549

539:                                              ; preds = %529, %517
  %540 = phi i64 [ 0, %517 ], [ %531, %529 ]
  %541 = phi i8* [ %399, %517 ], [ %530, %529 ]
  br i1 %488, label %549, label %542

542:                                              ; preds = %539
  %543 = getelementptr inbounds i8, i8* %518, i64 %540
  %544 = load i8, i8* %543, align 1, !alias.scope !116, !noalias !117
  %545 = load i8, i8* %541, align 1, !alias.scope !116, !noalias !117
  %546 = icmp eq i8 %544, %545
  br i1 %546, label %547, label %549, !prof !15

547:                                              ; preds = %542
  %548 = add i64 %540, 1
  br i1 %489, label %549, label %1259

549:                                              ; preds = %1299, %547, %542, %1259, %1265, %1267, %1273, %1275, %1281, %1283, %1289, %1291, %1297, %539, %534
  %550 = phi i64 [ %538, %534 ], [ %540, %539 ], [ %540, %542 ], [ %548, %547 ], [ %548, %1259 ], [ %1266, %1265 ], [ %1266, %1267 ], [ %1274, %1273 ], [ %1274, %1275 ], [ %1282, %1281 ], [ %1282, %1283 ], [ %1290, %1289 ], [ %1290, %1291 ], [ %1298, %1297 ], [ %1306, %1299 ]
  %551 = icmp ugt i64 %550, 3
  br i1 %551, label %552, label %567

552:                                              ; preds = %549
  %553 = mul i64 %550, 135
  %554 = trunc i64 %507 to i32
  %555 = tail call i32 @llvm.ctlz.i32(i32 %554, i1 true) #4, !range !18
  %556 = xor i32 %555, 31
  %557 = mul nsw i32 %556, -30
  %558 = add nsw i32 %557, 1920
  %559 = zext i32 %558 to i64
  %560 = add i64 %553, %559
  %561 = icmp ult i64 %502, %560
  br i1 %561, label %562, label %567

562:                                              ; preds = %552
  %563 = add i64 %550, %394
  %564 = getelementptr inbounds i8, i8* %2, i64 %563
  %565 = load i8, i8* %564, align 1, !alias.scope !116, !noalias !117
  %566 = zext i8 %565 to i32
  br label %567

567:                                              ; preds = %562, %552, %549, %495
  %568 = phi i64 [ %560, %562 ], [ %496, %552 ], [ %496, %549 ], [ %496, %495 ]
  %569 = phi i64 [ %507, %562 ], [ %497, %552 ], [ %497, %549 ], [ %497, %495 ]
  %570 = phi i64 [ %550, %562 ], [ %498, %552 ], [ %498, %549 ], [ %498, %495 ]
  %571 = phi i32 [ %566, %562 ], [ %503, %552 ], [ %503, %549 ], [ %503, %495 ]
  %572 = phi i64 [ %560, %562 ], [ %502, %552 ], [ %502, %549 ], [ %502, %495 ]
  %573 = phi i64 [ %550, %562 ], [ %501, %552 ], [ %501, %549 ], [ %501, %495 ]
  %574 = add nuw nsw i64 %500, 1
  %575 = icmp eq i64 %574, 4
  br i1 %575, label %579, label %576

576:                                              ; preds = %567
  %577 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %574
  %578 = load i64, i64* %577, align 8, !noalias !120
  br label %495

579:                                              ; preds = %567
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #4, !noalias !120
  %580 = icmp eq i64 %572, 2020
  br i1 %580, label %581, label %689

581:                                              ; preds = %579
  %582 = load %struct.HasherCommon*, %struct.HasherCommon** %42, align 8, !alias.scope !109, !noalias !112
  %583 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %582, i64 0, i32 2
  %584 = load i64, i64* %583, align 8, !noalias !120
  %585 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %582, i64 0, i32 1
  %586 = load i64, i64* %585, align 8, !noalias !120
  %587 = lshr i64 %586, 7
  %588 = icmp ult i64 %584, %587
  br i1 %588, label %689, label %589

589:                                              ; preds = %581
  %590 = mul i64 %401, 506832829
  %591 = lshr i64 %590, 17
  %592 = and i64 %591, 32766
  %593 = add i64 %391, 1
  %594 = add i64 %586, 1
  store i64 %594, i64* %585, align 8, !noalias !120
  %595 = load i8*, i8** %43, align 8, !noalias !120
  %596 = getelementptr inbounds i8, i8* %595, i64 %592
  %597 = load i8, i8* %596, align 1, !noalias !120
  %598 = icmp eq i8 %597, 0
  br i1 %598, label %689, label %599

599:                                              ; preds = %589
  %600 = zext i8 %597 to i64
  %601 = load i16*, i16** %47, align 8, !noalias !120
  %602 = getelementptr inbounds i16, i16* %601, i64 %592
  %603 = load i16, i16* %602, align 2, !noalias !120
  %604 = zext i16 %603 to i64
  %605 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %46, align 8, !noalias !120
  %606 = icmp ult i64 %377, %600
  br i1 %606, label %689, label %607

607:                                              ; preds = %599
  %608 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %605, i64 0, i32 1, i64 %600
  %609 = load i32, i32* %608, align 4, !noalias !120
  %610 = zext i32 %609 to i64
  %611 = mul nuw nsw i64 %604, %600
  %612 = add nuw nsw i64 %611, %610
  %613 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %605, i64 0, i32 3
  %614 = load i8*, i8** %613, align 8, !noalias !120
  %615 = getelementptr inbounds i8, i8* %614, i64 %612
  %616 = lshr i64 %600, 3
  %617 = icmp eq i64 %616, 0
  br i1 %617, label %638, label %618, !prof !13

618:                                              ; preds = %607, %628
  %619 = phi i64 [ %631, %628 ], [ %616, %607 ]
  %620 = phi i8* [ %629, %628 ], [ %615, %607 ]
  %621 = phi i64 [ %630, %628 ], [ 0, %607 ]
  %622 = bitcast i8* %620 to i64*
  %623 = load i64, i64* %622, align 8, !noalias !120
  %624 = getelementptr inbounds i8, i8* %399, i64 %621
  %625 = bitcast i8* %624 to i64*
  %626 = load i64, i64* %625, align 8, !alias.scope !116, !noalias !117
  %627 = icmp eq i64 %623, %626
  br i1 %627, label %628, label %633, !prof !13

628:                                              ; preds = %618
  %629 = getelementptr inbounds i8, i8* %620, i64 8
  %630 = add nuw nsw i64 %621, 8
  %631 = add nsw i64 %619, -1
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %638, label %618, !prof !13

633:                                              ; preds = %618
  %634 = xor i64 %626, %623
  %635 = tail call i64 @llvm.cttz.i64(i64 %634, i1 true) #4, !range !14
  %636 = lshr i64 %635, 3
  %637 = or i64 %636, %621
  br label %651

638:                                              ; preds = %628, %607
  %639 = phi i64 [ 0, %607 ], [ %630, %628 ]
  %640 = phi i8* [ %615, %607 ], [ %629, %628 ]
  %641 = and i64 %600, 7
  %642 = icmp eq i64 %641, 0
  br i1 %642, label %651, label %643

643:                                              ; preds = %638
  %644 = getelementptr inbounds i8, i8* %399, i64 %639
  %645 = load i8, i8* %644, align 1, !alias.scope !116, !noalias !117
  %646 = load i8, i8* %640, align 1, !noalias !120
  %647 = icmp eq i8 %645, %646
  br i1 %647, label %648, label %651, !prof !15

648:                                              ; preds = %643
  %649 = add nuw nsw i64 %639, 1
  %650 = icmp eq i64 %641, 1
  br i1 %650, label %651, label %1307

651:                                              ; preds = %1352, %648, %643, %1307, %1313, %1316, %1322, %1325, %1331, %1334, %1340, %1343, %1349, %638, %633
  %652 = phi i64 [ %637, %633 ], [ %639, %638 ], [ %639, %643 ], [ %649, %648 ], [ %649, %1307 ], [ %1314, %1313 ], [ %1314, %1316 ], [ %1323, %1322 ], [ %1323, %1325 ], [ %1332, %1331 ], [ %1332, %1334 ], [ %1341, %1340 ], [ %1341, %1343 ], [ %1350, %1349 ], [ %1359, %1352 ]
  %653 = load i32, i32* %44, align 4, !noalias !120
  %654 = zext i32 %653 to i64
  %655 = add i64 %652, %654
  %656 = icmp ule i64 %655, %600
  %657 = icmp eq i64 %652, 0
  %658 = or i1 %657, %656
  br i1 %658, label %689, label %659

659:                                              ; preds = %651
  %660 = sub i64 %600, %652
  %661 = shl i64 %660, 2
  %662 = load i64, i64* %45, align 8, !noalias !120
  %663 = mul i64 %660, 6
  %664 = lshr i64 %662, %663
  %665 = and i64 %664, 63
  %666 = add i64 %665, %661
  %667 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %605, i64 0, i32 0, i64 %600
  %668 = load i8, i8* %667, align 1, !noalias !120
  %669 = zext i8 %668 to i64
  %670 = shl i64 %666, %669
  %671 = add i64 %593, %604
  %672 = add i64 %671, %670
  %673 = icmp ugt i64 %672, %392
  br i1 %673, label %689, label %674

674:                                              ; preds = %659
  %675 = mul i64 %652, 135
  %676 = add i64 %675, 1920
  %677 = trunc i64 %672 to i32
  %678 = tail call i32 @llvm.ctlz.i32(i32 %677, i1 true) #4, !range !18
  %679 = xor i32 %678, 31
  %680 = mul nuw nsw i32 %679, 30
  %681 = zext i32 %680 to i64
  %682 = sub i64 %676, %681
  %683 = icmp ult i64 %682, 2020
  br i1 %683, label %689, label %684

684:                                              ; preds = %674
  %685 = zext i8 %597 to i32
  %686 = trunc i64 %652 to i32
  %687 = sub nsw i32 %685, %686
  %688 = add i64 %584, 1
  store i64 %688, i64* %583, align 8, !noalias !120
  br label %689

689:                                              ; preds = %579, %581, %589, %599, %651, %659, %674, %684
  %690 = phi i32 [ 0, %581 ], [ 0, %589 ], [ 0, %599 ], [ 0, %651 ], [ 0, %659 ], [ 0, %674 ], [ %687, %684 ], [ 0, %579 ]
  %691 = phi i64 [ %568, %581 ], [ %568, %589 ], [ %568, %599 ], [ %568, %651 ], [ %568, %659 ], [ %568, %674 ], [ %682, %684 ], [ %568, %579 ]
  %692 = phi i64 [ %569, %581 ], [ %569, %589 ], [ %569, %599 ], [ %569, %651 ], [ %569, %659 ], [ %569, %674 ], [ %672, %684 ], [ %569, %579 ]
  %693 = phi i64 [ %570, %581 ], [ %570, %589 ], [ %570, %599 ], [ %570, %651 ], [ %570, %659 ], [ %570, %674 ], [ %652, %684 ], [ %570, %579 ]
  %694 = trunc i64 %386 to i32
  %695 = getelementptr inbounds i32, i32* %393, i64 %484
  store i32 %694, i32* %695, align 4, !noalias !120
  %696 = add i64 %370, 175
  %697 = icmp ult i64 %691, %696
  br i1 %697, label %698, label %700

698:                                              ; preds = %689
  %699 = add i64 %376, %19
  br label %707

700:                                              ; preds = %689
  %701 = add i64 %373, 1
  %702 = add nuw nsw i32 %375, 1
  %703 = icmp ult i32 %702, 4
  %704 = add i64 %376, 9
  %705 = icmp ult i64 %704, %21
  %706 = and i1 %703, %705
  br i1 %706, label %368, label %707

707:                                              ; preds = %700, %698
  %708 = phi i64 [ %699, %698 ], [ %389, %700 ]
  %709 = phi i32 [ %369, %698 ], [ %690, %700 ]
  %710 = phi i64 [ %371, %698 ], [ %692, %700 ]
  %711 = phi i64 [ %372, %698 ], [ %693, %700 ]
  %712 = phi i64 [ %373, %698 ], [ %701, %700 ]
  %713 = phi i64 [ %376, %698 ], [ %386, %700 ]
  %714 = shl i64 %711, 1
  %715 = add i64 %714, %28
  %716 = add i64 %715, %713
  %717 = icmp ult i64 %708, %17
  %718 = select i1 %717, i64 %708, i64 %17
  %719 = icmp ugt i64 %710, %718
  br i1 %719, label %755, label %720

720:                                              ; preds = %707
  %721 = add i64 %710, 3
  %722 = load i32, i32* %6, align 4
  %723 = sext i32 %722 to i64
  %724 = sub i64 %721, %723
  %725 = load i32, i32* %49, align 4
  %726 = sext i32 %725 to i64
  %727 = sub i64 %721, %726
  %728 = icmp eq i64 %710, %723
  br i1 %728, label %767, label %729

729:                                              ; preds = %720
  %730 = icmp eq i64 %710, %726
  br i1 %730, label %757, label %731

731:                                              ; preds = %729
  %732 = icmp ult i64 %724, 7
  br i1 %732, label %733, label %739

733:                                              ; preds = %731
  %734 = trunc i64 %724 to i32
  %735 = shl i32 %734, 2
  %736 = lshr i32 158663784, %735
  %737 = and i32 %736, 15
  %738 = zext i32 %737 to i64
  br label %757

739:                                              ; preds = %731
  %740 = icmp ult i64 %727, 7
  br i1 %740, label %741, label %747

741:                                              ; preds = %739
  %742 = trunc i64 %727 to i32
  %743 = shl i32 %742, 2
  %744 = lshr i32 266017486, %743
  %745 = and i32 %744, 15
  %746 = zext i32 %745 to i64
  br label %757

747:                                              ; preds = %739
  %748 = load i32, i32* %50, align 4
  %749 = sext i32 %748 to i64
  %750 = icmp eq i64 %710, %749
  br i1 %750, label %757, label %751

751:                                              ; preds = %747
  %752 = load i32, i32* %51, align 4
  %753 = sext i32 %752 to i64
  %754 = icmp eq i64 %710, %753
  br i1 %754, label %757, label %755

755:                                              ; preds = %751, %707
  %756 = add i64 %710, 15
  br label %757

757:                                              ; preds = %729, %733, %741, %747, %751, %755
  %758 = phi i64 [ %756, %755 ], [ 3, %751 ], [ 2, %747 ], [ 1, %729 ], [ %746, %741 ], [ %738, %733 ]
  %759 = icmp ule i64 %710, %718
  %760 = icmp ne i64 %758, 0
  %761 = and i1 %759, %760
  br i1 %761, label %762, label %767

762:                                              ; preds = %757
  %763 = load i32, i32* %50, align 4
  store i32 %763, i32* %51, align 4
  %764 = load i32, i32* %49, align 4
  store i32 %764, i32* %50, align 4
  %765 = load i32, i32* %6, align 4
  store i32 %765, i32* %49, align 4
  %766 = trunc i64 %710 to i32
  store i32 %766, i32* %6, align 4
  br label %767

767:                                              ; preds = %720, %762, %757
  %768 = phi i64 [ %758, %762 ], [ %758, %757 ], [ 0, %720 ]
  %769 = getelementptr inbounds %struct.Command, %struct.Command* %59, i64 1
  %770 = trunc i64 %712 to i32
  %771 = getelementptr inbounds %struct.Command, %struct.Command* %59, i64 0, i32 0
  store i32 %770, i32* %771, align 4
  %772 = shl i32 %709, 25
  %773 = trunc i64 %711 to i32
  %774 = or i32 %772, %773
  %775 = getelementptr inbounds %struct.Command, %struct.Command* %59, i64 0, i32 1
  store i32 %774, i32* %775, align 4
  %776 = load i32, i32* %52, align 4
  %777 = zext i32 %776 to i64
  %778 = load i32, i32* %53, align 8
  %779 = zext i32 %778 to i64
  %780 = getelementptr inbounds %struct.Command, %struct.Command* %59, i64 0, i32 4
  %781 = getelementptr inbounds %struct.Command, %struct.Command* %59, i64 0, i32 2
  %782 = add nuw nsw i64 %777, 16
  %783 = icmp ugt i64 %782, %768
  br i1 %783, label %784, label %786

784:                                              ; preds = %767
  %785 = trunc i64 %768 to i16
  store i16 %785, i16* %780, align 2
  br label %816

786:                                              ; preds = %767
  %787 = shl i64 4, %779
  %788 = add i64 %768, -16
  %789 = sub i64 %788, %777
  %790 = add i64 %789, %787
  %791 = trunc i64 %790 to i32
  %792 = tail call i32 @llvm.ctlz.i32(i32 %791, i1 true) #4, !range !18
  %793 = sub nsw i32 30, %792
  %794 = zext i32 %793 to i64
  %795 = shl nsw i32 -1, %778
  %796 = xor i32 %795, 65535
  %797 = zext i32 %796 to i64
  %798 = and i64 %790, %797
  %799 = lshr i64 %790, %794
  %800 = and i64 %799, 1
  %801 = or i64 %800, 2
  %802 = shl i64 %801, %794
  %803 = sub nsw i64 %794, %779
  %804 = shl nsw i64 %803, 10
  %805 = shl nsw i64 %803, 1
  %806 = add nsw i64 %805, -2
  %807 = or i64 %806, %800
  %808 = shl i64 %807, %779
  %809 = add nuw nsw i64 %798, %782
  %810 = add i64 %809, %808
  %811 = or i64 %810, %804
  %812 = trunc i64 %811 to i16
  store i16 %812, i16* %780, align 2
  %813 = sub i64 %790, %802
  %814 = lshr i64 %813, %779
  %815 = trunc i64 %814 to i32
  br label %816

816:                                              ; preds = %786, %784
  %817 = phi i16 [ %812, %786 ], [ %785, %784 ]
  %818 = phi i32 [ %815, %786 ], [ 0, %784 ]
  store i32 %818, i32* %781, align 4
  %819 = add nsw i32 %709, %773
  %820 = sext i32 %819 to i64
  %821 = and i16 %817, 1023
  %822 = icmp eq i16 %821, 0
  %823 = getelementptr inbounds %struct.Command, %struct.Command* %59, i64 0, i32 3
  %824 = icmp ult i64 %712, 6
  br i1 %824, label %825, label %827

825:                                              ; preds = %816
  %826 = trunc i64 %712 to i16
  br label %853

827:                                              ; preds = %816
  %828 = icmp ult i64 %712, 130
  br i1 %828, label %829, label %841

829:                                              ; preds = %827
  %830 = add nsw i64 %712, -2
  %831 = trunc i64 %830 to i32
  %832 = tail call i32 @llvm.ctlz.i32(i32 %831, i1 true) #4, !range !18
  %833 = sub nsw i32 30, %832
  %834 = shl nsw i32 %833, 1
  %835 = zext i32 %834 to i64
  %836 = zext i32 %833 to i64
  %837 = lshr i64 %830, %836
  %838 = add nuw nsw i64 %837, %835
  %839 = trunc i64 %838 to i16
  %840 = add i16 %839, 2
  br label %853

841:                                              ; preds = %827
  %842 = icmp ult i64 %712, 2114
  br i1 %842, label %843, label %848

843:                                              ; preds = %841
  %844 = add nsw i32 %770, -66
  %845 = tail call i32 @llvm.ctlz.i32(i32 %844, i1 true) #4, !range !18
  %846 = trunc i32 %845 to i16
  %847 = sub nuw nsw i16 41, %846
  br label %853

848:                                              ; preds = %841
  %849 = icmp ult i64 %712, 6210
  br i1 %849, label %853, label %850

850:                                              ; preds = %848
  %851 = icmp ult i64 %712, 22594
  %852 = select i1 %851, i16 22, i16 23
  br label %853

853:                                              ; preds = %850, %848, %843, %829, %825
  %854 = phi i16 [ %826, %825 ], [ %840, %829 ], [ %847, %843 ], [ 21, %848 ], [ %852, %850 ]
  %855 = icmp ult i32 %819, 10
  br i1 %855, label %856, label %859

856:                                              ; preds = %853
  %857 = trunc i32 %819 to i16
  %858 = add nsw i16 %857, -2
  br label %880

859:                                              ; preds = %853
  %860 = icmp ult i32 %819, 134
  br i1 %860, label %861, label %873

861:                                              ; preds = %859
  %862 = add nsw i64 %820, -6
  %863 = trunc i64 %862 to i32
  %864 = tail call i32 @llvm.ctlz.i32(i32 %863, i1 true) #4, !range !18
  %865 = sub nsw i32 30, %864
  %866 = shl nsw i32 %865, 1
  %867 = zext i32 %866 to i64
  %868 = zext i32 %865 to i64
  %869 = lshr i64 %862, %868
  %870 = add nuw nsw i64 %869, %867
  %871 = trunc i64 %870 to i16
  %872 = add i16 %871, 4
  br label %880

873:                                              ; preds = %859
  %874 = icmp ult i32 %819, 2118
  br i1 %874, label %875, label %880

875:                                              ; preds = %873
  %876 = add nsw i32 %819, -70
  %877 = tail call i32 @llvm.ctlz.i32(i32 %876, i1 true) #4, !range !18
  %878 = trunc i32 %877 to i16
  %879 = sub nuw nsw i16 43, %878
  br label %880

880:                                              ; preds = %875, %873, %861, %856
  %881 = phi i16 [ %858, %856 ], [ %872, %861 ], [ %879, %875 ], [ 23, %873 ]
  %882 = and i16 %881, 7
  %883 = shl i16 %854, 3
  %884 = and i16 %883, 56
  %885 = or i16 %882, %884
  %886 = icmp ult i16 %854, 8
  %887 = and i1 %822, %886
  %888 = icmp ult i16 %881, 16
  %889 = and i1 %887, %888
  br i1 %889, label %890, label %894

890:                                              ; preds = %880
  %891 = icmp ult i16 %881, 8
  %892 = or i16 %885, 64
  %893 = select i1 %891, i16 %885, i16 %892
  br label %909

894:                                              ; preds = %880
  %895 = lshr i16 %881, 3
  %896 = lshr i16 %854, 3
  %897 = mul nuw nsw i16 %896, 3
  %898 = add nuw nsw i16 %895, %897
  %899 = zext i16 %898 to i32
  %900 = shl nuw i16 %898, 1
  %901 = zext i16 %900 to i32
  %902 = shl nuw nsw i32 %899, 6
  %903 = add nuw nsw i32 %902, 64
  %904 = lshr i32 5377344, %901
  %905 = and i32 %904, 192
  %906 = add nuw nsw i32 %903, %905
  %907 = trunc i32 %906 to i16
  %908 = or i16 %885, %907
  br label %909

909:                                              ; preds = %890, %894
  %910 = phi i16 [ %893, %890 ], [ %908, %894 ]
  store i16 %910, i16* %823, align 2
  %911 = load i64, i64* %10, align 8
  %912 = add i64 %911, %712
  store i64 %912, i64* %10, align 8
  %913 = add i64 %713, 2
  %914 = add i64 %713, %711
  %915 = icmp ult i64 %914, %24
  %916 = select i1 %915, i64 %914, i64 %24
  %917 = lshr i64 %711, 2
  %918 = icmp ult i64 %710, %917
  br i1 %918, label %919, label %926

919:                                              ; preds = %909
  %920 = shl i64 %710, 2
  %921 = sub i64 %914, %920
  %922 = icmp ugt i64 %913, %921
  %923 = select i1 %922, i64 %913, i64 %921
  %924 = icmp ult i64 %916, %923
  %925 = select i1 %924, i64 %916, i64 %923
  br label %926

926:                                              ; preds = %919, %909
  %927 = phi i64 [ %925, %919 ], [ %913, %909 ]
  %928 = icmp ugt i64 %916, %927
  br i1 %928, label %929, label %1033

929:                                              ; preds = %926
  %930 = load i32*, i32** %36, align 8, !alias.scope !121, !noalias !126
  %931 = sub i64 %916, %927
  %932 = and i64 %931, 1
  %933 = icmp eq i64 %932, 0
  br i1 %933, label %947, label %934

934:                                              ; preds = %929
  %935 = and i64 %927, %3
  %936 = getelementptr inbounds i8, i8* %2, i64 %935
  %937 = bitcast i8* %936 to i64*
  %938 = load i64, i64* %937, align 8, !alias.scope !126, !noalias !121
  %939 = mul i64 %938, -4819355556693147648
  %940 = lshr i64 %939, 47
  %941 = trunc i64 %927 to i32
  %942 = and i64 %927, 24
  %943 = add nuw nsw i64 %940, %942
  %944 = and i64 %943, 131071
  %945 = getelementptr inbounds i32, i32* %930, i64 %944
  store i32 %941, i32* %945, align 4, !noalias !129
  %946 = add nuw i64 %927, 1
  br label %947

947:                                              ; preds = %934, %929
  %948 = phi i64 [ %946, %934 ], [ %927, %929 ]
  %949 = add i64 %927, 1
  %950 = icmp eq i64 %916, %949
  br i1 %950, label %1033, label %951

951:                                              ; preds = %947, %951
  %952 = phi i64 [ %976, %951 ], [ %948, %947 ]
  %953 = and i64 %952, %3
  %954 = getelementptr inbounds i8, i8* %2, i64 %953
  %955 = bitcast i8* %954 to i64*
  %956 = load i64, i64* %955, align 8, !alias.scope !126, !noalias !121
  %957 = mul i64 %956, -4819355556693147648
  %958 = lshr i64 %957, 47
  %959 = trunc i64 %952 to i32
  %960 = and i64 %952, 24
  %961 = add nuw nsw i64 %958, %960
  %962 = and i64 %961, 131071
  %963 = getelementptr inbounds i32, i32* %930, i64 %962
  store i32 %959, i32* %963, align 4, !noalias !129
  %964 = add nuw i64 %952, 1
  %965 = and i64 %964, %3
  %966 = getelementptr inbounds i8, i8* %2, i64 %965
  %967 = bitcast i8* %966 to i64*
  %968 = load i64, i64* %967, align 8, !alias.scope !126, !noalias !121
  %969 = mul i64 %968, -4819355556693147648
  %970 = lshr i64 %969, 47
  %971 = trunc i64 %964 to i32
  %972 = and i64 %964, 24
  %973 = add nuw nsw i64 %970, %972
  %974 = and i64 %973, 131071
  %975 = getelementptr inbounds i32, i32* %930, i64 %974
  store i32 %971, i32* %975, align 4, !noalias !129
  %976 = add nuw i64 %952, 2
  %977 = icmp eq i64 %976, %916
  br i1 %977, label %1033, label %951

978:                                              ; preds = %360
  %979 = add i64 %61, 1
  %980 = add i64 %58, 1
  %981 = icmp ugt i64 %980, %60
  br i1 %981, label %982, label %1033

982:                                              ; preds = %978
  %983 = add i64 %60, %48
  %984 = icmp ugt i64 %980, %983
  br i1 %984, label %985, label %1009

985:                                              ; preds = %982
  %986 = add i64 %58, 17
  %987 = icmp ult i64 %986, %23
  %988 = select i1 %987, i64 %986, i64 %23
  %989 = icmp ult i64 %980, %988
  br i1 %989, label %990, label %1033

990:                                              ; preds = %985
  %991 = load i32*, i32** %36, align 8, !alias.scope !130, !noalias !133
  br label %992

992:                                              ; preds = %990, %992
  %993 = phi i64 [ %980, %990 ], [ %1007, %992 ]
  %994 = phi i64 [ %979, %990 ], [ %1006, %992 ]
  %995 = and i64 %993, %3
  %996 = getelementptr inbounds i8, i8* %2, i64 %995
  %997 = bitcast i8* %996 to i64*
  %998 = load i64, i64* %997, align 8, !alias.scope !133, !noalias !130
  %999 = mul i64 %998, -4819355556693147648
  %1000 = lshr i64 %999, 47
  %1001 = trunc i64 %993 to i32
  %1002 = and i64 %993, 24
  %1003 = add nuw nsw i64 %1000, %1002
  %1004 = and i64 %1003, 131071
  %1005 = getelementptr inbounds i32, i32* %991, i64 %1004
  store i32 %1001, i32* %1005, align 4, !noalias !135
  %1006 = add i64 %994, 4
  %1007 = add i64 %993, 4
  %1008 = icmp ult i64 %1007, %988
  br i1 %1008, label %992, label %1033

1009:                                             ; preds = %982
  %1010 = add i64 %58, 9
  %1011 = icmp ult i64 %1010, %23
  %1012 = select i1 %1011, i64 %1010, i64 %23
  %1013 = icmp ult i64 %980, %1012
  br i1 %1013, label %1014, label %1033

1014:                                             ; preds = %1009
  %1015 = load i32*, i32** %36, align 8, !alias.scope !136, !noalias !139
  br label %1016

1016:                                             ; preds = %1014, %1016
  %1017 = phi i64 [ %980, %1014 ], [ %1031, %1016 ]
  %1018 = phi i64 [ %979, %1014 ], [ %1030, %1016 ]
  %1019 = and i64 %1017, %3
  %1020 = getelementptr inbounds i8, i8* %2, i64 %1019
  %1021 = bitcast i8* %1020 to i64*
  %1022 = load i64, i64* %1021, align 8, !alias.scope !139, !noalias !136
  %1023 = mul i64 %1022, -4819355556693147648
  %1024 = lshr i64 %1023, 47
  %1025 = trunc i64 %1017 to i32
  %1026 = and i64 %1017, 24
  %1027 = add nuw nsw i64 %1024, %1026
  %1028 = and i64 %1027, 131071
  %1029 = getelementptr inbounds i32, i32* %1015, i64 %1028
  store i32 %1025, i32* %1029, align 4, !noalias !141
  %1030 = add i64 %1018, 2
  %1031 = add i64 %1017, 2
  %1032 = icmp ult i64 %1031, %1012
  br i1 %1032, label %1016, label %1033

1033:                                             ; preds = %1016, %992, %947, %951, %1009, %985, %926, %978
  %1034 = phi i64 [ %979, %978 ], [ 0, %926 ], [ %979, %985 ], [ %979, %1009 ], [ 0, %951 ], [ 0, %947 ], [ %1006, %992 ], [ %1030, %1016 ]
  %1035 = phi i64 [ %60, %978 ], [ %716, %926 ], [ %60, %985 ], [ %60, %1009 ], [ %716, %951 ], [ %716, %947 ], [ %60, %992 ], [ %60, %1016 ]
  %1036 = phi %struct.Command* [ %59, %978 ], [ %769, %926 ], [ %59, %985 ], [ %59, %1009 ], [ %769, %951 ], [ %769, %947 ], [ %59, %992 ], [ %59, %1016 ]
  %1037 = phi i64 [ %980, %978 ], [ %914, %926 ], [ %980, %985 ], [ %980, %1009 ], [ %914, %951 ], [ %914, %947 ], [ %1007, %992 ], [ %1031, %1016 ]
  %1038 = add i64 %1037, 8
  %1039 = icmp ult i64 %1038, %21
  %1040 = sub i64 %21, %1037
  br i1 %1039, label %56, label %1041

1041:                                             ; preds = %1033, %11
  %1042 = phi i64 [ %20, %11 ], [ %1034, %1033 ]
  %1043 = phi %struct.Command* [ %8, %11 ], [ %1036, %1033 ]
  %1044 = phi i64 [ %0, %11 ], [ %1040, %1033 ]
  %1045 = add i64 %1044, %1042
  store i64 %1045, i64* %7, align 8
  %1046 = ptrtoint %struct.Command* %1043 to i64
  %1047 = ptrtoint %struct.Command* %8 to i64
  %1048 = sub i64 %1046, %1047
  %1049 = ashr exact i64 %1048, 4
  %1050 = load i64, i64* %9, align 8
  %1051 = add i64 %1050, %1049
  store i64 %1051, i64* %9, align 8
  ret void

1052:                                             ; preds = %126
  %1053 = getelementptr inbounds i8, i8* %118, i64 1
  %1054 = getelementptr inbounds i8, i8* %83, i64 %127
  %1055 = load i8, i8* %1054, align 1, !alias.scope !104, !noalias !105
  %1056 = load i8, i8* %1053, align 1, !alias.scope !104, !noalias !105
  %1057 = icmp eq i8 %1055, %1056
  br i1 %1057, label %1058, label %129, !prof !15

1058:                                             ; preds = %1052
  %1059 = add i64 %117, 2
  %1060 = icmp eq i64 %119, 2
  br i1 %1060, label %129, label %1061

1061:                                             ; preds = %1058
  %1062 = getelementptr inbounds i8, i8* %118, i64 2
  %1063 = getelementptr inbounds i8, i8* %83, i64 %1059
  %1064 = load i8, i8* %1063, align 1, !alias.scope !104, !noalias !105
  %1065 = load i8, i8* %1062, align 1, !alias.scope !104, !noalias !105
  %1066 = icmp eq i8 %1064, %1065
  br i1 %1066, label %1067, label %129, !prof !15

1067:                                             ; preds = %1061
  %1068 = add i64 %117, 3
  %1069 = icmp eq i64 %119, 3
  br i1 %1069, label %129, label %1070

1070:                                             ; preds = %1067
  %1071 = getelementptr inbounds i8, i8* %118, i64 3
  %1072 = getelementptr inbounds i8, i8* %83, i64 %1068
  %1073 = load i8, i8* %1072, align 1, !alias.scope !104, !noalias !105
  %1074 = load i8, i8* %1071, align 1, !alias.scope !104, !noalias !105
  %1075 = icmp eq i8 %1073, %1074
  br i1 %1075, label %1076, label %129, !prof !15

1076:                                             ; preds = %1070
  %1077 = add i64 %117, 4
  %1078 = icmp eq i64 %119, 4
  br i1 %1078, label %129, label %1079

1079:                                             ; preds = %1076
  %1080 = getelementptr inbounds i8, i8* %118, i64 4
  %1081 = getelementptr inbounds i8, i8* %83, i64 %1077
  %1082 = load i8, i8* %1081, align 1, !alias.scope !104, !noalias !105
  %1083 = load i8, i8* %1080, align 1, !alias.scope !104, !noalias !105
  %1084 = icmp eq i8 %1082, %1083
  br i1 %1084, label %1085, label %129, !prof !15

1085:                                             ; preds = %1079
  %1086 = add i64 %117, 5
  %1087 = icmp eq i64 %119, 5
  br i1 %1087, label %129, label %1088

1088:                                             ; preds = %1085
  %1089 = getelementptr inbounds i8, i8* %118, i64 5
  %1090 = getelementptr inbounds i8, i8* %83, i64 %1086
  %1091 = load i8, i8* %1090, align 1, !alias.scope !104, !noalias !105
  %1092 = load i8, i8* %1089, align 1, !alias.scope !104, !noalias !105
  %1093 = icmp eq i8 %1091, %1092
  br i1 %1093, label %1094, label %129, !prof !15

1094:                                             ; preds = %1088
  %1095 = add i64 %117, 6
  %1096 = icmp eq i64 %119, 6
  br i1 %1096, label %129, label %1097

1097:                                             ; preds = %1094
  %1098 = getelementptr inbounds i8, i8* %118, i64 6
  %1099 = getelementptr inbounds i8, i8* %83, i64 %1095
  %1100 = load i8, i8* %1099, align 1, !alias.scope !104, !noalias !105
  %1101 = load i8, i8* %1098, align 1, !alias.scope !104, !noalias !105
  %1102 = icmp eq i8 %1100, %1101
  %1103 = add i64 %117, 7
  %1104 = select i1 %1102, i64 %1103, i64 %1095, !prof !15
  br label %129

1105:                                             ; preds = %218
  %1106 = getelementptr inbounds i8, i8* %212, i64 1
  %1107 = getelementptr inbounds i8, i8* %189, i64 %219
  %1108 = load i8, i8* %1107, align 1, !alias.scope !104, !noalias !105
  %1109 = load i8, i8* %1106, align 1, !alias.scope !104, !noalias !105
  %1110 = icmp eq i8 %1108, %1109
  br i1 %1110, label %1111, label %220, !prof !15

1111:                                             ; preds = %1105
  %1112 = add i64 %211, 2
  br i1 %161, label %220, label %1113

1113:                                             ; preds = %1111
  %1114 = getelementptr inbounds i8, i8* %212, i64 2
  %1115 = getelementptr inbounds i8, i8* %189, i64 %1112
  %1116 = load i8, i8* %1115, align 1, !alias.scope !104, !noalias !105
  %1117 = load i8, i8* %1114, align 1, !alias.scope !104, !noalias !105
  %1118 = icmp eq i8 %1116, %1117
  br i1 %1118, label %1119, label %220, !prof !15

1119:                                             ; preds = %1113
  %1120 = add i64 %211, 3
  br i1 %162, label %220, label %1121

1121:                                             ; preds = %1119
  %1122 = getelementptr inbounds i8, i8* %212, i64 3
  %1123 = getelementptr inbounds i8, i8* %189, i64 %1120
  %1124 = load i8, i8* %1123, align 1, !alias.scope !104, !noalias !105
  %1125 = load i8, i8* %1122, align 1, !alias.scope !104, !noalias !105
  %1126 = icmp eq i8 %1124, %1125
  br i1 %1126, label %1127, label %220, !prof !15

1127:                                             ; preds = %1121
  %1128 = add i64 %211, 4
  br i1 %163, label %220, label %1129

1129:                                             ; preds = %1127
  %1130 = getelementptr inbounds i8, i8* %212, i64 4
  %1131 = getelementptr inbounds i8, i8* %189, i64 %1128
  %1132 = load i8, i8* %1131, align 1, !alias.scope !104, !noalias !105
  %1133 = load i8, i8* %1130, align 1, !alias.scope !104, !noalias !105
  %1134 = icmp eq i8 %1132, %1133
  br i1 %1134, label %1135, label %220, !prof !15

1135:                                             ; preds = %1129
  %1136 = add i64 %211, 5
  br i1 %164, label %220, label %1137

1137:                                             ; preds = %1135
  %1138 = getelementptr inbounds i8, i8* %212, i64 5
  %1139 = getelementptr inbounds i8, i8* %189, i64 %1136
  %1140 = load i8, i8* %1139, align 1, !alias.scope !104, !noalias !105
  %1141 = load i8, i8* %1138, align 1, !alias.scope !104, !noalias !105
  %1142 = icmp eq i8 %1140, %1141
  br i1 %1142, label %1143, label %220, !prof !15

1143:                                             ; preds = %1137
  %1144 = add i64 %211, 6
  br i1 %165, label %220, label %1145

1145:                                             ; preds = %1143
  %1146 = getelementptr inbounds i8, i8* %212, i64 6
  %1147 = getelementptr inbounds i8, i8* %189, i64 %1144
  %1148 = load i8, i8* %1147, align 1, !alias.scope !104, !noalias !105
  %1149 = load i8, i8* %1146, align 1, !alias.scope !104, !noalias !105
  %1150 = icmp eq i8 %1148, %1149
  %1151 = add i64 %211, 7
  %1152 = select i1 %1150, i64 %1151, i64 %1144, !prof !15
  br label %220

1153:                                             ; preds = %319
  %1154 = getelementptr inbounds i8, i8* %311, i64 1
  %1155 = getelementptr inbounds i8, i8* %70, i64 %320
  %1156 = load i8, i8* %1155, align 1, !alias.scope !104, !noalias !105
  %1157 = load i8, i8* %1154, align 1, !noalias !108
  %1158 = icmp eq i8 %1156, %1157
  br i1 %1158, label %1159, label %322, !prof !15

1159:                                             ; preds = %1153
  %1160 = add nuw nsw i64 %310, 2
  %1161 = icmp eq i64 %312, 2
  br i1 %1161, label %322, label %1162

1162:                                             ; preds = %1159
  %1163 = getelementptr inbounds i8, i8* %311, i64 2
  %1164 = getelementptr inbounds i8, i8* %70, i64 %1160
  %1165 = load i8, i8* %1164, align 1, !alias.scope !104, !noalias !105
  %1166 = load i8, i8* %1163, align 1, !noalias !108
  %1167 = icmp eq i8 %1165, %1166
  br i1 %1167, label %1168, label %322, !prof !15

1168:                                             ; preds = %1162
  %1169 = add nuw nsw i64 %310, 3
  %1170 = icmp eq i64 %312, 3
  br i1 %1170, label %322, label %1171

1171:                                             ; preds = %1168
  %1172 = getelementptr inbounds i8, i8* %311, i64 3
  %1173 = getelementptr inbounds i8, i8* %70, i64 %1169
  %1174 = load i8, i8* %1173, align 1, !alias.scope !104, !noalias !105
  %1175 = load i8, i8* %1172, align 1, !noalias !108
  %1176 = icmp eq i8 %1174, %1175
  br i1 %1176, label %1177, label %322, !prof !15

1177:                                             ; preds = %1171
  %1178 = add nuw nsw i64 %310, 4
  %1179 = icmp eq i64 %312, 4
  br i1 %1179, label %322, label %1180

1180:                                             ; preds = %1177
  %1181 = getelementptr inbounds i8, i8* %311, i64 4
  %1182 = getelementptr inbounds i8, i8* %70, i64 %1178
  %1183 = load i8, i8* %1182, align 1, !alias.scope !104, !noalias !105
  %1184 = load i8, i8* %1181, align 1, !noalias !108
  %1185 = icmp eq i8 %1183, %1184
  br i1 %1185, label %1186, label %322, !prof !15

1186:                                             ; preds = %1180
  %1187 = add nuw nsw i64 %310, 5
  %1188 = icmp eq i64 %312, 5
  br i1 %1188, label %322, label %1189

1189:                                             ; preds = %1186
  %1190 = getelementptr inbounds i8, i8* %311, i64 5
  %1191 = getelementptr inbounds i8, i8* %70, i64 %1187
  %1192 = load i8, i8* %1191, align 1, !alias.scope !104, !noalias !105
  %1193 = load i8, i8* %1190, align 1, !noalias !108
  %1194 = icmp eq i8 %1192, %1193
  br i1 %1194, label %1195, label %322, !prof !15

1195:                                             ; preds = %1189
  %1196 = add nuw nsw i64 %310, 6
  %1197 = icmp eq i64 %312, 6
  br i1 %1197, label %322, label %1198

1198:                                             ; preds = %1195
  %1199 = getelementptr inbounds i8, i8* %311, i64 6
  %1200 = getelementptr inbounds i8, i8* %70, i64 %1196
  %1201 = load i8, i8* %1200, align 1, !alias.scope !104, !noalias !105
  %1202 = load i8, i8* %1199, align 1, !noalias !108
  %1203 = icmp eq i8 %1201, %1202
  %1204 = add nuw nsw i64 %310, 7
  %1205 = select i1 %1203, i64 %1204, i64 %1196, !prof !15
  br label %322

1206:                                             ; preds = %455
  %1207 = getelementptr inbounds i8, i8* %447, i64 1
  %1208 = getelementptr inbounds i8, i8* %415, i64 %456
  %1209 = load i8, i8* %1208, align 1, !alias.scope !116, !noalias !117
  %1210 = load i8, i8* %1207, align 1, !alias.scope !116, !noalias !117
  %1211 = icmp eq i8 %1209, %1210
  br i1 %1211, label %1212, label %458, !prof !15

1212:                                             ; preds = %1206
  %1213 = add i64 %446, 2
  %1214 = icmp eq i64 %448, 2
  br i1 %1214, label %458, label %1215

1215:                                             ; preds = %1212
  %1216 = getelementptr inbounds i8, i8* %447, i64 2
  %1217 = getelementptr inbounds i8, i8* %415, i64 %1213
  %1218 = load i8, i8* %1217, align 1, !alias.scope !116, !noalias !117
  %1219 = load i8, i8* %1216, align 1, !alias.scope !116, !noalias !117
  %1220 = icmp eq i8 %1218, %1219
  br i1 %1220, label %1221, label %458, !prof !15

1221:                                             ; preds = %1215
  %1222 = add i64 %446, 3
  %1223 = icmp eq i64 %448, 3
  br i1 %1223, label %458, label %1224

1224:                                             ; preds = %1221
  %1225 = getelementptr inbounds i8, i8* %447, i64 3
  %1226 = getelementptr inbounds i8, i8* %415, i64 %1222
  %1227 = load i8, i8* %1226, align 1, !alias.scope !116, !noalias !117
  %1228 = load i8, i8* %1225, align 1, !alias.scope !116, !noalias !117
  %1229 = icmp eq i8 %1227, %1228
  br i1 %1229, label %1230, label %458, !prof !15

1230:                                             ; preds = %1224
  %1231 = add i64 %446, 4
  %1232 = icmp eq i64 %448, 4
  br i1 %1232, label %458, label %1233

1233:                                             ; preds = %1230
  %1234 = getelementptr inbounds i8, i8* %447, i64 4
  %1235 = getelementptr inbounds i8, i8* %415, i64 %1231
  %1236 = load i8, i8* %1235, align 1, !alias.scope !116, !noalias !117
  %1237 = load i8, i8* %1234, align 1, !alias.scope !116, !noalias !117
  %1238 = icmp eq i8 %1236, %1237
  br i1 %1238, label %1239, label %458, !prof !15

1239:                                             ; preds = %1233
  %1240 = add i64 %446, 5
  %1241 = icmp eq i64 %448, 5
  br i1 %1241, label %458, label %1242

1242:                                             ; preds = %1239
  %1243 = getelementptr inbounds i8, i8* %447, i64 5
  %1244 = getelementptr inbounds i8, i8* %415, i64 %1240
  %1245 = load i8, i8* %1244, align 1, !alias.scope !116, !noalias !117
  %1246 = load i8, i8* %1243, align 1, !alias.scope !116, !noalias !117
  %1247 = icmp eq i8 %1245, %1246
  br i1 %1247, label %1248, label %458, !prof !15

1248:                                             ; preds = %1242
  %1249 = add i64 %446, 6
  %1250 = icmp eq i64 %448, 6
  br i1 %1250, label %458, label %1251

1251:                                             ; preds = %1248
  %1252 = getelementptr inbounds i8, i8* %447, i64 6
  %1253 = getelementptr inbounds i8, i8* %415, i64 %1249
  %1254 = load i8, i8* %1253, align 1, !alias.scope !116, !noalias !117
  %1255 = load i8, i8* %1252, align 1, !alias.scope !116, !noalias !117
  %1256 = icmp eq i8 %1254, %1255
  %1257 = add i64 %446, 7
  %1258 = select i1 %1256, i64 %1257, i64 %1249, !prof !15
  br label %458

1259:                                             ; preds = %547
  %1260 = getelementptr inbounds i8, i8* %541, i64 1
  %1261 = getelementptr inbounds i8, i8* %518, i64 %548
  %1262 = load i8, i8* %1261, align 1, !alias.scope !116, !noalias !117
  %1263 = load i8, i8* %1260, align 1, !alias.scope !116, !noalias !117
  %1264 = icmp eq i8 %1262, %1263
  br i1 %1264, label %1265, label %549, !prof !15

1265:                                             ; preds = %1259
  %1266 = add i64 %540, 2
  br i1 %490, label %549, label %1267

1267:                                             ; preds = %1265
  %1268 = getelementptr inbounds i8, i8* %541, i64 2
  %1269 = getelementptr inbounds i8, i8* %518, i64 %1266
  %1270 = load i8, i8* %1269, align 1, !alias.scope !116, !noalias !117
  %1271 = load i8, i8* %1268, align 1, !alias.scope !116, !noalias !117
  %1272 = icmp eq i8 %1270, %1271
  br i1 %1272, label %1273, label %549, !prof !15

1273:                                             ; preds = %1267
  %1274 = add i64 %540, 3
  br i1 %491, label %549, label %1275

1275:                                             ; preds = %1273
  %1276 = getelementptr inbounds i8, i8* %541, i64 3
  %1277 = getelementptr inbounds i8, i8* %518, i64 %1274
  %1278 = load i8, i8* %1277, align 1, !alias.scope !116, !noalias !117
  %1279 = load i8, i8* %1276, align 1, !alias.scope !116, !noalias !117
  %1280 = icmp eq i8 %1278, %1279
  br i1 %1280, label %1281, label %549, !prof !15

1281:                                             ; preds = %1275
  %1282 = add i64 %540, 4
  br i1 %492, label %549, label %1283

1283:                                             ; preds = %1281
  %1284 = getelementptr inbounds i8, i8* %541, i64 4
  %1285 = getelementptr inbounds i8, i8* %518, i64 %1282
  %1286 = load i8, i8* %1285, align 1, !alias.scope !116, !noalias !117
  %1287 = load i8, i8* %1284, align 1, !alias.scope !116, !noalias !117
  %1288 = icmp eq i8 %1286, %1287
  br i1 %1288, label %1289, label %549, !prof !15

1289:                                             ; preds = %1283
  %1290 = add i64 %540, 5
  br i1 %493, label %549, label %1291

1291:                                             ; preds = %1289
  %1292 = getelementptr inbounds i8, i8* %541, i64 5
  %1293 = getelementptr inbounds i8, i8* %518, i64 %1290
  %1294 = load i8, i8* %1293, align 1, !alias.scope !116, !noalias !117
  %1295 = load i8, i8* %1292, align 1, !alias.scope !116, !noalias !117
  %1296 = icmp eq i8 %1294, %1295
  br i1 %1296, label %1297, label %549, !prof !15

1297:                                             ; preds = %1291
  %1298 = add i64 %540, 6
  br i1 %494, label %549, label %1299

1299:                                             ; preds = %1297
  %1300 = getelementptr inbounds i8, i8* %541, i64 6
  %1301 = getelementptr inbounds i8, i8* %518, i64 %1298
  %1302 = load i8, i8* %1301, align 1, !alias.scope !116, !noalias !117
  %1303 = load i8, i8* %1300, align 1, !alias.scope !116, !noalias !117
  %1304 = icmp eq i8 %1302, %1303
  %1305 = add i64 %540, 7
  %1306 = select i1 %1304, i64 %1305, i64 %1298, !prof !15
  br label %549

1307:                                             ; preds = %648
  %1308 = getelementptr inbounds i8, i8* %640, i64 1
  %1309 = getelementptr inbounds i8, i8* %399, i64 %649
  %1310 = load i8, i8* %1309, align 1, !alias.scope !116, !noalias !117
  %1311 = load i8, i8* %1308, align 1, !noalias !120
  %1312 = icmp eq i8 %1310, %1311
  br i1 %1312, label %1313, label %651, !prof !15

1313:                                             ; preds = %1307
  %1314 = add nuw nsw i64 %639, 2
  %1315 = icmp eq i64 %641, 2
  br i1 %1315, label %651, label %1316

1316:                                             ; preds = %1313
  %1317 = getelementptr inbounds i8, i8* %640, i64 2
  %1318 = getelementptr inbounds i8, i8* %399, i64 %1314
  %1319 = load i8, i8* %1318, align 1, !alias.scope !116, !noalias !117
  %1320 = load i8, i8* %1317, align 1, !noalias !120
  %1321 = icmp eq i8 %1319, %1320
  br i1 %1321, label %1322, label %651, !prof !15

1322:                                             ; preds = %1316
  %1323 = add nuw nsw i64 %639, 3
  %1324 = icmp eq i64 %641, 3
  br i1 %1324, label %651, label %1325

1325:                                             ; preds = %1322
  %1326 = getelementptr inbounds i8, i8* %640, i64 3
  %1327 = getelementptr inbounds i8, i8* %399, i64 %1323
  %1328 = load i8, i8* %1327, align 1, !alias.scope !116, !noalias !117
  %1329 = load i8, i8* %1326, align 1, !noalias !120
  %1330 = icmp eq i8 %1328, %1329
  br i1 %1330, label %1331, label %651, !prof !15

1331:                                             ; preds = %1325
  %1332 = add nuw nsw i64 %639, 4
  %1333 = icmp eq i64 %641, 4
  br i1 %1333, label %651, label %1334

1334:                                             ; preds = %1331
  %1335 = getelementptr inbounds i8, i8* %640, i64 4
  %1336 = getelementptr inbounds i8, i8* %399, i64 %1332
  %1337 = load i8, i8* %1336, align 1, !alias.scope !116, !noalias !117
  %1338 = load i8, i8* %1335, align 1, !noalias !120
  %1339 = icmp eq i8 %1337, %1338
  br i1 %1339, label %1340, label %651, !prof !15

1340:                                             ; preds = %1334
  %1341 = add nuw nsw i64 %639, 5
  %1342 = icmp eq i64 %641, 5
  br i1 %1342, label %651, label %1343

1343:                                             ; preds = %1340
  %1344 = getelementptr inbounds i8, i8* %640, i64 5
  %1345 = getelementptr inbounds i8, i8* %399, i64 %1341
  %1346 = load i8, i8* %1345, align 1, !alias.scope !116, !noalias !117
  %1347 = load i8, i8* %1344, align 1, !noalias !120
  %1348 = icmp eq i8 %1346, %1347
  br i1 %1348, label %1349, label %651, !prof !15

1349:                                             ; preds = %1343
  %1350 = add nuw nsw i64 %639, 6
  %1351 = icmp eq i64 %641, 6
  br i1 %1351, label %651, label %1352

1352:                                             ; preds = %1349
  %1353 = getelementptr inbounds i8, i8* %640, i64 6
  %1354 = getelementptr inbounds i8, i8* %399, i64 %1350
  %1355 = load i8, i8* %1354, align 1, !alias.scope !116, !noalias !117
  %1356 = load i8, i8* %1353, align 1, !noalias !120
  %1357 = icmp eq i8 %1355, %1356
  %1358 = add nuw nsw i64 %639, 7
  %1359 = select i1 %1357, i64 %1358, i64 %1350, !prof !15
  br label %651
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH5(i64, i64, i8* nocapture readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* readonly, i32*, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = add i64 %15, -16
  %17 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* %7, align 8
  %20 = add i64 %1, %0
  %21 = icmp ugt i64 %0, 3
  %22 = add i64 %20, -3
  %23 = select i1 %21, i64 %22, i64 %1
  %24 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 9
  %27 = select i1 %26, i64 64, i64 512
  %28 = add i64 %27, %1
  %29 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 14
  %30 = bitcast i16* %29 to i32*
  %31 = load i32, i32* %30, align 4, !alias.scope !142, !noalias !145
  %32 = icmp sgt i32 %31, 4
  br i1 %32, label %33, label %57

33:                                               ; preds = %11
  %34 = load i32, i32* %6, align 4, !alias.scope !147, !noalias !142
  %35 = getelementptr inbounds i32, i32* %6, i64 4
  %36 = insertelement <4 x i32> undef, i32 %34, i32 0
  %37 = shufflevector <4 x i32> %36, <4 x i32> undef, <4 x i32> zeroinitializer
  %38 = add nsw <4 x i32> %37, <i32 -1, i32 1, i32 -2, i32 2>
  %39 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> %38, <4 x i32>* %39, align 4, !alias.scope !147, !noalias !142
  %40 = add nsw i32 %34, -3
  %41 = getelementptr inbounds i32, i32* %6, i64 8
  store i32 %40, i32* %41, align 4, !alias.scope !147, !noalias !142
  %42 = add nsw i32 %34, 3
  %43 = getelementptr inbounds i32, i32* %6, i64 9
  store i32 %42, i32* %43, align 4, !alias.scope !147, !noalias !142
  %44 = icmp sgt i32 %31, 10
  br i1 %44, label %45, label %57

45:                                               ; preds = %33
  %46 = getelementptr inbounds i32, i32* %6, i64 1
  %47 = load i32, i32* %46, align 4, !alias.scope !147, !noalias !142
  %48 = getelementptr inbounds i32, i32* %6, i64 10
  %49 = insertelement <4 x i32> undef, i32 %47, i32 0
  %50 = shufflevector <4 x i32> %49, <4 x i32> undef, <4 x i32> zeroinitializer
  %51 = add nsw <4 x i32> %50, <i32 -1, i32 1, i32 -2, i32 2>
  %52 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %52, align 4, !alias.scope !147, !noalias !142
  %53 = add nsw i32 %47, -3
  %54 = getelementptr inbounds i32, i32* %6, i64 14
  store i32 %53, i32* %54, align 4, !alias.scope !147, !noalias !142
  %55 = add nsw i32 %47, 3
  %56 = getelementptr inbounds i32, i32* %6, i64 15
  store i32 %55, i32* %56, align 4, !alias.scope !147, !noalias !142
  br label %57

57:                                               ; preds = %11, %33, %45
  %58 = add i64 %1, 4
  %59 = icmp ult i64 %58, %20
  br i1 %59, label %60, label %1264

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 4
  %62 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 20
  %63 = bitcast i16* %62 to i16**
  %64 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 24
  %65 = bitcast i16* %64 to i32**
  %66 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 8
  %67 = bitcast i16* %66 to i32*
  %68 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 12
  %69 = bitcast i16* %68 to i32*
  %70 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %71 = bitcast i16* %70 to i64*
  %72 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 10
  %73 = bitcast i16* %72 to i32*
  %74 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 16
  %75 = bitcast i16* %74 to %struct.HasherCommon**
  %76 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 5
  %77 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 4
  %78 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 0
  %79 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 2
  %80 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 3
  %81 = shl nuw nsw i64 %27, 2
  %82 = add i64 %20, -4
  %83 = getelementptr inbounds i32, i32* %6, i64 1
  %84 = getelementptr inbounds i32, i32* %6, i64 2
  %85 = getelementptr inbounds i32, i32* %6, i64 3
  %86 = getelementptr inbounds i32, i32* %6, i64 4
  %87 = getelementptr inbounds i32, i32* %6, i64 8
  %88 = getelementptr inbounds i32, i32* %6, i64 9
  %89 = getelementptr inbounds i32, i32* %6, i64 10
  %90 = getelementptr inbounds i32, i32* %6, i64 14
  %91 = getelementptr inbounds i32, i32* %6, i64 15
  %92 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %93 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  %94 = bitcast i32* %86 to <4 x i32>*
  %95 = bitcast i32* %89 to <4 x i32>*
  br label %96

96:                                               ; preds = %60, %1256
  %97 = phi i64 [ %0, %60 ], [ %1263, %1256 ]
  %98 = phi i64 [ %1, %60 ], [ %1260, %1256 ]
  %99 = phi %struct.Command* [ %8, %60 ], [ %1259, %1256 ]
  %100 = phi i64 [ %28, %60 ], [ %1258, %1256 ]
  %101 = phi i64 [ %19, %60 ], [ %1257, %1256 ]
  %102 = icmp ult i64 %98, %16
  %103 = select i1 %102, i64 %98, i64 %16
  %104 = add i64 %98, %18
  %105 = icmp ult i64 %104, %16
  %106 = select i1 %105, i64 %104, i64 %16
  %107 = load i64, i64* %61, align 8
  %108 = load i16*, i16** %63, align 8, !alias.scope !150, !noalias !153
  %109 = load i32*, i32** %65, align 8, !alias.scope !150, !noalias !153
  %110 = and i64 %98, %3
  %111 = load i32, i32* %30, align 4, !alias.scope !150, !noalias !153
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %222, label %113

113:                                              ; preds = %96
  %114 = getelementptr inbounds i8, i8* %2, i64 %110
  %115 = lshr i64 %97, 3
  %116 = icmp eq i64 %115, 0
  %117 = and i64 %97, 7
  %118 = icmp eq i64 %117, 0
  %119 = sext i32 %111 to i64
  %120 = icmp eq i64 %117, 1
  %121 = icmp eq i64 %117, 2
  %122 = icmp eq i64 %117, 3
  %123 = icmp eq i64 %117, 4
  %124 = icmp eq i64 %117, 5
  %125 = icmp eq i64 %117, 6
  br label %126

126:                                              ; preds = %214, %113
  %127 = phi i64 [ 2020, %113 ], [ %215, %214 ]
  %128 = phi i64 [ 0, %113 ], [ %216, %214 ]
  %129 = phi i64 [ 0, %113 ], [ %217, %214 ]
  %130 = phi i64 [ 0, %113 ], [ %220, %214 ]
  %131 = phi i64 [ 0, %113 ], [ %219, %214 ]
  %132 = phi i64 [ 2020, %113 ], [ %218, %214 ]
  %133 = getelementptr inbounds i32, i32* %6, i64 %130
  %134 = load i32, i32* %133, align 4, !alias.scope !157, !noalias !158
  %135 = sext i32 %134 to i64
  %136 = sub i64 %98, %135
  %137 = icmp uge i64 %136, %98
  %138 = icmp ult i64 %103, %135
  %139 = or i1 %138, %137
  br i1 %139, label %214, label %140, !prof !159

140:                                              ; preds = %126
  %141 = and i64 %136, %3
  %142 = add i64 %131, %110
  %143 = icmp ugt i64 %142, %3
  br i1 %143, label %214, label %144

144:                                              ; preds = %140
  %145 = add i64 %141, %131
  %146 = icmp ugt i64 %145, %3
  br i1 %146, label %214, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds i8, i8* %2, i64 %142
  %149 = load i8, i8* %148, align 1, !alias.scope !160, !noalias !161
  %150 = getelementptr inbounds i8, i8* %2, i64 %145
  %151 = load i8, i8* %150, align 1, !alias.scope !160, !noalias !161
  %152 = icmp eq i8 %149, %151
  br i1 %152, label %153, label %214

153:                                              ; preds = %147
  %154 = getelementptr inbounds i8, i8* %2, i64 %141
  br i1 %116, label %175, label %155, !prof !13

155:                                              ; preds = %153, %165
  %156 = phi i64 [ %168, %165 ], [ %115, %153 ]
  %157 = phi i8* [ %166, %165 ], [ %114, %153 ]
  %158 = phi i64 [ %167, %165 ], [ 0, %153 ]
  %159 = bitcast i8* %157 to i64*
  %160 = load i64, i64* %159, align 8, !alias.scope !160, !noalias !161
  %161 = getelementptr inbounds i8, i8* %154, i64 %158
  %162 = bitcast i8* %161 to i64*
  %163 = load i64, i64* %162, align 8, !alias.scope !160, !noalias !161
  %164 = icmp eq i64 %160, %163
  br i1 %164, label %165, label %170, !prof !13

165:                                              ; preds = %155
  %166 = getelementptr inbounds i8, i8* %157, i64 8
  %167 = add nuw i64 %158, 8
  %168 = add nsw i64 %156, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %175, label %155, !prof !13

170:                                              ; preds = %155
  %171 = xor i64 %163, %160
  %172 = tail call i64 @llvm.cttz.i64(i64 %171, i1 true) #4, !range !14
  %173 = lshr i64 %172, 3
  %174 = or i64 %173, %158
  br label %185

175:                                              ; preds = %165, %153
  %176 = phi i64 [ 0, %153 ], [ %167, %165 ]
  %177 = phi i8* [ %114, %153 ], [ %166, %165 ]
  br i1 %118, label %185, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds i8, i8* %154, i64 %176
  %180 = load i8, i8* %179, align 1, !alias.scope !160, !noalias !161
  %181 = load i8, i8* %177, align 1, !alias.scope !160, !noalias !161
  %182 = icmp eq i8 %180, %181
  br i1 %182, label %183, label %185, !prof !15

183:                                              ; preds = %178
  %184 = add i64 %176, 1
  br i1 %120, label %185, label %1275

185:                                              ; preds = %1315, %183, %178, %1275, %1281, %1283, %1289, %1291, %1297, %1299, %1305, %1307, %1313, %175, %170
  %186 = phi i64 [ %174, %170 ], [ %176, %175 ], [ %176, %178 ], [ %184, %183 ], [ %184, %1275 ], [ %1282, %1281 ], [ %1282, %1283 ], [ %1290, %1289 ], [ %1290, %1291 ], [ %1298, %1297 ], [ %1298, %1299 ], [ %1306, %1305 ], [ %1306, %1307 ], [ %1314, %1313 ], [ %1322, %1315 ]
  %187 = icmp ugt i64 %186, 2
  br i1 %187, label %192, label %188

188:                                              ; preds = %185
  %189 = icmp eq i64 %186, 2
  %190 = icmp ult i64 %130, 2
  %191 = and i1 %190, %189
  br i1 %191, label %192, label %214

192:                                              ; preds = %188, %185
  %193 = mul i64 %186, 135
  %194 = add i64 %193, 1935
  %195 = icmp ult i64 %132, %194
  br i1 %195, label %196, label %214

196:                                              ; preds = %192
  %197 = icmp eq i64 %130, 0
  br i1 %197, label %206, label %198

198:                                              ; preds = %196
  %199 = trunc i64 %130 to i32
  %200 = and i32 %199, 14
  %201 = lshr i32 117264, %200
  %202 = and i32 %201, 14
  %203 = add nuw nsw i32 %202, 39
  %204 = zext i32 %203 to i64
  %205 = sub i64 %194, %204
  br label %206

206:                                              ; preds = %198, %196
  %207 = phi i64 [ %205, %198 ], [ %194, %196 ]
  %208 = icmp ult i64 %132, %207
  %209 = select i1 %208, i64 %207, i64 %127
  %210 = select i1 %208, i64 %135, i64 %128
  %211 = select i1 %208, i64 %186, i64 %129
  %212 = select i1 %208, i64 %207, i64 %132
  %213 = select i1 %208, i64 %186, i64 %131
  br label %214

214:                                              ; preds = %206, %192, %188, %147, %144, %140, %126
  %215 = phi i64 [ %127, %126 ], [ %127, %140 ], [ %127, %144 ], [ %127, %192 ], [ %127, %188 ], [ %127, %147 ], [ %209, %206 ]
  %216 = phi i64 [ %128, %126 ], [ %128, %140 ], [ %128, %144 ], [ %128, %192 ], [ %128, %188 ], [ %128, %147 ], [ %210, %206 ]
  %217 = phi i64 [ %129, %126 ], [ %129, %140 ], [ %129, %144 ], [ %129, %192 ], [ %129, %188 ], [ %129, %147 ], [ %211, %206 ]
  %218 = phi i64 [ %132, %126 ], [ %132, %140 ], [ %132, %144 ], [ %132, %192 ], [ %132, %188 ], [ %132, %147 ], [ %212, %206 ]
  %219 = phi i64 [ %131, %126 ], [ %131, %140 ], [ %131, %144 ], [ %131, %192 ], [ %131, %188 ], [ %131, %147 ], [ %213, %206 ]
  %220 = add nuw i64 %130, 1
  %221 = icmp ult i64 %220, %119
  br i1 %221, label %126, label %222

222:                                              ; preds = %214, %96
  %223 = phi i64 [ 2020, %96 ], [ %215, %214 ]
  %224 = phi i64 [ 0, %96 ], [ %216, %214 ]
  %225 = phi i64 [ 0, %96 ], [ %217, %214 ]
  %226 = phi i64 [ 2020, %96 ], [ %218, %214 ]
  %227 = phi i64 [ 0, %96 ], [ %219, %214 ]
  %228 = getelementptr inbounds i8, i8* %2, i64 %110
  %229 = load i32, i32* %67, align 8, !alias.scope !150, !noalias !153
  %230 = bitcast i8* %228 to i32*
  %231 = load i32, i32* %230, align 4, !alias.scope !162, !noalias !161
  %232 = mul i32 %231, 506832829
  %233 = lshr i32 %232, %229
  %234 = load i32, i32* %69, align 8, !alias.scope !150, !noalias !153
  %235 = shl i32 %233, %234
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i32, i32* %109, i64 %236
  %238 = zext i32 %233 to i64
  %239 = getelementptr inbounds i16, i16* %108, i64 %238
  %240 = load i16, i16* %239, align 2, !noalias !165
  %241 = zext i16 %240 to i64
  %242 = load i64, i64* %71, align 8, !alias.scope !150, !noalias !153
  %243 = tail call i64 @llvm.usub.sat.i64(i64 %241, i64 %242) #4
  %244 = icmp ult i64 %243, %241
  br i1 %244, label %247, label %245

245:                                              ; preds = %222
  %246 = load i32, i32* %73, align 4, !alias.scope !150, !noalias !153
  br label %344

247:                                              ; preds = %222
  %248 = lshr i64 %97, 3
  %249 = icmp eq i64 %248, 0
  %250 = and i64 %97, 7
  %251 = icmp eq i64 %250, 0
  %252 = load i32, i32* %73, align 4, !alias.scope !150, !noalias !153
  %253 = zext i32 %252 to i64
  %254 = icmp eq i64 %250, 1
  %255 = icmp eq i64 %250, 2
  %256 = icmp eq i64 %250, 3
  %257 = icmp eq i64 %250, 4
  %258 = icmp eq i64 %250, 5
  %259 = icmp eq i64 %250, 6
  br label %260

260:                                              ; preds = %337, %247
  %261 = phi i64 [ %223, %247 ], [ %338, %337 ]
  %262 = phi i64 [ %224, %247 ], [ %339, %337 ]
  %263 = phi i64 [ %225, %247 ], [ %340, %337 ]
  %264 = phi i64 [ %241, %247 ], [ %267, %337 ]
  %265 = phi i64 [ %227, %247 ], [ %342, %337 ]
  %266 = phi i64 [ %226, %247 ], [ %341, %337 ]
  %267 = add i64 %264, -1
  %268 = and i64 %267, %253
  %269 = getelementptr inbounds i32, i32* %237, i64 %268
  %270 = load i32, i32* %269, align 4, !noalias !165
  %271 = zext i32 %270 to i64
  %272 = sub i64 %98, %271
  %273 = icmp ugt i64 %272, %103
  br i1 %273, label %344, label %274, !prof !13

274:                                              ; preds = %260
  %275 = and i64 %271, %3
  %276 = add i64 %265, %110
  %277 = icmp ugt i64 %276, %3
  br i1 %277, label %337, label %278

278:                                              ; preds = %274
  %279 = add i64 %275, %265
  %280 = icmp ugt i64 %279, %3
  br i1 %280, label %337, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds i8, i8* %2, i64 %276
  %283 = load i8, i8* %282, align 1, !alias.scope !160, !noalias !161
  %284 = getelementptr inbounds i8, i8* %2, i64 %279
  %285 = load i8, i8* %284, align 1, !alias.scope !160, !noalias !161
  %286 = icmp eq i8 %283, %285
  br i1 %286, label %287, label %337

287:                                              ; preds = %281
  %288 = getelementptr inbounds i8, i8* %2, i64 %275
  br i1 %249, label %309, label %289, !prof !13

289:                                              ; preds = %287, %299
  %290 = phi i64 [ %302, %299 ], [ %248, %287 ]
  %291 = phi i8* [ %300, %299 ], [ %228, %287 ]
  %292 = phi i64 [ %301, %299 ], [ 0, %287 ]
  %293 = bitcast i8* %291 to i64*
  %294 = load i64, i64* %293, align 8, !alias.scope !160, !noalias !161
  %295 = getelementptr inbounds i8, i8* %288, i64 %292
  %296 = bitcast i8* %295 to i64*
  %297 = load i64, i64* %296, align 8, !alias.scope !160, !noalias !161
  %298 = icmp eq i64 %294, %297
  br i1 %298, label %299, label %304, !prof !13

299:                                              ; preds = %289
  %300 = getelementptr inbounds i8, i8* %291, i64 8
  %301 = add nuw i64 %292, 8
  %302 = add nsw i64 %290, -1
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %309, label %289, !prof !13

304:                                              ; preds = %289
  %305 = xor i64 %297, %294
  %306 = tail call i64 @llvm.cttz.i64(i64 %305, i1 true) #4, !range !14
  %307 = lshr i64 %306, 3
  %308 = or i64 %307, %292
  br label %319

309:                                              ; preds = %299, %287
  %310 = phi i64 [ 0, %287 ], [ %301, %299 ]
  %311 = phi i8* [ %228, %287 ], [ %300, %299 ]
  br i1 %251, label %319, label %312

312:                                              ; preds = %309
  %313 = getelementptr inbounds i8, i8* %288, i64 %310
  %314 = load i8, i8* %313, align 1, !alias.scope !160, !noalias !161
  %315 = load i8, i8* %311, align 1, !alias.scope !160, !noalias !161
  %316 = icmp eq i8 %314, %315
  br i1 %316, label %317, label %319, !prof !15

317:                                              ; preds = %312
  %318 = add i64 %310, 1
  br i1 %254, label %319, label %1323

319:                                              ; preds = %1363, %317, %312, %1323, %1329, %1331, %1337, %1339, %1345, %1347, %1353, %1355, %1361, %309, %304
  %320 = phi i64 [ %308, %304 ], [ %310, %309 ], [ %310, %312 ], [ %318, %317 ], [ %318, %1323 ], [ %1330, %1329 ], [ %1330, %1331 ], [ %1338, %1337 ], [ %1338, %1339 ], [ %1346, %1345 ], [ %1346, %1347 ], [ %1354, %1353 ], [ %1354, %1355 ], [ %1362, %1361 ], [ %1370, %1363 ]
  %321 = icmp ugt i64 %320, 3
  br i1 %321, label %322, label %337

322:                                              ; preds = %319
  %323 = mul i64 %320, 135
  %324 = trunc i64 %272 to i32
  %325 = tail call i32 @llvm.ctlz.i32(i32 %324, i1 true) #4, !range !18
  %326 = xor i32 %325, 31
  %327 = mul nsw i32 %326, -30
  %328 = add nsw i32 %327, 1920
  %329 = zext i32 %328 to i64
  %330 = add i64 %323, %329
  %331 = icmp ult i64 %266, %330
  %332 = select i1 %331, i64 %330, i64 %261
  %333 = select i1 %331, i64 %272, i64 %262
  %334 = select i1 %331, i64 %320, i64 %263
  %335 = select i1 %331, i64 %330, i64 %266
  %336 = select i1 %331, i64 %320, i64 %265
  br label %337

337:                                              ; preds = %322, %319, %281, %278, %274
  %338 = phi i64 [ %261, %274 ], [ %261, %278 ], [ %261, %319 ], [ %261, %281 ], [ %332, %322 ]
  %339 = phi i64 [ %262, %274 ], [ %262, %278 ], [ %262, %319 ], [ %262, %281 ], [ %333, %322 ]
  %340 = phi i64 [ %263, %274 ], [ %263, %278 ], [ %263, %319 ], [ %263, %281 ], [ %334, %322 ]
  %341 = phi i64 [ %266, %274 ], [ %266, %278 ], [ %266, %319 ], [ %266, %281 ], [ %335, %322 ]
  %342 = phi i64 [ %265, %274 ], [ %265, %278 ], [ %265, %319 ], [ %265, %281 ], [ %336, %322 ]
  %343 = icmp ugt i64 %267, %243
  br i1 %343, label %260, label %344

344:                                              ; preds = %337, %260, %245
  %345 = phi i64 [ %223, %245 ], [ %338, %337 ], [ %261, %260 ]
  %346 = phi i64 [ %224, %245 ], [ %339, %337 ], [ %262, %260 ]
  %347 = phi i64 [ %225, %245 ], [ %340, %337 ], [ %263, %260 ]
  %348 = phi i64 [ %226, %245 ], [ %341, %337 ], [ %266, %260 ]
  %349 = phi i32 [ %246, %245 ], [ %252, %260 ], [ %252, %337 ]
  %350 = trunc i64 %98 to i32
  %351 = zext i16 %240 to i32
  %352 = and i32 %349, %351
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds i32, i32* %237, i64 %353
  store i32 %350, i32* %354, align 4, !noalias !165
  %355 = load i16, i16* %239, align 2, !noalias !165
  %356 = add i16 %355, 1
  store i16 %356, i16* %239, align 2, !noalias !165
  %357 = icmp eq i64 %348, 2020
  br i1 %357, label %358, label %486

358:                                              ; preds = %344
  %359 = load %struct.HasherCommon*, %struct.HasherCommon** %75, align 8, !alias.scope !150, !noalias !153
  %360 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %359, i64 0, i32 2
  %361 = load i64, i64* %360, align 8, !noalias !165
  %362 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %359, i64 0, i32 1
  %363 = load i64, i64* %362, align 8, !noalias !165
  %364 = lshr i64 %363, 7
  %365 = icmp ult i64 %361, %364
  br i1 %365, label %486, label %366

366:                                              ; preds = %358
  %367 = lshr i32 %232, 18
  %368 = shl nuw nsw i32 %367, 1
  %369 = zext i32 %368 to i64
  %370 = add i64 %106, 1
  br label %371

371:                                              ; preds = %476, %366
  %372 = phi i32 [ 0, %366 ], [ %477, %476 ]
  %373 = phi i64 [ %345, %366 ], [ %478, %476 ]
  %374 = phi i64 [ %346, %366 ], [ %479, %476 ]
  %375 = phi i64 [ %347, %366 ], [ %480, %476 ]
  %376 = phi i64 [ %361, %366 ], [ %481, %476 ]
  %377 = phi i64 [ 2020, %366 ], [ %482, %476 ]
  %378 = phi i64 [ %363, %366 ], [ %381, %476 ]
  %379 = phi i64 [ %369, %366 ], [ %484, %476 ]
  %380 = phi i64 [ 0, %366 ], [ %483, %476 ]
  %381 = add i64 %378, 1
  store i64 %381, i64* %362, align 8, !noalias !165
  %382 = load i8*, i8** %76, align 8, !noalias !165
  %383 = getelementptr inbounds i8, i8* %382, i64 %379
  %384 = load i8, i8* %383, align 1, !noalias !165
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %476, label %386

386:                                              ; preds = %371
  %387 = zext i8 %384 to i64
  %388 = load i16*, i16** %77, align 8, !noalias !165
  %389 = getelementptr inbounds i16, i16* %388, i64 %379
  %390 = load i16, i16* %389, align 2, !noalias !165
  %391 = zext i16 %390 to i64
  %392 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %78, align 8, !noalias !165
  %393 = icmp ult i64 %97, %387
  br i1 %393, label %476, label %394

394:                                              ; preds = %386
  %395 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %392, i64 0, i32 1, i64 %387
  %396 = load i32, i32* %395, align 4, !noalias !165
  %397 = zext i32 %396 to i64
  %398 = mul nuw nsw i64 %391, %387
  %399 = add nuw nsw i64 %398, %397
  %400 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %392, i64 0, i32 3
  %401 = load i8*, i8** %400, align 8, !noalias !165
  %402 = getelementptr inbounds i8, i8* %401, i64 %399
  %403 = lshr i64 %387, 3
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %425, label %405, !prof !13

405:                                              ; preds = %394, %415
  %406 = phi i64 [ %418, %415 ], [ %403, %394 ]
  %407 = phi i8* [ %416, %415 ], [ %402, %394 ]
  %408 = phi i64 [ %417, %415 ], [ 0, %394 ]
  %409 = bitcast i8* %407 to i64*
  %410 = load i64, i64* %409, align 8, !noalias !165
  %411 = getelementptr inbounds i8, i8* %228, i64 %408
  %412 = bitcast i8* %411 to i64*
  %413 = load i64, i64* %412, align 8, !alias.scope !160, !noalias !161
  %414 = icmp eq i64 %410, %413
  br i1 %414, label %415, label %420, !prof !13

415:                                              ; preds = %405
  %416 = getelementptr inbounds i8, i8* %407, i64 8
  %417 = add nuw nsw i64 %408, 8
  %418 = add nsw i64 %406, -1
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %425, label %405, !prof !13

420:                                              ; preds = %405
  %421 = xor i64 %413, %410
  %422 = tail call i64 @llvm.cttz.i64(i64 %421, i1 true) #4, !range !14
  %423 = lshr i64 %422, 3
  %424 = or i64 %423, %408
  br label %438

425:                                              ; preds = %415, %394
  %426 = phi i64 [ 0, %394 ], [ %417, %415 ]
  %427 = phi i8* [ %402, %394 ], [ %416, %415 ]
  %428 = and i64 %387, 7
  %429 = icmp eq i64 %428, 0
  br i1 %429, label %438, label %430

430:                                              ; preds = %425
  %431 = getelementptr inbounds i8, i8* %228, i64 %426
  %432 = load i8, i8* %431, align 1, !alias.scope !160, !noalias !161
  %433 = load i8, i8* %427, align 1, !noalias !165
  %434 = icmp eq i8 %432, %433
  br i1 %434, label %435, label %438, !prof !15

435:                                              ; preds = %430
  %436 = add nuw nsw i64 %426, 1
  %437 = icmp eq i64 %428, 1
  br i1 %437, label %438, label %1371

438:                                              ; preds = %1416, %435, %430, %1371, %1377, %1380, %1386, %1389, %1395, %1398, %1404, %1407, %1413, %425, %420
  %439 = phi i64 [ %424, %420 ], [ %426, %425 ], [ %426, %430 ], [ %436, %435 ], [ %436, %1371 ], [ %1378, %1377 ], [ %1378, %1380 ], [ %1387, %1386 ], [ %1387, %1389 ], [ %1396, %1395 ], [ %1396, %1398 ], [ %1405, %1404 ], [ %1405, %1407 ], [ %1414, %1413 ], [ %1423, %1416 ]
  %440 = load i32, i32* %79, align 4, !noalias !165
  %441 = zext i32 %440 to i64
  %442 = add i64 %439, %441
  %443 = icmp ule i64 %442, %387
  %444 = icmp eq i64 %439, 0
  %445 = or i1 %444, %443
  br i1 %445, label %476, label %446

446:                                              ; preds = %438
  %447 = sub i64 %387, %439
  %448 = shl i64 %447, 2
  %449 = load i64, i64* %80, align 8, !noalias !165
  %450 = mul i64 %447, 6
  %451 = lshr i64 %449, %450
  %452 = and i64 %451, 63
  %453 = add i64 %452, %448
  %454 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %392, i64 0, i32 0, i64 %387
  %455 = load i8, i8* %454, align 1, !noalias !165
  %456 = zext i8 %455 to i64
  %457 = shl i64 %453, %456
  %458 = add i64 %370, %391
  %459 = add i64 %458, %457
  %460 = icmp ugt i64 %459, %107
  br i1 %460, label %476, label %461

461:                                              ; preds = %446
  %462 = mul i64 %439, 135
  %463 = add i64 %462, 1920
  %464 = trunc i64 %459 to i32
  %465 = tail call i32 @llvm.ctlz.i32(i32 %464, i1 true) #4, !range !18
  %466 = xor i32 %465, 31
  %467 = mul nuw nsw i32 %466, 30
  %468 = zext i32 %467 to i64
  %469 = sub i64 %463, %468
  %470 = icmp ult i64 %469, %377
  br i1 %470, label %476, label %471

471:                                              ; preds = %461
  %472 = zext i8 %384 to i32
  %473 = trunc i64 %439 to i32
  %474 = sub nsw i32 %472, %473
  %475 = add i64 %376, 1
  store i64 %475, i64* %360, align 8, !noalias !165
  br label %476

476:                                              ; preds = %471, %461, %446, %438, %386, %371
  %477 = phi i32 [ %372, %371 ], [ %372, %386 ], [ %372, %438 ], [ %372, %446 ], [ %372, %461 ], [ %474, %471 ]
  %478 = phi i64 [ %373, %371 ], [ %373, %386 ], [ %373, %438 ], [ %373, %446 ], [ %373, %461 ], [ %469, %471 ]
  %479 = phi i64 [ %374, %371 ], [ %374, %386 ], [ %374, %438 ], [ %374, %446 ], [ %374, %461 ], [ %459, %471 ]
  %480 = phi i64 [ %375, %371 ], [ %375, %386 ], [ %375, %438 ], [ %375, %446 ], [ %375, %461 ], [ %439, %471 ]
  %481 = phi i64 [ %376, %371 ], [ %376, %386 ], [ %376, %438 ], [ %376, %446 ], [ %376, %461 ], [ %475, %471 ]
  %482 = phi i64 [ %377, %371 ], [ %377, %386 ], [ %377, %438 ], [ %377, %446 ], [ %377, %461 ], [ %469, %471 ]
  %483 = add nuw nsw i64 %380, 1
  %484 = add nuw nsw i64 %379, 1
  %485 = icmp eq i64 %483, 2
  br i1 %485, label %486, label %371

486:                                              ; preds = %476, %344, %358
  %487 = phi i32 [ 0, %358 ], [ 0, %344 ], [ %477, %476 ]
  %488 = phi i64 [ %345, %358 ], [ %345, %344 ], [ %478, %476 ]
  %489 = phi i64 [ %346, %358 ], [ %346, %344 ], [ %479, %476 ]
  %490 = phi i64 [ %347, %358 ], [ %347, %344 ], [ %480, %476 ]
  %491 = icmp ugt i64 %488, 2020
  br i1 %491, label %492, label %1177

492:                                              ; preds = %486, %904
  %493 = phi i32 [ %896, %904 ], [ %487, %486 ]
  %494 = phi i64 [ %897, %904 ], [ %488, %486 ]
  %495 = phi i64 [ %898, %904 ], [ %489, %486 ]
  %496 = phi i64 [ %899, %904 ], [ %490, %486 ]
  %497 = phi i64 [ %905, %904 ], [ %101, %486 ]
  %498 = phi i64 [ %501, %904 ], [ %97, %486 ]
  %499 = phi i32 [ %906, %904 ], [ 0, %486 ]
  %500 = phi i64 [ %510, %904 ], [ %98, %486 ]
  %501 = add i64 %498, -1
  %502 = load i32, i32* %24, align 4
  %503 = icmp slt i32 %502, 5
  br i1 %503, label %504, label %508

504:                                              ; preds = %492
  %505 = add i64 %496, -1
  %506 = icmp ult i64 %505, %501
  %507 = select i1 %506, i64 %505, i64 %501
  br label %508

508:                                              ; preds = %492, %504
  %509 = phi i64 [ %507, %504 ], [ 0, %492 ]
  %510 = add i64 %500, 1
  %511 = icmp ult i64 %510, %16
  %512 = select i1 %511, i64 %510, i64 %16
  %513 = add i64 %510, %18
  %514 = icmp ult i64 %513, %16
  %515 = select i1 %514, i64 %513, i64 %16
  %516 = load i64, i64* %61, align 8
  %517 = load i16*, i16** %63, align 8, !alias.scope !166, !noalias !169
  %518 = load i32*, i32** %65, align 8, !alias.scope !166, !noalias !169
  %519 = and i64 %510, %3
  %520 = load i32, i32* %30, align 4, !alias.scope !166, !noalias !169
  %521 = icmp eq i32 %520, 0
  br i1 %521, label %631, label %522

522:                                              ; preds = %508
  %523 = getelementptr inbounds i8, i8* %2, i64 %519
  %524 = lshr i64 %501, 3
  %525 = icmp eq i64 %524, 0
  %526 = and i64 %501, 7
  %527 = icmp eq i64 %526, 0
  %528 = sext i32 %520 to i64
  %529 = icmp eq i64 %526, 1
  %530 = icmp eq i64 %526, 2
  %531 = icmp eq i64 %526, 3
  %532 = icmp eq i64 %526, 4
  %533 = icmp eq i64 %526, 5
  %534 = icmp eq i64 %526, 6
  br label %535

535:                                              ; preds = %623, %522
  %536 = phi i64 [ 2020, %522 ], [ %624, %623 ]
  %537 = phi i64 [ 0, %522 ], [ %625, %623 ]
  %538 = phi i64 [ 0, %522 ], [ %626, %623 ]
  %539 = phi i64 [ 0, %522 ], [ %629, %623 ]
  %540 = phi i64 [ %509, %522 ], [ %628, %623 ]
  %541 = phi i64 [ 2020, %522 ], [ %627, %623 ]
  %542 = getelementptr inbounds i32, i32* %6, i64 %539
  %543 = load i32, i32* %542, align 4, !alias.scope !173, !noalias !174
  %544 = sext i32 %543 to i64
  %545 = sub i64 %510, %544
  %546 = icmp uge i64 %545, %510
  %547 = icmp ult i64 %512, %544
  %548 = or i1 %547, %546
  br i1 %548, label %623, label %549, !prof !159

549:                                              ; preds = %535
  %550 = and i64 %545, %3
  %551 = add i64 %540, %519
  %552 = icmp ugt i64 %551, %3
  br i1 %552, label %623, label %553

553:                                              ; preds = %549
  %554 = add i64 %550, %540
  %555 = icmp ugt i64 %554, %3
  br i1 %555, label %623, label %556

556:                                              ; preds = %553
  %557 = getelementptr inbounds i8, i8* %2, i64 %551
  %558 = load i8, i8* %557, align 1, !alias.scope !175, !noalias !176
  %559 = getelementptr inbounds i8, i8* %2, i64 %554
  %560 = load i8, i8* %559, align 1, !alias.scope !175, !noalias !176
  %561 = icmp eq i8 %558, %560
  br i1 %561, label %562, label %623

562:                                              ; preds = %556
  %563 = getelementptr inbounds i8, i8* %2, i64 %550
  br i1 %525, label %584, label %564, !prof !13

564:                                              ; preds = %562, %574
  %565 = phi i64 [ %577, %574 ], [ %524, %562 ]
  %566 = phi i8* [ %575, %574 ], [ %523, %562 ]
  %567 = phi i64 [ %576, %574 ], [ 0, %562 ]
  %568 = bitcast i8* %566 to i64*
  %569 = load i64, i64* %568, align 8, !alias.scope !175, !noalias !176
  %570 = getelementptr inbounds i8, i8* %563, i64 %567
  %571 = bitcast i8* %570 to i64*
  %572 = load i64, i64* %571, align 8, !alias.scope !175, !noalias !176
  %573 = icmp eq i64 %569, %572
  br i1 %573, label %574, label %579, !prof !13

574:                                              ; preds = %564
  %575 = getelementptr inbounds i8, i8* %566, i64 8
  %576 = add nuw i64 %567, 8
  %577 = add nsw i64 %565, -1
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %584, label %564, !prof !13

579:                                              ; preds = %564
  %580 = xor i64 %572, %569
  %581 = tail call i64 @llvm.cttz.i64(i64 %580, i1 true) #4, !range !14
  %582 = lshr i64 %581, 3
  %583 = or i64 %582, %567
  br label %594

584:                                              ; preds = %574, %562
  %585 = phi i64 [ 0, %562 ], [ %576, %574 ]
  %586 = phi i8* [ %523, %562 ], [ %575, %574 ]
  br i1 %527, label %594, label %587

587:                                              ; preds = %584
  %588 = getelementptr inbounds i8, i8* %563, i64 %585
  %589 = load i8, i8* %588, align 1, !alias.scope !175, !noalias !176
  %590 = load i8, i8* %586, align 1, !alias.scope !175, !noalias !176
  %591 = icmp eq i8 %589, %590
  br i1 %591, label %592, label %594, !prof !15

592:                                              ; preds = %587
  %593 = add i64 %585, 1
  br i1 %529, label %594, label %1424

594:                                              ; preds = %1464, %592, %587, %1424, %1430, %1432, %1438, %1440, %1446, %1448, %1454, %1456, %1462, %584, %579
  %595 = phi i64 [ %583, %579 ], [ %585, %584 ], [ %585, %587 ], [ %593, %592 ], [ %593, %1424 ], [ %1431, %1430 ], [ %1431, %1432 ], [ %1439, %1438 ], [ %1439, %1440 ], [ %1447, %1446 ], [ %1447, %1448 ], [ %1455, %1454 ], [ %1455, %1456 ], [ %1463, %1462 ], [ %1471, %1464 ]
  %596 = icmp ugt i64 %595, 2
  br i1 %596, label %601, label %597

597:                                              ; preds = %594
  %598 = icmp eq i64 %595, 2
  %599 = icmp ult i64 %539, 2
  %600 = and i1 %599, %598
  br i1 %600, label %601, label %623

601:                                              ; preds = %597, %594
  %602 = mul i64 %595, 135
  %603 = add i64 %602, 1935
  %604 = icmp ult i64 %541, %603
  br i1 %604, label %605, label %623

605:                                              ; preds = %601
  %606 = icmp eq i64 %539, 0
  br i1 %606, label %615, label %607

607:                                              ; preds = %605
  %608 = trunc i64 %539 to i32
  %609 = and i32 %608, 14
  %610 = lshr i32 117264, %609
  %611 = and i32 %610, 14
  %612 = add nuw nsw i32 %611, 39
  %613 = zext i32 %612 to i64
  %614 = sub i64 %603, %613
  br label %615

615:                                              ; preds = %607, %605
  %616 = phi i64 [ %614, %607 ], [ %603, %605 ]
  %617 = icmp ult i64 %541, %616
  %618 = select i1 %617, i64 %616, i64 %536
  %619 = select i1 %617, i64 %544, i64 %537
  %620 = select i1 %617, i64 %595, i64 %538
  %621 = select i1 %617, i64 %616, i64 %541
  %622 = select i1 %617, i64 %595, i64 %540
  br label %623

623:                                              ; preds = %615, %601, %597, %556, %553, %549, %535
  %624 = phi i64 [ %536, %535 ], [ %536, %549 ], [ %536, %553 ], [ %536, %601 ], [ %536, %597 ], [ %536, %556 ], [ %618, %615 ]
  %625 = phi i64 [ %537, %535 ], [ %537, %549 ], [ %537, %553 ], [ %537, %601 ], [ %537, %597 ], [ %537, %556 ], [ %619, %615 ]
  %626 = phi i64 [ %538, %535 ], [ %538, %549 ], [ %538, %553 ], [ %538, %601 ], [ %538, %597 ], [ %538, %556 ], [ %620, %615 ]
  %627 = phi i64 [ %541, %535 ], [ %541, %549 ], [ %541, %553 ], [ %541, %601 ], [ %541, %597 ], [ %541, %556 ], [ %621, %615 ]
  %628 = phi i64 [ %540, %535 ], [ %540, %549 ], [ %540, %553 ], [ %540, %601 ], [ %540, %597 ], [ %540, %556 ], [ %622, %615 ]
  %629 = add nuw i64 %539, 1
  %630 = icmp ult i64 %629, %528
  br i1 %630, label %535, label %631

631:                                              ; preds = %623, %508
  %632 = phi i64 [ 2020, %508 ], [ %624, %623 ]
  %633 = phi i64 [ 0, %508 ], [ %625, %623 ]
  %634 = phi i64 [ 0, %508 ], [ %626, %623 ]
  %635 = phi i64 [ 2020, %508 ], [ %627, %623 ]
  %636 = phi i64 [ %509, %508 ], [ %628, %623 ]
  %637 = getelementptr inbounds i8, i8* %2, i64 %519
  %638 = load i32, i32* %67, align 8, !alias.scope !166, !noalias !169
  %639 = bitcast i8* %637 to i32*
  %640 = load i32, i32* %639, align 4, !alias.scope !177, !noalias !176
  %641 = mul i32 %640, 506832829
  %642 = lshr i32 %641, %638
  %643 = load i32, i32* %69, align 8, !alias.scope !166, !noalias !169
  %644 = shl i32 %642, %643
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds i32, i32* %518, i64 %645
  %647 = zext i32 %642 to i64
  %648 = getelementptr inbounds i16, i16* %517, i64 %647
  %649 = load i16, i16* %648, align 2, !noalias !180
  %650 = zext i16 %649 to i64
  %651 = load i64, i64* %71, align 8, !alias.scope !166, !noalias !169
  %652 = tail call i64 @llvm.usub.sat.i64(i64 %650, i64 %651) #4
  %653 = icmp ult i64 %652, %650
  br i1 %653, label %656, label %654

654:                                              ; preds = %631
  %655 = load i32, i32* %73, align 4, !alias.scope !166, !noalias !169
  br label %753

656:                                              ; preds = %631
  %657 = lshr i64 %501, 3
  %658 = icmp eq i64 %657, 0
  %659 = and i64 %501, 7
  %660 = icmp eq i64 %659, 0
  %661 = load i32, i32* %73, align 4, !alias.scope !166, !noalias !169
  %662 = zext i32 %661 to i64
  %663 = icmp eq i64 %659, 1
  %664 = icmp eq i64 %659, 2
  %665 = icmp eq i64 %659, 3
  %666 = icmp eq i64 %659, 4
  %667 = icmp eq i64 %659, 5
  %668 = icmp eq i64 %659, 6
  br label %669

669:                                              ; preds = %746, %656
  %670 = phi i64 [ %632, %656 ], [ %747, %746 ]
  %671 = phi i64 [ %633, %656 ], [ %748, %746 ]
  %672 = phi i64 [ %634, %656 ], [ %749, %746 ]
  %673 = phi i64 [ %650, %656 ], [ %676, %746 ]
  %674 = phi i64 [ %636, %656 ], [ %751, %746 ]
  %675 = phi i64 [ %635, %656 ], [ %750, %746 ]
  %676 = add i64 %673, -1
  %677 = and i64 %676, %662
  %678 = getelementptr inbounds i32, i32* %646, i64 %677
  %679 = load i32, i32* %678, align 4, !noalias !180
  %680 = zext i32 %679 to i64
  %681 = sub i64 %510, %680
  %682 = icmp ugt i64 %681, %512
  br i1 %682, label %753, label %683, !prof !13

683:                                              ; preds = %669
  %684 = and i64 %680, %3
  %685 = add i64 %674, %519
  %686 = icmp ugt i64 %685, %3
  br i1 %686, label %746, label %687

687:                                              ; preds = %683
  %688 = add i64 %684, %674
  %689 = icmp ugt i64 %688, %3
  br i1 %689, label %746, label %690

690:                                              ; preds = %687
  %691 = getelementptr inbounds i8, i8* %2, i64 %685
  %692 = load i8, i8* %691, align 1, !alias.scope !175, !noalias !176
  %693 = getelementptr inbounds i8, i8* %2, i64 %688
  %694 = load i8, i8* %693, align 1, !alias.scope !175, !noalias !176
  %695 = icmp eq i8 %692, %694
  br i1 %695, label %696, label %746

696:                                              ; preds = %690
  %697 = getelementptr inbounds i8, i8* %2, i64 %684
  br i1 %658, label %718, label %698, !prof !13

698:                                              ; preds = %696, %708
  %699 = phi i64 [ %711, %708 ], [ %657, %696 ]
  %700 = phi i8* [ %709, %708 ], [ %637, %696 ]
  %701 = phi i64 [ %710, %708 ], [ 0, %696 ]
  %702 = bitcast i8* %700 to i64*
  %703 = load i64, i64* %702, align 8, !alias.scope !175, !noalias !176
  %704 = getelementptr inbounds i8, i8* %697, i64 %701
  %705 = bitcast i8* %704 to i64*
  %706 = load i64, i64* %705, align 8, !alias.scope !175, !noalias !176
  %707 = icmp eq i64 %703, %706
  br i1 %707, label %708, label %713, !prof !13

708:                                              ; preds = %698
  %709 = getelementptr inbounds i8, i8* %700, i64 8
  %710 = add nuw i64 %701, 8
  %711 = add nsw i64 %699, -1
  %712 = icmp eq i64 %711, 0
  br i1 %712, label %718, label %698, !prof !13

713:                                              ; preds = %698
  %714 = xor i64 %706, %703
  %715 = tail call i64 @llvm.cttz.i64(i64 %714, i1 true) #4, !range !14
  %716 = lshr i64 %715, 3
  %717 = or i64 %716, %701
  br label %728

718:                                              ; preds = %708, %696
  %719 = phi i64 [ 0, %696 ], [ %710, %708 ]
  %720 = phi i8* [ %637, %696 ], [ %709, %708 ]
  br i1 %660, label %728, label %721

721:                                              ; preds = %718
  %722 = getelementptr inbounds i8, i8* %697, i64 %719
  %723 = load i8, i8* %722, align 1, !alias.scope !175, !noalias !176
  %724 = load i8, i8* %720, align 1, !alias.scope !175, !noalias !176
  %725 = icmp eq i8 %723, %724
  br i1 %725, label %726, label %728, !prof !15

726:                                              ; preds = %721
  %727 = add i64 %719, 1
  br i1 %663, label %728, label %1472

728:                                              ; preds = %1512, %726, %721, %1472, %1478, %1480, %1486, %1488, %1494, %1496, %1502, %1504, %1510, %718, %713
  %729 = phi i64 [ %717, %713 ], [ %719, %718 ], [ %719, %721 ], [ %727, %726 ], [ %727, %1472 ], [ %1479, %1478 ], [ %1479, %1480 ], [ %1487, %1486 ], [ %1487, %1488 ], [ %1495, %1494 ], [ %1495, %1496 ], [ %1503, %1502 ], [ %1503, %1504 ], [ %1511, %1510 ], [ %1519, %1512 ]
  %730 = icmp ugt i64 %729, 3
  br i1 %730, label %731, label %746

731:                                              ; preds = %728
  %732 = mul i64 %729, 135
  %733 = trunc i64 %681 to i32
  %734 = tail call i32 @llvm.ctlz.i32(i32 %733, i1 true) #4, !range !18
  %735 = xor i32 %734, 31
  %736 = mul nsw i32 %735, -30
  %737 = add nsw i32 %736, 1920
  %738 = zext i32 %737 to i64
  %739 = add i64 %732, %738
  %740 = icmp ult i64 %675, %739
  %741 = select i1 %740, i64 %739, i64 %670
  %742 = select i1 %740, i64 %681, i64 %671
  %743 = select i1 %740, i64 %729, i64 %672
  %744 = select i1 %740, i64 %739, i64 %675
  %745 = select i1 %740, i64 %729, i64 %674
  br label %746

746:                                              ; preds = %731, %728, %690, %687, %683
  %747 = phi i64 [ %670, %683 ], [ %670, %687 ], [ %670, %728 ], [ %670, %690 ], [ %741, %731 ]
  %748 = phi i64 [ %671, %683 ], [ %671, %687 ], [ %671, %728 ], [ %671, %690 ], [ %742, %731 ]
  %749 = phi i64 [ %672, %683 ], [ %672, %687 ], [ %672, %728 ], [ %672, %690 ], [ %743, %731 ]
  %750 = phi i64 [ %675, %683 ], [ %675, %687 ], [ %675, %728 ], [ %675, %690 ], [ %744, %731 ]
  %751 = phi i64 [ %674, %683 ], [ %674, %687 ], [ %674, %728 ], [ %674, %690 ], [ %745, %731 ]
  %752 = icmp ugt i64 %676, %652
  br i1 %752, label %669, label %753

753:                                              ; preds = %746, %669, %654
  %754 = phi i64 [ %632, %654 ], [ %747, %746 ], [ %670, %669 ]
  %755 = phi i64 [ %633, %654 ], [ %748, %746 ], [ %671, %669 ]
  %756 = phi i64 [ %634, %654 ], [ %749, %746 ], [ %672, %669 ]
  %757 = phi i64 [ %635, %654 ], [ %750, %746 ], [ %675, %669 ]
  %758 = phi i32 [ %655, %654 ], [ %661, %669 ], [ %661, %746 ]
  %759 = trunc i64 %510 to i32
  %760 = zext i16 %649 to i32
  %761 = and i32 %758, %760
  %762 = zext i32 %761 to i64
  %763 = getelementptr inbounds i32, i32* %646, i64 %762
  store i32 %759, i32* %763, align 4, !noalias !180
  %764 = load i16, i16* %648, align 2, !noalias !180
  %765 = add i16 %764, 1
  store i16 %765, i16* %648, align 2, !noalias !180
  %766 = icmp eq i64 %757, 2020
  br i1 %766, label %767, label %895

767:                                              ; preds = %753
  %768 = load %struct.HasherCommon*, %struct.HasherCommon** %75, align 8, !alias.scope !166, !noalias !169
  %769 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %768, i64 0, i32 2
  %770 = load i64, i64* %769, align 8, !noalias !180
  %771 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %768, i64 0, i32 1
  %772 = load i64, i64* %771, align 8, !noalias !180
  %773 = lshr i64 %772, 7
  %774 = icmp ult i64 %770, %773
  br i1 %774, label %895, label %775

775:                                              ; preds = %767
  %776 = lshr i32 %641, 18
  %777 = shl nuw nsw i32 %776, 1
  %778 = zext i32 %777 to i64
  %779 = add i64 %515, 1
  br label %780

780:                                              ; preds = %885, %775
  %781 = phi i32 [ 0, %775 ], [ %886, %885 ]
  %782 = phi i64 [ %754, %775 ], [ %887, %885 ]
  %783 = phi i64 [ %755, %775 ], [ %888, %885 ]
  %784 = phi i64 [ %756, %775 ], [ %889, %885 ]
  %785 = phi i64 [ %770, %775 ], [ %890, %885 ]
  %786 = phi i64 [ 2020, %775 ], [ %891, %885 ]
  %787 = phi i64 [ %772, %775 ], [ %790, %885 ]
  %788 = phi i64 [ %778, %775 ], [ %893, %885 ]
  %789 = phi i64 [ 0, %775 ], [ %892, %885 ]
  %790 = add i64 %787, 1
  store i64 %790, i64* %771, align 8, !noalias !180
  %791 = load i8*, i8** %76, align 8, !noalias !180
  %792 = getelementptr inbounds i8, i8* %791, i64 %788
  %793 = load i8, i8* %792, align 1, !noalias !180
  %794 = icmp eq i8 %793, 0
  br i1 %794, label %885, label %795

795:                                              ; preds = %780
  %796 = zext i8 %793 to i64
  %797 = load i16*, i16** %77, align 8, !noalias !180
  %798 = getelementptr inbounds i16, i16* %797, i64 %788
  %799 = load i16, i16* %798, align 2, !noalias !180
  %800 = zext i16 %799 to i64
  %801 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %78, align 8, !noalias !180
  %802 = icmp ult i64 %501, %796
  br i1 %802, label %885, label %803

803:                                              ; preds = %795
  %804 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %801, i64 0, i32 1, i64 %796
  %805 = load i32, i32* %804, align 4, !noalias !180
  %806 = zext i32 %805 to i64
  %807 = mul nuw nsw i64 %800, %796
  %808 = add nuw nsw i64 %807, %806
  %809 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %801, i64 0, i32 3
  %810 = load i8*, i8** %809, align 8, !noalias !180
  %811 = getelementptr inbounds i8, i8* %810, i64 %808
  %812 = lshr i64 %796, 3
  %813 = icmp eq i64 %812, 0
  br i1 %813, label %834, label %814, !prof !13

814:                                              ; preds = %803, %824
  %815 = phi i64 [ %827, %824 ], [ %812, %803 ]
  %816 = phi i8* [ %825, %824 ], [ %811, %803 ]
  %817 = phi i64 [ %826, %824 ], [ 0, %803 ]
  %818 = bitcast i8* %816 to i64*
  %819 = load i64, i64* %818, align 8, !noalias !180
  %820 = getelementptr inbounds i8, i8* %637, i64 %817
  %821 = bitcast i8* %820 to i64*
  %822 = load i64, i64* %821, align 8, !alias.scope !175, !noalias !176
  %823 = icmp eq i64 %819, %822
  br i1 %823, label %824, label %829, !prof !13

824:                                              ; preds = %814
  %825 = getelementptr inbounds i8, i8* %816, i64 8
  %826 = add nuw nsw i64 %817, 8
  %827 = add nsw i64 %815, -1
  %828 = icmp eq i64 %827, 0
  br i1 %828, label %834, label %814, !prof !13

829:                                              ; preds = %814
  %830 = xor i64 %822, %819
  %831 = tail call i64 @llvm.cttz.i64(i64 %830, i1 true) #4, !range !14
  %832 = lshr i64 %831, 3
  %833 = or i64 %832, %817
  br label %847

834:                                              ; preds = %824, %803
  %835 = phi i64 [ 0, %803 ], [ %826, %824 ]
  %836 = phi i8* [ %811, %803 ], [ %825, %824 ]
  %837 = and i64 %796, 7
  %838 = icmp eq i64 %837, 0
  br i1 %838, label %847, label %839

839:                                              ; preds = %834
  %840 = getelementptr inbounds i8, i8* %637, i64 %835
  %841 = load i8, i8* %840, align 1, !alias.scope !175, !noalias !176
  %842 = load i8, i8* %836, align 1, !noalias !180
  %843 = icmp eq i8 %841, %842
  br i1 %843, label %844, label %847, !prof !15

844:                                              ; preds = %839
  %845 = add nuw nsw i64 %835, 1
  %846 = icmp eq i64 %837, 1
  br i1 %846, label %847, label %1520

847:                                              ; preds = %1565, %844, %839, %1520, %1526, %1529, %1535, %1538, %1544, %1547, %1553, %1556, %1562, %834, %829
  %848 = phi i64 [ %833, %829 ], [ %835, %834 ], [ %835, %839 ], [ %845, %844 ], [ %845, %1520 ], [ %1527, %1526 ], [ %1527, %1529 ], [ %1536, %1535 ], [ %1536, %1538 ], [ %1545, %1544 ], [ %1545, %1547 ], [ %1554, %1553 ], [ %1554, %1556 ], [ %1563, %1562 ], [ %1572, %1565 ]
  %849 = load i32, i32* %79, align 4, !noalias !180
  %850 = zext i32 %849 to i64
  %851 = add i64 %848, %850
  %852 = icmp ule i64 %851, %796
  %853 = icmp eq i64 %848, 0
  %854 = or i1 %853, %852
  br i1 %854, label %885, label %855

855:                                              ; preds = %847
  %856 = sub i64 %796, %848
  %857 = shl i64 %856, 2
  %858 = load i64, i64* %80, align 8, !noalias !180
  %859 = mul i64 %856, 6
  %860 = lshr i64 %858, %859
  %861 = and i64 %860, 63
  %862 = add i64 %861, %857
  %863 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %801, i64 0, i32 0, i64 %796
  %864 = load i8, i8* %863, align 1, !noalias !180
  %865 = zext i8 %864 to i64
  %866 = shl i64 %862, %865
  %867 = add i64 %779, %800
  %868 = add i64 %867, %866
  %869 = icmp ugt i64 %868, %516
  br i1 %869, label %885, label %870

870:                                              ; preds = %855
  %871 = mul i64 %848, 135
  %872 = add i64 %871, 1920
  %873 = trunc i64 %868 to i32
  %874 = tail call i32 @llvm.ctlz.i32(i32 %873, i1 true) #4, !range !18
  %875 = xor i32 %874, 31
  %876 = mul nuw nsw i32 %875, 30
  %877 = zext i32 %876 to i64
  %878 = sub i64 %872, %877
  %879 = icmp ult i64 %878, %786
  br i1 %879, label %885, label %880

880:                                              ; preds = %870
  %881 = zext i8 %793 to i32
  %882 = trunc i64 %848 to i32
  %883 = sub nsw i32 %881, %882
  %884 = add i64 %785, 1
  store i64 %884, i64* %769, align 8, !noalias !180
  br label %885

885:                                              ; preds = %880, %870, %855, %847, %795, %780
  %886 = phi i32 [ %781, %780 ], [ %781, %795 ], [ %781, %847 ], [ %781, %855 ], [ %781, %870 ], [ %883, %880 ]
  %887 = phi i64 [ %782, %780 ], [ %782, %795 ], [ %782, %847 ], [ %782, %855 ], [ %782, %870 ], [ %878, %880 ]
  %888 = phi i64 [ %783, %780 ], [ %783, %795 ], [ %783, %847 ], [ %783, %855 ], [ %783, %870 ], [ %868, %880 ]
  %889 = phi i64 [ %784, %780 ], [ %784, %795 ], [ %784, %847 ], [ %784, %855 ], [ %784, %870 ], [ %848, %880 ]
  %890 = phi i64 [ %785, %780 ], [ %785, %795 ], [ %785, %847 ], [ %785, %855 ], [ %785, %870 ], [ %884, %880 ]
  %891 = phi i64 [ %786, %780 ], [ %786, %795 ], [ %786, %847 ], [ %786, %855 ], [ %786, %870 ], [ %878, %880 ]
  %892 = add nuw nsw i64 %789, 1
  %893 = add nuw nsw i64 %788, 1
  %894 = icmp eq i64 %892, 2
  br i1 %894, label %895, label %780

895:                                              ; preds = %885, %753, %767
  %896 = phi i32 [ 0, %767 ], [ 0, %753 ], [ %886, %885 ]
  %897 = phi i64 [ %754, %767 ], [ %754, %753 ], [ %887, %885 ]
  %898 = phi i64 [ %755, %767 ], [ %755, %753 ], [ %888, %885 ]
  %899 = phi i64 [ %756, %767 ], [ %756, %753 ], [ %889, %885 ]
  %900 = add i64 %494, 175
  %901 = icmp ult i64 %897, %900
  br i1 %901, label %902, label %904

902:                                              ; preds = %895
  %903 = add i64 %500, %18
  br label %911

904:                                              ; preds = %895
  %905 = add i64 %497, 1
  %906 = add nuw nsw i32 %499, 1
  %907 = icmp ult i32 %906, 4
  %908 = add i64 %500, 5
  %909 = icmp ult i64 %908, %20
  %910 = and i1 %907, %909
  br i1 %910, label %492, label %911

911:                                              ; preds = %904, %902
  %912 = phi i64 [ %903, %902 ], [ %513, %904 ]
  %913 = phi i32 [ %493, %902 ], [ %896, %904 ]
  %914 = phi i64 [ %495, %902 ], [ %898, %904 ]
  %915 = phi i64 [ %496, %902 ], [ %899, %904 ]
  %916 = phi i64 [ %497, %902 ], [ %905, %904 ]
  %917 = phi i64 [ %500, %902 ], [ %510, %904 ]
  %918 = shl i64 %915, 1
  %919 = add i64 %918, %27
  %920 = add i64 %919, %917
  %921 = icmp ult i64 %912, %16
  %922 = select i1 %921, i64 %912, i64 %16
  %923 = icmp ugt i64 %914, %922
  br i1 %923, label %959, label %924

924:                                              ; preds = %911
  %925 = add i64 %914, 3
  %926 = load i32, i32* %6, align 4
  %927 = sext i32 %926 to i64
  %928 = sub i64 %925, %927
  %929 = load i32, i32* %83, align 4
  %930 = sext i32 %929 to i64
  %931 = sub i64 %925, %930
  %932 = icmp eq i64 %914, %927
  br i1 %932, label %986, label %933

933:                                              ; preds = %924
  %934 = icmp eq i64 %914, %930
  br i1 %934, label %961, label %935

935:                                              ; preds = %933
  %936 = icmp ult i64 %928, 7
  br i1 %936, label %937, label %943

937:                                              ; preds = %935
  %938 = trunc i64 %928 to i32
  %939 = shl i32 %938, 2
  %940 = lshr i32 158663784, %939
  %941 = and i32 %940, 15
  %942 = zext i32 %941 to i64
  br label %961

943:                                              ; preds = %935
  %944 = icmp ult i64 %931, 7
  br i1 %944, label %945, label %951

945:                                              ; preds = %943
  %946 = trunc i64 %931 to i32
  %947 = shl i32 %946, 2
  %948 = lshr i32 266017486, %947
  %949 = and i32 %948, 15
  %950 = zext i32 %949 to i64
  br label %961

951:                                              ; preds = %943
  %952 = load i32, i32* %84, align 4
  %953 = sext i32 %952 to i64
  %954 = icmp eq i64 %914, %953
  br i1 %954, label %961, label %955

955:                                              ; preds = %951
  %956 = load i32, i32* %85, align 4
  %957 = sext i32 %956 to i64
  %958 = icmp eq i64 %914, %957
  br i1 %958, label %961, label %959

959:                                              ; preds = %955, %911
  %960 = add i64 %914, 15
  br label %961

961:                                              ; preds = %933, %937, %945, %951, %955, %959
  %962 = phi i64 [ %960, %959 ], [ 3, %955 ], [ 2, %951 ], [ 1, %933 ], [ %950, %945 ], [ %942, %937 ]
  %963 = icmp ule i64 %914, %922
  %964 = icmp ne i64 %962, 0
  %965 = and i1 %963, %964
  br i1 %965, label %966, label %986

966:                                              ; preds = %961
  %967 = load i32, i32* %84, align 4
  store i32 %967, i32* %85, align 4
  %968 = load i32, i32* %83, align 4
  store i32 %968, i32* %84, align 4
  %969 = load i32, i32* %6, align 4
  store i32 %969, i32* %83, align 4
  %970 = trunc i64 %914 to i32
  store i32 %970, i32* %6, align 4
  %971 = load i32, i32* %30, align 4, !alias.scope !181, !noalias !184
  %972 = icmp sgt i32 %971, 4
  br i1 %972, label %973, label %986

973:                                              ; preds = %966
  %974 = insertelement <4 x i32> undef, i32 %970, i32 0
  %975 = shufflevector <4 x i32> %974, <4 x i32> undef, <4 x i32> zeroinitializer
  %976 = add nsw <4 x i32> %975, <i32 -1, i32 1, i32 -2, i32 2>
  store <4 x i32> %976, <4 x i32>* %94, align 4, !alias.scope !186, !noalias !181
  %977 = add nsw i32 %970, -3
  store i32 %977, i32* %87, align 4, !alias.scope !186, !noalias !181
  %978 = add nsw i32 %970, 3
  store i32 %978, i32* %88, align 4, !alias.scope !186, !noalias !181
  %979 = icmp sgt i32 %971, 10
  br i1 %979, label %980, label %986

980:                                              ; preds = %973
  %981 = insertelement <4 x i32> undef, i32 %969, i32 0
  %982 = shufflevector <4 x i32> %981, <4 x i32> undef, <4 x i32> zeroinitializer
  %983 = add nsw <4 x i32> %982, <i32 -1, i32 1, i32 -2, i32 2>
  store <4 x i32> %983, <4 x i32>* %95, align 4, !alias.scope !186, !noalias !181
  %984 = add nsw i32 %969, -3
  store i32 %984, i32* %90, align 4, !alias.scope !186, !noalias !181
  %985 = add nsw i32 %969, 3
  store i32 %985, i32* %91, align 4, !alias.scope !186, !noalias !181
  br label %986

986:                                              ; preds = %924, %980, %973, %966, %961
  %987 = phi i64 [ %962, %961 ], [ %962, %966 ], [ %962, %973 ], [ %962, %980 ], [ 0, %924 ]
  %988 = getelementptr inbounds %struct.Command, %struct.Command* %99, i64 1
  %989 = trunc i64 %916 to i32
  %990 = getelementptr inbounds %struct.Command, %struct.Command* %99, i64 0, i32 0
  store i32 %989, i32* %990, align 4
  %991 = shl i32 %913, 25
  %992 = trunc i64 %915 to i32
  %993 = or i32 %991, %992
  %994 = getelementptr inbounds %struct.Command, %struct.Command* %99, i64 0, i32 1
  store i32 %993, i32* %994, align 4
  %995 = load i32, i32* %92, align 4
  %996 = zext i32 %995 to i64
  %997 = load i32, i32* %93, align 8
  %998 = zext i32 %997 to i64
  %999 = getelementptr inbounds %struct.Command, %struct.Command* %99, i64 0, i32 4
  %1000 = getelementptr inbounds %struct.Command, %struct.Command* %99, i64 0, i32 2
  %1001 = add nuw nsw i64 %996, 16
  %1002 = icmp ugt i64 %1001, %987
  br i1 %1002, label %1003, label %1005

1003:                                             ; preds = %986
  %1004 = trunc i64 %987 to i16
  store i16 %1004, i16* %999, align 2
  br label %1035

1005:                                             ; preds = %986
  %1006 = shl i64 4, %998
  %1007 = add i64 %987, -16
  %1008 = sub i64 %1007, %996
  %1009 = add i64 %1008, %1006
  %1010 = trunc i64 %1009 to i32
  %1011 = tail call i32 @llvm.ctlz.i32(i32 %1010, i1 true) #4, !range !18
  %1012 = sub nsw i32 30, %1011
  %1013 = zext i32 %1012 to i64
  %1014 = shl nsw i32 -1, %997
  %1015 = xor i32 %1014, 65535
  %1016 = zext i32 %1015 to i64
  %1017 = and i64 %1009, %1016
  %1018 = lshr i64 %1009, %1013
  %1019 = and i64 %1018, 1
  %1020 = or i64 %1019, 2
  %1021 = shl i64 %1020, %1013
  %1022 = sub nsw i64 %1013, %998
  %1023 = shl nsw i64 %1022, 10
  %1024 = shl nsw i64 %1022, 1
  %1025 = add nsw i64 %1024, -2
  %1026 = or i64 %1025, %1019
  %1027 = shl i64 %1026, %998
  %1028 = add nuw nsw i64 %1017, %1001
  %1029 = add i64 %1028, %1027
  %1030 = or i64 %1029, %1023
  %1031 = trunc i64 %1030 to i16
  store i16 %1031, i16* %999, align 2
  %1032 = sub i64 %1009, %1021
  %1033 = lshr i64 %1032, %998
  %1034 = trunc i64 %1033 to i32
  br label %1035

1035:                                             ; preds = %1005, %1003
  %1036 = phi i16 [ %1031, %1005 ], [ %1004, %1003 ]
  %1037 = phi i32 [ %1034, %1005 ], [ 0, %1003 ]
  store i32 %1037, i32* %1000, align 4
  %1038 = add nsw i32 %913, %992
  %1039 = sext i32 %1038 to i64
  %1040 = and i16 %1036, 1023
  %1041 = icmp eq i16 %1040, 0
  %1042 = getelementptr inbounds %struct.Command, %struct.Command* %99, i64 0, i32 3
  %1043 = icmp ult i64 %916, 6
  br i1 %1043, label %1044, label %1046

1044:                                             ; preds = %1035
  %1045 = trunc i64 %916 to i16
  br label %1072

1046:                                             ; preds = %1035
  %1047 = icmp ult i64 %916, 130
  br i1 %1047, label %1048, label %1060

1048:                                             ; preds = %1046
  %1049 = add nsw i64 %916, -2
  %1050 = trunc i64 %1049 to i32
  %1051 = tail call i32 @llvm.ctlz.i32(i32 %1050, i1 true) #4, !range !18
  %1052 = sub nsw i32 30, %1051
  %1053 = shl nsw i32 %1052, 1
  %1054 = zext i32 %1053 to i64
  %1055 = zext i32 %1052 to i64
  %1056 = lshr i64 %1049, %1055
  %1057 = add nuw nsw i64 %1056, %1054
  %1058 = trunc i64 %1057 to i16
  %1059 = add i16 %1058, 2
  br label %1072

1060:                                             ; preds = %1046
  %1061 = icmp ult i64 %916, 2114
  br i1 %1061, label %1062, label %1067

1062:                                             ; preds = %1060
  %1063 = add nsw i32 %989, -66
  %1064 = tail call i32 @llvm.ctlz.i32(i32 %1063, i1 true) #4, !range !18
  %1065 = trunc i32 %1064 to i16
  %1066 = sub nuw nsw i16 41, %1065
  br label %1072

1067:                                             ; preds = %1060
  %1068 = icmp ult i64 %916, 6210
  br i1 %1068, label %1072, label %1069

1069:                                             ; preds = %1067
  %1070 = icmp ult i64 %916, 22594
  %1071 = select i1 %1070, i16 22, i16 23
  br label %1072

1072:                                             ; preds = %1069, %1067, %1062, %1048, %1044
  %1073 = phi i16 [ %1045, %1044 ], [ %1059, %1048 ], [ %1066, %1062 ], [ 21, %1067 ], [ %1071, %1069 ]
  %1074 = icmp ult i32 %1038, 10
  br i1 %1074, label %1075, label %1078

1075:                                             ; preds = %1072
  %1076 = trunc i32 %1038 to i16
  %1077 = add nsw i16 %1076, -2
  br label %1099

1078:                                             ; preds = %1072
  %1079 = icmp ult i32 %1038, 134
  br i1 %1079, label %1080, label %1092

1080:                                             ; preds = %1078
  %1081 = add nsw i64 %1039, -6
  %1082 = trunc i64 %1081 to i32
  %1083 = tail call i32 @llvm.ctlz.i32(i32 %1082, i1 true) #4, !range !18
  %1084 = sub nsw i32 30, %1083
  %1085 = shl nsw i32 %1084, 1
  %1086 = zext i32 %1085 to i64
  %1087 = zext i32 %1084 to i64
  %1088 = lshr i64 %1081, %1087
  %1089 = add nuw nsw i64 %1088, %1086
  %1090 = trunc i64 %1089 to i16
  %1091 = add i16 %1090, 4
  br label %1099

1092:                                             ; preds = %1078
  %1093 = icmp ult i32 %1038, 2118
  br i1 %1093, label %1094, label %1099

1094:                                             ; preds = %1092
  %1095 = add nsw i32 %1038, -70
  %1096 = tail call i32 @llvm.ctlz.i32(i32 %1095, i1 true) #4, !range !18
  %1097 = trunc i32 %1096 to i16
  %1098 = sub nuw nsw i16 43, %1097
  br label %1099

1099:                                             ; preds = %1094, %1092, %1080, %1075
  %1100 = phi i16 [ %1077, %1075 ], [ %1091, %1080 ], [ %1098, %1094 ], [ 23, %1092 ]
  %1101 = and i16 %1100, 7
  %1102 = shl i16 %1073, 3
  %1103 = and i16 %1102, 56
  %1104 = or i16 %1101, %1103
  %1105 = icmp ult i16 %1073, 8
  %1106 = and i1 %1041, %1105
  %1107 = icmp ult i16 %1100, 16
  %1108 = and i1 %1106, %1107
  br i1 %1108, label %1109, label %1113

1109:                                             ; preds = %1099
  %1110 = icmp ult i16 %1100, 8
  %1111 = or i16 %1104, 64
  %1112 = select i1 %1110, i16 %1104, i16 %1111
  br label %1128

1113:                                             ; preds = %1099
  %1114 = lshr i16 %1100, 3
  %1115 = lshr i16 %1073, 3
  %1116 = mul nuw nsw i16 %1115, 3
  %1117 = add nuw nsw i16 %1114, %1116
  %1118 = zext i16 %1117 to i32
  %1119 = shl nuw i16 %1117, 1
  %1120 = zext i16 %1119 to i32
  %1121 = shl nuw nsw i32 %1118, 6
  %1122 = add nuw nsw i32 %1121, 64
  %1123 = lshr i32 5377344, %1120
  %1124 = and i32 %1123, 192
  %1125 = add nuw nsw i32 %1122, %1124
  %1126 = trunc i32 %1125 to i16
  %1127 = or i16 %1104, %1126
  br label %1128

1128:                                             ; preds = %1109, %1113
  %1129 = phi i16 [ %1112, %1109 ], [ %1127, %1113 ]
  store i16 %1129, i16* %1042, align 2
  %1130 = load i64, i64* %10, align 8
  %1131 = add i64 %1130, %916
  store i64 %1131, i64* %10, align 8
  %1132 = add i64 %917, 2
  %1133 = add i64 %917, %915
  %1134 = icmp ult i64 %1133, %23
  %1135 = select i1 %1134, i64 %1133, i64 %23
  %1136 = lshr i64 %915, 2
  %1137 = icmp ult i64 %914, %1136
  br i1 %1137, label %1138, label %1145

1138:                                             ; preds = %1128
  %1139 = shl i64 %914, 2
  %1140 = sub i64 %1133, %1139
  %1141 = icmp ugt i64 %1132, %1140
  %1142 = select i1 %1141, i64 %1132, i64 %1140
  %1143 = icmp ult i64 %1135, %1142
  %1144 = select i1 %1143, i64 %1135, i64 %1142
  br label %1145

1145:                                             ; preds = %1138, %1128
  %1146 = phi i64 [ %1144, %1138 ], [ %1132, %1128 ]
  %1147 = icmp ult i64 %1146, %1135
  br i1 %1147, label %1148, label %1256

1148:                                             ; preds = %1145
  %1149 = load i32, i32* %67, align 8, !alias.scope !189, !noalias !194
  %1150 = load i16*, i16** %63, align 8, !alias.scope !189, !noalias !194
  %1151 = load i32, i32* %73, align 4, !alias.scope !189, !noalias !194
  %1152 = load i32, i32* %69, align 8, !alias.scope !189, !noalias !194
  %1153 = load i32*, i32** %65, align 8, !alias.scope !189, !noalias !194
  br label %1154

1154:                                             ; preds = %1154, %1148
  %1155 = phi i64 [ %1146, %1148 ], [ %1175, %1154 ]
  %1156 = and i64 %1155, %3
  %1157 = getelementptr inbounds i8, i8* %2, i64 %1156
  %1158 = bitcast i8* %1157 to i32*
  %1159 = load i32, i32* %1158, align 4, !alias.scope !197, !noalias !189
  %1160 = mul i32 %1159, 506832829
  %1161 = lshr i32 %1160, %1149
  %1162 = zext i32 %1161 to i64
  %1163 = getelementptr inbounds i16, i16* %1150, i64 %1162
  %1164 = load i16, i16* %1163, align 2, !noalias !200
  %1165 = zext i16 %1164 to i32
  %1166 = and i32 %1151, %1165
  %1167 = zext i32 %1166 to i64
  %1168 = shl i32 %1161, %1152
  %1169 = zext i32 %1168 to i64
  %1170 = add nuw nsw i64 %1169, %1167
  %1171 = trunc i64 %1155 to i32
  %1172 = getelementptr inbounds i32, i32* %1153, i64 %1170
  store i32 %1171, i32* %1172, align 4, !noalias !200
  %1173 = load i16, i16* %1163, align 2, !noalias !200
  %1174 = add i16 %1173, 1
  store i16 %1174, i16* %1163, align 2, !noalias !200
  %1175 = add nuw i64 %1155, 1
  %1176 = icmp eq i64 %1175, %1135
  br i1 %1176, label %1256, label %1154

1177:                                             ; preds = %486
  %1178 = add i64 %101, 1
  %1179 = add i64 %98, 1
  %1180 = icmp ugt i64 %1179, %100
  br i1 %1180, label %1181, label %1256

1181:                                             ; preds = %1177
  %1182 = add i64 %100, %81
  %1183 = icmp ugt i64 %1179, %1182
  br i1 %1183, label %1184, label %1220

1184:                                             ; preds = %1181
  %1185 = add i64 %98, 17
  %1186 = icmp ult i64 %1185, %82
  %1187 = select i1 %1186, i64 %1185, i64 %82
  %1188 = icmp ult i64 %1179, %1187
  br i1 %1188, label %1189, label %1256

1189:                                             ; preds = %1184
  %1190 = load i32, i32* %67, align 8, !alias.scope !201, !noalias !204
  %1191 = load i16*, i16** %63, align 8, !alias.scope !201, !noalias !204
  %1192 = load i32, i32* %73, align 4, !alias.scope !201, !noalias !204
  %1193 = load i32, i32* %69, align 8, !alias.scope !201, !noalias !204
  %1194 = load i32*, i32** %65, align 8, !alias.scope !201, !noalias !204
  br label %1195

1195:                                             ; preds = %1189, %1195
  %1196 = phi i64 [ %1179, %1189 ], [ %1218, %1195 ]
  %1197 = phi i64 [ %1178, %1189 ], [ %1217, %1195 ]
  %1198 = and i64 %1196, %3
  %1199 = getelementptr inbounds i8, i8* %2, i64 %1198
  %1200 = bitcast i8* %1199 to i32*
  %1201 = load i32, i32* %1200, align 4, !alias.scope !206, !noalias !201
  %1202 = mul i32 %1201, 506832829
  %1203 = lshr i32 %1202, %1190
  %1204 = zext i32 %1203 to i64
  %1205 = getelementptr inbounds i16, i16* %1191, i64 %1204
  %1206 = load i16, i16* %1205, align 2, !noalias !209
  %1207 = zext i16 %1206 to i32
  %1208 = and i32 %1192, %1207
  %1209 = zext i32 %1208 to i64
  %1210 = shl i32 %1203, %1193
  %1211 = zext i32 %1210 to i64
  %1212 = add nuw nsw i64 %1211, %1209
  %1213 = trunc i64 %1196 to i32
  %1214 = getelementptr inbounds i32, i32* %1194, i64 %1212
  store i32 %1213, i32* %1214, align 4, !noalias !209
  %1215 = load i16, i16* %1205, align 2, !noalias !209
  %1216 = add i16 %1215, 1
  store i16 %1216, i16* %1205, align 2, !noalias !209
  %1217 = add i64 %1197, 4
  %1218 = add i64 %1196, 4
  %1219 = icmp ult i64 %1218, %1187
  br i1 %1219, label %1195, label %1256

1220:                                             ; preds = %1181
  %1221 = add i64 %98, 9
  %1222 = icmp ult i64 %1221, %22
  %1223 = select i1 %1222, i64 %1221, i64 %22
  %1224 = icmp ult i64 %1179, %1223
  br i1 %1224, label %1225, label %1256

1225:                                             ; preds = %1220
  %1226 = load i32, i32* %67, align 8, !alias.scope !210, !noalias !213
  %1227 = load i16*, i16** %63, align 8, !alias.scope !210, !noalias !213
  %1228 = load i32, i32* %73, align 4, !alias.scope !210, !noalias !213
  %1229 = load i32, i32* %69, align 8, !alias.scope !210, !noalias !213
  %1230 = load i32*, i32** %65, align 8, !alias.scope !210, !noalias !213
  br label %1231

1231:                                             ; preds = %1225, %1231
  %1232 = phi i64 [ %1179, %1225 ], [ %1254, %1231 ]
  %1233 = phi i64 [ %1178, %1225 ], [ %1253, %1231 ]
  %1234 = and i64 %1232, %3
  %1235 = getelementptr inbounds i8, i8* %2, i64 %1234
  %1236 = bitcast i8* %1235 to i32*
  %1237 = load i32, i32* %1236, align 4, !alias.scope !215, !noalias !210
  %1238 = mul i32 %1237, 506832829
  %1239 = lshr i32 %1238, %1226
  %1240 = zext i32 %1239 to i64
  %1241 = getelementptr inbounds i16, i16* %1227, i64 %1240
  %1242 = load i16, i16* %1241, align 2, !noalias !218
  %1243 = zext i16 %1242 to i32
  %1244 = and i32 %1228, %1243
  %1245 = zext i32 %1244 to i64
  %1246 = shl i32 %1239, %1229
  %1247 = zext i32 %1246 to i64
  %1248 = add nuw nsw i64 %1247, %1245
  %1249 = trunc i64 %1232 to i32
  %1250 = getelementptr inbounds i32, i32* %1230, i64 %1248
  store i32 %1249, i32* %1250, align 4, !noalias !218
  %1251 = load i16, i16* %1241, align 2, !noalias !218
  %1252 = add i16 %1251, 1
  store i16 %1252, i16* %1241, align 2, !noalias !218
  %1253 = add i64 %1233, 2
  %1254 = add i64 %1232, 2
  %1255 = icmp ult i64 %1254, %1223
  br i1 %1255, label %1231, label %1256

1256:                                             ; preds = %1231, %1195, %1154, %1220, %1184, %1145, %1177
  %1257 = phi i64 [ %1178, %1177 ], [ 0, %1145 ], [ %1178, %1184 ], [ %1178, %1220 ], [ 0, %1154 ], [ %1217, %1195 ], [ %1253, %1231 ]
  %1258 = phi i64 [ %100, %1177 ], [ %920, %1145 ], [ %100, %1184 ], [ %100, %1220 ], [ %920, %1154 ], [ %100, %1195 ], [ %100, %1231 ]
  %1259 = phi %struct.Command* [ %99, %1177 ], [ %988, %1145 ], [ %99, %1184 ], [ %99, %1220 ], [ %988, %1154 ], [ %99, %1195 ], [ %99, %1231 ]
  %1260 = phi i64 [ %1179, %1177 ], [ %1133, %1145 ], [ %1179, %1184 ], [ %1179, %1220 ], [ %1133, %1154 ], [ %1218, %1195 ], [ %1254, %1231 ]
  %1261 = add i64 %1260, 4
  %1262 = icmp ult i64 %1261, %20
  %1263 = sub i64 %20, %1260
  br i1 %1262, label %96, label %1264

1264:                                             ; preds = %1256, %57
  %1265 = phi i64 [ %19, %57 ], [ %1257, %1256 ]
  %1266 = phi %struct.Command* [ %8, %57 ], [ %1259, %1256 ]
  %1267 = phi i64 [ %0, %57 ], [ %1263, %1256 ]
  %1268 = add i64 %1267, %1265
  store i64 %1268, i64* %7, align 8
  %1269 = ptrtoint %struct.Command* %1266 to i64
  %1270 = ptrtoint %struct.Command* %8 to i64
  %1271 = sub i64 %1269, %1270
  %1272 = ashr exact i64 %1271, 4
  %1273 = load i64, i64* %9, align 8
  %1274 = add i64 %1273, %1272
  store i64 %1274, i64* %9, align 8
  ret void

1275:                                             ; preds = %183
  %1276 = getelementptr inbounds i8, i8* %177, i64 1
  %1277 = getelementptr inbounds i8, i8* %154, i64 %184
  %1278 = load i8, i8* %1277, align 1, !alias.scope !160, !noalias !161
  %1279 = load i8, i8* %1276, align 1, !alias.scope !160, !noalias !161
  %1280 = icmp eq i8 %1278, %1279
  br i1 %1280, label %1281, label %185, !prof !15

1281:                                             ; preds = %1275
  %1282 = add i64 %176, 2
  br i1 %121, label %185, label %1283

1283:                                             ; preds = %1281
  %1284 = getelementptr inbounds i8, i8* %177, i64 2
  %1285 = getelementptr inbounds i8, i8* %154, i64 %1282
  %1286 = load i8, i8* %1285, align 1, !alias.scope !160, !noalias !161
  %1287 = load i8, i8* %1284, align 1, !alias.scope !160, !noalias !161
  %1288 = icmp eq i8 %1286, %1287
  br i1 %1288, label %1289, label %185, !prof !15

1289:                                             ; preds = %1283
  %1290 = add i64 %176, 3
  br i1 %122, label %185, label %1291

1291:                                             ; preds = %1289
  %1292 = getelementptr inbounds i8, i8* %177, i64 3
  %1293 = getelementptr inbounds i8, i8* %154, i64 %1290
  %1294 = load i8, i8* %1293, align 1, !alias.scope !160, !noalias !161
  %1295 = load i8, i8* %1292, align 1, !alias.scope !160, !noalias !161
  %1296 = icmp eq i8 %1294, %1295
  br i1 %1296, label %1297, label %185, !prof !15

1297:                                             ; preds = %1291
  %1298 = add i64 %176, 4
  br i1 %123, label %185, label %1299

1299:                                             ; preds = %1297
  %1300 = getelementptr inbounds i8, i8* %177, i64 4
  %1301 = getelementptr inbounds i8, i8* %154, i64 %1298
  %1302 = load i8, i8* %1301, align 1, !alias.scope !160, !noalias !161
  %1303 = load i8, i8* %1300, align 1, !alias.scope !160, !noalias !161
  %1304 = icmp eq i8 %1302, %1303
  br i1 %1304, label %1305, label %185, !prof !15

1305:                                             ; preds = %1299
  %1306 = add i64 %176, 5
  br i1 %124, label %185, label %1307

1307:                                             ; preds = %1305
  %1308 = getelementptr inbounds i8, i8* %177, i64 5
  %1309 = getelementptr inbounds i8, i8* %154, i64 %1306
  %1310 = load i8, i8* %1309, align 1, !alias.scope !160, !noalias !161
  %1311 = load i8, i8* %1308, align 1, !alias.scope !160, !noalias !161
  %1312 = icmp eq i8 %1310, %1311
  br i1 %1312, label %1313, label %185, !prof !15

1313:                                             ; preds = %1307
  %1314 = add i64 %176, 6
  br i1 %125, label %185, label %1315

1315:                                             ; preds = %1313
  %1316 = getelementptr inbounds i8, i8* %177, i64 6
  %1317 = getelementptr inbounds i8, i8* %154, i64 %1314
  %1318 = load i8, i8* %1317, align 1, !alias.scope !160, !noalias !161
  %1319 = load i8, i8* %1316, align 1, !alias.scope !160, !noalias !161
  %1320 = icmp eq i8 %1318, %1319
  %1321 = add i64 %176, 7
  %1322 = select i1 %1320, i64 %1321, i64 %1314, !prof !15
  br label %185

1323:                                             ; preds = %317
  %1324 = getelementptr inbounds i8, i8* %311, i64 1
  %1325 = getelementptr inbounds i8, i8* %288, i64 %318
  %1326 = load i8, i8* %1325, align 1, !alias.scope !160, !noalias !161
  %1327 = load i8, i8* %1324, align 1, !alias.scope !160, !noalias !161
  %1328 = icmp eq i8 %1326, %1327
  br i1 %1328, label %1329, label %319, !prof !15

1329:                                             ; preds = %1323
  %1330 = add i64 %310, 2
  br i1 %255, label %319, label %1331

1331:                                             ; preds = %1329
  %1332 = getelementptr inbounds i8, i8* %311, i64 2
  %1333 = getelementptr inbounds i8, i8* %288, i64 %1330
  %1334 = load i8, i8* %1333, align 1, !alias.scope !160, !noalias !161
  %1335 = load i8, i8* %1332, align 1, !alias.scope !160, !noalias !161
  %1336 = icmp eq i8 %1334, %1335
  br i1 %1336, label %1337, label %319, !prof !15

1337:                                             ; preds = %1331
  %1338 = add i64 %310, 3
  br i1 %256, label %319, label %1339

1339:                                             ; preds = %1337
  %1340 = getelementptr inbounds i8, i8* %311, i64 3
  %1341 = getelementptr inbounds i8, i8* %288, i64 %1338
  %1342 = load i8, i8* %1341, align 1, !alias.scope !160, !noalias !161
  %1343 = load i8, i8* %1340, align 1, !alias.scope !160, !noalias !161
  %1344 = icmp eq i8 %1342, %1343
  br i1 %1344, label %1345, label %319, !prof !15

1345:                                             ; preds = %1339
  %1346 = add i64 %310, 4
  br i1 %257, label %319, label %1347

1347:                                             ; preds = %1345
  %1348 = getelementptr inbounds i8, i8* %311, i64 4
  %1349 = getelementptr inbounds i8, i8* %288, i64 %1346
  %1350 = load i8, i8* %1349, align 1, !alias.scope !160, !noalias !161
  %1351 = load i8, i8* %1348, align 1, !alias.scope !160, !noalias !161
  %1352 = icmp eq i8 %1350, %1351
  br i1 %1352, label %1353, label %319, !prof !15

1353:                                             ; preds = %1347
  %1354 = add i64 %310, 5
  br i1 %258, label %319, label %1355

1355:                                             ; preds = %1353
  %1356 = getelementptr inbounds i8, i8* %311, i64 5
  %1357 = getelementptr inbounds i8, i8* %288, i64 %1354
  %1358 = load i8, i8* %1357, align 1, !alias.scope !160, !noalias !161
  %1359 = load i8, i8* %1356, align 1, !alias.scope !160, !noalias !161
  %1360 = icmp eq i8 %1358, %1359
  br i1 %1360, label %1361, label %319, !prof !15

1361:                                             ; preds = %1355
  %1362 = add i64 %310, 6
  br i1 %259, label %319, label %1363

1363:                                             ; preds = %1361
  %1364 = getelementptr inbounds i8, i8* %311, i64 6
  %1365 = getelementptr inbounds i8, i8* %288, i64 %1362
  %1366 = load i8, i8* %1365, align 1, !alias.scope !160, !noalias !161
  %1367 = load i8, i8* %1364, align 1, !alias.scope !160, !noalias !161
  %1368 = icmp eq i8 %1366, %1367
  %1369 = add i64 %310, 7
  %1370 = select i1 %1368, i64 %1369, i64 %1362, !prof !15
  br label %319

1371:                                             ; preds = %435
  %1372 = getelementptr inbounds i8, i8* %427, i64 1
  %1373 = getelementptr inbounds i8, i8* %228, i64 %436
  %1374 = load i8, i8* %1373, align 1, !alias.scope !160, !noalias !161
  %1375 = load i8, i8* %1372, align 1, !noalias !165
  %1376 = icmp eq i8 %1374, %1375
  br i1 %1376, label %1377, label %438, !prof !15

1377:                                             ; preds = %1371
  %1378 = add nuw nsw i64 %426, 2
  %1379 = icmp eq i64 %428, 2
  br i1 %1379, label %438, label %1380

1380:                                             ; preds = %1377
  %1381 = getelementptr inbounds i8, i8* %427, i64 2
  %1382 = getelementptr inbounds i8, i8* %228, i64 %1378
  %1383 = load i8, i8* %1382, align 1, !alias.scope !160, !noalias !161
  %1384 = load i8, i8* %1381, align 1, !noalias !165
  %1385 = icmp eq i8 %1383, %1384
  br i1 %1385, label %1386, label %438, !prof !15

1386:                                             ; preds = %1380
  %1387 = add nuw nsw i64 %426, 3
  %1388 = icmp eq i64 %428, 3
  br i1 %1388, label %438, label %1389

1389:                                             ; preds = %1386
  %1390 = getelementptr inbounds i8, i8* %427, i64 3
  %1391 = getelementptr inbounds i8, i8* %228, i64 %1387
  %1392 = load i8, i8* %1391, align 1, !alias.scope !160, !noalias !161
  %1393 = load i8, i8* %1390, align 1, !noalias !165
  %1394 = icmp eq i8 %1392, %1393
  br i1 %1394, label %1395, label %438, !prof !15

1395:                                             ; preds = %1389
  %1396 = add nuw nsw i64 %426, 4
  %1397 = icmp eq i64 %428, 4
  br i1 %1397, label %438, label %1398

1398:                                             ; preds = %1395
  %1399 = getelementptr inbounds i8, i8* %427, i64 4
  %1400 = getelementptr inbounds i8, i8* %228, i64 %1396
  %1401 = load i8, i8* %1400, align 1, !alias.scope !160, !noalias !161
  %1402 = load i8, i8* %1399, align 1, !noalias !165
  %1403 = icmp eq i8 %1401, %1402
  br i1 %1403, label %1404, label %438, !prof !15

1404:                                             ; preds = %1398
  %1405 = add nuw nsw i64 %426, 5
  %1406 = icmp eq i64 %428, 5
  br i1 %1406, label %438, label %1407

1407:                                             ; preds = %1404
  %1408 = getelementptr inbounds i8, i8* %427, i64 5
  %1409 = getelementptr inbounds i8, i8* %228, i64 %1405
  %1410 = load i8, i8* %1409, align 1, !alias.scope !160, !noalias !161
  %1411 = load i8, i8* %1408, align 1, !noalias !165
  %1412 = icmp eq i8 %1410, %1411
  br i1 %1412, label %1413, label %438, !prof !15

1413:                                             ; preds = %1407
  %1414 = add nuw nsw i64 %426, 6
  %1415 = icmp eq i64 %428, 6
  br i1 %1415, label %438, label %1416

1416:                                             ; preds = %1413
  %1417 = getelementptr inbounds i8, i8* %427, i64 6
  %1418 = getelementptr inbounds i8, i8* %228, i64 %1414
  %1419 = load i8, i8* %1418, align 1, !alias.scope !160, !noalias !161
  %1420 = load i8, i8* %1417, align 1, !noalias !165
  %1421 = icmp eq i8 %1419, %1420
  %1422 = add nuw nsw i64 %426, 7
  %1423 = select i1 %1421, i64 %1422, i64 %1414, !prof !15
  br label %438

1424:                                             ; preds = %592
  %1425 = getelementptr inbounds i8, i8* %586, i64 1
  %1426 = getelementptr inbounds i8, i8* %563, i64 %593
  %1427 = load i8, i8* %1426, align 1, !alias.scope !175, !noalias !176
  %1428 = load i8, i8* %1425, align 1, !alias.scope !175, !noalias !176
  %1429 = icmp eq i8 %1427, %1428
  br i1 %1429, label %1430, label %594, !prof !15

1430:                                             ; preds = %1424
  %1431 = add i64 %585, 2
  br i1 %530, label %594, label %1432

1432:                                             ; preds = %1430
  %1433 = getelementptr inbounds i8, i8* %586, i64 2
  %1434 = getelementptr inbounds i8, i8* %563, i64 %1431
  %1435 = load i8, i8* %1434, align 1, !alias.scope !175, !noalias !176
  %1436 = load i8, i8* %1433, align 1, !alias.scope !175, !noalias !176
  %1437 = icmp eq i8 %1435, %1436
  br i1 %1437, label %1438, label %594, !prof !15

1438:                                             ; preds = %1432
  %1439 = add i64 %585, 3
  br i1 %531, label %594, label %1440

1440:                                             ; preds = %1438
  %1441 = getelementptr inbounds i8, i8* %586, i64 3
  %1442 = getelementptr inbounds i8, i8* %563, i64 %1439
  %1443 = load i8, i8* %1442, align 1, !alias.scope !175, !noalias !176
  %1444 = load i8, i8* %1441, align 1, !alias.scope !175, !noalias !176
  %1445 = icmp eq i8 %1443, %1444
  br i1 %1445, label %1446, label %594, !prof !15

1446:                                             ; preds = %1440
  %1447 = add i64 %585, 4
  br i1 %532, label %594, label %1448

1448:                                             ; preds = %1446
  %1449 = getelementptr inbounds i8, i8* %586, i64 4
  %1450 = getelementptr inbounds i8, i8* %563, i64 %1447
  %1451 = load i8, i8* %1450, align 1, !alias.scope !175, !noalias !176
  %1452 = load i8, i8* %1449, align 1, !alias.scope !175, !noalias !176
  %1453 = icmp eq i8 %1451, %1452
  br i1 %1453, label %1454, label %594, !prof !15

1454:                                             ; preds = %1448
  %1455 = add i64 %585, 5
  br i1 %533, label %594, label %1456

1456:                                             ; preds = %1454
  %1457 = getelementptr inbounds i8, i8* %586, i64 5
  %1458 = getelementptr inbounds i8, i8* %563, i64 %1455
  %1459 = load i8, i8* %1458, align 1, !alias.scope !175, !noalias !176
  %1460 = load i8, i8* %1457, align 1, !alias.scope !175, !noalias !176
  %1461 = icmp eq i8 %1459, %1460
  br i1 %1461, label %1462, label %594, !prof !15

1462:                                             ; preds = %1456
  %1463 = add i64 %585, 6
  br i1 %534, label %594, label %1464

1464:                                             ; preds = %1462
  %1465 = getelementptr inbounds i8, i8* %586, i64 6
  %1466 = getelementptr inbounds i8, i8* %563, i64 %1463
  %1467 = load i8, i8* %1466, align 1, !alias.scope !175, !noalias !176
  %1468 = load i8, i8* %1465, align 1, !alias.scope !175, !noalias !176
  %1469 = icmp eq i8 %1467, %1468
  %1470 = add i64 %585, 7
  %1471 = select i1 %1469, i64 %1470, i64 %1463, !prof !15
  br label %594

1472:                                             ; preds = %726
  %1473 = getelementptr inbounds i8, i8* %720, i64 1
  %1474 = getelementptr inbounds i8, i8* %697, i64 %727
  %1475 = load i8, i8* %1474, align 1, !alias.scope !175, !noalias !176
  %1476 = load i8, i8* %1473, align 1, !alias.scope !175, !noalias !176
  %1477 = icmp eq i8 %1475, %1476
  br i1 %1477, label %1478, label %728, !prof !15

1478:                                             ; preds = %1472
  %1479 = add i64 %719, 2
  br i1 %664, label %728, label %1480

1480:                                             ; preds = %1478
  %1481 = getelementptr inbounds i8, i8* %720, i64 2
  %1482 = getelementptr inbounds i8, i8* %697, i64 %1479
  %1483 = load i8, i8* %1482, align 1, !alias.scope !175, !noalias !176
  %1484 = load i8, i8* %1481, align 1, !alias.scope !175, !noalias !176
  %1485 = icmp eq i8 %1483, %1484
  br i1 %1485, label %1486, label %728, !prof !15

1486:                                             ; preds = %1480
  %1487 = add i64 %719, 3
  br i1 %665, label %728, label %1488

1488:                                             ; preds = %1486
  %1489 = getelementptr inbounds i8, i8* %720, i64 3
  %1490 = getelementptr inbounds i8, i8* %697, i64 %1487
  %1491 = load i8, i8* %1490, align 1, !alias.scope !175, !noalias !176
  %1492 = load i8, i8* %1489, align 1, !alias.scope !175, !noalias !176
  %1493 = icmp eq i8 %1491, %1492
  br i1 %1493, label %1494, label %728, !prof !15

1494:                                             ; preds = %1488
  %1495 = add i64 %719, 4
  br i1 %666, label %728, label %1496

1496:                                             ; preds = %1494
  %1497 = getelementptr inbounds i8, i8* %720, i64 4
  %1498 = getelementptr inbounds i8, i8* %697, i64 %1495
  %1499 = load i8, i8* %1498, align 1, !alias.scope !175, !noalias !176
  %1500 = load i8, i8* %1497, align 1, !alias.scope !175, !noalias !176
  %1501 = icmp eq i8 %1499, %1500
  br i1 %1501, label %1502, label %728, !prof !15

1502:                                             ; preds = %1496
  %1503 = add i64 %719, 5
  br i1 %667, label %728, label %1504

1504:                                             ; preds = %1502
  %1505 = getelementptr inbounds i8, i8* %720, i64 5
  %1506 = getelementptr inbounds i8, i8* %697, i64 %1503
  %1507 = load i8, i8* %1506, align 1, !alias.scope !175, !noalias !176
  %1508 = load i8, i8* %1505, align 1, !alias.scope !175, !noalias !176
  %1509 = icmp eq i8 %1507, %1508
  br i1 %1509, label %1510, label %728, !prof !15

1510:                                             ; preds = %1504
  %1511 = add i64 %719, 6
  br i1 %668, label %728, label %1512

1512:                                             ; preds = %1510
  %1513 = getelementptr inbounds i8, i8* %720, i64 6
  %1514 = getelementptr inbounds i8, i8* %697, i64 %1511
  %1515 = load i8, i8* %1514, align 1, !alias.scope !175, !noalias !176
  %1516 = load i8, i8* %1513, align 1, !alias.scope !175, !noalias !176
  %1517 = icmp eq i8 %1515, %1516
  %1518 = add i64 %719, 7
  %1519 = select i1 %1517, i64 %1518, i64 %1511, !prof !15
  br label %728

1520:                                             ; preds = %844
  %1521 = getelementptr inbounds i8, i8* %836, i64 1
  %1522 = getelementptr inbounds i8, i8* %637, i64 %845
  %1523 = load i8, i8* %1522, align 1, !alias.scope !175, !noalias !176
  %1524 = load i8, i8* %1521, align 1, !noalias !180
  %1525 = icmp eq i8 %1523, %1524
  br i1 %1525, label %1526, label %847, !prof !15

1526:                                             ; preds = %1520
  %1527 = add nuw nsw i64 %835, 2
  %1528 = icmp eq i64 %837, 2
  br i1 %1528, label %847, label %1529

1529:                                             ; preds = %1526
  %1530 = getelementptr inbounds i8, i8* %836, i64 2
  %1531 = getelementptr inbounds i8, i8* %637, i64 %1527
  %1532 = load i8, i8* %1531, align 1, !alias.scope !175, !noalias !176
  %1533 = load i8, i8* %1530, align 1, !noalias !180
  %1534 = icmp eq i8 %1532, %1533
  br i1 %1534, label %1535, label %847, !prof !15

1535:                                             ; preds = %1529
  %1536 = add nuw nsw i64 %835, 3
  %1537 = icmp eq i64 %837, 3
  br i1 %1537, label %847, label %1538

1538:                                             ; preds = %1535
  %1539 = getelementptr inbounds i8, i8* %836, i64 3
  %1540 = getelementptr inbounds i8, i8* %637, i64 %1536
  %1541 = load i8, i8* %1540, align 1, !alias.scope !175, !noalias !176
  %1542 = load i8, i8* %1539, align 1, !noalias !180
  %1543 = icmp eq i8 %1541, %1542
  br i1 %1543, label %1544, label %847, !prof !15

1544:                                             ; preds = %1538
  %1545 = add nuw nsw i64 %835, 4
  %1546 = icmp eq i64 %837, 4
  br i1 %1546, label %847, label %1547

1547:                                             ; preds = %1544
  %1548 = getelementptr inbounds i8, i8* %836, i64 4
  %1549 = getelementptr inbounds i8, i8* %637, i64 %1545
  %1550 = load i8, i8* %1549, align 1, !alias.scope !175, !noalias !176
  %1551 = load i8, i8* %1548, align 1, !noalias !180
  %1552 = icmp eq i8 %1550, %1551
  br i1 %1552, label %1553, label %847, !prof !15

1553:                                             ; preds = %1547
  %1554 = add nuw nsw i64 %835, 5
  %1555 = icmp eq i64 %837, 5
  br i1 %1555, label %847, label %1556

1556:                                             ; preds = %1553
  %1557 = getelementptr inbounds i8, i8* %836, i64 5
  %1558 = getelementptr inbounds i8, i8* %637, i64 %1554
  %1559 = load i8, i8* %1558, align 1, !alias.scope !175, !noalias !176
  %1560 = load i8, i8* %1557, align 1, !noalias !180
  %1561 = icmp eq i8 %1559, %1560
  br i1 %1561, label %1562, label %847, !prof !15

1562:                                             ; preds = %1556
  %1563 = add nuw nsw i64 %835, 6
  %1564 = icmp eq i64 %837, 6
  br i1 %1564, label %847, label %1565

1565:                                             ; preds = %1562
  %1566 = getelementptr inbounds i8, i8* %836, i64 6
  %1567 = getelementptr inbounds i8, i8* %637, i64 %1563
  %1568 = load i8, i8* %1567, align 1, !alias.scope !175, !noalias !176
  %1569 = load i8, i8* %1566, align 1, !noalias !180
  %1570 = icmp eq i8 %1568, %1569
  %1571 = add nuw nsw i64 %835, 7
  %1572 = select i1 %1570, i64 %1571, i64 %1563, !prof !15
  br label %847
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH6(i64, i64, i8* nocapture readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* readonly, i32*, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = add i64 %15, -16
  %17 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* %7, align 8
  %20 = add i64 %1, %0
  %21 = icmp ugt i64 %0, 7
  %22 = add i64 %20, -7
  %23 = select i1 %21, i64 %22, i64 %1
  %24 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 9
  %27 = select i1 %26, i64 64, i64 512
  %28 = add i64 %27, %1
  %29 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 20
  %30 = bitcast i16* %29 to i32*
  %31 = load i32, i32* %30, align 8, !alias.scope !219, !noalias !222
  %32 = icmp sgt i32 %31, 4
  br i1 %32, label %33, label %57

33:                                               ; preds = %11
  %34 = load i32, i32* %6, align 4, !alias.scope !224, !noalias !219
  %35 = getelementptr inbounds i32, i32* %6, i64 4
  %36 = insertelement <4 x i32> undef, i32 %34, i32 0
  %37 = shufflevector <4 x i32> %36, <4 x i32> undef, <4 x i32> zeroinitializer
  %38 = add nsw <4 x i32> %37, <i32 -1, i32 1, i32 -2, i32 2>
  %39 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> %38, <4 x i32>* %39, align 4, !alias.scope !224, !noalias !219
  %40 = add nsw i32 %34, -3
  %41 = getelementptr inbounds i32, i32* %6, i64 8
  store i32 %40, i32* %41, align 4, !alias.scope !224, !noalias !219
  %42 = add nsw i32 %34, 3
  %43 = getelementptr inbounds i32, i32* %6, i64 9
  store i32 %42, i32* %43, align 4, !alias.scope !224, !noalias !219
  %44 = icmp sgt i32 %31, 10
  br i1 %44, label %45, label %57

45:                                               ; preds = %33
  %46 = getelementptr inbounds i32, i32* %6, i64 1
  %47 = load i32, i32* %46, align 4, !alias.scope !224, !noalias !219
  %48 = getelementptr inbounds i32, i32* %6, i64 10
  %49 = insertelement <4 x i32> undef, i32 %47, i32 0
  %50 = shufflevector <4 x i32> %49, <4 x i32> undef, <4 x i32> zeroinitializer
  %51 = add nsw <4 x i32> %50, <i32 -1, i32 1, i32 -2, i32 2>
  %52 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %52, align 4, !alias.scope !224, !noalias !219
  %53 = add nsw i32 %47, -3
  %54 = getelementptr inbounds i32, i32* %6, i64 14
  store i32 %53, i32* %54, align 4, !alias.scope !224, !noalias !219
  %55 = add nsw i32 %47, 3
  %56 = getelementptr inbounds i32, i32* %6, i64 15
  store i32 %55, i32* %56, align 4, !alias.scope !224, !noalias !219
  br label %57

57:                                               ; preds = %11, %33, %45
  %58 = add i64 %1, 8
  %59 = icmp ult i64 %58, %20
  br i1 %59, label %60, label %1282

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 4
  %62 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 28
  %63 = bitcast i16* %62 to i16**
  %64 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 32
  %65 = bitcast i16* %64 to i32**
  %66 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 12
  %67 = bitcast i16* %66 to i64*
  %68 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 8
  %69 = bitcast i16* %68 to i32*
  %70 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 18
  %71 = bitcast i16* %70 to i32*
  %72 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %73 = bitcast i16* %72 to i64*
  %74 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 16
  %75 = bitcast i16* %74 to i32*
  %76 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 24
  %77 = bitcast i16* %76 to %struct.HasherCommon**
  %78 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 5
  %79 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 4
  %80 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 0
  %81 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 2
  %82 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 3
  %83 = shl nuw nsw i64 %27, 2
  %84 = getelementptr inbounds i32, i32* %6, i64 1
  %85 = getelementptr inbounds i32, i32* %6, i64 2
  %86 = getelementptr inbounds i32, i32* %6, i64 3
  %87 = getelementptr inbounds i32, i32* %6, i64 4
  %88 = getelementptr inbounds i32, i32* %6, i64 8
  %89 = getelementptr inbounds i32, i32* %6, i64 9
  %90 = getelementptr inbounds i32, i32* %6, i64 10
  %91 = getelementptr inbounds i32, i32* %6, i64 14
  %92 = getelementptr inbounds i32, i32* %6, i64 15
  %93 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %94 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  %95 = bitcast i32* %87 to <4 x i32>*
  %96 = bitcast i32* %90 to <4 x i32>*
  br label %97

97:                                               ; preds = %60, %1274
  %98 = phi i64 [ %0, %60 ], [ %1281, %1274 ]
  %99 = phi i64 [ %1, %60 ], [ %1278, %1274 ]
  %100 = phi %struct.Command* [ %8, %60 ], [ %1277, %1274 ]
  %101 = phi i64 [ %28, %60 ], [ %1276, %1274 ]
  %102 = phi i64 [ %19, %60 ], [ %1275, %1274 ]
  %103 = icmp ult i64 %99, %16
  %104 = select i1 %103, i64 %99, i64 %16
  %105 = add i64 %99, %18
  %106 = icmp ult i64 %105, %16
  %107 = select i1 %106, i64 %105, i64 %16
  %108 = load i64, i64* %61, align 8
  %109 = load i16*, i16** %63, align 8, !alias.scope !227, !noalias !230
  %110 = load i32*, i32** %65, align 8, !alias.scope !227, !noalias !230
  %111 = and i64 %99, %3
  %112 = load i32, i32* %30, align 8, !alias.scope !227, !noalias !230
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %223, label %114

114:                                              ; preds = %97
  %115 = getelementptr inbounds i8, i8* %2, i64 %111
  %116 = lshr i64 %98, 3
  %117 = icmp eq i64 %116, 0
  %118 = and i64 %98, 7
  %119 = icmp eq i64 %118, 0
  %120 = sext i32 %112 to i64
  %121 = icmp eq i64 %118, 1
  %122 = icmp eq i64 %118, 2
  %123 = icmp eq i64 %118, 3
  %124 = icmp eq i64 %118, 4
  %125 = icmp eq i64 %118, 5
  %126 = icmp eq i64 %118, 6
  br label %127

127:                                              ; preds = %215, %114
  %128 = phi i64 [ 2020, %114 ], [ %216, %215 ]
  %129 = phi i64 [ 0, %114 ], [ %217, %215 ]
  %130 = phi i64 [ 0, %114 ], [ %218, %215 ]
  %131 = phi i64 [ 0, %114 ], [ %221, %215 ]
  %132 = phi i64 [ 0, %114 ], [ %220, %215 ]
  %133 = phi i64 [ 2020, %114 ], [ %219, %215 ]
  %134 = getelementptr inbounds i32, i32* %6, i64 %131
  %135 = load i32, i32* %134, align 4, !alias.scope !234, !noalias !235
  %136 = sext i32 %135 to i64
  %137 = sub i64 %99, %136
  %138 = icmp uge i64 %137, %99
  %139 = icmp ult i64 %104, %136
  %140 = or i1 %139, %138
  br i1 %140, label %215, label %141, !prof !159

141:                                              ; preds = %127
  %142 = and i64 %137, %3
  %143 = add i64 %132, %111
  %144 = icmp ugt i64 %143, %3
  br i1 %144, label %215, label %145

145:                                              ; preds = %141
  %146 = add i64 %142, %132
  %147 = icmp ugt i64 %146, %3
  br i1 %147, label %215, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds i8, i8* %2, i64 %143
  %150 = load i8, i8* %149, align 1, !alias.scope !236, !noalias !237
  %151 = getelementptr inbounds i8, i8* %2, i64 %146
  %152 = load i8, i8* %151, align 1, !alias.scope !236, !noalias !237
  %153 = icmp eq i8 %150, %152
  br i1 %153, label %154, label %215

154:                                              ; preds = %148
  %155 = getelementptr inbounds i8, i8* %2, i64 %142
  br i1 %117, label %176, label %156, !prof !13

156:                                              ; preds = %154, %166
  %157 = phi i64 [ %169, %166 ], [ %116, %154 ]
  %158 = phi i8* [ %167, %166 ], [ %115, %154 ]
  %159 = phi i64 [ %168, %166 ], [ 0, %154 ]
  %160 = bitcast i8* %158 to i64*
  %161 = load i64, i64* %160, align 8, !alias.scope !236, !noalias !237
  %162 = getelementptr inbounds i8, i8* %155, i64 %159
  %163 = bitcast i8* %162 to i64*
  %164 = load i64, i64* %163, align 8, !alias.scope !236, !noalias !237
  %165 = icmp eq i64 %161, %164
  br i1 %165, label %166, label %171, !prof !13

166:                                              ; preds = %156
  %167 = getelementptr inbounds i8, i8* %158, i64 8
  %168 = add nuw i64 %159, 8
  %169 = add nsw i64 %157, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %176, label %156, !prof !13

171:                                              ; preds = %156
  %172 = xor i64 %164, %161
  %173 = tail call i64 @llvm.cttz.i64(i64 %172, i1 true) #4, !range !14
  %174 = lshr i64 %173, 3
  %175 = or i64 %174, %159
  br label %186

176:                                              ; preds = %166, %154
  %177 = phi i64 [ 0, %154 ], [ %168, %166 ]
  %178 = phi i8* [ %115, %154 ], [ %167, %166 ]
  br i1 %119, label %186, label %179

179:                                              ; preds = %176
  %180 = getelementptr inbounds i8, i8* %155, i64 %177
  %181 = load i8, i8* %180, align 1, !alias.scope !236, !noalias !237
  %182 = load i8, i8* %178, align 1, !alias.scope !236, !noalias !237
  %183 = icmp eq i8 %181, %182
  br i1 %183, label %184, label %186, !prof !15

184:                                              ; preds = %179
  %185 = add i64 %177, 1
  br i1 %121, label %186, label %1293

186:                                              ; preds = %1333, %184, %179, %1293, %1299, %1301, %1307, %1309, %1315, %1317, %1323, %1325, %1331, %176, %171
  %187 = phi i64 [ %175, %171 ], [ %177, %176 ], [ %177, %179 ], [ %185, %184 ], [ %185, %1293 ], [ %1300, %1299 ], [ %1300, %1301 ], [ %1308, %1307 ], [ %1308, %1309 ], [ %1316, %1315 ], [ %1316, %1317 ], [ %1324, %1323 ], [ %1324, %1325 ], [ %1332, %1331 ], [ %1340, %1333 ]
  %188 = icmp ugt i64 %187, 2
  br i1 %188, label %193, label %189

189:                                              ; preds = %186
  %190 = icmp eq i64 %187, 2
  %191 = icmp ult i64 %131, 2
  %192 = and i1 %191, %190
  br i1 %192, label %193, label %215

193:                                              ; preds = %189, %186
  %194 = mul i64 %187, 135
  %195 = add i64 %194, 1935
  %196 = icmp ult i64 %133, %195
  br i1 %196, label %197, label %215

197:                                              ; preds = %193
  %198 = icmp eq i64 %131, 0
  br i1 %198, label %207, label %199

199:                                              ; preds = %197
  %200 = trunc i64 %131 to i32
  %201 = and i32 %200, 14
  %202 = lshr i32 117264, %201
  %203 = and i32 %202, 14
  %204 = add nuw nsw i32 %203, 39
  %205 = zext i32 %204 to i64
  %206 = sub i64 %195, %205
  br label %207

207:                                              ; preds = %199, %197
  %208 = phi i64 [ %206, %199 ], [ %195, %197 ]
  %209 = icmp ult i64 %133, %208
  %210 = select i1 %209, i64 %208, i64 %128
  %211 = select i1 %209, i64 %136, i64 %129
  %212 = select i1 %209, i64 %187, i64 %130
  %213 = select i1 %209, i64 %208, i64 %133
  %214 = select i1 %209, i64 %187, i64 %132
  br label %215

215:                                              ; preds = %207, %193, %189, %148, %145, %141, %127
  %216 = phi i64 [ %128, %127 ], [ %128, %141 ], [ %128, %145 ], [ %128, %193 ], [ %128, %189 ], [ %128, %148 ], [ %210, %207 ]
  %217 = phi i64 [ %129, %127 ], [ %129, %141 ], [ %129, %145 ], [ %129, %193 ], [ %129, %189 ], [ %129, %148 ], [ %211, %207 ]
  %218 = phi i64 [ %130, %127 ], [ %130, %141 ], [ %130, %145 ], [ %130, %193 ], [ %130, %189 ], [ %130, %148 ], [ %212, %207 ]
  %219 = phi i64 [ %133, %127 ], [ %133, %141 ], [ %133, %145 ], [ %133, %193 ], [ %133, %189 ], [ %133, %148 ], [ %213, %207 ]
  %220 = phi i64 [ %132, %127 ], [ %132, %141 ], [ %132, %145 ], [ %132, %193 ], [ %132, %189 ], [ %132, %148 ], [ %214, %207 ]
  %221 = add nuw i64 %131, 1
  %222 = icmp ult i64 %221, %120
  br i1 %222, label %127, label %223

223:                                              ; preds = %215, %97
  %224 = phi i64 [ 2020, %97 ], [ %216, %215 ]
  %225 = phi i64 [ 0, %97 ], [ %217, %215 ]
  %226 = phi i64 [ 0, %97 ], [ %218, %215 ]
  %227 = phi i64 [ 2020, %97 ], [ %219, %215 ]
  %228 = phi i64 [ 0, %97 ], [ %220, %215 ]
  %229 = getelementptr inbounds i8, i8* %2, i64 %111
  %230 = load i64, i64* %67, align 8, !alias.scope !227, !noalias !230
  %231 = load i32, i32* %69, align 8, !alias.scope !227, !noalias !230
  %232 = bitcast i8* %229 to i64*
  %233 = load i64, i64* %232, align 8, !alias.scope !238, !noalias !237
  %234 = and i64 %233, %230
  %235 = mul i64 %234, 2297779722762296275
  %236 = zext i32 %231 to i64
  %237 = lshr i64 %235, %236
  %238 = trunc i64 %237 to i32
  %239 = load i32, i32* %71, align 4, !alias.scope !227, !noalias !230
  %240 = shl i32 %238, %239
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i32, i32* %110, i64 %241
  %243 = and i64 %237, 4294967295
  %244 = getelementptr inbounds i16, i16* %109, i64 %243
  %245 = load i16, i16* %244, align 2, !noalias !241
  %246 = zext i16 %245 to i64
  %247 = load i64, i64* %73, align 8, !alias.scope !227, !noalias !230
  %248 = tail call i64 @llvm.usub.sat.i64(i64 %246, i64 %247) #4
  %249 = icmp ult i64 %248, %246
  br i1 %249, label %252, label %250

250:                                              ; preds = %223
  %251 = load i32, i32* %75, align 8, !alias.scope !227, !noalias !230
  br label %349

252:                                              ; preds = %223
  %253 = lshr i64 %98, 3
  %254 = icmp eq i64 %253, 0
  %255 = and i64 %98, 7
  %256 = icmp eq i64 %255, 0
  %257 = load i32, i32* %75, align 8, !alias.scope !227, !noalias !230
  %258 = zext i32 %257 to i64
  %259 = icmp eq i64 %255, 1
  %260 = icmp eq i64 %255, 2
  %261 = icmp eq i64 %255, 3
  %262 = icmp eq i64 %255, 4
  %263 = icmp eq i64 %255, 5
  %264 = icmp eq i64 %255, 6
  br label %265

265:                                              ; preds = %342, %252
  %266 = phi i64 [ %224, %252 ], [ %343, %342 ]
  %267 = phi i64 [ %225, %252 ], [ %344, %342 ]
  %268 = phi i64 [ %226, %252 ], [ %345, %342 ]
  %269 = phi i64 [ %246, %252 ], [ %272, %342 ]
  %270 = phi i64 [ %228, %252 ], [ %347, %342 ]
  %271 = phi i64 [ %227, %252 ], [ %346, %342 ]
  %272 = add i64 %269, -1
  %273 = and i64 %272, %258
  %274 = getelementptr inbounds i32, i32* %242, i64 %273
  %275 = load i32, i32* %274, align 4, !noalias !241
  %276 = zext i32 %275 to i64
  %277 = sub i64 %99, %276
  %278 = icmp ugt i64 %277, %104
  br i1 %278, label %349, label %279, !prof !13

279:                                              ; preds = %265
  %280 = and i64 %276, %3
  %281 = add i64 %270, %111
  %282 = icmp ugt i64 %281, %3
  br i1 %282, label %342, label %283

283:                                              ; preds = %279
  %284 = add i64 %280, %270
  %285 = icmp ugt i64 %284, %3
  br i1 %285, label %342, label %286

286:                                              ; preds = %283
  %287 = getelementptr inbounds i8, i8* %2, i64 %281
  %288 = load i8, i8* %287, align 1, !alias.scope !236, !noalias !237
  %289 = getelementptr inbounds i8, i8* %2, i64 %284
  %290 = load i8, i8* %289, align 1, !alias.scope !236, !noalias !237
  %291 = icmp eq i8 %288, %290
  br i1 %291, label %292, label %342

292:                                              ; preds = %286
  %293 = getelementptr inbounds i8, i8* %2, i64 %280
  br i1 %254, label %314, label %294, !prof !13

294:                                              ; preds = %292, %304
  %295 = phi i64 [ %307, %304 ], [ %253, %292 ]
  %296 = phi i8* [ %305, %304 ], [ %229, %292 ]
  %297 = phi i64 [ %306, %304 ], [ 0, %292 ]
  %298 = bitcast i8* %296 to i64*
  %299 = load i64, i64* %298, align 8, !alias.scope !236, !noalias !237
  %300 = getelementptr inbounds i8, i8* %293, i64 %297
  %301 = bitcast i8* %300 to i64*
  %302 = load i64, i64* %301, align 8, !alias.scope !236, !noalias !237
  %303 = icmp eq i64 %299, %302
  br i1 %303, label %304, label %309, !prof !13

304:                                              ; preds = %294
  %305 = getelementptr inbounds i8, i8* %296, i64 8
  %306 = add nuw i64 %297, 8
  %307 = add nsw i64 %295, -1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %314, label %294, !prof !13

309:                                              ; preds = %294
  %310 = xor i64 %302, %299
  %311 = tail call i64 @llvm.cttz.i64(i64 %310, i1 true) #4, !range !14
  %312 = lshr i64 %311, 3
  %313 = or i64 %312, %297
  br label %324

314:                                              ; preds = %304, %292
  %315 = phi i64 [ 0, %292 ], [ %306, %304 ]
  %316 = phi i8* [ %229, %292 ], [ %305, %304 ]
  br i1 %256, label %324, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds i8, i8* %293, i64 %315
  %319 = load i8, i8* %318, align 1, !alias.scope !236, !noalias !237
  %320 = load i8, i8* %316, align 1, !alias.scope !236, !noalias !237
  %321 = icmp eq i8 %319, %320
  br i1 %321, label %322, label %324, !prof !15

322:                                              ; preds = %317
  %323 = add i64 %315, 1
  br i1 %259, label %324, label %1341

324:                                              ; preds = %1381, %322, %317, %1341, %1347, %1349, %1355, %1357, %1363, %1365, %1371, %1373, %1379, %314, %309
  %325 = phi i64 [ %313, %309 ], [ %315, %314 ], [ %315, %317 ], [ %323, %322 ], [ %323, %1341 ], [ %1348, %1347 ], [ %1348, %1349 ], [ %1356, %1355 ], [ %1356, %1357 ], [ %1364, %1363 ], [ %1364, %1365 ], [ %1372, %1371 ], [ %1372, %1373 ], [ %1380, %1379 ], [ %1388, %1381 ]
  %326 = icmp ugt i64 %325, 3
  br i1 %326, label %327, label %342

327:                                              ; preds = %324
  %328 = mul i64 %325, 135
  %329 = trunc i64 %277 to i32
  %330 = tail call i32 @llvm.ctlz.i32(i32 %329, i1 true) #4, !range !18
  %331 = xor i32 %330, 31
  %332 = mul nsw i32 %331, -30
  %333 = add nsw i32 %332, 1920
  %334 = zext i32 %333 to i64
  %335 = add i64 %328, %334
  %336 = icmp ult i64 %271, %335
  %337 = select i1 %336, i64 %335, i64 %266
  %338 = select i1 %336, i64 %277, i64 %267
  %339 = select i1 %336, i64 %325, i64 %268
  %340 = select i1 %336, i64 %335, i64 %271
  %341 = select i1 %336, i64 %325, i64 %270
  br label %342

342:                                              ; preds = %327, %324, %286, %283, %279
  %343 = phi i64 [ %266, %279 ], [ %266, %283 ], [ %266, %324 ], [ %266, %286 ], [ %337, %327 ]
  %344 = phi i64 [ %267, %279 ], [ %267, %283 ], [ %267, %324 ], [ %267, %286 ], [ %338, %327 ]
  %345 = phi i64 [ %268, %279 ], [ %268, %283 ], [ %268, %324 ], [ %268, %286 ], [ %339, %327 ]
  %346 = phi i64 [ %271, %279 ], [ %271, %283 ], [ %271, %324 ], [ %271, %286 ], [ %340, %327 ]
  %347 = phi i64 [ %270, %279 ], [ %270, %283 ], [ %270, %324 ], [ %270, %286 ], [ %341, %327 ]
  %348 = icmp ugt i64 %272, %248
  br i1 %348, label %265, label %349

349:                                              ; preds = %342, %265, %250
  %350 = phi i64 [ %224, %250 ], [ %343, %342 ], [ %266, %265 ]
  %351 = phi i64 [ %225, %250 ], [ %344, %342 ], [ %267, %265 ]
  %352 = phi i64 [ %226, %250 ], [ %345, %342 ], [ %268, %265 ]
  %353 = phi i64 [ %227, %250 ], [ %346, %342 ], [ %271, %265 ]
  %354 = phi i32 [ %251, %250 ], [ %257, %265 ], [ %257, %342 ]
  %355 = trunc i64 %99 to i32
  %356 = zext i16 %245 to i32
  %357 = and i32 %354, %356
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds i32, i32* %242, i64 %358
  store i32 %355, i32* %359, align 4, !noalias !241
  %360 = load i16, i16* %244, align 2, !noalias !241
  %361 = add i16 %360, 1
  store i16 %361, i16* %244, align 2, !noalias !241
  %362 = icmp eq i64 %353, 2020
  br i1 %362, label %363, label %491

363:                                              ; preds = %349
  %364 = load %struct.HasherCommon*, %struct.HasherCommon** %77, align 8, !alias.scope !227, !noalias !230
  %365 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %364, i64 0, i32 2
  %366 = load i64, i64* %365, align 8, !noalias !241
  %367 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %364, i64 0, i32 1
  %368 = load i64, i64* %367, align 8, !noalias !241
  %369 = lshr i64 %368, 7
  %370 = icmp ult i64 %366, %369
  br i1 %370, label %491, label %371

371:                                              ; preds = %363
  %372 = mul i64 %233, 506832829
  %373 = lshr i64 %372, 17
  %374 = and i64 %373, 32766
  %375 = add i64 %107, 1
  br label %376

376:                                              ; preds = %481, %371
  %377 = phi i32 [ 0, %371 ], [ %482, %481 ]
  %378 = phi i64 [ %350, %371 ], [ %483, %481 ]
  %379 = phi i64 [ %351, %371 ], [ %484, %481 ]
  %380 = phi i64 [ %352, %371 ], [ %485, %481 ]
  %381 = phi i64 [ %366, %371 ], [ %486, %481 ]
  %382 = phi i64 [ 2020, %371 ], [ %487, %481 ]
  %383 = phi i64 [ %368, %371 ], [ %386, %481 ]
  %384 = phi i64 [ %374, %371 ], [ %489, %481 ]
  %385 = phi i64 [ 0, %371 ], [ %488, %481 ]
  %386 = add i64 %383, 1
  store i64 %386, i64* %367, align 8, !noalias !241
  %387 = load i8*, i8** %78, align 8, !noalias !241
  %388 = getelementptr inbounds i8, i8* %387, i64 %384
  %389 = load i8, i8* %388, align 1, !noalias !241
  %390 = icmp eq i8 %389, 0
  br i1 %390, label %481, label %391

391:                                              ; preds = %376
  %392 = zext i8 %389 to i64
  %393 = load i16*, i16** %79, align 8, !noalias !241
  %394 = getelementptr inbounds i16, i16* %393, i64 %384
  %395 = load i16, i16* %394, align 2, !noalias !241
  %396 = zext i16 %395 to i64
  %397 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %80, align 8, !noalias !241
  %398 = icmp ult i64 %98, %392
  br i1 %398, label %481, label %399

399:                                              ; preds = %391
  %400 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %397, i64 0, i32 1, i64 %392
  %401 = load i32, i32* %400, align 4, !noalias !241
  %402 = zext i32 %401 to i64
  %403 = mul nuw nsw i64 %396, %392
  %404 = add nuw nsw i64 %403, %402
  %405 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %397, i64 0, i32 3
  %406 = load i8*, i8** %405, align 8, !noalias !241
  %407 = getelementptr inbounds i8, i8* %406, i64 %404
  %408 = lshr i64 %392, 3
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %430, label %410, !prof !13

410:                                              ; preds = %399, %420
  %411 = phi i64 [ %423, %420 ], [ %408, %399 ]
  %412 = phi i8* [ %421, %420 ], [ %407, %399 ]
  %413 = phi i64 [ %422, %420 ], [ 0, %399 ]
  %414 = bitcast i8* %412 to i64*
  %415 = load i64, i64* %414, align 8, !noalias !241
  %416 = getelementptr inbounds i8, i8* %229, i64 %413
  %417 = bitcast i8* %416 to i64*
  %418 = load i64, i64* %417, align 8, !alias.scope !236, !noalias !237
  %419 = icmp eq i64 %415, %418
  br i1 %419, label %420, label %425, !prof !13

420:                                              ; preds = %410
  %421 = getelementptr inbounds i8, i8* %412, i64 8
  %422 = add nuw nsw i64 %413, 8
  %423 = add nsw i64 %411, -1
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %430, label %410, !prof !13

425:                                              ; preds = %410
  %426 = xor i64 %418, %415
  %427 = tail call i64 @llvm.cttz.i64(i64 %426, i1 true) #4, !range !14
  %428 = lshr i64 %427, 3
  %429 = or i64 %428, %413
  br label %443

430:                                              ; preds = %420, %399
  %431 = phi i64 [ 0, %399 ], [ %422, %420 ]
  %432 = phi i8* [ %407, %399 ], [ %421, %420 ]
  %433 = and i64 %392, 7
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %443, label %435

435:                                              ; preds = %430
  %436 = getelementptr inbounds i8, i8* %229, i64 %431
  %437 = load i8, i8* %436, align 1, !alias.scope !236, !noalias !237
  %438 = load i8, i8* %432, align 1, !noalias !241
  %439 = icmp eq i8 %437, %438
  br i1 %439, label %440, label %443, !prof !15

440:                                              ; preds = %435
  %441 = add nuw nsw i64 %431, 1
  %442 = icmp eq i64 %433, 1
  br i1 %442, label %443, label %1389

443:                                              ; preds = %1434, %440, %435, %1389, %1395, %1398, %1404, %1407, %1413, %1416, %1422, %1425, %1431, %430, %425
  %444 = phi i64 [ %429, %425 ], [ %431, %430 ], [ %431, %435 ], [ %441, %440 ], [ %441, %1389 ], [ %1396, %1395 ], [ %1396, %1398 ], [ %1405, %1404 ], [ %1405, %1407 ], [ %1414, %1413 ], [ %1414, %1416 ], [ %1423, %1422 ], [ %1423, %1425 ], [ %1432, %1431 ], [ %1441, %1434 ]
  %445 = load i32, i32* %81, align 4, !noalias !241
  %446 = zext i32 %445 to i64
  %447 = add i64 %444, %446
  %448 = icmp ule i64 %447, %392
  %449 = icmp eq i64 %444, 0
  %450 = or i1 %449, %448
  br i1 %450, label %481, label %451

451:                                              ; preds = %443
  %452 = sub i64 %392, %444
  %453 = shl i64 %452, 2
  %454 = load i64, i64* %82, align 8, !noalias !241
  %455 = mul i64 %452, 6
  %456 = lshr i64 %454, %455
  %457 = and i64 %456, 63
  %458 = add i64 %457, %453
  %459 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %397, i64 0, i32 0, i64 %392
  %460 = load i8, i8* %459, align 1, !noalias !241
  %461 = zext i8 %460 to i64
  %462 = shl i64 %458, %461
  %463 = add i64 %375, %396
  %464 = add i64 %463, %462
  %465 = icmp ugt i64 %464, %108
  br i1 %465, label %481, label %466

466:                                              ; preds = %451
  %467 = mul i64 %444, 135
  %468 = add i64 %467, 1920
  %469 = trunc i64 %464 to i32
  %470 = tail call i32 @llvm.ctlz.i32(i32 %469, i1 true) #4, !range !18
  %471 = xor i32 %470, 31
  %472 = mul nuw nsw i32 %471, 30
  %473 = zext i32 %472 to i64
  %474 = sub i64 %468, %473
  %475 = icmp ult i64 %474, %382
  br i1 %475, label %481, label %476

476:                                              ; preds = %466
  %477 = zext i8 %389 to i32
  %478 = trunc i64 %444 to i32
  %479 = sub nsw i32 %477, %478
  %480 = add i64 %381, 1
  store i64 %480, i64* %365, align 8, !noalias !241
  br label %481

481:                                              ; preds = %476, %466, %451, %443, %391, %376
  %482 = phi i32 [ %377, %376 ], [ %377, %391 ], [ %377, %443 ], [ %377, %451 ], [ %377, %466 ], [ %479, %476 ]
  %483 = phi i64 [ %378, %376 ], [ %378, %391 ], [ %378, %443 ], [ %378, %451 ], [ %378, %466 ], [ %474, %476 ]
  %484 = phi i64 [ %379, %376 ], [ %379, %391 ], [ %379, %443 ], [ %379, %451 ], [ %379, %466 ], [ %464, %476 ]
  %485 = phi i64 [ %380, %376 ], [ %380, %391 ], [ %380, %443 ], [ %380, %451 ], [ %380, %466 ], [ %444, %476 ]
  %486 = phi i64 [ %381, %376 ], [ %381, %391 ], [ %381, %443 ], [ %381, %451 ], [ %381, %466 ], [ %480, %476 ]
  %487 = phi i64 [ %382, %376 ], [ %382, %391 ], [ %382, %443 ], [ %382, %451 ], [ %382, %466 ], [ %474, %476 ]
  %488 = add nuw nsw i64 %385, 1
  %489 = add nuw nsw i64 %384, 1
  %490 = icmp eq i64 %488, 2
  br i1 %490, label %491, label %376

491:                                              ; preds = %481, %349, %363
  %492 = phi i32 [ 0, %363 ], [ 0, %349 ], [ %482, %481 ]
  %493 = phi i64 [ %350, %363 ], [ %350, %349 ], [ %483, %481 ]
  %494 = phi i64 [ %351, %363 ], [ %351, %349 ], [ %484, %481 ]
  %495 = phi i64 [ %352, %363 ], [ %352, %349 ], [ %485, %481 ]
  %496 = icmp ugt i64 %493, 2020
  br i1 %496, label %497, label %1189

497:                                              ; preds = %491, %913
  %498 = phi i32 [ %905, %913 ], [ %492, %491 ]
  %499 = phi i64 [ %906, %913 ], [ %493, %491 ]
  %500 = phi i64 [ %907, %913 ], [ %494, %491 ]
  %501 = phi i64 [ %908, %913 ], [ %495, %491 ]
  %502 = phi i64 [ %914, %913 ], [ %102, %491 ]
  %503 = phi i64 [ %506, %913 ], [ %98, %491 ]
  %504 = phi i32 [ %915, %913 ], [ 0, %491 ]
  %505 = phi i64 [ %515, %913 ], [ %99, %491 ]
  %506 = add i64 %503, -1
  %507 = load i32, i32* %24, align 4
  %508 = icmp slt i32 %507, 5
  br i1 %508, label %509, label %513

509:                                              ; preds = %497
  %510 = add i64 %501, -1
  %511 = icmp ult i64 %510, %506
  %512 = select i1 %511, i64 %510, i64 %506
  br label %513

513:                                              ; preds = %497, %509
  %514 = phi i64 [ %512, %509 ], [ 0, %497 ]
  %515 = add i64 %505, 1
  %516 = icmp ult i64 %515, %16
  %517 = select i1 %516, i64 %515, i64 %16
  %518 = add i64 %515, %18
  %519 = icmp ult i64 %518, %16
  %520 = select i1 %519, i64 %518, i64 %16
  %521 = load i64, i64* %61, align 8
  %522 = load i16*, i16** %63, align 8, !alias.scope !242, !noalias !245
  %523 = load i32*, i32** %65, align 8, !alias.scope !242, !noalias !245
  %524 = and i64 %515, %3
  %525 = load i32, i32* %30, align 8, !alias.scope !242, !noalias !245
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %636, label %527

527:                                              ; preds = %513
  %528 = getelementptr inbounds i8, i8* %2, i64 %524
  %529 = lshr i64 %506, 3
  %530 = icmp eq i64 %529, 0
  %531 = and i64 %506, 7
  %532 = icmp eq i64 %531, 0
  %533 = sext i32 %525 to i64
  %534 = icmp eq i64 %531, 1
  %535 = icmp eq i64 %531, 2
  %536 = icmp eq i64 %531, 3
  %537 = icmp eq i64 %531, 4
  %538 = icmp eq i64 %531, 5
  %539 = icmp eq i64 %531, 6
  br label %540

540:                                              ; preds = %628, %527
  %541 = phi i64 [ 2020, %527 ], [ %629, %628 ]
  %542 = phi i64 [ 0, %527 ], [ %630, %628 ]
  %543 = phi i64 [ 0, %527 ], [ %631, %628 ]
  %544 = phi i64 [ 0, %527 ], [ %634, %628 ]
  %545 = phi i64 [ %514, %527 ], [ %633, %628 ]
  %546 = phi i64 [ 2020, %527 ], [ %632, %628 ]
  %547 = getelementptr inbounds i32, i32* %6, i64 %544
  %548 = load i32, i32* %547, align 4, !alias.scope !249, !noalias !250
  %549 = sext i32 %548 to i64
  %550 = sub i64 %515, %549
  %551 = icmp uge i64 %550, %515
  %552 = icmp ult i64 %517, %549
  %553 = or i1 %552, %551
  br i1 %553, label %628, label %554, !prof !159

554:                                              ; preds = %540
  %555 = and i64 %550, %3
  %556 = add i64 %545, %524
  %557 = icmp ugt i64 %556, %3
  br i1 %557, label %628, label %558

558:                                              ; preds = %554
  %559 = add i64 %555, %545
  %560 = icmp ugt i64 %559, %3
  br i1 %560, label %628, label %561

561:                                              ; preds = %558
  %562 = getelementptr inbounds i8, i8* %2, i64 %556
  %563 = load i8, i8* %562, align 1, !alias.scope !251, !noalias !252
  %564 = getelementptr inbounds i8, i8* %2, i64 %559
  %565 = load i8, i8* %564, align 1, !alias.scope !251, !noalias !252
  %566 = icmp eq i8 %563, %565
  br i1 %566, label %567, label %628

567:                                              ; preds = %561
  %568 = getelementptr inbounds i8, i8* %2, i64 %555
  br i1 %530, label %589, label %569, !prof !13

569:                                              ; preds = %567, %579
  %570 = phi i64 [ %582, %579 ], [ %529, %567 ]
  %571 = phi i8* [ %580, %579 ], [ %528, %567 ]
  %572 = phi i64 [ %581, %579 ], [ 0, %567 ]
  %573 = bitcast i8* %571 to i64*
  %574 = load i64, i64* %573, align 8, !alias.scope !251, !noalias !252
  %575 = getelementptr inbounds i8, i8* %568, i64 %572
  %576 = bitcast i8* %575 to i64*
  %577 = load i64, i64* %576, align 8, !alias.scope !251, !noalias !252
  %578 = icmp eq i64 %574, %577
  br i1 %578, label %579, label %584, !prof !13

579:                                              ; preds = %569
  %580 = getelementptr inbounds i8, i8* %571, i64 8
  %581 = add nuw i64 %572, 8
  %582 = add nsw i64 %570, -1
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %589, label %569, !prof !13

584:                                              ; preds = %569
  %585 = xor i64 %577, %574
  %586 = tail call i64 @llvm.cttz.i64(i64 %585, i1 true) #4, !range !14
  %587 = lshr i64 %586, 3
  %588 = or i64 %587, %572
  br label %599

589:                                              ; preds = %579, %567
  %590 = phi i64 [ 0, %567 ], [ %581, %579 ]
  %591 = phi i8* [ %528, %567 ], [ %580, %579 ]
  br i1 %532, label %599, label %592

592:                                              ; preds = %589
  %593 = getelementptr inbounds i8, i8* %568, i64 %590
  %594 = load i8, i8* %593, align 1, !alias.scope !251, !noalias !252
  %595 = load i8, i8* %591, align 1, !alias.scope !251, !noalias !252
  %596 = icmp eq i8 %594, %595
  br i1 %596, label %597, label %599, !prof !15

597:                                              ; preds = %592
  %598 = add i64 %590, 1
  br i1 %534, label %599, label %1442

599:                                              ; preds = %1482, %597, %592, %1442, %1448, %1450, %1456, %1458, %1464, %1466, %1472, %1474, %1480, %589, %584
  %600 = phi i64 [ %588, %584 ], [ %590, %589 ], [ %590, %592 ], [ %598, %597 ], [ %598, %1442 ], [ %1449, %1448 ], [ %1449, %1450 ], [ %1457, %1456 ], [ %1457, %1458 ], [ %1465, %1464 ], [ %1465, %1466 ], [ %1473, %1472 ], [ %1473, %1474 ], [ %1481, %1480 ], [ %1489, %1482 ]
  %601 = icmp ugt i64 %600, 2
  br i1 %601, label %606, label %602

602:                                              ; preds = %599
  %603 = icmp eq i64 %600, 2
  %604 = icmp ult i64 %544, 2
  %605 = and i1 %604, %603
  br i1 %605, label %606, label %628

606:                                              ; preds = %602, %599
  %607 = mul i64 %600, 135
  %608 = add i64 %607, 1935
  %609 = icmp ult i64 %546, %608
  br i1 %609, label %610, label %628

610:                                              ; preds = %606
  %611 = icmp eq i64 %544, 0
  br i1 %611, label %620, label %612

612:                                              ; preds = %610
  %613 = trunc i64 %544 to i32
  %614 = and i32 %613, 14
  %615 = lshr i32 117264, %614
  %616 = and i32 %615, 14
  %617 = add nuw nsw i32 %616, 39
  %618 = zext i32 %617 to i64
  %619 = sub i64 %608, %618
  br label %620

620:                                              ; preds = %612, %610
  %621 = phi i64 [ %619, %612 ], [ %608, %610 ]
  %622 = icmp ult i64 %546, %621
  %623 = select i1 %622, i64 %621, i64 %541
  %624 = select i1 %622, i64 %549, i64 %542
  %625 = select i1 %622, i64 %600, i64 %543
  %626 = select i1 %622, i64 %621, i64 %546
  %627 = select i1 %622, i64 %600, i64 %545
  br label %628

628:                                              ; preds = %620, %606, %602, %561, %558, %554, %540
  %629 = phi i64 [ %541, %540 ], [ %541, %554 ], [ %541, %558 ], [ %541, %606 ], [ %541, %602 ], [ %541, %561 ], [ %623, %620 ]
  %630 = phi i64 [ %542, %540 ], [ %542, %554 ], [ %542, %558 ], [ %542, %606 ], [ %542, %602 ], [ %542, %561 ], [ %624, %620 ]
  %631 = phi i64 [ %543, %540 ], [ %543, %554 ], [ %543, %558 ], [ %543, %606 ], [ %543, %602 ], [ %543, %561 ], [ %625, %620 ]
  %632 = phi i64 [ %546, %540 ], [ %546, %554 ], [ %546, %558 ], [ %546, %606 ], [ %546, %602 ], [ %546, %561 ], [ %626, %620 ]
  %633 = phi i64 [ %545, %540 ], [ %545, %554 ], [ %545, %558 ], [ %545, %606 ], [ %545, %602 ], [ %545, %561 ], [ %627, %620 ]
  %634 = add nuw i64 %544, 1
  %635 = icmp ult i64 %634, %533
  br i1 %635, label %540, label %636

636:                                              ; preds = %628, %513
  %637 = phi i64 [ 2020, %513 ], [ %629, %628 ]
  %638 = phi i64 [ 0, %513 ], [ %630, %628 ]
  %639 = phi i64 [ 0, %513 ], [ %631, %628 ]
  %640 = phi i64 [ 2020, %513 ], [ %632, %628 ]
  %641 = phi i64 [ %514, %513 ], [ %633, %628 ]
  %642 = getelementptr inbounds i8, i8* %2, i64 %524
  %643 = load i64, i64* %67, align 8, !alias.scope !242, !noalias !245
  %644 = load i32, i32* %69, align 8, !alias.scope !242, !noalias !245
  %645 = bitcast i8* %642 to i64*
  %646 = load i64, i64* %645, align 8, !alias.scope !253, !noalias !252
  %647 = and i64 %646, %643
  %648 = mul i64 %647, 2297779722762296275
  %649 = zext i32 %644 to i64
  %650 = lshr i64 %648, %649
  %651 = trunc i64 %650 to i32
  %652 = load i32, i32* %71, align 4, !alias.scope !242, !noalias !245
  %653 = shl i32 %651, %652
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds i32, i32* %523, i64 %654
  %656 = and i64 %650, 4294967295
  %657 = getelementptr inbounds i16, i16* %522, i64 %656
  %658 = load i16, i16* %657, align 2, !noalias !256
  %659 = zext i16 %658 to i64
  %660 = load i64, i64* %73, align 8, !alias.scope !242, !noalias !245
  %661 = tail call i64 @llvm.usub.sat.i64(i64 %659, i64 %660) #4
  %662 = icmp ult i64 %661, %659
  br i1 %662, label %665, label %663

663:                                              ; preds = %636
  %664 = load i32, i32* %75, align 8, !alias.scope !242, !noalias !245
  br label %762

665:                                              ; preds = %636
  %666 = lshr i64 %506, 3
  %667 = icmp eq i64 %666, 0
  %668 = and i64 %506, 7
  %669 = icmp eq i64 %668, 0
  %670 = load i32, i32* %75, align 8, !alias.scope !242, !noalias !245
  %671 = zext i32 %670 to i64
  %672 = icmp eq i64 %668, 1
  %673 = icmp eq i64 %668, 2
  %674 = icmp eq i64 %668, 3
  %675 = icmp eq i64 %668, 4
  %676 = icmp eq i64 %668, 5
  %677 = icmp eq i64 %668, 6
  br label %678

678:                                              ; preds = %755, %665
  %679 = phi i64 [ %637, %665 ], [ %756, %755 ]
  %680 = phi i64 [ %638, %665 ], [ %757, %755 ]
  %681 = phi i64 [ %639, %665 ], [ %758, %755 ]
  %682 = phi i64 [ %659, %665 ], [ %685, %755 ]
  %683 = phi i64 [ %641, %665 ], [ %760, %755 ]
  %684 = phi i64 [ %640, %665 ], [ %759, %755 ]
  %685 = add i64 %682, -1
  %686 = and i64 %685, %671
  %687 = getelementptr inbounds i32, i32* %655, i64 %686
  %688 = load i32, i32* %687, align 4, !noalias !256
  %689 = zext i32 %688 to i64
  %690 = sub i64 %515, %689
  %691 = icmp ugt i64 %690, %517
  br i1 %691, label %762, label %692, !prof !13

692:                                              ; preds = %678
  %693 = and i64 %689, %3
  %694 = add i64 %683, %524
  %695 = icmp ugt i64 %694, %3
  br i1 %695, label %755, label %696

696:                                              ; preds = %692
  %697 = add i64 %693, %683
  %698 = icmp ugt i64 %697, %3
  br i1 %698, label %755, label %699

699:                                              ; preds = %696
  %700 = getelementptr inbounds i8, i8* %2, i64 %694
  %701 = load i8, i8* %700, align 1, !alias.scope !251, !noalias !252
  %702 = getelementptr inbounds i8, i8* %2, i64 %697
  %703 = load i8, i8* %702, align 1, !alias.scope !251, !noalias !252
  %704 = icmp eq i8 %701, %703
  br i1 %704, label %705, label %755

705:                                              ; preds = %699
  %706 = getelementptr inbounds i8, i8* %2, i64 %693
  br i1 %667, label %727, label %707, !prof !13

707:                                              ; preds = %705, %717
  %708 = phi i64 [ %720, %717 ], [ %666, %705 ]
  %709 = phi i8* [ %718, %717 ], [ %642, %705 ]
  %710 = phi i64 [ %719, %717 ], [ 0, %705 ]
  %711 = bitcast i8* %709 to i64*
  %712 = load i64, i64* %711, align 8, !alias.scope !251, !noalias !252
  %713 = getelementptr inbounds i8, i8* %706, i64 %710
  %714 = bitcast i8* %713 to i64*
  %715 = load i64, i64* %714, align 8, !alias.scope !251, !noalias !252
  %716 = icmp eq i64 %712, %715
  br i1 %716, label %717, label %722, !prof !13

717:                                              ; preds = %707
  %718 = getelementptr inbounds i8, i8* %709, i64 8
  %719 = add nuw i64 %710, 8
  %720 = add nsw i64 %708, -1
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %727, label %707, !prof !13

722:                                              ; preds = %707
  %723 = xor i64 %715, %712
  %724 = tail call i64 @llvm.cttz.i64(i64 %723, i1 true) #4, !range !14
  %725 = lshr i64 %724, 3
  %726 = or i64 %725, %710
  br label %737

727:                                              ; preds = %717, %705
  %728 = phi i64 [ 0, %705 ], [ %719, %717 ]
  %729 = phi i8* [ %642, %705 ], [ %718, %717 ]
  br i1 %669, label %737, label %730

730:                                              ; preds = %727
  %731 = getelementptr inbounds i8, i8* %706, i64 %728
  %732 = load i8, i8* %731, align 1, !alias.scope !251, !noalias !252
  %733 = load i8, i8* %729, align 1, !alias.scope !251, !noalias !252
  %734 = icmp eq i8 %732, %733
  br i1 %734, label %735, label %737, !prof !15

735:                                              ; preds = %730
  %736 = add i64 %728, 1
  br i1 %672, label %737, label %1490

737:                                              ; preds = %1530, %735, %730, %1490, %1496, %1498, %1504, %1506, %1512, %1514, %1520, %1522, %1528, %727, %722
  %738 = phi i64 [ %726, %722 ], [ %728, %727 ], [ %728, %730 ], [ %736, %735 ], [ %736, %1490 ], [ %1497, %1496 ], [ %1497, %1498 ], [ %1505, %1504 ], [ %1505, %1506 ], [ %1513, %1512 ], [ %1513, %1514 ], [ %1521, %1520 ], [ %1521, %1522 ], [ %1529, %1528 ], [ %1537, %1530 ]
  %739 = icmp ugt i64 %738, 3
  br i1 %739, label %740, label %755

740:                                              ; preds = %737
  %741 = mul i64 %738, 135
  %742 = trunc i64 %690 to i32
  %743 = tail call i32 @llvm.ctlz.i32(i32 %742, i1 true) #4, !range !18
  %744 = xor i32 %743, 31
  %745 = mul nsw i32 %744, -30
  %746 = add nsw i32 %745, 1920
  %747 = zext i32 %746 to i64
  %748 = add i64 %741, %747
  %749 = icmp ult i64 %684, %748
  %750 = select i1 %749, i64 %748, i64 %679
  %751 = select i1 %749, i64 %690, i64 %680
  %752 = select i1 %749, i64 %738, i64 %681
  %753 = select i1 %749, i64 %748, i64 %684
  %754 = select i1 %749, i64 %738, i64 %683
  br label %755

755:                                              ; preds = %740, %737, %699, %696, %692
  %756 = phi i64 [ %679, %692 ], [ %679, %696 ], [ %679, %737 ], [ %679, %699 ], [ %750, %740 ]
  %757 = phi i64 [ %680, %692 ], [ %680, %696 ], [ %680, %737 ], [ %680, %699 ], [ %751, %740 ]
  %758 = phi i64 [ %681, %692 ], [ %681, %696 ], [ %681, %737 ], [ %681, %699 ], [ %752, %740 ]
  %759 = phi i64 [ %684, %692 ], [ %684, %696 ], [ %684, %737 ], [ %684, %699 ], [ %753, %740 ]
  %760 = phi i64 [ %683, %692 ], [ %683, %696 ], [ %683, %737 ], [ %683, %699 ], [ %754, %740 ]
  %761 = icmp ugt i64 %685, %661
  br i1 %761, label %678, label %762

762:                                              ; preds = %755, %678, %663
  %763 = phi i64 [ %637, %663 ], [ %756, %755 ], [ %679, %678 ]
  %764 = phi i64 [ %638, %663 ], [ %757, %755 ], [ %680, %678 ]
  %765 = phi i64 [ %639, %663 ], [ %758, %755 ], [ %681, %678 ]
  %766 = phi i64 [ %640, %663 ], [ %759, %755 ], [ %684, %678 ]
  %767 = phi i32 [ %664, %663 ], [ %670, %678 ], [ %670, %755 ]
  %768 = trunc i64 %515 to i32
  %769 = zext i16 %658 to i32
  %770 = and i32 %767, %769
  %771 = zext i32 %770 to i64
  %772 = getelementptr inbounds i32, i32* %655, i64 %771
  store i32 %768, i32* %772, align 4, !noalias !256
  %773 = load i16, i16* %657, align 2, !noalias !256
  %774 = add i16 %773, 1
  store i16 %774, i16* %657, align 2, !noalias !256
  %775 = icmp eq i64 %766, 2020
  br i1 %775, label %776, label %904

776:                                              ; preds = %762
  %777 = load %struct.HasherCommon*, %struct.HasherCommon** %77, align 8, !alias.scope !242, !noalias !245
  %778 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %777, i64 0, i32 2
  %779 = load i64, i64* %778, align 8, !noalias !256
  %780 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %777, i64 0, i32 1
  %781 = load i64, i64* %780, align 8, !noalias !256
  %782 = lshr i64 %781, 7
  %783 = icmp ult i64 %779, %782
  br i1 %783, label %904, label %784

784:                                              ; preds = %776
  %785 = mul i64 %646, 506832829
  %786 = lshr i64 %785, 17
  %787 = and i64 %786, 32766
  %788 = add i64 %520, 1
  br label %789

789:                                              ; preds = %894, %784
  %790 = phi i32 [ 0, %784 ], [ %895, %894 ]
  %791 = phi i64 [ %763, %784 ], [ %896, %894 ]
  %792 = phi i64 [ %764, %784 ], [ %897, %894 ]
  %793 = phi i64 [ %765, %784 ], [ %898, %894 ]
  %794 = phi i64 [ %779, %784 ], [ %899, %894 ]
  %795 = phi i64 [ 2020, %784 ], [ %900, %894 ]
  %796 = phi i64 [ %781, %784 ], [ %799, %894 ]
  %797 = phi i64 [ %787, %784 ], [ %902, %894 ]
  %798 = phi i64 [ 0, %784 ], [ %901, %894 ]
  %799 = add i64 %796, 1
  store i64 %799, i64* %780, align 8, !noalias !256
  %800 = load i8*, i8** %78, align 8, !noalias !256
  %801 = getelementptr inbounds i8, i8* %800, i64 %797
  %802 = load i8, i8* %801, align 1, !noalias !256
  %803 = icmp eq i8 %802, 0
  br i1 %803, label %894, label %804

804:                                              ; preds = %789
  %805 = zext i8 %802 to i64
  %806 = load i16*, i16** %79, align 8, !noalias !256
  %807 = getelementptr inbounds i16, i16* %806, i64 %797
  %808 = load i16, i16* %807, align 2, !noalias !256
  %809 = zext i16 %808 to i64
  %810 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %80, align 8, !noalias !256
  %811 = icmp ult i64 %506, %805
  br i1 %811, label %894, label %812

812:                                              ; preds = %804
  %813 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %810, i64 0, i32 1, i64 %805
  %814 = load i32, i32* %813, align 4, !noalias !256
  %815 = zext i32 %814 to i64
  %816 = mul nuw nsw i64 %809, %805
  %817 = add nuw nsw i64 %816, %815
  %818 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %810, i64 0, i32 3
  %819 = load i8*, i8** %818, align 8, !noalias !256
  %820 = getelementptr inbounds i8, i8* %819, i64 %817
  %821 = lshr i64 %805, 3
  %822 = icmp eq i64 %821, 0
  br i1 %822, label %843, label %823, !prof !13

823:                                              ; preds = %812, %833
  %824 = phi i64 [ %836, %833 ], [ %821, %812 ]
  %825 = phi i8* [ %834, %833 ], [ %820, %812 ]
  %826 = phi i64 [ %835, %833 ], [ 0, %812 ]
  %827 = bitcast i8* %825 to i64*
  %828 = load i64, i64* %827, align 8, !noalias !256
  %829 = getelementptr inbounds i8, i8* %642, i64 %826
  %830 = bitcast i8* %829 to i64*
  %831 = load i64, i64* %830, align 8, !alias.scope !251, !noalias !252
  %832 = icmp eq i64 %828, %831
  br i1 %832, label %833, label %838, !prof !13

833:                                              ; preds = %823
  %834 = getelementptr inbounds i8, i8* %825, i64 8
  %835 = add nuw nsw i64 %826, 8
  %836 = add nsw i64 %824, -1
  %837 = icmp eq i64 %836, 0
  br i1 %837, label %843, label %823, !prof !13

838:                                              ; preds = %823
  %839 = xor i64 %831, %828
  %840 = tail call i64 @llvm.cttz.i64(i64 %839, i1 true) #4, !range !14
  %841 = lshr i64 %840, 3
  %842 = or i64 %841, %826
  br label %856

843:                                              ; preds = %833, %812
  %844 = phi i64 [ 0, %812 ], [ %835, %833 ]
  %845 = phi i8* [ %820, %812 ], [ %834, %833 ]
  %846 = and i64 %805, 7
  %847 = icmp eq i64 %846, 0
  br i1 %847, label %856, label %848

848:                                              ; preds = %843
  %849 = getelementptr inbounds i8, i8* %642, i64 %844
  %850 = load i8, i8* %849, align 1, !alias.scope !251, !noalias !252
  %851 = load i8, i8* %845, align 1, !noalias !256
  %852 = icmp eq i8 %850, %851
  br i1 %852, label %853, label %856, !prof !15

853:                                              ; preds = %848
  %854 = add nuw nsw i64 %844, 1
  %855 = icmp eq i64 %846, 1
  br i1 %855, label %856, label %1538

856:                                              ; preds = %1583, %853, %848, %1538, %1544, %1547, %1553, %1556, %1562, %1565, %1571, %1574, %1580, %843, %838
  %857 = phi i64 [ %842, %838 ], [ %844, %843 ], [ %844, %848 ], [ %854, %853 ], [ %854, %1538 ], [ %1545, %1544 ], [ %1545, %1547 ], [ %1554, %1553 ], [ %1554, %1556 ], [ %1563, %1562 ], [ %1563, %1565 ], [ %1572, %1571 ], [ %1572, %1574 ], [ %1581, %1580 ], [ %1590, %1583 ]
  %858 = load i32, i32* %81, align 4, !noalias !256
  %859 = zext i32 %858 to i64
  %860 = add i64 %857, %859
  %861 = icmp ule i64 %860, %805
  %862 = icmp eq i64 %857, 0
  %863 = or i1 %862, %861
  br i1 %863, label %894, label %864

864:                                              ; preds = %856
  %865 = sub i64 %805, %857
  %866 = shl i64 %865, 2
  %867 = load i64, i64* %82, align 8, !noalias !256
  %868 = mul i64 %865, 6
  %869 = lshr i64 %867, %868
  %870 = and i64 %869, 63
  %871 = add i64 %870, %866
  %872 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %810, i64 0, i32 0, i64 %805
  %873 = load i8, i8* %872, align 1, !noalias !256
  %874 = zext i8 %873 to i64
  %875 = shl i64 %871, %874
  %876 = add i64 %788, %809
  %877 = add i64 %876, %875
  %878 = icmp ugt i64 %877, %521
  br i1 %878, label %894, label %879

879:                                              ; preds = %864
  %880 = mul i64 %857, 135
  %881 = add i64 %880, 1920
  %882 = trunc i64 %877 to i32
  %883 = tail call i32 @llvm.ctlz.i32(i32 %882, i1 true) #4, !range !18
  %884 = xor i32 %883, 31
  %885 = mul nuw nsw i32 %884, 30
  %886 = zext i32 %885 to i64
  %887 = sub i64 %881, %886
  %888 = icmp ult i64 %887, %795
  br i1 %888, label %894, label %889

889:                                              ; preds = %879
  %890 = zext i8 %802 to i32
  %891 = trunc i64 %857 to i32
  %892 = sub nsw i32 %890, %891
  %893 = add i64 %794, 1
  store i64 %893, i64* %778, align 8, !noalias !256
  br label %894

894:                                              ; preds = %889, %879, %864, %856, %804, %789
  %895 = phi i32 [ %790, %789 ], [ %790, %804 ], [ %790, %856 ], [ %790, %864 ], [ %790, %879 ], [ %892, %889 ]
  %896 = phi i64 [ %791, %789 ], [ %791, %804 ], [ %791, %856 ], [ %791, %864 ], [ %791, %879 ], [ %887, %889 ]
  %897 = phi i64 [ %792, %789 ], [ %792, %804 ], [ %792, %856 ], [ %792, %864 ], [ %792, %879 ], [ %877, %889 ]
  %898 = phi i64 [ %793, %789 ], [ %793, %804 ], [ %793, %856 ], [ %793, %864 ], [ %793, %879 ], [ %857, %889 ]
  %899 = phi i64 [ %794, %789 ], [ %794, %804 ], [ %794, %856 ], [ %794, %864 ], [ %794, %879 ], [ %893, %889 ]
  %900 = phi i64 [ %795, %789 ], [ %795, %804 ], [ %795, %856 ], [ %795, %864 ], [ %795, %879 ], [ %887, %889 ]
  %901 = add nuw nsw i64 %798, 1
  %902 = add nuw nsw i64 %797, 1
  %903 = icmp eq i64 %901, 2
  br i1 %903, label %904, label %789

904:                                              ; preds = %894, %762, %776
  %905 = phi i32 [ 0, %776 ], [ 0, %762 ], [ %895, %894 ]
  %906 = phi i64 [ %763, %776 ], [ %763, %762 ], [ %896, %894 ]
  %907 = phi i64 [ %764, %776 ], [ %764, %762 ], [ %897, %894 ]
  %908 = phi i64 [ %765, %776 ], [ %765, %762 ], [ %898, %894 ]
  %909 = add i64 %499, 175
  %910 = icmp ult i64 %906, %909
  br i1 %910, label %911, label %913

911:                                              ; preds = %904
  %912 = add i64 %505, %18
  br label %920

913:                                              ; preds = %904
  %914 = add i64 %502, 1
  %915 = add nuw nsw i32 %504, 1
  %916 = icmp ult i32 %915, 4
  %917 = add i64 %505, 9
  %918 = icmp ult i64 %917, %20
  %919 = and i1 %916, %918
  br i1 %919, label %497, label %920

920:                                              ; preds = %913, %911
  %921 = phi i64 [ %912, %911 ], [ %518, %913 ]
  %922 = phi i32 [ %498, %911 ], [ %905, %913 ]
  %923 = phi i64 [ %500, %911 ], [ %907, %913 ]
  %924 = phi i64 [ %501, %911 ], [ %908, %913 ]
  %925 = phi i64 [ %502, %911 ], [ %914, %913 ]
  %926 = phi i64 [ %505, %911 ], [ %515, %913 ]
  %927 = shl i64 %924, 1
  %928 = add i64 %927, %27
  %929 = add i64 %928, %926
  %930 = icmp ult i64 %921, %16
  %931 = select i1 %930, i64 %921, i64 %16
  %932 = icmp ugt i64 %923, %931
  br i1 %932, label %968, label %933

933:                                              ; preds = %920
  %934 = add i64 %923, 3
  %935 = load i32, i32* %6, align 4
  %936 = sext i32 %935 to i64
  %937 = sub i64 %934, %936
  %938 = load i32, i32* %84, align 4
  %939 = sext i32 %938 to i64
  %940 = sub i64 %934, %939
  %941 = icmp eq i64 %923, %936
  br i1 %941, label %995, label %942

942:                                              ; preds = %933
  %943 = icmp eq i64 %923, %939
  br i1 %943, label %970, label %944

944:                                              ; preds = %942
  %945 = icmp ult i64 %937, 7
  br i1 %945, label %946, label %952

946:                                              ; preds = %944
  %947 = trunc i64 %937 to i32
  %948 = shl i32 %947, 2
  %949 = lshr i32 158663784, %948
  %950 = and i32 %949, 15
  %951 = zext i32 %950 to i64
  br label %970

952:                                              ; preds = %944
  %953 = icmp ult i64 %940, 7
  br i1 %953, label %954, label %960

954:                                              ; preds = %952
  %955 = trunc i64 %940 to i32
  %956 = shl i32 %955, 2
  %957 = lshr i32 266017486, %956
  %958 = and i32 %957, 15
  %959 = zext i32 %958 to i64
  br label %970

960:                                              ; preds = %952
  %961 = load i32, i32* %85, align 4
  %962 = sext i32 %961 to i64
  %963 = icmp eq i64 %923, %962
  br i1 %963, label %970, label %964

964:                                              ; preds = %960
  %965 = load i32, i32* %86, align 4
  %966 = sext i32 %965 to i64
  %967 = icmp eq i64 %923, %966
  br i1 %967, label %970, label %968

968:                                              ; preds = %964, %920
  %969 = add i64 %923, 15
  br label %970

970:                                              ; preds = %942, %946, %954, %960, %964, %968
  %971 = phi i64 [ %969, %968 ], [ 3, %964 ], [ 2, %960 ], [ 1, %942 ], [ %959, %954 ], [ %951, %946 ]
  %972 = icmp ule i64 %923, %931
  %973 = icmp ne i64 %971, 0
  %974 = and i1 %972, %973
  br i1 %974, label %975, label %995

975:                                              ; preds = %970
  %976 = load i32, i32* %85, align 4
  store i32 %976, i32* %86, align 4
  %977 = load i32, i32* %84, align 4
  store i32 %977, i32* %85, align 4
  %978 = load i32, i32* %6, align 4
  store i32 %978, i32* %84, align 4
  %979 = trunc i64 %923 to i32
  store i32 %979, i32* %6, align 4
  %980 = load i32, i32* %30, align 8, !alias.scope !257, !noalias !260
  %981 = icmp sgt i32 %980, 4
  br i1 %981, label %982, label %995

982:                                              ; preds = %975
  %983 = insertelement <4 x i32> undef, i32 %979, i32 0
  %984 = shufflevector <4 x i32> %983, <4 x i32> undef, <4 x i32> zeroinitializer
  %985 = add nsw <4 x i32> %984, <i32 -1, i32 1, i32 -2, i32 2>
  store <4 x i32> %985, <4 x i32>* %95, align 4, !alias.scope !262, !noalias !257
  %986 = add nsw i32 %979, -3
  store i32 %986, i32* %88, align 4, !alias.scope !262, !noalias !257
  %987 = add nsw i32 %979, 3
  store i32 %987, i32* %89, align 4, !alias.scope !262, !noalias !257
  %988 = icmp sgt i32 %980, 10
  br i1 %988, label %989, label %995

989:                                              ; preds = %982
  %990 = insertelement <4 x i32> undef, i32 %978, i32 0
  %991 = shufflevector <4 x i32> %990, <4 x i32> undef, <4 x i32> zeroinitializer
  %992 = add nsw <4 x i32> %991, <i32 -1, i32 1, i32 -2, i32 2>
  store <4 x i32> %992, <4 x i32>* %96, align 4, !alias.scope !262, !noalias !257
  %993 = add nsw i32 %978, -3
  store i32 %993, i32* %91, align 4, !alias.scope !262, !noalias !257
  %994 = add nsw i32 %978, 3
  store i32 %994, i32* %92, align 4, !alias.scope !262, !noalias !257
  br label %995

995:                                              ; preds = %933, %989, %982, %975, %970
  %996 = phi i64 [ %971, %970 ], [ %971, %975 ], [ %971, %982 ], [ %971, %989 ], [ 0, %933 ]
  %997 = getelementptr inbounds %struct.Command, %struct.Command* %100, i64 1
  %998 = trunc i64 %925 to i32
  %999 = getelementptr inbounds %struct.Command, %struct.Command* %100, i64 0, i32 0
  store i32 %998, i32* %999, align 4
  %1000 = shl i32 %922, 25
  %1001 = trunc i64 %924 to i32
  %1002 = or i32 %1000, %1001
  %1003 = getelementptr inbounds %struct.Command, %struct.Command* %100, i64 0, i32 1
  store i32 %1002, i32* %1003, align 4
  %1004 = load i32, i32* %93, align 4
  %1005 = zext i32 %1004 to i64
  %1006 = load i32, i32* %94, align 8
  %1007 = zext i32 %1006 to i64
  %1008 = getelementptr inbounds %struct.Command, %struct.Command* %100, i64 0, i32 4
  %1009 = getelementptr inbounds %struct.Command, %struct.Command* %100, i64 0, i32 2
  %1010 = add nuw nsw i64 %1005, 16
  %1011 = icmp ugt i64 %1010, %996
  br i1 %1011, label %1012, label %1014

1012:                                             ; preds = %995
  %1013 = trunc i64 %996 to i16
  store i16 %1013, i16* %1008, align 2
  br label %1044

1014:                                             ; preds = %995
  %1015 = shl i64 4, %1007
  %1016 = add i64 %996, -16
  %1017 = sub i64 %1016, %1005
  %1018 = add i64 %1017, %1015
  %1019 = trunc i64 %1018 to i32
  %1020 = tail call i32 @llvm.ctlz.i32(i32 %1019, i1 true) #4, !range !18
  %1021 = sub nsw i32 30, %1020
  %1022 = zext i32 %1021 to i64
  %1023 = shl nsw i32 -1, %1006
  %1024 = xor i32 %1023, 65535
  %1025 = zext i32 %1024 to i64
  %1026 = and i64 %1018, %1025
  %1027 = lshr i64 %1018, %1022
  %1028 = and i64 %1027, 1
  %1029 = or i64 %1028, 2
  %1030 = shl i64 %1029, %1022
  %1031 = sub nsw i64 %1022, %1007
  %1032 = shl nsw i64 %1031, 10
  %1033 = shl nsw i64 %1031, 1
  %1034 = add nsw i64 %1033, -2
  %1035 = or i64 %1034, %1028
  %1036 = shl i64 %1035, %1007
  %1037 = add nuw nsw i64 %1026, %1010
  %1038 = add i64 %1037, %1036
  %1039 = or i64 %1038, %1032
  %1040 = trunc i64 %1039 to i16
  store i16 %1040, i16* %1008, align 2
  %1041 = sub i64 %1018, %1030
  %1042 = lshr i64 %1041, %1007
  %1043 = trunc i64 %1042 to i32
  br label %1044

1044:                                             ; preds = %1014, %1012
  %1045 = phi i16 [ %1040, %1014 ], [ %1013, %1012 ]
  %1046 = phi i32 [ %1043, %1014 ], [ 0, %1012 ]
  store i32 %1046, i32* %1009, align 4
  %1047 = add nsw i32 %922, %1001
  %1048 = sext i32 %1047 to i64
  %1049 = and i16 %1045, 1023
  %1050 = icmp eq i16 %1049, 0
  %1051 = getelementptr inbounds %struct.Command, %struct.Command* %100, i64 0, i32 3
  %1052 = icmp ult i64 %925, 6
  br i1 %1052, label %1053, label %1055

1053:                                             ; preds = %1044
  %1054 = trunc i64 %925 to i16
  br label %1081

1055:                                             ; preds = %1044
  %1056 = icmp ult i64 %925, 130
  br i1 %1056, label %1057, label %1069

1057:                                             ; preds = %1055
  %1058 = add nsw i64 %925, -2
  %1059 = trunc i64 %1058 to i32
  %1060 = tail call i32 @llvm.ctlz.i32(i32 %1059, i1 true) #4, !range !18
  %1061 = sub nsw i32 30, %1060
  %1062 = shl nsw i32 %1061, 1
  %1063 = zext i32 %1062 to i64
  %1064 = zext i32 %1061 to i64
  %1065 = lshr i64 %1058, %1064
  %1066 = add nuw nsw i64 %1065, %1063
  %1067 = trunc i64 %1066 to i16
  %1068 = add i16 %1067, 2
  br label %1081

1069:                                             ; preds = %1055
  %1070 = icmp ult i64 %925, 2114
  br i1 %1070, label %1071, label %1076

1071:                                             ; preds = %1069
  %1072 = add nsw i32 %998, -66
  %1073 = tail call i32 @llvm.ctlz.i32(i32 %1072, i1 true) #4, !range !18
  %1074 = trunc i32 %1073 to i16
  %1075 = sub nuw nsw i16 41, %1074
  br label %1081

1076:                                             ; preds = %1069
  %1077 = icmp ult i64 %925, 6210
  br i1 %1077, label %1081, label %1078

1078:                                             ; preds = %1076
  %1079 = icmp ult i64 %925, 22594
  %1080 = select i1 %1079, i16 22, i16 23
  br label %1081

1081:                                             ; preds = %1078, %1076, %1071, %1057, %1053
  %1082 = phi i16 [ %1054, %1053 ], [ %1068, %1057 ], [ %1075, %1071 ], [ 21, %1076 ], [ %1080, %1078 ]
  %1083 = icmp ult i32 %1047, 10
  br i1 %1083, label %1084, label %1087

1084:                                             ; preds = %1081
  %1085 = trunc i32 %1047 to i16
  %1086 = add nsw i16 %1085, -2
  br label %1108

1087:                                             ; preds = %1081
  %1088 = icmp ult i32 %1047, 134
  br i1 %1088, label %1089, label %1101

1089:                                             ; preds = %1087
  %1090 = add nsw i64 %1048, -6
  %1091 = trunc i64 %1090 to i32
  %1092 = tail call i32 @llvm.ctlz.i32(i32 %1091, i1 true) #4, !range !18
  %1093 = sub nsw i32 30, %1092
  %1094 = shl nsw i32 %1093, 1
  %1095 = zext i32 %1094 to i64
  %1096 = zext i32 %1093 to i64
  %1097 = lshr i64 %1090, %1096
  %1098 = add nuw nsw i64 %1097, %1095
  %1099 = trunc i64 %1098 to i16
  %1100 = add i16 %1099, 4
  br label %1108

1101:                                             ; preds = %1087
  %1102 = icmp ult i32 %1047, 2118
  br i1 %1102, label %1103, label %1108

1103:                                             ; preds = %1101
  %1104 = add nsw i32 %1047, -70
  %1105 = tail call i32 @llvm.ctlz.i32(i32 %1104, i1 true) #4, !range !18
  %1106 = trunc i32 %1105 to i16
  %1107 = sub nuw nsw i16 43, %1106
  br label %1108

1108:                                             ; preds = %1103, %1101, %1089, %1084
  %1109 = phi i16 [ %1086, %1084 ], [ %1100, %1089 ], [ %1107, %1103 ], [ 23, %1101 ]
  %1110 = and i16 %1109, 7
  %1111 = shl i16 %1082, 3
  %1112 = and i16 %1111, 56
  %1113 = or i16 %1110, %1112
  %1114 = icmp ult i16 %1082, 8
  %1115 = and i1 %1050, %1114
  %1116 = icmp ult i16 %1109, 16
  %1117 = and i1 %1115, %1116
  br i1 %1117, label %1118, label %1122

1118:                                             ; preds = %1108
  %1119 = icmp ult i16 %1109, 8
  %1120 = or i16 %1113, 64
  %1121 = select i1 %1119, i16 %1113, i16 %1120
  br label %1137

1122:                                             ; preds = %1108
  %1123 = lshr i16 %1109, 3
  %1124 = lshr i16 %1082, 3
  %1125 = mul nuw nsw i16 %1124, 3
  %1126 = add nuw nsw i16 %1123, %1125
  %1127 = zext i16 %1126 to i32
  %1128 = shl nuw i16 %1126, 1
  %1129 = zext i16 %1128 to i32
  %1130 = shl nuw nsw i32 %1127, 6
  %1131 = add nuw nsw i32 %1130, 64
  %1132 = lshr i32 5377344, %1129
  %1133 = and i32 %1132, 192
  %1134 = add nuw nsw i32 %1131, %1133
  %1135 = trunc i32 %1134 to i16
  %1136 = or i16 %1113, %1135
  br label %1137

1137:                                             ; preds = %1118, %1122
  %1138 = phi i16 [ %1121, %1118 ], [ %1136, %1122 ]
  store i16 %1138, i16* %1051, align 2
  %1139 = load i64, i64* %10, align 8
  %1140 = add i64 %1139, %925
  store i64 %1140, i64* %10, align 8
  %1141 = add i64 %926, 2
  %1142 = add i64 %926, %924
  %1143 = icmp ult i64 %1142, %23
  %1144 = select i1 %1143, i64 %1142, i64 %23
  %1145 = lshr i64 %924, 2
  %1146 = icmp ult i64 %923, %1145
  br i1 %1146, label %1147, label %1154

1147:                                             ; preds = %1137
  %1148 = shl i64 %923, 2
  %1149 = sub i64 %1142, %1148
  %1150 = icmp ugt i64 %1141, %1149
  %1151 = select i1 %1150, i64 %1141, i64 %1149
  %1152 = icmp ult i64 %1144, %1151
  %1153 = select i1 %1152, i64 %1144, i64 %1151
  br label %1154

1154:                                             ; preds = %1147, %1137
  %1155 = phi i64 [ %1153, %1147 ], [ %1141, %1137 ]
  %1156 = icmp ult i64 %1155, %1144
  br i1 %1156, label %1157, label %1274

1157:                                             ; preds = %1154
  %1158 = load i16*, i16** %63, align 8, !alias.scope !265, !noalias !270
  %1159 = load i32*, i32** %65, align 8, !alias.scope !265, !noalias !270
  %1160 = load i64, i64* %67, align 8, !alias.scope !265, !noalias !270
  %1161 = load i32, i32* %69, align 8, !alias.scope !265, !noalias !270
  %1162 = zext i32 %1161 to i64
  %1163 = load i32, i32* %75, align 8, !alias.scope !265, !noalias !270
  %1164 = load i32, i32* %71, align 4, !alias.scope !265, !noalias !270
  br label %1165

1165:                                             ; preds = %1165, %1157
  %1166 = phi i64 [ %1155, %1157 ], [ %1187, %1165 ]
  %1167 = and i64 %1166, %3
  %1168 = getelementptr inbounds i8, i8* %2, i64 %1167
  %1169 = bitcast i8* %1168 to i64*
  %1170 = load i64, i64* %1169, align 8, !alias.scope !273, !noalias !265
  %1171 = and i64 %1170, %1160
  %1172 = mul i64 %1171, 2297779722762296275
  %1173 = lshr i64 %1172, %1162
  %1174 = trunc i64 %1173 to i32
  %1175 = and i64 %1173, 4294967295
  %1176 = getelementptr inbounds i16, i16* %1158, i64 %1175
  %1177 = load i16, i16* %1176, align 2, !noalias !276
  %1178 = zext i16 %1177 to i32
  %1179 = and i32 %1163, %1178
  %1180 = zext i32 %1179 to i64
  %1181 = shl i32 %1174, %1164
  %1182 = zext i32 %1181 to i64
  %1183 = add nuw nsw i64 %1182, %1180
  %1184 = add i16 %1177, 1
  store i16 %1184, i16* %1176, align 2, !noalias !276
  %1185 = trunc i64 %1166 to i32
  %1186 = getelementptr inbounds i32, i32* %1159, i64 %1183
  store i32 %1185, i32* %1186, align 4, !noalias !276
  %1187 = add nuw i64 %1166, 1
  %1188 = icmp eq i64 %1187, %1144
  br i1 %1188, label %1274, label %1165

1189:                                             ; preds = %491
  %1190 = add i64 %102, 1
  %1191 = add i64 %99, 1
  %1192 = icmp ugt i64 %1191, %101
  br i1 %1192, label %1193, label %1274

1193:                                             ; preds = %1189
  %1194 = add i64 %101, %83
  %1195 = icmp ugt i64 %1191, %1194
  br i1 %1195, label %1196, label %1235

1196:                                             ; preds = %1193
  %1197 = add i64 %99, 17
  %1198 = icmp ult i64 %1197, %22
  %1199 = select i1 %1198, i64 %1197, i64 %22
  %1200 = icmp ult i64 %1191, %1199
  br i1 %1200, label %1201, label %1274

1201:                                             ; preds = %1196
  %1202 = load i16*, i16** %63, align 8, !alias.scope !277, !noalias !280
  %1203 = load i32*, i32** %65, align 8, !alias.scope !277, !noalias !280
  %1204 = load i64, i64* %67, align 8, !alias.scope !277, !noalias !280
  %1205 = load i32, i32* %69, align 8, !alias.scope !277, !noalias !280
  %1206 = zext i32 %1205 to i64
  %1207 = load i32, i32* %75, align 8, !alias.scope !277, !noalias !280
  %1208 = load i32, i32* %71, align 4, !alias.scope !277, !noalias !280
  br label %1209

1209:                                             ; preds = %1201, %1209
  %1210 = phi i64 [ %1191, %1201 ], [ %1233, %1209 ]
  %1211 = phi i64 [ %1190, %1201 ], [ %1232, %1209 ]
  %1212 = and i64 %1210, %3
  %1213 = getelementptr inbounds i8, i8* %2, i64 %1212
  %1214 = bitcast i8* %1213 to i64*
  %1215 = load i64, i64* %1214, align 8, !alias.scope !282, !noalias !277
  %1216 = and i64 %1215, %1204
  %1217 = mul i64 %1216, 2297779722762296275
  %1218 = lshr i64 %1217, %1206
  %1219 = trunc i64 %1218 to i32
  %1220 = and i64 %1218, 4294967295
  %1221 = getelementptr inbounds i16, i16* %1202, i64 %1220
  %1222 = load i16, i16* %1221, align 2, !noalias !285
  %1223 = zext i16 %1222 to i32
  %1224 = and i32 %1207, %1223
  %1225 = zext i32 %1224 to i64
  %1226 = shl i32 %1219, %1208
  %1227 = zext i32 %1226 to i64
  %1228 = add nuw nsw i64 %1227, %1225
  %1229 = add i16 %1222, 1
  store i16 %1229, i16* %1221, align 2, !noalias !285
  %1230 = trunc i64 %1210 to i32
  %1231 = getelementptr inbounds i32, i32* %1203, i64 %1228
  store i32 %1230, i32* %1231, align 4, !noalias !285
  %1232 = add i64 %1211, 4
  %1233 = add i64 %1210, 4
  %1234 = icmp ult i64 %1233, %1199
  br i1 %1234, label %1209, label %1274

1235:                                             ; preds = %1193
  %1236 = add i64 %99, 9
  %1237 = icmp ult i64 %1236, %22
  %1238 = select i1 %1237, i64 %1236, i64 %22
  %1239 = icmp ult i64 %1191, %1238
  br i1 %1239, label %1240, label %1274

1240:                                             ; preds = %1235
  %1241 = load i16*, i16** %63, align 8, !alias.scope !286, !noalias !289
  %1242 = load i32*, i32** %65, align 8, !alias.scope !286, !noalias !289
  %1243 = load i64, i64* %67, align 8, !alias.scope !286, !noalias !289
  %1244 = load i32, i32* %69, align 8, !alias.scope !286, !noalias !289
  %1245 = zext i32 %1244 to i64
  %1246 = load i32, i32* %75, align 8, !alias.scope !286, !noalias !289
  %1247 = load i32, i32* %71, align 4, !alias.scope !286, !noalias !289
  br label %1248

1248:                                             ; preds = %1240, %1248
  %1249 = phi i64 [ %1191, %1240 ], [ %1272, %1248 ]
  %1250 = phi i64 [ %1190, %1240 ], [ %1271, %1248 ]
  %1251 = and i64 %1249, %3
  %1252 = getelementptr inbounds i8, i8* %2, i64 %1251
  %1253 = bitcast i8* %1252 to i64*
  %1254 = load i64, i64* %1253, align 8, !alias.scope !291, !noalias !286
  %1255 = and i64 %1254, %1243
  %1256 = mul i64 %1255, 2297779722762296275
  %1257 = lshr i64 %1256, %1245
  %1258 = trunc i64 %1257 to i32
  %1259 = and i64 %1257, 4294967295
  %1260 = getelementptr inbounds i16, i16* %1241, i64 %1259
  %1261 = load i16, i16* %1260, align 2, !noalias !294
  %1262 = zext i16 %1261 to i32
  %1263 = and i32 %1246, %1262
  %1264 = zext i32 %1263 to i64
  %1265 = shl i32 %1258, %1247
  %1266 = zext i32 %1265 to i64
  %1267 = add nuw nsw i64 %1266, %1264
  %1268 = add i16 %1261, 1
  store i16 %1268, i16* %1260, align 2, !noalias !294
  %1269 = trunc i64 %1249 to i32
  %1270 = getelementptr inbounds i32, i32* %1242, i64 %1267
  store i32 %1269, i32* %1270, align 4, !noalias !294
  %1271 = add i64 %1250, 2
  %1272 = add i64 %1249, 2
  %1273 = icmp ult i64 %1272, %1238
  br i1 %1273, label %1248, label %1274

1274:                                             ; preds = %1248, %1209, %1165, %1235, %1196, %1154, %1189
  %1275 = phi i64 [ %1190, %1189 ], [ 0, %1154 ], [ %1190, %1196 ], [ %1190, %1235 ], [ 0, %1165 ], [ %1232, %1209 ], [ %1271, %1248 ]
  %1276 = phi i64 [ %101, %1189 ], [ %929, %1154 ], [ %101, %1196 ], [ %101, %1235 ], [ %929, %1165 ], [ %101, %1209 ], [ %101, %1248 ]
  %1277 = phi %struct.Command* [ %100, %1189 ], [ %997, %1154 ], [ %100, %1196 ], [ %100, %1235 ], [ %997, %1165 ], [ %100, %1209 ], [ %100, %1248 ]
  %1278 = phi i64 [ %1191, %1189 ], [ %1142, %1154 ], [ %1191, %1196 ], [ %1191, %1235 ], [ %1142, %1165 ], [ %1233, %1209 ], [ %1272, %1248 ]
  %1279 = add i64 %1278, 8
  %1280 = icmp ult i64 %1279, %20
  %1281 = sub i64 %20, %1278
  br i1 %1280, label %97, label %1282

1282:                                             ; preds = %1274, %57
  %1283 = phi i64 [ %19, %57 ], [ %1275, %1274 ]
  %1284 = phi %struct.Command* [ %8, %57 ], [ %1277, %1274 ]
  %1285 = phi i64 [ %0, %57 ], [ %1281, %1274 ]
  %1286 = add i64 %1285, %1283
  store i64 %1286, i64* %7, align 8
  %1287 = ptrtoint %struct.Command* %1284 to i64
  %1288 = ptrtoint %struct.Command* %8 to i64
  %1289 = sub i64 %1287, %1288
  %1290 = ashr exact i64 %1289, 4
  %1291 = load i64, i64* %9, align 8
  %1292 = add i64 %1291, %1290
  store i64 %1292, i64* %9, align 8
  ret void

1293:                                             ; preds = %184
  %1294 = getelementptr inbounds i8, i8* %178, i64 1
  %1295 = getelementptr inbounds i8, i8* %155, i64 %185
  %1296 = load i8, i8* %1295, align 1, !alias.scope !236, !noalias !237
  %1297 = load i8, i8* %1294, align 1, !alias.scope !236, !noalias !237
  %1298 = icmp eq i8 %1296, %1297
  br i1 %1298, label %1299, label %186, !prof !15

1299:                                             ; preds = %1293
  %1300 = add i64 %177, 2
  br i1 %122, label %186, label %1301

1301:                                             ; preds = %1299
  %1302 = getelementptr inbounds i8, i8* %178, i64 2
  %1303 = getelementptr inbounds i8, i8* %155, i64 %1300
  %1304 = load i8, i8* %1303, align 1, !alias.scope !236, !noalias !237
  %1305 = load i8, i8* %1302, align 1, !alias.scope !236, !noalias !237
  %1306 = icmp eq i8 %1304, %1305
  br i1 %1306, label %1307, label %186, !prof !15

1307:                                             ; preds = %1301
  %1308 = add i64 %177, 3
  br i1 %123, label %186, label %1309

1309:                                             ; preds = %1307
  %1310 = getelementptr inbounds i8, i8* %178, i64 3
  %1311 = getelementptr inbounds i8, i8* %155, i64 %1308
  %1312 = load i8, i8* %1311, align 1, !alias.scope !236, !noalias !237
  %1313 = load i8, i8* %1310, align 1, !alias.scope !236, !noalias !237
  %1314 = icmp eq i8 %1312, %1313
  br i1 %1314, label %1315, label %186, !prof !15

1315:                                             ; preds = %1309
  %1316 = add i64 %177, 4
  br i1 %124, label %186, label %1317

1317:                                             ; preds = %1315
  %1318 = getelementptr inbounds i8, i8* %178, i64 4
  %1319 = getelementptr inbounds i8, i8* %155, i64 %1316
  %1320 = load i8, i8* %1319, align 1, !alias.scope !236, !noalias !237
  %1321 = load i8, i8* %1318, align 1, !alias.scope !236, !noalias !237
  %1322 = icmp eq i8 %1320, %1321
  br i1 %1322, label %1323, label %186, !prof !15

1323:                                             ; preds = %1317
  %1324 = add i64 %177, 5
  br i1 %125, label %186, label %1325

1325:                                             ; preds = %1323
  %1326 = getelementptr inbounds i8, i8* %178, i64 5
  %1327 = getelementptr inbounds i8, i8* %155, i64 %1324
  %1328 = load i8, i8* %1327, align 1, !alias.scope !236, !noalias !237
  %1329 = load i8, i8* %1326, align 1, !alias.scope !236, !noalias !237
  %1330 = icmp eq i8 %1328, %1329
  br i1 %1330, label %1331, label %186, !prof !15

1331:                                             ; preds = %1325
  %1332 = add i64 %177, 6
  br i1 %126, label %186, label %1333

1333:                                             ; preds = %1331
  %1334 = getelementptr inbounds i8, i8* %178, i64 6
  %1335 = getelementptr inbounds i8, i8* %155, i64 %1332
  %1336 = load i8, i8* %1335, align 1, !alias.scope !236, !noalias !237
  %1337 = load i8, i8* %1334, align 1, !alias.scope !236, !noalias !237
  %1338 = icmp eq i8 %1336, %1337
  %1339 = add i64 %177, 7
  %1340 = select i1 %1338, i64 %1339, i64 %1332, !prof !15
  br label %186

1341:                                             ; preds = %322
  %1342 = getelementptr inbounds i8, i8* %316, i64 1
  %1343 = getelementptr inbounds i8, i8* %293, i64 %323
  %1344 = load i8, i8* %1343, align 1, !alias.scope !236, !noalias !237
  %1345 = load i8, i8* %1342, align 1, !alias.scope !236, !noalias !237
  %1346 = icmp eq i8 %1344, %1345
  br i1 %1346, label %1347, label %324, !prof !15

1347:                                             ; preds = %1341
  %1348 = add i64 %315, 2
  br i1 %260, label %324, label %1349

1349:                                             ; preds = %1347
  %1350 = getelementptr inbounds i8, i8* %316, i64 2
  %1351 = getelementptr inbounds i8, i8* %293, i64 %1348
  %1352 = load i8, i8* %1351, align 1, !alias.scope !236, !noalias !237
  %1353 = load i8, i8* %1350, align 1, !alias.scope !236, !noalias !237
  %1354 = icmp eq i8 %1352, %1353
  br i1 %1354, label %1355, label %324, !prof !15

1355:                                             ; preds = %1349
  %1356 = add i64 %315, 3
  br i1 %261, label %324, label %1357

1357:                                             ; preds = %1355
  %1358 = getelementptr inbounds i8, i8* %316, i64 3
  %1359 = getelementptr inbounds i8, i8* %293, i64 %1356
  %1360 = load i8, i8* %1359, align 1, !alias.scope !236, !noalias !237
  %1361 = load i8, i8* %1358, align 1, !alias.scope !236, !noalias !237
  %1362 = icmp eq i8 %1360, %1361
  br i1 %1362, label %1363, label %324, !prof !15

1363:                                             ; preds = %1357
  %1364 = add i64 %315, 4
  br i1 %262, label %324, label %1365

1365:                                             ; preds = %1363
  %1366 = getelementptr inbounds i8, i8* %316, i64 4
  %1367 = getelementptr inbounds i8, i8* %293, i64 %1364
  %1368 = load i8, i8* %1367, align 1, !alias.scope !236, !noalias !237
  %1369 = load i8, i8* %1366, align 1, !alias.scope !236, !noalias !237
  %1370 = icmp eq i8 %1368, %1369
  br i1 %1370, label %1371, label %324, !prof !15

1371:                                             ; preds = %1365
  %1372 = add i64 %315, 5
  br i1 %263, label %324, label %1373

1373:                                             ; preds = %1371
  %1374 = getelementptr inbounds i8, i8* %316, i64 5
  %1375 = getelementptr inbounds i8, i8* %293, i64 %1372
  %1376 = load i8, i8* %1375, align 1, !alias.scope !236, !noalias !237
  %1377 = load i8, i8* %1374, align 1, !alias.scope !236, !noalias !237
  %1378 = icmp eq i8 %1376, %1377
  br i1 %1378, label %1379, label %324, !prof !15

1379:                                             ; preds = %1373
  %1380 = add i64 %315, 6
  br i1 %264, label %324, label %1381

1381:                                             ; preds = %1379
  %1382 = getelementptr inbounds i8, i8* %316, i64 6
  %1383 = getelementptr inbounds i8, i8* %293, i64 %1380
  %1384 = load i8, i8* %1383, align 1, !alias.scope !236, !noalias !237
  %1385 = load i8, i8* %1382, align 1, !alias.scope !236, !noalias !237
  %1386 = icmp eq i8 %1384, %1385
  %1387 = add i64 %315, 7
  %1388 = select i1 %1386, i64 %1387, i64 %1380, !prof !15
  br label %324

1389:                                             ; preds = %440
  %1390 = getelementptr inbounds i8, i8* %432, i64 1
  %1391 = getelementptr inbounds i8, i8* %229, i64 %441
  %1392 = load i8, i8* %1391, align 1, !alias.scope !236, !noalias !237
  %1393 = load i8, i8* %1390, align 1, !noalias !241
  %1394 = icmp eq i8 %1392, %1393
  br i1 %1394, label %1395, label %443, !prof !15

1395:                                             ; preds = %1389
  %1396 = add nuw nsw i64 %431, 2
  %1397 = icmp eq i64 %433, 2
  br i1 %1397, label %443, label %1398

1398:                                             ; preds = %1395
  %1399 = getelementptr inbounds i8, i8* %432, i64 2
  %1400 = getelementptr inbounds i8, i8* %229, i64 %1396
  %1401 = load i8, i8* %1400, align 1, !alias.scope !236, !noalias !237
  %1402 = load i8, i8* %1399, align 1, !noalias !241
  %1403 = icmp eq i8 %1401, %1402
  br i1 %1403, label %1404, label %443, !prof !15

1404:                                             ; preds = %1398
  %1405 = add nuw nsw i64 %431, 3
  %1406 = icmp eq i64 %433, 3
  br i1 %1406, label %443, label %1407

1407:                                             ; preds = %1404
  %1408 = getelementptr inbounds i8, i8* %432, i64 3
  %1409 = getelementptr inbounds i8, i8* %229, i64 %1405
  %1410 = load i8, i8* %1409, align 1, !alias.scope !236, !noalias !237
  %1411 = load i8, i8* %1408, align 1, !noalias !241
  %1412 = icmp eq i8 %1410, %1411
  br i1 %1412, label %1413, label %443, !prof !15

1413:                                             ; preds = %1407
  %1414 = add nuw nsw i64 %431, 4
  %1415 = icmp eq i64 %433, 4
  br i1 %1415, label %443, label %1416

1416:                                             ; preds = %1413
  %1417 = getelementptr inbounds i8, i8* %432, i64 4
  %1418 = getelementptr inbounds i8, i8* %229, i64 %1414
  %1419 = load i8, i8* %1418, align 1, !alias.scope !236, !noalias !237
  %1420 = load i8, i8* %1417, align 1, !noalias !241
  %1421 = icmp eq i8 %1419, %1420
  br i1 %1421, label %1422, label %443, !prof !15

1422:                                             ; preds = %1416
  %1423 = add nuw nsw i64 %431, 5
  %1424 = icmp eq i64 %433, 5
  br i1 %1424, label %443, label %1425

1425:                                             ; preds = %1422
  %1426 = getelementptr inbounds i8, i8* %432, i64 5
  %1427 = getelementptr inbounds i8, i8* %229, i64 %1423
  %1428 = load i8, i8* %1427, align 1, !alias.scope !236, !noalias !237
  %1429 = load i8, i8* %1426, align 1, !noalias !241
  %1430 = icmp eq i8 %1428, %1429
  br i1 %1430, label %1431, label %443, !prof !15

1431:                                             ; preds = %1425
  %1432 = add nuw nsw i64 %431, 6
  %1433 = icmp eq i64 %433, 6
  br i1 %1433, label %443, label %1434

1434:                                             ; preds = %1431
  %1435 = getelementptr inbounds i8, i8* %432, i64 6
  %1436 = getelementptr inbounds i8, i8* %229, i64 %1432
  %1437 = load i8, i8* %1436, align 1, !alias.scope !236, !noalias !237
  %1438 = load i8, i8* %1435, align 1, !noalias !241
  %1439 = icmp eq i8 %1437, %1438
  %1440 = add nuw nsw i64 %431, 7
  %1441 = select i1 %1439, i64 %1440, i64 %1432, !prof !15
  br label %443

1442:                                             ; preds = %597
  %1443 = getelementptr inbounds i8, i8* %591, i64 1
  %1444 = getelementptr inbounds i8, i8* %568, i64 %598
  %1445 = load i8, i8* %1444, align 1, !alias.scope !251, !noalias !252
  %1446 = load i8, i8* %1443, align 1, !alias.scope !251, !noalias !252
  %1447 = icmp eq i8 %1445, %1446
  br i1 %1447, label %1448, label %599, !prof !15

1448:                                             ; preds = %1442
  %1449 = add i64 %590, 2
  br i1 %535, label %599, label %1450

1450:                                             ; preds = %1448
  %1451 = getelementptr inbounds i8, i8* %591, i64 2
  %1452 = getelementptr inbounds i8, i8* %568, i64 %1449
  %1453 = load i8, i8* %1452, align 1, !alias.scope !251, !noalias !252
  %1454 = load i8, i8* %1451, align 1, !alias.scope !251, !noalias !252
  %1455 = icmp eq i8 %1453, %1454
  br i1 %1455, label %1456, label %599, !prof !15

1456:                                             ; preds = %1450
  %1457 = add i64 %590, 3
  br i1 %536, label %599, label %1458

1458:                                             ; preds = %1456
  %1459 = getelementptr inbounds i8, i8* %591, i64 3
  %1460 = getelementptr inbounds i8, i8* %568, i64 %1457
  %1461 = load i8, i8* %1460, align 1, !alias.scope !251, !noalias !252
  %1462 = load i8, i8* %1459, align 1, !alias.scope !251, !noalias !252
  %1463 = icmp eq i8 %1461, %1462
  br i1 %1463, label %1464, label %599, !prof !15

1464:                                             ; preds = %1458
  %1465 = add i64 %590, 4
  br i1 %537, label %599, label %1466

1466:                                             ; preds = %1464
  %1467 = getelementptr inbounds i8, i8* %591, i64 4
  %1468 = getelementptr inbounds i8, i8* %568, i64 %1465
  %1469 = load i8, i8* %1468, align 1, !alias.scope !251, !noalias !252
  %1470 = load i8, i8* %1467, align 1, !alias.scope !251, !noalias !252
  %1471 = icmp eq i8 %1469, %1470
  br i1 %1471, label %1472, label %599, !prof !15

1472:                                             ; preds = %1466
  %1473 = add i64 %590, 5
  br i1 %538, label %599, label %1474

1474:                                             ; preds = %1472
  %1475 = getelementptr inbounds i8, i8* %591, i64 5
  %1476 = getelementptr inbounds i8, i8* %568, i64 %1473
  %1477 = load i8, i8* %1476, align 1, !alias.scope !251, !noalias !252
  %1478 = load i8, i8* %1475, align 1, !alias.scope !251, !noalias !252
  %1479 = icmp eq i8 %1477, %1478
  br i1 %1479, label %1480, label %599, !prof !15

1480:                                             ; preds = %1474
  %1481 = add i64 %590, 6
  br i1 %539, label %599, label %1482

1482:                                             ; preds = %1480
  %1483 = getelementptr inbounds i8, i8* %591, i64 6
  %1484 = getelementptr inbounds i8, i8* %568, i64 %1481
  %1485 = load i8, i8* %1484, align 1, !alias.scope !251, !noalias !252
  %1486 = load i8, i8* %1483, align 1, !alias.scope !251, !noalias !252
  %1487 = icmp eq i8 %1485, %1486
  %1488 = add i64 %590, 7
  %1489 = select i1 %1487, i64 %1488, i64 %1481, !prof !15
  br label %599

1490:                                             ; preds = %735
  %1491 = getelementptr inbounds i8, i8* %729, i64 1
  %1492 = getelementptr inbounds i8, i8* %706, i64 %736
  %1493 = load i8, i8* %1492, align 1, !alias.scope !251, !noalias !252
  %1494 = load i8, i8* %1491, align 1, !alias.scope !251, !noalias !252
  %1495 = icmp eq i8 %1493, %1494
  br i1 %1495, label %1496, label %737, !prof !15

1496:                                             ; preds = %1490
  %1497 = add i64 %728, 2
  br i1 %673, label %737, label %1498

1498:                                             ; preds = %1496
  %1499 = getelementptr inbounds i8, i8* %729, i64 2
  %1500 = getelementptr inbounds i8, i8* %706, i64 %1497
  %1501 = load i8, i8* %1500, align 1, !alias.scope !251, !noalias !252
  %1502 = load i8, i8* %1499, align 1, !alias.scope !251, !noalias !252
  %1503 = icmp eq i8 %1501, %1502
  br i1 %1503, label %1504, label %737, !prof !15

1504:                                             ; preds = %1498
  %1505 = add i64 %728, 3
  br i1 %674, label %737, label %1506

1506:                                             ; preds = %1504
  %1507 = getelementptr inbounds i8, i8* %729, i64 3
  %1508 = getelementptr inbounds i8, i8* %706, i64 %1505
  %1509 = load i8, i8* %1508, align 1, !alias.scope !251, !noalias !252
  %1510 = load i8, i8* %1507, align 1, !alias.scope !251, !noalias !252
  %1511 = icmp eq i8 %1509, %1510
  br i1 %1511, label %1512, label %737, !prof !15

1512:                                             ; preds = %1506
  %1513 = add i64 %728, 4
  br i1 %675, label %737, label %1514

1514:                                             ; preds = %1512
  %1515 = getelementptr inbounds i8, i8* %729, i64 4
  %1516 = getelementptr inbounds i8, i8* %706, i64 %1513
  %1517 = load i8, i8* %1516, align 1, !alias.scope !251, !noalias !252
  %1518 = load i8, i8* %1515, align 1, !alias.scope !251, !noalias !252
  %1519 = icmp eq i8 %1517, %1518
  br i1 %1519, label %1520, label %737, !prof !15

1520:                                             ; preds = %1514
  %1521 = add i64 %728, 5
  br i1 %676, label %737, label %1522

1522:                                             ; preds = %1520
  %1523 = getelementptr inbounds i8, i8* %729, i64 5
  %1524 = getelementptr inbounds i8, i8* %706, i64 %1521
  %1525 = load i8, i8* %1524, align 1, !alias.scope !251, !noalias !252
  %1526 = load i8, i8* %1523, align 1, !alias.scope !251, !noalias !252
  %1527 = icmp eq i8 %1525, %1526
  br i1 %1527, label %1528, label %737, !prof !15

1528:                                             ; preds = %1522
  %1529 = add i64 %728, 6
  br i1 %677, label %737, label %1530

1530:                                             ; preds = %1528
  %1531 = getelementptr inbounds i8, i8* %729, i64 6
  %1532 = getelementptr inbounds i8, i8* %706, i64 %1529
  %1533 = load i8, i8* %1532, align 1, !alias.scope !251, !noalias !252
  %1534 = load i8, i8* %1531, align 1, !alias.scope !251, !noalias !252
  %1535 = icmp eq i8 %1533, %1534
  %1536 = add i64 %728, 7
  %1537 = select i1 %1535, i64 %1536, i64 %1529, !prof !15
  br label %737

1538:                                             ; preds = %853
  %1539 = getelementptr inbounds i8, i8* %845, i64 1
  %1540 = getelementptr inbounds i8, i8* %642, i64 %854
  %1541 = load i8, i8* %1540, align 1, !alias.scope !251, !noalias !252
  %1542 = load i8, i8* %1539, align 1, !noalias !256
  %1543 = icmp eq i8 %1541, %1542
  br i1 %1543, label %1544, label %856, !prof !15

1544:                                             ; preds = %1538
  %1545 = add nuw nsw i64 %844, 2
  %1546 = icmp eq i64 %846, 2
  br i1 %1546, label %856, label %1547

1547:                                             ; preds = %1544
  %1548 = getelementptr inbounds i8, i8* %845, i64 2
  %1549 = getelementptr inbounds i8, i8* %642, i64 %1545
  %1550 = load i8, i8* %1549, align 1, !alias.scope !251, !noalias !252
  %1551 = load i8, i8* %1548, align 1, !noalias !256
  %1552 = icmp eq i8 %1550, %1551
  br i1 %1552, label %1553, label %856, !prof !15

1553:                                             ; preds = %1547
  %1554 = add nuw nsw i64 %844, 3
  %1555 = icmp eq i64 %846, 3
  br i1 %1555, label %856, label %1556

1556:                                             ; preds = %1553
  %1557 = getelementptr inbounds i8, i8* %845, i64 3
  %1558 = getelementptr inbounds i8, i8* %642, i64 %1554
  %1559 = load i8, i8* %1558, align 1, !alias.scope !251, !noalias !252
  %1560 = load i8, i8* %1557, align 1, !noalias !256
  %1561 = icmp eq i8 %1559, %1560
  br i1 %1561, label %1562, label %856, !prof !15

1562:                                             ; preds = %1556
  %1563 = add nuw nsw i64 %844, 4
  %1564 = icmp eq i64 %846, 4
  br i1 %1564, label %856, label %1565

1565:                                             ; preds = %1562
  %1566 = getelementptr inbounds i8, i8* %845, i64 4
  %1567 = getelementptr inbounds i8, i8* %642, i64 %1563
  %1568 = load i8, i8* %1567, align 1, !alias.scope !251, !noalias !252
  %1569 = load i8, i8* %1566, align 1, !noalias !256
  %1570 = icmp eq i8 %1568, %1569
  br i1 %1570, label %1571, label %856, !prof !15

1571:                                             ; preds = %1565
  %1572 = add nuw nsw i64 %844, 5
  %1573 = icmp eq i64 %846, 5
  br i1 %1573, label %856, label %1574

1574:                                             ; preds = %1571
  %1575 = getelementptr inbounds i8, i8* %845, i64 5
  %1576 = getelementptr inbounds i8, i8* %642, i64 %1572
  %1577 = load i8, i8* %1576, align 1, !alias.scope !251, !noalias !252
  %1578 = load i8, i8* %1575, align 1, !noalias !256
  %1579 = icmp eq i8 %1577, %1578
  br i1 %1579, label %1580, label %856, !prof !15

1580:                                             ; preds = %1574
  %1581 = add nuw nsw i64 %844, 6
  %1582 = icmp eq i64 %846, 6
  br i1 %1582, label %856, label %1583

1583:                                             ; preds = %1580
  %1584 = getelementptr inbounds i8, i8* %845, i64 6
  %1585 = getelementptr inbounds i8, i8* %642, i64 %1581
  %1586 = load i8, i8* %1585, align 1, !alias.scope !251, !noalias !252
  %1587 = load i8, i8* %1584, align 1, !noalias !256
  %1588 = icmp eq i8 %1586, %1587
  %1589 = add nuw nsw i64 %844, 7
  %1590 = select i1 %1588, i64 %1589, i64 %1581, !prof !15
  br label %856
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH40(i64, i64, i8* nocapture readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* nocapture, i32* nocapture, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = add i64 %15, -16
  %17 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* %7, align 8
  %20 = add i64 %1, %0
  %21 = icmp ugt i64 %0, 3
  %22 = add i64 %20, -3
  %23 = select i1 %21, i64 %22, i64 %1
  %24 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 9
  %27 = select i1 %26, i64 64, i64 512
  %28 = add i64 %1, 4
  %29 = icmp ult i64 %28, %20
  br i1 %29, label %30, label %1205

30:                                               ; preds = %11
  %31 = add i64 %27, %1
  %32 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 4
  %33 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 8
  %34 = bitcast i16* %33 to i8**
  %35 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %36 = bitcast i16* %35 to i64*
  %37 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 0
  %38 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 12
  %39 = bitcast i16* %38 to %struct.HasherCommon**
  %40 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 5
  %41 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 4
  %42 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 0
  %43 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 2
  %44 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 3
  %45 = shl nuw nsw i64 %27, 2
  %46 = add i64 %20, -4
  %47 = getelementptr inbounds i32, i32* %6, i64 1
  %48 = getelementptr inbounds i32, i32* %6, i64 2
  %49 = getelementptr inbounds i32, i32* %6, i64 3
  %50 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %51 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  br label %52

52:                                               ; preds = %30, %1197
  %53 = phi i64 [ %0, %30 ], [ %1204, %1197 ]
  %54 = phi i64 [ %1, %30 ], [ %1201, %1197 ]
  %55 = phi %struct.Command* [ %8, %30 ], [ %1200, %1197 ]
  %56 = phi i64 [ %31, %30 ], [ %1199, %1197 ]
  %57 = phi i64 [ %19, %30 ], [ %1198, %1197 ]
  %58 = icmp ult i64 %54, %16
  %59 = select i1 %58, i64 %54, i64 %16
  %60 = add i64 %54, %18
  %61 = icmp ult i64 %60, %16
  %62 = load i64, i64* %32, align 8
  %63 = load i8*, i8** %34, align 8, !alias.scope !295, !noalias !298
  %64 = getelementptr inbounds i8, i8* %63, i64 196608
  %65 = and i64 %54, %3
  %66 = getelementptr inbounds i8, i8* %2, i64 %65
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4, !alias.scope !302, !noalias !305
  %69 = mul i32 %68, 506832829
  %70 = lshr i32 %69, 17
  %71 = trunc i32 %70 to i8
  %72 = lshr i64 %53, 3
  %73 = icmp eq i64 %72, 0
  %74 = and i64 %53, 7
  %75 = icmp eq i64 %74, 0
  %76 = icmp eq i64 %74, 1
  %77 = icmp eq i64 %74, 2
  %78 = icmp eq i64 %74, 3
  %79 = icmp eq i64 %74, 4
  %80 = icmp eq i64 %74, 5
  %81 = icmp eq i64 %74, 6
  br label %82

82:                                               ; preds = %160, %52
  %83 = phi i64 [ 2020, %52 ], [ %161, %160 ]
  %84 = phi i64 [ 0, %52 ], [ %162, %160 ]
  %85 = phi i64 [ 0, %52 ], [ %163, %160 ]
  %86 = phi i64 [ 0, %52 ], [ %166, %160 ]
  %87 = phi i64 [ 0, %52 ], [ %165, %160 ]
  %88 = phi i64 [ 2020, %52 ], [ %164, %160 ]
  %89 = getelementptr inbounds i32, i32* %6, i64 %86
  %90 = load i32, i32* %89, align 4, !alias.scope !306, !noalias !307
  %91 = sext i32 %90 to i64
  %92 = sub i64 %54, %91
  %93 = icmp eq i64 %86, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %82
  %95 = and i64 %92, 65535
  %96 = getelementptr inbounds i8, i8* %64, i64 %95
  %97 = load i8, i8* %96, align 1, !noalias !308
  %98 = icmp eq i8 %97, %71
  br i1 %98, label %99, label %160

99:                                               ; preds = %94, %82
  %100 = icmp uge i64 %92, %54
  %101 = icmp ult i64 %59, %91
  %102 = or i1 %101, %100
  br i1 %102, label %160, label %103

103:                                              ; preds = %99
  %104 = and i64 %92, %3
  %105 = getelementptr inbounds i8, i8* %2, i64 %104
  br i1 %73, label %126, label %106, !prof !13

106:                                              ; preds = %103, %116
  %107 = phi i64 [ %119, %116 ], [ %72, %103 ]
  %108 = phi i8* [ %117, %116 ], [ %66, %103 ]
  %109 = phi i64 [ %118, %116 ], [ 0, %103 ]
  %110 = bitcast i8* %108 to i64*
  %111 = load i64, i64* %110, align 8, !alias.scope !309, !noalias !305
  %112 = getelementptr inbounds i8, i8* %105, i64 %109
  %113 = bitcast i8* %112 to i64*
  %114 = load i64, i64* %113, align 8, !alias.scope !309, !noalias !305
  %115 = icmp eq i64 %111, %114
  br i1 %115, label %116, label %121, !prof !13

116:                                              ; preds = %106
  %117 = getelementptr inbounds i8, i8* %108, i64 8
  %118 = add nuw i64 %109, 8
  %119 = add nsw i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %126, label %106, !prof !13

121:                                              ; preds = %106
  %122 = xor i64 %114, %111
  %123 = tail call i64 @llvm.cttz.i64(i64 %122, i1 true) #4, !range !14
  %124 = lshr i64 %123, 3
  %125 = or i64 %124, %109
  br label %136

126:                                              ; preds = %116, %103
  %127 = phi i64 [ 0, %103 ], [ %118, %116 ]
  %128 = phi i8* [ %66, %103 ], [ %117, %116 ]
  br i1 %75, label %136, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds i8, i8* %105, i64 %127
  %131 = load i8, i8* %130, align 1, !alias.scope !309, !noalias !305
  %132 = load i8, i8* %128, align 1, !alias.scope !309, !noalias !305
  %133 = icmp eq i8 %131, %132
  br i1 %133, label %134, label %136, !prof !15

134:                                              ; preds = %129
  %135 = add i64 %127, 1
  br i1 %76, label %136, label %1216

136:                                              ; preds = %1256, %134, %129, %1216, %1222, %1224, %1230, %1232, %1238, %1240, %1246, %1248, %1254, %126, %121
  %137 = phi i64 [ %125, %121 ], [ %127, %126 ], [ %127, %129 ], [ %135, %134 ], [ %135, %1216 ], [ %1223, %1222 ], [ %1223, %1224 ], [ %1231, %1230 ], [ %1231, %1232 ], [ %1239, %1238 ], [ %1239, %1240 ], [ %1247, %1246 ], [ %1247, %1248 ], [ %1255, %1254 ], [ %1263, %1256 ]
  %138 = icmp ugt i64 %137, 1
  br i1 %138, label %139, label %160

139:                                              ; preds = %136
  %140 = mul i64 %137, 135
  %141 = add i64 %140, 1935
  %142 = icmp ult i64 %88, %141
  br i1 %142, label %143, label %160

143:                                              ; preds = %139
  br i1 %93, label %152, label %144

144:                                              ; preds = %143
  %145 = trunc i64 %86 to i32
  %146 = and i32 %145, 14
  %147 = lshr i32 117264, %146
  %148 = and i32 %147, 14
  %149 = add nuw nsw i32 %148, 39
  %150 = zext i32 %149 to i64
  %151 = sub i64 %141, %150
  br label %152

152:                                              ; preds = %144, %143
  %153 = phi i64 [ %151, %144 ], [ %141, %143 ]
  %154 = icmp ult i64 %88, %153
  %155 = select i1 %154, i64 %153, i64 %83
  %156 = select i1 %154, i64 %91, i64 %84
  %157 = select i1 %154, i64 %137, i64 %85
  %158 = select i1 %154, i64 %153, i64 %88
  %159 = select i1 %154, i64 %137, i64 %87
  br label %160

160:                                              ; preds = %152, %139, %136, %99, %94
  %161 = phi i64 [ %83, %99 ], [ %83, %139 ], [ %83, %136 ], [ %83, %94 ], [ %155, %152 ]
  %162 = phi i64 [ %84, %99 ], [ %84, %139 ], [ %84, %136 ], [ %84, %94 ], [ %156, %152 ]
  %163 = phi i64 [ %85, %99 ], [ %85, %139 ], [ %85, %136 ], [ %85, %94 ], [ %157, %152 ]
  %164 = phi i64 [ %88, %99 ], [ %88, %139 ], [ %88, %136 ], [ %88, %94 ], [ %158, %152 ]
  %165 = phi i64 [ %87, %99 ], [ %87, %139 ], [ %87, %136 ], [ %87, %94 ], [ %159, %152 ]
  %166 = add nuw nsw i64 %86, 1
  %167 = icmp eq i64 %166, 4
  br i1 %167, label %168, label %82

168:                                              ; preds = %160
  %169 = select i1 %61, i64 %60, i64 %16
  %170 = getelementptr inbounds i8, i8* %63, i64 131072
  %171 = getelementptr inbounds i8, i8* %63, i64 262144
  %172 = bitcast i8* %63 to i32*
  %173 = bitcast i8* %170 to i16*
  %174 = bitcast i8* %171 to %struct.BankH40*
  %175 = zext i32 %70 to i64
  %176 = load i64, i64* %36, align 8, !alias.scope !295, !noalias !298
  %177 = getelementptr inbounds i32, i32* %172, i64 %175
  %178 = load i32, i32* %177, align 4, !noalias !308
  %179 = zext i32 %178 to i64
  %180 = sub i64 %54, %179
  %181 = getelementptr inbounds i16, i16* %173, i64 %175
  %182 = icmp eq i64 %176, 0
  br i1 %182, label %281, label %183

183:                                              ; preds = %168
  %184 = load i16, i16* %181, align 2, !noalias !308
  %185 = icmp eq i64 %74, 1
  %186 = icmp eq i64 %74, 2
  %187 = icmp eq i64 %74, 3
  %188 = icmp eq i64 %74, 4
  %189 = icmp eq i64 %74, 5
  %190 = icmp eq i64 %74, 6
  br label %191

191:                                              ; preds = %274, %183
  %192 = phi i64 [ %161, %183 ], [ %275, %274 ]
  %193 = phi i64 [ %162, %183 ], [ %276, %274 ]
  %194 = phi i64 [ %163, %183 ], [ %277, %274 ]
  %195 = phi i64 [ %176, %183 ], [ %202, %274 ]
  %196 = phi i16 [ %184, %183 ], [ %209, %274 ]
  %197 = phi i64 [ %180, %183 ], [ %212, %274 ]
  %198 = phi i64 [ 0, %183 ], [ %203, %274 ]
  %199 = phi i64 [ %165, %183 ], [ %279, %274 ]
  %200 = phi i64 [ %164, %183 ], [ %278, %274 ]
  %201 = zext i16 %196 to i64
  %202 = add i64 %195, -1
  %203 = add i64 %198, %197
  %204 = icmp ugt i64 %203, %59
  br i1 %204, label %281, label %205

205:                                              ; preds = %191
  %206 = sub i64 %54, %203
  %207 = and i64 %206, %3
  %208 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %174, i64 0, i32 0, i64 %201, i32 1
  %209 = load i16, i16* %208, align 2, !noalias !308
  %210 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %174, i64 0, i32 0, i64 %201, i32 0
  %211 = load i16, i16* %210, align 2, !noalias !308
  %212 = zext i16 %211 to i64
  %213 = add i64 %199, %65
  %214 = icmp ugt i64 %213, %3
  br i1 %214, label %274, label %215

215:                                              ; preds = %205
  %216 = add i64 %207, %199
  %217 = icmp ugt i64 %216, %3
  br i1 %217, label %274, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds i8, i8* %2, i64 %213
  %220 = load i8, i8* %219, align 1, !alias.scope !309, !noalias !305
  %221 = getelementptr inbounds i8, i8* %2, i64 %216
  %222 = load i8, i8* %221, align 1, !alias.scope !309, !noalias !305
  %223 = icmp eq i8 %220, %222
  br i1 %223, label %224, label %274

224:                                              ; preds = %218
  %225 = getelementptr inbounds i8, i8* %2, i64 %207
  br i1 %73, label %246, label %226, !prof !13

226:                                              ; preds = %224, %236
  %227 = phi i64 [ %239, %236 ], [ %72, %224 ]
  %228 = phi i8* [ %237, %236 ], [ %66, %224 ]
  %229 = phi i64 [ %238, %236 ], [ 0, %224 ]
  %230 = bitcast i8* %228 to i64*
  %231 = load i64, i64* %230, align 8, !alias.scope !309, !noalias !305
  %232 = getelementptr inbounds i8, i8* %225, i64 %229
  %233 = bitcast i8* %232 to i64*
  %234 = load i64, i64* %233, align 8, !alias.scope !309, !noalias !305
  %235 = icmp eq i64 %231, %234
  br i1 %235, label %236, label %241, !prof !13

236:                                              ; preds = %226
  %237 = getelementptr inbounds i8, i8* %228, i64 8
  %238 = add nuw i64 %229, 8
  %239 = add nsw i64 %227, -1
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %246, label %226, !prof !13

241:                                              ; preds = %226
  %242 = xor i64 %234, %231
  %243 = tail call i64 @llvm.cttz.i64(i64 %242, i1 true) #4, !range !14
  %244 = lshr i64 %243, 3
  %245 = or i64 %244, %229
  br label %256

246:                                              ; preds = %236, %224
  %247 = phi i64 [ 0, %224 ], [ %238, %236 ]
  %248 = phi i8* [ %66, %224 ], [ %237, %236 ]
  br i1 %75, label %256, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds i8, i8* %225, i64 %247
  %251 = load i8, i8* %250, align 1, !alias.scope !309, !noalias !305
  %252 = load i8, i8* %248, align 1, !alias.scope !309, !noalias !305
  %253 = icmp eq i8 %251, %252
  br i1 %253, label %254, label %256, !prof !15

254:                                              ; preds = %249
  %255 = add i64 %247, 1
  br i1 %185, label %256, label %1264

256:                                              ; preds = %1304, %254, %249, %1264, %1270, %1272, %1278, %1280, %1286, %1288, %1294, %1296, %1302, %246, %241
  %257 = phi i64 [ %245, %241 ], [ %247, %246 ], [ %247, %249 ], [ %255, %254 ], [ %255, %1264 ], [ %1271, %1270 ], [ %1271, %1272 ], [ %1279, %1278 ], [ %1279, %1280 ], [ %1287, %1286 ], [ %1287, %1288 ], [ %1295, %1294 ], [ %1295, %1296 ], [ %1303, %1302 ], [ %1311, %1304 ]
  %258 = icmp ugt i64 %257, 3
  br i1 %258, label %259, label %274

259:                                              ; preds = %256
  %260 = mul i64 %257, 135
  %261 = trunc i64 %203 to i32
  %262 = tail call i32 @llvm.ctlz.i32(i32 %261, i1 true) #4, !range !18
  %263 = xor i32 %262, 31
  %264 = mul nsw i32 %263, -30
  %265 = add nsw i32 %264, 1920
  %266 = zext i32 %265 to i64
  %267 = add i64 %260, %266
  %268 = icmp ult i64 %200, %267
  %269 = select i1 %268, i64 %267, i64 %192
  %270 = select i1 %268, i64 %203, i64 %193
  %271 = select i1 %268, i64 %257, i64 %194
  %272 = select i1 %268, i64 %267, i64 %200
  %273 = select i1 %268, i64 %257, i64 %199
  br label %274

274:                                              ; preds = %259, %256, %218, %215, %205
  %275 = phi i64 [ %192, %205 ], [ %192, %215 ], [ %192, %256 ], [ %192, %218 ], [ %269, %259 ]
  %276 = phi i64 [ %193, %205 ], [ %193, %215 ], [ %193, %256 ], [ %193, %218 ], [ %270, %259 ]
  %277 = phi i64 [ %194, %205 ], [ %194, %215 ], [ %194, %256 ], [ %194, %218 ], [ %271, %259 ]
  %278 = phi i64 [ %200, %205 ], [ %200, %215 ], [ %200, %256 ], [ %200, %218 ], [ %272, %259 ]
  %279 = phi i64 [ %199, %205 ], [ %199, %215 ], [ %199, %256 ], [ %199, %218 ], [ %273, %259 ]
  %280 = icmp eq i64 %202, 0
  br i1 %280, label %281, label %191

281:                                              ; preds = %274, %191, %168
  %282 = phi i64 [ %161, %168 ], [ %275, %274 ], [ %192, %191 ]
  %283 = phi i64 [ %162, %168 ], [ %276, %274 ], [ %193, %191 ]
  %284 = phi i64 [ %163, %168 ], [ %277, %274 ], [ %194, %191 ]
  %285 = phi i64 [ %164, %168 ], [ %278, %274 ], [ %200, %191 ]
  %286 = load i16, i16* %37, align 2, !alias.scope !310, !noalias !313
  %287 = add i16 %286, 1
  store i16 %287, i16* %37, align 2, !alias.scope !310, !noalias !313
  %288 = zext i16 %286 to i64
  %289 = and i64 %54, 65535
  %290 = getelementptr inbounds i8, i8* %64, i64 %289
  store i8 %71, i8* %290, align 1, !noalias !315
  %291 = icmp ult i64 %180, 65535
  %292 = select i1 %291, i64 %180, i64 65535
  %293 = trunc i64 %292 to i16
  %294 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %174, i64 0, i32 0, i64 %288, i32 0
  store i16 %293, i16* %294, align 2, !noalias !315
  %295 = load i16, i16* %181, align 2, !noalias !315
  %296 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %174, i64 0, i32 0, i64 %288, i32 1
  store i16 %295, i16* %296, align 2, !noalias !315
  %297 = trunc i64 %54 to i32
  store i32 %297, i32* %177, align 4, !noalias !315
  store i16 %286, i16* %181, align 2, !noalias !315
  %298 = icmp eq i64 %285, 2020
  br i1 %298, label %299, label %427

299:                                              ; preds = %281
  %300 = load %struct.HasherCommon*, %struct.HasherCommon** %39, align 8, !alias.scope !295, !noalias !298
  %301 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %300, i64 0, i32 2
  %302 = load i64, i64* %301, align 8, !noalias !308
  %303 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %300, i64 0, i32 1
  %304 = load i64, i64* %303, align 8, !noalias !308
  %305 = lshr i64 %304, 7
  %306 = icmp ult i64 %302, %305
  br i1 %306, label %427, label %307

307:                                              ; preds = %299
  %308 = lshr i32 %69, 18
  %309 = shl nuw nsw i32 %308, 1
  %310 = zext i32 %309 to i64
  %311 = add i64 %169, 1
  br label %312

312:                                              ; preds = %417, %307
  %313 = phi i32 [ 0, %307 ], [ %418, %417 ]
  %314 = phi i64 [ %282, %307 ], [ %419, %417 ]
  %315 = phi i64 [ %283, %307 ], [ %420, %417 ]
  %316 = phi i64 [ %284, %307 ], [ %421, %417 ]
  %317 = phi i64 [ %302, %307 ], [ %422, %417 ]
  %318 = phi i64 [ 2020, %307 ], [ %423, %417 ]
  %319 = phi i64 [ %304, %307 ], [ %322, %417 ]
  %320 = phi i64 [ %310, %307 ], [ %425, %417 ]
  %321 = phi i64 [ 0, %307 ], [ %424, %417 ]
  %322 = add i64 %319, 1
  store i64 %322, i64* %303, align 8, !noalias !308
  %323 = load i8*, i8** %40, align 8, !noalias !308
  %324 = getelementptr inbounds i8, i8* %323, i64 %320
  %325 = load i8, i8* %324, align 1, !noalias !308
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %417, label %327

327:                                              ; preds = %312
  %328 = zext i8 %325 to i64
  %329 = load i16*, i16** %41, align 8, !noalias !308
  %330 = getelementptr inbounds i16, i16* %329, i64 %320
  %331 = load i16, i16* %330, align 2, !noalias !308
  %332 = zext i16 %331 to i64
  %333 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %42, align 8, !noalias !308
  %334 = icmp ult i64 %53, %328
  br i1 %334, label %417, label %335

335:                                              ; preds = %327
  %336 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %333, i64 0, i32 1, i64 %328
  %337 = load i32, i32* %336, align 4, !noalias !308
  %338 = zext i32 %337 to i64
  %339 = mul nuw nsw i64 %332, %328
  %340 = add nuw nsw i64 %339, %338
  %341 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %333, i64 0, i32 3
  %342 = load i8*, i8** %341, align 8, !noalias !308
  %343 = getelementptr inbounds i8, i8* %342, i64 %340
  %344 = lshr i64 %328, 3
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %366, label %346, !prof !13

346:                                              ; preds = %335, %356
  %347 = phi i64 [ %359, %356 ], [ %344, %335 ]
  %348 = phi i8* [ %357, %356 ], [ %343, %335 ]
  %349 = phi i64 [ %358, %356 ], [ 0, %335 ]
  %350 = bitcast i8* %348 to i64*
  %351 = load i64, i64* %350, align 8, !noalias !308
  %352 = getelementptr inbounds i8, i8* %66, i64 %349
  %353 = bitcast i8* %352 to i64*
  %354 = load i64, i64* %353, align 8, !alias.scope !309, !noalias !305
  %355 = icmp eq i64 %351, %354
  br i1 %355, label %356, label %361, !prof !13

356:                                              ; preds = %346
  %357 = getelementptr inbounds i8, i8* %348, i64 8
  %358 = add nuw nsw i64 %349, 8
  %359 = add nsw i64 %347, -1
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %366, label %346, !prof !13

361:                                              ; preds = %346
  %362 = xor i64 %354, %351
  %363 = tail call i64 @llvm.cttz.i64(i64 %362, i1 true) #4, !range !14
  %364 = lshr i64 %363, 3
  %365 = or i64 %364, %349
  br label %379

366:                                              ; preds = %356, %335
  %367 = phi i64 [ 0, %335 ], [ %358, %356 ]
  %368 = phi i8* [ %343, %335 ], [ %357, %356 ]
  %369 = and i64 %328, 7
  %370 = icmp eq i64 %369, 0
  br i1 %370, label %379, label %371

371:                                              ; preds = %366
  %372 = getelementptr inbounds i8, i8* %66, i64 %367
  %373 = load i8, i8* %372, align 1, !alias.scope !309, !noalias !305
  %374 = load i8, i8* %368, align 1, !noalias !308
  %375 = icmp eq i8 %373, %374
  br i1 %375, label %376, label %379, !prof !15

376:                                              ; preds = %371
  %377 = add nuw nsw i64 %367, 1
  %378 = icmp eq i64 %369, 1
  br i1 %378, label %379, label %1312

379:                                              ; preds = %1357, %376, %371, %1312, %1318, %1321, %1327, %1330, %1336, %1339, %1345, %1348, %1354, %366, %361
  %380 = phi i64 [ %365, %361 ], [ %367, %366 ], [ %367, %371 ], [ %377, %376 ], [ %377, %1312 ], [ %1319, %1318 ], [ %1319, %1321 ], [ %1328, %1327 ], [ %1328, %1330 ], [ %1337, %1336 ], [ %1337, %1339 ], [ %1346, %1345 ], [ %1346, %1348 ], [ %1355, %1354 ], [ %1364, %1357 ]
  %381 = load i32, i32* %43, align 4, !noalias !308
  %382 = zext i32 %381 to i64
  %383 = add i64 %380, %382
  %384 = icmp ule i64 %383, %328
  %385 = icmp eq i64 %380, 0
  %386 = or i1 %385, %384
  br i1 %386, label %417, label %387

387:                                              ; preds = %379
  %388 = sub i64 %328, %380
  %389 = shl i64 %388, 2
  %390 = load i64, i64* %44, align 8, !noalias !308
  %391 = mul i64 %388, 6
  %392 = lshr i64 %390, %391
  %393 = and i64 %392, 63
  %394 = add i64 %393, %389
  %395 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %333, i64 0, i32 0, i64 %328
  %396 = load i8, i8* %395, align 1, !noalias !308
  %397 = zext i8 %396 to i64
  %398 = shl i64 %394, %397
  %399 = add i64 %311, %332
  %400 = add i64 %399, %398
  %401 = icmp ugt i64 %400, %62
  br i1 %401, label %417, label %402

402:                                              ; preds = %387
  %403 = mul i64 %380, 135
  %404 = add i64 %403, 1920
  %405 = trunc i64 %400 to i32
  %406 = tail call i32 @llvm.ctlz.i32(i32 %405, i1 true) #4, !range !18
  %407 = xor i32 %406, 31
  %408 = mul nuw nsw i32 %407, 30
  %409 = zext i32 %408 to i64
  %410 = sub i64 %404, %409
  %411 = icmp ult i64 %410, %318
  br i1 %411, label %417, label %412

412:                                              ; preds = %402
  %413 = zext i8 %325 to i32
  %414 = trunc i64 %380 to i32
  %415 = sub nsw i32 %413, %414
  %416 = add i64 %317, 1
  store i64 %416, i64* %301, align 8, !noalias !308
  br label %417

417:                                              ; preds = %412, %402, %387, %379, %327, %312
  %418 = phi i32 [ %313, %312 ], [ %313, %327 ], [ %313, %379 ], [ %313, %387 ], [ %313, %402 ], [ %415, %412 ]
  %419 = phi i64 [ %314, %312 ], [ %314, %327 ], [ %314, %379 ], [ %314, %387 ], [ %314, %402 ], [ %410, %412 ]
  %420 = phi i64 [ %315, %312 ], [ %315, %327 ], [ %315, %379 ], [ %315, %387 ], [ %315, %402 ], [ %400, %412 ]
  %421 = phi i64 [ %316, %312 ], [ %316, %327 ], [ %316, %379 ], [ %316, %387 ], [ %316, %402 ], [ %380, %412 ]
  %422 = phi i64 [ %317, %312 ], [ %317, %327 ], [ %317, %379 ], [ %317, %387 ], [ %317, %402 ], [ %416, %412 ]
  %423 = phi i64 [ %318, %312 ], [ %318, %327 ], [ %318, %379 ], [ %318, %387 ], [ %318, %402 ], [ %410, %412 ]
  %424 = add nuw nsw i64 %321, 1
  %425 = add nuw nsw i64 %320, 1
  %426 = icmp eq i64 %424, 2
  br i1 %426, label %427, label %312

427:                                              ; preds = %417, %281, %299
  %428 = phi i32 [ 0, %299 ], [ 0, %281 ], [ %418, %417 ]
  %429 = phi i64 [ %282, %299 ], [ %282, %281 ], [ %419, %417 ]
  %430 = phi i64 [ %283, %299 ], [ %283, %281 ], [ %420, %417 ]
  %431 = phi i64 [ %284, %299 ], [ %284, %281 ], [ %421, %417 ]
  %432 = icmp ugt i64 %429, 2020
  br i1 %432, label %433, label %1098

433:                                              ; preds = %427, %830
  %434 = phi i32 [ %822, %830 ], [ %428, %427 ]
  %435 = phi i64 [ %823, %830 ], [ %429, %427 ]
  %436 = phi i64 [ %824, %830 ], [ %430, %427 ]
  %437 = phi i64 [ %825, %830 ], [ %431, %427 ]
  %438 = phi i64 [ %831, %830 ], [ %57, %427 ]
  %439 = phi i64 [ %442, %830 ], [ %53, %427 ]
  %440 = phi i32 [ %832, %830 ], [ 0, %427 ]
  %441 = phi i64 [ %451, %830 ], [ %54, %427 ]
  %442 = add i64 %439, -1
  %443 = load i32, i32* %24, align 4
  %444 = icmp slt i32 %443, 5
  br i1 %444, label %445, label %449

445:                                              ; preds = %433
  %446 = add i64 %437, -1
  %447 = icmp ult i64 %446, %442
  %448 = select i1 %447, i64 %446, i64 %442
  br label %449

449:                                              ; preds = %433, %445
  %450 = phi i64 [ %448, %445 ], [ 0, %433 ]
  %451 = add i64 %441, 1
  %452 = icmp ult i64 %451, %16
  %453 = select i1 %452, i64 %451, i64 %16
  %454 = add i64 %451, %18
  %455 = icmp ult i64 %454, %16
  %456 = load i64, i64* %32, align 8
  %457 = load i8*, i8** %34, align 8, !alias.scope !316, !noalias !319
  %458 = getelementptr inbounds i8, i8* %457, i64 196608
  %459 = and i64 %451, %3
  %460 = getelementptr inbounds i8, i8* %2, i64 %459
  %461 = bitcast i8* %460 to i32*
  %462 = load i32, i32* %461, align 4, !alias.scope !323, !noalias !326
  %463 = mul i32 %462, 506832829
  %464 = lshr i32 %463, 17
  %465 = trunc i32 %464 to i8
  %466 = lshr i64 %442, 3
  %467 = icmp eq i64 %466, 0
  %468 = and i64 %442, 7
  %469 = icmp eq i64 %468, 0
  %470 = icmp eq i64 %468, 1
  %471 = icmp eq i64 %468, 2
  %472 = icmp eq i64 %468, 3
  %473 = icmp eq i64 %468, 4
  %474 = icmp eq i64 %468, 5
  %475 = icmp eq i64 %468, 6
  br label %476

476:                                              ; preds = %554, %449
  %477 = phi i64 [ 2020, %449 ], [ %555, %554 ]
  %478 = phi i64 [ 0, %449 ], [ %556, %554 ]
  %479 = phi i64 [ 0, %449 ], [ %557, %554 ]
  %480 = phi i64 [ 0, %449 ], [ %560, %554 ]
  %481 = phi i64 [ %450, %449 ], [ %559, %554 ]
  %482 = phi i64 [ 2020, %449 ], [ %558, %554 ]
  %483 = getelementptr inbounds i32, i32* %6, i64 %480
  %484 = load i32, i32* %483, align 4, !alias.scope !327, !noalias !328
  %485 = sext i32 %484 to i64
  %486 = sub i64 %451, %485
  %487 = icmp eq i64 %480, 0
  br i1 %487, label %493, label %488

488:                                              ; preds = %476
  %489 = and i64 %486, 65535
  %490 = getelementptr inbounds i8, i8* %458, i64 %489
  %491 = load i8, i8* %490, align 1, !noalias !329
  %492 = icmp eq i8 %491, %465
  br i1 %492, label %493, label %554

493:                                              ; preds = %488, %476
  %494 = icmp uge i64 %486, %451
  %495 = icmp ult i64 %453, %485
  %496 = or i1 %495, %494
  br i1 %496, label %554, label %497

497:                                              ; preds = %493
  %498 = and i64 %486, %3
  %499 = getelementptr inbounds i8, i8* %2, i64 %498
  br i1 %467, label %520, label %500, !prof !13

500:                                              ; preds = %497, %510
  %501 = phi i64 [ %513, %510 ], [ %466, %497 ]
  %502 = phi i8* [ %511, %510 ], [ %460, %497 ]
  %503 = phi i64 [ %512, %510 ], [ 0, %497 ]
  %504 = bitcast i8* %502 to i64*
  %505 = load i64, i64* %504, align 8, !alias.scope !330, !noalias !326
  %506 = getelementptr inbounds i8, i8* %499, i64 %503
  %507 = bitcast i8* %506 to i64*
  %508 = load i64, i64* %507, align 8, !alias.scope !330, !noalias !326
  %509 = icmp eq i64 %505, %508
  br i1 %509, label %510, label %515, !prof !13

510:                                              ; preds = %500
  %511 = getelementptr inbounds i8, i8* %502, i64 8
  %512 = add nuw i64 %503, 8
  %513 = add nsw i64 %501, -1
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %520, label %500, !prof !13

515:                                              ; preds = %500
  %516 = xor i64 %508, %505
  %517 = tail call i64 @llvm.cttz.i64(i64 %516, i1 true) #4, !range !14
  %518 = lshr i64 %517, 3
  %519 = or i64 %518, %503
  br label %530

520:                                              ; preds = %510, %497
  %521 = phi i64 [ 0, %497 ], [ %512, %510 ]
  %522 = phi i8* [ %460, %497 ], [ %511, %510 ]
  br i1 %469, label %530, label %523

523:                                              ; preds = %520
  %524 = getelementptr inbounds i8, i8* %499, i64 %521
  %525 = load i8, i8* %524, align 1, !alias.scope !330, !noalias !326
  %526 = load i8, i8* %522, align 1, !alias.scope !330, !noalias !326
  %527 = icmp eq i8 %525, %526
  br i1 %527, label %528, label %530, !prof !15

528:                                              ; preds = %523
  %529 = add i64 %521, 1
  br i1 %470, label %530, label %1365

530:                                              ; preds = %1405, %528, %523, %1365, %1371, %1373, %1379, %1381, %1387, %1389, %1395, %1397, %1403, %520, %515
  %531 = phi i64 [ %519, %515 ], [ %521, %520 ], [ %521, %523 ], [ %529, %528 ], [ %529, %1365 ], [ %1372, %1371 ], [ %1372, %1373 ], [ %1380, %1379 ], [ %1380, %1381 ], [ %1388, %1387 ], [ %1388, %1389 ], [ %1396, %1395 ], [ %1396, %1397 ], [ %1404, %1403 ], [ %1412, %1405 ]
  %532 = icmp ugt i64 %531, 1
  br i1 %532, label %533, label %554

533:                                              ; preds = %530
  %534 = mul i64 %531, 135
  %535 = add i64 %534, 1935
  %536 = icmp ult i64 %482, %535
  br i1 %536, label %537, label %554

537:                                              ; preds = %533
  br i1 %487, label %546, label %538

538:                                              ; preds = %537
  %539 = trunc i64 %480 to i32
  %540 = and i32 %539, 14
  %541 = lshr i32 117264, %540
  %542 = and i32 %541, 14
  %543 = add nuw nsw i32 %542, 39
  %544 = zext i32 %543 to i64
  %545 = sub i64 %535, %544
  br label %546

546:                                              ; preds = %538, %537
  %547 = phi i64 [ %545, %538 ], [ %535, %537 ]
  %548 = icmp ult i64 %482, %547
  %549 = select i1 %548, i64 %547, i64 %477
  %550 = select i1 %548, i64 %485, i64 %478
  %551 = select i1 %548, i64 %531, i64 %479
  %552 = select i1 %548, i64 %547, i64 %482
  %553 = select i1 %548, i64 %531, i64 %481
  br label %554

554:                                              ; preds = %546, %533, %530, %493, %488
  %555 = phi i64 [ %477, %493 ], [ %477, %533 ], [ %477, %530 ], [ %477, %488 ], [ %549, %546 ]
  %556 = phi i64 [ %478, %493 ], [ %478, %533 ], [ %478, %530 ], [ %478, %488 ], [ %550, %546 ]
  %557 = phi i64 [ %479, %493 ], [ %479, %533 ], [ %479, %530 ], [ %479, %488 ], [ %551, %546 ]
  %558 = phi i64 [ %482, %493 ], [ %482, %533 ], [ %482, %530 ], [ %482, %488 ], [ %552, %546 ]
  %559 = phi i64 [ %481, %493 ], [ %481, %533 ], [ %481, %530 ], [ %481, %488 ], [ %553, %546 ]
  %560 = add nuw nsw i64 %480, 1
  %561 = icmp eq i64 %560, 4
  br i1 %561, label %562, label %476

562:                                              ; preds = %554
  %563 = select i1 %455, i64 %454, i64 %16
  %564 = getelementptr inbounds i8, i8* %457, i64 131072
  %565 = getelementptr inbounds i8, i8* %457, i64 262144
  %566 = bitcast i8* %457 to i32*
  %567 = bitcast i8* %564 to i16*
  %568 = bitcast i8* %565 to %struct.BankH40*
  %569 = zext i32 %464 to i64
  %570 = load i64, i64* %36, align 8, !alias.scope !316, !noalias !319
  %571 = getelementptr inbounds i32, i32* %566, i64 %569
  %572 = load i32, i32* %571, align 4, !noalias !329
  %573 = zext i32 %572 to i64
  %574 = sub i64 %451, %573
  %575 = getelementptr inbounds i16, i16* %567, i64 %569
  %576 = icmp eq i64 %570, 0
  br i1 %576, label %675, label %577

577:                                              ; preds = %562
  %578 = load i16, i16* %575, align 2, !noalias !329
  %579 = icmp eq i64 %468, 1
  %580 = icmp eq i64 %468, 2
  %581 = icmp eq i64 %468, 3
  %582 = icmp eq i64 %468, 4
  %583 = icmp eq i64 %468, 5
  %584 = icmp eq i64 %468, 6
  br label %585

585:                                              ; preds = %668, %577
  %586 = phi i64 [ %555, %577 ], [ %669, %668 ]
  %587 = phi i64 [ %556, %577 ], [ %670, %668 ]
  %588 = phi i64 [ %557, %577 ], [ %671, %668 ]
  %589 = phi i64 [ %570, %577 ], [ %596, %668 ]
  %590 = phi i16 [ %578, %577 ], [ %603, %668 ]
  %591 = phi i64 [ %574, %577 ], [ %606, %668 ]
  %592 = phi i64 [ 0, %577 ], [ %597, %668 ]
  %593 = phi i64 [ %559, %577 ], [ %673, %668 ]
  %594 = phi i64 [ %558, %577 ], [ %672, %668 ]
  %595 = zext i16 %590 to i64
  %596 = add i64 %589, -1
  %597 = add i64 %592, %591
  %598 = icmp ugt i64 %597, %453
  br i1 %598, label %675, label %599

599:                                              ; preds = %585
  %600 = sub i64 %451, %597
  %601 = and i64 %600, %3
  %602 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %568, i64 0, i32 0, i64 %595, i32 1
  %603 = load i16, i16* %602, align 2, !noalias !329
  %604 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %568, i64 0, i32 0, i64 %595, i32 0
  %605 = load i16, i16* %604, align 2, !noalias !329
  %606 = zext i16 %605 to i64
  %607 = add i64 %593, %459
  %608 = icmp ugt i64 %607, %3
  br i1 %608, label %668, label %609

609:                                              ; preds = %599
  %610 = add i64 %601, %593
  %611 = icmp ugt i64 %610, %3
  br i1 %611, label %668, label %612

612:                                              ; preds = %609
  %613 = getelementptr inbounds i8, i8* %2, i64 %607
  %614 = load i8, i8* %613, align 1, !alias.scope !330, !noalias !326
  %615 = getelementptr inbounds i8, i8* %2, i64 %610
  %616 = load i8, i8* %615, align 1, !alias.scope !330, !noalias !326
  %617 = icmp eq i8 %614, %616
  br i1 %617, label %618, label %668

618:                                              ; preds = %612
  %619 = getelementptr inbounds i8, i8* %2, i64 %601
  br i1 %467, label %640, label %620, !prof !13

620:                                              ; preds = %618, %630
  %621 = phi i64 [ %633, %630 ], [ %466, %618 ]
  %622 = phi i8* [ %631, %630 ], [ %460, %618 ]
  %623 = phi i64 [ %632, %630 ], [ 0, %618 ]
  %624 = bitcast i8* %622 to i64*
  %625 = load i64, i64* %624, align 8, !alias.scope !330, !noalias !326
  %626 = getelementptr inbounds i8, i8* %619, i64 %623
  %627 = bitcast i8* %626 to i64*
  %628 = load i64, i64* %627, align 8, !alias.scope !330, !noalias !326
  %629 = icmp eq i64 %625, %628
  br i1 %629, label %630, label %635, !prof !13

630:                                              ; preds = %620
  %631 = getelementptr inbounds i8, i8* %622, i64 8
  %632 = add nuw i64 %623, 8
  %633 = add nsw i64 %621, -1
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %640, label %620, !prof !13

635:                                              ; preds = %620
  %636 = xor i64 %628, %625
  %637 = tail call i64 @llvm.cttz.i64(i64 %636, i1 true) #4, !range !14
  %638 = lshr i64 %637, 3
  %639 = or i64 %638, %623
  br label %650

640:                                              ; preds = %630, %618
  %641 = phi i64 [ 0, %618 ], [ %632, %630 ]
  %642 = phi i8* [ %460, %618 ], [ %631, %630 ]
  br i1 %469, label %650, label %643

643:                                              ; preds = %640
  %644 = getelementptr inbounds i8, i8* %619, i64 %641
  %645 = load i8, i8* %644, align 1, !alias.scope !330, !noalias !326
  %646 = load i8, i8* %642, align 1, !alias.scope !330, !noalias !326
  %647 = icmp eq i8 %645, %646
  br i1 %647, label %648, label %650, !prof !15

648:                                              ; preds = %643
  %649 = add i64 %641, 1
  br i1 %579, label %650, label %1413

650:                                              ; preds = %1453, %648, %643, %1413, %1419, %1421, %1427, %1429, %1435, %1437, %1443, %1445, %1451, %640, %635
  %651 = phi i64 [ %639, %635 ], [ %641, %640 ], [ %641, %643 ], [ %649, %648 ], [ %649, %1413 ], [ %1420, %1419 ], [ %1420, %1421 ], [ %1428, %1427 ], [ %1428, %1429 ], [ %1436, %1435 ], [ %1436, %1437 ], [ %1444, %1443 ], [ %1444, %1445 ], [ %1452, %1451 ], [ %1460, %1453 ]
  %652 = icmp ugt i64 %651, 3
  br i1 %652, label %653, label %668

653:                                              ; preds = %650
  %654 = mul i64 %651, 135
  %655 = trunc i64 %597 to i32
  %656 = tail call i32 @llvm.ctlz.i32(i32 %655, i1 true) #4, !range !18
  %657 = xor i32 %656, 31
  %658 = mul nsw i32 %657, -30
  %659 = add nsw i32 %658, 1920
  %660 = zext i32 %659 to i64
  %661 = add i64 %654, %660
  %662 = icmp ult i64 %594, %661
  %663 = select i1 %662, i64 %661, i64 %586
  %664 = select i1 %662, i64 %597, i64 %587
  %665 = select i1 %662, i64 %651, i64 %588
  %666 = select i1 %662, i64 %661, i64 %594
  %667 = select i1 %662, i64 %651, i64 %593
  br label %668

668:                                              ; preds = %653, %650, %612, %609, %599
  %669 = phi i64 [ %586, %599 ], [ %586, %609 ], [ %586, %650 ], [ %586, %612 ], [ %663, %653 ]
  %670 = phi i64 [ %587, %599 ], [ %587, %609 ], [ %587, %650 ], [ %587, %612 ], [ %664, %653 ]
  %671 = phi i64 [ %588, %599 ], [ %588, %609 ], [ %588, %650 ], [ %588, %612 ], [ %665, %653 ]
  %672 = phi i64 [ %594, %599 ], [ %594, %609 ], [ %594, %650 ], [ %594, %612 ], [ %666, %653 ]
  %673 = phi i64 [ %593, %599 ], [ %593, %609 ], [ %593, %650 ], [ %593, %612 ], [ %667, %653 ]
  %674 = icmp eq i64 %596, 0
  br i1 %674, label %675, label %585

675:                                              ; preds = %668, %585, %562
  %676 = phi i64 [ %555, %562 ], [ %669, %668 ], [ %586, %585 ]
  %677 = phi i64 [ %556, %562 ], [ %670, %668 ], [ %587, %585 ]
  %678 = phi i64 [ %557, %562 ], [ %671, %668 ], [ %588, %585 ]
  %679 = phi i64 [ %558, %562 ], [ %672, %668 ], [ %594, %585 ]
  %680 = load i16, i16* %37, align 2, !alias.scope !331, !noalias !334
  %681 = add i16 %680, 1
  store i16 %681, i16* %37, align 2, !alias.scope !331, !noalias !334
  %682 = zext i16 %680 to i64
  %683 = and i64 %451, 65535
  %684 = getelementptr inbounds i8, i8* %458, i64 %683
  store i8 %465, i8* %684, align 1, !noalias !336
  %685 = icmp ult i64 %574, 65535
  %686 = select i1 %685, i64 %574, i64 65535
  %687 = trunc i64 %686 to i16
  %688 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %568, i64 0, i32 0, i64 %682, i32 0
  store i16 %687, i16* %688, align 2, !noalias !336
  %689 = load i16, i16* %575, align 2, !noalias !336
  %690 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %568, i64 0, i32 0, i64 %682, i32 1
  store i16 %689, i16* %690, align 2, !noalias !336
  %691 = trunc i64 %451 to i32
  store i32 %691, i32* %571, align 4, !noalias !336
  store i16 %680, i16* %575, align 2, !noalias !336
  %692 = icmp eq i64 %679, 2020
  br i1 %692, label %693, label %821

693:                                              ; preds = %675
  %694 = load %struct.HasherCommon*, %struct.HasherCommon** %39, align 8, !alias.scope !316, !noalias !319
  %695 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %694, i64 0, i32 2
  %696 = load i64, i64* %695, align 8, !noalias !329
  %697 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %694, i64 0, i32 1
  %698 = load i64, i64* %697, align 8, !noalias !329
  %699 = lshr i64 %698, 7
  %700 = icmp ult i64 %696, %699
  br i1 %700, label %821, label %701

701:                                              ; preds = %693
  %702 = lshr i32 %463, 18
  %703 = shl nuw nsw i32 %702, 1
  %704 = zext i32 %703 to i64
  %705 = add i64 %563, 1
  br label %706

706:                                              ; preds = %811, %701
  %707 = phi i32 [ 0, %701 ], [ %812, %811 ]
  %708 = phi i64 [ %676, %701 ], [ %813, %811 ]
  %709 = phi i64 [ %677, %701 ], [ %814, %811 ]
  %710 = phi i64 [ %678, %701 ], [ %815, %811 ]
  %711 = phi i64 [ %696, %701 ], [ %816, %811 ]
  %712 = phi i64 [ 2020, %701 ], [ %817, %811 ]
  %713 = phi i64 [ %698, %701 ], [ %716, %811 ]
  %714 = phi i64 [ %704, %701 ], [ %819, %811 ]
  %715 = phi i64 [ 0, %701 ], [ %818, %811 ]
  %716 = add i64 %713, 1
  store i64 %716, i64* %697, align 8, !noalias !329
  %717 = load i8*, i8** %40, align 8, !noalias !329
  %718 = getelementptr inbounds i8, i8* %717, i64 %714
  %719 = load i8, i8* %718, align 1, !noalias !329
  %720 = icmp eq i8 %719, 0
  br i1 %720, label %811, label %721

721:                                              ; preds = %706
  %722 = zext i8 %719 to i64
  %723 = load i16*, i16** %41, align 8, !noalias !329
  %724 = getelementptr inbounds i16, i16* %723, i64 %714
  %725 = load i16, i16* %724, align 2, !noalias !329
  %726 = zext i16 %725 to i64
  %727 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %42, align 8, !noalias !329
  %728 = icmp ult i64 %442, %722
  br i1 %728, label %811, label %729

729:                                              ; preds = %721
  %730 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %727, i64 0, i32 1, i64 %722
  %731 = load i32, i32* %730, align 4, !noalias !329
  %732 = zext i32 %731 to i64
  %733 = mul nuw nsw i64 %726, %722
  %734 = add nuw nsw i64 %733, %732
  %735 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %727, i64 0, i32 3
  %736 = load i8*, i8** %735, align 8, !noalias !329
  %737 = getelementptr inbounds i8, i8* %736, i64 %734
  %738 = lshr i64 %722, 3
  %739 = icmp eq i64 %738, 0
  br i1 %739, label %760, label %740, !prof !13

740:                                              ; preds = %729, %750
  %741 = phi i64 [ %753, %750 ], [ %738, %729 ]
  %742 = phi i8* [ %751, %750 ], [ %737, %729 ]
  %743 = phi i64 [ %752, %750 ], [ 0, %729 ]
  %744 = bitcast i8* %742 to i64*
  %745 = load i64, i64* %744, align 8, !noalias !329
  %746 = getelementptr inbounds i8, i8* %460, i64 %743
  %747 = bitcast i8* %746 to i64*
  %748 = load i64, i64* %747, align 8, !alias.scope !330, !noalias !326
  %749 = icmp eq i64 %745, %748
  br i1 %749, label %750, label %755, !prof !13

750:                                              ; preds = %740
  %751 = getelementptr inbounds i8, i8* %742, i64 8
  %752 = add nuw nsw i64 %743, 8
  %753 = add nsw i64 %741, -1
  %754 = icmp eq i64 %753, 0
  br i1 %754, label %760, label %740, !prof !13

755:                                              ; preds = %740
  %756 = xor i64 %748, %745
  %757 = tail call i64 @llvm.cttz.i64(i64 %756, i1 true) #4, !range !14
  %758 = lshr i64 %757, 3
  %759 = or i64 %758, %743
  br label %773

760:                                              ; preds = %750, %729
  %761 = phi i64 [ 0, %729 ], [ %752, %750 ]
  %762 = phi i8* [ %737, %729 ], [ %751, %750 ]
  %763 = and i64 %722, 7
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %773, label %765

765:                                              ; preds = %760
  %766 = getelementptr inbounds i8, i8* %460, i64 %761
  %767 = load i8, i8* %766, align 1, !alias.scope !330, !noalias !326
  %768 = load i8, i8* %762, align 1, !noalias !329
  %769 = icmp eq i8 %767, %768
  br i1 %769, label %770, label %773, !prof !15

770:                                              ; preds = %765
  %771 = add nuw nsw i64 %761, 1
  %772 = icmp eq i64 %763, 1
  br i1 %772, label %773, label %1461

773:                                              ; preds = %1506, %770, %765, %1461, %1467, %1470, %1476, %1479, %1485, %1488, %1494, %1497, %1503, %760, %755
  %774 = phi i64 [ %759, %755 ], [ %761, %760 ], [ %761, %765 ], [ %771, %770 ], [ %771, %1461 ], [ %1468, %1467 ], [ %1468, %1470 ], [ %1477, %1476 ], [ %1477, %1479 ], [ %1486, %1485 ], [ %1486, %1488 ], [ %1495, %1494 ], [ %1495, %1497 ], [ %1504, %1503 ], [ %1513, %1506 ]
  %775 = load i32, i32* %43, align 4, !noalias !329
  %776 = zext i32 %775 to i64
  %777 = add i64 %774, %776
  %778 = icmp ule i64 %777, %722
  %779 = icmp eq i64 %774, 0
  %780 = or i1 %779, %778
  br i1 %780, label %811, label %781

781:                                              ; preds = %773
  %782 = sub i64 %722, %774
  %783 = shl i64 %782, 2
  %784 = load i64, i64* %44, align 8, !noalias !329
  %785 = mul i64 %782, 6
  %786 = lshr i64 %784, %785
  %787 = and i64 %786, 63
  %788 = add i64 %787, %783
  %789 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %727, i64 0, i32 0, i64 %722
  %790 = load i8, i8* %789, align 1, !noalias !329
  %791 = zext i8 %790 to i64
  %792 = shl i64 %788, %791
  %793 = add i64 %705, %726
  %794 = add i64 %793, %792
  %795 = icmp ugt i64 %794, %456
  br i1 %795, label %811, label %796

796:                                              ; preds = %781
  %797 = mul i64 %774, 135
  %798 = add i64 %797, 1920
  %799 = trunc i64 %794 to i32
  %800 = tail call i32 @llvm.ctlz.i32(i32 %799, i1 true) #4, !range !18
  %801 = xor i32 %800, 31
  %802 = mul nuw nsw i32 %801, 30
  %803 = zext i32 %802 to i64
  %804 = sub i64 %798, %803
  %805 = icmp ult i64 %804, %712
  br i1 %805, label %811, label %806

806:                                              ; preds = %796
  %807 = zext i8 %719 to i32
  %808 = trunc i64 %774 to i32
  %809 = sub nsw i32 %807, %808
  %810 = add i64 %711, 1
  store i64 %810, i64* %695, align 8, !noalias !329
  br label %811

811:                                              ; preds = %806, %796, %781, %773, %721, %706
  %812 = phi i32 [ %707, %706 ], [ %707, %721 ], [ %707, %773 ], [ %707, %781 ], [ %707, %796 ], [ %809, %806 ]
  %813 = phi i64 [ %708, %706 ], [ %708, %721 ], [ %708, %773 ], [ %708, %781 ], [ %708, %796 ], [ %804, %806 ]
  %814 = phi i64 [ %709, %706 ], [ %709, %721 ], [ %709, %773 ], [ %709, %781 ], [ %709, %796 ], [ %794, %806 ]
  %815 = phi i64 [ %710, %706 ], [ %710, %721 ], [ %710, %773 ], [ %710, %781 ], [ %710, %796 ], [ %774, %806 ]
  %816 = phi i64 [ %711, %706 ], [ %711, %721 ], [ %711, %773 ], [ %711, %781 ], [ %711, %796 ], [ %810, %806 ]
  %817 = phi i64 [ %712, %706 ], [ %712, %721 ], [ %712, %773 ], [ %712, %781 ], [ %712, %796 ], [ %804, %806 ]
  %818 = add nuw nsw i64 %715, 1
  %819 = add nuw nsw i64 %714, 1
  %820 = icmp eq i64 %818, 2
  br i1 %820, label %821, label %706

821:                                              ; preds = %811, %675, %693
  %822 = phi i32 [ 0, %693 ], [ 0, %675 ], [ %812, %811 ]
  %823 = phi i64 [ %676, %693 ], [ %676, %675 ], [ %813, %811 ]
  %824 = phi i64 [ %677, %693 ], [ %677, %675 ], [ %814, %811 ]
  %825 = phi i64 [ %678, %693 ], [ %678, %675 ], [ %815, %811 ]
  %826 = add i64 %435, 175
  %827 = icmp ult i64 %823, %826
  br i1 %827, label %828, label %830

828:                                              ; preds = %821
  %829 = add i64 %441, %18
  br label %837

830:                                              ; preds = %821
  %831 = add i64 %438, 1
  %832 = add nuw nsw i32 %440, 1
  %833 = icmp ult i32 %832, 4
  %834 = add i64 %441, 5
  %835 = icmp ult i64 %834, %20
  %836 = and i1 %833, %835
  br i1 %836, label %433, label %837

837:                                              ; preds = %830, %828
  %838 = phi i64 [ %829, %828 ], [ %454, %830 ]
  %839 = phi i32 [ %434, %828 ], [ %822, %830 ]
  %840 = phi i64 [ %436, %828 ], [ %824, %830 ]
  %841 = phi i64 [ %437, %828 ], [ %825, %830 ]
  %842 = phi i64 [ %438, %828 ], [ %831, %830 ]
  %843 = phi i64 [ %441, %828 ], [ %451, %830 ]
  %844 = shl i64 %841, 1
  %845 = add i64 %844, %27
  %846 = add i64 %845, %843
  %847 = icmp ult i64 %838, %16
  %848 = select i1 %847, i64 %838, i64 %16
  %849 = icmp ugt i64 %840, %848
  br i1 %849, label %885, label %850

850:                                              ; preds = %837
  %851 = add i64 %840, 3
  %852 = load i32, i32* %6, align 4
  %853 = sext i32 %852 to i64
  %854 = sub i64 %851, %853
  %855 = load i32, i32* %47, align 4
  %856 = sext i32 %855 to i64
  %857 = sub i64 %851, %856
  %858 = icmp eq i64 %840, %853
  br i1 %858, label %897, label %859

859:                                              ; preds = %850
  %860 = icmp eq i64 %840, %856
  br i1 %860, label %887, label %861

861:                                              ; preds = %859
  %862 = icmp ult i64 %854, 7
  br i1 %862, label %863, label %869

863:                                              ; preds = %861
  %864 = trunc i64 %854 to i32
  %865 = shl i32 %864, 2
  %866 = lshr i32 158663784, %865
  %867 = and i32 %866, 15
  %868 = zext i32 %867 to i64
  br label %887

869:                                              ; preds = %861
  %870 = icmp ult i64 %857, 7
  br i1 %870, label %871, label %877

871:                                              ; preds = %869
  %872 = trunc i64 %857 to i32
  %873 = shl i32 %872, 2
  %874 = lshr i32 266017486, %873
  %875 = and i32 %874, 15
  %876 = zext i32 %875 to i64
  br label %887

877:                                              ; preds = %869
  %878 = load i32, i32* %48, align 4
  %879 = sext i32 %878 to i64
  %880 = icmp eq i64 %840, %879
  br i1 %880, label %887, label %881

881:                                              ; preds = %877
  %882 = load i32, i32* %49, align 4
  %883 = sext i32 %882 to i64
  %884 = icmp eq i64 %840, %883
  br i1 %884, label %887, label %885

885:                                              ; preds = %881, %837
  %886 = add i64 %840, 15
  br label %887

887:                                              ; preds = %859, %863, %871, %877, %881, %885
  %888 = phi i64 [ %886, %885 ], [ 3, %881 ], [ 2, %877 ], [ 1, %859 ], [ %876, %871 ], [ %868, %863 ]
  %889 = icmp ule i64 %840, %848
  %890 = icmp ne i64 %888, 0
  %891 = and i1 %889, %890
  br i1 %891, label %892, label %897

892:                                              ; preds = %887
  %893 = load i32, i32* %48, align 4
  store i32 %893, i32* %49, align 4
  %894 = load i32, i32* %47, align 4
  store i32 %894, i32* %48, align 4
  %895 = load i32, i32* %6, align 4
  store i32 %895, i32* %47, align 4
  %896 = trunc i64 %840 to i32
  store i32 %896, i32* %6, align 4
  br label %897

897:                                              ; preds = %850, %892, %887
  %898 = phi i64 [ %888, %892 ], [ %888, %887 ], [ 0, %850 ]
  %899 = getelementptr inbounds %struct.Command, %struct.Command* %55, i64 1
  %900 = trunc i64 %842 to i32
  %901 = getelementptr inbounds %struct.Command, %struct.Command* %55, i64 0, i32 0
  store i32 %900, i32* %901, align 4
  %902 = shl i32 %839, 25
  %903 = trunc i64 %841 to i32
  %904 = or i32 %902, %903
  %905 = getelementptr inbounds %struct.Command, %struct.Command* %55, i64 0, i32 1
  store i32 %904, i32* %905, align 4
  %906 = load i32, i32* %50, align 4
  %907 = zext i32 %906 to i64
  %908 = load i32, i32* %51, align 8
  %909 = zext i32 %908 to i64
  %910 = getelementptr inbounds %struct.Command, %struct.Command* %55, i64 0, i32 4
  %911 = getelementptr inbounds %struct.Command, %struct.Command* %55, i64 0, i32 2
  %912 = add nuw nsw i64 %907, 16
  %913 = icmp ugt i64 %912, %898
  br i1 %913, label %914, label %916

914:                                              ; preds = %897
  %915 = trunc i64 %898 to i16
  store i16 %915, i16* %910, align 2
  br label %946

916:                                              ; preds = %897
  %917 = shl i64 4, %909
  %918 = add i64 %898, -16
  %919 = sub i64 %918, %907
  %920 = add i64 %919, %917
  %921 = trunc i64 %920 to i32
  %922 = tail call i32 @llvm.ctlz.i32(i32 %921, i1 true) #4, !range !18
  %923 = sub nsw i32 30, %922
  %924 = zext i32 %923 to i64
  %925 = shl nsw i32 -1, %908
  %926 = xor i32 %925, 65535
  %927 = zext i32 %926 to i64
  %928 = and i64 %920, %927
  %929 = lshr i64 %920, %924
  %930 = and i64 %929, 1
  %931 = or i64 %930, 2
  %932 = shl i64 %931, %924
  %933 = sub nsw i64 %924, %909
  %934 = shl nsw i64 %933, 10
  %935 = shl nsw i64 %933, 1
  %936 = add nsw i64 %935, -2
  %937 = or i64 %936, %930
  %938 = shl i64 %937, %909
  %939 = add nuw nsw i64 %928, %912
  %940 = add i64 %939, %938
  %941 = or i64 %940, %934
  %942 = trunc i64 %941 to i16
  store i16 %942, i16* %910, align 2
  %943 = sub i64 %920, %932
  %944 = lshr i64 %943, %909
  %945 = trunc i64 %944 to i32
  br label %946

946:                                              ; preds = %916, %914
  %947 = phi i16 [ %942, %916 ], [ %915, %914 ]
  %948 = phi i32 [ %945, %916 ], [ 0, %914 ]
  store i32 %948, i32* %911, align 4
  %949 = add nsw i32 %839, %903
  %950 = sext i32 %949 to i64
  %951 = and i16 %947, 1023
  %952 = icmp eq i16 %951, 0
  %953 = getelementptr inbounds %struct.Command, %struct.Command* %55, i64 0, i32 3
  %954 = icmp ult i64 %842, 6
  br i1 %954, label %955, label %957

955:                                              ; preds = %946
  %956 = trunc i64 %842 to i16
  br label %983

957:                                              ; preds = %946
  %958 = icmp ult i64 %842, 130
  br i1 %958, label %959, label %971

959:                                              ; preds = %957
  %960 = add nsw i64 %842, -2
  %961 = trunc i64 %960 to i32
  %962 = tail call i32 @llvm.ctlz.i32(i32 %961, i1 true) #4, !range !18
  %963 = sub nsw i32 30, %962
  %964 = shl nsw i32 %963, 1
  %965 = zext i32 %964 to i64
  %966 = zext i32 %963 to i64
  %967 = lshr i64 %960, %966
  %968 = add nuw nsw i64 %967, %965
  %969 = trunc i64 %968 to i16
  %970 = add i16 %969, 2
  br label %983

971:                                              ; preds = %957
  %972 = icmp ult i64 %842, 2114
  br i1 %972, label %973, label %978

973:                                              ; preds = %971
  %974 = add nsw i32 %900, -66
  %975 = tail call i32 @llvm.ctlz.i32(i32 %974, i1 true) #4, !range !18
  %976 = trunc i32 %975 to i16
  %977 = sub nuw nsw i16 41, %976
  br label %983

978:                                              ; preds = %971
  %979 = icmp ult i64 %842, 6210
  br i1 %979, label %983, label %980

980:                                              ; preds = %978
  %981 = icmp ult i64 %842, 22594
  %982 = select i1 %981, i16 22, i16 23
  br label %983

983:                                              ; preds = %980, %978, %973, %959, %955
  %984 = phi i16 [ %956, %955 ], [ %970, %959 ], [ %977, %973 ], [ 21, %978 ], [ %982, %980 ]
  %985 = icmp ult i32 %949, 10
  br i1 %985, label %986, label %989

986:                                              ; preds = %983
  %987 = trunc i32 %949 to i16
  %988 = add nsw i16 %987, -2
  br label %1010

989:                                              ; preds = %983
  %990 = icmp ult i32 %949, 134
  br i1 %990, label %991, label %1003

991:                                              ; preds = %989
  %992 = add nsw i64 %950, -6
  %993 = trunc i64 %992 to i32
  %994 = tail call i32 @llvm.ctlz.i32(i32 %993, i1 true) #4, !range !18
  %995 = sub nsw i32 30, %994
  %996 = shl nsw i32 %995, 1
  %997 = zext i32 %996 to i64
  %998 = zext i32 %995 to i64
  %999 = lshr i64 %992, %998
  %1000 = add nuw nsw i64 %999, %997
  %1001 = trunc i64 %1000 to i16
  %1002 = add i16 %1001, 4
  br label %1010

1003:                                             ; preds = %989
  %1004 = icmp ult i32 %949, 2118
  br i1 %1004, label %1005, label %1010

1005:                                             ; preds = %1003
  %1006 = add nsw i32 %949, -70
  %1007 = tail call i32 @llvm.ctlz.i32(i32 %1006, i1 true) #4, !range !18
  %1008 = trunc i32 %1007 to i16
  %1009 = sub nuw nsw i16 43, %1008
  br label %1010

1010:                                             ; preds = %1005, %1003, %991, %986
  %1011 = phi i16 [ %988, %986 ], [ %1002, %991 ], [ %1009, %1005 ], [ 23, %1003 ]
  %1012 = and i16 %1011, 7
  %1013 = shl i16 %984, 3
  %1014 = and i16 %1013, 56
  %1015 = or i16 %1012, %1014
  %1016 = icmp ult i16 %984, 8
  %1017 = and i1 %952, %1016
  %1018 = icmp ult i16 %1011, 16
  %1019 = and i1 %1017, %1018
  br i1 %1019, label %1020, label %1024

1020:                                             ; preds = %1010
  %1021 = icmp ult i16 %1011, 8
  %1022 = or i16 %1015, 64
  %1023 = select i1 %1021, i16 %1015, i16 %1022
  br label %1039

1024:                                             ; preds = %1010
  %1025 = lshr i16 %1011, 3
  %1026 = lshr i16 %984, 3
  %1027 = mul nuw nsw i16 %1026, 3
  %1028 = add nuw nsw i16 %1025, %1027
  %1029 = zext i16 %1028 to i32
  %1030 = shl nuw i16 %1028, 1
  %1031 = zext i16 %1030 to i32
  %1032 = shl nuw nsw i32 %1029, 6
  %1033 = add nuw nsw i32 %1032, 64
  %1034 = lshr i32 5377344, %1031
  %1035 = and i32 %1034, 192
  %1036 = add nuw nsw i32 %1033, %1035
  %1037 = trunc i32 %1036 to i16
  %1038 = or i16 %1015, %1037
  br label %1039

1039:                                             ; preds = %1020, %1024
  %1040 = phi i16 [ %1023, %1020 ], [ %1038, %1024 ]
  store i16 %1040, i16* %953, align 2
  %1041 = load i64, i64* %10, align 8
  %1042 = add i64 %1041, %842
  store i64 %1042, i64* %10, align 8
  %1043 = add i64 %843, 2
  %1044 = add i64 %843, %841
  %1045 = icmp ult i64 %1044, %23
  %1046 = select i1 %1045, i64 %1044, i64 %23
  %1047 = lshr i64 %841, 2
  %1048 = icmp ult i64 %840, %1047
  br i1 %1048, label %1049, label %1056

1049:                                             ; preds = %1039
  %1050 = shl i64 %840, 2
  %1051 = sub i64 %1044, %1050
  %1052 = icmp ugt i64 %1043, %1051
  %1053 = select i1 %1052, i64 %1043, i64 %1051
  %1054 = icmp ult i64 %1046, %1053
  %1055 = select i1 %1054, i64 %1046, i64 %1053
  br label %1056

1056:                                             ; preds = %1049, %1039
  %1057 = phi i64 [ %1055, %1049 ], [ %1043, %1039 ]
  %1058 = icmp ult i64 %1057, %1046
  br i1 %1058, label %1059, label %1197

1059:                                             ; preds = %1056
  %1060 = load i8*, i8** %34, align 8, !alias.scope !337, !noalias !342
  %1061 = bitcast i8* %1060 to i32*
  %1062 = getelementptr inbounds i8, i8* %1060, i64 131072
  %1063 = bitcast i8* %1062 to i16*
  %1064 = getelementptr inbounds i8, i8* %1060, i64 196608
  %1065 = getelementptr inbounds i8, i8* %1060, i64 262144
  %1066 = bitcast i8* %1065 to %struct.BankH40*
  %1067 = load i16, i16* %37, align 2, !alias.scope !337, !noalias !342
  br label %1068

1068:                                             ; preds = %1068, %1059
  %1069 = phi i16 [ %1067, %1059 ], [ %1078, %1068 ]
  %1070 = phi i64 [ %1057, %1059 ], [ %1095, %1068 ]
  %1071 = and i64 %1070, %3
  %1072 = getelementptr inbounds i8, i8* %2, i64 %1071
  %1073 = bitcast i8* %1072 to i32*
  %1074 = load i32, i32* %1073, align 4, !alias.scope !345, !noalias !337
  %1075 = mul i32 %1074, 506832829
  %1076 = lshr i32 %1075, 17
  %1077 = zext i32 %1076 to i64
  %1078 = add i16 %1069, 1
  %1079 = zext i16 %1069 to i64
  %1080 = getelementptr inbounds i32, i32* %1061, i64 %1077
  %1081 = load i32, i32* %1080, align 4, !noalias !348
  %1082 = zext i32 %1081 to i64
  %1083 = sub i64 %1070, %1082
  %1084 = trunc i32 %1076 to i8
  %1085 = and i64 %1070, 65535
  %1086 = getelementptr inbounds i8, i8* %1064, i64 %1085
  store i8 %1084, i8* %1086, align 1, !noalias !348
  %1087 = icmp ult i64 %1083, 65535
  %1088 = select i1 %1087, i64 %1083, i64 65535
  %1089 = trunc i64 %1088 to i16
  %1090 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1066, i64 0, i32 0, i64 %1079, i32 0
  store i16 %1089, i16* %1090, align 2, !noalias !348
  %1091 = getelementptr inbounds i16, i16* %1063, i64 %1077
  %1092 = load i16, i16* %1091, align 2, !noalias !348
  %1093 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1066, i64 0, i32 0, i64 %1079, i32 1
  store i16 %1092, i16* %1093, align 2, !noalias !348
  %1094 = trunc i64 %1070 to i32
  store i32 %1094, i32* %1080, align 4, !noalias !348
  store i16 %1069, i16* %1091, align 2, !noalias !348
  %1095 = add nuw i64 %1070, 1
  %1096 = icmp eq i64 %1095, %1046
  br i1 %1096, label %1097, label %1068

1097:                                             ; preds = %1068
  store i16 %1078, i16* %37, align 2, !alias.scope !337, !noalias !342
  br label %1197

1098:                                             ; preds = %427
  %1099 = add i64 %57, 1
  %1100 = add i64 %54, 1
  %1101 = icmp ugt i64 %1100, %56
  br i1 %1101, label %1102, label %1197

1102:                                             ; preds = %1098
  %1103 = add i64 %56, %45
  %1104 = icmp ugt i64 %1100, %1103
  br i1 %1104, label %1105, label %1150

1105:                                             ; preds = %1102
  %1106 = add i64 %54, 17
  %1107 = icmp ult i64 %1106, %46
  %1108 = select i1 %1107, i64 %1106, i64 %46
  %1109 = icmp ult i64 %1100, %1108
  br i1 %1109, label %1110, label %1197

1110:                                             ; preds = %1105
  %1111 = load i8*, i8** %34, align 8, !alias.scope !349, !noalias !352
  %1112 = bitcast i8* %1111 to i32*
  %1113 = getelementptr inbounds i8, i8* %1111, i64 131072
  %1114 = bitcast i8* %1113 to i16*
  %1115 = getelementptr inbounds i8, i8* %1111, i64 196608
  %1116 = getelementptr inbounds i8, i8* %1111, i64 262144
  %1117 = bitcast i8* %1116 to %struct.BankH40*
  %1118 = load i16, i16* %37, align 2, !alias.scope !349, !noalias !352
  br label %1119

1119:                                             ; preds = %1110, %1119
  %1120 = phi i16 [ %1118, %1110 ], [ %1130, %1119 ]
  %1121 = phi i64 [ %1100, %1110 ], [ %1148, %1119 ]
  %1122 = phi i64 [ %1099, %1110 ], [ %1147, %1119 ]
  %1123 = and i64 %1121, %3
  %1124 = getelementptr inbounds i8, i8* %2, i64 %1123
  %1125 = bitcast i8* %1124 to i32*
  %1126 = load i32, i32* %1125, align 4, !alias.scope !354, !noalias !349
  %1127 = mul i32 %1126, 506832829
  %1128 = lshr i32 %1127, 17
  %1129 = zext i32 %1128 to i64
  %1130 = add i16 %1120, 1
  %1131 = zext i16 %1120 to i64
  %1132 = getelementptr inbounds i32, i32* %1112, i64 %1129
  %1133 = load i32, i32* %1132, align 4, !noalias !357
  %1134 = zext i32 %1133 to i64
  %1135 = sub i64 %1121, %1134
  %1136 = trunc i32 %1128 to i8
  %1137 = and i64 %1121, 65535
  %1138 = getelementptr inbounds i8, i8* %1115, i64 %1137
  store i8 %1136, i8* %1138, align 1, !noalias !357
  %1139 = icmp ult i64 %1135, 65535
  %1140 = select i1 %1139, i64 %1135, i64 65535
  %1141 = trunc i64 %1140 to i16
  %1142 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1117, i64 0, i32 0, i64 %1131, i32 0
  store i16 %1141, i16* %1142, align 2, !noalias !357
  %1143 = getelementptr inbounds i16, i16* %1114, i64 %1129
  %1144 = load i16, i16* %1143, align 2, !noalias !357
  %1145 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1117, i64 0, i32 0, i64 %1131, i32 1
  store i16 %1144, i16* %1145, align 2, !noalias !357
  %1146 = trunc i64 %1121 to i32
  store i32 %1146, i32* %1132, align 4, !noalias !357
  store i16 %1120, i16* %1143, align 2, !noalias !357
  %1147 = add i64 %1122, 4
  %1148 = add i64 %1121, 4
  %1149 = icmp ult i64 %1148, %1108
  br i1 %1149, label %1119, label %1195

1150:                                             ; preds = %1102
  %1151 = add i64 %54, 9
  %1152 = icmp ult i64 %1151, %22
  %1153 = select i1 %1152, i64 %1151, i64 %22
  %1154 = icmp ult i64 %1100, %1153
  br i1 %1154, label %1155, label %1197

1155:                                             ; preds = %1150
  %1156 = load i8*, i8** %34, align 8, !alias.scope !358, !noalias !361
  %1157 = bitcast i8* %1156 to i32*
  %1158 = getelementptr inbounds i8, i8* %1156, i64 131072
  %1159 = bitcast i8* %1158 to i16*
  %1160 = getelementptr inbounds i8, i8* %1156, i64 196608
  %1161 = getelementptr inbounds i8, i8* %1156, i64 262144
  %1162 = bitcast i8* %1161 to %struct.BankH40*
  %1163 = load i16, i16* %37, align 2, !alias.scope !358, !noalias !361
  br label %1164

1164:                                             ; preds = %1155, %1164
  %1165 = phi i16 [ %1163, %1155 ], [ %1175, %1164 ]
  %1166 = phi i64 [ %1100, %1155 ], [ %1193, %1164 ]
  %1167 = phi i64 [ %1099, %1155 ], [ %1192, %1164 ]
  %1168 = and i64 %1166, %3
  %1169 = getelementptr inbounds i8, i8* %2, i64 %1168
  %1170 = bitcast i8* %1169 to i32*
  %1171 = load i32, i32* %1170, align 4, !alias.scope !363, !noalias !358
  %1172 = mul i32 %1171, 506832829
  %1173 = lshr i32 %1172, 17
  %1174 = zext i32 %1173 to i64
  %1175 = add i16 %1165, 1
  %1176 = zext i16 %1165 to i64
  %1177 = getelementptr inbounds i32, i32* %1157, i64 %1174
  %1178 = load i32, i32* %1177, align 4, !noalias !366
  %1179 = zext i32 %1178 to i64
  %1180 = sub i64 %1166, %1179
  %1181 = trunc i32 %1173 to i8
  %1182 = and i64 %1166, 65535
  %1183 = getelementptr inbounds i8, i8* %1160, i64 %1182
  store i8 %1181, i8* %1183, align 1, !noalias !366
  %1184 = icmp ult i64 %1180, 65535
  %1185 = select i1 %1184, i64 %1180, i64 65535
  %1186 = trunc i64 %1185 to i16
  %1187 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1162, i64 0, i32 0, i64 %1176, i32 0
  store i16 %1186, i16* %1187, align 2, !noalias !366
  %1188 = getelementptr inbounds i16, i16* %1159, i64 %1174
  %1189 = load i16, i16* %1188, align 2, !noalias !366
  %1190 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1162, i64 0, i32 0, i64 %1176, i32 1
  store i16 %1189, i16* %1190, align 2, !noalias !366
  %1191 = trunc i64 %1166 to i32
  store i32 %1191, i32* %1177, align 4, !noalias !366
  store i16 %1165, i16* %1188, align 2, !noalias !366
  %1192 = add i64 %1167, 2
  %1193 = add i64 %1166, 2
  %1194 = icmp ult i64 %1193, %1153
  br i1 %1194, label %1164, label %1196

1195:                                             ; preds = %1119
  store i16 %1130, i16* %37, align 2, !alias.scope !349, !noalias !352
  br label %1197

1196:                                             ; preds = %1164
  store i16 %1175, i16* %37, align 2, !alias.scope !358, !noalias !361
  br label %1197

1197:                                             ; preds = %1150, %1196, %1105, %1195, %1097, %1056, %1098
  %1198 = phi i64 [ %1099, %1098 ], [ 0, %1056 ], [ 0, %1097 ], [ %1147, %1195 ], [ %1099, %1105 ], [ %1192, %1196 ], [ %1099, %1150 ]
  %1199 = phi i64 [ %56, %1098 ], [ %846, %1056 ], [ %846, %1097 ], [ %56, %1195 ], [ %56, %1105 ], [ %56, %1196 ], [ %56, %1150 ]
  %1200 = phi %struct.Command* [ %55, %1098 ], [ %899, %1056 ], [ %899, %1097 ], [ %55, %1195 ], [ %55, %1105 ], [ %55, %1196 ], [ %55, %1150 ]
  %1201 = phi i64 [ %1100, %1098 ], [ %1044, %1056 ], [ %1044, %1097 ], [ %1148, %1195 ], [ %1100, %1105 ], [ %1193, %1196 ], [ %1100, %1150 ]
  %1202 = add i64 %1201, 4
  %1203 = icmp ult i64 %1202, %20
  %1204 = sub i64 %20, %1201
  br i1 %1203, label %52, label %1205

1205:                                             ; preds = %1197, %11
  %1206 = phi i64 [ %19, %11 ], [ %1198, %1197 ]
  %1207 = phi %struct.Command* [ %8, %11 ], [ %1200, %1197 ]
  %1208 = phi i64 [ %0, %11 ], [ %1204, %1197 ]
  %1209 = add i64 %1208, %1206
  store i64 %1209, i64* %7, align 8
  %1210 = ptrtoint %struct.Command* %1207 to i64
  %1211 = ptrtoint %struct.Command* %8 to i64
  %1212 = sub i64 %1210, %1211
  %1213 = ashr exact i64 %1212, 4
  %1214 = load i64, i64* %9, align 8
  %1215 = add i64 %1214, %1213
  store i64 %1215, i64* %9, align 8
  ret void

1216:                                             ; preds = %134
  %1217 = getelementptr inbounds i8, i8* %128, i64 1
  %1218 = getelementptr inbounds i8, i8* %105, i64 %135
  %1219 = load i8, i8* %1218, align 1, !alias.scope !309, !noalias !305
  %1220 = load i8, i8* %1217, align 1, !alias.scope !309, !noalias !305
  %1221 = icmp eq i8 %1219, %1220
  br i1 %1221, label %1222, label %136, !prof !15

1222:                                             ; preds = %1216
  %1223 = add i64 %127, 2
  br i1 %77, label %136, label %1224

1224:                                             ; preds = %1222
  %1225 = getelementptr inbounds i8, i8* %128, i64 2
  %1226 = getelementptr inbounds i8, i8* %105, i64 %1223
  %1227 = load i8, i8* %1226, align 1, !alias.scope !309, !noalias !305
  %1228 = load i8, i8* %1225, align 1, !alias.scope !309, !noalias !305
  %1229 = icmp eq i8 %1227, %1228
  br i1 %1229, label %1230, label %136, !prof !15

1230:                                             ; preds = %1224
  %1231 = add i64 %127, 3
  br i1 %78, label %136, label %1232

1232:                                             ; preds = %1230
  %1233 = getelementptr inbounds i8, i8* %128, i64 3
  %1234 = getelementptr inbounds i8, i8* %105, i64 %1231
  %1235 = load i8, i8* %1234, align 1, !alias.scope !309, !noalias !305
  %1236 = load i8, i8* %1233, align 1, !alias.scope !309, !noalias !305
  %1237 = icmp eq i8 %1235, %1236
  br i1 %1237, label %1238, label %136, !prof !15

1238:                                             ; preds = %1232
  %1239 = add i64 %127, 4
  br i1 %79, label %136, label %1240

1240:                                             ; preds = %1238
  %1241 = getelementptr inbounds i8, i8* %128, i64 4
  %1242 = getelementptr inbounds i8, i8* %105, i64 %1239
  %1243 = load i8, i8* %1242, align 1, !alias.scope !309, !noalias !305
  %1244 = load i8, i8* %1241, align 1, !alias.scope !309, !noalias !305
  %1245 = icmp eq i8 %1243, %1244
  br i1 %1245, label %1246, label %136, !prof !15

1246:                                             ; preds = %1240
  %1247 = add i64 %127, 5
  br i1 %80, label %136, label %1248

1248:                                             ; preds = %1246
  %1249 = getelementptr inbounds i8, i8* %128, i64 5
  %1250 = getelementptr inbounds i8, i8* %105, i64 %1247
  %1251 = load i8, i8* %1250, align 1, !alias.scope !309, !noalias !305
  %1252 = load i8, i8* %1249, align 1, !alias.scope !309, !noalias !305
  %1253 = icmp eq i8 %1251, %1252
  br i1 %1253, label %1254, label %136, !prof !15

1254:                                             ; preds = %1248
  %1255 = add i64 %127, 6
  br i1 %81, label %136, label %1256

1256:                                             ; preds = %1254
  %1257 = getelementptr inbounds i8, i8* %128, i64 6
  %1258 = getelementptr inbounds i8, i8* %105, i64 %1255
  %1259 = load i8, i8* %1258, align 1, !alias.scope !309, !noalias !305
  %1260 = load i8, i8* %1257, align 1, !alias.scope !309, !noalias !305
  %1261 = icmp eq i8 %1259, %1260
  %1262 = add i64 %127, 7
  %1263 = select i1 %1261, i64 %1262, i64 %1255, !prof !15
  br label %136

1264:                                             ; preds = %254
  %1265 = getelementptr inbounds i8, i8* %248, i64 1
  %1266 = getelementptr inbounds i8, i8* %225, i64 %255
  %1267 = load i8, i8* %1266, align 1, !alias.scope !309, !noalias !305
  %1268 = load i8, i8* %1265, align 1, !alias.scope !309, !noalias !305
  %1269 = icmp eq i8 %1267, %1268
  br i1 %1269, label %1270, label %256, !prof !15

1270:                                             ; preds = %1264
  %1271 = add i64 %247, 2
  br i1 %186, label %256, label %1272

1272:                                             ; preds = %1270
  %1273 = getelementptr inbounds i8, i8* %248, i64 2
  %1274 = getelementptr inbounds i8, i8* %225, i64 %1271
  %1275 = load i8, i8* %1274, align 1, !alias.scope !309, !noalias !305
  %1276 = load i8, i8* %1273, align 1, !alias.scope !309, !noalias !305
  %1277 = icmp eq i8 %1275, %1276
  br i1 %1277, label %1278, label %256, !prof !15

1278:                                             ; preds = %1272
  %1279 = add i64 %247, 3
  br i1 %187, label %256, label %1280

1280:                                             ; preds = %1278
  %1281 = getelementptr inbounds i8, i8* %248, i64 3
  %1282 = getelementptr inbounds i8, i8* %225, i64 %1279
  %1283 = load i8, i8* %1282, align 1, !alias.scope !309, !noalias !305
  %1284 = load i8, i8* %1281, align 1, !alias.scope !309, !noalias !305
  %1285 = icmp eq i8 %1283, %1284
  br i1 %1285, label %1286, label %256, !prof !15

1286:                                             ; preds = %1280
  %1287 = add i64 %247, 4
  br i1 %188, label %256, label %1288

1288:                                             ; preds = %1286
  %1289 = getelementptr inbounds i8, i8* %248, i64 4
  %1290 = getelementptr inbounds i8, i8* %225, i64 %1287
  %1291 = load i8, i8* %1290, align 1, !alias.scope !309, !noalias !305
  %1292 = load i8, i8* %1289, align 1, !alias.scope !309, !noalias !305
  %1293 = icmp eq i8 %1291, %1292
  br i1 %1293, label %1294, label %256, !prof !15

1294:                                             ; preds = %1288
  %1295 = add i64 %247, 5
  br i1 %189, label %256, label %1296

1296:                                             ; preds = %1294
  %1297 = getelementptr inbounds i8, i8* %248, i64 5
  %1298 = getelementptr inbounds i8, i8* %225, i64 %1295
  %1299 = load i8, i8* %1298, align 1, !alias.scope !309, !noalias !305
  %1300 = load i8, i8* %1297, align 1, !alias.scope !309, !noalias !305
  %1301 = icmp eq i8 %1299, %1300
  br i1 %1301, label %1302, label %256, !prof !15

1302:                                             ; preds = %1296
  %1303 = add i64 %247, 6
  br i1 %190, label %256, label %1304

1304:                                             ; preds = %1302
  %1305 = getelementptr inbounds i8, i8* %248, i64 6
  %1306 = getelementptr inbounds i8, i8* %225, i64 %1303
  %1307 = load i8, i8* %1306, align 1, !alias.scope !309, !noalias !305
  %1308 = load i8, i8* %1305, align 1, !alias.scope !309, !noalias !305
  %1309 = icmp eq i8 %1307, %1308
  %1310 = add i64 %247, 7
  %1311 = select i1 %1309, i64 %1310, i64 %1303, !prof !15
  br label %256

1312:                                             ; preds = %376
  %1313 = getelementptr inbounds i8, i8* %368, i64 1
  %1314 = getelementptr inbounds i8, i8* %66, i64 %377
  %1315 = load i8, i8* %1314, align 1, !alias.scope !309, !noalias !305
  %1316 = load i8, i8* %1313, align 1, !noalias !308
  %1317 = icmp eq i8 %1315, %1316
  br i1 %1317, label %1318, label %379, !prof !15

1318:                                             ; preds = %1312
  %1319 = add nuw nsw i64 %367, 2
  %1320 = icmp eq i64 %369, 2
  br i1 %1320, label %379, label %1321

1321:                                             ; preds = %1318
  %1322 = getelementptr inbounds i8, i8* %368, i64 2
  %1323 = getelementptr inbounds i8, i8* %66, i64 %1319
  %1324 = load i8, i8* %1323, align 1, !alias.scope !309, !noalias !305
  %1325 = load i8, i8* %1322, align 1, !noalias !308
  %1326 = icmp eq i8 %1324, %1325
  br i1 %1326, label %1327, label %379, !prof !15

1327:                                             ; preds = %1321
  %1328 = add nuw nsw i64 %367, 3
  %1329 = icmp eq i64 %369, 3
  br i1 %1329, label %379, label %1330

1330:                                             ; preds = %1327
  %1331 = getelementptr inbounds i8, i8* %368, i64 3
  %1332 = getelementptr inbounds i8, i8* %66, i64 %1328
  %1333 = load i8, i8* %1332, align 1, !alias.scope !309, !noalias !305
  %1334 = load i8, i8* %1331, align 1, !noalias !308
  %1335 = icmp eq i8 %1333, %1334
  br i1 %1335, label %1336, label %379, !prof !15

1336:                                             ; preds = %1330
  %1337 = add nuw nsw i64 %367, 4
  %1338 = icmp eq i64 %369, 4
  br i1 %1338, label %379, label %1339

1339:                                             ; preds = %1336
  %1340 = getelementptr inbounds i8, i8* %368, i64 4
  %1341 = getelementptr inbounds i8, i8* %66, i64 %1337
  %1342 = load i8, i8* %1341, align 1, !alias.scope !309, !noalias !305
  %1343 = load i8, i8* %1340, align 1, !noalias !308
  %1344 = icmp eq i8 %1342, %1343
  br i1 %1344, label %1345, label %379, !prof !15

1345:                                             ; preds = %1339
  %1346 = add nuw nsw i64 %367, 5
  %1347 = icmp eq i64 %369, 5
  br i1 %1347, label %379, label %1348

1348:                                             ; preds = %1345
  %1349 = getelementptr inbounds i8, i8* %368, i64 5
  %1350 = getelementptr inbounds i8, i8* %66, i64 %1346
  %1351 = load i8, i8* %1350, align 1, !alias.scope !309, !noalias !305
  %1352 = load i8, i8* %1349, align 1, !noalias !308
  %1353 = icmp eq i8 %1351, %1352
  br i1 %1353, label %1354, label %379, !prof !15

1354:                                             ; preds = %1348
  %1355 = add nuw nsw i64 %367, 6
  %1356 = icmp eq i64 %369, 6
  br i1 %1356, label %379, label %1357

1357:                                             ; preds = %1354
  %1358 = getelementptr inbounds i8, i8* %368, i64 6
  %1359 = getelementptr inbounds i8, i8* %66, i64 %1355
  %1360 = load i8, i8* %1359, align 1, !alias.scope !309, !noalias !305
  %1361 = load i8, i8* %1358, align 1, !noalias !308
  %1362 = icmp eq i8 %1360, %1361
  %1363 = add nuw nsw i64 %367, 7
  %1364 = select i1 %1362, i64 %1363, i64 %1355, !prof !15
  br label %379

1365:                                             ; preds = %528
  %1366 = getelementptr inbounds i8, i8* %522, i64 1
  %1367 = getelementptr inbounds i8, i8* %499, i64 %529
  %1368 = load i8, i8* %1367, align 1, !alias.scope !330, !noalias !326
  %1369 = load i8, i8* %1366, align 1, !alias.scope !330, !noalias !326
  %1370 = icmp eq i8 %1368, %1369
  br i1 %1370, label %1371, label %530, !prof !15

1371:                                             ; preds = %1365
  %1372 = add i64 %521, 2
  br i1 %471, label %530, label %1373

1373:                                             ; preds = %1371
  %1374 = getelementptr inbounds i8, i8* %522, i64 2
  %1375 = getelementptr inbounds i8, i8* %499, i64 %1372
  %1376 = load i8, i8* %1375, align 1, !alias.scope !330, !noalias !326
  %1377 = load i8, i8* %1374, align 1, !alias.scope !330, !noalias !326
  %1378 = icmp eq i8 %1376, %1377
  br i1 %1378, label %1379, label %530, !prof !15

1379:                                             ; preds = %1373
  %1380 = add i64 %521, 3
  br i1 %472, label %530, label %1381

1381:                                             ; preds = %1379
  %1382 = getelementptr inbounds i8, i8* %522, i64 3
  %1383 = getelementptr inbounds i8, i8* %499, i64 %1380
  %1384 = load i8, i8* %1383, align 1, !alias.scope !330, !noalias !326
  %1385 = load i8, i8* %1382, align 1, !alias.scope !330, !noalias !326
  %1386 = icmp eq i8 %1384, %1385
  br i1 %1386, label %1387, label %530, !prof !15

1387:                                             ; preds = %1381
  %1388 = add i64 %521, 4
  br i1 %473, label %530, label %1389

1389:                                             ; preds = %1387
  %1390 = getelementptr inbounds i8, i8* %522, i64 4
  %1391 = getelementptr inbounds i8, i8* %499, i64 %1388
  %1392 = load i8, i8* %1391, align 1, !alias.scope !330, !noalias !326
  %1393 = load i8, i8* %1390, align 1, !alias.scope !330, !noalias !326
  %1394 = icmp eq i8 %1392, %1393
  br i1 %1394, label %1395, label %530, !prof !15

1395:                                             ; preds = %1389
  %1396 = add i64 %521, 5
  br i1 %474, label %530, label %1397

1397:                                             ; preds = %1395
  %1398 = getelementptr inbounds i8, i8* %522, i64 5
  %1399 = getelementptr inbounds i8, i8* %499, i64 %1396
  %1400 = load i8, i8* %1399, align 1, !alias.scope !330, !noalias !326
  %1401 = load i8, i8* %1398, align 1, !alias.scope !330, !noalias !326
  %1402 = icmp eq i8 %1400, %1401
  br i1 %1402, label %1403, label %530, !prof !15

1403:                                             ; preds = %1397
  %1404 = add i64 %521, 6
  br i1 %475, label %530, label %1405

1405:                                             ; preds = %1403
  %1406 = getelementptr inbounds i8, i8* %522, i64 6
  %1407 = getelementptr inbounds i8, i8* %499, i64 %1404
  %1408 = load i8, i8* %1407, align 1, !alias.scope !330, !noalias !326
  %1409 = load i8, i8* %1406, align 1, !alias.scope !330, !noalias !326
  %1410 = icmp eq i8 %1408, %1409
  %1411 = add i64 %521, 7
  %1412 = select i1 %1410, i64 %1411, i64 %1404, !prof !15
  br label %530

1413:                                             ; preds = %648
  %1414 = getelementptr inbounds i8, i8* %642, i64 1
  %1415 = getelementptr inbounds i8, i8* %619, i64 %649
  %1416 = load i8, i8* %1415, align 1, !alias.scope !330, !noalias !326
  %1417 = load i8, i8* %1414, align 1, !alias.scope !330, !noalias !326
  %1418 = icmp eq i8 %1416, %1417
  br i1 %1418, label %1419, label %650, !prof !15

1419:                                             ; preds = %1413
  %1420 = add i64 %641, 2
  br i1 %580, label %650, label %1421

1421:                                             ; preds = %1419
  %1422 = getelementptr inbounds i8, i8* %642, i64 2
  %1423 = getelementptr inbounds i8, i8* %619, i64 %1420
  %1424 = load i8, i8* %1423, align 1, !alias.scope !330, !noalias !326
  %1425 = load i8, i8* %1422, align 1, !alias.scope !330, !noalias !326
  %1426 = icmp eq i8 %1424, %1425
  br i1 %1426, label %1427, label %650, !prof !15

1427:                                             ; preds = %1421
  %1428 = add i64 %641, 3
  br i1 %581, label %650, label %1429

1429:                                             ; preds = %1427
  %1430 = getelementptr inbounds i8, i8* %642, i64 3
  %1431 = getelementptr inbounds i8, i8* %619, i64 %1428
  %1432 = load i8, i8* %1431, align 1, !alias.scope !330, !noalias !326
  %1433 = load i8, i8* %1430, align 1, !alias.scope !330, !noalias !326
  %1434 = icmp eq i8 %1432, %1433
  br i1 %1434, label %1435, label %650, !prof !15

1435:                                             ; preds = %1429
  %1436 = add i64 %641, 4
  br i1 %582, label %650, label %1437

1437:                                             ; preds = %1435
  %1438 = getelementptr inbounds i8, i8* %642, i64 4
  %1439 = getelementptr inbounds i8, i8* %619, i64 %1436
  %1440 = load i8, i8* %1439, align 1, !alias.scope !330, !noalias !326
  %1441 = load i8, i8* %1438, align 1, !alias.scope !330, !noalias !326
  %1442 = icmp eq i8 %1440, %1441
  br i1 %1442, label %1443, label %650, !prof !15

1443:                                             ; preds = %1437
  %1444 = add i64 %641, 5
  br i1 %583, label %650, label %1445

1445:                                             ; preds = %1443
  %1446 = getelementptr inbounds i8, i8* %642, i64 5
  %1447 = getelementptr inbounds i8, i8* %619, i64 %1444
  %1448 = load i8, i8* %1447, align 1, !alias.scope !330, !noalias !326
  %1449 = load i8, i8* %1446, align 1, !alias.scope !330, !noalias !326
  %1450 = icmp eq i8 %1448, %1449
  br i1 %1450, label %1451, label %650, !prof !15

1451:                                             ; preds = %1445
  %1452 = add i64 %641, 6
  br i1 %584, label %650, label %1453

1453:                                             ; preds = %1451
  %1454 = getelementptr inbounds i8, i8* %642, i64 6
  %1455 = getelementptr inbounds i8, i8* %619, i64 %1452
  %1456 = load i8, i8* %1455, align 1, !alias.scope !330, !noalias !326
  %1457 = load i8, i8* %1454, align 1, !alias.scope !330, !noalias !326
  %1458 = icmp eq i8 %1456, %1457
  %1459 = add i64 %641, 7
  %1460 = select i1 %1458, i64 %1459, i64 %1452, !prof !15
  br label %650

1461:                                             ; preds = %770
  %1462 = getelementptr inbounds i8, i8* %762, i64 1
  %1463 = getelementptr inbounds i8, i8* %460, i64 %771
  %1464 = load i8, i8* %1463, align 1, !alias.scope !330, !noalias !326
  %1465 = load i8, i8* %1462, align 1, !noalias !329
  %1466 = icmp eq i8 %1464, %1465
  br i1 %1466, label %1467, label %773, !prof !15

1467:                                             ; preds = %1461
  %1468 = add nuw nsw i64 %761, 2
  %1469 = icmp eq i64 %763, 2
  br i1 %1469, label %773, label %1470

1470:                                             ; preds = %1467
  %1471 = getelementptr inbounds i8, i8* %762, i64 2
  %1472 = getelementptr inbounds i8, i8* %460, i64 %1468
  %1473 = load i8, i8* %1472, align 1, !alias.scope !330, !noalias !326
  %1474 = load i8, i8* %1471, align 1, !noalias !329
  %1475 = icmp eq i8 %1473, %1474
  br i1 %1475, label %1476, label %773, !prof !15

1476:                                             ; preds = %1470
  %1477 = add nuw nsw i64 %761, 3
  %1478 = icmp eq i64 %763, 3
  br i1 %1478, label %773, label %1479

1479:                                             ; preds = %1476
  %1480 = getelementptr inbounds i8, i8* %762, i64 3
  %1481 = getelementptr inbounds i8, i8* %460, i64 %1477
  %1482 = load i8, i8* %1481, align 1, !alias.scope !330, !noalias !326
  %1483 = load i8, i8* %1480, align 1, !noalias !329
  %1484 = icmp eq i8 %1482, %1483
  br i1 %1484, label %1485, label %773, !prof !15

1485:                                             ; preds = %1479
  %1486 = add nuw nsw i64 %761, 4
  %1487 = icmp eq i64 %763, 4
  br i1 %1487, label %773, label %1488

1488:                                             ; preds = %1485
  %1489 = getelementptr inbounds i8, i8* %762, i64 4
  %1490 = getelementptr inbounds i8, i8* %460, i64 %1486
  %1491 = load i8, i8* %1490, align 1, !alias.scope !330, !noalias !326
  %1492 = load i8, i8* %1489, align 1, !noalias !329
  %1493 = icmp eq i8 %1491, %1492
  br i1 %1493, label %1494, label %773, !prof !15

1494:                                             ; preds = %1488
  %1495 = add nuw nsw i64 %761, 5
  %1496 = icmp eq i64 %763, 5
  br i1 %1496, label %773, label %1497

1497:                                             ; preds = %1494
  %1498 = getelementptr inbounds i8, i8* %762, i64 5
  %1499 = getelementptr inbounds i8, i8* %460, i64 %1495
  %1500 = load i8, i8* %1499, align 1, !alias.scope !330, !noalias !326
  %1501 = load i8, i8* %1498, align 1, !noalias !329
  %1502 = icmp eq i8 %1500, %1501
  br i1 %1502, label %1503, label %773, !prof !15

1503:                                             ; preds = %1497
  %1504 = add nuw nsw i64 %761, 6
  %1505 = icmp eq i64 %763, 6
  br i1 %1505, label %773, label %1506

1506:                                             ; preds = %1503
  %1507 = getelementptr inbounds i8, i8* %762, i64 6
  %1508 = getelementptr inbounds i8, i8* %460, i64 %1504
  %1509 = load i8, i8* %1508, align 1, !alias.scope !330, !noalias !326
  %1510 = load i8, i8* %1507, align 1, !noalias !329
  %1511 = icmp eq i8 %1509, %1510
  %1512 = add nuw nsw i64 %761, 7
  %1513 = select i1 %1511, i64 %1512, i64 %1504, !prof !15
  br label %773
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH41(i64, i64, i8* nocapture readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* nocapture, i32*, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = add i64 %15, -16
  %17 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* %7, align 8
  %20 = add i64 %1, %0
  %21 = icmp ugt i64 %0, 3
  %22 = add i64 %20, -3
  %23 = select i1 %21, i64 %22, i64 %1
  %24 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 9
  %27 = select i1 %26, i64 64, i64 512
  %28 = load i32, i32* %6, align 4, !alias.scope !367
  %29 = getelementptr inbounds i32, i32* %6, i64 4
  %30 = insertelement <4 x i32> undef, i32 %28, i32 0
  %31 = shufflevector <4 x i32> %30, <4 x i32> undef, <4 x i32> zeroinitializer
  %32 = add nsw <4 x i32> %31, <i32 -1, i32 1, i32 -2, i32 2>
  %33 = bitcast i32* %29 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %33, align 4, !alias.scope !367
  %34 = add nsw i32 %28, -3
  %35 = getelementptr inbounds i32, i32* %6, i64 8
  store i32 %34, i32* %35, align 4, !alias.scope !367
  %36 = add nsw i32 %28, 3
  %37 = getelementptr inbounds i32, i32* %6, i64 9
  store i32 %36, i32* %37, align 4, !alias.scope !367
  %38 = add i64 %1, 4
  %39 = icmp ult i64 %38, %20
  br i1 %39, label %40, label %1221

40:                                               ; preds = %11
  %41 = add i64 %27, %1
  %42 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 4
  %43 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 8
  %44 = bitcast i16* %43 to i8**
  %45 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %46 = bitcast i16* %45 to i64*
  %47 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 0
  %48 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 12
  %49 = bitcast i16* %48 to %struct.HasherCommon**
  %50 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 5
  %51 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 4
  %52 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 0
  %53 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 2
  %54 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 3
  %55 = shl nuw nsw i64 %27, 2
  %56 = add i64 %20, -4
  %57 = getelementptr inbounds i32, i32* %6, i64 1
  %58 = getelementptr inbounds i32, i32* %6, i64 2
  %59 = getelementptr inbounds i32, i32* %6, i64 3
  %60 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %61 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  %62 = bitcast i32* %29 to <4 x i32>*
  br label %63

63:                                               ; preds = %40, %1213
  %64 = phi i64 [ %0, %40 ], [ %1220, %1213 ]
  %65 = phi i64 [ %1, %40 ], [ %1217, %1213 ]
  %66 = phi %struct.Command* [ %8, %40 ], [ %1216, %1213 ]
  %67 = phi i64 [ %41, %40 ], [ %1215, %1213 ]
  %68 = phi i64 [ %19, %40 ], [ %1214, %1213 ]
  %69 = icmp ult i64 %65, %16
  %70 = select i1 %69, i64 %65, i64 %16
  %71 = add i64 %65, %18
  %72 = icmp ult i64 %71, %16
  %73 = load i64, i64* %42, align 8
  %74 = load i8*, i8** %44, align 8, !alias.scope !372, !noalias !375
  %75 = getelementptr inbounds i8, i8* %74, i64 196608
  %76 = and i64 %65, %3
  %77 = getelementptr inbounds i8, i8* %2, i64 %76
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 4, !alias.scope !379, !noalias !382
  %80 = mul i32 %79, 506832829
  %81 = lshr i32 %80, 17
  %82 = trunc i32 %81 to i8
  %83 = lshr i64 %64, 3
  %84 = icmp eq i64 %83, 0
  %85 = and i64 %64, 7
  %86 = icmp eq i64 %85, 0
  %87 = icmp eq i64 %85, 1
  %88 = icmp eq i64 %85, 2
  %89 = icmp eq i64 %85, 3
  %90 = icmp eq i64 %85, 4
  %91 = icmp eq i64 %85, 5
  %92 = icmp eq i64 %85, 6
  br label %93

93:                                               ; preds = %171, %63
  %94 = phi i64 [ 2020, %63 ], [ %172, %171 ]
  %95 = phi i64 [ 0, %63 ], [ %173, %171 ]
  %96 = phi i64 [ 0, %63 ], [ %174, %171 ]
  %97 = phi i64 [ 0, %63 ], [ %177, %171 ]
  %98 = phi i64 [ 0, %63 ], [ %176, %171 ]
  %99 = phi i64 [ 2020, %63 ], [ %175, %171 ]
  %100 = getelementptr inbounds i32, i32* %6, i64 %97
  %101 = load i32, i32* %100, align 4, !alias.scope !383, !noalias !384
  %102 = sext i32 %101 to i64
  %103 = sub i64 %65, %102
  %104 = icmp eq i64 %97, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %93
  %106 = and i64 %103, 65535
  %107 = getelementptr inbounds i8, i8* %75, i64 %106
  %108 = load i8, i8* %107, align 1, !noalias !385
  %109 = icmp eq i8 %108, %82
  br i1 %109, label %110, label %171

110:                                              ; preds = %105, %93
  %111 = icmp uge i64 %103, %65
  %112 = icmp ult i64 %70, %102
  %113 = or i1 %112, %111
  br i1 %113, label %171, label %114

114:                                              ; preds = %110
  %115 = and i64 %103, %3
  %116 = getelementptr inbounds i8, i8* %2, i64 %115
  br i1 %84, label %137, label %117, !prof !13

117:                                              ; preds = %114, %127
  %118 = phi i64 [ %130, %127 ], [ %83, %114 ]
  %119 = phi i8* [ %128, %127 ], [ %77, %114 ]
  %120 = phi i64 [ %129, %127 ], [ 0, %114 ]
  %121 = bitcast i8* %119 to i64*
  %122 = load i64, i64* %121, align 8, !alias.scope !386, !noalias !382
  %123 = getelementptr inbounds i8, i8* %116, i64 %120
  %124 = bitcast i8* %123 to i64*
  %125 = load i64, i64* %124, align 8, !alias.scope !386, !noalias !382
  %126 = icmp eq i64 %122, %125
  br i1 %126, label %127, label %132, !prof !13

127:                                              ; preds = %117
  %128 = getelementptr inbounds i8, i8* %119, i64 8
  %129 = add nuw i64 %120, 8
  %130 = add nsw i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %137, label %117, !prof !13

132:                                              ; preds = %117
  %133 = xor i64 %125, %122
  %134 = tail call i64 @llvm.cttz.i64(i64 %133, i1 true) #4, !range !14
  %135 = lshr i64 %134, 3
  %136 = or i64 %135, %120
  br label %147

137:                                              ; preds = %127, %114
  %138 = phi i64 [ 0, %114 ], [ %129, %127 ]
  %139 = phi i8* [ %77, %114 ], [ %128, %127 ]
  br i1 %86, label %147, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds i8, i8* %116, i64 %138
  %142 = load i8, i8* %141, align 1, !alias.scope !386, !noalias !382
  %143 = load i8, i8* %139, align 1, !alias.scope !386, !noalias !382
  %144 = icmp eq i8 %142, %143
  br i1 %144, label %145, label %147, !prof !15

145:                                              ; preds = %140
  %146 = add i64 %138, 1
  br i1 %87, label %147, label %1232

147:                                              ; preds = %1272, %145, %140, %1232, %1238, %1240, %1246, %1248, %1254, %1256, %1262, %1264, %1270, %137, %132
  %148 = phi i64 [ %136, %132 ], [ %138, %137 ], [ %138, %140 ], [ %146, %145 ], [ %146, %1232 ], [ %1239, %1238 ], [ %1239, %1240 ], [ %1247, %1246 ], [ %1247, %1248 ], [ %1255, %1254 ], [ %1255, %1256 ], [ %1263, %1262 ], [ %1263, %1264 ], [ %1271, %1270 ], [ %1279, %1272 ]
  %149 = icmp ugt i64 %148, 1
  br i1 %149, label %150, label %171

150:                                              ; preds = %147
  %151 = mul i64 %148, 135
  %152 = add i64 %151, 1935
  %153 = icmp ult i64 %99, %152
  br i1 %153, label %154, label %171

154:                                              ; preds = %150
  br i1 %104, label %163, label %155

155:                                              ; preds = %154
  %156 = trunc i64 %97 to i32
  %157 = and i32 %156, 14
  %158 = lshr i32 117264, %157
  %159 = and i32 %158, 14
  %160 = add nuw nsw i32 %159, 39
  %161 = zext i32 %160 to i64
  %162 = sub i64 %152, %161
  br label %163

163:                                              ; preds = %155, %154
  %164 = phi i64 [ %162, %155 ], [ %152, %154 ]
  %165 = icmp ult i64 %99, %164
  %166 = select i1 %165, i64 %164, i64 %94
  %167 = select i1 %165, i64 %102, i64 %95
  %168 = select i1 %165, i64 %148, i64 %96
  %169 = select i1 %165, i64 %164, i64 %99
  %170 = select i1 %165, i64 %148, i64 %98
  br label %171

171:                                              ; preds = %163, %150, %147, %110, %105
  %172 = phi i64 [ %94, %110 ], [ %94, %150 ], [ %94, %147 ], [ %94, %105 ], [ %166, %163 ]
  %173 = phi i64 [ %95, %110 ], [ %95, %150 ], [ %95, %147 ], [ %95, %105 ], [ %167, %163 ]
  %174 = phi i64 [ %96, %110 ], [ %96, %150 ], [ %96, %147 ], [ %96, %105 ], [ %168, %163 ]
  %175 = phi i64 [ %99, %110 ], [ %99, %150 ], [ %99, %147 ], [ %99, %105 ], [ %169, %163 ]
  %176 = phi i64 [ %98, %110 ], [ %98, %150 ], [ %98, %147 ], [ %98, %105 ], [ %170, %163 ]
  %177 = add nuw nsw i64 %97, 1
  %178 = icmp eq i64 %177, 10
  br i1 %178, label %179, label %93

179:                                              ; preds = %171
  %180 = select i1 %72, i64 %71, i64 %16
  %181 = getelementptr inbounds i8, i8* %74, i64 131072
  %182 = getelementptr inbounds i8, i8* %74, i64 262144
  %183 = bitcast i8* %74 to i32*
  %184 = bitcast i8* %181 to i16*
  %185 = bitcast i8* %182 to %struct.BankH41*
  %186 = zext i32 %81 to i64
  %187 = load i64, i64* %46, align 8, !alias.scope !372, !noalias !375
  %188 = getelementptr inbounds i32, i32* %183, i64 %186
  %189 = load i32, i32* %188, align 4, !noalias !385
  %190 = zext i32 %189 to i64
  %191 = sub i64 %65, %190
  %192 = getelementptr inbounds i16, i16* %184, i64 %186
  %193 = icmp eq i64 %187, 0
  br i1 %193, label %292, label %194

194:                                              ; preds = %179
  %195 = load i16, i16* %192, align 2, !noalias !385
  %196 = icmp eq i64 %85, 1
  %197 = icmp eq i64 %85, 2
  %198 = icmp eq i64 %85, 3
  %199 = icmp eq i64 %85, 4
  %200 = icmp eq i64 %85, 5
  %201 = icmp eq i64 %85, 6
  br label %202

202:                                              ; preds = %285, %194
  %203 = phi i64 [ %172, %194 ], [ %286, %285 ]
  %204 = phi i64 [ %173, %194 ], [ %287, %285 ]
  %205 = phi i64 [ %174, %194 ], [ %288, %285 ]
  %206 = phi i64 [ %187, %194 ], [ %213, %285 ]
  %207 = phi i16 [ %195, %194 ], [ %220, %285 ]
  %208 = phi i64 [ %191, %194 ], [ %223, %285 ]
  %209 = phi i64 [ 0, %194 ], [ %214, %285 ]
  %210 = phi i64 [ %176, %194 ], [ %290, %285 ]
  %211 = phi i64 [ %175, %194 ], [ %289, %285 ]
  %212 = zext i16 %207 to i64
  %213 = add i64 %206, -1
  %214 = add i64 %209, %208
  %215 = icmp ugt i64 %214, %70
  br i1 %215, label %292, label %216

216:                                              ; preds = %202
  %217 = sub i64 %65, %214
  %218 = and i64 %217, %3
  %219 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %185, i64 0, i32 0, i64 %212, i32 1
  %220 = load i16, i16* %219, align 2, !noalias !385
  %221 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %185, i64 0, i32 0, i64 %212, i32 0
  %222 = load i16, i16* %221, align 2, !noalias !385
  %223 = zext i16 %222 to i64
  %224 = add i64 %210, %76
  %225 = icmp ugt i64 %224, %3
  br i1 %225, label %285, label %226

226:                                              ; preds = %216
  %227 = add i64 %218, %210
  %228 = icmp ugt i64 %227, %3
  br i1 %228, label %285, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds i8, i8* %2, i64 %224
  %231 = load i8, i8* %230, align 1, !alias.scope !386, !noalias !382
  %232 = getelementptr inbounds i8, i8* %2, i64 %227
  %233 = load i8, i8* %232, align 1, !alias.scope !386, !noalias !382
  %234 = icmp eq i8 %231, %233
  br i1 %234, label %235, label %285

235:                                              ; preds = %229
  %236 = getelementptr inbounds i8, i8* %2, i64 %218
  br i1 %84, label %257, label %237, !prof !13

237:                                              ; preds = %235, %247
  %238 = phi i64 [ %250, %247 ], [ %83, %235 ]
  %239 = phi i8* [ %248, %247 ], [ %77, %235 ]
  %240 = phi i64 [ %249, %247 ], [ 0, %235 ]
  %241 = bitcast i8* %239 to i64*
  %242 = load i64, i64* %241, align 8, !alias.scope !386, !noalias !382
  %243 = getelementptr inbounds i8, i8* %236, i64 %240
  %244 = bitcast i8* %243 to i64*
  %245 = load i64, i64* %244, align 8, !alias.scope !386, !noalias !382
  %246 = icmp eq i64 %242, %245
  br i1 %246, label %247, label %252, !prof !13

247:                                              ; preds = %237
  %248 = getelementptr inbounds i8, i8* %239, i64 8
  %249 = add nuw i64 %240, 8
  %250 = add nsw i64 %238, -1
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %257, label %237, !prof !13

252:                                              ; preds = %237
  %253 = xor i64 %245, %242
  %254 = tail call i64 @llvm.cttz.i64(i64 %253, i1 true) #4, !range !14
  %255 = lshr i64 %254, 3
  %256 = or i64 %255, %240
  br label %267

257:                                              ; preds = %247, %235
  %258 = phi i64 [ 0, %235 ], [ %249, %247 ]
  %259 = phi i8* [ %77, %235 ], [ %248, %247 ]
  br i1 %86, label %267, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds i8, i8* %236, i64 %258
  %262 = load i8, i8* %261, align 1, !alias.scope !386, !noalias !382
  %263 = load i8, i8* %259, align 1, !alias.scope !386, !noalias !382
  %264 = icmp eq i8 %262, %263
  br i1 %264, label %265, label %267, !prof !15

265:                                              ; preds = %260
  %266 = add i64 %258, 1
  br i1 %196, label %267, label %1280

267:                                              ; preds = %1320, %265, %260, %1280, %1286, %1288, %1294, %1296, %1302, %1304, %1310, %1312, %1318, %257, %252
  %268 = phi i64 [ %256, %252 ], [ %258, %257 ], [ %258, %260 ], [ %266, %265 ], [ %266, %1280 ], [ %1287, %1286 ], [ %1287, %1288 ], [ %1295, %1294 ], [ %1295, %1296 ], [ %1303, %1302 ], [ %1303, %1304 ], [ %1311, %1310 ], [ %1311, %1312 ], [ %1319, %1318 ], [ %1327, %1320 ]
  %269 = icmp ugt i64 %268, 3
  br i1 %269, label %270, label %285

270:                                              ; preds = %267
  %271 = mul i64 %268, 135
  %272 = trunc i64 %214 to i32
  %273 = tail call i32 @llvm.ctlz.i32(i32 %272, i1 true) #4, !range !18
  %274 = xor i32 %273, 31
  %275 = mul nsw i32 %274, -30
  %276 = add nsw i32 %275, 1920
  %277 = zext i32 %276 to i64
  %278 = add i64 %271, %277
  %279 = icmp ult i64 %211, %278
  %280 = select i1 %279, i64 %278, i64 %203
  %281 = select i1 %279, i64 %214, i64 %204
  %282 = select i1 %279, i64 %268, i64 %205
  %283 = select i1 %279, i64 %278, i64 %211
  %284 = select i1 %279, i64 %268, i64 %210
  br label %285

285:                                              ; preds = %270, %267, %229, %226, %216
  %286 = phi i64 [ %203, %216 ], [ %203, %226 ], [ %203, %267 ], [ %203, %229 ], [ %280, %270 ]
  %287 = phi i64 [ %204, %216 ], [ %204, %226 ], [ %204, %267 ], [ %204, %229 ], [ %281, %270 ]
  %288 = phi i64 [ %205, %216 ], [ %205, %226 ], [ %205, %267 ], [ %205, %229 ], [ %282, %270 ]
  %289 = phi i64 [ %211, %216 ], [ %211, %226 ], [ %211, %267 ], [ %211, %229 ], [ %283, %270 ]
  %290 = phi i64 [ %210, %216 ], [ %210, %226 ], [ %210, %267 ], [ %210, %229 ], [ %284, %270 ]
  %291 = icmp eq i64 %213, 0
  br i1 %291, label %292, label %202

292:                                              ; preds = %285, %202, %179
  %293 = phi i64 [ %172, %179 ], [ %286, %285 ], [ %203, %202 ]
  %294 = phi i64 [ %173, %179 ], [ %287, %285 ], [ %204, %202 ]
  %295 = phi i64 [ %174, %179 ], [ %288, %285 ], [ %205, %202 ]
  %296 = phi i64 [ %175, %179 ], [ %289, %285 ], [ %211, %202 ]
  %297 = load i16, i16* %47, align 2, !alias.scope !387, !noalias !390
  %298 = add i16 %297, 1
  store i16 %298, i16* %47, align 2, !alias.scope !387, !noalias !390
  %299 = zext i16 %297 to i64
  %300 = and i64 %65, 65535
  %301 = getelementptr inbounds i8, i8* %75, i64 %300
  store i8 %82, i8* %301, align 1, !noalias !392
  %302 = icmp ult i64 %191, 65535
  %303 = select i1 %302, i64 %191, i64 65535
  %304 = trunc i64 %303 to i16
  %305 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %185, i64 0, i32 0, i64 %299, i32 0
  store i16 %304, i16* %305, align 2, !noalias !392
  %306 = load i16, i16* %192, align 2, !noalias !392
  %307 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %185, i64 0, i32 0, i64 %299, i32 1
  store i16 %306, i16* %307, align 2, !noalias !392
  %308 = trunc i64 %65 to i32
  store i32 %308, i32* %188, align 4, !noalias !392
  store i16 %297, i16* %192, align 2, !noalias !392
  %309 = icmp eq i64 %296, 2020
  br i1 %309, label %310, label %438

310:                                              ; preds = %292
  %311 = load %struct.HasherCommon*, %struct.HasherCommon** %49, align 8, !alias.scope !372, !noalias !375
  %312 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %311, i64 0, i32 2
  %313 = load i64, i64* %312, align 8, !noalias !385
  %314 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %311, i64 0, i32 1
  %315 = load i64, i64* %314, align 8, !noalias !385
  %316 = lshr i64 %315, 7
  %317 = icmp ult i64 %313, %316
  br i1 %317, label %438, label %318

318:                                              ; preds = %310
  %319 = lshr i32 %80, 18
  %320 = shl nuw nsw i32 %319, 1
  %321 = zext i32 %320 to i64
  %322 = add i64 %180, 1
  br label %323

323:                                              ; preds = %428, %318
  %324 = phi i32 [ 0, %318 ], [ %429, %428 ]
  %325 = phi i64 [ %293, %318 ], [ %430, %428 ]
  %326 = phi i64 [ %294, %318 ], [ %431, %428 ]
  %327 = phi i64 [ %295, %318 ], [ %432, %428 ]
  %328 = phi i64 [ %313, %318 ], [ %433, %428 ]
  %329 = phi i64 [ 2020, %318 ], [ %434, %428 ]
  %330 = phi i64 [ %315, %318 ], [ %333, %428 ]
  %331 = phi i64 [ %321, %318 ], [ %436, %428 ]
  %332 = phi i64 [ 0, %318 ], [ %435, %428 ]
  %333 = add i64 %330, 1
  store i64 %333, i64* %314, align 8, !noalias !385
  %334 = load i8*, i8** %50, align 8, !noalias !385
  %335 = getelementptr inbounds i8, i8* %334, i64 %331
  %336 = load i8, i8* %335, align 1, !noalias !385
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %428, label %338

338:                                              ; preds = %323
  %339 = zext i8 %336 to i64
  %340 = load i16*, i16** %51, align 8, !noalias !385
  %341 = getelementptr inbounds i16, i16* %340, i64 %331
  %342 = load i16, i16* %341, align 2, !noalias !385
  %343 = zext i16 %342 to i64
  %344 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %52, align 8, !noalias !385
  %345 = icmp ult i64 %64, %339
  br i1 %345, label %428, label %346

346:                                              ; preds = %338
  %347 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %344, i64 0, i32 1, i64 %339
  %348 = load i32, i32* %347, align 4, !noalias !385
  %349 = zext i32 %348 to i64
  %350 = mul nuw nsw i64 %343, %339
  %351 = add nuw nsw i64 %350, %349
  %352 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %344, i64 0, i32 3
  %353 = load i8*, i8** %352, align 8, !noalias !385
  %354 = getelementptr inbounds i8, i8* %353, i64 %351
  %355 = lshr i64 %339, 3
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %377, label %357, !prof !13

357:                                              ; preds = %346, %367
  %358 = phi i64 [ %370, %367 ], [ %355, %346 ]
  %359 = phi i8* [ %368, %367 ], [ %354, %346 ]
  %360 = phi i64 [ %369, %367 ], [ 0, %346 ]
  %361 = bitcast i8* %359 to i64*
  %362 = load i64, i64* %361, align 8, !noalias !385
  %363 = getelementptr inbounds i8, i8* %77, i64 %360
  %364 = bitcast i8* %363 to i64*
  %365 = load i64, i64* %364, align 8, !alias.scope !386, !noalias !382
  %366 = icmp eq i64 %362, %365
  br i1 %366, label %367, label %372, !prof !13

367:                                              ; preds = %357
  %368 = getelementptr inbounds i8, i8* %359, i64 8
  %369 = add nuw nsw i64 %360, 8
  %370 = add nsw i64 %358, -1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %377, label %357, !prof !13

372:                                              ; preds = %357
  %373 = xor i64 %365, %362
  %374 = tail call i64 @llvm.cttz.i64(i64 %373, i1 true) #4, !range !14
  %375 = lshr i64 %374, 3
  %376 = or i64 %375, %360
  br label %390

377:                                              ; preds = %367, %346
  %378 = phi i64 [ 0, %346 ], [ %369, %367 ]
  %379 = phi i8* [ %354, %346 ], [ %368, %367 ]
  %380 = and i64 %339, 7
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %390, label %382

382:                                              ; preds = %377
  %383 = getelementptr inbounds i8, i8* %77, i64 %378
  %384 = load i8, i8* %383, align 1, !alias.scope !386, !noalias !382
  %385 = load i8, i8* %379, align 1, !noalias !385
  %386 = icmp eq i8 %384, %385
  br i1 %386, label %387, label %390, !prof !15

387:                                              ; preds = %382
  %388 = add nuw nsw i64 %378, 1
  %389 = icmp eq i64 %380, 1
  br i1 %389, label %390, label %1328

390:                                              ; preds = %1373, %387, %382, %1328, %1334, %1337, %1343, %1346, %1352, %1355, %1361, %1364, %1370, %377, %372
  %391 = phi i64 [ %376, %372 ], [ %378, %377 ], [ %378, %382 ], [ %388, %387 ], [ %388, %1328 ], [ %1335, %1334 ], [ %1335, %1337 ], [ %1344, %1343 ], [ %1344, %1346 ], [ %1353, %1352 ], [ %1353, %1355 ], [ %1362, %1361 ], [ %1362, %1364 ], [ %1371, %1370 ], [ %1380, %1373 ]
  %392 = load i32, i32* %53, align 4, !noalias !385
  %393 = zext i32 %392 to i64
  %394 = add i64 %391, %393
  %395 = icmp ule i64 %394, %339
  %396 = icmp eq i64 %391, 0
  %397 = or i1 %396, %395
  br i1 %397, label %428, label %398

398:                                              ; preds = %390
  %399 = sub i64 %339, %391
  %400 = shl i64 %399, 2
  %401 = load i64, i64* %54, align 8, !noalias !385
  %402 = mul i64 %399, 6
  %403 = lshr i64 %401, %402
  %404 = and i64 %403, 63
  %405 = add i64 %404, %400
  %406 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %344, i64 0, i32 0, i64 %339
  %407 = load i8, i8* %406, align 1, !noalias !385
  %408 = zext i8 %407 to i64
  %409 = shl i64 %405, %408
  %410 = add i64 %322, %343
  %411 = add i64 %410, %409
  %412 = icmp ugt i64 %411, %73
  br i1 %412, label %428, label %413

413:                                              ; preds = %398
  %414 = mul i64 %391, 135
  %415 = add i64 %414, 1920
  %416 = trunc i64 %411 to i32
  %417 = tail call i32 @llvm.ctlz.i32(i32 %416, i1 true) #4, !range !18
  %418 = xor i32 %417, 31
  %419 = mul nuw nsw i32 %418, 30
  %420 = zext i32 %419 to i64
  %421 = sub i64 %415, %420
  %422 = icmp ult i64 %421, %329
  br i1 %422, label %428, label %423

423:                                              ; preds = %413
  %424 = zext i8 %336 to i32
  %425 = trunc i64 %391 to i32
  %426 = sub nsw i32 %424, %425
  %427 = add i64 %328, 1
  store i64 %427, i64* %312, align 8, !noalias !385
  br label %428

428:                                              ; preds = %423, %413, %398, %390, %338, %323
  %429 = phi i32 [ %324, %323 ], [ %324, %338 ], [ %324, %390 ], [ %324, %398 ], [ %324, %413 ], [ %426, %423 ]
  %430 = phi i64 [ %325, %323 ], [ %325, %338 ], [ %325, %390 ], [ %325, %398 ], [ %325, %413 ], [ %421, %423 ]
  %431 = phi i64 [ %326, %323 ], [ %326, %338 ], [ %326, %390 ], [ %326, %398 ], [ %326, %413 ], [ %411, %423 ]
  %432 = phi i64 [ %327, %323 ], [ %327, %338 ], [ %327, %390 ], [ %327, %398 ], [ %327, %413 ], [ %391, %423 ]
  %433 = phi i64 [ %328, %323 ], [ %328, %338 ], [ %328, %390 ], [ %328, %398 ], [ %328, %413 ], [ %427, %423 ]
  %434 = phi i64 [ %329, %323 ], [ %329, %338 ], [ %329, %390 ], [ %329, %398 ], [ %329, %413 ], [ %421, %423 ]
  %435 = add nuw nsw i64 %332, 1
  %436 = add nuw nsw i64 %331, 1
  %437 = icmp eq i64 %435, 2
  br i1 %437, label %438, label %323

438:                                              ; preds = %428, %292, %310
  %439 = phi i32 [ 0, %310 ], [ 0, %292 ], [ %429, %428 ]
  %440 = phi i64 [ %293, %310 ], [ %293, %292 ], [ %430, %428 ]
  %441 = phi i64 [ %294, %310 ], [ %294, %292 ], [ %431, %428 ]
  %442 = phi i64 [ %295, %310 ], [ %295, %292 ], [ %432, %428 ]
  %443 = icmp ugt i64 %440, 2020
  br i1 %443, label %444, label %1114

444:                                              ; preds = %438, %841
  %445 = phi i32 [ %833, %841 ], [ %439, %438 ]
  %446 = phi i64 [ %834, %841 ], [ %440, %438 ]
  %447 = phi i64 [ %835, %841 ], [ %441, %438 ]
  %448 = phi i64 [ %836, %841 ], [ %442, %438 ]
  %449 = phi i64 [ %842, %841 ], [ %68, %438 ]
  %450 = phi i64 [ %453, %841 ], [ %64, %438 ]
  %451 = phi i32 [ %843, %841 ], [ 0, %438 ]
  %452 = phi i64 [ %462, %841 ], [ %65, %438 ]
  %453 = add i64 %450, -1
  %454 = load i32, i32* %24, align 4
  %455 = icmp slt i32 %454, 5
  br i1 %455, label %456, label %460

456:                                              ; preds = %444
  %457 = add i64 %448, -1
  %458 = icmp ult i64 %457, %453
  %459 = select i1 %458, i64 %457, i64 %453
  br label %460

460:                                              ; preds = %444, %456
  %461 = phi i64 [ %459, %456 ], [ 0, %444 ]
  %462 = add i64 %452, 1
  %463 = icmp ult i64 %462, %16
  %464 = select i1 %463, i64 %462, i64 %16
  %465 = add i64 %462, %18
  %466 = icmp ult i64 %465, %16
  %467 = load i64, i64* %42, align 8
  %468 = load i8*, i8** %44, align 8, !alias.scope !393, !noalias !396
  %469 = getelementptr inbounds i8, i8* %468, i64 196608
  %470 = and i64 %462, %3
  %471 = getelementptr inbounds i8, i8* %2, i64 %470
  %472 = bitcast i8* %471 to i32*
  %473 = load i32, i32* %472, align 4, !alias.scope !400, !noalias !403
  %474 = mul i32 %473, 506832829
  %475 = lshr i32 %474, 17
  %476 = trunc i32 %475 to i8
  %477 = lshr i64 %453, 3
  %478 = icmp eq i64 %477, 0
  %479 = and i64 %453, 7
  %480 = icmp eq i64 %479, 0
  %481 = icmp eq i64 %479, 1
  %482 = icmp eq i64 %479, 2
  %483 = icmp eq i64 %479, 3
  %484 = icmp eq i64 %479, 4
  %485 = icmp eq i64 %479, 5
  %486 = icmp eq i64 %479, 6
  br label %487

487:                                              ; preds = %565, %460
  %488 = phi i64 [ 2020, %460 ], [ %566, %565 ]
  %489 = phi i64 [ 0, %460 ], [ %567, %565 ]
  %490 = phi i64 [ 0, %460 ], [ %568, %565 ]
  %491 = phi i64 [ 0, %460 ], [ %571, %565 ]
  %492 = phi i64 [ %461, %460 ], [ %570, %565 ]
  %493 = phi i64 [ 2020, %460 ], [ %569, %565 ]
  %494 = getelementptr inbounds i32, i32* %6, i64 %491
  %495 = load i32, i32* %494, align 4, !alias.scope !404, !noalias !405
  %496 = sext i32 %495 to i64
  %497 = sub i64 %462, %496
  %498 = icmp eq i64 %491, 0
  br i1 %498, label %504, label %499

499:                                              ; preds = %487
  %500 = and i64 %497, 65535
  %501 = getelementptr inbounds i8, i8* %469, i64 %500
  %502 = load i8, i8* %501, align 1, !noalias !406
  %503 = icmp eq i8 %502, %476
  br i1 %503, label %504, label %565

504:                                              ; preds = %499, %487
  %505 = icmp uge i64 %497, %462
  %506 = icmp ult i64 %464, %496
  %507 = or i1 %506, %505
  br i1 %507, label %565, label %508

508:                                              ; preds = %504
  %509 = and i64 %497, %3
  %510 = getelementptr inbounds i8, i8* %2, i64 %509
  br i1 %478, label %531, label %511, !prof !13

511:                                              ; preds = %508, %521
  %512 = phi i64 [ %524, %521 ], [ %477, %508 ]
  %513 = phi i8* [ %522, %521 ], [ %471, %508 ]
  %514 = phi i64 [ %523, %521 ], [ 0, %508 ]
  %515 = bitcast i8* %513 to i64*
  %516 = load i64, i64* %515, align 8, !alias.scope !407, !noalias !403
  %517 = getelementptr inbounds i8, i8* %510, i64 %514
  %518 = bitcast i8* %517 to i64*
  %519 = load i64, i64* %518, align 8, !alias.scope !407, !noalias !403
  %520 = icmp eq i64 %516, %519
  br i1 %520, label %521, label %526, !prof !13

521:                                              ; preds = %511
  %522 = getelementptr inbounds i8, i8* %513, i64 8
  %523 = add nuw i64 %514, 8
  %524 = add nsw i64 %512, -1
  %525 = icmp eq i64 %524, 0
  br i1 %525, label %531, label %511, !prof !13

526:                                              ; preds = %511
  %527 = xor i64 %519, %516
  %528 = tail call i64 @llvm.cttz.i64(i64 %527, i1 true) #4, !range !14
  %529 = lshr i64 %528, 3
  %530 = or i64 %529, %514
  br label %541

531:                                              ; preds = %521, %508
  %532 = phi i64 [ 0, %508 ], [ %523, %521 ]
  %533 = phi i8* [ %471, %508 ], [ %522, %521 ]
  br i1 %480, label %541, label %534

534:                                              ; preds = %531
  %535 = getelementptr inbounds i8, i8* %510, i64 %532
  %536 = load i8, i8* %535, align 1, !alias.scope !407, !noalias !403
  %537 = load i8, i8* %533, align 1, !alias.scope !407, !noalias !403
  %538 = icmp eq i8 %536, %537
  br i1 %538, label %539, label %541, !prof !15

539:                                              ; preds = %534
  %540 = add i64 %532, 1
  br i1 %481, label %541, label %1381

541:                                              ; preds = %1421, %539, %534, %1381, %1387, %1389, %1395, %1397, %1403, %1405, %1411, %1413, %1419, %531, %526
  %542 = phi i64 [ %530, %526 ], [ %532, %531 ], [ %532, %534 ], [ %540, %539 ], [ %540, %1381 ], [ %1388, %1387 ], [ %1388, %1389 ], [ %1396, %1395 ], [ %1396, %1397 ], [ %1404, %1403 ], [ %1404, %1405 ], [ %1412, %1411 ], [ %1412, %1413 ], [ %1420, %1419 ], [ %1428, %1421 ]
  %543 = icmp ugt i64 %542, 1
  br i1 %543, label %544, label %565

544:                                              ; preds = %541
  %545 = mul i64 %542, 135
  %546 = add i64 %545, 1935
  %547 = icmp ult i64 %493, %546
  br i1 %547, label %548, label %565

548:                                              ; preds = %544
  br i1 %498, label %557, label %549

549:                                              ; preds = %548
  %550 = trunc i64 %491 to i32
  %551 = and i32 %550, 14
  %552 = lshr i32 117264, %551
  %553 = and i32 %552, 14
  %554 = add nuw nsw i32 %553, 39
  %555 = zext i32 %554 to i64
  %556 = sub i64 %546, %555
  br label %557

557:                                              ; preds = %549, %548
  %558 = phi i64 [ %556, %549 ], [ %546, %548 ]
  %559 = icmp ult i64 %493, %558
  %560 = select i1 %559, i64 %558, i64 %488
  %561 = select i1 %559, i64 %496, i64 %489
  %562 = select i1 %559, i64 %542, i64 %490
  %563 = select i1 %559, i64 %558, i64 %493
  %564 = select i1 %559, i64 %542, i64 %492
  br label %565

565:                                              ; preds = %557, %544, %541, %504, %499
  %566 = phi i64 [ %488, %504 ], [ %488, %544 ], [ %488, %541 ], [ %488, %499 ], [ %560, %557 ]
  %567 = phi i64 [ %489, %504 ], [ %489, %544 ], [ %489, %541 ], [ %489, %499 ], [ %561, %557 ]
  %568 = phi i64 [ %490, %504 ], [ %490, %544 ], [ %490, %541 ], [ %490, %499 ], [ %562, %557 ]
  %569 = phi i64 [ %493, %504 ], [ %493, %544 ], [ %493, %541 ], [ %493, %499 ], [ %563, %557 ]
  %570 = phi i64 [ %492, %504 ], [ %492, %544 ], [ %492, %541 ], [ %492, %499 ], [ %564, %557 ]
  %571 = add nuw nsw i64 %491, 1
  %572 = icmp eq i64 %571, 10
  br i1 %572, label %573, label %487

573:                                              ; preds = %565
  %574 = select i1 %466, i64 %465, i64 %16
  %575 = getelementptr inbounds i8, i8* %468, i64 131072
  %576 = getelementptr inbounds i8, i8* %468, i64 262144
  %577 = bitcast i8* %468 to i32*
  %578 = bitcast i8* %575 to i16*
  %579 = bitcast i8* %576 to %struct.BankH41*
  %580 = zext i32 %475 to i64
  %581 = load i64, i64* %46, align 8, !alias.scope !393, !noalias !396
  %582 = getelementptr inbounds i32, i32* %577, i64 %580
  %583 = load i32, i32* %582, align 4, !noalias !406
  %584 = zext i32 %583 to i64
  %585 = sub i64 %462, %584
  %586 = getelementptr inbounds i16, i16* %578, i64 %580
  %587 = icmp eq i64 %581, 0
  br i1 %587, label %686, label %588

588:                                              ; preds = %573
  %589 = load i16, i16* %586, align 2, !noalias !406
  %590 = icmp eq i64 %479, 1
  %591 = icmp eq i64 %479, 2
  %592 = icmp eq i64 %479, 3
  %593 = icmp eq i64 %479, 4
  %594 = icmp eq i64 %479, 5
  %595 = icmp eq i64 %479, 6
  br label %596

596:                                              ; preds = %679, %588
  %597 = phi i64 [ %566, %588 ], [ %680, %679 ]
  %598 = phi i64 [ %567, %588 ], [ %681, %679 ]
  %599 = phi i64 [ %568, %588 ], [ %682, %679 ]
  %600 = phi i64 [ %581, %588 ], [ %607, %679 ]
  %601 = phi i16 [ %589, %588 ], [ %614, %679 ]
  %602 = phi i64 [ %585, %588 ], [ %617, %679 ]
  %603 = phi i64 [ 0, %588 ], [ %608, %679 ]
  %604 = phi i64 [ %570, %588 ], [ %684, %679 ]
  %605 = phi i64 [ %569, %588 ], [ %683, %679 ]
  %606 = zext i16 %601 to i64
  %607 = add i64 %600, -1
  %608 = add i64 %603, %602
  %609 = icmp ugt i64 %608, %464
  br i1 %609, label %686, label %610

610:                                              ; preds = %596
  %611 = sub i64 %462, %608
  %612 = and i64 %611, %3
  %613 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %579, i64 0, i32 0, i64 %606, i32 1
  %614 = load i16, i16* %613, align 2, !noalias !406
  %615 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %579, i64 0, i32 0, i64 %606, i32 0
  %616 = load i16, i16* %615, align 2, !noalias !406
  %617 = zext i16 %616 to i64
  %618 = add i64 %604, %470
  %619 = icmp ugt i64 %618, %3
  br i1 %619, label %679, label %620

620:                                              ; preds = %610
  %621 = add i64 %612, %604
  %622 = icmp ugt i64 %621, %3
  br i1 %622, label %679, label %623

623:                                              ; preds = %620
  %624 = getelementptr inbounds i8, i8* %2, i64 %618
  %625 = load i8, i8* %624, align 1, !alias.scope !407, !noalias !403
  %626 = getelementptr inbounds i8, i8* %2, i64 %621
  %627 = load i8, i8* %626, align 1, !alias.scope !407, !noalias !403
  %628 = icmp eq i8 %625, %627
  br i1 %628, label %629, label %679

629:                                              ; preds = %623
  %630 = getelementptr inbounds i8, i8* %2, i64 %612
  br i1 %478, label %651, label %631, !prof !13

631:                                              ; preds = %629, %641
  %632 = phi i64 [ %644, %641 ], [ %477, %629 ]
  %633 = phi i8* [ %642, %641 ], [ %471, %629 ]
  %634 = phi i64 [ %643, %641 ], [ 0, %629 ]
  %635 = bitcast i8* %633 to i64*
  %636 = load i64, i64* %635, align 8, !alias.scope !407, !noalias !403
  %637 = getelementptr inbounds i8, i8* %630, i64 %634
  %638 = bitcast i8* %637 to i64*
  %639 = load i64, i64* %638, align 8, !alias.scope !407, !noalias !403
  %640 = icmp eq i64 %636, %639
  br i1 %640, label %641, label %646, !prof !13

641:                                              ; preds = %631
  %642 = getelementptr inbounds i8, i8* %633, i64 8
  %643 = add nuw i64 %634, 8
  %644 = add nsw i64 %632, -1
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %651, label %631, !prof !13

646:                                              ; preds = %631
  %647 = xor i64 %639, %636
  %648 = tail call i64 @llvm.cttz.i64(i64 %647, i1 true) #4, !range !14
  %649 = lshr i64 %648, 3
  %650 = or i64 %649, %634
  br label %661

651:                                              ; preds = %641, %629
  %652 = phi i64 [ 0, %629 ], [ %643, %641 ]
  %653 = phi i8* [ %471, %629 ], [ %642, %641 ]
  br i1 %480, label %661, label %654

654:                                              ; preds = %651
  %655 = getelementptr inbounds i8, i8* %630, i64 %652
  %656 = load i8, i8* %655, align 1, !alias.scope !407, !noalias !403
  %657 = load i8, i8* %653, align 1, !alias.scope !407, !noalias !403
  %658 = icmp eq i8 %656, %657
  br i1 %658, label %659, label %661, !prof !15

659:                                              ; preds = %654
  %660 = add i64 %652, 1
  br i1 %590, label %661, label %1429

661:                                              ; preds = %1469, %659, %654, %1429, %1435, %1437, %1443, %1445, %1451, %1453, %1459, %1461, %1467, %651, %646
  %662 = phi i64 [ %650, %646 ], [ %652, %651 ], [ %652, %654 ], [ %660, %659 ], [ %660, %1429 ], [ %1436, %1435 ], [ %1436, %1437 ], [ %1444, %1443 ], [ %1444, %1445 ], [ %1452, %1451 ], [ %1452, %1453 ], [ %1460, %1459 ], [ %1460, %1461 ], [ %1468, %1467 ], [ %1476, %1469 ]
  %663 = icmp ugt i64 %662, 3
  br i1 %663, label %664, label %679

664:                                              ; preds = %661
  %665 = mul i64 %662, 135
  %666 = trunc i64 %608 to i32
  %667 = tail call i32 @llvm.ctlz.i32(i32 %666, i1 true) #4, !range !18
  %668 = xor i32 %667, 31
  %669 = mul nsw i32 %668, -30
  %670 = add nsw i32 %669, 1920
  %671 = zext i32 %670 to i64
  %672 = add i64 %665, %671
  %673 = icmp ult i64 %605, %672
  %674 = select i1 %673, i64 %672, i64 %597
  %675 = select i1 %673, i64 %608, i64 %598
  %676 = select i1 %673, i64 %662, i64 %599
  %677 = select i1 %673, i64 %672, i64 %605
  %678 = select i1 %673, i64 %662, i64 %604
  br label %679

679:                                              ; preds = %664, %661, %623, %620, %610
  %680 = phi i64 [ %597, %610 ], [ %597, %620 ], [ %597, %661 ], [ %597, %623 ], [ %674, %664 ]
  %681 = phi i64 [ %598, %610 ], [ %598, %620 ], [ %598, %661 ], [ %598, %623 ], [ %675, %664 ]
  %682 = phi i64 [ %599, %610 ], [ %599, %620 ], [ %599, %661 ], [ %599, %623 ], [ %676, %664 ]
  %683 = phi i64 [ %605, %610 ], [ %605, %620 ], [ %605, %661 ], [ %605, %623 ], [ %677, %664 ]
  %684 = phi i64 [ %604, %610 ], [ %604, %620 ], [ %604, %661 ], [ %604, %623 ], [ %678, %664 ]
  %685 = icmp eq i64 %607, 0
  br i1 %685, label %686, label %596

686:                                              ; preds = %679, %596, %573
  %687 = phi i64 [ %566, %573 ], [ %680, %679 ], [ %597, %596 ]
  %688 = phi i64 [ %567, %573 ], [ %681, %679 ], [ %598, %596 ]
  %689 = phi i64 [ %568, %573 ], [ %682, %679 ], [ %599, %596 ]
  %690 = phi i64 [ %569, %573 ], [ %683, %679 ], [ %605, %596 ]
  %691 = load i16, i16* %47, align 2, !alias.scope !408, !noalias !411
  %692 = add i16 %691, 1
  store i16 %692, i16* %47, align 2, !alias.scope !408, !noalias !411
  %693 = zext i16 %691 to i64
  %694 = and i64 %462, 65535
  %695 = getelementptr inbounds i8, i8* %469, i64 %694
  store i8 %476, i8* %695, align 1, !noalias !413
  %696 = icmp ult i64 %585, 65535
  %697 = select i1 %696, i64 %585, i64 65535
  %698 = trunc i64 %697 to i16
  %699 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %579, i64 0, i32 0, i64 %693, i32 0
  store i16 %698, i16* %699, align 2, !noalias !413
  %700 = load i16, i16* %586, align 2, !noalias !413
  %701 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %579, i64 0, i32 0, i64 %693, i32 1
  store i16 %700, i16* %701, align 2, !noalias !413
  %702 = trunc i64 %462 to i32
  store i32 %702, i32* %582, align 4, !noalias !413
  store i16 %691, i16* %586, align 2, !noalias !413
  %703 = icmp eq i64 %690, 2020
  br i1 %703, label %704, label %832

704:                                              ; preds = %686
  %705 = load %struct.HasherCommon*, %struct.HasherCommon** %49, align 8, !alias.scope !393, !noalias !396
  %706 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %705, i64 0, i32 2
  %707 = load i64, i64* %706, align 8, !noalias !406
  %708 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %705, i64 0, i32 1
  %709 = load i64, i64* %708, align 8, !noalias !406
  %710 = lshr i64 %709, 7
  %711 = icmp ult i64 %707, %710
  br i1 %711, label %832, label %712

712:                                              ; preds = %704
  %713 = lshr i32 %474, 18
  %714 = shl nuw nsw i32 %713, 1
  %715 = zext i32 %714 to i64
  %716 = add i64 %574, 1
  br label %717

717:                                              ; preds = %822, %712
  %718 = phi i32 [ 0, %712 ], [ %823, %822 ]
  %719 = phi i64 [ %687, %712 ], [ %824, %822 ]
  %720 = phi i64 [ %688, %712 ], [ %825, %822 ]
  %721 = phi i64 [ %689, %712 ], [ %826, %822 ]
  %722 = phi i64 [ %707, %712 ], [ %827, %822 ]
  %723 = phi i64 [ 2020, %712 ], [ %828, %822 ]
  %724 = phi i64 [ %709, %712 ], [ %727, %822 ]
  %725 = phi i64 [ %715, %712 ], [ %830, %822 ]
  %726 = phi i64 [ 0, %712 ], [ %829, %822 ]
  %727 = add i64 %724, 1
  store i64 %727, i64* %708, align 8, !noalias !406
  %728 = load i8*, i8** %50, align 8, !noalias !406
  %729 = getelementptr inbounds i8, i8* %728, i64 %725
  %730 = load i8, i8* %729, align 1, !noalias !406
  %731 = icmp eq i8 %730, 0
  br i1 %731, label %822, label %732

732:                                              ; preds = %717
  %733 = zext i8 %730 to i64
  %734 = load i16*, i16** %51, align 8, !noalias !406
  %735 = getelementptr inbounds i16, i16* %734, i64 %725
  %736 = load i16, i16* %735, align 2, !noalias !406
  %737 = zext i16 %736 to i64
  %738 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %52, align 8, !noalias !406
  %739 = icmp ult i64 %453, %733
  br i1 %739, label %822, label %740

740:                                              ; preds = %732
  %741 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %738, i64 0, i32 1, i64 %733
  %742 = load i32, i32* %741, align 4, !noalias !406
  %743 = zext i32 %742 to i64
  %744 = mul nuw nsw i64 %737, %733
  %745 = add nuw nsw i64 %744, %743
  %746 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %738, i64 0, i32 3
  %747 = load i8*, i8** %746, align 8, !noalias !406
  %748 = getelementptr inbounds i8, i8* %747, i64 %745
  %749 = lshr i64 %733, 3
  %750 = icmp eq i64 %749, 0
  br i1 %750, label %771, label %751, !prof !13

751:                                              ; preds = %740, %761
  %752 = phi i64 [ %764, %761 ], [ %749, %740 ]
  %753 = phi i8* [ %762, %761 ], [ %748, %740 ]
  %754 = phi i64 [ %763, %761 ], [ 0, %740 ]
  %755 = bitcast i8* %753 to i64*
  %756 = load i64, i64* %755, align 8, !noalias !406
  %757 = getelementptr inbounds i8, i8* %471, i64 %754
  %758 = bitcast i8* %757 to i64*
  %759 = load i64, i64* %758, align 8, !alias.scope !407, !noalias !403
  %760 = icmp eq i64 %756, %759
  br i1 %760, label %761, label %766, !prof !13

761:                                              ; preds = %751
  %762 = getelementptr inbounds i8, i8* %753, i64 8
  %763 = add nuw nsw i64 %754, 8
  %764 = add nsw i64 %752, -1
  %765 = icmp eq i64 %764, 0
  br i1 %765, label %771, label %751, !prof !13

766:                                              ; preds = %751
  %767 = xor i64 %759, %756
  %768 = tail call i64 @llvm.cttz.i64(i64 %767, i1 true) #4, !range !14
  %769 = lshr i64 %768, 3
  %770 = or i64 %769, %754
  br label %784

771:                                              ; preds = %761, %740
  %772 = phi i64 [ 0, %740 ], [ %763, %761 ]
  %773 = phi i8* [ %748, %740 ], [ %762, %761 ]
  %774 = and i64 %733, 7
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %784, label %776

776:                                              ; preds = %771
  %777 = getelementptr inbounds i8, i8* %471, i64 %772
  %778 = load i8, i8* %777, align 1, !alias.scope !407, !noalias !403
  %779 = load i8, i8* %773, align 1, !noalias !406
  %780 = icmp eq i8 %778, %779
  br i1 %780, label %781, label %784, !prof !15

781:                                              ; preds = %776
  %782 = add nuw nsw i64 %772, 1
  %783 = icmp eq i64 %774, 1
  br i1 %783, label %784, label %1477

784:                                              ; preds = %1522, %781, %776, %1477, %1483, %1486, %1492, %1495, %1501, %1504, %1510, %1513, %1519, %771, %766
  %785 = phi i64 [ %770, %766 ], [ %772, %771 ], [ %772, %776 ], [ %782, %781 ], [ %782, %1477 ], [ %1484, %1483 ], [ %1484, %1486 ], [ %1493, %1492 ], [ %1493, %1495 ], [ %1502, %1501 ], [ %1502, %1504 ], [ %1511, %1510 ], [ %1511, %1513 ], [ %1520, %1519 ], [ %1529, %1522 ]
  %786 = load i32, i32* %53, align 4, !noalias !406
  %787 = zext i32 %786 to i64
  %788 = add i64 %785, %787
  %789 = icmp ule i64 %788, %733
  %790 = icmp eq i64 %785, 0
  %791 = or i1 %790, %789
  br i1 %791, label %822, label %792

792:                                              ; preds = %784
  %793 = sub i64 %733, %785
  %794 = shl i64 %793, 2
  %795 = load i64, i64* %54, align 8, !noalias !406
  %796 = mul i64 %793, 6
  %797 = lshr i64 %795, %796
  %798 = and i64 %797, 63
  %799 = add i64 %798, %794
  %800 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %738, i64 0, i32 0, i64 %733
  %801 = load i8, i8* %800, align 1, !noalias !406
  %802 = zext i8 %801 to i64
  %803 = shl i64 %799, %802
  %804 = add i64 %716, %737
  %805 = add i64 %804, %803
  %806 = icmp ugt i64 %805, %467
  br i1 %806, label %822, label %807

807:                                              ; preds = %792
  %808 = mul i64 %785, 135
  %809 = add i64 %808, 1920
  %810 = trunc i64 %805 to i32
  %811 = tail call i32 @llvm.ctlz.i32(i32 %810, i1 true) #4, !range !18
  %812 = xor i32 %811, 31
  %813 = mul nuw nsw i32 %812, 30
  %814 = zext i32 %813 to i64
  %815 = sub i64 %809, %814
  %816 = icmp ult i64 %815, %723
  br i1 %816, label %822, label %817

817:                                              ; preds = %807
  %818 = zext i8 %730 to i32
  %819 = trunc i64 %785 to i32
  %820 = sub nsw i32 %818, %819
  %821 = add i64 %722, 1
  store i64 %821, i64* %706, align 8, !noalias !406
  br label %822

822:                                              ; preds = %817, %807, %792, %784, %732, %717
  %823 = phi i32 [ %718, %717 ], [ %718, %732 ], [ %718, %784 ], [ %718, %792 ], [ %718, %807 ], [ %820, %817 ]
  %824 = phi i64 [ %719, %717 ], [ %719, %732 ], [ %719, %784 ], [ %719, %792 ], [ %719, %807 ], [ %815, %817 ]
  %825 = phi i64 [ %720, %717 ], [ %720, %732 ], [ %720, %784 ], [ %720, %792 ], [ %720, %807 ], [ %805, %817 ]
  %826 = phi i64 [ %721, %717 ], [ %721, %732 ], [ %721, %784 ], [ %721, %792 ], [ %721, %807 ], [ %785, %817 ]
  %827 = phi i64 [ %722, %717 ], [ %722, %732 ], [ %722, %784 ], [ %722, %792 ], [ %722, %807 ], [ %821, %817 ]
  %828 = phi i64 [ %723, %717 ], [ %723, %732 ], [ %723, %784 ], [ %723, %792 ], [ %723, %807 ], [ %815, %817 ]
  %829 = add nuw nsw i64 %726, 1
  %830 = add nuw nsw i64 %725, 1
  %831 = icmp eq i64 %829, 2
  br i1 %831, label %832, label %717

832:                                              ; preds = %822, %686, %704
  %833 = phi i32 [ 0, %704 ], [ 0, %686 ], [ %823, %822 ]
  %834 = phi i64 [ %687, %704 ], [ %687, %686 ], [ %824, %822 ]
  %835 = phi i64 [ %688, %704 ], [ %688, %686 ], [ %825, %822 ]
  %836 = phi i64 [ %689, %704 ], [ %689, %686 ], [ %826, %822 ]
  %837 = add i64 %446, 175
  %838 = icmp ult i64 %834, %837
  br i1 %838, label %839, label %841

839:                                              ; preds = %832
  %840 = add i64 %452, %18
  br label %848

841:                                              ; preds = %832
  %842 = add i64 %449, 1
  %843 = add nuw nsw i32 %451, 1
  %844 = icmp ult i32 %843, 4
  %845 = add i64 %452, 5
  %846 = icmp ult i64 %845, %20
  %847 = and i1 %844, %846
  br i1 %847, label %444, label %848

848:                                              ; preds = %841, %839
  %849 = phi i64 [ %840, %839 ], [ %465, %841 ]
  %850 = phi i32 [ %445, %839 ], [ %833, %841 ]
  %851 = phi i64 [ %447, %839 ], [ %835, %841 ]
  %852 = phi i64 [ %448, %839 ], [ %836, %841 ]
  %853 = phi i64 [ %449, %839 ], [ %842, %841 ]
  %854 = phi i64 [ %452, %839 ], [ %462, %841 ]
  %855 = shl i64 %852, 1
  %856 = add i64 %855, %27
  %857 = add i64 %856, %854
  %858 = icmp ult i64 %849, %16
  %859 = select i1 %858, i64 %849, i64 %16
  %860 = icmp ugt i64 %851, %859
  br i1 %860, label %896, label %861

861:                                              ; preds = %848
  %862 = add i64 %851, 3
  %863 = load i32, i32* %6, align 4
  %864 = sext i32 %863 to i64
  %865 = sub i64 %862, %864
  %866 = load i32, i32* %57, align 4
  %867 = sext i32 %866 to i64
  %868 = sub i64 %862, %867
  %869 = icmp eq i64 %851, %864
  br i1 %869, label %913, label %870

870:                                              ; preds = %861
  %871 = icmp eq i64 %851, %867
  br i1 %871, label %898, label %872

872:                                              ; preds = %870
  %873 = icmp ult i64 %865, 7
  br i1 %873, label %874, label %880

874:                                              ; preds = %872
  %875 = trunc i64 %865 to i32
  %876 = shl i32 %875, 2
  %877 = lshr i32 158663784, %876
  %878 = and i32 %877, 15
  %879 = zext i32 %878 to i64
  br label %898

880:                                              ; preds = %872
  %881 = icmp ult i64 %868, 7
  br i1 %881, label %882, label %888

882:                                              ; preds = %880
  %883 = trunc i64 %868 to i32
  %884 = shl i32 %883, 2
  %885 = lshr i32 266017486, %884
  %886 = and i32 %885, 15
  %887 = zext i32 %886 to i64
  br label %898

888:                                              ; preds = %880
  %889 = load i32, i32* %58, align 4
  %890 = sext i32 %889 to i64
  %891 = icmp eq i64 %851, %890
  br i1 %891, label %898, label %892

892:                                              ; preds = %888
  %893 = load i32, i32* %59, align 4
  %894 = sext i32 %893 to i64
  %895 = icmp eq i64 %851, %894
  br i1 %895, label %898, label %896

896:                                              ; preds = %892, %848
  %897 = add i64 %851, 15
  br label %898

898:                                              ; preds = %870, %874, %882, %888, %892, %896
  %899 = phi i64 [ %897, %896 ], [ 3, %892 ], [ 2, %888 ], [ 1, %870 ], [ %887, %882 ], [ %879, %874 ]
  %900 = icmp ule i64 %851, %859
  %901 = icmp ne i64 %899, 0
  %902 = and i1 %900, %901
  br i1 %902, label %903, label %913

903:                                              ; preds = %898
  %904 = load i32, i32* %58, align 4
  store i32 %904, i32* %59, align 4
  %905 = load i32, i32* %57, align 4
  store i32 %905, i32* %58, align 4
  %906 = load i32, i32* %6, align 4
  store i32 %906, i32* %57, align 4
  %907 = trunc i64 %851 to i32
  store i32 %907, i32* %6, align 4
  %908 = insertelement <4 x i32> undef, i32 %907, i32 0
  %909 = shufflevector <4 x i32> %908, <4 x i32> undef, <4 x i32> zeroinitializer
  %910 = add nsw <4 x i32> %909, <i32 -1, i32 1, i32 -2, i32 2>
  store <4 x i32> %910, <4 x i32>* %62, align 4, !alias.scope !414
  %911 = add nsw i32 %907, -3
  store i32 %911, i32* %35, align 4, !alias.scope !414
  %912 = add nsw i32 %907, 3
  store i32 %912, i32* %37, align 4, !alias.scope !414
  br label %913

913:                                              ; preds = %861, %903, %898
  %914 = phi i64 [ %899, %903 ], [ %899, %898 ], [ 0, %861 ]
  %915 = getelementptr inbounds %struct.Command, %struct.Command* %66, i64 1
  %916 = trunc i64 %853 to i32
  %917 = getelementptr inbounds %struct.Command, %struct.Command* %66, i64 0, i32 0
  store i32 %916, i32* %917, align 4
  %918 = shl i32 %850, 25
  %919 = trunc i64 %852 to i32
  %920 = or i32 %918, %919
  %921 = getelementptr inbounds %struct.Command, %struct.Command* %66, i64 0, i32 1
  store i32 %920, i32* %921, align 4
  %922 = load i32, i32* %60, align 4
  %923 = zext i32 %922 to i64
  %924 = load i32, i32* %61, align 8
  %925 = zext i32 %924 to i64
  %926 = getelementptr inbounds %struct.Command, %struct.Command* %66, i64 0, i32 4
  %927 = getelementptr inbounds %struct.Command, %struct.Command* %66, i64 0, i32 2
  %928 = add nuw nsw i64 %923, 16
  %929 = icmp ugt i64 %928, %914
  br i1 %929, label %930, label %932

930:                                              ; preds = %913
  %931 = trunc i64 %914 to i16
  store i16 %931, i16* %926, align 2
  br label %962

932:                                              ; preds = %913
  %933 = shl i64 4, %925
  %934 = add i64 %914, -16
  %935 = sub i64 %934, %923
  %936 = add i64 %935, %933
  %937 = trunc i64 %936 to i32
  %938 = tail call i32 @llvm.ctlz.i32(i32 %937, i1 true) #4, !range !18
  %939 = sub nsw i32 30, %938
  %940 = zext i32 %939 to i64
  %941 = shl nsw i32 -1, %924
  %942 = xor i32 %941, 65535
  %943 = zext i32 %942 to i64
  %944 = and i64 %936, %943
  %945 = lshr i64 %936, %940
  %946 = and i64 %945, 1
  %947 = or i64 %946, 2
  %948 = shl i64 %947, %940
  %949 = sub nsw i64 %940, %925
  %950 = shl nsw i64 %949, 10
  %951 = shl nsw i64 %949, 1
  %952 = add nsw i64 %951, -2
  %953 = or i64 %952, %946
  %954 = shl i64 %953, %925
  %955 = add nuw nsw i64 %944, %928
  %956 = add i64 %955, %954
  %957 = or i64 %956, %950
  %958 = trunc i64 %957 to i16
  store i16 %958, i16* %926, align 2
  %959 = sub i64 %936, %948
  %960 = lshr i64 %959, %925
  %961 = trunc i64 %960 to i32
  br label %962

962:                                              ; preds = %932, %930
  %963 = phi i16 [ %958, %932 ], [ %931, %930 ]
  %964 = phi i32 [ %961, %932 ], [ 0, %930 ]
  store i32 %964, i32* %927, align 4
  %965 = add nsw i32 %850, %919
  %966 = sext i32 %965 to i64
  %967 = and i16 %963, 1023
  %968 = icmp eq i16 %967, 0
  %969 = getelementptr inbounds %struct.Command, %struct.Command* %66, i64 0, i32 3
  %970 = icmp ult i64 %853, 6
  br i1 %970, label %971, label %973

971:                                              ; preds = %962
  %972 = trunc i64 %853 to i16
  br label %999

973:                                              ; preds = %962
  %974 = icmp ult i64 %853, 130
  br i1 %974, label %975, label %987

975:                                              ; preds = %973
  %976 = add nsw i64 %853, -2
  %977 = trunc i64 %976 to i32
  %978 = tail call i32 @llvm.ctlz.i32(i32 %977, i1 true) #4, !range !18
  %979 = sub nsw i32 30, %978
  %980 = shl nsw i32 %979, 1
  %981 = zext i32 %980 to i64
  %982 = zext i32 %979 to i64
  %983 = lshr i64 %976, %982
  %984 = add nuw nsw i64 %983, %981
  %985 = trunc i64 %984 to i16
  %986 = add i16 %985, 2
  br label %999

987:                                              ; preds = %973
  %988 = icmp ult i64 %853, 2114
  br i1 %988, label %989, label %994

989:                                              ; preds = %987
  %990 = add nsw i32 %916, -66
  %991 = tail call i32 @llvm.ctlz.i32(i32 %990, i1 true) #4, !range !18
  %992 = trunc i32 %991 to i16
  %993 = sub nuw nsw i16 41, %992
  br label %999

994:                                              ; preds = %987
  %995 = icmp ult i64 %853, 6210
  br i1 %995, label %999, label %996

996:                                              ; preds = %994
  %997 = icmp ult i64 %853, 22594
  %998 = select i1 %997, i16 22, i16 23
  br label %999

999:                                              ; preds = %996, %994, %989, %975, %971
  %1000 = phi i16 [ %972, %971 ], [ %986, %975 ], [ %993, %989 ], [ 21, %994 ], [ %998, %996 ]
  %1001 = icmp ult i32 %965, 10
  br i1 %1001, label %1002, label %1005

1002:                                             ; preds = %999
  %1003 = trunc i32 %965 to i16
  %1004 = add nsw i16 %1003, -2
  br label %1026

1005:                                             ; preds = %999
  %1006 = icmp ult i32 %965, 134
  br i1 %1006, label %1007, label %1019

1007:                                             ; preds = %1005
  %1008 = add nsw i64 %966, -6
  %1009 = trunc i64 %1008 to i32
  %1010 = tail call i32 @llvm.ctlz.i32(i32 %1009, i1 true) #4, !range !18
  %1011 = sub nsw i32 30, %1010
  %1012 = shl nsw i32 %1011, 1
  %1013 = zext i32 %1012 to i64
  %1014 = zext i32 %1011 to i64
  %1015 = lshr i64 %1008, %1014
  %1016 = add nuw nsw i64 %1015, %1013
  %1017 = trunc i64 %1016 to i16
  %1018 = add i16 %1017, 4
  br label %1026

1019:                                             ; preds = %1005
  %1020 = icmp ult i32 %965, 2118
  br i1 %1020, label %1021, label %1026

1021:                                             ; preds = %1019
  %1022 = add nsw i32 %965, -70
  %1023 = tail call i32 @llvm.ctlz.i32(i32 %1022, i1 true) #4, !range !18
  %1024 = trunc i32 %1023 to i16
  %1025 = sub nuw nsw i16 43, %1024
  br label %1026

1026:                                             ; preds = %1021, %1019, %1007, %1002
  %1027 = phi i16 [ %1004, %1002 ], [ %1018, %1007 ], [ %1025, %1021 ], [ 23, %1019 ]
  %1028 = and i16 %1027, 7
  %1029 = shl i16 %1000, 3
  %1030 = and i16 %1029, 56
  %1031 = or i16 %1028, %1030
  %1032 = icmp ult i16 %1000, 8
  %1033 = and i1 %968, %1032
  %1034 = icmp ult i16 %1027, 16
  %1035 = and i1 %1033, %1034
  br i1 %1035, label %1036, label %1040

1036:                                             ; preds = %1026
  %1037 = icmp ult i16 %1027, 8
  %1038 = or i16 %1031, 64
  %1039 = select i1 %1037, i16 %1031, i16 %1038
  br label %1055

1040:                                             ; preds = %1026
  %1041 = lshr i16 %1027, 3
  %1042 = lshr i16 %1000, 3
  %1043 = mul nuw nsw i16 %1042, 3
  %1044 = add nuw nsw i16 %1041, %1043
  %1045 = zext i16 %1044 to i32
  %1046 = shl nuw i16 %1044, 1
  %1047 = zext i16 %1046 to i32
  %1048 = shl nuw nsw i32 %1045, 6
  %1049 = add nuw nsw i32 %1048, 64
  %1050 = lshr i32 5377344, %1047
  %1051 = and i32 %1050, 192
  %1052 = add nuw nsw i32 %1049, %1051
  %1053 = trunc i32 %1052 to i16
  %1054 = or i16 %1031, %1053
  br label %1055

1055:                                             ; preds = %1036, %1040
  %1056 = phi i16 [ %1039, %1036 ], [ %1054, %1040 ]
  store i16 %1056, i16* %969, align 2
  %1057 = load i64, i64* %10, align 8
  %1058 = add i64 %1057, %853
  store i64 %1058, i64* %10, align 8
  %1059 = add i64 %854, 2
  %1060 = add i64 %854, %852
  %1061 = icmp ult i64 %1060, %23
  %1062 = select i1 %1061, i64 %1060, i64 %23
  %1063 = lshr i64 %852, 2
  %1064 = icmp ult i64 %851, %1063
  br i1 %1064, label %1065, label %1072

1065:                                             ; preds = %1055
  %1066 = shl i64 %851, 2
  %1067 = sub i64 %1060, %1066
  %1068 = icmp ugt i64 %1059, %1067
  %1069 = select i1 %1068, i64 %1059, i64 %1067
  %1070 = icmp ult i64 %1062, %1069
  %1071 = select i1 %1070, i64 %1062, i64 %1069
  br label %1072

1072:                                             ; preds = %1065, %1055
  %1073 = phi i64 [ %1071, %1065 ], [ %1059, %1055 ]
  %1074 = icmp ult i64 %1073, %1062
  br i1 %1074, label %1075, label %1213

1075:                                             ; preds = %1072
  %1076 = load i8*, i8** %44, align 8, !alias.scope !419, !noalias !424
  %1077 = bitcast i8* %1076 to i32*
  %1078 = getelementptr inbounds i8, i8* %1076, i64 131072
  %1079 = bitcast i8* %1078 to i16*
  %1080 = getelementptr inbounds i8, i8* %1076, i64 196608
  %1081 = getelementptr inbounds i8, i8* %1076, i64 262144
  %1082 = bitcast i8* %1081 to %struct.BankH41*
  %1083 = load i16, i16* %47, align 2, !alias.scope !419, !noalias !424
  br label %1084

1084:                                             ; preds = %1084, %1075
  %1085 = phi i16 [ %1083, %1075 ], [ %1094, %1084 ]
  %1086 = phi i64 [ %1073, %1075 ], [ %1111, %1084 ]
  %1087 = and i64 %1086, %3
  %1088 = getelementptr inbounds i8, i8* %2, i64 %1087
  %1089 = bitcast i8* %1088 to i32*
  %1090 = load i32, i32* %1089, align 4, !alias.scope !427, !noalias !419
  %1091 = mul i32 %1090, 506832829
  %1092 = lshr i32 %1091, 17
  %1093 = zext i32 %1092 to i64
  %1094 = add i16 %1085, 1
  %1095 = zext i16 %1085 to i64
  %1096 = getelementptr inbounds i32, i32* %1077, i64 %1093
  %1097 = load i32, i32* %1096, align 4, !noalias !430
  %1098 = zext i32 %1097 to i64
  %1099 = sub i64 %1086, %1098
  %1100 = trunc i32 %1092 to i8
  %1101 = and i64 %1086, 65535
  %1102 = getelementptr inbounds i8, i8* %1080, i64 %1101
  store i8 %1100, i8* %1102, align 1, !noalias !430
  %1103 = icmp ult i64 %1099, 65535
  %1104 = select i1 %1103, i64 %1099, i64 65535
  %1105 = trunc i64 %1104 to i16
  %1106 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1082, i64 0, i32 0, i64 %1095, i32 0
  store i16 %1105, i16* %1106, align 2, !noalias !430
  %1107 = getelementptr inbounds i16, i16* %1079, i64 %1093
  %1108 = load i16, i16* %1107, align 2, !noalias !430
  %1109 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1082, i64 0, i32 0, i64 %1095, i32 1
  store i16 %1108, i16* %1109, align 2, !noalias !430
  %1110 = trunc i64 %1086 to i32
  store i32 %1110, i32* %1096, align 4, !noalias !430
  store i16 %1085, i16* %1107, align 2, !noalias !430
  %1111 = add nuw i64 %1086, 1
  %1112 = icmp eq i64 %1111, %1062
  br i1 %1112, label %1113, label %1084

1113:                                             ; preds = %1084
  store i16 %1094, i16* %47, align 2, !alias.scope !419, !noalias !424
  br label %1213

1114:                                             ; preds = %438
  %1115 = add i64 %68, 1
  %1116 = add i64 %65, 1
  %1117 = icmp ugt i64 %1116, %67
  br i1 %1117, label %1118, label %1213

1118:                                             ; preds = %1114
  %1119 = add i64 %67, %55
  %1120 = icmp ugt i64 %1116, %1119
  br i1 %1120, label %1121, label %1166

1121:                                             ; preds = %1118
  %1122 = add i64 %65, 17
  %1123 = icmp ult i64 %1122, %56
  %1124 = select i1 %1123, i64 %1122, i64 %56
  %1125 = icmp ult i64 %1116, %1124
  br i1 %1125, label %1126, label %1213

1126:                                             ; preds = %1121
  %1127 = load i8*, i8** %44, align 8, !alias.scope !431, !noalias !434
  %1128 = bitcast i8* %1127 to i32*
  %1129 = getelementptr inbounds i8, i8* %1127, i64 131072
  %1130 = bitcast i8* %1129 to i16*
  %1131 = getelementptr inbounds i8, i8* %1127, i64 196608
  %1132 = getelementptr inbounds i8, i8* %1127, i64 262144
  %1133 = bitcast i8* %1132 to %struct.BankH41*
  %1134 = load i16, i16* %47, align 2, !alias.scope !431, !noalias !434
  br label %1135

1135:                                             ; preds = %1126, %1135
  %1136 = phi i16 [ %1134, %1126 ], [ %1146, %1135 ]
  %1137 = phi i64 [ %1116, %1126 ], [ %1164, %1135 ]
  %1138 = phi i64 [ %1115, %1126 ], [ %1163, %1135 ]
  %1139 = and i64 %1137, %3
  %1140 = getelementptr inbounds i8, i8* %2, i64 %1139
  %1141 = bitcast i8* %1140 to i32*
  %1142 = load i32, i32* %1141, align 4, !alias.scope !436, !noalias !431
  %1143 = mul i32 %1142, 506832829
  %1144 = lshr i32 %1143, 17
  %1145 = zext i32 %1144 to i64
  %1146 = add i16 %1136, 1
  %1147 = zext i16 %1136 to i64
  %1148 = getelementptr inbounds i32, i32* %1128, i64 %1145
  %1149 = load i32, i32* %1148, align 4, !noalias !439
  %1150 = zext i32 %1149 to i64
  %1151 = sub i64 %1137, %1150
  %1152 = trunc i32 %1144 to i8
  %1153 = and i64 %1137, 65535
  %1154 = getelementptr inbounds i8, i8* %1131, i64 %1153
  store i8 %1152, i8* %1154, align 1, !noalias !439
  %1155 = icmp ult i64 %1151, 65535
  %1156 = select i1 %1155, i64 %1151, i64 65535
  %1157 = trunc i64 %1156 to i16
  %1158 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1133, i64 0, i32 0, i64 %1147, i32 0
  store i16 %1157, i16* %1158, align 2, !noalias !439
  %1159 = getelementptr inbounds i16, i16* %1130, i64 %1145
  %1160 = load i16, i16* %1159, align 2, !noalias !439
  %1161 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1133, i64 0, i32 0, i64 %1147, i32 1
  store i16 %1160, i16* %1161, align 2, !noalias !439
  %1162 = trunc i64 %1137 to i32
  store i32 %1162, i32* %1148, align 4, !noalias !439
  store i16 %1136, i16* %1159, align 2, !noalias !439
  %1163 = add i64 %1138, 4
  %1164 = add i64 %1137, 4
  %1165 = icmp ult i64 %1164, %1124
  br i1 %1165, label %1135, label %1211

1166:                                             ; preds = %1118
  %1167 = add i64 %65, 9
  %1168 = icmp ult i64 %1167, %22
  %1169 = select i1 %1168, i64 %1167, i64 %22
  %1170 = icmp ult i64 %1116, %1169
  br i1 %1170, label %1171, label %1213

1171:                                             ; preds = %1166
  %1172 = load i8*, i8** %44, align 8, !alias.scope !440, !noalias !443
  %1173 = bitcast i8* %1172 to i32*
  %1174 = getelementptr inbounds i8, i8* %1172, i64 131072
  %1175 = bitcast i8* %1174 to i16*
  %1176 = getelementptr inbounds i8, i8* %1172, i64 196608
  %1177 = getelementptr inbounds i8, i8* %1172, i64 262144
  %1178 = bitcast i8* %1177 to %struct.BankH41*
  %1179 = load i16, i16* %47, align 2, !alias.scope !440, !noalias !443
  br label %1180

1180:                                             ; preds = %1171, %1180
  %1181 = phi i16 [ %1179, %1171 ], [ %1191, %1180 ]
  %1182 = phi i64 [ %1116, %1171 ], [ %1209, %1180 ]
  %1183 = phi i64 [ %1115, %1171 ], [ %1208, %1180 ]
  %1184 = and i64 %1182, %3
  %1185 = getelementptr inbounds i8, i8* %2, i64 %1184
  %1186 = bitcast i8* %1185 to i32*
  %1187 = load i32, i32* %1186, align 4, !alias.scope !445, !noalias !440
  %1188 = mul i32 %1187, 506832829
  %1189 = lshr i32 %1188, 17
  %1190 = zext i32 %1189 to i64
  %1191 = add i16 %1181, 1
  %1192 = zext i16 %1181 to i64
  %1193 = getelementptr inbounds i32, i32* %1173, i64 %1190
  %1194 = load i32, i32* %1193, align 4, !noalias !448
  %1195 = zext i32 %1194 to i64
  %1196 = sub i64 %1182, %1195
  %1197 = trunc i32 %1189 to i8
  %1198 = and i64 %1182, 65535
  %1199 = getelementptr inbounds i8, i8* %1176, i64 %1198
  store i8 %1197, i8* %1199, align 1, !noalias !448
  %1200 = icmp ult i64 %1196, 65535
  %1201 = select i1 %1200, i64 %1196, i64 65535
  %1202 = trunc i64 %1201 to i16
  %1203 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1178, i64 0, i32 0, i64 %1192, i32 0
  store i16 %1202, i16* %1203, align 2, !noalias !448
  %1204 = getelementptr inbounds i16, i16* %1175, i64 %1190
  %1205 = load i16, i16* %1204, align 2, !noalias !448
  %1206 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1178, i64 0, i32 0, i64 %1192, i32 1
  store i16 %1205, i16* %1206, align 2, !noalias !448
  %1207 = trunc i64 %1182 to i32
  store i32 %1207, i32* %1193, align 4, !noalias !448
  store i16 %1181, i16* %1204, align 2, !noalias !448
  %1208 = add i64 %1183, 2
  %1209 = add i64 %1182, 2
  %1210 = icmp ult i64 %1209, %1169
  br i1 %1210, label %1180, label %1212

1211:                                             ; preds = %1135
  store i16 %1146, i16* %47, align 2, !alias.scope !431, !noalias !434
  br label %1213

1212:                                             ; preds = %1180
  store i16 %1191, i16* %47, align 2, !alias.scope !440, !noalias !443
  br label %1213

1213:                                             ; preds = %1166, %1212, %1121, %1211, %1113, %1072, %1114
  %1214 = phi i64 [ %1115, %1114 ], [ 0, %1072 ], [ 0, %1113 ], [ %1163, %1211 ], [ %1115, %1121 ], [ %1208, %1212 ], [ %1115, %1166 ]
  %1215 = phi i64 [ %67, %1114 ], [ %857, %1072 ], [ %857, %1113 ], [ %67, %1211 ], [ %67, %1121 ], [ %67, %1212 ], [ %67, %1166 ]
  %1216 = phi %struct.Command* [ %66, %1114 ], [ %915, %1072 ], [ %915, %1113 ], [ %66, %1211 ], [ %66, %1121 ], [ %66, %1212 ], [ %66, %1166 ]
  %1217 = phi i64 [ %1116, %1114 ], [ %1060, %1072 ], [ %1060, %1113 ], [ %1164, %1211 ], [ %1116, %1121 ], [ %1209, %1212 ], [ %1116, %1166 ]
  %1218 = add i64 %1217, 4
  %1219 = icmp ult i64 %1218, %20
  %1220 = sub i64 %20, %1217
  br i1 %1219, label %63, label %1221

1221:                                             ; preds = %1213, %11
  %1222 = phi i64 [ %19, %11 ], [ %1214, %1213 ]
  %1223 = phi %struct.Command* [ %8, %11 ], [ %1216, %1213 ]
  %1224 = phi i64 [ %0, %11 ], [ %1220, %1213 ]
  %1225 = add i64 %1224, %1222
  store i64 %1225, i64* %7, align 8
  %1226 = ptrtoint %struct.Command* %1223 to i64
  %1227 = ptrtoint %struct.Command* %8 to i64
  %1228 = sub i64 %1226, %1227
  %1229 = ashr exact i64 %1228, 4
  %1230 = load i64, i64* %9, align 8
  %1231 = add i64 %1230, %1229
  store i64 %1231, i64* %9, align 8
  ret void

1232:                                             ; preds = %145
  %1233 = getelementptr inbounds i8, i8* %139, i64 1
  %1234 = getelementptr inbounds i8, i8* %116, i64 %146
  %1235 = load i8, i8* %1234, align 1, !alias.scope !386, !noalias !382
  %1236 = load i8, i8* %1233, align 1, !alias.scope !386, !noalias !382
  %1237 = icmp eq i8 %1235, %1236
  br i1 %1237, label %1238, label %147, !prof !15

1238:                                             ; preds = %1232
  %1239 = add i64 %138, 2
  br i1 %88, label %147, label %1240

1240:                                             ; preds = %1238
  %1241 = getelementptr inbounds i8, i8* %139, i64 2
  %1242 = getelementptr inbounds i8, i8* %116, i64 %1239
  %1243 = load i8, i8* %1242, align 1, !alias.scope !386, !noalias !382
  %1244 = load i8, i8* %1241, align 1, !alias.scope !386, !noalias !382
  %1245 = icmp eq i8 %1243, %1244
  br i1 %1245, label %1246, label %147, !prof !15

1246:                                             ; preds = %1240
  %1247 = add i64 %138, 3
  br i1 %89, label %147, label %1248

1248:                                             ; preds = %1246
  %1249 = getelementptr inbounds i8, i8* %139, i64 3
  %1250 = getelementptr inbounds i8, i8* %116, i64 %1247
  %1251 = load i8, i8* %1250, align 1, !alias.scope !386, !noalias !382
  %1252 = load i8, i8* %1249, align 1, !alias.scope !386, !noalias !382
  %1253 = icmp eq i8 %1251, %1252
  br i1 %1253, label %1254, label %147, !prof !15

1254:                                             ; preds = %1248
  %1255 = add i64 %138, 4
  br i1 %90, label %147, label %1256

1256:                                             ; preds = %1254
  %1257 = getelementptr inbounds i8, i8* %139, i64 4
  %1258 = getelementptr inbounds i8, i8* %116, i64 %1255
  %1259 = load i8, i8* %1258, align 1, !alias.scope !386, !noalias !382
  %1260 = load i8, i8* %1257, align 1, !alias.scope !386, !noalias !382
  %1261 = icmp eq i8 %1259, %1260
  br i1 %1261, label %1262, label %147, !prof !15

1262:                                             ; preds = %1256
  %1263 = add i64 %138, 5
  br i1 %91, label %147, label %1264

1264:                                             ; preds = %1262
  %1265 = getelementptr inbounds i8, i8* %139, i64 5
  %1266 = getelementptr inbounds i8, i8* %116, i64 %1263
  %1267 = load i8, i8* %1266, align 1, !alias.scope !386, !noalias !382
  %1268 = load i8, i8* %1265, align 1, !alias.scope !386, !noalias !382
  %1269 = icmp eq i8 %1267, %1268
  br i1 %1269, label %1270, label %147, !prof !15

1270:                                             ; preds = %1264
  %1271 = add i64 %138, 6
  br i1 %92, label %147, label %1272

1272:                                             ; preds = %1270
  %1273 = getelementptr inbounds i8, i8* %139, i64 6
  %1274 = getelementptr inbounds i8, i8* %116, i64 %1271
  %1275 = load i8, i8* %1274, align 1, !alias.scope !386, !noalias !382
  %1276 = load i8, i8* %1273, align 1, !alias.scope !386, !noalias !382
  %1277 = icmp eq i8 %1275, %1276
  %1278 = add i64 %138, 7
  %1279 = select i1 %1277, i64 %1278, i64 %1271, !prof !15
  br label %147

1280:                                             ; preds = %265
  %1281 = getelementptr inbounds i8, i8* %259, i64 1
  %1282 = getelementptr inbounds i8, i8* %236, i64 %266
  %1283 = load i8, i8* %1282, align 1, !alias.scope !386, !noalias !382
  %1284 = load i8, i8* %1281, align 1, !alias.scope !386, !noalias !382
  %1285 = icmp eq i8 %1283, %1284
  br i1 %1285, label %1286, label %267, !prof !15

1286:                                             ; preds = %1280
  %1287 = add i64 %258, 2
  br i1 %197, label %267, label %1288

1288:                                             ; preds = %1286
  %1289 = getelementptr inbounds i8, i8* %259, i64 2
  %1290 = getelementptr inbounds i8, i8* %236, i64 %1287
  %1291 = load i8, i8* %1290, align 1, !alias.scope !386, !noalias !382
  %1292 = load i8, i8* %1289, align 1, !alias.scope !386, !noalias !382
  %1293 = icmp eq i8 %1291, %1292
  br i1 %1293, label %1294, label %267, !prof !15

1294:                                             ; preds = %1288
  %1295 = add i64 %258, 3
  br i1 %198, label %267, label %1296

1296:                                             ; preds = %1294
  %1297 = getelementptr inbounds i8, i8* %259, i64 3
  %1298 = getelementptr inbounds i8, i8* %236, i64 %1295
  %1299 = load i8, i8* %1298, align 1, !alias.scope !386, !noalias !382
  %1300 = load i8, i8* %1297, align 1, !alias.scope !386, !noalias !382
  %1301 = icmp eq i8 %1299, %1300
  br i1 %1301, label %1302, label %267, !prof !15

1302:                                             ; preds = %1296
  %1303 = add i64 %258, 4
  br i1 %199, label %267, label %1304

1304:                                             ; preds = %1302
  %1305 = getelementptr inbounds i8, i8* %259, i64 4
  %1306 = getelementptr inbounds i8, i8* %236, i64 %1303
  %1307 = load i8, i8* %1306, align 1, !alias.scope !386, !noalias !382
  %1308 = load i8, i8* %1305, align 1, !alias.scope !386, !noalias !382
  %1309 = icmp eq i8 %1307, %1308
  br i1 %1309, label %1310, label %267, !prof !15

1310:                                             ; preds = %1304
  %1311 = add i64 %258, 5
  br i1 %200, label %267, label %1312

1312:                                             ; preds = %1310
  %1313 = getelementptr inbounds i8, i8* %259, i64 5
  %1314 = getelementptr inbounds i8, i8* %236, i64 %1311
  %1315 = load i8, i8* %1314, align 1, !alias.scope !386, !noalias !382
  %1316 = load i8, i8* %1313, align 1, !alias.scope !386, !noalias !382
  %1317 = icmp eq i8 %1315, %1316
  br i1 %1317, label %1318, label %267, !prof !15

1318:                                             ; preds = %1312
  %1319 = add i64 %258, 6
  br i1 %201, label %267, label %1320

1320:                                             ; preds = %1318
  %1321 = getelementptr inbounds i8, i8* %259, i64 6
  %1322 = getelementptr inbounds i8, i8* %236, i64 %1319
  %1323 = load i8, i8* %1322, align 1, !alias.scope !386, !noalias !382
  %1324 = load i8, i8* %1321, align 1, !alias.scope !386, !noalias !382
  %1325 = icmp eq i8 %1323, %1324
  %1326 = add i64 %258, 7
  %1327 = select i1 %1325, i64 %1326, i64 %1319, !prof !15
  br label %267

1328:                                             ; preds = %387
  %1329 = getelementptr inbounds i8, i8* %379, i64 1
  %1330 = getelementptr inbounds i8, i8* %77, i64 %388
  %1331 = load i8, i8* %1330, align 1, !alias.scope !386, !noalias !382
  %1332 = load i8, i8* %1329, align 1, !noalias !385
  %1333 = icmp eq i8 %1331, %1332
  br i1 %1333, label %1334, label %390, !prof !15

1334:                                             ; preds = %1328
  %1335 = add nuw nsw i64 %378, 2
  %1336 = icmp eq i64 %380, 2
  br i1 %1336, label %390, label %1337

1337:                                             ; preds = %1334
  %1338 = getelementptr inbounds i8, i8* %379, i64 2
  %1339 = getelementptr inbounds i8, i8* %77, i64 %1335
  %1340 = load i8, i8* %1339, align 1, !alias.scope !386, !noalias !382
  %1341 = load i8, i8* %1338, align 1, !noalias !385
  %1342 = icmp eq i8 %1340, %1341
  br i1 %1342, label %1343, label %390, !prof !15

1343:                                             ; preds = %1337
  %1344 = add nuw nsw i64 %378, 3
  %1345 = icmp eq i64 %380, 3
  br i1 %1345, label %390, label %1346

1346:                                             ; preds = %1343
  %1347 = getelementptr inbounds i8, i8* %379, i64 3
  %1348 = getelementptr inbounds i8, i8* %77, i64 %1344
  %1349 = load i8, i8* %1348, align 1, !alias.scope !386, !noalias !382
  %1350 = load i8, i8* %1347, align 1, !noalias !385
  %1351 = icmp eq i8 %1349, %1350
  br i1 %1351, label %1352, label %390, !prof !15

1352:                                             ; preds = %1346
  %1353 = add nuw nsw i64 %378, 4
  %1354 = icmp eq i64 %380, 4
  br i1 %1354, label %390, label %1355

1355:                                             ; preds = %1352
  %1356 = getelementptr inbounds i8, i8* %379, i64 4
  %1357 = getelementptr inbounds i8, i8* %77, i64 %1353
  %1358 = load i8, i8* %1357, align 1, !alias.scope !386, !noalias !382
  %1359 = load i8, i8* %1356, align 1, !noalias !385
  %1360 = icmp eq i8 %1358, %1359
  br i1 %1360, label %1361, label %390, !prof !15

1361:                                             ; preds = %1355
  %1362 = add nuw nsw i64 %378, 5
  %1363 = icmp eq i64 %380, 5
  br i1 %1363, label %390, label %1364

1364:                                             ; preds = %1361
  %1365 = getelementptr inbounds i8, i8* %379, i64 5
  %1366 = getelementptr inbounds i8, i8* %77, i64 %1362
  %1367 = load i8, i8* %1366, align 1, !alias.scope !386, !noalias !382
  %1368 = load i8, i8* %1365, align 1, !noalias !385
  %1369 = icmp eq i8 %1367, %1368
  br i1 %1369, label %1370, label %390, !prof !15

1370:                                             ; preds = %1364
  %1371 = add nuw nsw i64 %378, 6
  %1372 = icmp eq i64 %380, 6
  br i1 %1372, label %390, label %1373

1373:                                             ; preds = %1370
  %1374 = getelementptr inbounds i8, i8* %379, i64 6
  %1375 = getelementptr inbounds i8, i8* %77, i64 %1371
  %1376 = load i8, i8* %1375, align 1, !alias.scope !386, !noalias !382
  %1377 = load i8, i8* %1374, align 1, !noalias !385
  %1378 = icmp eq i8 %1376, %1377
  %1379 = add nuw nsw i64 %378, 7
  %1380 = select i1 %1378, i64 %1379, i64 %1371, !prof !15
  br label %390

1381:                                             ; preds = %539
  %1382 = getelementptr inbounds i8, i8* %533, i64 1
  %1383 = getelementptr inbounds i8, i8* %510, i64 %540
  %1384 = load i8, i8* %1383, align 1, !alias.scope !407, !noalias !403
  %1385 = load i8, i8* %1382, align 1, !alias.scope !407, !noalias !403
  %1386 = icmp eq i8 %1384, %1385
  br i1 %1386, label %1387, label %541, !prof !15

1387:                                             ; preds = %1381
  %1388 = add i64 %532, 2
  br i1 %482, label %541, label %1389

1389:                                             ; preds = %1387
  %1390 = getelementptr inbounds i8, i8* %533, i64 2
  %1391 = getelementptr inbounds i8, i8* %510, i64 %1388
  %1392 = load i8, i8* %1391, align 1, !alias.scope !407, !noalias !403
  %1393 = load i8, i8* %1390, align 1, !alias.scope !407, !noalias !403
  %1394 = icmp eq i8 %1392, %1393
  br i1 %1394, label %1395, label %541, !prof !15

1395:                                             ; preds = %1389
  %1396 = add i64 %532, 3
  br i1 %483, label %541, label %1397

1397:                                             ; preds = %1395
  %1398 = getelementptr inbounds i8, i8* %533, i64 3
  %1399 = getelementptr inbounds i8, i8* %510, i64 %1396
  %1400 = load i8, i8* %1399, align 1, !alias.scope !407, !noalias !403
  %1401 = load i8, i8* %1398, align 1, !alias.scope !407, !noalias !403
  %1402 = icmp eq i8 %1400, %1401
  br i1 %1402, label %1403, label %541, !prof !15

1403:                                             ; preds = %1397
  %1404 = add i64 %532, 4
  br i1 %484, label %541, label %1405

1405:                                             ; preds = %1403
  %1406 = getelementptr inbounds i8, i8* %533, i64 4
  %1407 = getelementptr inbounds i8, i8* %510, i64 %1404
  %1408 = load i8, i8* %1407, align 1, !alias.scope !407, !noalias !403
  %1409 = load i8, i8* %1406, align 1, !alias.scope !407, !noalias !403
  %1410 = icmp eq i8 %1408, %1409
  br i1 %1410, label %1411, label %541, !prof !15

1411:                                             ; preds = %1405
  %1412 = add i64 %532, 5
  br i1 %485, label %541, label %1413

1413:                                             ; preds = %1411
  %1414 = getelementptr inbounds i8, i8* %533, i64 5
  %1415 = getelementptr inbounds i8, i8* %510, i64 %1412
  %1416 = load i8, i8* %1415, align 1, !alias.scope !407, !noalias !403
  %1417 = load i8, i8* %1414, align 1, !alias.scope !407, !noalias !403
  %1418 = icmp eq i8 %1416, %1417
  br i1 %1418, label %1419, label %541, !prof !15

1419:                                             ; preds = %1413
  %1420 = add i64 %532, 6
  br i1 %486, label %541, label %1421

1421:                                             ; preds = %1419
  %1422 = getelementptr inbounds i8, i8* %533, i64 6
  %1423 = getelementptr inbounds i8, i8* %510, i64 %1420
  %1424 = load i8, i8* %1423, align 1, !alias.scope !407, !noalias !403
  %1425 = load i8, i8* %1422, align 1, !alias.scope !407, !noalias !403
  %1426 = icmp eq i8 %1424, %1425
  %1427 = add i64 %532, 7
  %1428 = select i1 %1426, i64 %1427, i64 %1420, !prof !15
  br label %541

1429:                                             ; preds = %659
  %1430 = getelementptr inbounds i8, i8* %653, i64 1
  %1431 = getelementptr inbounds i8, i8* %630, i64 %660
  %1432 = load i8, i8* %1431, align 1, !alias.scope !407, !noalias !403
  %1433 = load i8, i8* %1430, align 1, !alias.scope !407, !noalias !403
  %1434 = icmp eq i8 %1432, %1433
  br i1 %1434, label %1435, label %661, !prof !15

1435:                                             ; preds = %1429
  %1436 = add i64 %652, 2
  br i1 %591, label %661, label %1437

1437:                                             ; preds = %1435
  %1438 = getelementptr inbounds i8, i8* %653, i64 2
  %1439 = getelementptr inbounds i8, i8* %630, i64 %1436
  %1440 = load i8, i8* %1439, align 1, !alias.scope !407, !noalias !403
  %1441 = load i8, i8* %1438, align 1, !alias.scope !407, !noalias !403
  %1442 = icmp eq i8 %1440, %1441
  br i1 %1442, label %1443, label %661, !prof !15

1443:                                             ; preds = %1437
  %1444 = add i64 %652, 3
  br i1 %592, label %661, label %1445

1445:                                             ; preds = %1443
  %1446 = getelementptr inbounds i8, i8* %653, i64 3
  %1447 = getelementptr inbounds i8, i8* %630, i64 %1444
  %1448 = load i8, i8* %1447, align 1, !alias.scope !407, !noalias !403
  %1449 = load i8, i8* %1446, align 1, !alias.scope !407, !noalias !403
  %1450 = icmp eq i8 %1448, %1449
  br i1 %1450, label %1451, label %661, !prof !15

1451:                                             ; preds = %1445
  %1452 = add i64 %652, 4
  br i1 %593, label %661, label %1453

1453:                                             ; preds = %1451
  %1454 = getelementptr inbounds i8, i8* %653, i64 4
  %1455 = getelementptr inbounds i8, i8* %630, i64 %1452
  %1456 = load i8, i8* %1455, align 1, !alias.scope !407, !noalias !403
  %1457 = load i8, i8* %1454, align 1, !alias.scope !407, !noalias !403
  %1458 = icmp eq i8 %1456, %1457
  br i1 %1458, label %1459, label %661, !prof !15

1459:                                             ; preds = %1453
  %1460 = add i64 %652, 5
  br i1 %594, label %661, label %1461

1461:                                             ; preds = %1459
  %1462 = getelementptr inbounds i8, i8* %653, i64 5
  %1463 = getelementptr inbounds i8, i8* %630, i64 %1460
  %1464 = load i8, i8* %1463, align 1, !alias.scope !407, !noalias !403
  %1465 = load i8, i8* %1462, align 1, !alias.scope !407, !noalias !403
  %1466 = icmp eq i8 %1464, %1465
  br i1 %1466, label %1467, label %661, !prof !15

1467:                                             ; preds = %1461
  %1468 = add i64 %652, 6
  br i1 %595, label %661, label %1469

1469:                                             ; preds = %1467
  %1470 = getelementptr inbounds i8, i8* %653, i64 6
  %1471 = getelementptr inbounds i8, i8* %630, i64 %1468
  %1472 = load i8, i8* %1471, align 1, !alias.scope !407, !noalias !403
  %1473 = load i8, i8* %1470, align 1, !alias.scope !407, !noalias !403
  %1474 = icmp eq i8 %1472, %1473
  %1475 = add i64 %652, 7
  %1476 = select i1 %1474, i64 %1475, i64 %1468, !prof !15
  br label %661

1477:                                             ; preds = %781
  %1478 = getelementptr inbounds i8, i8* %773, i64 1
  %1479 = getelementptr inbounds i8, i8* %471, i64 %782
  %1480 = load i8, i8* %1479, align 1, !alias.scope !407, !noalias !403
  %1481 = load i8, i8* %1478, align 1, !noalias !406
  %1482 = icmp eq i8 %1480, %1481
  br i1 %1482, label %1483, label %784, !prof !15

1483:                                             ; preds = %1477
  %1484 = add nuw nsw i64 %772, 2
  %1485 = icmp eq i64 %774, 2
  br i1 %1485, label %784, label %1486

1486:                                             ; preds = %1483
  %1487 = getelementptr inbounds i8, i8* %773, i64 2
  %1488 = getelementptr inbounds i8, i8* %471, i64 %1484
  %1489 = load i8, i8* %1488, align 1, !alias.scope !407, !noalias !403
  %1490 = load i8, i8* %1487, align 1, !noalias !406
  %1491 = icmp eq i8 %1489, %1490
  br i1 %1491, label %1492, label %784, !prof !15

1492:                                             ; preds = %1486
  %1493 = add nuw nsw i64 %772, 3
  %1494 = icmp eq i64 %774, 3
  br i1 %1494, label %784, label %1495

1495:                                             ; preds = %1492
  %1496 = getelementptr inbounds i8, i8* %773, i64 3
  %1497 = getelementptr inbounds i8, i8* %471, i64 %1493
  %1498 = load i8, i8* %1497, align 1, !alias.scope !407, !noalias !403
  %1499 = load i8, i8* %1496, align 1, !noalias !406
  %1500 = icmp eq i8 %1498, %1499
  br i1 %1500, label %1501, label %784, !prof !15

1501:                                             ; preds = %1495
  %1502 = add nuw nsw i64 %772, 4
  %1503 = icmp eq i64 %774, 4
  br i1 %1503, label %784, label %1504

1504:                                             ; preds = %1501
  %1505 = getelementptr inbounds i8, i8* %773, i64 4
  %1506 = getelementptr inbounds i8, i8* %471, i64 %1502
  %1507 = load i8, i8* %1506, align 1, !alias.scope !407, !noalias !403
  %1508 = load i8, i8* %1505, align 1, !noalias !406
  %1509 = icmp eq i8 %1507, %1508
  br i1 %1509, label %1510, label %784, !prof !15

1510:                                             ; preds = %1504
  %1511 = add nuw nsw i64 %772, 5
  %1512 = icmp eq i64 %774, 5
  br i1 %1512, label %784, label %1513

1513:                                             ; preds = %1510
  %1514 = getelementptr inbounds i8, i8* %773, i64 5
  %1515 = getelementptr inbounds i8, i8* %471, i64 %1511
  %1516 = load i8, i8* %1515, align 1, !alias.scope !407, !noalias !403
  %1517 = load i8, i8* %1514, align 1, !noalias !406
  %1518 = icmp eq i8 %1516, %1517
  br i1 %1518, label %1519, label %784, !prof !15

1519:                                             ; preds = %1513
  %1520 = add nuw nsw i64 %772, 6
  %1521 = icmp eq i64 %774, 6
  br i1 %1521, label %784, label %1522

1522:                                             ; preds = %1519
  %1523 = getelementptr inbounds i8, i8* %773, i64 6
  %1524 = getelementptr inbounds i8, i8* %471, i64 %1520
  %1525 = load i8, i8* %1524, align 1, !alias.scope !407, !noalias !403
  %1526 = load i8, i8* %1523, align 1, !noalias !406
  %1527 = icmp eq i8 %1525, %1526
  %1528 = add nuw nsw i64 %772, 7
  %1529 = select i1 %1527, i64 %1528, i64 %1520, !prof !15
  br label %784
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH42(i64, i64, i8* nocapture readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* nocapture, i32*, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = add i64 %15, -16
  %17 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* %7, align 8
  %20 = add i64 %1, %0
  %21 = icmp ugt i64 %0, 3
  %22 = add i64 %20, -3
  %23 = select i1 %21, i64 %22, i64 %1
  %24 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 9
  %27 = select i1 %26, i64 64, i64 512
  %28 = getelementptr inbounds i32, i32* %6, i64 4
  %29 = getelementptr inbounds i32, i32* %6, i64 1
  %30 = bitcast i32* %6 to <2 x i32>*
  %31 = load <2 x i32>, <2 x i32>* %30, align 4, !alias.scope !449
  %32 = shufflevector <2 x i32> %31, <2 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %33 = shufflevector <2 x i32> %31, <2 x i32> undef, <4 x i32> zeroinitializer
  %34 = add nsw <4 x i32> %33, <i32 -1, i32 1, i32 -2, i32 2>
  %35 = bitcast i32* %28 to <4 x i32>*
  store <4 x i32> %34, <4 x i32>* %35, align 4, !alias.scope !449
  %36 = getelementptr inbounds i32, i32* %6, i64 8
  %37 = add nsw <4 x i32> %32, <i32 -3, i32 3, i32 -1, i32 1>
  %38 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> %37, <4 x i32>* %38, align 4, !alias.scope !449
  %39 = getelementptr inbounds i32, i32* %6, i64 12
  %40 = shufflevector <2 x i32> %31, <2 x i32> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %41 = add nsw <4 x i32> %40, <i32 -2, i32 2, i32 -3, i32 3>
  %42 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> %41, <4 x i32>* %42, align 4, !alias.scope !449
  %43 = add i64 %1, 4
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %45, label %1234

45:                                               ; preds = %11
  %46 = add i64 %27, %1
  %47 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 4
  %48 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 2
  %49 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 1
  %50 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 3
  %51 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 5
  %52 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 4
  %53 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 0
  %54 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 2
  %55 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 3
  %56 = shl nuw nsw i64 %27, 2
  %57 = add i64 %20, -4
  %58 = getelementptr inbounds i32, i32* %6, i64 2
  %59 = getelementptr inbounds i32, i32* %6, i64 3
  %60 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %61 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  %62 = bitcast i32* %28 to <4 x i32>*
  %63 = bitcast i32* %36 to <4 x i32>*
  %64 = bitcast i32* %39 to <4 x i32>*
  br label %65

65:                                               ; preds = %45, %1226
  %66 = phi i64 [ %0, %45 ], [ %1233, %1226 ]
  %67 = phi i64 [ %1, %45 ], [ %1230, %1226 ]
  %68 = phi %struct.Command* [ %8, %45 ], [ %1229, %1226 ]
  %69 = phi i64 [ %46, %45 ], [ %1228, %1226 ]
  %70 = phi i64 [ %19, %45 ], [ %1227, %1226 ]
  %71 = icmp ult i64 %67, %16
  %72 = select i1 %71, i64 %67, i64 %16
  %73 = add i64 %67, %18
  %74 = icmp ult i64 %73, %16
  %75 = load i64, i64* %47, align 8
  %76 = load i8*, i8** %48, align 8, !alias.scope !454, !noalias !457
  %77 = getelementptr inbounds i8, i8* %76, i64 196608
  %78 = and i64 %67, %3
  %79 = getelementptr inbounds i8, i8* %2, i64 %78
  %80 = bitcast i8* %79 to i32*
  %81 = load i32, i32* %80, align 4, !alias.scope !461, !noalias !464
  %82 = mul i32 %81, 506832829
  %83 = lshr i32 %82, 17
  %84 = trunc i32 %83 to i8
  %85 = lshr i64 %66, 3
  %86 = icmp eq i64 %85, 0
  %87 = and i64 %66, 7
  %88 = icmp eq i64 %87, 0
  %89 = icmp eq i64 %87, 1
  %90 = icmp eq i64 %87, 2
  %91 = icmp eq i64 %87, 3
  %92 = icmp eq i64 %87, 4
  %93 = icmp eq i64 %87, 5
  %94 = icmp eq i64 %87, 6
  br label %95

95:                                               ; preds = %173, %65
  %96 = phi i64 [ 2020, %65 ], [ %174, %173 ]
  %97 = phi i64 [ 0, %65 ], [ %175, %173 ]
  %98 = phi i64 [ 0, %65 ], [ %176, %173 ]
  %99 = phi i64 [ 0, %65 ], [ %179, %173 ]
  %100 = phi i64 [ 0, %65 ], [ %178, %173 ]
  %101 = phi i64 [ 2020, %65 ], [ %177, %173 ]
  %102 = getelementptr inbounds i32, i32* %6, i64 %99
  %103 = load i32, i32* %102, align 4, !alias.scope !465, !noalias !466
  %104 = sext i32 %103 to i64
  %105 = sub i64 %67, %104
  %106 = icmp eq i64 %99, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %95
  %108 = and i64 %105, 65535
  %109 = getelementptr inbounds i8, i8* %77, i64 %108
  %110 = load i8, i8* %109, align 1, !noalias !467
  %111 = icmp eq i8 %110, %84
  br i1 %111, label %112, label %173

112:                                              ; preds = %107, %95
  %113 = icmp uge i64 %105, %67
  %114 = icmp ult i64 %72, %104
  %115 = or i1 %114, %113
  br i1 %115, label %173, label %116

116:                                              ; preds = %112
  %117 = and i64 %105, %3
  %118 = getelementptr inbounds i8, i8* %2, i64 %117
  br i1 %86, label %139, label %119, !prof !13

119:                                              ; preds = %116, %129
  %120 = phi i64 [ %132, %129 ], [ %85, %116 ]
  %121 = phi i8* [ %130, %129 ], [ %79, %116 ]
  %122 = phi i64 [ %131, %129 ], [ 0, %116 ]
  %123 = bitcast i8* %121 to i64*
  %124 = load i64, i64* %123, align 8, !alias.scope !468, !noalias !464
  %125 = getelementptr inbounds i8, i8* %118, i64 %122
  %126 = bitcast i8* %125 to i64*
  %127 = load i64, i64* %126, align 8, !alias.scope !468, !noalias !464
  %128 = icmp eq i64 %124, %127
  br i1 %128, label %129, label %134, !prof !13

129:                                              ; preds = %119
  %130 = getelementptr inbounds i8, i8* %121, i64 8
  %131 = add nuw i64 %122, 8
  %132 = add nsw i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %139, label %119, !prof !13

134:                                              ; preds = %119
  %135 = xor i64 %127, %124
  %136 = tail call i64 @llvm.cttz.i64(i64 %135, i1 true) #4, !range !14
  %137 = lshr i64 %136, 3
  %138 = or i64 %137, %122
  br label %149

139:                                              ; preds = %129, %116
  %140 = phi i64 [ 0, %116 ], [ %131, %129 ]
  %141 = phi i8* [ %79, %116 ], [ %130, %129 ]
  br i1 %88, label %149, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds i8, i8* %118, i64 %140
  %144 = load i8, i8* %143, align 1, !alias.scope !468, !noalias !464
  %145 = load i8, i8* %141, align 1, !alias.scope !468, !noalias !464
  %146 = icmp eq i8 %144, %145
  br i1 %146, label %147, label %149, !prof !15

147:                                              ; preds = %142
  %148 = add i64 %140, 1
  br i1 %89, label %149, label %1245

149:                                              ; preds = %1285, %147, %142, %1245, %1251, %1253, %1259, %1261, %1267, %1269, %1275, %1277, %1283, %139, %134
  %150 = phi i64 [ %138, %134 ], [ %140, %139 ], [ %140, %142 ], [ %148, %147 ], [ %148, %1245 ], [ %1252, %1251 ], [ %1252, %1253 ], [ %1260, %1259 ], [ %1260, %1261 ], [ %1268, %1267 ], [ %1268, %1269 ], [ %1276, %1275 ], [ %1276, %1277 ], [ %1284, %1283 ], [ %1292, %1285 ]
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %152, label %173

152:                                              ; preds = %149
  %153 = mul i64 %150, 135
  %154 = add i64 %153, 1935
  %155 = icmp ult i64 %101, %154
  br i1 %155, label %156, label %173

156:                                              ; preds = %152
  br i1 %106, label %165, label %157

157:                                              ; preds = %156
  %158 = trunc i64 %99 to i32
  %159 = and i32 %158, 14
  %160 = lshr i32 117264, %159
  %161 = and i32 %160, 14
  %162 = add nuw nsw i32 %161, 39
  %163 = zext i32 %162 to i64
  %164 = sub i64 %154, %163
  br label %165

165:                                              ; preds = %157, %156
  %166 = phi i64 [ %164, %157 ], [ %154, %156 ]
  %167 = icmp ult i64 %101, %166
  %168 = select i1 %167, i64 %166, i64 %96
  %169 = select i1 %167, i64 %104, i64 %97
  %170 = select i1 %167, i64 %150, i64 %98
  %171 = select i1 %167, i64 %166, i64 %101
  %172 = select i1 %167, i64 %150, i64 %100
  br label %173

173:                                              ; preds = %165, %152, %149, %112, %107
  %174 = phi i64 [ %96, %112 ], [ %96, %152 ], [ %96, %149 ], [ %96, %107 ], [ %168, %165 ]
  %175 = phi i64 [ %97, %112 ], [ %97, %152 ], [ %97, %149 ], [ %97, %107 ], [ %169, %165 ]
  %176 = phi i64 [ %98, %112 ], [ %98, %152 ], [ %98, %149 ], [ %98, %107 ], [ %170, %165 ]
  %177 = phi i64 [ %101, %112 ], [ %101, %152 ], [ %101, %149 ], [ %101, %107 ], [ %171, %165 ]
  %178 = phi i64 [ %100, %112 ], [ %100, %152 ], [ %100, %149 ], [ %100, %107 ], [ %172, %165 ]
  %179 = add nuw nsw i64 %99, 1
  %180 = icmp eq i64 %179, 16
  br i1 %180, label %181, label %95

181:                                              ; preds = %173
  %182 = select i1 %74, i64 %73, i64 %16
  %183 = getelementptr inbounds i8, i8* %76, i64 131072
  %184 = getelementptr inbounds i8, i8* %76, i64 262144
  %185 = bitcast i8* %76 to i32*
  %186 = bitcast i8* %183 to i16*
  %187 = bitcast i8* %184 to %struct.BankH42*
  %188 = zext i32 %83 to i64
  %189 = and i64 %188, 511
  %190 = load i64, i64* %49, align 8, !alias.scope !454, !noalias !457
  %191 = getelementptr inbounds i32, i32* %185, i64 %188
  %192 = load i32, i32* %191, align 4, !noalias !467
  %193 = zext i32 %192 to i64
  %194 = sub i64 %67, %193
  %195 = getelementptr inbounds i16, i16* %186, i64 %188
  %196 = icmp eq i64 %190, 0
  br i1 %196, label %295, label %197

197:                                              ; preds = %181
  %198 = load i16, i16* %195, align 2, !noalias !467
  %199 = icmp eq i64 %87, 1
  %200 = icmp eq i64 %87, 2
  %201 = icmp eq i64 %87, 3
  %202 = icmp eq i64 %87, 4
  %203 = icmp eq i64 %87, 5
  %204 = icmp eq i64 %87, 6
  br label %205

205:                                              ; preds = %288, %197
  %206 = phi i64 [ %174, %197 ], [ %289, %288 ]
  %207 = phi i64 [ %175, %197 ], [ %290, %288 ]
  %208 = phi i64 [ %176, %197 ], [ %291, %288 ]
  %209 = phi i64 [ %190, %197 ], [ %216, %288 ]
  %210 = phi i16 [ %198, %197 ], [ %223, %288 ]
  %211 = phi i64 [ %194, %197 ], [ %226, %288 ]
  %212 = phi i64 [ 0, %197 ], [ %217, %288 ]
  %213 = phi i64 [ %178, %197 ], [ %293, %288 ]
  %214 = phi i64 [ %177, %197 ], [ %292, %288 ]
  %215 = zext i16 %210 to i64
  %216 = add i64 %209, -1
  %217 = add i64 %212, %211
  %218 = icmp ugt i64 %217, %72
  br i1 %218, label %295, label %219

219:                                              ; preds = %205
  %220 = sub i64 %67, %217
  %221 = and i64 %220, %3
  %222 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %187, i64 %189, i32 0, i64 %215, i32 1
  %223 = load i16, i16* %222, align 2, !noalias !467
  %224 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %187, i64 %189, i32 0, i64 %215, i32 0
  %225 = load i16, i16* %224, align 2, !noalias !467
  %226 = zext i16 %225 to i64
  %227 = add i64 %213, %78
  %228 = icmp ugt i64 %227, %3
  br i1 %228, label %288, label %229

229:                                              ; preds = %219
  %230 = add i64 %221, %213
  %231 = icmp ugt i64 %230, %3
  br i1 %231, label %288, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds i8, i8* %2, i64 %227
  %234 = load i8, i8* %233, align 1, !alias.scope !468, !noalias !464
  %235 = getelementptr inbounds i8, i8* %2, i64 %230
  %236 = load i8, i8* %235, align 1, !alias.scope !468, !noalias !464
  %237 = icmp eq i8 %234, %236
  br i1 %237, label %238, label %288

238:                                              ; preds = %232
  %239 = getelementptr inbounds i8, i8* %2, i64 %221
  br i1 %86, label %260, label %240, !prof !13

240:                                              ; preds = %238, %250
  %241 = phi i64 [ %253, %250 ], [ %85, %238 ]
  %242 = phi i8* [ %251, %250 ], [ %79, %238 ]
  %243 = phi i64 [ %252, %250 ], [ 0, %238 ]
  %244 = bitcast i8* %242 to i64*
  %245 = load i64, i64* %244, align 8, !alias.scope !468, !noalias !464
  %246 = getelementptr inbounds i8, i8* %239, i64 %243
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 8, !alias.scope !468, !noalias !464
  %249 = icmp eq i64 %245, %248
  br i1 %249, label %250, label %255, !prof !13

250:                                              ; preds = %240
  %251 = getelementptr inbounds i8, i8* %242, i64 8
  %252 = add nuw i64 %243, 8
  %253 = add nsw i64 %241, -1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %260, label %240, !prof !13

255:                                              ; preds = %240
  %256 = xor i64 %248, %245
  %257 = tail call i64 @llvm.cttz.i64(i64 %256, i1 true) #4, !range !14
  %258 = lshr i64 %257, 3
  %259 = or i64 %258, %243
  br label %270

260:                                              ; preds = %250, %238
  %261 = phi i64 [ 0, %238 ], [ %252, %250 ]
  %262 = phi i8* [ %79, %238 ], [ %251, %250 ]
  br i1 %88, label %270, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds i8, i8* %239, i64 %261
  %265 = load i8, i8* %264, align 1, !alias.scope !468, !noalias !464
  %266 = load i8, i8* %262, align 1, !alias.scope !468, !noalias !464
  %267 = icmp eq i8 %265, %266
  br i1 %267, label %268, label %270, !prof !15

268:                                              ; preds = %263
  %269 = add i64 %261, 1
  br i1 %199, label %270, label %1293

270:                                              ; preds = %1333, %268, %263, %1293, %1299, %1301, %1307, %1309, %1315, %1317, %1323, %1325, %1331, %260, %255
  %271 = phi i64 [ %259, %255 ], [ %261, %260 ], [ %261, %263 ], [ %269, %268 ], [ %269, %1293 ], [ %1300, %1299 ], [ %1300, %1301 ], [ %1308, %1307 ], [ %1308, %1309 ], [ %1316, %1315 ], [ %1316, %1317 ], [ %1324, %1323 ], [ %1324, %1325 ], [ %1332, %1331 ], [ %1340, %1333 ]
  %272 = icmp ugt i64 %271, 3
  br i1 %272, label %273, label %288

273:                                              ; preds = %270
  %274 = mul i64 %271, 135
  %275 = trunc i64 %217 to i32
  %276 = tail call i32 @llvm.ctlz.i32(i32 %275, i1 true) #4, !range !18
  %277 = xor i32 %276, 31
  %278 = mul nsw i32 %277, -30
  %279 = add nsw i32 %278, 1920
  %280 = zext i32 %279 to i64
  %281 = add i64 %274, %280
  %282 = icmp ult i64 %214, %281
  %283 = select i1 %282, i64 %281, i64 %206
  %284 = select i1 %282, i64 %217, i64 %207
  %285 = select i1 %282, i64 %271, i64 %208
  %286 = select i1 %282, i64 %281, i64 %214
  %287 = select i1 %282, i64 %271, i64 %213
  br label %288

288:                                              ; preds = %273, %270, %232, %229, %219
  %289 = phi i64 [ %206, %219 ], [ %206, %229 ], [ %206, %270 ], [ %206, %232 ], [ %283, %273 ]
  %290 = phi i64 [ %207, %219 ], [ %207, %229 ], [ %207, %270 ], [ %207, %232 ], [ %284, %273 ]
  %291 = phi i64 [ %208, %219 ], [ %208, %229 ], [ %208, %270 ], [ %208, %232 ], [ %285, %273 ]
  %292 = phi i64 [ %214, %219 ], [ %214, %229 ], [ %214, %270 ], [ %214, %232 ], [ %286, %273 ]
  %293 = phi i64 [ %213, %219 ], [ %213, %229 ], [ %213, %270 ], [ %213, %232 ], [ %287, %273 ]
  %294 = icmp eq i64 %216, 0
  br i1 %294, label %295, label %205

295:                                              ; preds = %288, %205, %181
  %296 = phi i64 [ %174, %181 ], [ %289, %288 ], [ %206, %205 ]
  %297 = phi i64 [ %175, %181 ], [ %290, %288 ], [ %207, %205 ]
  %298 = phi i64 [ %176, %181 ], [ %291, %288 ], [ %208, %205 ]
  %299 = phi i64 [ %177, %181 ], [ %292, %288 ], [ %214, %205 ]
  %300 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 %189
  %301 = load i16, i16* %300, align 2, !alias.scope !469, !noalias !472
  %302 = add i16 %301, 1
  store i16 %302, i16* %300, align 2, !alias.scope !469, !noalias !472
  %303 = and i16 %301, 511
  %304 = zext i16 %303 to i64
  %305 = and i64 %67, 65535
  %306 = getelementptr inbounds i8, i8* %77, i64 %305
  store i8 %84, i8* %306, align 1, !noalias !474
  %307 = icmp ult i64 %194, 65535
  %308 = select i1 %307, i64 %194, i64 65535
  %309 = trunc i64 %308 to i16
  %310 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %187, i64 %189, i32 0, i64 %304, i32 0
  store i16 %309, i16* %310, align 2, !noalias !474
  %311 = load i16, i16* %195, align 2, !noalias !474
  %312 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %187, i64 %189, i32 0, i64 %304, i32 1
  store i16 %311, i16* %312, align 2, !noalias !474
  %313 = trunc i64 %67 to i32
  store i32 %313, i32* %191, align 4, !noalias !474
  store i16 %303, i16* %195, align 2, !noalias !474
  %314 = icmp eq i64 %299, 2020
  br i1 %314, label %315, label %443

315:                                              ; preds = %295
  %316 = load %struct.HasherCommon*, %struct.HasherCommon** %50, align 8, !alias.scope !454, !noalias !457
  %317 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %316, i64 0, i32 2
  %318 = load i64, i64* %317, align 8, !noalias !467
  %319 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %316, i64 0, i32 1
  %320 = load i64, i64* %319, align 8, !noalias !467
  %321 = lshr i64 %320, 7
  %322 = icmp ult i64 %318, %321
  br i1 %322, label %443, label %323

323:                                              ; preds = %315
  %324 = lshr i32 %82, 18
  %325 = shl nuw nsw i32 %324, 1
  %326 = zext i32 %325 to i64
  %327 = add i64 %182, 1
  br label %328

328:                                              ; preds = %433, %323
  %329 = phi i32 [ 0, %323 ], [ %434, %433 ]
  %330 = phi i64 [ %296, %323 ], [ %435, %433 ]
  %331 = phi i64 [ %297, %323 ], [ %436, %433 ]
  %332 = phi i64 [ %298, %323 ], [ %437, %433 ]
  %333 = phi i64 [ %318, %323 ], [ %438, %433 ]
  %334 = phi i64 [ 2020, %323 ], [ %439, %433 ]
  %335 = phi i64 [ %320, %323 ], [ %338, %433 ]
  %336 = phi i64 [ %326, %323 ], [ %441, %433 ]
  %337 = phi i64 [ 0, %323 ], [ %440, %433 ]
  %338 = add i64 %335, 1
  store i64 %338, i64* %319, align 8, !noalias !467
  %339 = load i8*, i8** %51, align 8, !noalias !467
  %340 = getelementptr inbounds i8, i8* %339, i64 %336
  %341 = load i8, i8* %340, align 1, !noalias !467
  %342 = icmp eq i8 %341, 0
  br i1 %342, label %433, label %343

343:                                              ; preds = %328
  %344 = zext i8 %341 to i64
  %345 = load i16*, i16** %52, align 8, !noalias !467
  %346 = getelementptr inbounds i16, i16* %345, i64 %336
  %347 = load i16, i16* %346, align 2, !noalias !467
  %348 = zext i16 %347 to i64
  %349 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %53, align 8, !noalias !467
  %350 = icmp ult i64 %66, %344
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %349, i64 0, i32 1, i64 %344
  %353 = load i32, i32* %352, align 4, !noalias !467
  %354 = zext i32 %353 to i64
  %355 = mul nuw nsw i64 %348, %344
  %356 = add nuw nsw i64 %355, %354
  %357 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %349, i64 0, i32 3
  %358 = load i8*, i8** %357, align 8, !noalias !467
  %359 = getelementptr inbounds i8, i8* %358, i64 %356
  %360 = lshr i64 %344, 3
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %382, label %362, !prof !13

362:                                              ; preds = %351, %372
  %363 = phi i64 [ %375, %372 ], [ %360, %351 ]
  %364 = phi i8* [ %373, %372 ], [ %359, %351 ]
  %365 = phi i64 [ %374, %372 ], [ 0, %351 ]
  %366 = bitcast i8* %364 to i64*
  %367 = load i64, i64* %366, align 8, !noalias !467
  %368 = getelementptr inbounds i8, i8* %79, i64 %365
  %369 = bitcast i8* %368 to i64*
  %370 = load i64, i64* %369, align 8, !alias.scope !468, !noalias !464
  %371 = icmp eq i64 %367, %370
  br i1 %371, label %372, label %377, !prof !13

372:                                              ; preds = %362
  %373 = getelementptr inbounds i8, i8* %364, i64 8
  %374 = add nuw nsw i64 %365, 8
  %375 = add nsw i64 %363, -1
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %382, label %362, !prof !13

377:                                              ; preds = %362
  %378 = xor i64 %370, %367
  %379 = tail call i64 @llvm.cttz.i64(i64 %378, i1 true) #4, !range !14
  %380 = lshr i64 %379, 3
  %381 = or i64 %380, %365
  br label %395

382:                                              ; preds = %372, %351
  %383 = phi i64 [ 0, %351 ], [ %374, %372 ]
  %384 = phi i8* [ %359, %351 ], [ %373, %372 ]
  %385 = and i64 %344, 7
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %395, label %387

387:                                              ; preds = %382
  %388 = getelementptr inbounds i8, i8* %79, i64 %383
  %389 = load i8, i8* %388, align 1, !alias.scope !468, !noalias !464
  %390 = load i8, i8* %384, align 1, !noalias !467
  %391 = icmp eq i8 %389, %390
  br i1 %391, label %392, label %395, !prof !15

392:                                              ; preds = %387
  %393 = add nuw nsw i64 %383, 1
  %394 = icmp eq i64 %385, 1
  br i1 %394, label %395, label %1341

395:                                              ; preds = %1386, %392, %387, %1341, %1347, %1350, %1356, %1359, %1365, %1368, %1374, %1377, %1383, %382, %377
  %396 = phi i64 [ %381, %377 ], [ %383, %382 ], [ %383, %387 ], [ %393, %392 ], [ %393, %1341 ], [ %1348, %1347 ], [ %1348, %1350 ], [ %1357, %1356 ], [ %1357, %1359 ], [ %1366, %1365 ], [ %1366, %1368 ], [ %1375, %1374 ], [ %1375, %1377 ], [ %1384, %1383 ], [ %1393, %1386 ]
  %397 = load i32, i32* %54, align 4, !noalias !467
  %398 = zext i32 %397 to i64
  %399 = add i64 %396, %398
  %400 = icmp ule i64 %399, %344
  %401 = icmp eq i64 %396, 0
  %402 = or i1 %401, %400
  br i1 %402, label %433, label %403

403:                                              ; preds = %395
  %404 = sub i64 %344, %396
  %405 = shl i64 %404, 2
  %406 = load i64, i64* %55, align 8, !noalias !467
  %407 = mul i64 %404, 6
  %408 = lshr i64 %406, %407
  %409 = and i64 %408, 63
  %410 = add i64 %409, %405
  %411 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %349, i64 0, i32 0, i64 %344
  %412 = load i8, i8* %411, align 1, !noalias !467
  %413 = zext i8 %412 to i64
  %414 = shl i64 %410, %413
  %415 = add i64 %327, %348
  %416 = add i64 %415, %414
  %417 = icmp ugt i64 %416, %75
  br i1 %417, label %433, label %418

418:                                              ; preds = %403
  %419 = mul i64 %396, 135
  %420 = add i64 %419, 1920
  %421 = trunc i64 %416 to i32
  %422 = tail call i32 @llvm.ctlz.i32(i32 %421, i1 true) #4, !range !18
  %423 = xor i32 %422, 31
  %424 = mul nuw nsw i32 %423, 30
  %425 = zext i32 %424 to i64
  %426 = sub i64 %420, %425
  %427 = icmp ult i64 %426, %334
  br i1 %427, label %433, label %428

428:                                              ; preds = %418
  %429 = zext i8 %341 to i32
  %430 = trunc i64 %396 to i32
  %431 = sub nsw i32 %429, %430
  %432 = add i64 %333, 1
  store i64 %432, i64* %317, align 8, !noalias !467
  br label %433

433:                                              ; preds = %428, %418, %403, %395, %343, %328
  %434 = phi i32 [ %329, %328 ], [ %329, %343 ], [ %329, %395 ], [ %329, %403 ], [ %329, %418 ], [ %431, %428 ]
  %435 = phi i64 [ %330, %328 ], [ %330, %343 ], [ %330, %395 ], [ %330, %403 ], [ %330, %418 ], [ %426, %428 ]
  %436 = phi i64 [ %331, %328 ], [ %331, %343 ], [ %331, %395 ], [ %331, %403 ], [ %331, %418 ], [ %416, %428 ]
  %437 = phi i64 [ %332, %328 ], [ %332, %343 ], [ %332, %395 ], [ %332, %403 ], [ %332, %418 ], [ %396, %428 ]
  %438 = phi i64 [ %333, %328 ], [ %333, %343 ], [ %333, %395 ], [ %333, %403 ], [ %333, %418 ], [ %432, %428 ]
  %439 = phi i64 [ %334, %328 ], [ %334, %343 ], [ %334, %395 ], [ %334, %403 ], [ %334, %418 ], [ %426, %428 ]
  %440 = add nuw nsw i64 %337, 1
  %441 = add nuw nsw i64 %336, 1
  %442 = icmp eq i64 %440, 2
  br i1 %442, label %443, label %328

443:                                              ; preds = %433, %295, %315
  %444 = phi i32 [ 0, %315 ], [ 0, %295 ], [ %434, %433 ]
  %445 = phi i64 [ %296, %315 ], [ %296, %295 ], [ %435, %433 ]
  %446 = phi i64 [ %297, %315 ], [ %297, %295 ], [ %436, %433 ]
  %447 = phi i64 [ %298, %315 ], [ %298, %295 ], [ %437, %433 ]
  %448 = icmp ugt i64 %445, 2020
  br i1 %448, label %449, label %1127

449:                                              ; preds = %443, %849
  %450 = phi i32 [ %841, %849 ], [ %444, %443 ]
  %451 = phi i64 [ %842, %849 ], [ %445, %443 ]
  %452 = phi i64 [ %843, %849 ], [ %446, %443 ]
  %453 = phi i64 [ %844, %849 ], [ %447, %443 ]
  %454 = phi i64 [ %850, %849 ], [ %70, %443 ]
  %455 = phi i64 [ %458, %849 ], [ %66, %443 ]
  %456 = phi i32 [ %851, %849 ], [ 0, %443 ]
  %457 = phi i64 [ %467, %849 ], [ %67, %443 ]
  %458 = add i64 %455, -1
  %459 = load i32, i32* %24, align 4
  %460 = icmp slt i32 %459, 5
  br i1 %460, label %461, label %465

461:                                              ; preds = %449
  %462 = add i64 %453, -1
  %463 = icmp ult i64 %462, %458
  %464 = select i1 %463, i64 %462, i64 %458
  br label %465

465:                                              ; preds = %449, %461
  %466 = phi i64 [ %464, %461 ], [ 0, %449 ]
  %467 = add i64 %457, 1
  %468 = icmp ult i64 %467, %16
  %469 = select i1 %468, i64 %467, i64 %16
  %470 = add i64 %467, %18
  %471 = icmp ult i64 %470, %16
  %472 = load i64, i64* %47, align 8
  %473 = load i8*, i8** %48, align 8, !alias.scope !475, !noalias !478
  %474 = getelementptr inbounds i8, i8* %473, i64 196608
  %475 = and i64 %467, %3
  %476 = getelementptr inbounds i8, i8* %2, i64 %475
  %477 = bitcast i8* %476 to i32*
  %478 = load i32, i32* %477, align 4, !alias.scope !482, !noalias !485
  %479 = mul i32 %478, 506832829
  %480 = lshr i32 %479, 17
  %481 = trunc i32 %480 to i8
  %482 = lshr i64 %458, 3
  %483 = icmp eq i64 %482, 0
  %484 = and i64 %458, 7
  %485 = icmp eq i64 %484, 0
  %486 = icmp eq i64 %484, 1
  %487 = icmp eq i64 %484, 2
  %488 = icmp eq i64 %484, 3
  %489 = icmp eq i64 %484, 4
  %490 = icmp eq i64 %484, 5
  %491 = icmp eq i64 %484, 6
  br label %492

492:                                              ; preds = %570, %465
  %493 = phi i64 [ 2020, %465 ], [ %571, %570 ]
  %494 = phi i64 [ 0, %465 ], [ %572, %570 ]
  %495 = phi i64 [ 0, %465 ], [ %573, %570 ]
  %496 = phi i64 [ 0, %465 ], [ %576, %570 ]
  %497 = phi i64 [ %466, %465 ], [ %575, %570 ]
  %498 = phi i64 [ 2020, %465 ], [ %574, %570 ]
  %499 = getelementptr inbounds i32, i32* %6, i64 %496
  %500 = load i32, i32* %499, align 4, !alias.scope !486, !noalias !487
  %501 = sext i32 %500 to i64
  %502 = sub i64 %467, %501
  %503 = icmp eq i64 %496, 0
  br i1 %503, label %509, label %504

504:                                              ; preds = %492
  %505 = and i64 %502, 65535
  %506 = getelementptr inbounds i8, i8* %474, i64 %505
  %507 = load i8, i8* %506, align 1, !noalias !488
  %508 = icmp eq i8 %507, %481
  br i1 %508, label %509, label %570

509:                                              ; preds = %504, %492
  %510 = icmp uge i64 %502, %467
  %511 = icmp ult i64 %469, %501
  %512 = or i1 %511, %510
  br i1 %512, label %570, label %513

513:                                              ; preds = %509
  %514 = and i64 %502, %3
  %515 = getelementptr inbounds i8, i8* %2, i64 %514
  br i1 %483, label %536, label %516, !prof !13

516:                                              ; preds = %513, %526
  %517 = phi i64 [ %529, %526 ], [ %482, %513 ]
  %518 = phi i8* [ %527, %526 ], [ %476, %513 ]
  %519 = phi i64 [ %528, %526 ], [ 0, %513 ]
  %520 = bitcast i8* %518 to i64*
  %521 = load i64, i64* %520, align 8, !alias.scope !489, !noalias !485
  %522 = getelementptr inbounds i8, i8* %515, i64 %519
  %523 = bitcast i8* %522 to i64*
  %524 = load i64, i64* %523, align 8, !alias.scope !489, !noalias !485
  %525 = icmp eq i64 %521, %524
  br i1 %525, label %526, label %531, !prof !13

526:                                              ; preds = %516
  %527 = getelementptr inbounds i8, i8* %518, i64 8
  %528 = add nuw i64 %519, 8
  %529 = add nsw i64 %517, -1
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %536, label %516, !prof !13

531:                                              ; preds = %516
  %532 = xor i64 %524, %521
  %533 = tail call i64 @llvm.cttz.i64(i64 %532, i1 true) #4, !range !14
  %534 = lshr i64 %533, 3
  %535 = or i64 %534, %519
  br label %546

536:                                              ; preds = %526, %513
  %537 = phi i64 [ 0, %513 ], [ %528, %526 ]
  %538 = phi i8* [ %476, %513 ], [ %527, %526 ]
  br i1 %485, label %546, label %539

539:                                              ; preds = %536
  %540 = getelementptr inbounds i8, i8* %515, i64 %537
  %541 = load i8, i8* %540, align 1, !alias.scope !489, !noalias !485
  %542 = load i8, i8* %538, align 1, !alias.scope !489, !noalias !485
  %543 = icmp eq i8 %541, %542
  br i1 %543, label %544, label %546, !prof !15

544:                                              ; preds = %539
  %545 = add i64 %537, 1
  br i1 %486, label %546, label %1394

546:                                              ; preds = %1434, %544, %539, %1394, %1400, %1402, %1408, %1410, %1416, %1418, %1424, %1426, %1432, %536, %531
  %547 = phi i64 [ %535, %531 ], [ %537, %536 ], [ %537, %539 ], [ %545, %544 ], [ %545, %1394 ], [ %1401, %1400 ], [ %1401, %1402 ], [ %1409, %1408 ], [ %1409, %1410 ], [ %1417, %1416 ], [ %1417, %1418 ], [ %1425, %1424 ], [ %1425, %1426 ], [ %1433, %1432 ], [ %1441, %1434 ]
  %548 = icmp ugt i64 %547, 1
  br i1 %548, label %549, label %570

549:                                              ; preds = %546
  %550 = mul i64 %547, 135
  %551 = add i64 %550, 1935
  %552 = icmp ult i64 %498, %551
  br i1 %552, label %553, label %570

553:                                              ; preds = %549
  br i1 %503, label %562, label %554

554:                                              ; preds = %553
  %555 = trunc i64 %496 to i32
  %556 = and i32 %555, 14
  %557 = lshr i32 117264, %556
  %558 = and i32 %557, 14
  %559 = add nuw nsw i32 %558, 39
  %560 = zext i32 %559 to i64
  %561 = sub i64 %551, %560
  br label %562

562:                                              ; preds = %554, %553
  %563 = phi i64 [ %561, %554 ], [ %551, %553 ]
  %564 = icmp ult i64 %498, %563
  %565 = select i1 %564, i64 %563, i64 %493
  %566 = select i1 %564, i64 %501, i64 %494
  %567 = select i1 %564, i64 %547, i64 %495
  %568 = select i1 %564, i64 %563, i64 %498
  %569 = select i1 %564, i64 %547, i64 %497
  br label %570

570:                                              ; preds = %562, %549, %546, %509, %504
  %571 = phi i64 [ %493, %509 ], [ %493, %549 ], [ %493, %546 ], [ %493, %504 ], [ %565, %562 ]
  %572 = phi i64 [ %494, %509 ], [ %494, %549 ], [ %494, %546 ], [ %494, %504 ], [ %566, %562 ]
  %573 = phi i64 [ %495, %509 ], [ %495, %549 ], [ %495, %546 ], [ %495, %504 ], [ %567, %562 ]
  %574 = phi i64 [ %498, %509 ], [ %498, %549 ], [ %498, %546 ], [ %498, %504 ], [ %568, %562 ]
  %575 = phi i64 [ %497, %509 ], [ %497, %549 ], [ %497, %546 ], [ %497, %504 ], [ %569, %562 ]
  %576 = add nuw nsw i64 %496, 1
  %577 = icmp eq i64 %576, 16
  br i1 %577, label %578, label %492

578:                                              ; preds = %570
  %579 = select i1 %471, i64 %470, i64 %16
  %580 = getelementptr inbounds i8, i8* %473, i64 131072
  %581 = getelementptr inbounds i8, i8* %473, i64 262144
  %582 = bitcast i8* %473 to i32*
  %583 = bitcast i8* %580 to i16*
  %584 = bitcast i8* %581 to %struct.BankH42*
  %585 = zext i32 %480 to i64
  %586 = and i64 %585, 511
  %587 = load i64, i64* %49, align 8, !alias.scope !475, !noalias !478
  %588 = getelementptr inbounds i32, i32* %582, i64 %585
  %589 = load i32, i32* %588, align 4, !noalias !488
  %590 = zext i32 %589 to i64
  %591 = sub i64 %467, %590
  %592 = getelementptr inbounds i16, i16* %583, i64 %585
  %593 = icmp eq i64 %587, 0
  br i1 %593, label %692, label %594

594:                                              ; preds = %578
  %595 = load i16, i16* %592, align 2, !noalias !488
  %596 = icmp eq i64 %484, 1
  %597 = icmp eq i64 %484, 2
  %598 = icmp eq i64 %484, 3
  %599 = icmp eq i64 %484, 4
  %600 = icmp eq i64 %484, 5
  %601 = icmp eq i64 %484, 6
  br label %602

602:                                              ; preds = %685, %594
  %603 = phi i64 [ %571, %594 ], [ %686, %685 ]
  %604 = phi i64 [ %572, %594 ], [ %687, %685 ]
  %605 = phi i64 [ %573, %594 ], [ %688, %685 ]
  %606 = phi i64 [ %587, %594 ], [ %613, %685 ]
  %607 = phi i16 [ %595, %594 ], [ %620, %685 ]
  %608 = phi i64 [ %591, %594 ], [ %623, %685 ]
  %609 = phi i64 [ 0, %594 ], [ %614, %685 ]
  %610 = phi i64 [ %575, %594 ], [ %690, %685 ]
  %611 = phi i64 [ %574, %594 ], [ %689, %685 ]
  %612 = zext i16 %607 to i64
  %613 = add i64 %606, -1
  %614 = add i64 %609, %608
  %615 = icmp ugt i64 %614, %469
  br i1 %615, label %692, label %616

616:                                              ; preds = %602
  %617 = sub i64 %467, %614
  %618 = and i64 %617, %3
  %619 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %584, i64 %586, i32 0, i64 %612, i32 1
  %620 = load i16, i16* %619, align 2, !noalias !488
  %621 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %584, i64 %586, i32 0, i64 %612, i32 0
  %622 = load i16, i16* %621, align 2, !noalias !488
  %623 = zext i16 %622 to i64
  %624 = add i64 %610, %475
  %625 = icmp ugt i64 %624, %3
  br i1 %625, label %685, label %626

626:                                              ; preds = %616
  %627 = add i64 %618, %610
  %628 = icmp ugt i64 %627, %3
  br i1 %628, label %685, label %629

629:                                              ; preds = %626
  %630 = getelementptr inbounds i8, i8* %2, i64 %624
  %631 = load i8, i8* %630, align 1, !alias.scope !489, !noalias !485
  %632 = getelementptr inbounds i8, i8* %2, i64 %627
  %633 = load i8, i8* %632, align 1, !alias.scope !489, !noalias !485
  %634 = icmp eq i8 %631, %633
  br i1 %634, label %635, label %685

635:                                              ; preds = %629
  %636 = getelementptr inbounds i8, i8* %2, i64 %618
  br i1 %483, label %657, label %637, !prof !13

637:                                              ; preds = %635, %647
  %638 = phi i64 [ %650, %647 ], [ %482, %635 ]
  %639 = phi i8* [ %648, %647 ], [ %476, %635 ]
  %640 = phi i64 [ %649, %647 ], [ 0, %635 ]
  %641 = bitcast i8* %639 to i64*
  %642 = load i64, i64* %641, align 8, !alias.scope !489, !noalias !485
  %643 = getelementptr inbounds i8, i8* %636, i64 %640
  %644 = bitcast i8* %643 to i64*
  %645 = load i64, i64* %644, align 8, !alias.scope !489, !noalias !485
  %646 = icmp eq i64 %642, %645
  br i1 %646, label %647, label %652, !prof !13

647:                                              ; preds = %637
  %648 = getelementptr inbounds i8, i8* %639, i64 8
  %649 = add nuw i64 %640, 8
  %650 = add nsw i64 %638, -1
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %657, label %637, !prof !13

652:                                              ; preds = %637
  %653 = xor i64 %645, %642
  %654 = tail call i64 @llvm.cttz.i64(i64 %653, i1 true) #4, !range !14
  %655 = lshr i64 %654, 3
  %656 = or i64 %655, %640
  br label %667

657:                                              ; preds = %647, %635
  %658 = phi i64 [ 0, %635 ], [ %649, %647 ]
  %659 = phi i8* [ %476, %635 ], [ %648, %647 ]
  br i1 %485, label %667, label %660

660:                                              ; preds = %657
  %661 = getelementptr inbounds i8, i8* %636, i64 %658
  %662 = load i8, i8* %661, align 1, !alias.scope !489, !noalias !485
  %663 = load i8, i8* %659, align 1, !alias.scope !489, !noalias !485
  %664 = icmp eq i8 %662, %663
  br i1 %664, label %665, label %667, !prof !15

665:                                              ; preds = %660
  %666 = add i64 %658, 1
  br i1 %596, label %667, label %1442

667:                                              ; preds = %1482, %665, %660, %1442, %1448, %1450, %1456, %1458, %1464, %1466, %1472, %1474, %1480, %657, %652
  %668 = phi i64 [ %656, %652 ], [ %658, %657 ], [ %658, %660 ], [ %666, %665 ], [ %666, %1442 ], [ %1449, %1448 ], [ %1449, %1450 ], [ %1457, %1456 ], [ %1457, %1458 ], [ %1465, %1464 ], [ %1465, %1466 ], [ %1473, %1472 ], [ %1473, %1474 ], [ %1481, %1480 ], [ %1489, %1482 ]
  %669 = icmp ugt i64 %668, 3
  br i1 %669, label %670, label %685

670:                                              ; preds = %667
  %671 = mul i64 %668, 135
  %672 = trunc i64 %614 to i32
  %673 = tail call i32 @llvm.ctlz.i32(i32 %672, i1 true) #4, !range !18
  %674 = xor i32 %673, 31
  %675 = mul nsw i32 %674, -30
  %676 = add nsw i32 %675, 1920
  %677 = zext i32 %676 to i64
  %678 = add i64 %671, %677
  %679 = icmp ult i64 %611, %678
  %680 = select i1 %679, i64 %678, i64 %603
  %681 = select i1 %679, i64 %614, i64 %604
  %682 = select i1 %679, i64 %668, i64 %605
  %683 = select i1 %679, i64 %678, i64 %611
  %684 = select i1 %679, i64 %668, i64 %610
  br label %685

685:                                              ; preds = %670, %667, %629, %626, %616
  %686 = phi i64 [ %603, %616 ], [ %603, %626 ], [ %603, %667 ], [ %603, %629 ], [ %680, %670 ]
  %687 = phi i64 [ %604, %616 ], [ %604, %626 ], [ %604, %667 ], [ %604, %629 ], [ %681, %670 ]
  %688 = phi i64 [ %605, %616 ], [ %605, %626 ], [ %605, %667 ], [ %605, %629 ], [ %682, %670 ]
  %689 = phi i64 [ %611, %616 ], [ %611, %626 ], [ %611, %667 ], [ %611, %629 ], [ %683, %670 ]
  %690 = phi i64 [ %610, %616 ], [ %610, %626 ], [ %610, %667 ], [ %610, %629 ], [ %684, %670 ]
  %691 = icmp eq i64 %613, 0
  br i1 %691, label %692, label %602

692:                                              ; preds = %685, %602, %578
  %693 = phi i64 [ %571, %578 ], [ %686, %685 ], [ %603, %602 ]
  %694 = phi i64 [ %572, %578 ], [ %687, %685 ], [ %604, %602 ]
  %695 = phi i64 [ %573, %578 ], [ %688, %685 ], [ %605, %602 ]
  %696 = phi i64 [ %574, %578 ], [ %689, %685 ], [ %611, %602 ]
  %697 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 %586
  %698 = load i16, i16* %697, align 2, !alias.scope !490, !noalias !493
  %699 = add i16 %698, 1
  store i16 %699, i16* %697, align 2, !alias.scope !490, !noalias !493
  %700 = and i16 %698, 511
  %701 = zext i16 %700 to i64
  %702 = and i64 %467, 65535
  %703 = getelementptr inbounds i8, i8* %474, i64 %702
  store i8 %481, i8* %703, align 1, !noalias !495
  %704 = icmp ult i64 %591, 65535
  %705 = select i1 %704, i64 %591, i64 65535
  %706 = trunc i64 %705 to i16
  %707 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %584, i64 %586, i32 0, i64 %701, i32 0
  store i16 %706, i16* %707, align 2, !noalias !495
  %708 = load i16, i16* %592, align 2, !noalias !495
  %709 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %584, i64 %586, i32 0, i64 %701, i32 1
  store i16 %708, i16* %709, align 2, !noalias !495
  %710 = trunc i64 %467 to i32
  store i32 %710, i32* %588, align 4, !noalias !495
  store i16 %700, i16* %592, align 2, !noalias !495
  %711 = icmp eq i64 %696, 2020
  br i1 %711, label %712, label %840

712:                                              ; preds = %692
  %713 = load %struct.HasherCommon*, %struct.HasherCommon** %50, align 8, !alias.scope !475, !noalias !478
  %714 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %713, i64 0, i32 2
  %715 = load i64, i64* %714, align 8, !noalias !488
  %716 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %713, i64 0, i32 1
  %717 = load i64, i64* %716, align 8, !noalias !488
  %718 = lshr i64 %717, 7
  %719 = icmp ult i64 %715, %718
  br i1 %719, label %840, label %720

720:                                              ; preds = %712
  %721 = lshr i32 %479, 18
  %722 = shl nuw nsw i32 %721, 1
  %723 = zext i32 %722 to i64
  %724 = add i64 %579, 1
  br label %725

725:                                              ; preds = %830, %720
  %726 = phi i32 [ 0, %720 ], [ %831, %830 ]
  %727 = phi i64 [ %693, %720 ], [ %832, %830 ]
  %728 = phi i64 [ %694, %720 ], [ %833, %830 ]
  %729 = phi i64 [ %695, %720 ], [ %834, %830 ]
  %730 = phi i64 [ %715, %720 ], [ %835, %830 ]
  %731 = phi i64 [ 2020, %720 ], [ %836, %830 ]
  %732 = phi i64 [ %717, %720 ], [ %735, %830 ]
  %733 = phi i64 [ %723, %720 ], [ %838, %830 ]
  %734 = phi i64 [ 0, %720 ], [ %837, %830 ]
  %735 = add i64 %732, 1
  store i64 %735, i64* %716, align 8, !noalias !488
  %736 = load i8*, i8** %51, align 8, !noalias !488
  %737 = getelementptr inbounds i8, i8* %736, i64 %733
  %738 = load i8, i8* %737, align 1, !noalias !488
  %739 = icmp eq i8 %738, 0
  br i1 %739, label %830, label %740

740:                                              ; preds = %725
  %741 = zext i8 %738 to i64
  %742 = load i16*, i16** %52, align 8, !noalias !488
  %743 = getelementptr inbounds i16, i16* %742, i64 %733
  %744 = load i16, i16* %743, align 2, !noalias !488
  %745 = zext i16 %744 to i64
  %746 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %53, align 8, !noalias !488
  %747 = icmp ult i64 %458, %741
  br i1 %747, label %830, label %748

748:                                              ; preds = %740
  %749 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %746, i64 0, i32 1, i64 %741
  %750 = load i32, i32* %749, align 4, !noalias !488
  %751 = zext i32 %750 to i64
  %752 = mul nuw nsw i64 %745, %741
  %753 = add nuw nsw i64 %752, %751
  %754 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %746, i64 0, i32 3
  %755 = load i8*, i8** %754, align 8, !noalias !488
  %756 = getelementptr inbounds i8, i8* %755, i64 %753
  %757 = lshr i64 %741, 3
  %758 = icmp eq i64 %757, 0
  br i1 %758, label %779, label %759, !prof !13

759:                                              ; preds = %748, %769
  %760 = phi i64 [ %772, %769 ], [ %757, %748 ]
  %761 = phi i8* [ %770, %769 ], [ %756, %748 ]
  %762 = phi i64 [ %771, %769 ], [ 0, %748 ]
  %763 = bitcast i8* %761 to i64*
  %764 = load i64, i64* %763, align 8, !noalias !488
  %765 = getelementptr inbounds i8, i8* %476, i64 %762
  %766 = bitcast i8* %765 to i64*
  %767 = load i64, i64* %766, align 8, !alias.scope !489, !noalias !485
  %768 = icmp eq i64 %764, %767
  br i1 %768, label %769, label %774, !prof !13

769:                                              ; preds = %759
  %770 = getelementptr inbounds i8, i8* %761, i64 8
  %771 = add nuw nsw i64 %762, 8
  %772 = add nsw i64 %760, -1
  %773 = icmp eq i64 %772, 0
  br i1 %773, label %779, label %759, !prof !13

774:                                              ; preds = %759
  %775 = xor i64 %767, %764
  %776 = tail call i64 @llvm.cttz.i64(i64 %775, i1 true) #4, !range !14
  %777 = lshr i64 %776, 3
  %778 = or i64 %777, %762
  br label %792

779:                                              ; preds = %769, %748
  %780 = phi i64 [ 0, %748 ], [ %771, %769 ]
  %781 = phi i8* [ %756, %748 ], [ %770, %769 ]
  %782 = and i64 %741, 7
  %783 = icmp eq i64 %782, 0
  br i1 %783, label %792, label %784

784:                                              ; preds = %779
  %785 = getelementptr inbounds i8, i8* %476, i64 %780
  %786 = load i8, i8* %785, align 1, !alias.scope !489, !noalias !485
  %787 = load i8, i8* %781, align 1, !noalias !488
  %788 = icmp eq i8 %786, %787
  br i1 %788, label %789, label %792, !prof !15

789:                                              ; preds = %784
  %790 = add nuw nsw i64 %780, 1
  %791 = icmp eq i64 %782, 1
  br i1 %791, label %792, label %1490

792:                                              ; preds = %1535, %789, %784, %1490, %1496, %1499, %1505, %1508, %1514, %1517, %1523, %1526, %1532, %779, %774
  %793 = phi i64 [ %778, %774 ], [ %780, %779 ], [ %780, %784 ], [ %790, %789 ], [ %790, %1490 ], [ %1497, %1496 ], [ %1497, %1499 ], [ %1506, %1505 ], [ %1506, %1508 ], [ %1515, %1514 ], [ %1515, %1517 ], [ %1524, %1523 ], [ %1524, %1526 ], [ %1533, %1532 ], [ %1542, %1535 ]
  %794 = load i32, i32* %54, align 4, !noalias !488
  %795 = zext i32 %794 to i64
  %796 = add i64 %793, %795
  %797 = icmp ule i64 %796, %741
  %798 = icmp eq i64 %793, 0
  %799 = or i1 %798, %797
  br i1 %799, label %830, label %800

800:                                              ; preds = %792
  %801 = sub i64 %741, %793
  %802 = shl i64 %801, 2
  %803 = load i64, i64* %55, align 8, !noalias !488
  %804 = mul i64 %801, 6
  %805 = lshr i64 %803, %804
  %806 = and i64 %805, 63
  %807 = add i64 %806, %802
  %808 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %746, i64 0, i32 0, i64 %741
  %809 = load i8, i8* %808, align 1, !noalias !488
  %810 = zext i8 %809 to i64
  %811 = shl i64 %807, %810
  %812 = add i64 %724, %745
  %813 = add i64 %812, %811
  %814 = icmp ugt i64 %813, %472
  br i1 %814, label %830, label %815

815:                                              ; preds = %800
  %816 = mul i64 %793, 135
  %817 = add i64 %816, 1920
  %818 = trunc i64 %813 to i32
  %819 = tail call i32 @llvm.ctlz.i32(i32 %818, i1 true) #4, !range !18
  %820 = xor i32 %819, 31
  %821 = mul nuw nsw i32 %820, 30
  %822 = zext i32 %821 to i64
  %823 = sub i64 %817, %822
  %824 = icmp ult i64 %823, %731
  br i1 %824, label %830, label %825

825:                                              ; preds = %815
  %826 = zext i8 %738 to i32
  %827 = trunc i64 %793 to i32
  %828 = sub nsw i32 %826, %827
  %829 = add i64 %730, 1
  store i64 %829, i64* %714, align 8, !noalias !488
  br label %830

830:                                              ; preds = %825, %815, %800, %792, %740, %725
  %831 = phi i32 [ %726, %725 ], [ %726, %740 ], [ %726, %792 ], [ %726, %800 ], [ %726, %815 ], [ %828, %825 ]
  %832 = phi i64 [ %727, %725 ], [ %727, %740 ], [ %727, %792 ], [ %727, %800 ], [ %727, %815 ], [ %823, %825 ]
  %833 = phi i64 [ %728, %725 ], [ %728, %740 ], [ %728, %792 ], [ %728, %800 ], [ %728, %815 ], [ %813, %825 ]
  %834 = phi i64 [ %729, %725 ], [ %729, %740 ], [ %729, %792 ], [ %729, %800 ], [ %729, %815 ], [ %793, %825 ]
  %835 = phi i64 [ %730, %725 ], [ %730, %740 ], [ %730, %792 ], [ %730, %800 ], [ %730, %815 ], [ %829, %825 ]
  %836 = phi i64 [ %731, %725 ], [ %731, %740 ], [ %731, %792 ], [ %731, %800 ], [ %731, %815 ], [ %823, %825 ]
  %837 = add nuw nsw i64 %734, 1
  %838 = add nuw nsw i64 %733, 1
  %839 = icmp eq i64 %837, 2
  br i1 %839, label %840, label %725

840:                                              ; preds = %830, %692, %712
  %841 = phi i32 [ 0, %712 ], [ 0, %692 ], [ %831, %830 ]
  %842 = phi i64 [ %693, %712 ], [ %693, %692 ], [ %832, %830 ]
  %843 = phi i64 [ %694, %712 ], [ %694, %692 ], [ %833, %830 ]
  %844 = phi i64 [ %695, %712 ], [ %695, %692 ], [ %834, %830 ]
  %845 = add i64 %451, 175
  %846 = icmp ult i64 %842, %845
  br i1 %846, label %847, label %849

847:                                              ; preds = %840
  %848 = add i64 %457, %18
  br label %856

849:                                              ; preds = %840
  %850 = add i64 %454, 1
  %851 = add nuw nsw i32 %456, 1
  %852 = icmp ult i32 %851, 4
  %853 = add i64 %457, 5
  %854 = icmp ult i64 %853, %20
  %855 = and i1 %852, %854
  br i1 %855, label %449, label %856

856:                                              ; preds = %849, %847
  %857 = phi i64 [ %848, %847 ], [ %470, %849 ]
  %858 = phi i32 [ %450, %847 ], [ %841, %849 ]
  %859 = phi i64 [ %452, %847 ], [ %843, %849 ]
  %860 = phi i64 [ %453, %847 ], [ %844, %849 ]
  %861 = phi i64 [ %454, %847 ], [ %850, %849 ]
  %862 = phi i64 [ %457, %847 ], [ %467, %849 ]
  %863 = shl i64 %860, 1
  %864 = add i64 %863, %27
  %865 = add i64 %864, %862
  %866 = icmp ult i64 %857, %16
  %867 = select i1 %866, i64 %857, i64 %16
  %868 = icmp ugt i64 %859, %867
  br i1 %868, label %904, label %869

869:                                              ; preds = %856
  %870 = add i64 %859, 3
  %871 = load i32, i32* %6, align 4
  %872 = sext i32 %871 to i64
  %873 = sub i64 %870, %872
  %874 = load i32, i32* %29, align 4
  %875 = sext i32 %874 to i64
  %876 = sub i64 %870, %875
  %877 = icmp eq i64 %859, %872
  br i1 %877, label %926, label %878

878:                                              ; preds = %869
  %879 = icmp eq i64 %859, %875
  br i1 %879, label %906, label %880

880:                                              ; preds = %878
  %881 = icmp ult i64 %873, 7
  br i1 %881, label %882, label %888

882:                                              ; preds = %880
  %883 = trunc i64 %873 to i32
  %884 = shl i32 %883, 2
  %885 = lshr i32 158663784, %884
  %886 = and i32 %885, 15
  %887 = zext i32 %886 to i64
  br label %906

888:                                              ; preds = %880
  %889 = icmp ult i64 %876, 7
  br i1 %889, label %890, label %896

890:                                              ; preds = %888
  %891 = trunc i64 %876 to i32
  %892 = shl i32 %891, 2
  %893 = lshr i32 266017486, %892
  %894 = and i32 %893, 15
  %895 = zext i32 %894 to i64
  br label %906

896:                                              ; preds = %888
  %897 = load i32, i32* %58, align 4
  %898 = sext i32 %897 to i64
  %899 = icmp eq i64 %859, %898
  br i1 %899, label %906, label %900

900:                                              ; preds = %896
  %901 = load i32, i32* %59, align 4
  %902 = sext i32 %901 to i64
  %903 = icmp eq i64 %859, %902
  br i1 %903, label %906, label %904

904:                                              ; preds = %900, %856
  %905 = add i64 %859, 15
  br label %906

906:                                              ; preds = %878, %882, %890, %896, %900, %904
  %907 = phi i64 [ %905, %904 ], [ 3, %900 ], [ 2, %896 ], [ 1, %878 ], [ %895, %890 ], [ %887, %882 ]
  %908 = icmp ule i64 %859, %867
  %909 = icmp ne i64 %907, 0
  %910 = and i1 %908, %909
  br i1 %910, label %911, label %926

911:                                              ; preds = %906
  %912 = load i32, i32* %58, align 4
  store i32 %912, i32* %59, align 4
  %913 = load i32, i32* %29, align 4
  store i32 %913, i32* %58, align 4
  %914 = load i32, i32* %6, align 4
  store i32 %914, i32* %29, align 4
  %915 = trunc i64 %859 to i32
  store i32 %915, i32* %6, align 4
  %916 = insertelement <4 x i32> undef, i32 %915, i32 0
  %917 = shufflevector <4 x i32> %916, <4 x i32> undef, <4 x i32> zeroinitializer
  %918 = add nsw <4 x i32> %917, <i32 -1, i32 1, i32 -2, i32 2>
  store <4 x i32> %918, <4 x i32>* %62, align 4, !alias.scope !496
  %919 = insertelement <2 x i32> undef, i32 %915, i32 0
  %920 = insertelement <2 x i32> %919, i32 %914, i32 1
  %921 = shufflevector <2 x i32> %920, <2 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %922 = add nsw <4 x i32> %921, <i32 -3, i32 3, i32 -1, i32 1>
  store <4 x i32> %922, <4 x i32>* %63, align 4, !alias.scope !496
  %923 = insertelement <4 x i32> undef, i32 %914, i32 0
  %924 = shufflevector <4 x i32> %923, <4 x i32> undef, <4 x i32> zeroinitializer
  %925 = add nsw <4 x i32> %924, <i32 -2, i32 2, i32 -3, i32 3>
  store <4 x i32> %925, <4 x i32>* %64, align 4, !alias.scope !496
  br label %926

926:                                              ; preds = %869, %911, %906
  %927 = phi i64 [ %907, %911 ], [ %907, %906 ], [ 0, %869 ]
  %928 = getelementptr inbounds %struct.Command, %struct.Command* %68, i64 1
  %929 = trunc i64 %861 to i32
  %930 = getelementptr inbounds %struct.Command, %struct.Command* %68, i64 0, i32 0
  store i32 %929, i32* %930, align 4
  %931 = shl i32 %858, 25
  %932 = trunc i64 %860 to i32
  %933 = or i32 %931, %932
  %934 = getelementptr inbounds %struct.Command, %struct.Command* %68, i64 0, i32 1
  store i32 %933, i32* %934, align 4
  %935 = load i32, i32* %60, align 4
  %936 = zext i32 %935 to i64
  %937 = load i32, i32* %61, align 8
  %938 = zext i32 %937 to i64
  %939 = getelementptr inbounds %struct.Command, %struct.Command* %68, i64 0, i32 4
  %940 = getelementptr inbounds %struct.Command, %struct.Command* %68, i64 0, i32 2
  %941 = add nuw nsw i64 %936, 16
  %942 = icmp ugt i64 %941, %927
  br i1 %942, label %943, label %945

943:                                              ; preds = %926
  %944 = trunc i64 %927 to i16
  store i16 %944, i16* %939, align 2
  br label %975

945:                                              ; preds = %926
  %946 = shl i64 4, %938
  %947 = add i64 %927, -16
  %948 = sub i64 %947, %936
  %949 = add i64 %948, %946
  %950 = trunc i64 %949 to i32
  %951 = tail call i32 @llvm.ctlz.i32(i32 %950, i1 true) #4, !range !18
  %952 = sub nsw i32 30, %951
  %953 = zext i32 %952 to i64
  %954 = shl nsw i32 -1, %937
  %955 = xor i32 %954, 65535
  %956 = zext i32 %955 to i64
  %957 = and i64 %949, %956
  %958 = lshr i64 %949, %953
  %959 = and i64 %958, 1
  %960 = or i64 %959, 2
  %961 = shl i64 %960, %953
  %962 = sub nsw i64 %953, %938
  %963 = shl nsw i64 %962, 10
  %964 = shl nsw i64 %962, 1
  %965 = add nsw i64 %964, -2
  %966 = or i64 %965, %959
  %967 = shl i64 %966, %938
  %968 = add nuw nsw i64 %957, %941
  %969 = add i64 %968, %967
  %970 = or i64 %969, %963
  %971 = trunc i64 %970 to i16
  store i16 %971, i16* %939, align 2
  %972 = sub i64 %949, %961
  %973 = lshr i64 %972, %938
  %974 = trunc i64 %973 to i32
  br label %975

975:                                              ; preds = %945, %943
  %976 = phi i16 [ %971, %945 ], [ %944, %943 ]
  %977 = phi i32 [ %974, %945 ], [ 0, %943 ]
  store i32 %977, i32* %940, align 4
  %978 = add nsw i32 %858, %932
  %979 = sext i32 %978 to i64
  %980 = and i16 %976, 1023
  %981 = icmp eq i16 %980, 0
  %982 = getelementptr inbounds %struct.Command, %struct.Command* %68, i64 0, i32 3
  %983 = icmp ult i64 %861, 6
  br i1 %983, label %984, label %986

984:                                              ; preds = %975
  %985 = trunc i64 %861 to i16
  br label %1012

986:                                              ; preds = %975
  %987 = icmp ult i64 %861, 130
  br i1 %987, label %988, label %1000

988:                                              ; preds = %986
  %989 = add nsw i64 %861, -2
  %990 = trunc i64 %989 to i32
  %991 = tail call i32 @llvm.ctlz.i32(i32 %990, i1 true) #4, !range !18
  %992 = sub nsw i32 30, %991
  %993 = shl nsw i32 %992, 1
  %994 = zext i32 %993 to i64
  %995 = zext i32 %992 to i64
  %996 = lshr i64 %989, %995
  %997 = add nuw nsw i64 %996, %994
  %998 = trunc i64 %997 to i16
  %999 = add i16 %998, 2
  br label %1012

1000:                                             ; preds = %986
  %1001 = icmp ult i64 %861, 2114
  br i1 %1001, label %1002, label %1007

1002:                                             ; preds = %1000
  %1003 = add nsw i32 %929, -66
  %1004 = tail call i32 @llvm.ctlz.i32(i32 %1003, i1 true) #4, !range !18
  %1005 = trunc i32 %1004 to i16
  %1006 = sub nuw nsw i16 41, %1005
  br label %1012

1007:                                             ; preds = %1000
  %1008 = icmp ult i64 %861, 6210
  br i1 %1008, label %1012, label %1009

1009:                                             ; preds = %1007
  %1010 = icmp ult i64 %861, 22594
  %1011 = select i1 %1010, i16 22, i16 23
  br label %1012

1012:                                             ; preds = %1009, %1007, %1002, %988, %984
  %1013 = phi i16 [ %985, %984 ], [ %999, %988 ], [ %1006, %1002 ], [ 21, %1007 ], [ %1011, %1009 ]
  %1014 = icmp ult i32 %978, 10
  br i1 %1014, label %1015, label %1018

1015:                                             ; preds = %1012
  %1016 = trunc i32 %978 to i16
  %1017 = add nsw i16 %1016, -2
  br label %1039

1018:                                             ; preds = %1012
  %1019 = icmp ult i32 %978, 134
  br i1 %1019, label %1020, label %1032

1020:                                             ; preds = %1018
  %1021 = add nsw i64 %979, -6
  %1022 = trunc i64 %1021 to i32
  %1023 = tail call i32 @llvm.ctlz.i32(i32 %1022, i1 true) #4, !range !18
  %1024 = sub nsw i32 30, %1023
  %1025 = shl nsw i32 %1024, 1
  %1026 = zext i32 %1025 to i64
  %1027 = zext i32 %1024 to i64
  %1028 = lshr i64 %1021, %1027
  %1029 = add nuw nsw i64 %1028, %1026
  %1030 = trunc i64 %1029 to i16
  %1031 = add i16 %1030, 4
  br label %1039

1032:                                             ; preds = %1018
  %1033 = icmp ult i32 %978, 2118
  br i1 %1033, label %1034, label %1039

1034:                                             ; preds = %1032
  %1035 = add nsw i32 %978, -70
  %1036 = tail call i32 @llvm.ctlz.i32(i32 %1035, i1 true) #4, !range !18
  %1037 = trunc i32 %1036 to i16
  %1038 = sub nuw nsw i16 43, %1037
  br label %1039

1039:                                             ; preds = %1034, %1032, %1020, %1015
  %1040 = phi i16 [ %1017, %1015 ], [ %1031, %1020 ], [ %1038, %1034 ], [ 23, %1032 ]
  %1041 = and i16 %1040, 7
  %1042 = shl i16 %1013, 3
  %1043 = and i16 %1042, 56
  %1044 = or i16 %1041, %1043
  %1045 = icmp ult i16 %1013, 8
  %1046 = and i1 %981, %1045
  %1047 = icmp ult i16 %1040, 16
  %1048 = and i1 %1046, %1047
  br i1 %1048, label %1049, label %1053

1049:                                             ; preds = %1039
  %1050 = icmp ult i16 %1040, 8
  %1051 = or i16 %1044, 64
  %1052 = select i1 %1050, i16 %1044, i16 %1051
  br label %1068

1053:                                             ; preds = %1039
  %1054 = lshr i16 %1040, 3
  %1055 = lshr i16 %1013, 3
  %1056 = mul nuw nsw i16 %1055, 3
  %1057 = add nuw nsw i16 %1054, %1056
  %1058 = zext i16 %1057 to i32
  %1059 = shl nuw i16 %1057, 1
  %1060 = zext i16 %1059 to i32
  %1061 = shl nuw nsw i32 %1058, 6
  %1062 = add nuw nsw i32 %1061, 64
  %1063 = lshr i32 5377344, %1060
  %1064 = and i32 %1063, 192
  %1065 = add nuw nsw i32 %1062, %1064
  %1066 = trunc i32 %1065 to i16
  %1067 = or i16 %1044, %1066
  br label %1068

1068:                                             ; preds = %1049, %1053
  %1069 = phi i16 [ %1052, %1049 ], [ %1067, %1053 ]
  store i16 %1069, i16* %982, align 2
  %1070 = load i64, i64* %10, align 8
  %1071 = add i64 %1070, %861
  store i64 %1071, i64* %10, align 8
  %1072 = add i64 %862, 2
  %1073 = add i64 %862, %860
  %1074 = icmp ult i64 %1073, %23
  %1075 = select i1 %1074, i64 %1073, i64 %23
  %1076 = lshr i64 %860, 2
  %1077 = icmp ult i64 %859, %1076
  br i1 %1077, label %1078, label %1085

1078:                                             ; preds = %1068
  %1079 = shl i64 %859, 2
  %1080 = sub i64 %1073, %1079
  %1081 = icmp ugt i64 %1072, %1080
  %1082 = select i1 %1081, i64 %1072, i64 %1080
  %1083 = icmp ult i64 %1075, %1082
  %1084 = select i1 %1083, i64 %1075, i64 %1082
  br label %1085

1085:                                             ; preds = %1078, %1068
  %1086 = phi i64 [ %1084, %1078 ], [ %1072, %1068 ]
  %1087 = icmp ult i64 %1086, %1075
  br i1 %1087, label %1088, label %1226

1088:                                             ; preds = %1085, %1088
  %1089 = phi i64 [ %1125, %1088 ], [ %1086, %1085 ]
  %1090 = load i8*, i8** %48, align 8, !alias.scope !501, !noalias !506
  %1091 = bitcast i8* %1090 to i32*
  %1092 = getelementptr inbounds i8, i8* %1090, i64 131072
  %1093 = bitcast i8* %1092 to i16*
  %1094 = getelementptr inbounds i8, i8* %1090, i64 196608
  %1095 = getelementptr inbounds i8, i8* %1090, i64 262144
  %1096 = bitcast i8* %1095 to %struct.BankH42*
  %1097 = and i64 %1089, %3
  %1098 = getelementptr inbounds i8, i8* %2, i64 %1097
  %1099 = bitcast i8* %1098 to i32*
  %1100 = load i32, i32* %1099, align 4, !alias.scope !509, !noalias !501
  %1101 = mul i32 %1100, 506832829
  %1102 = lshr i32 %1101, 17
  %1103 = zext i32 %1102 to i64
  %1104 = and i64 %1103, 511
  %1105 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 %1104
  %1106 = load i16, i16* %1105, align 2, !alias.scope !501, !noalias !506
  %1107 = add i16 %1106, 1
  store i16 %1107, i16* %1105, align 2, !alias.scope !501, !noalias !506
  %1108 = and i16 %1106, 511
  %1109 = zext i16 %1108 to i64
  %1110 = getelementptr inbounds i32, i32* %1091, i64 %1103
  %1111 = load i32, i32* %1110, align 4, !noalias !512
  %1112 = zext i32 %1111 to i64
  %1113 = sub i64 %1089, %1112
  %1114 = trunc i32 %1102 to i8
  %1115 = and i64 %1089, 65535
  %1116 = getelementptr inbounds i8, i8* %1094, i64 %1115
  store i8 %1114, i8* %1116, align 1, !noalias !512
  %1117 = icmp ult i64 %1113, 65535
  %1118 = select i1 %1117, i64 %1113, i64 65535
  %1119 = trunc i64 %1118 to i16
  %1120 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %1096, i64 %1104, i32 0, i64 %1109, i32 0
  store i16 %1119, i16* %1120, align 2, !noalias !512
  %1121 = getelementptr inbounds i16, i16* %1093, i64 %1103
  %1122 = load i16, i16* %1121, align 2, !noalias !512
  %1123 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %1096, i64 %1104, i32 0, i64 %1109, i32 1
  store i16 %1122, i16* %1123, align 2, !noalias !512
  %1124 = trunc i64 %1089 to i32
  store i32 %1124, i32* %1110, align 4, !noalias !512
  store i16 %1108, i16* %1121, align 2, !noalias !512
  %1125 = add nuw i64 %1089, 1
  %1126 = icmp eq i64 %1125, %1075
  br i1 %1126, label %1226, label %1088

1127:                                             ; preds = %443
  %1128 = add i64 %70, 1
  %1129 = add i64 %67, 1
  %1130 = icmp ugt i64 %1129, %69
  br i1 %1130, label %1131, label %1226

1131:                                             ; preds = %1127
  %1132 = add i64 %69, %56
  %1133 = icmp ugt i64 %1129, %1132
  br i1 %1133, label %1134, label %1180

1134:                                             ; preds = %1131
  %1135 = add i64 %67, 17
  %1136 = icmp ult i64 %1135, %57
  %1137 = select i1 %1136, i64 %1135, i64 %57
  %1138 = icmp ult i64 %1129, %1137
  br i1 %1138, label %1139, label %1226

1139:                                             ; preds = %1134, %1139
  %1140 = phi i64 [ %1178, %1139 ], [ %1129, %1134 ]
  %1141 = phi i64 [ %1177, %1139 ], [ %1128, %1134 ]
  %1142 = load i8*, i8** %48, align 8, !alias.scope !513, !noalias !516
  %1143 = bitcast i8* %1142 to i32*
  %1144 = getelementptr inbounds i8, i8* %1142, i64 131072
  %1145 = bitcast i8* %1144 to i16*
  %1146 = getelementptr inbounds i8, i8* %1142, i64 196608
  %1147 = getelementptr inbounds i8, i8* %1142, i64 262144
  %1148 = bitcast i8* %1147 to %struct.BankH42*
  %1149 = and i64 %1140, %3
  %1150 = getelementptr inbounds i8, i8* %2, i64 %1149
  %1151 = bitcast i8* %1150 to i32*
  %1152 = load i32, i32* %1151, align 4, !alias.scope !518, !noalias !513
  %1153 = mul i32 %1152, 506832829
  %1154 = lshr i32 %1153, 17
  %1155 = zext i32 %1154 to i64
  %1156 = and i64 %1155, 511
  %1157 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 %1156
  %1158 = load i16, i16* %1157, align 2, !alias.scope !513, !noalias !516
  %1159 = add i16 %1158, 1
  store i16 %1159, i16* %1157, align 2, !alias.scope !513, !noalias !516
  %1160 = and i16 %1158, 511
  %1161 = zext i16 %1160 to i64
  %1162 = getelementptr inbounds i32, i32* %1143, i64 %1155
  %1163 = load i32, i32* %1162, align 4, !noalias !521
  %1164 = zext i32 %1163 to i64
  %1165 = sub i64 %1140, %1164
  %1166 = trunc i32 %1154 to i8
  %1167 = and i64 %1140, 65535
  %1168 = getelementptr inbounds i8, i8* %1146, i64 %1167
  store i8 %1166, i8* %1168, align 1, !noalias !521
  %1169 = icmp ult i64 %1165, 65535
  %1170 = select i1 %1169, i64 %1165, i64 65535
  %1171 = trunc i64 %1170 to i16
  %1172 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %1148, i64 %1156, i32 0, i64 %1161, i32 0
  store i16 %1171, i16* %1172, align 2, !noalias !521
  %1173 = getelementptr inbounds i16, i16* %1145, i64 %1155
  %1174 = load i16, i16* %1173, align 2, !noalias !521
  %1175 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %1148, i64 %1156, i32 0, i64 %1161, i32 1
  store i16 %1174, i16* %1175, align 2, !noalias !521
  %1176 = trunc i64 %1140 to i32
  store i32 %1176, i32* %1162, align 4, !noalias !521
  store i16 %1160, i16* %1173, align 2, !noalias !521
  %1177 = add i64 %1141, 4
  %1178 = add i64 %1140, 4
  %1179 = icmp ult i64 %1178, %1137
  br i1 %1179, label %1139, label %1226

1180:                                             ; preds = %1131
  %1181 = add i64 %67, 9
  %1182 = icmp ult i64 %1181, %22
  %1183 = select i1 %1182, i64 %1181, i64 %22
  %1184 = icmp ult i64 %1129, %1183
  br i1 %1184, label %1185, label %1226

1185:                                             ; preds = %1180, %1185
  %1186 = phi i64 [ %1224, %1185 ], [ %1129, %1180 ]
  %1187 = phi i64 [ %1223, %1185 ], [ %1128, %1180 ]
  %1188 = load i8*, i8** %48, align 8, !alias.scope !522, !noalias !525
  %1189 = bitcast i8* %1188 to i32*
  %1190 = getelementptr inbounds i8, i8* %1188, i64 131072
  %1191 = bitcast i8* %1190 to i16*
  %1192 = getelementptr inbounds i8, i8* %1188, i64 196608
  %1193 = getelementptr inbounds i8, i8* %1188, i64 262144
  %1194 = bitcast i8* %1193 to %struct.BankH42*
  %1195 = and i64 %1186, %3
  %1196 = getelementptr inbounds i8, i8* %2, i64 %1195
  %1197 = bitcast i8* %1196 to i32*
  %1198 = load i32, i32* %1197, align 4, !alias.scope !527, !noalias !522
  %1199 = mul i32 %1198, 506832829
  %1200 = lshr i32 %1199, 17
  %1201 = zext i32 %1200 to i64
  %1202 = and i64 %1201, 511
  %1203 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 %1202
  %1204 = load i16, i16* %1203, align 2, !alias.scope !522, !noalias !525
  %1205 = add i16 %1204, 1
  store i16 %1205, i16* %1203, align 2, !alias.scope !522, !noalias !525
  %1206 = and i16 %1204, 511
  %1207 = zext i16 %1206 to i64
  %1208 = getelementptr inbounds i32, i32* %1189, i64 %1201
  %1209 = load i32, i32* %1208, align 4, !noalias !530
  %1210 = zext i32 %1209 to i64
  %1211 = sub i64 %1186, %1210
  %1212 = trunc i32 %1200 to i8
  %1213 = and i64 %1186, 65535
  %1214 = getelementptr inbounds i8, i8* %1192, i64 %1213
  store i8 %1212, i8* %1214, align 1, !noalias !530
  %1215 = icmp ult i64 %1211, 65535
  %1216 = select i1 %1215, i64 %1211, i64 65535
  %1217 = trunc i64 %1216 to i16
  %1218 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %1194, i64 %1202, i32 0, i64 %1207, i32 0
  store i16 %1217, i16* %1218, align 2, !noalias !530
  %1219 = getelementptr inbounds i16, i16* %1191, i64 %1201
  %1220 = load i16, i16* %1219, align 2, !noalias !530
  %1221 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %1194, i64 %1202, i32 0, i64 %1207, i32 1
  store i16 %1220, i16* %1221, align 2, !noalias !530
  %1222 = trunc i64 %1186 to i32
  store i32 %1222, i32* %1208, align 4, !noalias !530
  store i16 %1206, i16* %1219, align 2, !noalias !530
  %1223 = add i64 %1187, 2
  %1224 = add i64 %1186, 2
  %1225 = icmp ult i64 %1224, %1183
  br i1 %1225, label %1185, label %1226

1226:                                             ; preds = %1185, %1139, %1088, %1180, %1134, %1085, %1127
  %1227 = phi i64 [ %1128, %1127 ], [ 0, %1085 ], [ %1128, %1134 ], [ %1128, %1180 ], [ 0, %1088 ], [ %1177, %1139 ], [ %1223, %1185 ]
  %1228 = phi i64 [ %69, %1127 ], [ %865, %1085 ], [ %69, %1134 ], [ %69, %1180 ], [ %865, %1088 ], [ %69, %1139 ], [ %69, %1185 ]
  %1229 = phi %struct.Command* [ %68, %1127 ], [ %928, %1085 ], [ %68, %1134 ], [ %68, %1180 ], [ %928, %1088 ], [ %68, %1139 ], [ %68, %1185 ]
  %1230 = phi i64 [ %1129, %1127 ], [ %1073, %1085 ], [ %1129, %1134 ], [ %1129, %1180 ], [ %1073, %1088 ], [ %1178, %1139 ], [ %1224, %1185 ]
  %1231 = add i64 %1230, 4
  %1232 = icmp ult i64 %1231, %20
  %1233 = sub i64 %20, %1230
  br i1 %1232, label %65, label %1234

1234:                                             ; preds = %1226, %11
  %1235 = phi i64 [ %19, %11 ], [ %1227, %1226 ]
  %1236 = phi %struct.Command* [ %8, %11 ], [ %1229, %1226 ]
  %1237 = phi i64 [ %0, %11 ], [ %1233, %1226 ]
  %1238 = add i64 %1237, %1235
  store i64 %1238, i64* %7, align 8
  %1239 = ptrtoint %struct.Command* %1236 to i64
  %1240 = ptrtoint %struct.Command* %8 to i64
  %1241 = sub i64 %1239, %1240
  %1242 = ashr exact i64 %1241, 4
  %1243 = load i64, i64* %9, align 8
  %1244 = add i64 %1243, %1242
  store i64 %1244, i64* %9, align 8
  ret void

1245:                                             ; preds = %147
  %1246 = getelementptr inbounds i8, i8* %141, i64 1
  %1247 = getelementptr inbounds i8, i8* %118, i64 %148
  %1248 = load i8, i8* %1247, align 1, !alias.scope !468, !noalias !464
  %1249 = load i8, i8* %1246, align 1, !alias.scope !468, !noalias !464
  %1250 = icmp eq i8 %1248, %1249
  br i1 %1250, label %1251, label %149, !prof !15

1251:                                             ; preds = %1245
  %1252 = add i64 %140, 2
  br i1 %90, label %149, label %1253

1253:                                             ; preds = %1251
  %1254 = getelementptr inbounds i8, i8* %141, i64 2
  %1255 = getelementptr inbounds i8, i8* %118, i64 %1252
  %1256 = load i8, i8* %1255, align 1, !alias.scope !468, !noalias !464
  %1257 = load i8, i8* %1254, align 1, !alias.scope !468, !noalias !464
  %1258 = icmp eq i8 %1256, %1257
  br i1 %1258, label %1259, label %149, !prof !15

1259:                                             ; preds = %1253
  %1260 = add i64 %140, 3
  br i1 %91, label %149, label %1261

1261:                                             ; preds = %1259
  %1262 = getelementptr inbounds i8, i8* %141, i64 3
  %1263 = getelementptr inbounds i8, i8* %118, i64 %1260
  %1264 = load i8, i8* %1263, align 1, !alias.scope !468, !noalias !464
  %1265 = load i8, i8* %1262, align 1, !alias.scope !468, !noalias !464
  %1266 = icmp eq i8 %1264, %1265
  br i1 %1266, label %1267, label %149, !prof !15

1267:                                             ; preds = %1261
  %1268 = add i64 %140, 4
  br i1 %92, label %149, label %1269

1269:                                             ; preds = %1267
  %1270 = getelementptr inbounds i8, i8* %141, i64 4
  %1271 = getelementptr inbounds i8, i8* %118, i64 %1268
  %1272 = load i8, i8* %1271, align 1, !alias.scope !468, !noalias !464
  %1273 = load i8, i8* %1270, align 1, !alias.scope !468, !noalias !464
  %1274 = icmp eq i8 %1272, %1273
  br i1 %1274, label %1275, label %149, !prof !15

1275:                                             ; preds = %1269
  %1276 = add i64 %140, 5
  br i1 %93, label %149, label %1277

1277:                                             ; preds = %1275
  %1278 = getelementptr inbounds i8, i8* %141, i64 5
  %1279 = getelementptr inbounds i8, i8* %118, i64 %1276
  %1280 = load i8, i8* %1279, align 1, !alias.scope !468, !noalias !464
  %1281 = load i8, i8* %1278, align 1, !alias.scope !468, !noalias !464
  %1282 = icmp eq i8 %1280, %1281
  br i1 %1282, label %1283, label %149, !prof !15

1283:                                             ; preds = %1277
  %1284 = add i64 %140, 6
  br i1 %94, label %149, label %1285

1285:                                             ; preds = %1283
  %1286 = getelementptr inbounds i8, i8* %141, i64 6
  %1287 = getelementptr inbounds i8, i8* %118, i64 %1284
  %1288 = load i8, i8* %1287, align 1, !alias.scope !468, !noalias !464
  %1289 = load i8, i8* %1286, align 1, !alias.scope !468, !noalias !464
  %1290 = icmp eq i8 %1288, %1289
  %1291 = add i64 %140, 7
  %1292 = select i1 %1290, i64 %1291, i64 %1284, !prof !15
  br label %149

1293:                                             ; preds = %268
  %1294 = getelementptr inbounds i8, i8* %262, i64 1
  %1295 = getelementptr inbounds i8, i8* %239, i64 %269
  %1296 = load i8, i8* %1295, align 1, !alias.scope !468, !noalias !464
  %1297 = load i8, i8* %1294, align 1, !alias.scope !468, !noalias !464
  %1298 = icmp eq i8 %1296, %1297
  br i1 %1298, label %1299, label %270, !prof !15

1299:                                             ; preds = %1293
  %1300 = add i64 %261, 2
  br i1 %200, label %270, label %1301

1301:                                             ; preds = %1299
  %1302 = getelementptr inbounds i8, i8* %262, i64 2
  %1303 = getelementptr inbounds i8, i8* %239, i64 %1300
  %1304 = load i8, i8* %1303, align 1, !alias.scope !468, !noalias !464
  %1305 = load i8, i8* %1302, align 1, !alias.scope !468, !noalias !464
  %1306 = icmp eq i8 %1304, %1305
  br i1 %1306, label %1307, label %270, !prof !15

1307:                                             ; preds = %1301
  %1308 = add i64 %261, 3
  br i1 %201, label %270, label %1309

1309:                                             ; preds = %1307
  %1310 = getelementptr inbounds i8, i8* %262, i64 3
  %1311 = getelementptr inbounds i8, i8* %239, i64 %1308
  %1312 = load i8, i8* %1311, align 1, !alias.scope !468, !noalias !464
  %1313 = load i8, i8* %1310, align 1, !alias.scope !468, !noalias !464
  %1314 = icmp eq i8 %1312, %1313
  br i1 %1314, label %1315, label %270, !prof !15

1315:                                             ; preds = %1309
  %1316 = add i64 %261, 4
  br i1 %202, label %270, label %1317

1317:                                             ; preds = %1315
  %1318 = getelementptr inbounds i8, i8* %262, i64 4
  %1319 = getelementptr inbounds i8, i8* %239, i64 %1316
  %1320 = load i8, i8* %1319, align 1, !alias.scope !468, !noalias !464
  %1321 = load i8, i8* %1318, align 1, !alias.scope !468, !noalias !464
  %1322 = icmp eq i8 %1320, %1321
  br i1 %1322, label %1323, label %270, !prof !15

1323:                                             ; preds = %1317
  %1324 = add i64 %261, 5
  br i1 %203, label %270, label %1325

1325:                                             ; preds = %1323
  %1326 = getelementptr inbounds i8, i8* %262, i64 5
  %1327 = getelementptr inbounds i8, i8* %239, i64 %1324
  %1328 = load i8, i8* %1327, align 1, !alias.scope !468, !noalias !464
  %1329 = load i8, i8* %1326, align 1, !alias.scope !468, !noalias !464
  %1330 = icmp eq i8 %1328, %1329
  br i1 %1330, label %1331, label %270, !prof !15

1331:                                             ; preds = %1325
  %1332 = add i64 %261, 6
  br i1 %204, label %270, label %1333

1333:                                             ; preds = %1331
  %1334 = getelementptr inbounds i8, i8* %262, i64 6
  %1335 = getelementptr inbounds i8, i8* %239, i64 %1332
  %1336 = load i8, i8* %1335, align 1, !alias.scope !468, !noalias !464
  %1337 = load i8, i8* %1334, align 1, !alias.scope !468, !noalias !464
  %1338 = icmp eq i8 %1336, %1337
  %1339 = add i64 %261, 7
  %1340 = select i1 %1338, i64 %1339, i64 %1332, !prof !15
  br label %270

1341:                                             ; preds = %392
  %1342 = getelementptr inbounds i8, i8* %384, i64 1
  %1343 = getelementptr inbounds i8, i8* %79, i64 %393
  %1344 = load i8, i8* %1343, align 1, !alias.scope !468, !noalias !464
  %1345 = load i8, i8* %1342, align 1, !noalias !467
  %1346 = icmp eq i8 %1344, %1345
  br i1 %1346, label %1347, label %395, !prof !15

1347:                                             ; preds = %1341
  %1348 = add nuw nsw i64 %383, 2
  %1349 = icmp eq i64 %385, 2
  br i1 %1349, label %395, label %1350

1350:                                             ; preds = %1347
  %1351 = getelementptr inbounds i8, i8* %384, i64 2
  %1352 = getelementptr inbounds i8, i8* %79, i64 %1348
  %1353 = load i8, i8* %1352, align 1, !alias.scope !468, !noalias !464
  %1354 = load i8, i8* %1351, align 1, !noalias !467
  %1355 = icmp eq i8 %1353, %1354
  br i1 %1355, label %1356, label %395, !prof !15

1356:                                             ; preds = %1350
  %1357 = add nuw nsw i64 %383, 3
  %1358 = icmp eq i64 %385, 3
  br i1 %1358, label %395, label %1359

1359:                                             ; preds = %1356
  %1360 = getelementptr inbounds i8, i8* %384, i64 3
  %1361 = getelementptr inbounds i8, i8* %79, i64 %1357
  %1362 = load i8, i8* %1361, align 1, !alias.scope !468, !noalias !464
  %1363 = load i8, i8* %1360, align 1, !noalias !467
  %1364 = icmp eq i8 %1362, %1363
  br i1 %1364, label %1365, label %395, !prof !15

1365:                                             ; preds = %1359
  %1366 = add nuw nsw i64 %383, 4
  %1367 = icmp eq i64 %385, 4
  br i1 %1367, label %395, label %1368

1368:                                             ; preds = %1365
  %1369 = getelementptr inbounds i8, i8* %384, i64 4
  %1370 = getelementptr inbounds i8, i8* %79, i64 %1366
  %1371 = load i8, i8* %1370, align 1, !alias.scope !468, !noalias !464
  %1372 = load i8, i8* %1369, align 1, !noalias !467
  %1373 = icmp eq i8 %1371, %1372
  br i1 %1373, label %1374, label %395, !prof !15

1374:                                             ; preds = %1368
  %1375 = add nuw nsw i64 %383, 5
  %1376 = icmp eq i64 %385, 5
  br i1 %1376, label %395, label %1377

1377:                                             ; preds = %1374
  %1378 = getelementptr inbounds i8, i8* %384, i64 5
  %1379 = getelementptr inbounds i8, i8* %79, i64 %1375
  %1380 = load i8, i8* %1379, align 1, !alias.scope !468, !noalias !464
  %1381 = load i8, i8* %1378, align 1, !noalias !467
  %1382 = icmp eq i8 %1380, %1381
  br i1 %1382, label %1383, label %395, !prof !15

1383:                                             ; preds = %1377
  %1384 = add nuw nsw i64 %383, 6
  %1385 = icmp eq i64 %385, 6
  br i1 %1385, label %395, label %1386

1386:                                             ; preds = %1383
  %1387 = getelementptr inbounds i8, i8* %384, i64 6
  %1388 = getelementptr inbounds i8, i8* %79, i64 %1384
  %1389 = load i8, i8* %1388, align 1, !alias.scope !468, !noalias !464
  %1390 = load i8, i8* %1387, align 1, !noalias !467
  %1391 = icmp eq i8 %1389, %1390
  %1392 = add nuw nsw i64 %383, 7
  %1393 = select i1 %1391, i64 %1392, i64 %1384, !prof !15
  br label %395

1394:                                             ; preds = %544
  %1395 = getelementptr inbounds i8, i8* %538, i64 1
  %1396 = getelementptr inbounds i8, i8* %515, i64 %545
  %1397 = load i8, i8* %1396, align 1, !alias.scope !489, !noalias !485
  %1398 = load i8, i8* %1395, align 1, !alias.scope !489, !noalias !485
  %1399 = icmp eq i8 %1397, %1398
  br i1 %1399, label %1400, label %546, !prof !15

1400:                                             ; preds = %1394
  %1401 = add i64 %537, 2
  br i1 %487, label %546, label %1402

1402:                                             ; preds = %1400
  %1403 = getelementptr inbounds i8, i8* %538, i64 2
  %1404 = getelementptr inbounds i8, i8* %515, i64 %1401
  %1405 = load i8, i8* %1404, align 1, !alias.scope !489, !noalias !485
  %1406 = load i8, i8* %1403, align 1, !alias.scope !489, !noalias !485
  %1407 = icmp eq i8 %1405, %1406
  br i1 %1407, label %1408, label %546, !prof !15

1408:                                             ; preds = %1402
  %1409 = add i64 %537, 3
  br i1 %488, label %546, label %1410

1410:                                             ; preds = %1408
  %1411 = getelementptr inbounds i8, i8* %538, i64 3
  %1412 = getelementptr inbounds i8, i8* %515, i64 %1409
  %1413 = load i8, i8* %1412, align 1, !alias.scope !489, !noalias !485
  %1414 = load i8, i8* %1411, align 1, !alias.scope !489, !noalias !485
  %1415 = icmp eq i8 %1413, %1414
  br i1 %1415, label %1416, label %546, !prof !15

1416:                                             ; preds = %1410
  %1417 = add i64 %537, 4
  br i1 %489, label %546, label %1418

1418:                                             ; preds = %1416
  %1419 = getelementptr inbounds i8, i8* %538, i64 4
  %1420 = getelementptr inbounds i8, i8* %515, i64 %1417
  %1421 = load i8, i8* %1420, align 1, !alias.scope !489, !noalias !485
  %1422 = load i8, i8* %1419, align 1, !alias.scope !489, !noalias !485
  %1423 = icmp eq i8 %1421, %1422
  br i1 %1423, label %1424, label %546, !prof !15

1424:                                             ; preds = %1418
  %1425 = add i64 %537, 5
  br i1 %490, label %546, label %1426

1426:                                             ; preds = %1424
  %1427 = getelementptr inbounds i8, i8* %538, i64 5
  %1428 = getelementptr inbounds i8, i8* %515, i64 %1425
  %1429 = load i8, i8* %1428, align 1, !alias.scope !489, !noalias !485
  %1430 = load i8, i8* %1427, align 1, !alias.scope !489, !noalias !485
  %1431 = icmp eq i8 %1429, %1430
  br i1 %1431, label %1432, label %546, !prof !15

1432:                                             ; preds = %1426
  %1433 = add i64 %537, 6
  br i1 %491, label %546, label %1434

1434:                                             ; preds = %1432
  %1435 = getelementptr inbounds i8, i8* %538, i64 6
  %1436 = getelementptr inbounds i8, i8* %515, i64 %1433
  %1437 = load i8, i8* %1436, align 1, !alias.scope !489, !noalias !485
  %1438 = load i8, i8* %1435, align 1, !alias.scope !489, !noalias !485
  %1439 = icmp eq i8 %1437, %1438
  %1440 = add i64 %537, 7
  %1441 = select i1 %1439, i64 %1440, i64 %1433, !prof !15
  br label %546

1442:                                             ; preds = %665
  %1443 = getelementptr inbounds i8, i8* %659, i64 1
  %1444 = getelementptr inbounds i8, i8* %636, i64 %666
  %1445 = load i8, i8* %1444, align 1, !alias.scope !489, !noalias !485
  %1446 = load i8, i8* %1443, align 1, !alias.scope !489, !noalias !485
  %1447 = icmp eq i8 %1445, %1446
  br i1 %1447, label %1448, label %667, !prof !15

1448:                                             ; preds = %1442
  %1449 = add i64 %658, 2
  br i1 %597, label %667, label %1450

1450:                                             ; preds = %1448
  %1451 = getelementptr inbounds i8, i8* %659, i64 2
  %1452 = getelementptr inbounds i8, i8* %636, i64 %1449
  %1453 = load i8, i8* %1452, align 1, !alias.scope !489, !noalias !485
  %1454 = load i8, i8* %1451, align 1, !alias.scope !489, !noalias !485
  %1455 = icmp eq i8 %1453, %1454
  br i1 %1455, label %1456, label %667, !prof !15

1456:                                             ; preds = %1450
  %1457 = add i64 %658, 3
  br i1 %598, label %667, label %1458

1458:                                             ; preds = %1456
  %1459 = getelementptr inbounds i8, i8* %659, i64 3
  %1460 = getelementptr inbounds i8, i8* %636, i64 %1457
  %1461 = load i8, i8* %1460, align 1, !alias.scope !489, !noalias !485
  %1462 = load i8, i8* %1459, align 1, !alias.scope !489, !noalias !485
  %1463 = icmp eq i8 %1461, %1462
  br i1 %1463, label %1464, label %667, !prof !15

1464:                                             ; preds = %1458
  %1465 = add i64 %658, 4
  br i1 %599, label %667, label %1466

1466:                                             ; preds = %1464
  %1467 = getelementptr inbounds i8, i8* %659, i64 4
  %1468 = getelementptr inbounds i8, i8* %636, i64 %1465
  %1469 = load i8, i8* %1468, align 1, !alias.scope !489, !noalias !485
  %1470 = load i8, i8* %1467, align 1, !alias.scope !489, !noalias !485
  %1471 = icmp eq i8 %1469, %1470
  br i1 %1471, label %1472, label %667, !prof !15

1472:                                             ; preds = %1466
  %1473 = add i64 %658, 5
  br i1 %600, label %667, label %1474

1474:                                             ; preds = %1472
  %1475 = getelementptr inbounds i8, i8* %659, i64 5
  %1476 = getelementptr inbounds i8, i8* %636, i64 %1473
  %1477 = load i8, i8* %1476, align 1, !alias.scope !489, !noalias !485
  %1478 = load i8, i8* %1475, align 1, !alias.scope !489, !noalias !485
  %1479 = icmp eq i8 %1477, %1478
  br i1 %1479, label %1480, label %667, !prof !15

1480:                                             ; preds = %1474
  %1481 = add i64 %658, 6
  br i1 %601, label %667, label %1482

1482:                                             ; preds = %1480
  %1483 = getelementptr inbounds i8, i8* %659, i64 6
  %1484 = getelementptr inbounds i8, i8* %636, i64 %1481
  %1485 = load i8, i8* %1484, align 1, !alias.scope !489, !noalias !485
  %1486 = load i8, i8* %1483, align 1, !alias.scope !489, !noalias !485
  %1487 = icmp eq i8 %1485, %1486
  %1488 = add i64 %658, 7
  %1489 = select i1 %1487, i64 %1488, i64 %1481, !prof !15
  br label %667

1490:                                             ; preds = %789
  %1491 = getelementptr inbounds i8, i8* %781, i64 1
  %1492 = getelementptr inbounds i8, i8* %476, i64 %790
  %1493 = load i8, i8* %1492, align 1, !alias.scope !489, !noalias !485
  %1494 = load i8, i8* %1491, align 1, !noalias !488
  %1495 = icmp eq i8 %1493, %1494
  br i1 %1495, label %1496, label %792, !prof !15

1496:                                             ; preds = %1490
  %1497 = add nuw nsw i64 %780, 2
  %1498 = icmp eq i64 %782, 2
  br i1 %1498, label %792, label %1499

1499:                                             ; preds = %1496
  %1500 = getelementptr inbounds i8, i8* %781, i64 2
  %1501 = getelementptr inbounds i8, i8* %476, i64 %1497
  %1502 = load i8, i8* %1501, align 1, !alias.scope !489, !noalias !485
  %1503 = load i8, i8* %1500, align 1, !noalias !488
  %1504 = icmp eq i8 %1502, %1503
  br i1 %1504, label %1505, label %792, !prof !15

1505:                                             ; preds = %1499
  %1506 = add nuw nsw i64 %780, 3
  %1507 = icmp eq i64 %782, 3
  br i1 %1507, label %792, label %1508

1508:                                             ; preds = %1505
  %1509 = getelementptr inbounds i8, i8* %781, i64 3
  %1510 = getelementptr inbounds i8, i8* %476, i64 %1506
  %1511 = load i8, i8* %1510, align 1, !alias.scope !489, !noalias !485
  %1512 = load i8, i8* %1509, align 1, !noalias !488
  %1513 = icmp eq i8 %1511, %1512
  br i1 %1513, label %1514, label %792, !prof !15

1514:                                             ; preds = %1508
  %1515 = add nuw nsw i64 %780, 4
  %1516 = icmp eq i64 %782, 4
  br i1 %1516, label %792, label %1517

1517:                                             ; preds = %1514
  %1518 = getelementptr inbounds i8, i8* %781, i64 4
  %1519 = getelementptr inbounds i8, i8* %476, i64 %1515
  %1520 = load i8, i8* %1519, align 1, !alias.scope !489, !noalias !485
  %1521 = load i8, i8* %1518, align 1, !noalias !488
  %1522 = icmp eq i8 %1520, %1521
  br i1 %1522, label %1523, label %792, !prof !15

1523:                                             ; preds = %1517
  %1524 = add nuw nsw i64 %780, 5
  %1525 = icmp eq i64 %782, 5
  br i1 %1525, label %792, label %1526

1526:                                             ; preds = %1523
  %1527 = getelementptr inbounds i8, i8* %781, i64 5
  %1528 = getelementptr inbounds i8, i8* %476, i64 %1524
  %1529 = load i8, i8* %1528, align 1, !alias.scope !489, !noalias !485
  %1530 = load i8, i8* %1527, align 1, !noalias !488
  %1531 = icmp eq i8 %1529, %1530
  br i1 %1531, label %1532, label %792, !prof !15

1532:                                             ; preds = %1526
  %1533 = add nuw nsw i64 %780, 6
  %1534 = icmp eq i64 %782, 6
  br i1 %1534, label %792, label %1535

1535:                                             ; preds = %1532
  %1536 = getelementptr inbounds i8, i8* %781, i64 6
  %1537 = getelementptr inbounds i8, i8* %476, i64 %1533
  %1538 = load i8, i8* %1537, align 1, !alias.scope !489, !noalias !485
  %1539 = load i8, i8* %1536, align 1, !noalias !488
  %1540 = icmp eq i8 %1538, %1539
  %1541 = add nuw nsw i64 %780, 7
  %1542 = select i1 %1540, i64 %1541, i64 %1533, !prof !15
  br label %792
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH54(i64, i64, i8* nocapture readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* nocapture readonly, i32* nocapture, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = alloca [4 x i64], align 16
  %13 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = shl i64 1, %15
  %17 = add i64 %16, -16
  %18 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = load i64, i64* %7, align 8
  %21 = add i64 %1, %0
  %22 = icmp ugt i64 %0, 7
  %23 = add i64 %21, -7
  %24 = select i1 %22, i64 %23, i64 %1
  %25 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 9
  %28 = select i1 %27, i64 64, i64 512
  %29 = add i64 %1, 8
  %30 = icmp ult i64 %29, %21
  br i1 %30, label %31, label %791

31:                                               ; preds = %11
  %32 = add i64 %28, %1
  %33 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %34 = bitcast i16* %33 to i32**
  %35 = and i64 %3, 4294967295
  %36 = bitcast [4 x i64]* %12 to i8*
  %37 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0
  %38 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 1
  %39 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 3
  %40 = shl nuw nsw i64 %28, 2
  %41 = getelementptr inbounds i32, i32* %6, i64 1
  %42 = getelementptr inbounds i32, i32* %6, i64 2
  %43 = getelementptr inbounds i32, i32* %6, i64 3
  %44 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %45 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  %46 = bitcast i64* %38 to <2 x i64>*
  %47 = bitcast i64* %38 to <2 x i64>*
  br label %48

48:                                               ; preds = %31, %783
  %49 = phi i64 [ %0, %31 ], [ %790, %783 ]
  %50 = phi i64 [ %1, %31 ], [ %787, %783 ]
  %51 = phi %struct.Command* [ %8, %31 ], [ %786, %783 ]
  %52 = phi i64 [ %32, %31 ], [ %785, %783 ]
  %53 = phi i64 [ %20, %31 ], [ %784, %783 ]
  %54 = icmp ult i64 %50, %17
  %55 = select i1 %54, i64 %50, i64 %17
  %56 = load i32*, i32** %34, align 8, !alias.scope !531, !noalias !534
  %57 = and i64 %50, %3
  %58 = getelementptr inbounds i8, i8* %2, i64 %57
  %59 = load i8, i8* %58, align 1, !alias.scope !538, !noalias !539
  %60 = zext i8 %59 to i32
  %61 = bitcast i8* %58 to i64*
  %62 = load i64, i64* %61, align 8, !alias.scope !538, !noalias !539
  %63 = mul i64 %62, 3866266742567714048
  %64 = lshr i64 %63, 44
  %65 = load i32, i32* %6, align 4, !alias.scope !540, !noalias !541
  %66 = sext i32 %65 to i64
  %67 = sub i64 %50, %66
  %68 = icmp ult i64 %67, %50
  br i1 %68, label %69, label %129

69:                                               ; preds = %48
  %70 = and i64 %35, %67
  %71 = getelementptr inbounds i8, i8* %2, i64 %70
  %72 = load i8, i8* %71, align 1, !alias.scope !538, !noalias !539
  %73 = icmp eq i8 %59, %72
  br i1 %73, label %74, label %129

74:                                               ; preds = %69
  %75 = lshr i64 %49, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %104, label %77, !prof !13

77:                                               ; preds = %74
  %78 = bitcast i8* %71 to i64*
  %79 = load i64, i64* %78, align 8, !alias.scope !538, !noalias !539
  %80 = icmp eq i64 %62, %79
  br i1 %80, label %81, label %96, !prof !13

81:                                               ; preds = %77, %89
  %82 = phi i64 [ %86, %89 ], [ 0, %77 ]
  %83 = phi i8* [ %85, %89 ], [ %58, %77 ]
  %84 = phi i64 [ %87, %89 ], [ %75, %77 ]
  %85 = getelementptr inbounds i8, i8* %83, i64 8
  %86 = add nuw i64 %82, 8
  %87 = add nsw i64 %84, -1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %104, label %89, !prof !13

89:                                               ; preds = %81
  %90 = bitcast i8* %85 to i64*
  %91 = load i64, i64* %90, align 8, !alias.scope !538, !noalias !539
  %92 = getelementptr inbounds i8, i8* %71, i64 %86
  %93 = bitcast i8* %92 to i64*
  %94 = load i64, i64* %93, align 8, !alias.scope !538, !noalias !539
  %95 = icmp eq i64 %91, %94
  br i1 %95, label %81, label %96, !prof !13

96:                                               ; preds = %89, %77
  %97 = phi i64 [ %62, %77 ], [ %91, %89 ]
  %98 = phi i64 [ 0, %77 ], [ %86, %89 ]
  %99 = phi i64 [ %79, %77 ], [ %94, %89 ]
  %100 = xor i64 %99, %97
  %101 = tail call i64 @llvm.cttz.i64(i64 %100, i1 true) #4, !range !14
  %102 = lshr i64 %101, 3
  %103 = or i64 %102, %98
  br label %117

104:                                              ; preds = %81, %74
  %105 = phi i64 [ 0, %74 ], [ %86, %81 ]
  %106 = phi i8* [ %58, %74 ], [ %85, %81 ]
  %107 = and i64 %49, 7
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds i8, i8* %71, i64 %105
  %111 = load i8, i8* %110, align 1, !alias.scope !538, !noalias !539
  %112 = load i8, i8* %106, align 1, !alias.scope !538, !noalias !539
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %114, label %117, !prof !15

114:                                              ; preds = %109
  %115 = add i64 %105, 1
  %116 = icmp eq i64 %107, 1
  br i1 %116, label %117, label %802

117:                                              ; preds = %847, %114, %109, %802, %808, %811, %817, %820, %826, %829, %835, %838, %844, %104, %96
  %118 = phi i64 [ %103, %96 ], [ %105, %104 ], [ %105, %109 ], [ %115, %114 ], [ %115, %802 ], [ %809, %808 ], [ %809, %811 ], [ %818, %817 ], [ %818, %820 ], [ %827, %826 ], [ %827, %829 ], [ %836, %835 ], [ %836, %838 ], [ %845, %844 ], [ %854, %847 ]
  %119 = icmp ugt i64 %118, 3
  br i1 %119, label %120, label %129

120:                                              ; preds = %117
  %121 = mul i64 %118, 135
  %122 = add i64 %121, 1935
  %123 = icmp ugt i64 %122, 2020
  br i1 %123, label %124, label %129

124:                                              ; preds = %120
  %125 = add i64 %118, %57
  %126 = getelementptr inbounds i8, i8* %2, i64 %125
  %127 = load i8, i8* %126, align 1, !alias.scope !538, !noalias !539
  %128 = zext i8 %127 to i32
  br label %129

129:                                              ; preds = %124, %120, %117, %69, %48
  %130 = phi i64 [ %122, %124 ], [ 2020, %120 ], [ 2020, %117 ], [ 2020, %69 ], [ 2020, %48 ]
  %131 = phi i64 [ %66, %124 ], [ 0, %120 ], [ 0, %117 ], [ 0, %69 ], [ 0, %48 ]
  %132 = phi i64 [ %118, %124 ], [ 0, %120 ], [ 0, %117 ], [ 0, %69 ], [ 0, %48 ]
  %133 = phi i32 [ %128, %124 ], [ %60, %120 ], [ %60, %117 ], [ %60, %69 ], [ %60, %48 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #4, !noalias !542
  store i64 %64, i64* %37, align 16, !noalias !542
  %134 = insertelement <2 x i64> undef, i64 %64, i32 0
  %135 = shufflevector <2 x i64> %134, <2 x i64> undef, <2 x i32> zeroinitializer
  %136 = add nuw nsw <2 x i64> %135, <i64 8, i64 16>
  %137 = and <2 x i64> %136, <i64 1048575, i64 1048575>
  store <2 x i64> %137, <2 x i64>* %46, align 8, !noalias !542
  %138 = add nuw nsw i64 %64, 24
  %139 = and i64 %138, 1048575
  store i64 %139, i64* %39, align 8, !noalias !542
  %140 = lshr i64 %50, 3
  %141 = and i64 %140, 3
  %142 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %141
  %143 = load i64, i64* %142, align 8, !noalias !542
  %144 = lshr i64 %49, 3
  %145 = icmp eq i64 %144, 0
  %146 = and i64 %49, 7
  %147 = icmp eq i64 %146, 0
  %148 = icmp eq i64 %146, 1
  %149 = icmp eq i64 %146, 2
  %150 = icmp eq i64 %146, 3
  %151 = icmp eq i64 %146, 4
  %152 = icmp eq i64 %146, 5
  %153 = icmp eq i64 %146, 6
  br label %154

154:                                              ; preds = %235, %129
  %155 = phi i64 [ %130, %129 ], [ %227, %235 ]
  %156 = phi i64 [ %131, %129 ], [ %228, %235 ]
  %157 = phi i64 [ %132, %129 ], [ %229, %235 ]
  %158 = phi i64 [ %64, %129 ], [ %237, %235 ]
  %159 = phi i64 [ 0, %129 ], [ %233, %235 ]
  %160 = phi i64 [ %132, %129 ], [ %232, %235 ]
  %161 = phi i64 [ %130, %129 ], [ %231, %235 ]
  %162 = phi i32 [ %133, %129 ], [ %230, %235 ]
  %163 = getelementptr inbounds i32, i32* %56, i64 %158
  %164 = load i32, i32* %163, align 4, !noalias !542
  %165 = zext i32 %164 to i64
  %166 = sub i64 %50, %165
  %167 = and i64 %165, %3
  %168 = add i64 %167, %160
  %169 = getelementptr inbounds i8, i8* %2, i64 %168
  %170 = load i8, i8* %169, align 1, !alias.scope !538, !noalias !539
  %171 = zext i8 %170 to i32
  %172 = icmp eq i32 %162, %171
  %173 = add i64 %166, -1
  %174 = icmp ult i64 %173, %55
  %175 = and i1 %172, %174
  br i1 %175, label %176, label %226, !prof !17

176:                                              ; preds = %154
  %177 = getelementptr inbounds i8, i8* %2, i64 %167
  br i1 %145, label %198, label %178, !prof !13

178:                                              ; preds = %176, %188
  %179 = phi i64 [ %191, %188 ], [ %144, %176 ]
  %180 = phi i8* [ %189, %188 ], [ %58, %176 ]
  %181 = phi i64 [ %190, %188 ], [ 0, %176 ]
  %182 = bitcast i8* %180 to i64*
  %183 = load i64, i64* %182, align 8, !alias.scope !538, !noalias !539
  %184 = getelementptr inbounds i8, i8* %177, i64 %181
  %185 = bitcast i8* %184 to i64*
  %186 = load i64, i64* %185, align 8, !alias.scope !538, !noalias !539
  %187 = icmp eq i64 %183, %186
  br i1 %187, label %188, label %193, !prof !13

188:                                              ; preds = %178
  %189 = getelementptr inbounds i8, i8* %180, i64 8
  %190 = add nuw i64 %181, 8
  %191 = add nsw i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %198, label %178, !prof !13

193:                                              ; preds = %178
  %194 = xor i64 %186, %183
  %195 = tail call i64 @llvm.cttz.i64(i64 %194, i1 true) #4, !range !14
  %196 = lshr i64 %195, 3
  %197 = or i64 %196, %181
  br label %208

198:                                              ; preds = %188, %176
  %199 = phi i64 [ 0, %176 ], [ %190, %188 ]
  %200 = phi i8* [ %58, %176 ], [ %189, %188 ]
  br i1 %147, label %208, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds i8, i8* %177, i64 %199
  %203 = load i8, i8* %202, align 1, !alias.scope !538, !noalias !539
  %204 = load i8, i8* %200, align 1, !alias.scope !538, !noalias !539
  %205 = icmp eq i8 %203, %204
  br i1 %205, label %206, label %208, !prof !15

206:                                              ; preds = %201
  %207 = add i64 %199, 1
  br i1 %148, label %208, label %855

208:                                              ; preds = %895, %206, %201, %855, %861, %863, %869, %871, %877, %879, %885, %887, %893, %198, %193
  %209 = phi i64 [ %197, %193 ], [ %199, %198 ], [ %199, %201 ], [ %207, %206 ], [ %207, %855 ], [ %862, %861 ], [ %862, %863 ], [ %870, %869 ], [ %870, %871 ], [ %878, %877 ], [ %878, %879 ], [ %886, %885 ], [ %886, %887 ], [ %894, %893 ], [ %902, %895 ]
  %210 = icmp ugt i64 %209, 3
  br i1 %210, label %211, label %226

211:                                              ; preds = %208
  %212 = mul i64 %209, 135
  %213 = trunc i64 %166 to i32
  %214 = tail call i32 @llvm.ctlz.i32(i32 %213, i1 true) #4, !range !18
  %215 = xor i32 %214, 31
  %216 = mul nsw i32 %215, -30
  %217 = add nsw i32 %216, 1920
  %218 = zext i32 %217 to i64
  %219 = add i64 %212, %218
  %220 = icmp ult i64 %161, %219
  br i1 %220, label %221, label %226

221:                                              ; preds = %211
  %222 = add i64 %209, %57
  %223 = getelementptr inbounds i8, i8* %2, i64 %222
  %224 = load i8, i8* %223, align 1, !alias.scope !538, !noalias !539
  %225 = zext i8 %224 to i32
  br label %226

226:                                              ; preds = %221, %211, %208, %154
  %227 = phi i64 [ %219, %221 ], [ %155, %211 ], [ %155, %208 ], [ %155, %154 ]
  %228 = phi i64 [ %166, %221 ], [ %156, %211 ], [ %156, %208 ], [ %156, %154 ]
  %229 = phi i64 [ %209, %221 ], [ %157, %211 ], [ %157, %208 ], [ %157, %154 ]
  %230 = phi i32 [ %225, %221 ], [ %162, %211 ], [ %162, %208 ], [ %162, %154 ]
  %231 = phi i64 [ %219, %221 ], [ %161, %211 ], [ %161, %208 ], [ %161, %154 ]
  %232 = phi i64 [ %209, %221 ], [ %160, %211 ], [ %160, %208 ], [ %160, %154 ]
  %233 = add nuw nsw i64 %159, 1
  %234 = icmp eq i64 %233, 4
  br i1 %234, label %238, label %235

235:                                              ; preds = %226
  %236 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %233
  %237 = load i64, i64* %236, align 8, !noalias !542
  br label %154

238:                                              ; preds = %226
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #4, !noalias !542
  %239 = trunc i64 %50 to i32
  %240 = getelementptr inbounds i32, i32* %56, i64 %143
  store i32 %239, i32* %240, align 4, !noalias !542
  %241 = icmp ugt i64 %227, 2020
  br i1 %241, label %242, label %728

242:                                              ; preds = %238, %453
  %243 = phi i64 [ %437, %453 ], [ %227, %238 ]
  %244 = phi i64 [ %438, %453 ], [ %228, %238 ]
  %245 = phi i64 [ %439, %453 ], [ %229, %238 ]
  %246 = phi i64 [ %454, %453 ], [ %53, %238 ]
  %247 = phi i64 [ %250, %453 ], [ %49, %238 ]
  %248 = phi i32 [ %455, %453 ], [ 0, %238 ]
  %249 = phi i64 [ %259, %453 ], [ %50, %238 ]
  %250 = add i64 %247, -1
  %251 = load i32, i32* %25, align 4
  %252 = icmp slt i32 %251, 5
  br i1 %252, label %253, label %257

253:                                              ; preds = %242
  %254 = add i64 %245, -1
  %255 = icmp ult i64 %254, %250
  %256 = select i1 %255, i64 %254, i64 %250
  br label %257

257:                                              ; preds = %242, %253
  %258 = phi i64 [ %256, %253 ], [ 0, %242 ]
  %259 = add i64 %249, 1
  %260 = icmp ult i64 %259, %17
  %261 = select i1 %260, i64 %259, i64 %17
  %262 = load i32*, i32** %34, align 8, !alias.scope !543, !noalias !546
  %263 = and i64 %259, %3
  %264 = add i64 %258, %263
  %265 = getelementptr inbounds i8, i8* %2, i64 %264
  %266 = load i8, i8* %265, align 1, !alias.scope !550, !noalias !551
  %267 = zext i8 %266 to i32
  %268 = getelementptr inbounds i8, i8* %2, i64 %263
  %269 = bitcast i8* %268 to i64*
  %270 = load i64, i64* %269, align 8, !alias.scope !550, !noalias !551
  %271 = mul i64 %270, 3866266742567714048
  %272 = lshr i64 %271, 44
  %273 = load i32, i32* %6, align 4, !alias.scope !552, !noalias !553
  %274 = sext i32 %273 to i64
  %275 = sub i64 %259, %274
  %276 = icmp ult i64 %275, %259
  br i1 %276, label %277, label %339

277:                                              ; preds = %257
  %278 = and i64 %35, %275
  %279 = add i64 %278, %258
  %280 = getelementptr inbounds i8, i8* %2, i64 %279
  %281 = load i8, i8* %280, align 1, !alias.scope !550, !noalias !551
  %282 = icmp eq i8 %266, %281
  br i1 %282, label %283, label %339

283:                                              ; preds = %277
  %284 = getelementptr inbounds i8, i8* %2, i64 %278
  %285 = lshr i64 %250, 3
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %314, label %287, !prof !13

287:                                              ; preds = %283
  %288 = bitcast i8* %284 to i64*
  %289 = load i64, i64* %288, align 8, !alias.scope !550, !noalias !551
  %290 = icmp eq i64 %270, %289
  br i1 %290, label %291, label %306, !prof !13

291:                                              ; preds = %287, %299
  %292 = phi i64 [ %296, %299 ], [ 0, %287 ]
  %293 = phi i8* [ %295, %299 ], [ %268, %287 ]
  %294 = phi i64 [ %297, %299 ], [ %285, %287 ]
  %295 = getelementptr inbounds i8, i8* %293, i64 8
  %296 = add nuw i64 %292, 8
  %297 = add nsw i64 %294, -1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %314, label %299, !prof !13

299:                                              ; preds = %291
  %300 = bitcast i8* %295 to i64*
  %301 = load i64, i64* %300, align 8, !alias.scope !550, !noalias !551
  %302 = getelementptr inbounds i8, i8* %284, i64 %296
  %303 = bitcast i8* %302 to i64*
  %304 = load i64, i64* %303, align 8, !alias.scope !550, !noalias !551
  %305 = icmp eq i64 %301, %304
  br i1 %305, label %291, label %306, !prof !13

306:                                              ; preds = %299, %287
  %307 = phi i64 [ %270, %287 ], [ %301, %299 ]
  %308 = phi i64 [ 0, %287 ], [ %296, %299 ]
  %309 = phi i64 [ %289, %287 ], [ %304, %299 ]
  %310 = xor i64 %309, %307
  %311 = tail call i64 @llvm.cttz.i64(i64 %310, i1 true) #4, !range !14
  %312 = lshr i64 %311, 3
  %313 = or i64 %312, %308
  br label %327

314:                                              ; preds = %291, %283
  %315 = phi i64 [ 0, %283 ], [ %296, %291 ]
  %316 = phi i8* [ %268, %283 ], [ %295, %291 ]
  %317 = and i64 %250, 7
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %327, label %319

319:                                              ; preds = %314
  %320 = getelementptr inbounds i8, i8* %284, i64 %315
  %321 = load i8, i8* %320, align 1, !alias.scope !550, !noalias !551
  %322 = load i8, i8* %316, align 1, !alias.scope !550, !noalias !551
  %323 = icmp eq i8 %321, %322
  br i1 %323, label %324, label %327, !prof !15

324:                                              ; preds = %319
  %325 = add i64 %315, 1
  %326 = icmp eq i64 %317, 1
  br i1 %326, label %327, label %903

327:                                              ; preds = %948, %324, %319, %903, %909, %912, %918, %921, %927, %930, %936, %939, %945, %314, %306
  %328 = phi i64 [ %313, %306 ], [ %315, %314 ], [ %315, %319 ], [ %325, %324 ], [ %325, %903 ], [ %910, %909 ], [ %910, %912 ], [ %919, %918 ], [ %919, %921 ], [ %928, %927 ], [ %928, %930 ], [ %937, %936 ], [ %937, %939 ], [ %946, %945 ], [ %955, %948 ]
  %329 = icmp ugt i64 %328, 3
  br i1 %329, label %330, label %339

330:                                              ; preds = %327
  %331 = mul i64 %328, 135
  %332 = add i64 %331, 1935
  %333 = icmp ugt i64 %332, 2020
  br i1 %333, label %334, label %339

334:                                              ; preds = %330
  %335 = add i64 %328, %263
  %336 = getelementptr inbounds i8, i8* %2, i64 %335
  %337 = load i8, i8* %336, align 1, !alias.scope !550, !noalias !551
  %338 = zext i8 %337 to i32
  br label %339

339:                                              ; preds = %334, %330, %327, %277, %257
  %340 = phi i64 [ %332, %334 ], [ 2020, %330 ], [ 2020, %327 ], [ 2020, %277 ], [ 2020, %257 ]
  %341 = phi i64 [ %274, %334 ], [ 0, %330 ], [ 0, %327 ], [ 0, %277 ], [ 0, %257 ]
  %342 = phi i64 [ %328, %334 ], [ %258, %330 ], [ %258, %327 ], [ %258, %277 ], [ %258, %257 ]
  %343 = phi i32 [ %338, %334 ], [ %267, %330 ], [ %267, %327 ], [ %267, %277 ], [ %267, %257 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #4, !noalias !554
  store i64 %272, i64* %37, align 16, !noalias !554
  %344 = insertelement <2 x i64> undef, i64 %272, i32 0
  %345 = shufflevector <2 x i64> %344, <2 x i64> undef, <2 x i32> zeroinitializer
  %346 = add nuw nsw <2 x i64> %345, <i64 8, i64 16>
  %347 = and <2 x i64> %346, <i64 1048575, i64 1048575>
  store <2 x i64> %347, <2 x i64>* %47, align 8, !noalias !554
  %348 = add nuw nsw i64 %272, 24
  %349 = and i64 %348, 1048575
  store i64 %349, i64* %39, align 8, !noalias !554
  %350 = lshr i64 %259, 3
  %351 = and i64 %350, 3
  %352 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %351
  %353 = load i64, i64* %352, align 8, !noalias !554
  %354 = lshr i64 %250, 3
  %355 = icmp eq i64 %354, 0
  %356 = and i64 %250, 7
  %357 = icmp eq i64 %356, 0
  %358 = icmp eq i64 %356, 1
  %359 = icmp eq i64 %356, 2
  %360 = icmp eq i64 %356, 3
  %361 = icmp eq i64 %356, 4
  %362 = icmp eq i64 %356, 5
  %363 = icmp eq i64 %356, 6
  br label %364

364:                                              ; preds = %445, %339
  %365 = phi i64 [ %340, %339 ], [ %437, %445 ]
  %366 = phi i64 [ %341, %339 ], [ %438, %445 ]
  %367 = phi i64 [ %342, %339 ], [ %439, %445 ]
  %368 = phi i64 [ %272, %339 ], [ %447, %445 ]
  %369 = phi i64 [ 0, %339 ], [ %443, %445 ]
  %370 = phi i64 [ %342, %339 ], [ %442, %445 ]
  %371 = phi i64 [ %340, %339 ], [ %441, %445 ]
  %372 = phi i32 [ %343, %339 ], [ %440, %445 ]
  %373 = getelementptr inbounds i32, i32* %262, i64 %368
  %374 = load i32, i32* %373, align 4, !noalias !554
  %375 = zext i32 %374 to i64
  %376 = sub i64 %259, %375
  %377 = and i64 %375, %3
  %378 = add i64 %377, %370
  %379 = getelementptr inbounds i8, i8* %2, i64 %378
  %380 = load i8, i8* %379, align 1, !alias.scope !550, !noalias !551
  %381 = zext i8 %380 to i32
  %382 = icmp eq i32 %372, %381
  %383 = add i64 %376, -1
  %384 = icmp ult i64 %383, %261
  %385 = and i1 %382, %384
  br i1 %385, label %386, label %436, !prof !17

386:                                              ; preds = %364
  %387 = getelementptr inbounds i8, i8* %2, i64 %377
  br i1 %355, label %408, label %388, !prof !13

388:                                              ; preds = %386, %398
  %389 = phi i64 [ %401, %398 ], [ %354, %386 ]
  %390 = phi i8* [ %399, %398 ], [ %268, %386 ]
  %391 = phi i64 [ %400, %398 ], [ 0, %386 ]
  %392 = bitcast i8* %390 to i64*
  %393 = load i64, i64* %392, align 8, !alias.scope !550, !noalias !551
  %394 = getelementptr inbounds i8, i8* %387, i64 %391
  %395 = bitcast i8* %394 to i64*
  %396 = load i64, i64* %395, align 8, !alias.scope !550, !noalias !551
  %397 = icmp eq i64 %393, %396
  br i1 %397, label %398, label %403, !prof !13

398:                                              ; preds = %388
  %399 = getelementptr inbounds i8, i8* %390, i64 8
  %400 = add nuw i64 %391, 8
  %401 = add nsw i64 %389, -1
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %408, label %388, !prof !13

403:                                              ; preds = %388
  %404 = xor i64 %396, %393
  %405 = tail call i64 @llvm.cttz.i64(i64 %404, i1 true) #4, !range !14
  %406 = lshr i64 %405, 3
  %407 = or i64 %406, %391
  br label %418

408:                                              ; preds = %398, %386
  %409 = phi i64 [ 0, %386 ], [ %400, %398 ]
  %410 = phi i8* [ %268, %386 ], [ %399, %398 ]
  br i1 %357, label %418, label %411

411:                                              ; preds = %408
  %412 = getelementptr inbounds i8, i8* %387, i64 %409
  %413 = load i8, i8* %412, align 1, !alias.scope !550, !noalias !551
  %414 = load i8, i8* %410, align 1, !alias.scope !550, !noalias !551
  %415 = icmp eq i8 %413, %414
  br i1 %415, label %416, label %418, !prof !15

416:                                              ; preds = %411
  %417 = add i64 %409, 1
  br i1 %358, label %418, label %956

418:                                              ; preds = %996, %416, %411, %956, %962, %964, %970, %972, %978, %980, %986, %988, %994, %408, %403
  %419 = phi i64 [ %407, %403 ], [ %409, %408 ], [ %409, %411 ], [ %417, %416 ], [ %417, %956 ], [ %963, %962 ], [ %963, %964 ], [ %971, %970 ], [ %971, %972 ], [ %979, %978 ], [ %979, %980 ], [ %987, %986 ], [ %987, %988 ], [ %995, %994 ], [ %1003, %996 ]
  %420 = icmp ugt i64 %419, 3
  br i1 %420, label %421, label %436

421:                                              ; preds = %418
  %422 = mul i64 %419, 135
  %423 = trunc i64 %376 to i32
  %424 = tail call i32 @llvm.ctlz.i32(i32 %423, i1 true) #4, !range !18
  %425 = xor i32 %424, 31
  %426 = mul nsw i32 %425, -30
  %427 = add nsw i32 %426, 1920
  %428 = zext i32 %427 to i64
  %429 = add i64 %422, %428
  %430 = icmp ult i64 %371, %429
  br i1 %430, label %431, label %436

431:                                              ; preds = %421
  %432 = add i64 %419, %263
  %433 = getelementptr inbounds i8, i8* %2, i64 %432
  %434 = load i8, i8* %433, align 1, !alias.scope !550, !noalias !551
  %435 = zext i8 %434 to i32
  br label %436

436:                                              ; preds = %431, %421, %418, %364
  %437 = phi i64 [ %429, %431 ], [ %365, %421 ], [ %365, %418 ], [ %365, %364 ]
  %438 = phi i64 [ %376, %431 ], [ %366, %421 ], [ %366, %418 ], [ %366, %364 ]
  %439 = phi i64 [ %419, %431 ], [ %367, %421 ], [ %367, %418 ], [ %367, %364 ]
  %440 = phi i32 [ %435, %431 ], [ %372, %421 ], [ %372, %418 ], [ %372, %364 ]
  %441 = phi i64 [ %429, %431 ], [ %371, %421 ], [ %371, %418 ], [ %371, %364 ]
  %442 = phi i64 [ %419, %431 ], [ %370, %421 ], [ %370, %418 ], [ %370, %364 ]
  %443 = add nuw nsw i64 %369, 1
  %444 = icmp eq i64 %443, 4
  br i1 %444, label %448, label %445

445:                                              ; preds = %436
  %446 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %443
  %447 = load i64, i64* %446, align 8, !noalias !554
  br label %364

448:                                              ; preds = %436
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #4, !noalias !554
  %449 = trunc i64 %259 to i32
  %450 = getelementptr inbounds i32, i32* %262, i64 %353
  store i32 %449, i32* %450, align 4, !noalias !554
  %451 = add i64 %243, 175
  %452 = icmp ult i64 %437, %451
  br i1 %452, label %460, label %453

453:                                              ; preds = %448
  %454 = add i64 %246, 1
  %455 = add nuw nsw i32 %248, 1
  %456 = icmp ult i32 %455, 4
  %457 = add i64 %249, 9
  %458 = icmp ult i64 %457, %21
  %459 = and i1 %456, %458
  br i1 %459, label %242, label %460

460:                                              ; preds = %453, %448
  %461 = phi i64 [ %244, %448 ], [ %438, %453 ]
  %462 = phi i64 [ %245, %448 ], [ %439, %453 ]
  %463 = phi i64 [ %246, %448 ], [ %454, %453 ]
  %464 = phi i64 [ %249, %448 ], [ %259, %453 ]
  %465 = shl i64 %462, 1
  %466 = add i64 %465, %28
  %467 = add i64 %466, %464
  %468 = add i64 %464, %19
  %469 = icmp ult i64 %468, %17
  %470 = select i1 %469, i64 %468, i64 %17
  %471 = icmp ugt i64 %461, %470
  br i1 %471, label %507, label %472

472:                                              ; preds = %460
  %473 = add i64 %461, 3
  %474 = load i32, i32* %6, align 4
  %475 = sext i32 %474 to i64
  %476 = sub i64 %473, %475
  %477 = load i32, i32* %41, align 4
  %478 = sext i32 %477 to i64
  %479 = sub i64 %473, %478
  %480 = icmp eq i64 %461, %475
  br i1 %480, label %519, label %481

481:                                              ; preds = %472
  %482 = icmp eq i64 %461, %478
  br i1 %482, label %509, label %483

483:                                              ; preds = %481
  %484 = icmp ult i64 %476, 7
  br i1 %484, label %485, label %491

485:                                              ; preds = %483
  %486 = trunc i64 %476 to i32
  %487 = shl i32 %486, 2
  %488 = lshr i32 158663784, %487
  %489 = and i32 %488, 15
  %490 = zext i32 %489 to i64
  br label %509

491:                                              ; preds = %483
  %492 = icmp ult i64 %479, 7
  br i1 %492, label %493, label %499

493:                                              ; preds = %491
  %494 = trunc i64 %479 to i32
  %495 = shl i32 %494, 2
  %496 = lshr i32 266017486, %495
  %497 = and i32 %496, 15
  %498 = zext i32 %497 to i64
  br label %509

499:                                              ; preds = %491
  %500 = load i32, i32* %42, align 4
  %501 = sext i32 %500 to i64
  %502 = icmp eq i64 %461, %501
  br i1 %502, label %509, label %503

503:                                              ; preds = %499
  %504 = load i32, i32* %43, align 4
  %505 = sext i32 %504 to i64
  %506 = icmp eq i64 %461, %505
  br i1 %506, label %509, label %507

507:                                              ; preds = %503, %460
  %508 = add i64 %461, 15
  br label %509

509:                                              ; preds = %481, %485, %493, %499, %503, %507
  %510 = phi i64 [ %508, %507 ], [ 3, %503 ], [ 2, %499 ], [ 1, %481 ], [ %498, %493 ], [ %490, %485 ]
  %511 = icmp ule i64 %461, %470
  %512 = icmp ne i64 %510, 0
  %513 = and i1 %511, %512
  br i1 %513, label %514, label %519

514:                                              ; preds = %509
  %515 = load i32, i32* %42, align 4
  store i32 %515, i32* %43, align 4
  %516 = load i32, i32* %41, align 4
  store i32 %516, i32* %42, align 4
  %517 = load i32, i32* %6, align 4
  store i32 %517, i32* %41, align 4
  %518 = trunc i64 %461 to i32
  store i32 %518, i32* %6, align 4
  br label %519

519:                                              ; preds = %472, %514, %509
  %520 = phi i64 [ %510, %514 ], [ %510, %509 ], [ 0, %472 ]
  %521 = getelementptr inbounds %struct.Command, %struct.Command* %51, i64 1
  %522 = trunc i64 %463 to i32
  %523 = getelementptr inbounds %struct.Command, %struct.Command* %51, i64 0, i32 0
  store i32 %522, i32* %523, align 4
  %524 = trunc i64 %462 to i32
  %525 = getelementptr inbounds %struct.Command, %struct.Command* %51, i64 0, i32 1
  store i32 %524, i32* %525, align 4
  %526 = load i32, i32* %44, align 4
  %527 = zext i32 %526 to i64
  %528 = load i32, i32* %45, align 8
  %529 = zext i32 %528 to i64
  %530 = getelementptr inbounds %struct.Command, %struct.Command* %51, i64 0, i32 4
  %531 = getelementptr inbounds %struct.Command, %struct.Command* %51, i64 0, i32 2
  %532 = add nuw nsw i64 %527, 16
  %533 = icmp ugt i64 %532, %520
  br i1 %533, label %534, label %536

534:                                              ; preds = %519
  %535 = trunc i64 %520 to i16
  store i16 %535, i16* %530, align 2
  br label %566

536:                                              ; preds = %519
  %537 = shl i64 4, %529
  %538 = add i64 %520, -16
  %539 = sub i64 %538, %527
  %540 = add i64 %539, %537
  %541 = trunc i64 %540 to i32
  %542 = tail call i32 @llvm.ctlz.i32(i32 %541, i1 true) #4, !range !18
  %543 = sub nsw i32 30, %542
  %544 = zext i32 %543 to i64
  %545 = shl nsw i32 -1, %528
  %546 = xor i32 %545, 65535
  %547 = zext i32 %546 to i64
  %548 = and i64 %540, %547
  %549 = lshr i64 %540, %544
  %550 = and i64 %549, 1
  %551 = or i64 %550, 2
  %552 = shl i64 %551, %544
  %553 = sub nsw i64 %544, %529
  %554 = shl nsw i64 %553, 10
  %555 = shl nsw i64 %553, 1
  %556 = add nsw i64 %555, -2
  %557 = or i64 %556, %550
  %558 = shl i64 %557, %529
  %559 = add nuw nsw i64 %548, %532
  %560 = add i64 %559, %558
  %561 = or i64 %560, %554
  %562 = trunc i64 %561 to i16
  store i16 %562, i16* %530, align 2
  %563 = sub i64 %540, %552
  %564 = lshr i64 %563, %529
  %565 = trunc i64 %564 to i32
  br label %566

566:                                              ; preds = %536, %534
  %567 = phi i16 [ %562, %536 ], [ %535, %534 ]
  %568 = phi i32 [ %565, %536 ], [ 0, %534 ]
  store i32 %568, i32* %531, align 4
  %569 = shl i64 %462, 32
  %570 = ashr exact i64 %569, 32
  %571 = and i16 %567, 1023
  %572 = icmp eq i16 %571, 0
  %573 = getelementptr inbounds %struct.Command, %struct.Command* %51, i64 0, i32 3
  %574 = icmp ult i64 %463, 6
  br i1 %574, label %575, label %577

575:                                              ; preds = %566
  %576 = trunc i64 %463 to i16
  br label %603

577:                                              ; preds = %566
  %578 = icmp ult i64 %463, 130
  br i1 %578, label %579, label %591

579:                                              ; preds = %577
  %580 = add nsw i64 %463, -2
  %581 = trunc i64 %580 to i32
  %582 = tail call i32 @llvm.ctlz.i32(i32 %581, i1 true) #4, !range !18
  %583 = sub nsw i32 30, %582
  %584 = shl nsw i32 %583, 1
  %585 = zext i32 %584 to i64
  %586 = zext i32 %583 to i64
  %587 = lshr i64 %580, %586
  %588 = add nuw nsw i64 %587, %585
  %589 = trunc i64 %588 to i16
  %590 = add i16 %589, 2
  br label %603

591:                                              ; preds = %577
  %592 = icmp ult i64 %463, 2114
  br i1 %592, label %593, label %598

593:                                              ; preds = %591
  %594 = add nsw i32 %522, -66
  %595 = tail call i32 @llvm.ctlz.i32(i32 %594, i1 true) #4, !range !18
  %596 = trunc i32 %595 to i16
  %597 = sub nuw nsw i16 41, %596
  br label %603

598:                                              ; preds = %591
  %599 = icmp ult i64 %463, 6210
  br i1 %599, label %603, label %600

600:                                              ; preds = %598
  %601 = icmp ult i64 %463, 22594
  %602 = select i1 %601, i16 22, i16 23
  br label %603

603:                                              ; preds = %600, %598, %593, %579, %575
  %604 = phi i16 [ %576, %575 ], [ %590, %579 ], [ %597, %593 ], [ 21, %598 ], [ %602, %600 ]
  %605 = icmp ult i32 %524, 10
  br i1 %605, label %606, label %609

606:                                              ; preds = %603
  %607 = trunc i64 %462 to i16
  %608 = add nsw i16 %607, -2
  br label %630

609:                                              ; preds = %603
  %610 = icmp ult i32 %524, 134
  br i1 %610, label %611, label %623

611:                                              ; preds = %609
  %612 = add nsw i64 %570, -6
  %613 = trunc i64 %612 to i32
  %614 = tail call i32 @llvm.ctlz.i32(i32 %613, i1 true) #4, !range !18
  %615 = sub nsw i32 30, %614
  %616 = shl nsw i32 %615, 1
  %617 = zext i32 %616 to i64
  %618 = zext i32 %615 to i64
  %619 = lshr i64 %612, %618
  %620 = add nuw nsw i64 %619, %617
  %621 = trunc i64 %620 to i16
  %622 = add i16 %621, 4
  br label %630

623:                                              ; preds = %609
  %624 = icmp ult i32 %524, 2118
  br i1 %624, label %625, label %630

625:                                              ; preds = %623
  %626 = add nsw i32 %524, -70
  %627 = tail call i32 @llvm.ctlz.i32(i32 %626, i1 true) #4, !range !18
  %628 = trunc i32 %627 to i16
  %629 = sub nuw nsw i16 43, %628
  br label %630

630:                                              ; preds = %625, %623, %611, %606
  %631 = phi i16 [ %608, %606 ], [ %622, %611 ], [ %629, %625 ], [ 23, %623 ]
  %632 = and i16 %631, 7
  %633 = shl i16 %604, 3
  %634 = and i16 %633, 56
  %635 = or i16 %632, %634
  %636 = icmp ult i16 %604, 8
  %637 = and i1 %572, %636
  %638 = icmp ult i16 %631, 16
  %639 = and i1 %637, %638
  br i1 %639, label %640, label %644

640:                                              ; preds = %630
  %641 = icmp ult i16 %631, 8
  %642 = or i16 %635, 64
  %643 = select i1 %641, i16 %635, i16 %642
  br label %659

644:                                              ; preds = %630
  %645 = lshr i16 %631, 3
  %646 = lshr i16 %604, 3
  %647 = mul nuw nsw i16 %646, 3
  %648 = add nuw nsw i16 %645, %647
  %649 = zext i16 %648 to i32
  %650 = shl nuw i16 %648, 1
  %651 = zext i16 %650 to i32
  %652 = shl nuw nsw i32 %649, 6
  %653 = add nuw nsw i32 %652, 64
  %654 = lshr i32 5377344, %651
  %655 = and i32 %654, 192
  %656 = add nuw nsw i32 %653, %655
  %657 = trunc i32 %656 to i16
  %658 = or i16 %635, %657
  br label %659

659:                                              ; preds = %640, %644
  %660 = phi i16 [ %643, %640 ], [ %658, %644 ]
  store i16 %660, i16* %573, align 2
  %661 = load i64, i64* %10, align 8
  %662 = add i64 %661, %463
  store i64 %662, i64* %10, align 8
  %663 = add i64 %464, 2
  %664 = add i64 %464, %462
  %665 = icmp ult i64 %664, %24
  %666 = select i1 %665, i64 %664, i64 %24
  %667 = lshr i64 %462, 2
  %668 = icmp ult i64 %461, %667
  br i1 %668, label %669, label %676

669:                                              ; preds = %659
  %670 = shl i64 %461, 2
  %671 = sub i64 %664, %670
  %672 = icmp ugt i64 %663, %671
  %673 = select i1 %672, i64 %663, i64 %671
  %674 = icmp ult i64 %666, %673
  %675 = select i1 %674, i64 %666, i64 %673
  br label %676

676:                                              ; preds = %669, %659
  %677 = phi i64 [ %675, %669 ], [ %663, %659 ]
  %678 = icmp ugt i64 %666, %677
  br i1 %678, label %679, label %783

679:                                              ; preds = %676
  %680 = load i32*, i32** %34, align 8, !alias.scope !555, !noalias !560
  %681 = sub i64 %666, %677
  %682 = and i64 %681, 1
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %697, label %684

684:                                              ; preds = %679
  %685 = and i64 %677, %3
  %686 = getelementptr inbounds i8, i8* %2, i64 %685
  %687 = bitcast i8* %686 to i64*
  %688 = load i64, i64* %687, align 8, !alias.scope !560, !noalias !555
  %689 = mul i64 %688, 3866266742567714048
  %690 = lshr i64 %689, 44
  %691 = trunc i64 %677 to i32
  %692 = and i64 %677, 24
  %693 = add nuw nsw i64 %690, %692
  %694 = and i64 %693, 1048575
  %695 = getelementptr inbounds i32, i32* %680, i64 %694
  store i32 %691, i32* %695, align 4, !noalias !563
  %696 = add nuw i64 %677, 1
  br label %697

697:                                              ; preds = %684, %679
  %698 = phi i64 [ %696, %684 ], [ %677, %679 ]
  %699 = add i64 %677, 1
  %700 = icmp eq i64 %666, %699
  br i1 %700, label %783, label %701

701:                                              ; preds = %697, %701
  %702 = phi i64 [ %726, %701 ], [ %698, %697 ]
  %703 = and i64 %702, %3
  %704 = getelementptr inbounds i8, i8* %2, i64 %703
  %705 = bitcast i8* %704 to i64*
  %706 = load i64, i64* %705, align 8, !alias.scope !560, !noalias !555
  %707 = mul i64 %706, 3866266742567714048
  %708 = lshr i64 %707, 44
  %709 = trunc i64 %702 to i32
  %710 = and i64 %702, 24
  %711 = add nuw nsw i64 %708, %710
  %712 = and i64 %711, 1048575
  %713 = getelementptr inbounds i32, i32* %680, i64 %712
  store i32 %709, i32* %713, align 4, !noalias !563
  %714 = add nuw i64 %702, 1
  %715 = and i64 %714, %3
  %716 = getelementptr inbounds i8, i8* %2, i64 %715
  %717 = bitcast i8* %716 to i64*
  %718 = load i64, i64* %717, align 8, !alias.scope !560, !noalias !555
  %719 = mul i64 %718, 3866266742567714048
  %720 = lshr i64 %719, 44
  %721 = trunc i64 %714 to i32
  %722 = and i64 %714, 24
  %723 = add nuw nsw i64 %720, %722
  %724 = and i64 %723, 1048575
  %725 = getelementptr inbounds i32, i32* %680, i64 %724
  store i32 %721, i32* %725, align 4, !noalias !563
  %726 = add nuw i64 %702, 2
  %727 = icmp eq i64 %726, %666
  br i1 %727, label %783, label %701

728:                                              ; preds = %238
  %729 = add i64 %53, 1
  %730 = add i64 %50, 1
  %731 = icmp ugt i64 %730, %52
  br i1 %731, label %732, label %783

732:                                              ; preds = %728
  %733 = add i64 %52, %40
  %734 = icmp ugt i64 %730, %733
  br i1 %734, label %735, label %759

735:                                              ; preds = %732
  %736 = add i64 %50, 17
  %737 = icmp ult i64 %736, %23
  %738 = select i1 %737, i64 %736, i64 %23
  %739 = icmp ult i64 %730, %738
  br i1 %739, label %740, label %783

740:                                              ; preds = %735
  %741 = load i32*, i32** %34, align 8, !alias.scope !564, !noalias !567
  br label %742

742:                                              ; preds = %740, %742
  %743 = phi i64 [ %730, %740 ], [ %757, %742 ]
  %744 = phi i64 [ %729, %740 ], [ %756, %742 ]
  %745 = and i64 %743, %3
  %746 = getelementptr inbounds i8, i8* %2, i64 %745
  %747 = bitcast i8* %746 to i64*
  %748 = load i64, i64* %747, align 8, !alias.scope !567, !noalias !564
  %749 = mul i64 %748, 3866266742567714048
  %750 = lshr i64 %749, 44
  %751 = trunc i64 %743 to i32
  %752 = and i64 %743, 24
  %753 = add nuw nsw i64 %750, %752
  %754 = and i64 %753, 1048575
  %755 = getelementptr inbounds i32, i32* %741, i64 %754
  store i32 %751, i32* %755, align 4, !noalias !569
  %756 = add i64 %744, 4
  %757 = add i64 %743, 4
  %758 = icmp ult i64 %757, %738
  br i1 %758, label %742, label %783

759:                                              ; preds = %732
  %760 = add i64 %50, 9
  %761 = icmp ult i64 %760, %23
  %762 = select i1 %761, i64 %760, i64 %23
  %763 = icmp ult i64 %730, %762
  br i1 %763, label %764, label %783

764:                                              ; preds = %759
  %765 = load i32*, i32** %34, align 8, !alias.scope !570, !noalias !573
  br label %766

766:                                              ; preds = %764, %766
  %767 = phi i64 [ %730, %764 ], [ %781, %766 ]
  %768 = phi i64 [ %729, %764 ], [ %780, %766 ]
  %769 = and i64 %767, %3
  %770 = getelementptr inbounds i8, i8* %2, i64 %769
  %771 = bitcast i8* %770 to i64*
  %772 = load i64, i64* %771, align 8, !alias.scope !573, !noalias !570
  %773 = mul i64 %772, 3866266742567714048
  %774 = lshr i64 %773, 44
  %775 = trunc i64 %767 to i32
  %776 = and i64 %767, 24
  %777 = add nuw nsw i64 %774, %776
  %778 = and i64 %777, 1048575
  %779 = getelementptr inbounds i32, i32* %765, i64 %778
  store i32 %775, i32* %779, align 4, !noalias !575
  %780 = add i64 %768, 2
  %781 = add i64 %767, 2
  %782 = icmp ult i64 %781, %762
  br i1 %782, label %766, label %783

783:                                              ; preds = %766, %742, %697, %701, %759, %735, %676, %728
  %784 = phi i64 [ %729, %728 ], [ 0, %676 ], [ %729, %735 ], [ %729, %759 ], [ 0, %701 ], [ 0, %697 ], [ %756, %742 ], [ %780, %766 ]
  %785 = phi i64 [ %52, %728 ], [ %467, %676 ], [ %52, %735 ], [ %52, %759 ], [ %467, %701 ], [ %467, %697 ], [ %52, %742 ], [ %52, %766 ]
  %786 = phi %struct.Command* [ %51, %728 ], [ %521, %676 ], [ %51, %735 ], [ %51, %759 ], [ %521, %701 ], [ %521, %697 ], [ %51, %742 ], [ %51, %766 ]
  %787 = phi i64 [ %730, %728 ], [ %664, %676 ], [ %730, %735 ], [ %730, %759 ], [ %664, %701 ], [ %664, %697 ], [ %757, %742 ], [ %781, %766 ]
  %788 = add i64 %787, 8
  %789 = icmp ult i64 %788, %21
  %790 = sub i64 %21, %787
  br i1 %789, label %48, label %791

791:                                              ; preds = %783, %11
  %792 = phi i64 [ %20, %11 ], [ %784, %783 ]
  %793 = phi %struct.Command* [ %8, %11 ], [ %786, %783 ]
  %794 = phi i64 [ %0, %11 ], [ %790, %783 ]
  %795 = add i64 %794, %792
  store i64 %795, i64* %7, align 8
  %796 = ptrtoint %struct.Command* %793 to i64
  %797 = ptrtoint %struct.Command* %8 to i64
  %798 = sub i64 %796, %797
  %799 = ashr exact i64 %798, 4
  %800 = load i64, i64* %9, align 8
  %801 = add i64 %800, %799
  store i64 %801, i64* %9, align 8
  ret void

802:                                              ; preds = %114
  %803 = getelementptr inbounds i8, i8* %106, i64 1
  %804 = getelementptr inbounds i8, i8* %71, i64 %115
  %805 = load i8, i8* %804, align 1, !alias.scope !538, !noalias !539
  %806 = load i8, i8* %803, align 1, !alias.scope !538, !noalias !539
  %807 = icmp eq i8 %805, %806
  br i1 %807, label %808, label %117, !prof !15

808:                                              ; preds = %802
  %809 = add i64 %105, 2
  %810 = icmp eq i64 %107, 2
  br i1 %810, label %117, label %811

811:                                              ; preds = %808
  %812 = getelementptr inbounds i8, i8* %106, i64 2
  %813 = getelementptr inbounds i8, i8* %71, i64 %809
  %814 = load i8, i8* %813, align 1, !alias.scope !538, !noalias !539
  %815 = load i8, i8* %812, align 1, !alias.scope !538, !noalias !539
  %816 = icmp eq i8 %814, %815
  br i1 %816, label %817, label %117, !prof !15

817:                                              ; preds = %811
  %818 = add i64 %105, 3
  %819 = icmp eq i64 %107, 3
  br i1 %819, label %117, label %820

820:                                              ; preds = %817
  %821 = getelementptr inbounds i8, i8* %106, i64 3
  %822 = getelementptr inbounds i8, i8* %71, i64 %818
  %823 = load i8, i8* %822, align 1, !alias.scope !538, !noalias !539
  %824 = load i8, i8* %821, align 1, !alias.scope !538, !noalias !539
  %825 = icmp eq i8 %823, %824
  br i1 %825, label %826, label %117, !prof !15

826:                                              ; preds = %820
  %827 = add i64 %105, 4
  %828 = icmp eq i64 %107, 4
  br i1 %828, label %117, label %829

829:                                              ; preds = %826
  %830 = getelementptr inbounds i8, i8* %106, i64 4
  %831 = getelementptr inbounds i8, i8* %71, i64 %827
  %832 = load i8, i8* %831, align 1, !alias.scope !538, !noalias !539
  %833 = load i8, i8* %830, align 1, !alias.scope !538, !noalias !539
  %834 = icmp eq i8 %832, %833
  br i1 %834, label %835, label %117, !prof !15

835:                                              ; preds = %829
  %836 = add i64 %105, 5
  %837 = icmp eq i64 %107, 5
  br i1 %837, label %117, label %838

838:                                              ; preds = %835
  %839 = getelementptr inbounds i8, i8* %106, i64 5
  %840 = getelementptr inbounds i8, i8* %71, i64 %836
  %841 = load i8, i8* %840, align 1, !alias.scope !538, !noalias !539
  %842 = load i8, i8* %839, align 1, !alias.scope !538, !noalias !539
  %843 = icmp eq i8 %841, %842
  br i1 %843, label %844, label %117, !prof !15

844:                                              ; preds = %838
  %845 = add i64 %105, 6
  %846 = icmp eq i64 %107, 6
  br i1 %846, label %117, label %847

847:                                              ; preds = %844
  %848 = getelementptr inbounds i8, i8* %106, i64 6
  %849 = getelementptr inbounds i8, i8* %71, i64 %845
  %850 = load i8, i8* %849, align 1, !alias.scope !538, !noalias !539
  %851 = load i8, i8* %848, align 1, !alias.scope !538, !noalias !539
  %852 = icmp eq i8 %850, %851
  %853 = add i64 %105, 7
  %854 = select i1 %852, i64 %853, i64 %845, !prof !15
  br label %117

855:                                              ; preds = %206
  %856 = getelementptr inbounds i8, i8* %200, i64 1
  %857 = getelementptr inbounds i8, i8* %177, i64 %207
  %858 = load i8, i8* %857, align 1, !alias.scope !538, !noalias !539
  %859 = load i8, i8* %856, align 1, !alias.scope !538, !noalias !539
  %860 = icmp eq i8 %858, %859
  br i1 %860, label %861, label %208, !prof !15

861:                                              ; preds = %855
  %862 = add i64 %199, 2
  br i1 %149, label %208, label %863

863:                                              ; preds = %861
  %864 = getelementptr inbounds i8, i8* %200, i64 2
  %865 = getelementptr inbounds i8, i8* %177, i64 %862
  %866 = load i8, i8* %865, align 1, !alias.scope !538, !noalias !539
  %867 = load i8, i8* %864, align 1, !alias.scope !538, !noalias !539
  %868 = icmp eq i8 %866, %867
  br i1 %868, label %869, label %208, !prof !15

869:                                              ; preds = %863
  %870 = add i64 %199, 3
  br i1 %150, label %208, label %871

871:                                              ; preds = %869
  %872 = getelementptr inbounds i8, i8* %200, i64 3
  %873 = getelementptr inbounds i8, i8* %177, i64 %870
  %874 = load i8, i8* %873, align 1, !alias.scope !538, !noalias !539
  %875 = load i8, i8* %872, align 1, !alias.scope !538, !noalias !539
  %876 = icmp eq i8 %874, %875
  br i1 %876, label %877, label %208, !prof !15

877:                                              ; preds = %871
  %878 = add i64 %199, 4
  br i1 %151, label %208, label %879

879:                                              ; preds = %877
  %880 = getelementptr inbounds i8, i8* %200, i64 4
  %881 = getelementptr inbounds i8, i8* %177, i64 %878
  %882 = load i8, i8* %881, align 1, !alias.scope !538, !noalias !539
  %883 = load i8, i8* %880, align 1, !alias.scope !538, !noalias !539
  %884 = icmp eq i8 %882, %883
  br i1 %884, label %885, label %208, !prof !15

885:                                              ; preds = %879
  %886 = add i64 %199, 5
  br i1 %152, label %208, label %887

887:                                              ; preds = %885
  %888 = getelementptr inbounds i8, i8* %200, i64 5
  %889 = getelementptr inbounds i8, i8* %177, i64 %886
  %890 = load i8, i8* %889, align 1, !alias.scope !538, !noalias !539
  %891 = load i8, i8* %888, align 1, !alias.scope !538, !noalias !539
  %892 = icmp eq i8 %890, %891
  br i1 %892, label %893, label %208, !prof !15

893:                                              ; preds = %887
  %894 = add i64 %199, 6
  br i1 %153, label %208, label %895

895:                                              ; preds = %893
  %896 = getelementptr inbounds i8, i8* %200, i64 6
  %897 = getelementptr inbounds i8, i8* %177, i64 %894
  %898 = load i8, i8* %897, align 1, !alias.scope !538, !noalias !539
  %899 = load i8, i8* %896, align 1, !alias.scope !538, !noalias !539
  %900 = icmp eq i8 %898, %899
  %901 = add i64 %199, 7
  %902 = select i1 %900, i64 %901, i64 %894, !prof !15
  br label %208

903:                                              ; preds = %324
  %904 = getelementptr inbounds i8, i8* %316, i64 1
  %905 = getelementptr inbounds i8, i8* %284, i64 %325
  %906 = load i8, i8* %905, align 1, !alias.scope !550, !noalias !551
  %907 = load i8, i8* %904, align 1, !alias.scope !550, !noalias !551
  %908 = icmp eq i8 %906, %907
  br i1 %908, label %909, label %327, !prof !15

909:                                              ; preds = %903
  %910 = add i64 %315, 2
  %911 = icmp eq i64 %317, 2
  br i1 %911, label %327, label %912

912:                                              ; preds = %909
  %913 = getelementptr inbounds i8, i8* %316, i64 2
  %914 = getelementptr inbounds i8, i8* %284, i64 %910
  %915 = load i8, i8* %914, align 1, !alias.scope !550, !noalias !551
  %916 = load i8, i8* %913, align 1, !alias.scope !550, !noalias !551
  %917 = icmp eq i8 %915, %916
  br i1 %917, label %918, label %327, !prof !15

918:                                              ; preds = %912
  %919 = add i64 %315, 3
  %920 = icmp eq i64 %317, 3
  br i1 %920, label %327, label %921

921:                                              ; preds = %918
  %922 = getelementptr inbounds i8, i8* %316, i64 3
  %923 = getelementptr inbounds i8, i8* %284, i64 %919
  %924 = load i8, i8* %923, align 1, !alias.scope !550, !noalias !551
  %925 = load i8, i8* %922, align 1, !alias.scope !550, !noalias !551
  %926 = icmp eq i8 %924, %925
  br i1 %926, label %927, label %327, !prof !15

927:                                              ; preds = %921
  %928 = add i64 %315, 4
  %929 = icmp eq i64 %317, 4
  br i1 %929, label %327, label %930

930:                                              ; preds = %927
  %931 = getelementptr inbounds i8, i8* %316, i64 4
  %932 = getelementptr inbounds i8, i8* %284, i64 %928
  %933 = load i8, i8* %932, align 1, !alias.scope !550, !noalias !551
  %934 = load i8, i8* %931, align 1, !alias.scope !550, !noalias !551
  %935 = icmp eq i8 %933, %934
  br i1 %935, label %936, label %327, !prof !15

936:                                              ; preds = %930
  %937 = add i64 %315, 5
  %938 = icmp eq i64 %317, 5
  br i1 %938, label %327, label %939

939:                                              ; preds = %936
  %940 = getelementptr inbounds i8, i8* %316, i64 5
  %941 = getelementptr inbounds i8, i8* %284, i64 %937
  %942 = load i8, i8* %941, align 1, !alias.scope !550, !noalias !551
  %943 = load i8, i8* %940, align 1, !alias.scope !550, !noalias !551
  %944 = icmp eq i8 %942, %943
  br i1 %944, label %945, label %327, !prof !15

945:                                              ; preds = %939
  %946 = add i64 %315, 6
  %947 = icmp eq i64 %317, 6
  br i1 %947, label %327, label %948

948:                                              ; preds = %945
  %949 = getelementptr inbounds i8, i8* %316, i64 6
  %950 = getelementptr inbounds i8, i8* %284, i64 %946
  %951 = load i8, i8* %950, align 1, !alias.scope !550, !noalias !551
  %952 = load i8, i8* %949, align 1, !alias.scope !550, !noalias !551
  %953 = icmp eq i8 %951, %952
  %954 = add i64 %315, 7
  %955 = select i1 %953, i64 %954, i64 %946, !prof !15
  br label %327

956:                                              ; preds = %416
  %957 = getelementptr inbounds i8, i8* %410, i64 1
  %958 = getelementptr inbounds i8, i8* %387, i64 %417
  %959 = load i8, i8* %958, align 1, !alias.scope !550, !noalias !551
  %960 = load i8, i8* %957, align 1, !alias.scope !550, !noalias !551
  %961 = icmp eq i8 %959, %960
  br i1 %961, label %962, label %418, !prof !15

962:                                              ; preds = %956
  %963 = add i64 %409, 2
  br i1 %359, label %418, label %964

964:                                              ; preds = %962
  %965 = getelementptr inbounds i8, i8* %410, i64 2
  %966 = getelementptr inbounds i8, i8* %387, i64 %963
  %967 = load i8, i8* %966, align 1, !alias.scope !550, !noalias !551
  %968 = load i8, i8* %965, align 1, !alias.scope !550, !noalias !551
  %969 = icmp eq i8 %967, %968
  br i1 %969, label %970, label %418, !prof !15

970:                                              ; preds = %964
  %971 = add i64 %409, 3
  br i1 %360, label %418, label %972

972:                                              ; preds = %970
  %973 = getelementptr inbounds i8, i8* %410, i64 3
  %974 = getelementptr inbounds i8, i8* %387, i64 %971
  %975 = load i8, i8* %974, align 1, !alias.scope !550, !noalias !551
  %976 = load i8, i8* %973, align 1, !alias.scope !550, !noalias !551
  %977 = icmp eq i8 %975, %976
  br i1 %977, label %978, label %418, !prof !15

978:                                              ; preds = %972
  %979 = add i64 %409, 4
  br i1 %361, label %418, label %980

980:                                              ; preds = %978
  %981 = getelementptr inbounds i8, i8* %410, i64 4
  %982 = getelementptr inbounds i8, i8* %387, i64 %979
  %983 = load i8, i8* %982, align 1, !alias.scope !550, !noalias !551
  %984 = load i8, i8* %981, align 1, !alias.scope !550, !noalias !551
  %985 = icmp eq i8 %983, %984
  br i1 %985, label %986, label %418, !prof !15

986:                                              ; preds = %980
  %987 = add i64 %409, 5
  br i1 %362, label %418, label %988

988:                                              ; preds = %986
  %989 = getelementptr inbounds i8, i8* %410, i64 5
  %990 = getelementptr inbounds i8, i8* %387, i64 %987
  %991 = load i8, i8* %990, align 1, !alias.scope !550, !noalias !551
  %992 = load i8, i8* %989, align 1, !alias.scope !550, !noalias !551
  %993 = icmp eq i8 %991, %992
  br i1 %993, label %994, label %418, !prof !15

994:                                              ; preds = %988
  %995 = add i64 %409, 6
  br i1 %363, label %418, label %996

996:                                              ; preds = %994
  %997 = getelementptr inbounds i8, i8* %410, i64 6
  %998 = getelementptr inbounds i8, i8* %387, i64 %995
  %999 = load i8, i8* %998, align 1, !alias.scope !550, !noalias !551
  %1000 = load i8, i8* %997, align 1, !alias.scope !550, !noalias !551
  %1001 = icmp eq i8 %999, %1000
  %1002 = add i64 %409, 7
  %1003 = select i1 %1001, i64 %1002, i64 %995, !prof !15
  br label %418
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH35(i64, i64, i8* readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* nocapture, i32* nocapture, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = alloca [2 x i64], align 16
  %13 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = shl i64 1, %15
  %17 = add i64 %16, -16
  %18 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = load i64, i64* %7, align 8
  %21 = add i64 %1, %0
  %22 = icmp ugt i64 %0, 7
  %23 = add i64 %21, -7
  %24 = select i1 %22, i64 %23, i64 %1
  %25 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 9
  %28 = select i1 %27, i64 64, i64 512
  %29 = add i64 %1, 8
  %30 = icmp ult i64 %29, %21
  br i1 %30, label %31, label %1158

31:                                               ; preds = %11
  %32 = add i64 %28, %1
  %33 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %34 = bitcast i16* %33 to i32**
  %35 = and i64 %3, 4294967295
  %36 = bitcast [2 x i64]* %12 to i8*
  %37 = getelementptr inbounds [2 x i64], [2 x i64]* %12, i64 0, i64 0
  %38 = getelementptr inbounds [2 x i64], [2 x i64]* %12, i64 0, i64 1
  %39 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 16
  %40 = bitcast i16* %39 to i64*
  %41 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 8
  %42 = bitcast i16* %41 to i32*
  %43 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 22
  %44 = bitcast i16* %43 to i32*
  %45 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 24
  %46 = bitcast i16* %45 to i32*
  %47 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 12
  %48 = bitcast i16* %47 to i32**
  %49 = shl nuw nsw i64 %28, 2
  %50 = getelementptr inbounds i32, i32* %6, i64 1
  %51 = getelementptr inbounds i32, i32* %6, i64 2
  %52 = getelementptr inbounds i32, i32* %6, i64 3
  %53 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %54 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  br label %55

55:                                               ; preds = %31, %1150
  %56 = phi i64 [ %0, %31 ], [ %1157, %1150 ]
  %57 = phi i64 [ %1, %31 ], [ %1154, %1150 ]
  %58 = phi %struct.Command* [ %8, %31 ], [ %1153, %1150 ]
  %59 = phi i64 [ %32, %31 ], [ %1152, %1150 ]
  %60 = phi i64 [ %20, %31 ], [ %1151, %1150 ]
  %61 = icmp ult i64 %57, %17
  %62 = select i1 %61, i64 %57, i64 %17
  %63 = load i32*, i32** %34, align 8, !alias.scope !576, !noalias !581
  %64 = and i64 %57, %3
  %65 = getelementptr inbounds i8, i8* %2, i64 %64
  %66 = load i8, i8* %65, align 1, !alias.scope !588, !noalias !589
  %67 = zext i8 %66 to i32
  %68 = bitcast i8* %65 to i64*
  %69 = load i64, i64* %68, align 8, !alias.scope !588, !noalias !589
  %70 = mul i64 %69, -4819355556693147648
  %71 = lshr i64 %70, 48
  %72 = load i32, i32* %6, align 4, !alias.scope !590, !noalias !591
  %73 = sext i32 %72 to i64
  %74 = sub i64 %57, %73
  %75 = icmp ult i64 %74, %57
  br i1 %75, label %76, label %136

76:                                               ; preds = %55
  %77 = and i64 %35, %74
  %78 = getelementptr inbounds i8, i8* %2, i64 %77
  %79 = load i8, i8* %78, align 1, !alias.scope !588, !noalias !589
  %80 = icmp eq i8 %66, %79
  br i1 %80, label %81, label %136

81:                                               ; preds = %76
  %82 = lshr i64 %56, 3
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %111, label %84, !prof !13

84:                                               ; preds = %81
  %85 = bitcast i8* %78 to i64*
  %86 = load i64, i64* %85, align 8, !alias.scope !588, !noalias !589
  %87 = icmp eq i64 %69, %86
  br i1 %87, label %88, label %103, !prof !13

88:                                               ; preds = %84, %96
  %89 = phi i64 [ %93, %96 ], [ 0, %84 ]
  %90 = phi i8* [ %92, %96 ], [ %65, %84 ]
  %91 = phi i64 [ %94, %96 ], [ %82, %84 ]
  %92 = getelementptr inbounds i8, i8* %90, i64 8
  %93 = add nuw i64 %89, 8
  %94 = add nsw i64 %91, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %111, label %96, !prof !13

96:                                               ; preds = %88
  %97 = bitcast i8* %92 to i64*
  %98 = load i64, i64* %97, align 8, !alias.scope !588, !noalias !589
  %99 = getelementptr inbounds i8, i8* %78, i64 %93
  %100 = bitcast i8* %99 to i64*
  %101 = load i64, i64* %100, align 8, !alias.scope !588, !noalias !589
  %102 = icmp eq i64 %98, %101
  br i1 %102, label %88, label %103, !prof !13

103:                                              ; preds = %96, %84
  %104 = phi i64 [ %69, %84 ], [ %98, %96 ]
  %105 = phi i64 [ 0, %84 ], [ %93, %96 ]
  %106 = phi i64 [ %86, %84 ], [ %101, %96 ]
  %107 = xor i64 %106, %104
  %108 = tail call i64 @llvm.cttz.i64(i64 %107, i1 true) #4, !range !14
  %109 = lshr i64 %108, 3
  %110 = or i64 %109, %105
  br label %124

111:                                              ; preds = %88, %81
  %112 = phi i64 [ 0, %81 ], [ %93, %88 ]
  %113 = phi i8* [ %65, %81 ], [ %92, %88 ]
  %114 = and i64 %56, 7
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %124, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds i8, i8* %78, i64 %112
  %118 = load i8, i8* %117, align 1, !alias.scope !588, !noalias !589
  %119 = load i8, i8* %113, align 1, !alias.scope !588, !noalias !589
  %120 = icmp eq i8 %118, %119
  br i1 %120, label %121, label %124, !prof !15

121:                                              ; preds = %116
  %122 = add i64 %112, 1
  %123 = icmp eq i64 %114, 1
  br i1 %123, label %124, label %1169

124:                                              ; preds = %1214, %121, %116, %1169, %1175, %1178, %1184, %1187, %1193, %1196, %1202, %1205, %1211, %111, %103
  %125 = phi i64 [ %110, %103 ], [ %112, %111 ], [ %122, %121 ], [ %112, %116 ], [ %122, %1169 ], [ %1176, %1175 ], [ %1176, %1178 ], [ %1185, %1184 ], [ %1185, %1187 ], [ %1194, %1193 ], [ %1194, %1196 ], [ %1203, %1202 ], [ %1203, %1205 ], [ %1212, %1211 ], [ %1221, %1214 ]
  %126 = icmp ugt i64 %125, 3
  br i1 %126, label %127, label %136

127:                                              ; preds = %124
  %128 = mul i64 %125, 135
  %129 = add i64 %128, 1935
  %130 = icmp ugt i64 %129, 2020
  br i1 %130, label %131, label %136

131:                                              ; preds = %127
  %132 = add i64 %125, %64
  %133 = getelementptr inbounds i8, i8* %2, i64 %132
  %134 = load i8, i8* %133, align 1, !alias.scope !588, !noalias !589
  %135 = zext i8 %134 to i32
  br label %136

136:                                              ; preds = %131, %127, %124, %76, %55
  %137 = phi i64 [ %129, %131 ], [ 2020, %127 ], [ 2020, %124 ], [ 2020, %76 ], [ 2020, %55 ]
  %138 = phi i64 [ %73, %131 ], [ 0, %127 ], [ 0, %124 ], [ 0, %76 ], [ 0, %55 ]
  %139 = phi i64 [ %125, %131 ], [ 0, %127 ], [ 0, %124 ], [ 0, %76 ], [ 0, %55 ]
  %140 = phi i32 [ %135, %131 ], [ %67, %127 ], [ %67, %124 ], [ %67, %76 ], [ %67, %55 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #4, !noalias !592
  store i64 %71, i64* %37, align 16, !noalias !592
  %141 = add nuw nsw i64 %71, 8
  %142 = and i64 %141, 65535
  store i64 %142, i64* %38, align 8, !noalias !592
  %143 = lshr i64 %57, 3
  %144 = and i64 %143, 1
  %145 = getelementptr inbounds [2 x i64], [2 x i64]* %12, i64 0, i64 %144
  %146 = load i64, i64* %145, align 8, !noalias !592
  %147 = lshr i64 %56, 3
  %148 = icmp eq i64 %147, 0
  %149 = and i64 %56, 7
  %150 = icmp eq i64 %149, 0
  %151 = getelementptr inbounds i32, i32* %63, i64 %71
  %152 = load i32, i32* %151, align 4, !noalias !592
  %153 = zext i32 %152 to i64
  %154 = sub i64 %57, %153
  %155 = and i64 %153, %3
  %156 = add i64 %155, %139
  %157 = getelementptr inbounds i8, i8* %2, i64 %156
  %158 = load i8, i8* %157, align 1, !alias.scope !588, !noalias !589
  %159 = zext i8 %158 to i32
  %160 = icmp eq i32 %140, %159
  %161 = add i64 %154, -1
  %162 = icmp ult i64 %161, %62
  %163 = and i1 %160, %162
  br i1 %163, label %164, label %222, !prof !17

164:                                              ; preds = %136
  %165 = getelementptr inbounds i8, i8* %2, i64 %155
  br i1 %148, label %193, label %166, !prof !13

166:                                              ; preds = %164
  %167 = bitcast i8* %165 to i64*
  %168 = load i64, i64* %167, align 8, !alias.scope !588, !noalias !589
  %169 = icmp eq i64 %69, %168
  br i1 %169, label %170, label %185, !prof !13

170:                                              ; preds = %166, %178
  %171 = phi i64 [ %175, %178 ], [ 0, %166 ]
  %172 = phi i8* [ %174, %178 ], [ %65, %166 ]
  %173 = phi i64 [ %176, %178 ], [ %147, %166 ]
  %174 = getelementptr inbounds i8, i8* %172, i64 8
  %175 = add nuw i64 %171, 8
  %176 = add nsw i64 %173, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %193, label %178, !prof !13

178:                                              ; preds = %170
  %179 = bitcast i8* %174 to i64*
  %180 = load i64, i64* %179, align 8, !alias.scope !588, !noalias !589
  %181 = getelementptr inbounds i8, i8* %165, i64 %175
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 8, !alias.scope !588, !noalias !589
  %184 = icmp eq i64 %180, %183
  br i1 %184, label %170, label %185, !prof !13

185:                                              ; preds = %178, %166
  %186 = phi i64 [ %69, %166 ], [ %180, %178 ]
  %187 = phi i64 [ 0, %166 ], [ %175, %178 ]
  %188 = phi i64 [ %168, %166 ], [ %183, %178 ]
  %189 = xor i64 %188, %186
  %190 = tail call i64 @llvm.cttz.i64(i64 %189, i1 true) #4, !range !14
  %191 = lshr i64 %190, 3
  %192 = or i64 %191, %187
  br label %204

193:                                              ; preds = %170, %164
  %194 = phi i64 [ 0, %164 ], [ %175, %170 ]
  %195 = phi i8* [ %65, %164 ], [ %174, %170 ]
  br i1 %150, label %204, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds i8, i8* %165, i64 %194
  %198 = load i8, i8* %197, align 1, !alias.scope !588, !noalias !589
  %199 = load i8, i8* %195, align 1, !alias.scope !588, !noalias !589
  %200 = icmp eq i8 %198, %199
  br i1 %200, label %201, label %204, !prof !15

201:                                              ; preds = %196
  %202 = add i64 %194, 1
  %203 = icmp eq i64 %149, 1
  br i1 %203, label %204, label %1222

204:                                              ; preds = %1267, %201, %196, %1222, %1228, %1231, %1237, %1240, %1246, %1249, %1255, %1258, %1264, %193, %185
  %205 = phi i64 [ %192, %185 ], [ %194, %193 ], [ %202, %201 ], [ %194, %196 ], [ %202, %1222 ], [ %1229, %1228 ], [ %1229, %1231 ], [ %1238, %1237 ], [ %1238, %1240 ], [ %1247, %1246 ], [ %1247, %1249 ], [ %1256, %1255 ], [ %1256, %1258 ], [ %1265, %1264 ], [ %1274, %1267 ]
  %206 = icmp ugt i64 %205, 3
  br i1 %206, label %207, label %222

207:                                              ; preds = %204
  %208 = mul i64 %205, 135
  %209 = trunc i64 %154 to i32
  %210 = tail call i32 @llvm.ctlz.i32(i32 %209, i1 true) #4, !range !18
  %211 = xor i32 %210, 31
  %212 = mul nsw i32 %211, -30
  %213 = add nsw i32 %212, 1920
  %214 = zext i32 %213 to i64
  %215 = add i64 %208, %214
  %216 = icmp ult i64 %137, %215
  br i1 %216, label %217, label %222

217:                                              ; preds = %207
  %218 = add i64 %205, %64
  %219 = getelementptr inbounds i8, i8* %2, i64 %218
  %220 = load i8, i8* %219, align 1, !alias.scope !588, !noalias !589
  %221 = zext i8 %220 to i32
  br label %222

222:                                              ; preds = %217, %207, %204, %136
  %223 = phi i64 [ %215, %217 ], [ %137, %207 ], [ %137, %204 ], [ %137, %136 ]
  %224 = phi i64 [ %154, %217 ], [ %138, %207 ], [ %138, %204 ], [ %138, %136 ]
  %225 = phi i64 [ %205, %217 ], [ %139, %207 ], [ %139, %204 ], [ %139, %136 ]
  %226 = phi i32 [ %221, %217 ], [ %140, %207 ], [ %140, %204 ], [ %140, %136 ]
  %227 = getelementptr inbounds i32, i32* %63, i64 %142
  %228 = load i32, i32* %227, align 4, !noalias !592
  %229 = zext i32 %228 to i64
  %230 = sub i64 %57, %229
  %231 = and i64 %229, %3
  %232 = add i64 %231, %225
  %233 = getelementptr inbounds i8, i8* %2, i64 %232
  %234 = load i8, i8* %233, align 1, !alias.scope !588, !noalias !589
  %235 = zext i8 %234 to i32
  %236 = icmp eq i32 %226, %235
  %237 = add i64 %230, -1
  %238 = icmp ult i64 %237, %62
  %239 = and i1 %236, %238
  br i1 %239, label %240, label %296, !prof !17

240:                                              ; preds = %222
  %241 = getelementptr inbounds i8, i8* %2, i64 %231
  br i1 %148, label %269, label %242, !prof !13

242:                                              ; preds = %240
  %243 = bitcast i8* %241 to i64*
  %244 = load i64, i64* %243, align 8, !alias.scope !588, !noalias !589
  %245 = icmp eq i64 %69, %244
  br i1 %245, label %254, label %246, !prof !13

246:                                              ; preds = %262, %242
  %247 = phi i64 [ %69, %242 ], [ %264, %262 ]
  %248 = phi i64 [ 0, %242 ], [ %259, %262 ]
  %249 = phi i64 [ %244, %242 ], [ %267, %262 ]
  %250 = xor i64 %249, %247
  %251 = tail call i64 @llvm.cttz.i64(i64 %250, i1 true) #4, !range !14
  %252 = lshr i64 %251, 3
  %253 = or i64 %252, %248
  br label %280

254:                                              ; preds = %242, %262
  %255 = phi i64 [ %259, %262 ], [ 0, %242 ]
  %256 = phi i8* [ %258, %262 ], [ %65, %242 ]
  %257 = phi i64 [ %260, %262 ], [ %147, %242 ]
  %258 = getelementptr inbounds i8, i8* %256, i64 8
  %259 = add nuw i64 %255, 8
  %260 = add nsw i64 %257, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %269, label %262, !prof !13

262:                                              ; preds = %254
  %263 = bitcast i8* %258 to i64*
  %264 = load i64, i64* %263, align 8, !alias.scope !588, !noalias !589
  %265 = getelementptr inbounds i8, i8* %241, i64 %259
  %266 = bitcast i8* %265 to i64*
  %267 = load i64, i64* %266, align 8, !alias.scope !588, !noalias !589
  %268 = icmp eq i64 %264, %267
  br i1 %268, label %254, label %246, !prof !13

269:                                              ; preds = %254, %240
  %270 = phi i64 [ 0, %240 ], [ %259, %254 ]
  %271 = phi i8* [ %65, %240 ], [ %258, %254 ]
  br i1 %150, label %280, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds i8, i8* %241, i64 %270
  %274 = load i8, i8* %273, align 1, !alias.scope !588, !noalias !589
  %275 = load i8, i8* %271, align 1, !alias.scope !588, !noalias !589
  %276 = icmp eq i8 %274, %275
  br i1 %276, label %277, label %280, !prof !15

277:                                              ; preds = %272
  %278 = add i64 %270, 1
  %279 = icmp eq i64 %149, 1
  br i1 %279, label %280, label %1275

280:                                              ; preds = %1320, %277, %272, %1275, %1281, %1284, %1290, %1293, %1299, %1302, %1308, %1311, %1317, %269, %246
  %281 = phi i64 [ %253, %246 ], [ %270, %269 ], [ %278, %277 ], [ %270, %272 ], [ %278, %1275 ], [ %1282, %1281 ], [ %1282, %1284 ], [ %1291, %1290 ], [ %1291, %1293 ], [ %1300, %1299 ], [ %1300, %1302 ], [ %1309, %1308 ], [ %1309, %1311 ], [ %1318, %1317 ], [ %1327, %1320 ]
  %282 = icmp ugt i64 %281, 3
  br i1 %282, label %283, label %296

283:                                              ; preds = %280
  %284 = mul i64 %281, 135
  %285 = trunc i64 %230 to i32
  %286 = tail call i32 @llvm.ctlz.i32(i32 %285, i1 true) #4, !range !18
  %287 = xor i32 %286, 31
  %288 = mul nsw i32 %287, -30
  %289 = add nsw i32 %288, 1920
  %290 = zext i32 %289 to i64
  %291 = add i64 %284, %290
  %292 = icmp ult i64 %223, %291
  %293 = select i1 %292, i64 %291, i64 %223
  %294 = select i1 %292, i64 %230, i64 %224
  %295 = select i1 %292, i64 %281, i64 %225
  br label %296

296:                                              ; preds = %283, %280, %222
  %297 = phi i64 [ %223, %280 ], [ %223, %222 ], [ %293, %283 ]
  %298 = phi i64 [ %224, %280 ], [ %224, %222 ], [ %294, %283 ]
  %299 = phi i64 [ %225, %280 ], [ %225, %222 ], [ %295, %283 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #4, !noalias !592
  %300 = trunc i64 %57 to i32
  %301 = getelementptr inbounds i32, i32* %63, i64 %146
  store i32 %300, i32* %301, align 4, !noalias !592
  %302 = and i64 %57, 3
  %303 = icmp ne i64 %302, 0
  %304 = icmp ult i64 %56, 32
  %305 = or i1 %303, %304
  br i1 %305, label %424, label %306

306:                                              ; preds = %296
  %307 = load i64, i64* %40, align 8, !alias.scope !593, !noalias !596
  %308 = icmp ugt i64 %307, %57
  br i1 %308, label %419, label %309

309:                                              ; preds = %306
  %310 = load i32, i32* %42, align 8, !alias.scope !593, !noalias !596
  %311 = load i32, i32* %44, align 4, !alias.scope !593, !noalias !596
  %312 = load i32, i32* %46, align 8, !alias.scope !593, !noalias !596
  %313 = icmp eq i64 %149, 1
  %314 = icmp eq i64 %149, 2
  %315 = icmp eq i64 %149, 3
  %316 = icmp eq i64 %149, 4
  %317 = icmp eq i64 %149, 5
  %318 = icmp eq i64 %149, 6
  br label %319

319:                                              ; preds = %410, %309
  %320 = phi i64 [ %297, %309 ], [ %411, %410 ]
  %321 = phi i64 [ %298, %309 ], [ %412, %410 ]
  %322 = phi i64 [ %299, %309 ], [ %413, %410 ]
  %323 = phi i64 [ %297, %309 ], [ %414, %410 ]
  %324 = phi i64 [ %299, %309 ], [ %415, %410 ]
  %325 = phi i32 [ %310, %309 ], [ %342, %410 ]
  %326 = phi i64 [ %307, %309 ], [ %416, %410 ]
  %327 = and i32 %325, 1073741823
  %328 = and i64 %326, %3
  %329 = getelementptr inbounds i8, i8* %2, i64 %328
  %330 = load i8, i8* %329, align 1, !alias.scope !599, !noalias !600
  %331 = add i64 %326, 32
  %332 = and i64 %331, %3
  %333 = getelementptr inbounds i8, i8* %2, i64 %332
  %334 = load i8, i8* %333, align 1, !alias.scope !599, !noalias !600
  %335 = mul i32 %325, %311
  %336 = zext i8 %334 to i32
  %337 = zext i8 %330 to i32
  %338 = add nuw nsw i32 %337, 1
  %339 = mul i32 %338, %312
  %340 = add i32 %335, 1
  %341 = add i32 %340, %336
  %342 = sub i32 %341, %339
  %343 = icmp ult i32 %327, 16777216
  br i1 %343, label %344, label %410

344:                                              ; preds = %319
  %345 = load i32*, i32** %48, align 8, !alias.scope !593, !noalias !596
  %346 = zext i32 %327 to i64
  %347 = getelementptr inbounds i32, i32* %345, i64 %346
  %348 = load i32, i32* %347, align 4, !noalias !601
  %349 = zext i32 %348 to i64
  %350 = trunc i64 %326 to i32
  store i32 %350, i32* %347, align 4, !noalias !601
  %351 = icmp eq i64 %326, %57
  %352 = icmp ne i32 %348, -1
  %353 = and i1 %351, %352
  br i1 %353, label %354, label %410

354:                                              ; preds = %344
  %355 = sub i32 %300, %348
  %356 = zext i32 %355 to i64
  %357 = icmp ult i64 %62, %356
  br i1 %357, label %410, label %358

358:                                              ; preds = %354
  %359 = and i64 %349, %3
  %360 = getelementptr inbounds i8, i8* %2, i64 %359
  br i1 %148, label %381, label %361, !prof !13

361:                                              ; preds = %358, %371
  %362 = phi i64 [ %374, %371 ], [ %147, %358 ]
  %363 = phi i8* [ %372, %371 ], [ %65, %358 ]
  %364 = phi i64 [ %373, %371 ], [ 0, %358 ]
  %365 = bitcast i8* %363 to i64*
  %366 = load i64, i64* %365, align 8, !alias.scope !599, !noalias !600
  %367 = getelementptr inbounds i8, i8* %360, i64 %364
  %368 = bitcast i8* %367 to i64*
  %369 = load i64, i64* %368, align 8, !alias.scope !599, !noalias !600
  %370 = icmp eq i64 %366, %369
  br i1 %370, label %371, label %376, !prof !13

371:                                              ; preds = %361
  %372 = getelementptr inbounds i8, i8* %363, i64 8
  %373 = add nuw i64 %364, 8
  %374 = add nsw i64 %362, -1
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %381, label %361, !prof !13

376:                                              ; preds = %361
  %377 = xor i64 %369, %366
  %378 = tail call i64 @llvm.cttz.i64(i64 %377, i1 true) #4, !range !14
  %379 = lshr i64 %378, 3
  %380 = or i64 %379, %364
  br label %391

381:                                              ; preds = %371, %358
  %382 = phi i64 [ 0, %358 ], [ %373, %371 ]
  %383 = phi i8* [ %65, %358 ], [ %372, %371 ]
  br i1 %150, label %391, label %384

384:                                              ; preds = %381
  %385 = getelementptr inbounds i8, i8* %360, i64 %382
  %386 = load i8, i8* %385, align 1, !alias.scope !599, !noalias !600
  %387 = load i8, i8* %383, align 1, !alias.scope !599, !noalias !600
  %388 = icmp eq i8 %386, %387
  br i1 %388, label %389, label %391, !prof !15

389:                                              ; preds = %384
  %390 = add i64 %382, 1
  br i1 %313, label %391, label %1328

391:                                              ; preds = %1368, %389, %384, %1328, %1334, %1336, %1342, %1344, %1350, %1352, %1358, %1360, %1366, %381, %376
  %392 = phi i64 [ %380, %376 ], [ %382, %381 ], [ %390, %389 ], [ %382, %384 ], [ %390, %1328 ], [ %1335, %1334 ], [ %1335, %1336 ], [ %1343, %1342 ], [ %1343, %1344 ], [ %1351, %1350 ], [ %1351, %1352 ], [ %1359, %1358 ], [ %1359, %1360 ], [ %1367, %1366 ], [ %1375, %1368 ]
  %393 = icmp ugt i64 %392, 3
  %394 = icmp ugt i64 %392, %324
  %395 = and i1 %393, %394
  br i1 %395, label %396, label %410

396:                                              ; preds = %391
  %397 = mul i64 %392, 135
  %398 = tail call i32 @llvm.ctlz.i32(i32 %355, i1 true) #4, !range !18
  %399 = xor i32 %398, 31
  %400 = mul nsw i32 %399, -30
  %401 = add nsw i32 %400, 1920
  %402 = zext i32 %401 to i64
  %403 = add i64 %397, %402
  %404 = icmp ugt i64 %403, %323
  %405 = select i1 %404, i64 %403, i64 %320
  %406 = select i1 %404, i64 %356, i64 %321
  %407 = select i1 %404, i64 %392, i64 %322
  %408 = select i1 %404, i64 %403, i64 %323
  %409 = select i1 %404, i64 %392, i64 %324
  br label %410

410:                                              ; preds = %396, %391, %354, %344, %319
  %411 = phi i64 [ %320, %354 ], [ %320, %391 ], [ %320, %344 ], [ %320, %319 ], [ %405, %396 ]
  %412 = phi i64 [ %321, %354 ], [ %321, %391 ], [ %321, %344 ], [ %321, %319 ], [ %406, %396 ]
  %413 = phi i64 [ %322, %354 ], [ %322, %391 ], [ %322, %344 ], [ %322, %319 ], [ %407, %396 ]
  %414 = phi i64 [ %323, %354 ], [ %323, %391 ], [ %323, %344 ], [ %323, %319 ], [ %408, %396 ]
  %415 = phi i64 [ %324, %354 ], [ %324, %391 ], [ %324, %344 ], [ %324, %319 ], [ %409, %396 ]
  %416 = add i64 %326, 4
  %417 = icmp ugt i64 %416, %57
  br i1 %417, label %418, label %319

418:                                              ; preds = %410
  store i32 %342, i32* %42, align 8, !alias.scope !593, !noalias !596
  br label %419

419:                                              ; preds = %418, %306
  %420 = phi i64 [ %297, %306 ], [ %411, %418 ]
  %421 = phi i64 [ %298, %306 ], [ %412, %418 ]
  %422 = phi i64 [ %299, %306 ], [ %413, %418 ]
  %423 = add i64 %57, 4
  store i64 %423, i64* %40, align 8, !alias.scope !593, !noalias !596
  br label %424

424:                                              ; preds = %296, %419
  %425 = phi i64 [ %297, %296 ], [ %420, %419 ]
  %426 = phi i64 [ %298, %296 ], [ %421, %419 ]
  %427 = phi i64 [ %299, %296 ], [ %422, %419 ]
  %428 = icmp ugt i64 %425, 2020
  br i1 %428, label %429, label %1095

429:                                              ; preds = %424, %820
  %430 = phi i64 [ %815, %820 ], [ %425, %424 ]
  %431 = phi i64 [ %816, %820 ], [ %426, %424 ]
  %432 = phi i64 [ %817, %820 ], [ %427, %424 ]
  %433 = phi i64 [ %821, %820 ], [ %60, %424 ]
  %434 = phi i64 [ %437, %820 ], [ %56, %424 ]
  %435 = phi i32 [ %822, %820 ], [ 0, %424 ]
  %436 = phi i64 [ %446, %820 ], [ %57, %424 ]
  %437 = add i64 %434, -1
  %438 = load i32, i32* %25, align 4
  %439 = icmp slt i32 %438, 5
  br i1 %439, label %440, label %444

440:                                              ; preds = %429
  %441 = add i64 %432, -1
  %442 = icmp ult i64 %441, %437
  %443 = select i1 %442, i64 %441, i64 %437
  br label %444

444:                                              ; preds = %429, %440
  %445 = phi i64 [ %443, %440 ], [ 0, %429 ]
  %446 = add i64 %436, 1
  %447 = icmp ult i64 %446, %17
  %448 = select i1 %447, i64 %446, i64 %17
  %449 = load i32*, i32** %34, align 8, !alias.scope !602, !noalias !607
  %450 = and i64 %446, %3
  %451 = add i64 %445, %450
  %452 = getelementptr inbounds i8, i8* %2, i64 %451
  %453 = load i8, i8* %452, align 1, !alias.scope !614, !noalias !615
  %454 = zext i8 %453 to i32
  %455 = getelementptr inbounds i8, i8* %2, i64 %450
  %456 = bitcast i8* %455 to i64*
  %457 = load i64, i64* %456, align 8, !alias.scope !614, !noalias !615
  %458 = mul i64 %457, -4819355556693147648
  %459 = lshr i64 %458, 48
  %460 = load i32, i32* %6, align 4, !alias.scope !616, !noalias !617
  %461 = sext i32 %460 to i64
  %462 = sub i64 %446, %461
  %463 = icmp ult i64 %462, %446
  br i1 %463, label %464, label %526

464:                                              ; preds = %444
  %465 = and i64 %35, %462
  %466 = add i64 %465, %445
  %467 = getelementptr inbounds i8, i8* %2, i64 %466
  %468 = load i8, i8* %467, align 1, !alias.scope !614, !noalias !615
  %469 = icmp eq i8 %453, %468
  br i1 %469, label %470, label %526

470:                                              ; preds = %464
  %471 = getelementptr inbounds i8, i8* %2, i64 %465
  %472 = lshr i64 %437, 3
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %501, label %474, !prof !13

474:                                              ; preds = %470
  %475 = bitcast i8* %471 to i64*
  %476 = load i64, i64* %475, align 8, !alias.scope !614, !noalias !615
  %477 = icmp eq i64 %457, %476
  br i1 %477, label %478, label %493, !prof !13

478:                                              ; preds = %474, %486
  %479 = phi i64 [ %483, %486 ], [ 0, %474 ]
  %480 = phi i8* [ %482, %486 ], [ %455, %474 ]
  %481 = phi i64 [ %484, %486 ], [ %472, %474 ]
  %482 = getelementptr inbounds i8, i8* %480, i64 8
  %483 = add nuw i64 %479, 8
  %484 = add nsw i64 %481, -1
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %501, label %486, !prof !13

486:                                              ; preds = %478
  %487 = bitcast i8* %482 to i64*
  %488 = load i64, i64* %487, align 8, !alias.scope !614, !noalias !615
  %489 = getelementptr inbounds i8, i8* %471, i64 %483
  %490 = bitcast i8* %489 to i64*
  %491 = load i64, i64* %490, align 8, !alias.scope !614, !noalias !615
  %492 = icmp eq i64 %488, %491
  br i1 %492, label %478, label %493, !prof !13

493:                                              ; preds = %486, %474
  %494 = phi i64 [ %457, %474 ], [ %488, %486 ]
  %495 = phi i64 [ 0, %474 ], [ %483, %486 ]
  %496 = phi i64 [ %476, %474 ], [ %491, %486 ]
  %497 = xor i64 %496, %494
  %498 = tail call i64 @llvm.cttz.i64(i64 %497, i1 true) #4, !range !14
  %499 = lshr i64 %498, 3
  %500 = or i64 %499, %495
  br label %514

501:                                              ; preds = %478, %470
  %502 = phi i64 [ 0, %470 ], [ %483, %478 ]
  %503 = phi i8* [ %455, %470 ], [ %482, %478 ]
  %504 = and i64 %437, 7
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %514, label %506

506:                                              ; preds = %501
  %507 = getelementptr inbounds i8, i8* %471, i64 %502
  %508 = load i8, i8* %507, align 1, !alias.scope !614, !noalias !615
  %509 = load i8, i8* %503, align 1, !alias.scope !614, !noalias !615
  %510 = icmp eq i8 %508, %509
  br i1 %510, label %511, label %514, !prof !15

511:                                              ; preds = %506
  %512 = add i64 %502, 1
  %513 = icmp eq i64 %504, 1
  br i1 %513, label %514, label %1376

514:                                              ; preds = %1421, %511, %506, %1376, %1382, %1385, %1391, %1394, %1400, %1403, %1409, %1412, %1418, %501, %493
  %515 = phi i64 [ %500, %493 ], [ %502, %501 ], [ %512, %511 ], [ %502, %506 ], [ %512, %1376 ], [ %1383, %1382 ], [ %1383, %1385 ], [ %1392, %1391 ], [ %1392, %1394 ], [ %1401, %1400 ], [ %1401, %1403 ], [ %1410, %1409 ], [ %1410, %1412 ], [ %1419, %1418 ], [ %1428, %1421 ]
  %516 = icmp ugt i64 %515, 3
  br i1 %516, label %517, label %526

517:                                              ; preds = %514
  %518 = mul i64 %515, 135
  %519 = add i64 %518, 1935
  %520 = icmp ugt i64 %519, 2020
  br i1 %520, label %521, label %526

521:                                              ; preds = %517
  %522 = add i64 %515, %450
  %523 = getelementptr inbounds i8, i8* %2, i64 %522
  %524 = load i8, i8* %523, align 1, !alias.scope !614, !noalias !615
  %525 = zext i8 %524 to i32
  br label %526

526:                                              ; preds = %521, %517, %514, %464, %444
  %527 = phi i64 [ %519, %521 ], [ 2020, %517 ], [ 2020, %514 ], [ 2020, %464 ], [ 2020, %444 ]
  %528 = phi i64 [ %461, %521 ], [ 0, %517 ], [ 0, %514 ], [ 0, %464 ], [ 0, %444 ]
  %529 = phi i64 [ %515, %521 ], [ %445, %517 ], [ %445, %514 ], [ %445, %464 ], [ %445, %444 ]
  %530 = phi i32 [ %525, %521 ], [ %454, %517 ], [ %454, %514 ], [ %454, %464 ], [ %454, %444 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #4, !noalias !618
  store i64 %459, i64* %37, align 16, !noalias !618
  %531 = add nuw nsw i64 %459, 8
  %532 = and i64 %531, 65535
  store i64 %532, i64* %38, align 8, !noalias !618
  %533 = lshr i64 %446, 3
  %534 = and i64 %533, 1
  %535 = getelementptr inbounds [2 x i64], [2 x i64]* %12, i64 0, i64 %534
  %536 = load i64, i64* %535, align 8, !noalias !618
  %537 = lshr i64 %437, 3
  %538 = icmp eq i64 %537, 0
  %539 = and i64 %437, 7
  %540 = icmp eq i64 %539, 0
  %541 = getelementptr inbounds i32, i32* %449, i64 %459
  %542 = load i32, i32* %541, align 4, !noalias !618
  %543 = zext i32 %542 to i64
  %544 = sub i64 %446, %543
  %545 = and i64 %543, %3
  %546 = add i64 %545, %529
  %547 = getelementptr inbounds i8, i8* %2, i64 %546
  %548 = load i8, i8* %547, align 1, !alias.scope !614, !noalias !615
  %549 = zext i8 %548 to i32
  %550 = icmp eq i32 %530, %549
  %551 = add i64 %544, -1
  %552 = icmp ult i64 %551, %448
  %553 = and i1 %550, %552
  br i1 %553, label %554, label %612, !prof !17

554:                                              ; preds = %526
  %555 = getelementptr inbounds i8, i8* %2, i64 %545
  br i1 %538, label %583, label %556, !prof !13

556:                                              ; preds = %554
  %557 = bitcast i8* %555 to i64*
  %558 = load i64, i64* %557, align 8, !alias.scope !614, !noalias !615
  %559 = icmp eq i64 %457, %558
  br i1 %559, label %560, label %575, !prof !13

560:                                              ; preds = %556, %568
  %561 = phi i64 [ %565, %568 ], [ 0, %556 ]
  %562 = phi i8* [ %564, %568 ], [ %455, %556 ]
  %563 = phi i64 [ %566, %568 ], [ %537, %556 ]
  %564 = getelementptr inbounds i8, i8* %562, i64 8
  %565 = add nuw i64 %561, 8
  %566 = add nsw i64 %563, -1
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %583, label %568, !prof !13

568:                                              ; preds = %560
  %569 = bitcast i8* %564 to i64*
  %570 = load i64, i64* %569, align 8, !alias.scope !614, !noalias !615
  %571 = getelementptr inbounds i8, i8* %555, i64 %565
  %572 = bitcast i8* %571 to i64*
  %573 = load i64, i64* %572, align 8, !alias.scope !614, !noalias !615
  %574 = icmp eq i64 %570, %573
  br i1 %574, label %560, label %575, !prof !13

575:                                              ; preds = %568, %556
  %576 = phi i64 [ %457, %556 ], [ %570, %568 ]
  %577 = phi i64 [ 0, %556 ], [ %565, %568 ]
  %578 = phi i64 [ %558, %556 ], [ %573, %568 ]
  %579 = xor i64 %578, %576
  %580 = tail call i64 @llvm.cttz.i64(i64 %579, i1 true) #4, !range !14
  %581 = lshr i64 %580, 3
  %582 = or i64 %581, %577
  br label %594

583:                                              ; preds = %560, %554
  %584 = phi i64 [ 0, %554 ], [ %565, %560 ]
  %585 = phi i8* [ %455, %554 ], [ %564, %560 ]
  br i1 %540, label %594, label %586

586:                                              ; preds = %583
  %587 = getelementptr inbounds i8, i8* %555, i64 %584
  %588 = load i8, i8* %587, align 1, !alias.scope !614, !noalias !615
  %589 = load i8, i8* %585, align 1, !alias.scope !614, !noalias !615
  %590 = icmp eq i8 %588, %589
  br i1 %590, label %591, label %594, !prof !15

591:                                              ; preds = %586
  %592 = add i64 %584, 1
  %593 = icmp eq i64 %539, 1
  br i1 %593, label %594, label %1429

594:                                              ; preds = %1474, %591, %586, %1429, %1435, %1438, %1444, %1447, %1453, %1456, %1462, %1465, %1471, %583, %575
  %595 = phi i64 [ %582, %575 ], [ %584, %583 ], [ %592, %591 ], [ %584, %586 ], [ %592, %1429 ], [ %1436, %1435 ], [ %1436, %1438 ], [ %1445, %1444 ], [ %1445, %1447 ], [ %1454, %1453 ], [ %1454, %1456 ], [ %1463, %1462 ], [ %1463, %1465 ], [ %1472, %1471 ], [ %1481, %1474 ]
  %596 = icmp ugt i64 %595, 3
  br i1 %596, label %597, label %612

597:                                              ; preds = %594
  %598 = mul i64 %595, 135
  %599 = trunc i64 %544 to i32
  %600 = tail call i32 @llvm.ctlz.i32(i32 %599, i1 true) #4, !range !18
  %601 = xor i32 %600, 31
  %602 = mul nsw i32 %601, -30
  %603 = add nsw i32 %602, 1920
  %604 = zext i32 %603 to i64
  %605 = add i64 %598, %604
  %606 = icmp ult i64 %527, %605
  br i1 %606, label %607, label %612

607:                                              ; preds = %597
  %608 = add i64 %595, %450
  %609 = getelementptr inbounds i8, i8* %2, i64 %608
  %610 = load i8, i8* %609, align 1, !alias.scope !614, !noalias !615
  %611 = zext i8 %610 to i32
  br label %612

612:                                              ; preds = %607, %597, %594, %526
  %613 = phi i64 [ %605, %607 ], [ %527, %597 ], [ %527, %594 ], [ %527, %526 ]
  %614 = phi i64 [ %544, %607 ], [ %528, %597 ], [ %528, %594 ], [ %528, %526 ]
  %615 = phi i64 [ %595, %607 ], [ %529, %597 ], [ %529, %594 ], [ %529, %526 ]
  %616 = phi i32 [ %611, %607 ], [ %530, %597 ], [ %530, %594 ], [ %530, %526 ]
  %617 = getelementptr inbounds i32, i32* %449, i64 %532
  %618 = load i32, i32* %617, align 4, !noalias !618
  %619 = zext i32 %618 to i64
  %620 = sub i64 %446, %619
  %621 = and i64 %619, %3
  %622 = add i64 %621, %615
  %623 = getelementptr inbounds i8, i8* %2, i64 %622
  %624 = load i8, i8* %623, align 1, !alias.scope !614, !noalias !615
  %625 = zext i8 %624 to i32
  %626 = icmp eq i32 %616, %625
  %627 = add i64 %620, -1
  %628 = icmp ult i64 %627, %448
  %629 = and i1 %626, %628
  br i1 %629, label %630, label %686, !prof !17

630:                                              ; preds = %612
  %631 = getelementptr inbounds i8, i8* %2, i64 %621
  br i1 %538, label %659, label %632, !prof !13

632:                                              ; preds = %630
  %633 = bitcast i8* %631 to i64*
  %634 = load i64, i64* %633, align 8, !alias.scope !614, !noalias !615
  %635 = icmp eq i64 %457, %634
  br i1 %635, label %644, label %636, !prof !13

636:                                              ; preds = %652, %632
  %637 = phi i64 [ %457, %632 ], [ %654, %652 ]
  %638 = phi i64 [ 0, %632 ], [ %649, %652 ]
  %639 = phi i64 [ %634, %632 ], [ %657, %652 ]
  %640 = xor i64 %639, %637
  %641 = tail call i64 @llvm.cttz.i64(i64 %640, i1 true) #4, !range !14
  %642 = lshr i64 %641, 3
  %643 = or i64 %642, %638
  br label %670

644:                                              ; preds = %632, %652
  %645 = phi i64 [ %649, %652 ], [ 0, %632 ]
  %646 = phi i8* [ %648, %652 ], [ %455, %632 ]
  %647 = phi i64 [ %650, %652 ], [ %537, %632 ]
  %648 = getelementptr inbounds i8, i8* %646, i64 8
  %649 = add nuw i64 %645, 8
  %650 = add nsw i64 %647, -1
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %659, label %652, !prof !13

652:                                              ; preds = %644
  %653 = bitcast i8* %648 to i64*
  %654 = load i64, i64* %653, align 8, !alias.scope !614, !noalias !615
  %655 = getelementptr inbounds i8, i8* %631, i64 %649
  %656 = bitcast i8* %655 to i64*
  %657 = load i64, i64* %656, align 8, !alias.scope !614, !noalias !615
  %658 = icmp eq i64 %654, %657
  br i1 %658, label %644, label %636, !prof !13

659:                                              ; preds = %644, %630
  %660 = phi i64 [ 0, %630 ], [ %649, %644 ]
  %661 = phi i8* [ %455, %630 ], [ %648, %644 ]
  br i1 %540, label %670, label %662

662:                                              ; preds = %659
  %663 = getelementptr inbounds i8, i8* %631, i64 %660
  %664 = load i8, i8* %663, align 1, !alias.scope !614, !noalias !615
  %665 = load i8, i8* %661, align 1, !alias.scope !614, !noalias !615
  %666 = icmp eq i8 %664, %665
  br i1 %666, label %667, label %670, !prof !15

667:                                              ; preds = %662
  %668 = add i64 %660, 1
  %669 = icmp eq i64 %539, 1
  br i1 %669, label %670, label %1482

670:                                              ; preds = %1527, %667, %662, %1482, %1488, %1491, %1497, %1500, %1506, %1509, %1515, %1518, %1524, %659, %636
  %671 = phi i64 [ %643, %636 ], [ %660, %659 ], [ %668, %667 ], [ %660, %662 ], [ %668, %1482 ], [ %1489, %1488 ], [ %1489, %1491 ], [ %1498, %1497 ], [ %1498, %1500 ], [ %1507, %1506 ], [ %1507, %1509 ], [ %1516, %1515 ], [ %1516, %1518 ], [ %1525, %1524 ], [ %1534, %1527 ]
  %672 = icmp ugt i64 %671, 3
  br i1 %672, label %673, label %686

673:                                              ; preds = %670
  %674 = mul i64 %671, 135
  %675 = trunc i64 %620 to i32
  %676 = tail call i32 @llvm.ctlz.i32(i32 %675, i1 true) #4, !range !18
  %677 = xor i32 %676, 31
  %678 = mul nsw i32 %677, -30
  %679 = add nsw i32 %678, 1920
  %680 = zext i32 %679 to i64
  %681 = add i64 %674, %680
  %682 = icmp ult i64 %613, %681
  %683 = select i1 %682, i64 %681, i64 %613
  %684 = select i1 %682, i64 %620, i64 %614
  %685 = select i1 %682, i64 %671, i64 %615
  br label %686

686:                                              ; preds = %673, %670, %612
  %687 = phi i64 [ %613, %670 ], [ %613, %612 ], [ %683, %673 ]
  %688 = phi i64 [ %614, %670 ], [ %614, %612 ], [ %684, %673 ]
  %689 = phi i64 [ %615, %670 ], [ %615, %612 ], [ %685, %673 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #4, !noalias !618
  %690 = trunc i64 %446 to i32
  %691 = getelementptr inbounds i32, i32* %449, i64 %536
  store i32 %690, i32* %691, align 4, !noalias !618
  %692 = and i64 %446, 3
  %693 = icmp ne i64 %692, 0
  %694 = icmp ult i64 %437, 32
  %695 = or i1 %694, %693
  br i1 %695, label %814, label %696

696:                                              ; preds = %686
  %697 = load i64, i64* %40, align 8, !alias.scope !619, !noalias !622
  %698 = icmp ugt i64 %697, %446
  br i1 %698, label %809, label %699

699:                                              ; preds = %696
  %700 = load i32, i32* %42, align 8, !alias.scope !619, !noalias !622
  %701 = load i32, i32* %44, align 4, !alias.scope !619, !noalias !622
  %702 = load i32, i32* %46, align 8, !alias.scope !619, !noalias !622
  %703 = icmp eq i64 %539, 1
  %704 = icmp eq i64 %539, 2
  %705 = icmp eq i64 %539, 3
  %706 = icmp eq i64 %539, 4
  %707 = icmp eq i64 %539, 5
  %708 = icmp eq i64 %539, 6
  br label %709

709:                                              ; preds = %800, %699
  %710 = phi i64 [ %687, %699 ], [ %801, %800 ]
  %711 = phi i64 [ %688, %699 ], [ %802, %800 ]
  %712 = phi i64 [ %689, %699 ], [ %803, %800 ]
  %713 = phi i64 [ %687, %699 ], [ %804, %800 ]
  %714 = phi i64 [ %689, %699 ], [ %805, %800 ]
  %715 = phi i32 [ %700, %699 ], [ %732, %800 ]
  %716 = phi i64 [ %697, %699 ], [ %806, %800 ]
  %717 = and i32 %715, 1073741823
  %718 = and i64 %716, %3
  %719 = getelementptr inbounds i8, i8* %2, i64 %718
  %720 = load i8, i8* %719, align 1, !alias.scope !625, !noalias !626
  %721 = add i64 %716, 32
  %722 = and i64 %721, %3
  %723 = getelementptr inbounds i8, i8* %2, i64 %722
  %724 = load i8, i8* %723, align 1, !alias.scope !625, !noalias !626
  %725 = mul i32 %715, %701
  %726 = zext i8 %724 to i32
  %727 = zext i8 %720 to i32
  %728 = add nuw nsw i32 %727, 1
  %729 = mul i32 %728, %702
  %730 = add i32 %725, 1
  %731 = add i32 %730, %726
  %732 = sub i32 %731, %729
  %733 = icmp ult i32 %717, 16777216
  br i1 %733, label %734, label %800

734:                                              ; preds = %709
  %735 = load i32*, i32** %48, align 8, !alias.scope !619, !noalias !622
  %736 = zext i32 %717 to i64
  %737 = getelementptr inbounds i32, i32* %735, i64 %736
  %738 = load i32, i32* %737, align 4, !noalias !627
  %739 = zext i32 %738 to i64
  %740 = trunc i64 %716 to i32
  store i32 %740, i32* %737, align 4, !noalias !627
  %741 = icmp eq i64 %716, %446
  %742 = icmp ne i32 %738, -1
  %743 = and i1 %741, %742
  br i1 %743, label %744, label %800

744:                                              ; preds = %734
  %745 = sub i32 %690, %738
  %746 = zext i32 %745 to i64
  %747 = icmp ult i64 %448, %746
  br i1 %747, label %800, label %748

748:                                              ; preds = %744
  %749 = and i64 %739, %3
  %750 = getelementptr inbounds i8, i8* %2, i64 %749
  br i1 %538, label %771, label %751, !prof !13

751:                                              ; preds = %748, %761
  %752 = phi i64 [ %764, %761 ], [ %537, %748 ]
  %753 = phi i8* [ %762, %761 ], [ %455, %748 ]
  %754 = phi i64 [ %763, %761 ], [ 0, %748 ]
  %755 = bitcast i8* %753 to i64*
  %756 = load i64, i64* %755, align 8, !alias.scope !625, !noalias !626
  %757 = getelementptr inbounds i8, i8* %750, i64 %754
  %758 = bitcast i8* %757 to i64*
  %759 = load i64, i64* %758, align 8, !alias.scope !625, !noalias !626
  %760 = icmp eq i64 %756, %759
  br i1 %760, label %761, label %766, !prof !13

761:                                              ; preds = %751
  %762 = getelementptr inbounds i8, i8* %753, i64 8
  %763 = add nuw i64 %754, 8
  %764 = add nsw i64 %752, -1
  %765 = icmp eq i64 %764, 0
  br i1 %765, label %771, label %751, !prof !13

766:                                              ; preds = %751
  %767 = xor i64 %759, %756
  %768 = tail call i64 @llvm.cttz.i64(i64 %767, i1 true) #4, !range !14
  %769 = lshr i64 %768, 3
  %770 = or i64 %769, %754
  br label %781

771:                                              ; preds = %761, %748
  %772 = phi i64 [ 0, %748 ], [ %763, %761 ]
  %773 = phi i8* [ %455, %748 ], [ %762, %761 ]
  br i1 %540, label %781, label %774

774:                                              ; preds = %771
  %775 = getelementptr inbounds i8, i8* %750, i64 %772
  %776 = load i8, i8* %775, align 1, !alias.scope !625, !noalias !626
  %777 = load i8, i8* %773, align 1, !alias.scope !625, !noalias !626
  %778 = icmp eq i8 %776, %777
  br i1 %778, label %779, label %781, !prof !15

779:                                              ; preds = %774
  %780 = add i64 %772, 1
  br i1 %703, label %781, label %1535

781:                                              ; preds = %1575, %779, %774, %1535, %1541, %1543, %1549, %1551, %1557, %1559, %1565, %1567, %1573, %771, %766
  %782 = phi i64 [ %770, %766 ], [ %772, %771 ], [ %780, %779 ], [ %772, %774 ], [ %780, %1535 ], [ %1542, %1541 ], [ %1542, %1543 ], [ %1550, %1549 ], [ %1550, %1551 ], [ %1558, %1557 ], [ %1558, %1559 ], [ %1566, %1565 ], [ %1566, %1567 ], [ %1574, %1573 ], [ %1582, %1575 ]
  %783 = icmp ugt i64 %782, 3
  %784 = icmp ugt i64 %782, %714
  %785 = and i1 %783, %784
  br i1 %785, label %786, label %800

786:                                              ; preds = %781
  %787 = mul i64 %782, 135
  %788 = tail call i32 @llvm.ctlz.i32(i32 %745, i1 true) #4, !range !18
  %789 = xor i32 %788, 31
  %790 = mul nsw i32 %789, -30
  %791 = add nsw i32 %790, 1920
  %792 = zext i32 %791 to i64
  %793 = add i64 %787, %792
  %794 = icmp ugt i64 %793, %713
  %795 = select i1 %794, i64 %793, i64 %710
  %796 = select i1 %794, i64 %746, i64 %711
  %797 = select i1 %794, i64 %782, i64 %712
  %798 = select i1 %794, i64 %793, i64 %713
  %799 = select i1 %794, i64 %782, i64 %714
  br label %800

800:                                              ; preds = %786, %781, %744, %734, %709
  %801 = phi i64 [ %710, %744 ], [ %710, %781 ], [ %710, %734 ], [ %710, %709 ], [ %795, %786 ]
  %802 = phi i64 [ %711, %744 ], [ %711, %781 ], [ %711, %734 ], [ %711, %709 ], [ %796, %786 ]
  %803 = phi i64 [ %712, %744 ], [ %712, %781 ], [ %712, %734 ], [ %712, %709 ], [ %797, %786 ]
  %804 = phi i64 [ %713, %744 ], [ %713, %781 ], [ %713, %734 ], [ %713, %709 ], [ %798, %786 ]
  %805 = phi i64 [ %714, %744 ], [ %714, %781 ], [ %714, %734 ], [ %714, %709 ], [ %799, %786 ]
  %806 = add i64 %716, 4
  %807 = icmp ugt i64 %806, %446
  br i1 %807, label %808, label %709

808:                                              ; preds = %800
  store i32 %732, i32* %42, align 8, !alias.scope !619, !noalias !622
  br label %809

809:                                              ; preds = %808, %696
  %810 = phi i64 [ %687, %696 ], [ %801, %808 ]
  %811 = phi i64 [ %688, %696 ], [ %802, %808 ]
  %812 = phi i64 [ %689, %696 ], [ %803, %808 ]
  %813 = add i64 %436, 5
  store i64 %813, i64* %40, align 8, !alias.scope !619, !noalias !622
  br label %814

814:                                              ; preds = %686, %809
  %815 = phi i64 [ %687, %686 ], [ %810, %809 ]
  %816 = phi i64 [ %688, %686 ], [ %811, %809 ]
  %817 = phi i64 [ %689, %686 ], [ %812, %809 ]
  %818 = add i64 %430, 175
  %819 = icmp ult i64 %815, %818
  br i1 %819, label %827, label %820

820:                                              ; preds = %814
  %821 = add i64 %433, 1
  %822 = add nuw nsw i32 %435, 1
  %823 = icmp ult i32 %822, 4
  %824 = add i64 %436, 9
  %825 = icmp ult i64 %824, %21
  %826 = and i1 %823, %825
  br i1 %826, label %429, label %827

827:                                              ; preds = %820, %814
  %828 = phi i64 [ %431, %814 ], [ %816, %820 ]
  %829 = phi i64 [ %432, %814 ], [ %817, %820 ]
  %830 = phi i64 [ %433, %814 ], [ %821, %820 ]
  %831 = phi i64 [ %436, %814 ], [ %446, %820 ]
  %832 = shl i64 %829, 1
  %833 = add i64 %832, %28
  %834 = add i64 %833, %831
  %835 = add i64 %831, %19
  %836 = icmp ult i64 %835, %17
  %837 = select i1 %836, i64 %835, i64 %17
  %838 = icmp ugt i64 %828, %837
  br i1 %838, label %874, label %839

839:                                              ; preds = %827
  %840 = add i64 %828, 3
  %841 = load i32, i32* %6, align 4
  %842 = sext i32 %841 to i64
  %843 = sub i64 %840, %842
  %844 = load i32, i32* %50, align 4
  %845 = sext i32 %844 to i64
  %846 = sub i64 %840, %845
  %847 = icmp eq i64 %828, %842
  br i1 %847, label %886, label %848

848:                                              ; preds = %839
  %849 = icmp eq i64 %828, %845
  br i1 %849, label %876, label %850

850:                                              ; preds = %848
  %851 = icmp ult i64 %843, 7
  br i1 %851, label %852, label %858

852:                                              ; preds = %850
  %853 = trunc i64 %843 to i32
  %854 = shl i32 %853, 2
  %855 = lshr i32 158663784, %854
  %856 = and i32 %855, 15
  %857 = zext i32 %856 to i64
  br label %876

858:                                              ; preds = %850
  %859 = icmp ult i64 %846, 7
  br i1 %859, label %860, label %866

860:                                              ; preds = %858
  %861 = trunc i64 %846 to i32
  %862 = shl i32 %861, 2
  %863 = lshr i32 266017486, %862
  %864 = and i32 %863, 15
  %865 = zext i32 %864 to i64
  br label %876

866:                                              ; preds = %858
  %867 = load i32, i32* %51, align 4
  %868 = sext i32 %867 to i64
  %869 = icmp eq i64 %828, %868
  br i1 %869, label %876, label %870

870:                                              ; preds = %866
  %871 = load i32, i32* %52, align 4
  %872 = sext i32 %871 to i64
  %873 = icmp eq i64 %828, %872
  br i1 %873, label %876, label %874

874:                                              ; preds = %870, %827
  %875 = add i64 %828, 15
  br label %876

876:                                              ; preds = %848, %852, %860, %866, %870, %874
  %877 = phi i64 [ %875, %874 ], [ 3, %870 ], [ 2, %866 ], [ 1, %848 ], [ %865, %860 ], [ %857, %852 ]
  %878 = icmp ule i64 %828, %837
  %879 = icmp ne i64 %877, 0
  %880 = and i1 %878, %879
  br i1 %880, label %881, label %886

881:                                              ; preds = %876
  %882 = load i32, i32* %51, align 4
  store i32 %882, i32* %52, align 4
  %883 = load i32, i32* %50, align 4
  store i32 %883, i32* %51, align 4
  %884 = load i32, i32* %6, align 4
  store i32 %884, i32* %50, align 4
  %885 = trunc i64 %828 to i32
  store i32 %885, i32* %6, align 4
  br label %886

886:                                              ; preds = %839, %881, %876
  %887 = phi i64 [ %877, %881 ], [ %877, %876 ], [ 0, %839 ]
  %888 = getelementptr inbounds %struct.Command, %struct.Command* %58, i64 1
  %889 = trunc i64 %830 to i32
  %890 = getelementptr inbounds %struct.Command, %struct.Command* %58, i64 0, i32 0
  store i32 %889, i32* %890, align 4
  %891 = trunc i64 %829 to i32
  %892 = getelementptr inbounds %struct.Command, %struct.Command* %58, i64 0, i32 1
  store i32 %891, i32* %892, align 4
  %893 = load i32, i32* %53, align 4
  %894 = zext i32 %893 to i64
  %895 = load i32, i32* %54, align 8
  %896 = zext i32 %895 to i64
  %897 = getelementptr inbounds %struct.Command, %struct.Command* %58, i64 0, i32 4
  %898 = getelementptr inbounds %struct.Command, %struct.Command* %58, i64 0, i32 2
  %899 = add nuw nsw i64 %894, 16
  %900 = icmp ugt i64 %899, %887
  br i1 %900, label %901, label %903

901:                                              ; preds = %886
  %902 = trunc i64 %887 to i16
  store i16 %902, i16* %897, align 2
  br label %933

903:                                              ; preds = %886
  %904 = shl i64 4, %896
  %905 = add i64 %887, -16
  %906 = sub i64 %905, %894
  %907 = add i64 %906, %904
  %908 = trunc i64 %907 to i32
  %909 = tail call i32 @llvm.ctlz.i32(i32 %908, i1 true) #4, !range !18
  %910 = sub nsw i32 30, %909
  %911 = zext i32 %910 to i64
  %912 = shl nsw i32 -1, %895
  %913 = xor i32 %912, 65535
  %914 = zext i32 %913 to i64
  %915 = and i64 %907, %914
  %916 = lshr i64 %907, %911
  %917 = and i64 %916, 1
  %918 = or i64 %917, 2
  %919 = shl i64 %918, %911
  %920 = sub nsw i64 %911, %896
  %921 = shl nsw i64 %920, 10
  %922 = shl nsw i64 %920, 1
  %923 = add nsw i64 %922, -2
  %924 = or i64 %923, %917
  %925 = shl i64 %924, %896
  %926 = add nuw nsw i64 %915, %899
  %927 = add i64 %926, %925
  %928 = or i64 %927, %921
  %929 = trunc i64 %928 to i16
  store i16 %929, i16* %897, align 2
  %930 = sub i64 %907, %919
  %931 = lshr i64 %930, %896
  %932 = trunc i64 %931 to i32
  br label %933

933:                                              ; preds = %903, %901
  %934 = phi i16 [ %929, %903 ], [ %902, %901 ]
  %935 = phi i32 [ %932, %903 ], [ 0, %901 ]
  store i32 %935, i32* %898, align 4
  %936 = shl i64 %829, 32
  %937 = ashr exact i64 %936, 32
  %938 = and i16 %934, 1023
  %939 = icmp eq i16 %938, 0
  %940 = getelementptr inbounds %struct.Command, %struct.Command* %58, i64 0, i32 3
  %941 = icmp ult i64 %830, 6
  br i1 %941, label %942, label %944

942:                                              ; preds = %933
  %943 = trunc i64 %830 to i16
  br label %970

944:                                              ; preds = %933
  %945 = icmp ult i64 %830, 130
  br i1 %945, label %946, label %958

946:                                              ; preds = %944
  %947 = add nsw i64 %830, -2
  %948 = trunc i64 %947 to i32
  %949 = tail call i32 @llvm.ctlz.i32(i32 %948, i1 true) #4, !range !18
  %950 = sub nsw i32 30, %949
  %951 = shl nsw i32 %950, 1
  %952 = zext i32 %951 to i64
  %953 = zext i32 %950 to i64
  %954 = lshr i64 %947, %953
  %955 = add nuw nsw i64 %954, %952
  %956 = trunc i64 %955 to i16
  %957 = add i16 %956, 2
  br label %970

958:                                              ; preds = %944
  %959 = icmp ult i64 %830, 2114
  br i1 %959, label %960, label %965

960:                                              ; preds = %958
  %961 = add nsw i32 %889, -66
  %962 = tail call i32 @llvm.ctlz.i32(i32 %961, i1 true) #4, !range !18
  %963 = trunc i32 %962 to i16
  %964 = sub nuw nsw i16 41, %963
  br label %970

965:                                              ; preds = %958
  %966 = icmp ult i64 %830, 6210
  br i1 %966, label %970, label %967

967:                                              ; preds = %965
  %968 = icmp ult i64 %830, 22594
  %969 = select i1 %968, i16 22, i16 23
  br label %970

970:                                              ; preds = %967, %965, %960, %946, %942
  %971 = phi i16 [ %943, %942 ], [ %957, %946 ], [ %964, %960 ], [ 21, %965 ], [ %969, %967 ]
  %972 = icmp ult i32 %891, 10
  br i1 %972, label %973, label %976

973:                                              ; preds = %970
  %974 = trunc i64 %829 to i16
  %975 = add nsw i16 %974, -2
  br label %997

976:                                              ; preds = %970
  %977 = icmp ult i32 %891, 134
  br i1 %977, label %978, label %990

978:                                              ; preds = %976
  %979 = add nsw i64 %937, -6
  %980 = trunc i64 %979 to i32
  %981 = tail call i32 @llvm.ctlz.i32(i32 %980, i1 true) #4, !range !18
  %982 = sub nsw i32 30, %981
  %983 = shl nsw i32 %982, 1
  %984 = zext i32 %983 to i64
  %985 = zext i32 %982 to i64
  %986 = lshr i64 %979, %985
  %987 = add nuw nsw i64 %986, %984
  %988 = trunc i64 %987 to i16
  %989 = add i16 %988, 4
  br label %997

990:                                              ; preds = %976
  %991 = icmp ult i32 %891, 2118
  br i1 %991, label %992, label %997

992:                                              ; preds = %990
  %993 = add nsw i32 %891, -70
  %994 = tail call i32 @llvm.ctlz.i32(i32 %993, i1 true) #4, !range !18
  %995 = trunc i32 %994 to i16
  %996 = sub nuw nsw i16 43, %995
  br label %997

997:                                              ; preds = %992, %990, %978, %973
  %998 = phi i16 [ %975, %973 ], [ %989, %978 ], [ %996, %992 ], [ 23, %990 ]
  %999 = and i16 %998, 7
  %1000 = shl i16 %971, 3
  %1001 = and i16 %1000, 56
  %1002 = or i16 %999, %1001
  %1003 = icmp ult i16 %971, 8
  %1004 = and i1 %939, %1003
  %1005 = icmp ult i16 %998, 16
  %1006 = and i1 %1004, %1005
  br i1 %1006, label %1007, label %1011

1007:                                             ; preds = %997
  %1008 = icmp ult i16 %998, 8
  %1009 = or i16 %1002, 64
  %1010 = select i1 %1008, i16 %1002, i16 %1009
  br label %1026

1011:                                             ; preds = %997
  %1012 = lshr i16 %998, 3
  %1013 = lshr i16 %971, 3
  %1014 = mul nuw nsw i16 %1013, 3
  %1015 = add nuw nsw i16 %1012, %1014
  %1016 = zext i16 %1015 to i32
  %1017 = shl nuw i16 %1015, 1
  %1018 = zext i16 %1017 to i32
  %1019 = shl nuw nsw i32 %1016, 6
  %1020 = add nuw nsw i32 %1019, 64
  %1021 = lshr i32 5377344, %1018
  %1022 = and i32 %1021, 192
  %1023 = add nuw nsw i32 %1020, %1022
  %1024 = trunc i32 %1023 to i16
  %1025 = or i16 %1002, %1024
  br label %1026

1026:                                             ; preds = %1007, %1011
  %1027 = phi i16 [ %1010, %1007 ], [ %1025, %1011 ]
  store i16 %1027, i16* %940, align 2
  %1028 = load i64, i64* %10, align 8
  %1029 = add i64 %1028, %830
  store i64 %1029, i64* %10, align 8
  %1030 = add i64 %831, 2
  %1031 = add i64 %831, %829
  %1032 = icmp ult i64 %1031, %24
  %1033 = select i1 %1032, i64 %1031, i64 %24
  %1034 = lshr i64 %829, 2
  %1035 = icmp ult i64 %828, %1034
  br i1 %1035, label %1036, label %1043

1036:                                             ; preds = %1026
  %1037 = shl i64 %828, 2
  %1038 = sub i64 %1031, %1037
  %1039 = icmp ugt i64 %1030, %1038
  %1040 = select i1 %1039, i64 %1030, i64 %1038
  %1041 = icmp ult i64 %1033, %1040
  %1042 = select i1 %1041, i64 %1033, i64 %1040
  br label %1043

1043:                                             ; preds = %1036, %1026
  %1044 = phi i64 [ %1042, %1036 ], [ %1030, %1026 ]
  %1045 = icmp ugt i64 %1033, %1044
  br i1 %1045, label %1046, label %1150

1046:                                             ; preds = %1043
  %1047 = load i32*, i32** %34, align 8, !alias.scope !628, !noalias !635
  %1048 = sub i64 %1033, %1044
  %1049 = and i64 %1048, 1
  %1050 = icmp eq i64 %1049, 0
  br i1 %1050, label %1064, label %1051

1051:                                             ; preds = %1046
  %1052 = and i64 %1044, %3
  %1053 = getelementptr inbounds i8, i8* %2, i64 %1052
  %1054 = bitcast i8* %1053 to i64*
  %1055 = load i64, i64* %1054, align 8, !alias.scope !635, !noalias !628
  %1056 = mul i64 %1055, -4819355556693147648
  %1057 = lshr i64 %1056, 48
  %1058 = trunc i64 %1044 to i32
  %1059 = and i64 %1044, 8
  %1060 = add nuw nsw i64 %1057, %1059
  %1061 = and i64 %1060, 65535
  %1062 = getelementptr inbounds i32, i32* %1047, i64 %1061
  store i32 %1058, i32* %1062, align 4, !noalias !639
  %1063 = add nuw i64 %1044, 1
  br label %1064

1064:                                             ; preds = %1051, %1046
  %1065 = phi i64 [ %1063, %1051 ], [ %1044, %1046 ]
  %1066 = add i64 %1044, 1
  %1067 = icmp eq i64 %1033, %1066
  br i1 %1067, label %1150, label %1068

1068:                                             ; preds = %1064, %1068
  %1069 = phi i64 [ %1093, %1068 ], [ %1065, %1064 ]
  %1070 = and i64 %1069, %3
  %1071 = getelementptr inbounds i8, i8* %2, i64 %1070
  %1072 = bitcast i8* %1071 to i64*
  %1073 = load i64, i64* %1072, align 8, !alias.scope !635, !noalias !628
  %1074 = mul i64 %1073, -4819355556693147648
  %1075 = lshr i64 %1074, 48
  %1076 = trunc i64 %1069 to i32
  %1077 = and i64 %1069, 8
  %1078 = add nuw nsw i64 %1075, %1077
  %1079 = and i64 %1078, 65535
  %1080 = getelementptr inbounds i32, i32* %1047, i64 %1079
  store i32 %1076, i32* %1080, align 4, !noalias !639
  %1081 = add nuw i64 %1069, 1
  %1082 = and i64 %1081, %3
  %1083 = getelementptr inbounds i8, i8* %2, i64 %1082
  %1084 = bitcast i8* %1083 to i64*
  %1085 = load i64, i64* %1084, align 8, !alias.scope !635, !noalias !628
  %1086 = mul i64 %1085, -4819355556693147648
  %1087 = lshr i64 %1086, 48
  %1088 = trunc i64 %1081 to i32
  %1089 = and i64 %1081, 8
  %1090 = add nuw nsw i64 %1087, %1089
  %1091 = and i64 %1090, 65535
  %1092 = getelementptr inbounds i32, i32* %1047, i64 %1091
  store i32 %1088, i32* %1092, align 4, !noalias !639
  %1093 = add nuw i64 %1069, 2
  %1094 = icmp eq i64 %1093, %1033
  br i1 %1094, label %1150, label %1068

1095:                                             ; preds = %424
  %1096 = add i64 %60, 1
  %1097 = add i64 %57, 1
  %1098 = icmp ugt i64 %1097, %59
  br i1 %1098, label %1099, label %1150

1099:                                             ; preds = %1095
  %1100 = add i64 %59, %49
  %1101 = icmp ugt i64 %1097, %1100
  br i1 %1101, label %1102, label %1126

1102:                                             ; preds = %1099
  %1103 = add i64 %57, 17
  %1104 = icmp ult i64 %1103, %23
  %1105 = select i1 %1104, i64 %1103, i64 %23
  %1106 = icmp ult i64 %1097, %1105
  br i1 %1106, label %1107, label %1150

1107:                                             ; preds = %1102
  %1108 = load i32*, i32** %34, align 8, !alias.scope !640, !noalias !645
  br label %1109

1109:                                             ; preds = %1107, %1109
  %1110 = phi i64 [ %1097, %1107 ], [ %1124, %1109 ]
  %1111 = phi i64 [ %1096, %1107 ], [ %1123, %1109 ]
  %1112 = and i64 %1110, %3
  %1113 = getelementptr inbounds i8, i8* %2, i64 %1112
  %1114 = bitcast i8* %1113 to i64*
  %1115 = load i64, i64* %1114, align 8, !alias.scope !645, !noalias !640
  %1116 = mul i64 %1115, -4819355556693147648
  %1117 = lshr i64 %1116, 48
  %1118 = trunc i64 %1110 to i32
  %1119 = and i64 %1110, 8
  %1120 = add nuw nsw i64 %1117, %1119
  %1121 = and i64 %1120, 65535
  %1122 = getelementptr inbounds i32, i32* %1108, i64 %1121
  store i32 %1118, i32* %1122, align 4, !noalias !648
  %1123 = add i64 %1111, 4
  %1124 = add i64 %1110, 4
  %1125 = icmp ult i64 %1124, %1105
  br i1 %1125, label %1109, label %1150

1126:                                             ; preds = %1099
  %1127 = add i64 %57, 9
  %1128 = icmp ult i64 %1127, %23
  %1129 = select i1 %1128, i64 %1127, i64 %23
  %1130 = icmp ult i64 %1097, %1129
  br i1 %1130, label %1131, label %1150

1131:                                             ; preds = %1126
  %1132 = load i32*, i32** %34, align 8, !alias.scope !649, !noalias !654
  br label %1133

1133:                                             ; preds = %1131, %1133
  %1134 = phi i64 [ %1097, %1131 ], [ %1148, %1133 ]
  %1135 = phi i64 [ %1096, %1131 ], [ %1147, %1133 ]
  %1136 = and i64 %1134, %3
  %1137 = getelementptr inbounds i8, i8* %2, i64 %1136
  %1138 = bitcast i8* %1137 to i64*
  %1139 = load i64, i64* %1138, align 8, !alias.scope !654, !noalias !649
  %1140 = mul i64 %1139, -4819355556693147648
  %1141 = lshr i64 %1140, 48
  %1142 = trunc i64 %1134 to i32
  %1143 = and i64 %1134, 8
  %1144 = add nuw nsw i64 %1141, %1143
  %1145 = and i64 %1144, 65535
  %1146 = getelementptr inbounds i32, i32* %1132, i64 %1145
  store i32 %1142, i32* %1146, align 4, !noalias !657
  %1147 = add i64 %1135, 2
  %1148 = add i64 %1134, 2
  %1149 = icmp ult i64 %1148, %1129
  br i1 %1149, label %1133, label %1150

1150:                                             ; preds = %1133, %1109, %1064, %1068, %1126, %1102, %1043, %1095
  %1151 = phi i64 [ %1096, %1095 ], [ 0, %1043 ], [ %1096, %1102 ], [ %1096, %1126 ], [ 0, %1068 ], [ 0, %1064 ], [ %1123, %1109 ], [ %1147, %1133 ]
  %1152 = phi i64 [ %59, %1095 ], [ %834, %1043 ], [ %59, %1102 ], [ %59, %1126 ], [ %834, %1068 ], [ %834, %1064 ], [ %59, %1109 ], [ %59, %1133 ]
  %1153 = phi %struct.Command* [ %58, %1095 ], [ %888, %1043 ], [ %58, %1102 ], [ %58, %1126 ], [ %888, %1068 ], [ %888, %1064 ], [ %58, %1109 ], [ %58, %1133 ]
  %1154 = phi i64 [ %1097, %1095 ], [ %1031, %1043 ], [ %1097, %1102 ], [ %1097, %1126 ], [ %1031, %1068 ], [ %1031, %1064 ], [ %1124, %1109 ], [ %1148, %1133 ]
  %1155 = add i64 %1154, 8
  %1156 = icmp ult i64 %1155, %21
  %1157 = sub i64 %21, %1154
  br i1 %1156, label %55, label %1158

1158:                                             ; preds = %1150, %11
  %1159 = phi i64 [ %20, %11 ], [ %1151, %1150 ]
  %1160 = phi %struct.Command* [ %8, %11 ], [ %1153, %1150 ]
  %1161 = phi i64 [ %0, %11 ], [ %1157, %1150 ]
  %1162 = add i64 %1161, %1159
  store i64 %1162, i64* %7, align 8
  %1163 = ptrtoint %struct.Command* %1160 to i64
  %1164 = ptrtoint %struct.Command* %8 to i64
  %1165 = sub i64 %1163, %1164
  %1166 = ashr exact i64 %1165, 4
  %1167 = load i64, i64* %9, align 8
  %1168 = add i64 %1167, %1166
  store i64 %1168, i64* %9, align 8
  ret void

1169:                                             ; preds = %121
  %1170 = getelementptr inbounds i8, i8* %113, i64 1
  %1171 = getelementptr inbounds i8, i8* %78, i64 %122
  %1172 = load i8, i8* %1171, align 1, !alias.scope !588, !noalias !589
  %1173 = load i8, i8* %1170, align 1, !alias.scope !588, !noalias !589
  %1174 = icmp eq i8 %1172, %1173
  br i1 %1174, label %1175, label %124, !prof !15

1175:                                             ; preds = %1169
  %1176 = add i64 %112, 2
  %1177 = icmp eq i64 %114, 2
  br i1 %1177, label %124, label %1178

1178:                                             ; preds = %1175
  %1179 = getelementptr inbounds i8, i8* %113, i64 2
  %1180 = getelementptr inbounds i8, i8* %78, i64 %1176
  %1181 = load i8, i8* %1180, align 1, !alias.scope !588, !noalias !589
  %1182 = load i8, i8* %1179, align 1, !alias.scope !588, !noalias !589
  %1183 = icmp eq i8 %1181, %1182
  br i1 %1183, label %1184, label %124, !prof !15

1184:                                             ; preds = %1178
  %1185 = add i64 %112, 3
  %1186 = icmp eq i64 %114, 3
  br i1 %1186, label %124, label %1187

1187:                                             ; preds = %1184
  %1188 = getelementptr inbounds i8, i8* %113, i64 3
  %1189 = getelementptr inbounds i8, i8* %78, i64 %1185
  %1190 = load i8, i8* %1189, align 1, !alias.scope !588, !noalias !589
  %1191 = load i8, i8* %1188, align 1, !alias.scope !588, !noalias !589
  %1192 = icmp eq i8 %1190, %1191
  br i1 %1192, label %1193, label %124, !prof !15

1193:                                             ; preds = %1187
  %1194 = add i64 %112, 4
  %1195 = icmp eq i64 %114, 4
  br i1 %1195, label %124, label %1196

1196:                                             ; preds = %1193
  %1197 = getelementptr inbounds i8, i8* %113, i64 4
  %1198 = getelementptr inbounds i8, i8* %78, i64 %1194
  %1199 = load i8, i8* %1198, align 1, !alias.scope !588, !noalias !589
  %1200 = load i8, i8* %1197, align 1, !alias.scope !588, !noalias !589
  %1201 = icmp eq i8 %1199, %1200
  br i1 %1201, label %1202, label %124, !prof !15

1202:                                             ; preds = %1196
  %1203 = add i64 %112, 5
  %1204 = icmp eq i64 %114, 5
  br i1 %1204, label %124, label %1205

1205:                                             ; preds = %1202
  %1206 = getelementptr inbounds i8, i8* %113, i64 5
  %1207 = getelementptr inbounds i8, i8* %78, i64 %1203
  %1208 = load i8, i8* %1207, align 1, !alias.scope !588, !noalias !589
  %1209 = load i8, i8* %1206, align 1, !alias.scope !588, !noalias !589
  %1210 = icmp eq i8 %1208, %1209
  br i1 %1210, label %1211, label %124, !prof !15

1211:                                             ; preds = %1205
  %1212 = add i64 %112, 6
  %1213 = icmp eq i64 %114, 6
  br i1 %1213, label %124, label %1214

1214:                                             ; preds = %1211
  %1215 = getelementptr inbounds i8, i8* %113, i64 6
  %1216 = getelementptr inbounds i8, i8* %78, i64 %1212
  %1217 = load i8, i8* %1216, align 1, !alias.scope !588, !noalias !589
  %1218 = load i8, i8* %1215, align 1, !alias.scope !588, !noalias !589
  %1219 = icmp eq i8 %1217, %1218
  %1220 = add i64 %112, 7
  %1221 = select i1 %1219, i64 %1220, i64 %1212, !prof !15
  br label %124

1222:                                             ; preds = %201
  %1223 = getelementptr inbounds i8, i8* %195, i64 1
  %1224 = getelementptr inbounds i8, i8* %165, i64 %202
  %1225 = load i8, i8* %1224, align 1, !alias.scope !588, !noalias !589
  %1226 = load i8, i8* %1223, align 1, !alias.scope !588, !noalias !589
  %1227 = icmp eq i8 %1225, %1226
  br i1 %1227, label %1228, label %204, !prof !15

1228:                                             ; preds = %1222
  %1229 = add i64 %194, 2
  %1230 = icmp eq i64 %149, 2
  br i1 %1230, label %204, label %1231

1231:                                             ; preds = %1228
  %1232 = getelementptr inbounds i8, i8* %195, i64 2
  %1233 = getelementptr inbounds i8, i8* %165, i64 %1229
  %1234 = load i8, i8* %1233, align 1, !alias.scope !588, !noalias !589
  %1235 = load i8, i8* %1232, align 1, !alias.scope !588, !noalias !589
  %1236 = icmp eq i8 %1234, %1235
  br i1 %1236, label %1237, label %204, !prof !15

1237:                                             ; preds = %1231
  %1238 = add i64 %194, 3
  %1239 = icmp eq i64 %149, 3
  br i1 %1239, label %204, label %1240

1240:                                             ; preds = %1237
  %1241 = getelementptr inbounds i8, i8* %195, i64 3
  %1242 = getelementptr inbounds i8, i8* %165, i64 %1238
  %1243 = load i8, i8* %1242, align 1, !alias.scope !588, !noalias !589
  %1244 = load i8, i8* %1241, align 1, !alias.scope !588, !noalias !589
  %1245 = icmp eq i8 %1243, %1244
  br i1 %1245, label %1246, label %204, !prof !15

1246:                                             ; preds = %1240
  %1247 = add i64 %194, 4
  %1248 = icmp eq i64 %149, 4
  br i1 %1248, label %204, label %1249

1249:                                             ; preds = %1246
  %1250 = getelementptr inbounds i8, i8* %195, i64 4
  %1251 = getelementptr inbounds i8, i8* %165, i64 %1247
  %1252 = load i8, i8* %1251, align 1, !alias.scope !588, !noalias !589
  %1253 = load i8, i8* %1250, align 1, !alias.scope !588, !noalias !589
  %1254 = icmp eq i8 %1252, %1253
  br i1 %1254, label %1255, label %204, !prof !15

1255:                                             ; preds = %1249
  %1256 = add i64 %194, 5
  %1257 = icmp eq i64 %149, 5
  br i1 %1257, label %204, label %1258

1258:                                             ; preds = %1255
  %1259 = getelementptr inbounds i8, i8* %195, i64 5
  %1260 = getelementptr inbounds i8, i8* %165, i64 %1256
  %1261 = load i8, i8* %1260, align 1, !alias.scope !588, !noalias !589
  %1262 = load i8, i8* %1259, align 1, !alias.scope !588, !noalias !589
  %1263 = icmp eq i8 %1261, %1262
  br i1 %1263, label %1264, label %204, !prof !15

1264:                                             ; preds = %1258
  %1265 = add i64 %194, 6
  %1266 = icmp eq i64 %149, 6
  br i1 %1266, label %204, label %1267

1267:                                             ; preds = %1264
  %1268 = getelementptr inbounds i8, i8* %195, i64 6
  %1269 = getelementptr inbounds i8, i8* %165, i64 %1265
  %1270 = load i8, i8* %1269, align 1, !alias.scope !588, !noalias !589
  %1271 = load i8, i8* %1268, align 1, !alias.scope !588, !noalias !589
  %1272 = icmp eq i8 %1270, %1271
  %1273 = add i64 %194, 7
  %1274 = select i1 %1272, i64 %1273, i64 %1265, !prof !15
  br label %204

1275:                                             ; preds = %277
  %1276 = getelementptr inbounds i8, i8* %271, i64 1
  %1277 = getelementptr inbounds i8, i8* %241, i64 %278
  %1278 = load i8, i8* %1277, align 1, !alias.scope !588, !noalias !589
  %1279 = load i8, i8* %1276, align 1, !alias.scope !588, !noalias !589
  %1280 = icmp eq i8 %1278, %1279
  br i1 %1280, label %1281, label %280, !prof !15

1281:                                             ; preds = %1275
  %1282 = add i64 %270, 2
  %1283 = icmp eq i64 %149, 2
  br i1 %1283, label %280, label %1284

1284:                                             ; preds = %1281
  %1285 = getelementptr inbounds i8, i8* %271, i64 2
  %1286 = getelementptr inbounds i8, i8* %241, i64 %1282
  %1287 = load i8, i8* %1286, align 1, !alias.scope !588, !noalias !589
  %1288 = load i8, i8* %1285, align 1, !alias.scope !588, !noalias !589
  %1289 = icmp eq i8 %1287, %1288
  br i1 %1289, label %1290, label %280, !prof !15

1290:                                             ; preds = %1284
  %1291 = add i64 %270, 3
  %1292 = icmp eq i64 %149, 3
  br i1 %1292, label %280, label %1293

1293:                                             ; preds = %1290
  %1294 = getelementptr inbounds i8, i8* %271, i64 3
  %1295 = getelementptr inbounds i8, i8* %241, i64 %1291
  %1296 = load i8, i8* %1295, align 1, !alias.scope !588, !noalias !589
  %1297 = load i8, i8* %1294, align 1, !alias.scope !588, !noalias !589
  %1298 = icmp eq i8 %1296, %1297
  br i1 %1298, label %1299, label %280, !prof !15

1299:                                             ; preds = %1293
  %1300 = add i64 %270, 4
  %1301 = icmp eq i64 %149, 4
  br i1 %1301, label %280, label %1302

1302:                                             ; preds = %1299
  %1303 = getelementptr inbounds i8, i8* %271, i64 4
  %1304 = getelementptr inbounds i8, i8* %241, i64 %1300
  %1305 = load i8, i8* %1304, align 1, !alias.scope !588, !noalias !589
  %1306 = load i8, i8* %1303, align 1, !alias.scope !588, !noalias !589
  %1307 = icmp eq i8 %1305, %1306
  br i1 %1307, label %1308, label %280, !prof !15

1308:                                             ; preds = %1302
  %1309 = add i64 %270, 5
  %1310 = icmp eq i64 %149, 5
  br i1 %1310, label %280, label %1311

1311:                                             ; preds = %1308
  %1312 = getelementptr inbounds i8, i8* %271, i64 5
  %1313 = getelementptr inbounds i8, i8* %241, i64 %1309
  %1314 = load i8, i8* %1313, align 1, !alias.scope !588, !noalias !589
  %1315 = load i8, i8* %1312, align 1, !alias.scope !588, !noalias !589
  %1316 = icmp eq i8 %1314, %1315
  br i1 %1316, label %1317, label %280, !prof !15

1317:                                             ; preds = %1311
  %1318 = add i64 %270, 6
  %1319 = icmp eq i64 %149, 6
  br i1 %1319, label %280, label %1320

1320:                                             ; preds = %1317
  %1321 = getelementptr inbounds i8, i8* %271, i64 6
  %1322 = getelementptr inbounds i8, i8* %241, i64 %1318
  %1323 = load i8, i8* %1322, align 1, !alias.scope !588, !noalias !589
  %1324 = load i8, i8* %1321, align 1, !alias.scope !588, !noalias !589
  %1325 = icmp eq i8 %1323, %1324
  %1326 = add i64 %270, 7
  %1327 = select i1 %1325, i64 %1326, i64 %1318, !prof !15
  br label %280

1328:                                             ; preds = %389
  %1329 = getelementptr inbounds i8, i8* %383, i64 1
  %1330 = getelementptr inbounds i8, i8* %360, i64 %390
  %1331 = load i8, i8* %1330, align 1, !alias.scope !599, !noalias !600
  %1332 = load i8, i8* %1329, align 1, !alias.scope !599, !noalias !600
  %1333 = icmp eq i8 %1331, %1332
  br i1 %1333, label %1334, label %391, !prof !15

1334:                                             ; preds = %1328
  %1335 = add i64 %382, 2
  br i1 %314, label %391, label %1336

1336:                                             ; preds = %1334
  %1337 = getelementptr inbounds i8, i8* %383, i64 2
  %1338 = getelementptr inbounds i8, i8* %360, i64 %1335
  %1339 = load i8, i8* %1338, align 1, !alias.scope !599, !noalias !600
  %1340 = load i8, i8* %1337, align 1, !alias.scope !599, !noalias !600
  %1341 = icmp eq i8 %1339, %1340
  br i1 %1341, label %1342, label %391, !prof !15

1342:                                             ; preds = %1336
  %1343 = add i64 %382, 3
  br i1 %315, label %391, label %1344

1344:                                             ; preds = %1342
  %1345 = getelementptr inbounds i8, i8* %383, i64 3
  %1346 = getelementptr inbounds i8, i8* %360, i64 %1343
  %1347 = load i8, i8* %1346, align 1, !alias.scope !599, !noalias !600
  %1348 = load i8, i8* %1345, align 1, !alias.scope !599, !noalias !600
  %1349 = icmp eq i8 %1347, %1348
  br i1 %1349, label %1350, label %391, !prof !15

1350:                                             ; preds = %1344
  %1351 = add i64 %382, 4
  br i1 %316, label %391, label %1352

1352:                                             ; preds = %1350
  %1353 = getelementptr inbounds i8, i8* %383, i64 4
  %1354 = getelementptr inbounds i8, i8* %360, i64 %1351
  %1355 = load i8, i8* %1354, align 1, !alias.scope !599, !noalias !600
  %1356 = load i8, i8* %1353, align 1, !alias.scope !599, !noalias !600
  %1357 = icmp eq i8 %1355, %1356
  br i1 %1357, label %1358, label %391, !prof !15

1358:                                             ; preds = %1352
  %1359 = add i64 %382, 5
  br i1 %317, label %391, label %1360

1360:                                             ; preds = %1358
  %1361 = getelementptr inbounds i8, i8* %383, i64 5
  %1362 = getelementptr inbounds i8, i8* %360, i64 %1359
  %1363 = load i8, i8* %1362, align 1, !alias.scope !599, !noalias !600
  %1364 = load i8, i8* %1361, align 1, !alias.scope !599, !noalias !600
  %1365 = icmp eq i8 %1363, %1364
  br i1 %1365, label %1366, label %391, !prof !15

1366:                                             ; preds = %1360
  %1367 = add i64 %382, 6
  br i1 %318, label %391, label %1368

1368:                                             ; preds = %1366
  %1369 = getelementptr inbounds i8, i8* %383, i64 6
  %1370 = getelementptr inbounds i8, i8* %360, i64 %1367
  %1371 = load i8, i8* %1370, align 1, !alias.scope !599, !noalias !600
  %1372 = load i8, i8* %1369, align 1, !alias.scope !599, !noalias !600
  %1373 = icmp eq i8 %1371, %1372
  %1374 = add i64 %382, 7
  %1375 = select i1 %1373, i64 %1374, i64 %1367, !prof !15
  br label %391

1376:                                             ; preds = %511
  %1377 = getelementptr inbounds i8, i8* %503, i64 1
  %1378 = getelementptr inbounds i8, i8* %471, i64 %512
  %1379 = load i8, i8* %1378, align 1, !alias.scope !614, !noalias !615
  %1380 = load i8, i8* %1377, align 1, !alias.scope !614, !noalias !615
  %1381 = icmp eq i8 %1379, %1380
  br i1 %1381, label %1382, label %514, !prof !15

1382:                                             ; preds = %1376
  %1383 = add i64 %502, 2
  %1384 = icmp eq i64 %504, 2
  br i1 %1384, label %514, label %1385

1385:                                             ; preds = %1382
  %1386 = getelementptr inbounds i8, i8* %503, i64 2
  %1387 = getelementptr inbounds i8, i8* %471, i64 %1383
  %1388 = load i8, i8* %1387, align 1, !alias.scope !614, !noalias !615
  %1389 = load i8, i8* %1386, align 1, !alias.scope !614, !noalias !615
  %1390 = icmp eq i8 %1388, %1389
  br i1 %1390, label %1391, label %514, !prof !15

1391:                                             ; preds = %1385
  %1392 = add i64 %502, 3
  %1393 = icmp eq i64 %504, 3
  br i1 %1393, label %514, label %1394

1394:                                             ; preds = %1391
  %1395 = getelementptr inbounds i8, i8* %503, i64 3
  %1396 = getelementptr inbounds i8, i8* %471, i64 %1392
  %1397 = load i8, i8* %1396, align 1, !alias.scope !614, !noalias !615
  %1398 = load i8, i8* %1395, align 1, !alias.scope !614, !noalias !615
  %1399 = icmp eq i8 %1397, %1398
  br i1 %1399, label %1400, label %514, !prof !15

1400:                                             ; preds = %1394
  %1401 = add i64 %502, 4
  %1402 = icmp eq i64 %504, 4
  br i1 %1402, label %514, label %1403

1403:                                             ; preds = %1400
  %1404 = getelementptr inbounds i8, i8* %503, i64 4
  %1405 = getelementptr inbounds i8, i8* %471, i64 %1401
  %1406 = load i8, i8* %1405, align 1, !alias.scope !614, !noalias !615
  %1407 = load i8, i8* %1404, align 1, !alias.scope !614, !noalias !615
  %1408 = icmp eq i8 %1406, %1407
  br i1 %1408, label %1409, label %514, !prof !15

1409:                                             ; preds = %1403
  %1410 = add i64 %502, 5
  %1411 = icmp eq i64 %504, 5
  br i1 %1411, label %514, label %1412

1412:                                             ; preds = %1409
  %1413 = getelementptr inbounds i8, i8* %503, i64 5
  %1414 = getelementptr inbounds i8, i8* %471, i64 %1410
  %1415 = load i8, i8* %1414, align 1, !alias.scope !614, !noalias !615
  %1416 = load i8, i8* %1413, align 1, !alias.scope !614, !noalias !615
  %1417 = icmp eq i8 %1415, %1416
  br i1 %1417, label %1418, label %514, !prof !15

1418:                                             ; preds = %1412
  %1419 = add i64 %502, 6
  %1420 = icmp eq i64 %504, 6
  br i1 %1420, label %514, label %1421

1421:                                             ; preds = %1418
  %1422 = getelementptr inbounds i8, i8* %503, i64 6
  %1423 = getelementptr inbounds i8, i8* %471, i64 %1419
  %1424 = load i8, i8* %1423, align 1, !alias.scope !614, !noalias !615
  %1425 = load i8, i8* %1422, align 1, !alias.scope !614, !noalias !615
  %1426 = icmp eq i8 %1424, %1425
  %1427 = add i64 %502, 7
  %1428 = select i1 %1426, i64 %1427, i64 %1419, !prof !15
  br label %514

1429:                                             ; preds = %591
  %1430 = getelementptr inbounds i8, i8* %585, i64 1
  %1431 = getelementptr inbounds i8, i8* %555, i64 %592
  %1432 = load i8, i8* %1431, align 1, !alias.scope !614, !noalias !615
  %1433 = load i8, i8* %1430, align 1, !alias.scope !614, !noalias !615
  %1434 = icmp eq i8 %1432, %1433
  br i1 %1434, label %1435, label %594, !prof !15

1435:                                             ; preds = %1429
  %1436 = add i64 %584, 2
  %1437 = icmp eq i64 %539, 2
  br i1 %1437, label %594, label %1438

1438:                                             ; preds = %1435
  %1439 = getelementptr inbounds i8, i8* %585, i64 2
  %1440 = getelementptr inbounds i8, i8* %555, i64 %1436
  %1441 = load i8, i8* %1440, align 1, !alias.scope !614, !noalias !615
  %1442 = load i8, i8* %1439, align 1, !alias.scope !614, !noalias !615
  %1443 = icmp eq i8 %1441, %1442
  br i1 %1443, label %1444, label %594, !prof !15

1444:                                             ; preds = %1438
  %1445 = add i64 %584, 3
  %1446 = icmp eq i64 %539, 3
  br i1 %1446, label %594, label %1447

1447:                                             ; preds = %1444
  %1448 = getelementptr inbounds i8, i8* %585, i64 3
  %1449 = getelementptr inbounds i8, i8* %555, i64 %1445
  %1450 = load i8, i8* %1449, align 1, !alias.scope !614, !noalias !615
  %1451 = load i8, i8* %1448, align 1, !alias.scope !614, !noalias !615
  %1452 = icmp eq i8 %1450, %1451
  br i1 %1452, label %1453, label %594, !prof !15

1453:                                             ; preds = %1447
  %1454 = add i64 %584, 4
  %1455 = icmp eq i64 %539, 4
  br i1 %1455, label %594, label %1456

1456:                                             ; preds = %1453
  %1457 = getelementptr inbounds i8, i8* %585, i64 4
  %1458 = getelementptr inbounds i8, i8* %555, i64 %1454
  %1459 = load i8, i8* %1458, align 1, !alias.scope !614, !noalias !615
  %1460 = load i8, i8* %1457, align 1, !alias.scope !614, !noalias !615
  %1461 = icmp eq i8 %1459, %1460
  br i1 %1461, label %1462, label %594, !prof !15

1462:                                             ; preds = %1456
  %1463 = add i64 %584, 5
  %1464 = icmp eq i64 %539, 5
  br i1 %1464, label %594, label %1465

1465:                                             ; preds = %1462
  %1466 = getelementptr inbounds i8, i8* %585, i64 5
  %1467 = getelementptr inbounds i8, i8* %555, i64 %1463
  %1468 = load i8, i8* %1467, align 1, !alias.scope !614, !noalias !615
  %1469 = load i8, i8* %1466, align 1, !alias.scope !614, !noalias !615
  %1470 = icmp eq i8 %1468, %1469
  br i1 %1470, label %1471, label %594, !prof !15

1471:                                             ; preds = %1465
  %1472 = add i64 %584, 6
  %1473 = icmp eq i64 %539, 6
  br i1 %1473, label %594, label %1474

1474:                                             ; preds = %1471
  %1475 = getelementptr inbounds i8, i8* %585, i64 6
  %1476 = getelementptr inbounds i8, i8* %555, i64 %1472
  %1477 = load i8, i8* %1476, align 1, !alias.scope !614, !noalias !615
  %1478 = load i8, i8* %1475, align 1, !alias.scope !614, !noalias !615
  %1479 = icmp eq i8 %1477, %1478
  %1480 = add i64 %584, 7
  %1481 = select i1 %1479, i64 %1480, i64 %1472, !prof !15
  br label %594

1482:                                             ; preds = %667
  %1483 = getelementptr inbounds i8, i8* %661, i64 1
  %1484 = getelementptr inbounds i8, i8* %631, i64 %668
  %1485 = load i8, i8* %1484, align 1, !alias.scope !614, !noalias !615
  %1486 = load i8, i8* %1483, align 1, !alias.scope !614, !noalias !615
  %1487 = icmp eq i8 %1485, %1486
  br i1 %1487, label %1488, label %670, !prof !15

1488:                                             ; preds = %1482
  %1489 = add i64 %660, 2
  %1490 = icmp eq i64 %539, 2
  br i1 %1490, label %670, label %1491

1491:                                             ; preds = %1488
  %1492 = getelementptr inbounds i8, i8* %661, i64 2
  %1493 = getelementptr inbounds i8, i8* %631, i64 %1489
  %1494 = load i8, i8* %1493, align 1, !alias.scope !614, !noalias !615
  %1495 = load i8, i8* %1492, align 1, !alias.scope !614, !noalias !615
  %1496 = icmp eq i8 %1494, %1495
  br i1 %1496, label %1497, label %670, !prof !15

1497:                                             ; preds = %1491
  %1498 = add i64 %660, 3
  %1499 = icmp eq i64 %539, 3
  br i1 %1499, label %670, label %1500

1500:                                             ; preds = %1497
  %1501 = getelementptr inbounds i8, i8* %661, i64 3
  %1502 = getelementptr inbounds i8, i8* %631, i64 %1498
  %1503 = load i8, i8* %1502, align 1, !alias.scope !614, !noalias !615
  %1504 = load i8, i8* %1501, align 1, !alias.scope !614, !noalias !615
  %1505 = icmp eq i8 %1503, %1504
  br i1 %1505, label %1506, label %670, !prof !15

1506:                                             ; preds = %1500
  %1507 = add i64 %660, 4
  %1508 = icmp eq i64 %539, 4
  br i1 %1508, label %670, label %1509

1509:                                             ; preds = %1506
  %1510 = getelementptr inbounds i8, i8* %661, i64 4
  %1511 = getelementptr inbounds i8, i8* %631, i64 %1507
  %1512 = load i8, i8* %1511, align 1, !alias.scope !614, !noalias !615
  %1513 = load i8, i8* %1510, align 1, !alias.scope !614, !noalias !615
  %1514 = icmp eq i8 %1512, %1513
  br i1 %1514, label %1515, label %670, !prof !15

1515:                                             ; preds = %1509
  %1516 = add i64 %660, 5
  %1517 = icmp eq i64 %539, 5
  br i1 %1517, label %670, label %1518

1518:                                             ; preds = %1515
  %1519 = getelementptr inbounds i8, i8* %661, i64 5
  %1520 = getelementptr inbounds i8, i8* %631, i64 %1516
  %1521 = load i8, i8* %1520, align 1, !alias.scope !614, !noalias !615
  %1522 = load i8, i8* %1519, align 1, !alias.scope !614, !noalias !615
  %1523 = icmp eq i8 %1521, %1522
  br i1 %1523, label %1524, label %670, !prof !15

1524:                                             ; preds = %1518
  %1525 = add i64 %660, 6
  %1526 = icmp eq i64 %539, 6
  br i1 %1526, label %670, label %1527

1527:                                             ; preds = %1524
  %1528 = getelementptr inbounds i8, i8* %661, i64 6
  %1529 = getelementptr inbounds i8, i8* %631, i64 %1525
  %1530 = load i8, i8* %1529, align 1, !alias.scope !614, !noalias !615
  %1531 = load i8, i8* %1528, align 1, !alias.scope !614, !noalias !615
  %1532 = icmp eq i8 %1530, %1531
  %1533 = add i64 %660, 7
  %1534 = select i1 %1532, i64 %1533, i64 %1525, !prof !15
  br label %670

1535:                                             ; preds = %779
  %1536 = getelementptr inbounds i8, i8* %773, i64 1
  %1537 = getelementptr inbounds i8, i8* %750, i64 %780
  %1538 = load i8, i8* %1537, align 1, !alias.scope !625, !noalias !626
  %1539 = load i8, i8* %1536, align 1, !alias.scope !625, !noalias !626
  %1540 = icmp eq i8 %1538, %1539
  br i1 %1540, label %1541, label %781, !prof !15

1541:                                             ; preds = %1535
  %1542 = add i64 %772, 2
  br i1 %704, label %781, label %1543

1543:                                             ; preds = %1541
  %1544 = getelementptr inbounds i8, i8* %773, i64 2
  %1545 = getelementptr inbounds i8, i8* %750, i64 %1542
  %1546 = load i8, i8* %1545, align 1, !alias.scope !625, !noalias !626
  %1547 = load i8, i8* %1544, align 1, !alias.scope !625, !noalias !626
  %1548 = icmp eq i8 %1546, %1547
  br i1 %1548, label %1549, label %781, !prof !15

1549:                                             ; preds = %1543
  %1550 = add i64 %772, 3
  br i1 %705, label %781, label %1551

1551:                                             ; preds = %1549
  %1552 = getelementptr inbounds i8, i8* %773, i64 3
  %1553 = getelementptr inbounds i8, i8* %750, i64 %1550
  %1554 = load i8, i8* %1553, align 1, !alias.scope !625, !noalias !626
  %1555 = load i8, i8* %1552, align 1, !alias.scope !625, !noalias !626
  %1556 = icmp eq i8 %1554, %1555
  br i1 %1556, label %1557, label %781, !prof !15

1557:                                             ; preds = %1551
  %1558 = add i64 %772, 4
  br i1 %706, label %781, label %1559

1559:                                             ; preds = %1557
  %1560 = getelementptr inbounds i8, i8* %773, i64 4
  %1561 = getelementptr inbounds i8, i8* %750, i64 %1558
  %1562 = load i8, i8* %1561, align 1, !alias.scope !625, !noalias !626
  %1563 = load i8, i8* %1560, align 1, !alias.scope !625, !noalias !626
  %1564 = icmp eq i8 %1562, %1563
  br i1 %1564, label %1565, label %781, !prof !15

1565:                                             ; preds = %1559
  %1566 = add i64 %772, 5
  br i1 %707, label %781, label %1567

1567:                                             ; preds = %1565
  %1568 = getelementptr inbounds i8, i8* %773, i64 5
  %1569 = getelementptr inbounds i8, i8* %750, i64 %1566
  %1570 = load i8, i8* %1569, align 1, !alias.scope !625, !noalias !626
  %1571 = load i8, i8* %1568, align 1, !alias.scope !625, !noalias !626
  %1572 = icmp eq i8 %1570, %1571
  br i1 %1572, label %1573, label %781, !prof !15

1573:                                             ; preds = %1567
  %1574 = add i64 %772, 6
  br i1 %708, label %781, label %1575

1575:                                             ; preds = %1573
  %1576 = getelementptr inbounds i8, i8* %773, i64 6
  %1577 = getelementptr inbounds i8, i8* %750, i64 %1574
  %1578 = load i8, i8* %1577, align 1, !alias.scope !625, !noalias !626
  %1579 = load i8, i8* %1576, align 1, !alias.scope !625, !noalias !626
  %1580 = icmp eq i8 %1578, %1579
  %1581 = add i64 %772, 7
  %1582 = select i1 %1580, i64 %1581, i64 %1574, !prof !15
  br label %781
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH55(i64, i64, i8* readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher* nocapture, i32* nocapture, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = alloca [4 x i64], align 16
  %13 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = shl i64 1, %15
  %17 = add i64 %16, -16
  %18 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = load i64, i64* %7, align 8
  %21 = add i64 %1, %0
  %22 = icmp ugt i64 %0, 7
  %23 = add i64 %21, -7
  %24 = select i1 %22, i64 %23, i64 %1
  %25 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 9
  %28 = select i1 %27, i64 64, i64 512
  %29 = add i64 %1, 8
  %30 = icmp ult i64 %29, %21
  br i1 %30, label %31, label %1053

31:                                               ; preds = %11
  %32 = add i64 %28, %1
  %33 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %34 = bitcast i16* %33 to i32**
  %35 = and i64 %3, 4294967295
  %36 = bitcast [4 x i64]* %12 to i8*
  %37 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 0
  %38 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 1
  %39 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 3
  %40 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 16
  %41 = bitcast i16* %40 to i64*
  %42 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 8
  %43 = bitcast i16* %42 to i32*
  %44 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 22
  %45 = bitcast i16* %44 to i32*
  %46 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 24
  %47 = bitcast i16* %46 to i32*
  %48 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 12
  %49 = bitcast i16* %48 to i32**
  %50 = shl nuw nsw i64 %28, 2
  %51 = getelementptr inbounds i32, i32* %6, i64 1
  %52 = getelementptr inbounds i32, i32* %6, i64 2
  %53 = getelementptr inbounds i32, i32* %6, i64 3
  %54 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %55 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  %56 = bitcast i64* %38 to <2 x i64>*
  %57 = bitcast i64* %38 to <2 x i64>*
  br label %58

58:                                               ; preds = %31, %1045
  %59 = phi i64 [ %0, %31 ], [ %1052, %1045 ]
  %60 = phi i64 [ %1, %31 ], [ %1049, %1045 ]
  %61 = phi %struct.Command* [ %8, %31 ], [ %1048, %1045 ]
  %62 = phi i64 [ %32, %31 ], [ %1047, %1045 ]
  %63 = phi i64 [ %20, %31 ], [ %1046, %1045 ]
  %64 = icmp ult i64 %60, %17
  %65 = select i1 %64, i64 %60, i64 %17
  %66 = load i32*, i32** %34, align 8, !alias.scope !658, !noalias !663
  %67 = and i64 %60, %3
  %68 = getelementptr inbounds i8, i8* %2, i64 %67
  %69 = load i8, i8* %68, align 1, !alias.scope !670, !noalias !671
  %70 = zext i8 %69 to i32
  %71 = bitcast i8* %68 to i64*
  %72 = load i64, i64* %71, align 8, !alias.scope !670, !noalias !671
  %73 = mul i64 %72, 3866266742567714048
  %74 = lshr i64 %73, 44
  %75 = load i32, i32* %6, align 4, !alias.scope !672, !noalias !673
  %76 = sext i32 %75 to i64
  %77 = sub i64 %60, %76
  %78 = icmp ult i64 %77, %60
  br i1 %78, label %79, label %139

79:                                               ; preds = %58
  %80 = and i64 %35, %77
  %81 = getelementptr inbounds i8, i8* %2, i64 %80
  %82 = load i8, i8* %81, align 1, !alias.scope !670, !noalias !671
  %83 = icmp eq i8 %69, %82
  br i1 %83, label %84, label %139

84:                                               ; preds = %79
  %85 = lshr i64 %59, 3
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %114, label %87, !prof !13

87:                                               ; preds = %84
  %88 = bitcast i8* %81 to i64*
  %89 = load i64, i64* %88, align 8, !alias.scope !670, !noalias !671
  %90 = icmp eq i64 %72, %89
  br i1 %90, label %91, label %106, !prof !13

91:                                               ; preds = %87, %99
  %92 = phi i64 [ %96, %99 ], [ 0, %87 ]
  %93 = phi i8* [ %95, %99 ], [ %68, %87 ]
  %94 = phi i64 [ %97, %99 ], [ %85, %87 ]
  %95 = getelementptr inbounds i8, i8* %93, i64 8
  %96 = add nuw i64 %92, 8
  %97 = add nsw i64 %94, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99, !prof !13

99:                                               ; preds = %91
  %100 = bitcast i8* %95 to i64*
  %101 = load i64, i64* %100, align 8, !alias.scope !670, !noalias !671
  %102 = getelementptr inbounds i8, i8* %81, i64 %96
  %103 = bitcast i8* %102 to i64*
  %104 = load i64, i64* %103, align 8, !alias.scope !670, !noalias !671
  %105 = icmp eq i64 %101, %104
  br i1 %105, label %91, label %106, !prof !13

106:                                              ; preds = %99, %87
  %107 = phi i64 [ %72, %87 ], [ %101, %99 ]
  %108 = phi i64 [ 0, %87 ], [ %96, %99 ]
  %109 = phi i64 [ %89, %87 ], [ %104, %99 ]
  %110 = xor i64 %109, %107
  %111 = tail call i64 @llvm.cttz.i64(i64 %110, i1 true) #4, !range !14
  %112 = lshr i64 %111, 3
  %113 = or i64 %112, %108
  br label %127

114:                                              ; preds = %91, %84
  %115 = phi i64 [ 0, %84 ], [ %96, %91 ]
  %116 = phi i8* [ %68, %84 ], [ %95, %91 ]
  %117 = and i64 %59, 7
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %127, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds i8, i8* %81, i64 %115
  %121 = load i8, i8* %120, align 1, !alias.scope !670, !noalias !671
  %122 = load i8, i8* %116, align 1, !alias.scope !670, !noalias !671
  %123 = icmp eq i8 %121, %122
  br i1 %123, label %124, label %127, !prof !15

124:                                              ; preds = %119
  %125 = add i64 %115, 1
  %126 = icmp eq i64 %117, 1
  br i1 %126, label %127, label %1064

127:                                              ; preds = %1109, %124, %119, %1064, %1070, %1073, %1079, %1082, %1088, %1091, %1097, %1100, %1106, %114, %106
  %128 = phi i64 [ %113, %106 ], [ %115, %114 ], [ %125, %124 ], [ %115, %119 ], [ %125, %1064 ], [ %1071, %1070 ], [ %1071, %1073 ], [ %1080, %1079 ], [ %1080, %1082 ], [ %1089, %1088 ], [ %1089, %1091 ], [ %1098, %1097 ], [ %1098, %1100 ], [ %1107, %1106 ], [ %1116, %1109 ]
  %129 = icmp ugt i64 %128, 3
  br i1 %129, label %130, label %139

130:                                              ; preds = %127
  %131 = mul i64 %128, 135
  %132 = add i64 %131, 1935
  %133 = icmp ugt i64 %132, 2020
  br i1 %133, label %134, label %139

134:                                              ; preds = %130
  %135 = add i64 %128, %67
  %136 = getelementptr inbounds i8, i8* %2, i64 %135
  %137 = load i8, i8* %136, align 1, !alias.scope !670, !noalias !671
  %138 = zext i8 %137 to i32
  br label %139

139:                                              ; preds = %134, %130, %127, %79, %58
  %140 = phi i64 [ %132, %134 ], [ 2020, %130 ], [ 2020, %127 ], [ 2020, %79 ], [ 2020, %58 ]
  %141 = phi i64 [ %76, %134 ], [ 0, %130 ], [ 0, %127 ], [ 0, %79 ], [ 0, %58 ]
  %142 = phi i64 [ %128, %134 ], [ 0, %130 ], [ 0, %127 ], [ 0, %79 ], [ 0, %58 ]
  %143 = phi i32 [ %138, %134 ], [ %70, %130 ], [ %70, %127 ], [ %70, %79 ], [ %70, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #4, !noalias !674
  store i64 %74, i64* %37, align 16, !noalias !674
  %144 = insertelement <2 x i64> undef, i64 %74, i32 0
  %145 = shufflevector <2 x i64> %144, <2 x i64> undef, <2 x i32> zeroinitializer
  %146 = add nuw nsw <2 x i64> %145, <i64 8, i64 16>
  %147 = and <2 x i64> %146, <i64 1048575, i64 1048575>
  store <2 x i64> %147, <2 x i64>* %56, align 8, !noalias !674
  %148 = add nuw nsw i64 %74, 24
  %149 = and i64 %148, 1048575
  store i64 %149, i64* %39, align 8, !noalias !674
  %150 = lshr i64 %60, 3
  %151 = and i64 %150, 3
  %152 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %151
  %153 = load i64, i64* %152, align 8, !noalias !674
  %154 = lshr i64 %59, 3
  %155 = icmp eq i64 %154, 0
  %156 = and i64 %59, 7
  %157 = icmp eq i64 %156, 0
  %158 = icmp eq i64 %156, 1
  %159 = icmp eq i64 %156, 2
  %160 = icmp eq i64 %156, 3
  %161 = icmp eq i64 %156, 4
  %162 = icmp eq i64 %156, 5
  %163 = icmp eq i64 %156, 6
  br label %164

164:                                              ; preds = %245, %139
  %165 = phi i64 [ %140, %139 ], [ %237, %245 ]
  %166 = phi i64 [ %141, %139 ], [ %238, %245 ]
  %167 = phi i64 [ %142, %139 ], [ %239, %245 ]
  %168 = phi i64 [ %74, %139 ], [ %247, %245 ]
  %169 = phi i64 [ 0, %139 ], [ %243, %245 ]
  %170 = phi i64 [ %142, %139 ], [ %242, %245 ]
  %171 = phi i64 [ %140, %139 ], [ %241, %245 ]
  %172 = phi i32 [ %143, %139 ], [ %240, %245 ]
  %173 = getelementptr inbounds i32, i32* %66, i64 %168
  %174 = load i32, i32* %173, align 4, !noalias !674
  %175 = zext i32 %174 to i64
  %176 = sub i64 %60, %175
  %177 = and i64 %175, %3
  %178 = add i64 %177, %170
  %179 = getelementptr inbounds i8, i8* %2, i64 %178
  %180 = load i8, i8* %179, align 1, !alias.scope !670, !noalias !671
  %181 = zext i8 %180 to i32
  %182 = icmp eq i32 %172, %181
  %183 = add i64 %176, -1
  %184 = icmp ult i64 %183, %65
  %185 = and i1 %182, %184
  br i1 %185, label %186, label %236, !prof !17

186:                                              ; preds = %164
  %187 = getelementptr inbounds i8, i8* %2, i64 %177
  br i1 %155, label %208, label %188, !prof !13

188:                                              ; preds = %186, %198
  %189 = phi i64 [ %201, %198 ], [ %154, %186 ]
  %190 = phi i8* [ %199, %198 ], [ %68, %186 ]
  %191 = phi i64 [ %200, %198 ], [ 0, %186 ]
  %192 = bitcast i8* %190 to i64*
  %193 = load i64, i64* %192, align 8, !alias.scope !670, !noalias !671
  %194 = getelementptr inbounds i8, i8* %187, i64 %191
  %195 = bitcast i8* %194 to i64*
  %196 = load i64, i64* %195, align 8, !alias.scope !670, !noalias !671
  %197 = icmp eq i64 %193, %196
  br i1 %197, label %198, label %203, !prof !13

198:                                              ; preds = %188
  %199 = getelementptr inbounds i8, i8* %190, i64 8
  %200 = add nuw i64 %191, 8
  %201 = add nsw i64 %189, -1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %208, label %188, !prof !13

203:                                              ; preds = %188
  %204 = xor i64 %196, %193
  %205 = tail call i64 @llvm.cttz.i64(i64 %204, i1 true) #4, !range !14
  %206 = lshr i64 %205, 3
  %207 = or i64 %206, %191
  br label %218

208:                                              ; preds = %198, %186
  %209 = phi i64 [ 0, %186 ], [ %200, %198 ]
  %210 = phi i8* [ %68, %186 ], [ %199, %198 ]
  br i1 %157, label %218, label %211

211:                                              ; preds = %208
  %212 = getelementptr inbounds i8, i8* %187, i64 %209
  %213 = load i8, i8* %212, align 1, !alias.scope !670, !noalias !671
  %214 = load i8, i8* %210, align 1, !alias.scope !670, !noalias !671
  %215 = icmp eq i8 %213, %214
  br i1 %215, label %216, label %218, !prof !15

216:                                              ; preds = %211
  %217 = add i64 %209, 1
  br i1 %158, label %218, label %1117

218:                                              ; preds = %1157, %216, %211, %1117, %1123, %1125, %1131, %1133, %1139, %1141, %1147, %1149, %1155, %208, %203
  %219 = phi i64 [ %207, %203 ], [ %209, %208 ], [ %217, %216 ], [ %209, %211 ], [ %217, %1117 ], [ %1124, %1123 ], [ %1124, %1125 ], [ %1132, %1131 ], [ %1132, %1133 ], [ %1140, %1139 ], [ %1140, %1141 ], [ %1148, %1147 ], [ %1148, %1149 ], [ %1156, %1155 ], [ %1164, %1157 ]
  %220 = icmp ugt i64 %219, 3
  br i1 %220, label %221, label %236

221:                                              ; preds = %218
  %222 = mul i64 %219, 135
  %223 = trunc i64 %176 to i32
  %224 = tail call i32 @llvm.ctlz.i32(i32 %223, i1 true) #4, !range !18
  %225 = xor i32 %224, 31
  %226 = mul nsw i32 %225, -30
  %227 = add nsw i32 %226, 1920
  %228 = zext i32 %227 to i64
  %229 = add i64 %222, %228
  %230 = icmp ult i64 %171, %229
  br i1 %230, label %231, label %236

231:                                              ; preds = %221
  %232 = add i64 %219, %67
  %233 = getelementptr inbounds i8, i8* %2, i64 %232
  %234 = load i8, i8* %233, align 1, !alias.scope !670, !noalias !671
  %235 = zext i8 %234 to i32
  br label %236

236:                                              ; preds = %231, %221, %218, %164
  %237 = phi i64 [ %229, %231 ], [ %165, %221 ], [ %165, %218 ], [ %165, %164 ]
  %238 = phi i64 [ %176, %231 ], [ %166, %221 ], [ %166, %218 ], [ %166, %164 ]
  %239 = phi i64 [ %219, %231 ], [ %167, %221 ], [ %167, %218 ], [ %167, %164 ]
  %240 = phi i32 [ %235, %231 ], [ %172, %221 ], [ %172, %218 ], [ %172, %164 ]
  %241 = phi i64 [ %229, %231 ], [ %171, %221 ], [ %171, %218 ], [ %171, %164 ]
  %242 = phi i64 [ %219, %231 ], [ %170, %221 ], [ %170, %218 ], [ %170, %164 ]
  %243 = add nuw nsw i64 %169, 1
  %244 = icmp eq i64 %243, 4
  br i1 %244, label %248, label %245

245:                                              ; preds = %236
  %246 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %243
  %247 = load i64, i64* %246, align 8, !noalias !674
  br label %164

248:                                              ; preds = %236
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #4, !noalias !674
  %249 = trunc i64 %60 to i32
  %250 = getelementptr inbounds i32, i32* %66, i64 %153
  store i32 %249, i32* %250, align 4, !noalias !674
  %251 = and i64 %60, 3
  %252 = icmp ne i64 %251, 0
  %253 = icmp ult i64 %59, 32
  %254 = or i1 %252, %253
  br i1 %254, label %373, label %255

255:                                              ; preds = %248
  %256 = load i64, i64* %41, align 8, !alias.scope !675, !noalias !678
  %257 = icmp ugt i64 %256, %60
  br i1 %257, label %368, label %258

258:                                              ; preds = %255
  %259 = load i32, i32* %43, align 8, !alias.scope !675, !noalias !678
  %260 = load i32, i32* %45, align 4, !alias.scope !675, !noalias !678
  %261 = load i32, i32* %47, align 8, !alias.scope !675, !noalias !678
  %262 = icmp eq i64 %156, 1
  %263 = icmp eq i64 %156, 2
  %264 = icmp eq i64 %156, 3
  %265 = icmp eq i64 %156, 4
  %266 = icmp eq i64 %156, 5
  %267 = icmp eq i64 %156, 6
  br label %268

268:                                              ; preds = %359, %258
  %269 = phi i64 [ %237, %258 ], [ %360, %359 ]
  %270 = phi i64 [ %238, %258 ], [ %361, %359 ]
  %271 = phi i64 [ %239, %258 ], [ %362, %359 ]
  %272 = phi i64 [ %241, %258 ], [ %363, %359 ]
  %273 = phi i64 [ %242, %258 ], [ %364, %359 ]
  %274 = phi i32 [ %259, %258 ], [ %291, %359 ]
  %275 = phi i64 [ %256, %258 ], [ %365, %359 ]
  %276 = and i32 %274, 1073741823
  %277 = and i64 %275, %3
  %278 = getelementptr inbounds i8, i8* %2, i64 %277
  %279 = load i8, i8* %278, align 1, !alias.scope !681, !noalias !682
  %280 = add i64 %275, 32
  %281 = and i64 %280, %3
  %282 = getelementptr inbounds i8, i8* %2, i64 %281
  %283 = load i8, i8* %282, align 1, !alias.scope !681, !noalias !682
  %284 = mul i32 %274, %260
  %285 = zext i8 %283 to i32
  %286 = zext i8 %279 to i32
  %287 = add nuw nsw i32 %286, 1
  %288 = mul i32 %287, %261
  %289 = add i32 %284, 1
  %290 = add i32 %289, %285
  %291 = sub i32 %290, %288
  %292 = icmp ult i32 %276, 16777216
  br i1 %292, label %293, label %359

293:                                              ; preds = %268
  %294 = load i32*, i32** %49, align 8, !alias.scope !675, !noalias !678
  %295 = zext i32 %276 to i64
  %296 = getelementptr inbounds i32, i32* %294, i64 %295
  %297 = load i32, i32* %296, align 4, !noalias !683
  %298 = zext i32 %297 to i64
  %299 = trunc i64 %275 to i32
  store i32 %299, i32* %296, align 4, !noalias !683
  %300 = icmp eq i64 %275, %60
  %301 = icmp ne i32 %297, -1
  %302 = and i1 %300, %301
  br i1 %302, label %303, label %359

303:                                              ; preds = %293
  %304 = sub i32 %249, %297
  %305 = zext i32 %304 to i64
  %306 = icmp ult i64 %65, %305
  br i1 %306, label %359, label %307

307:                                              ; preds = %303
  %308 = and i64 %298, %3
  %309 = getelementptr inbounds i8, i8* %2, i64 %308
  br i1 %155, label %330, label %310, !prof !13

310:                                              ; preds = %307, %320
  %311 = phi i64 [ %323, %320 ], [ %154, %307 ]
  %312 = phi i8* [ %321, %320 ], [ %68, %307 ]
  %313 = phi i64 [ %322, %320 ], [ 0, %307 ]
  %314 = bitcast i8* %312 to i64*
  %315 = load i64, i64* %314, align 8, !alias.scope !681, !noalias !682
  %316 = getelementptr inbounds i8, i8* %309, i64 %313
  %317 = bitcast i8* %316 to i64*
  %318 = load i64, i64* %317, align 8, !alias.scope !681, !noalias !682
  %319 = icmp eq i64 %315, %318
  br i1 %319, label %320, label %325, !prof !13

320:                                              ; preds = %310
  %321 = getelementptr inbounds i8, i8* %312, i64 8
  %322 = add nuw i64 %313, 8
  %323 = add nsw i64 %311, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %330, label %310, !prof !13

325:                                              ; preds = %310
  %326 = xor i64 %318, %315
  %327 = tail call i64 @llvm.cttz.i64(i64 %326, i1 true) #4, !range !14
  %328 = lshr i64 %327, 3
  %329 = or i64 %328, %313
  br label %340

330:                                              ; preds = %320, %307
  %331 = phi i64 [ 0, %307 ], [ %322, %320 ]
  %332 = phi i8* [ %68, %307 ], [ %321, %320 ]
  br i1 %157, label %340, label %333

333:                                              ; preds = %330
  %334 = getelementptr inbounds i8, i8* %309, i64 %331
  %335 = load i8, i8* %334, align 1, !alias.scope !681, !noalias !682
  %336 = load i8, i8* %332, align 1, !alias.scope !681, !noalias !682
  %337 = icmp eq i8 %335, %336
  br i1 %337, label %338, label %340, !prof !15

338:                                              ; preds = %333
  %339 = add i64 %331, 1
  br i1 %262, label %340, label %1165

340:                                              ; preds = %1205, %338, %333, %1165, %1171, %1173, %1179, %1181, %1187, %1189, %1195, %1197, %1203, %330, %325
  %341 = phi i64 [ %329, %325 ], [ %331, %330 ], [ %339, %338 ], [ %331, %333 ], [ %339, %1165 ], [ %1172, %1171 ], [ %1172, %1173 ], [ %1180, %1179 ], [ %1180, %1181 ], [ %1188, %1187 ], [ %1188, %1189 ], [ %1196, %1195 ], [ %1196, %1197 ], [ %1204, %1203 ], [ %1212, %1205 ]
  %342 = icmp ugt i64 %341, 3
  %343 = icmp ugt i64 %341, %273
  %344 = and i1 %342, %343
  br i1 %344, label %345, label %359

345:                                              ; preds = %340
  %346 = mul i64 %341, 135
  %347 = tail call i32 @llvm.ctlz.i32(i32 %304, i1 true) #4, !range !18
  %348 = xor i32 %347, 31
  %349 = mul nsw i32 %348, -30
  %350 = add nsw i32 %349, 1920
  %351 = zext i32 %350 to i64
  %352 = add i64 %346, %351
  %353 = icmp ugt i64 %352, %272
  %354 = select i1 %353, i64 %352, i64 %269
  %355 = select i1 %353, i64 %305, i64 %270
  %356 = select i1 %353, i64 %341, i64 %271
  %357 = select i1 %353, i64 %352, i64 %272
  %358 = select i1 %353, i64 %341, i64 %273
  br label %359

359:                                              ; preds = %345, %340, %303, %293, %268
  %360 = phi i64 [ %269, %303 ], [ %269, %340 ], [ %269, %293 ], [ %269, %268 ], [ %354, %345 ]
  %361 = phi i64 [ %270, %303 ], [ %270, %340 ], [ %270, %293 ], [ %270, %268 ], [ %355, %345 ]
  %362 = phi i64 [ %271, %303 ], [ %271, %340 ], [ %271, %293 ], [ %271, %268 ], [ %356, %345 ]
  %363 = phi i64 [ %272, %303 ], [ %272, %340 ], [ %272, %293 ], [ %272, %268 ], [ %357, %345 ]
  %364 = phi i64 [ %273, %303 ], [ %273, %340 ], [ %273, %293 ], [ %273, %268 ], [ %358, %345 ]
  %365 = add i64 %275, 4
  %366 = icmp ugt i64 %365, %60
  br i1 %366, label %367, label %268

367:                                              ; preds = %359
  store i32 %291, i32* %43, align 8, !alias.scope !675, !noalias !678
  br label %368

368:                                              ; preds = %367, %255
  %369 = phi i64 [ %237, %255 ], [ %360, %367 ]
  %370 = phi i64 [ %238, %255 ], [ %361, %367 ]
  %371 = phi i64 [ %239, %255 ], [ %362, %367 ]
  %372 = add i64 %60, 4
  store i64 %372, i64* %41, align 8, !alias.scope !675, !noalias !678
  br label %373

373:                                              ; preds = %248, %368
  %374 = phi i64 [ %237, %248 ], [ %369, %368 ]
  %375 = phi i64 [ %238, %248 ], [ %370, %368 ]
  %376 = phi i64 [ %239, %248 ], [ %371, %368 ]
  %377 = icmp ugt i64 %374, 2020
  br i1 %377, label %378, label %990

378:                                              ; preds = %373, %715
  %379 = phi i64 [ %710, %715 ], [ %374, %373 ]
  %380 = phi i64 [ %711, %715 ], [ %375, %373 ]
  %381 = phi i64 [ %712, %715 ], [ %376, %373 ]
  %382 = phi i64 [ %716, %715 ], [ %63, %373 ]
  %383 = phi i64 [ %386, %715 ], [ %59, %373 ]
  %384 = phi i32 [ %717, %715 ], [ 0, %373 ]
  %385 = phi i64 [ %395, %715 ], [ %60, %373 ]
  %386 = add i64 %383, -1
  %387 = load i32, i32* %25, align 4
  %388 = icmp slt i32 %387, 5
  br i1 %388, label %389, label %393

389:                                              ; preds = %378
  %390 = add i64 %381, -1
  %391 = icmp ult i64 %390, %386
  %392 = select i1 %391, i64 %390, i64 %386
  br label %393

393:                                              ; preds = %378, %389
  %394 = phi i64 [ %392, %389 ], [ 0, %378 ]
  %395 = add i64 %385, 1
  %396 = icmp ult i64 %395, %17
  %397 = select i1 %396, i64 %395, i64 %17
  %398 = load i32*, i32** %34, align 8, !alias.scope !684, !noalias !689
  %399 = and i64 %395, %3
  %400 = add i64 %394, %399
  %401 = getelementptr inbounds i8, i8* %2, i64 %400
  %402 = load i8, i8* %401, align 1, !alias.scope !696, !noalias !697
  %403 = zext i8 %402 to i32
  %404 = getelementptr inbounds i8, i8* %2, i64 %399
  %405 = bitcast i8* %404 to i64*
  %406 = load i64, i64* %405, align 8, !alias.scope !696, !noalias !697
  %407 = mul i64 %406, 3866266742567714048
  %408 = lshr i64 %407, 44
  %409 = load i32, i32* %6, align 4, !alias.scope !698, !noalias !699
  %410 = sext i32 %409 to i64
  %411 = sub i64 %395, %410
  %412 = icmp ult i64 %411, %395
  br i1 %412, label %413, label %475

413:                                              ; preds = %393
  %414 = and i64 %35, %411
  %415 = add i64 %414, %394
  %416 = getelementptr inbounds i8, i8* %2, i64 %415
  %417 = load i8, i8* %416, align 1, !alias.scope !696, !noalias !697
  %418 = icmp eq i8 %402, %417
  br i1 %418, label %419, label %475

419:                                              ; preds = %413
  %420 = getelementptr inbounds i8, i8* %2, i64 %414
  %421 = lshr i64 %386, 3
  %422 = icmp eq i64 %421, 0
  br i1 %422, label %450, label %423, !prof !13

423:                                              ; preds = %419
  %424 = bitcast i8* %420 to i64*
  %425 = load i64, i64* %424, align 8, !alias.scope !696, !noalias !697
  %426 = icmp eq i64 %406, %425
  br i1 %426, label %427, label %442, !prof !13

427:                                              ; preds = %423, %435
  %428 = phi i64 [ %432, %435 ], [ 0, %423 ]
  %429 = phi i8* [ %431, %435 ], [ %404, %423 ]
  %430 = phi i64 [ %433, %435 ], [ %421, %423 ]
  %431 = getelementptr inbounds i8, i8* %429, i64 8
  %432 = add nuw i64 %428, 8
  %433 = add nsw i64 %430, -1
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %450, label %435, !prof !13

435:                                              ; preds = %427
  %436 = bitcast i8* %431 to i64*
  %437 = load i64, i64* %436, align 8, !alias.scope !696, !noalias !697
  %438 = getelementptr inbounds i8, i8* %420, i64 %432
  %439 = bitcast i8* %438 to i64*
  %440 = load i64, i64* %439, align 8, !alias.scope !696, !noalias !697
  %441 = icmp eq i64 %437, %440
  br i1 %441, label %427, label %442, !prof !13

442:                                              ; preds = %435, %423
  %443 = phi i64 [ %406, %423 ], [ %437, %435 ]
  %444 = phi i64 [ 0, %423 ], [ %432, %435 ]
  %445 = phi i64 [ %425, %423 ], [ %440, %435 ]
  %446 = xor i64 %445, %443
  %447 = tail call i64 @llvm.cttz.i64(i64 %446, i1 true) #4, !range !14
  %448 = lshr i64 %447, 3
  %449 = or i64 %448, %444
  br label %463

450:                                              ; preds = %427, %419
  %451 = phi i64 [ 0, %419 ], [ %432, %427 ]
  %452 = phi i8* [ %404, %419 ], [ %431, %427 ]
  %453 = and i64 %386, 7
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %463, label %455

455:                                              ; preds = %450
  %456 = getelementptr inbounds i8, i8* %420, i64 %451
  %457 = load i8, i8* %456, align 1, !alias.scope !696, !noalias !697
  %458 = load i8, i8* %452, align 1, !alias.scope !696, !noalias !697
  %459 = icmp eq i8 %457, %458
  br i1 %459, label %460, label %463, !prof !15

460:                                              ; preds = %455
  %461 = add i64 %451, 1
  %462 = icmp eq i64 %453, 1
  br i1 %462, label %463, label %1213

463:                                              ; preds = %1258, %460, %455, %1213, %1219, %1222, %1228, %1231, %1237, %1240, %1246, %1249, %1255, %450, %442
  %464 = phi i64 [ %449, %442 ], [ %451, %450 ], [ %461, %460 ], [ %451, %455 ], [ %461, %1213 ], [ %1220, %1219 ], [ %1220, %1222 ], [ %1229, %1228 ], [ %1229, %1231 ], [ %1238, %1237 ], [ %1238, %1240 ], [ %1247, %1246 ], [ %1247, %1249 ], [ %1256, %1255 ], [ %1265, %1258 ]
  %465 = icmp ugt i64 %464, 3
  br i1 %465, label %466, label %475

466:                                              ; preds = %463
  %467 = mul i64 %464, 135
  %468 = add i64 %467, 1935
  %469 = icmp ugt i64 %468, 2020
  br i1 %469, label %470, label %475

470:                                              ; preds = %466
  %471 = add i64 %464, %399
  %472 = getelementptr inbounds i8, i8* %2, i64 %471
  %473 = load i8, i8* %472, align 1, !alias.scope !696, !noalias !697
  %474 = zext i8 %473 to i32
  br label %475

475:                                              ; preds = %470, %466, %463, %413, %393
  %476 = phi i64 [ %468, %470 ], [ 2020, %466 ], [ 2020, %463 ], [ 2020, %413 ], [ 2020, %393 ]
  %477 = phi i64 [ %410, %470 ], [ 0, %466 ], [ 0, %463 ], [ 0, %413 ], [ 0, %393 ]
  %478 = phi i64 [ %464, %470 ], [ %394, %466 ], [ %394, %463 ], [ %394, %413 ], [ %394, %393 ]
  %479 = phi i32 [ %474, %470 ], [ %403, %466 ], [ %403, %463 ], [ %403, %413 ], [ %403, %393 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #4, !noalias !700
  store i64 %408, i64* %37, align 16, !noalias !700
  %480 = insertelement <2 x i64> undef, i64 %408, i32 0
  %481 = shufflevector <2 x i64> %480, <2 x i64> undef, <2 x i32> zeroinitializer
  %482 = add nuw nsw <2 x i64> %481, <i64 8, i64 16>
  %483 = and <2 x i64> %482, <i64 1048575, i64 1048575>
  store <2 x i64> %483, <2 x i64>* %57, align 8, !noalias !700
  %484 = add nuw nsw i64 %408, 24
  %485 = and i64 %484, 1048575
  store i64 %485, i64* %39, align 8, !noalias !700
  %486 = lshr i64 %395, 3
  %487 = and i64 %486, 3
  %488 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %487
  %489 = load i64, i64* %488, align 8, !noalias !700
  %490 = lshr i64 %386, 3
  %491 = icmp eq i64 %490, 0
  %492 = and i64 %386, 7
  %493 = icmp eq i64 %492, 0
  %494 = icmp eq i64 %492, 1
  %495 = icmp eq i64 %492, 2
  %496 = icmp eq i64 %492, 3
  %497 = icmp eq i64 %492, 4
  %498 = icmp eq i64 %492, 5
  %499 = icmp eq i64 %492, 6
  br label %500

500:                                              ; preds = %581, %475
  %501 = phi i64 [ %476, %475 ], [ %573, %581 ]
  %502 = phi i64 [ %477, %475 ], [ %574, %581 ]
  %503 = phi i64 [ %478, %475 ], [ %575, %581 ]
  %504 = phi i64 [ %408, %475 ], [ %583, %581 ]
  %505 = phi i64 [ 0, %475 ], [ %579, %581 ]
  %506 = phi i64 [ %478, %475 ], [ %578, %581 ]
  %507 = phi i64 [ %476, %475 ], [ %577, %581 ]
  %508 = phi i32 [ %479, %475 ], [ %576, %581 ]
  %509 = getelementptr inbounds i32, i32* %398, i64 %504
  %510 = load i32, i32* %509, align 4, !noalias !700
  %511 = zext i32 %510 to i64
  %512 = sub i64 %395, %511
  %513 = and i64 %511, %3
  %514 = add i64 %513, %506
  %515 = getelementptr inbounds i8, i8* %2, i64 %514
  %516 = load i8, i8* %515, align 1, !alias.scope !696, !noalias !697
  %517 = zext i8 %516 to i32
  %518 = icmp eq i32 %508, %517
  %519 = add i64 %512, -1
  %520 = icmp ult i64 %519, %397
  %521 = and i1 %518, %520
  br i1 %521, label %522, label %572, !prof !17

522:                                              ; preds = %500
  %523 = getelementptr inbounds i8, i8* %2, i64 %513
  br i1 %491, label %544, label %524, !prof !13

524:                                              ; preds = %522, %534
  %525 = phi i64 [ %537, %534 ], [ %490, %522 ]
  %526 = phi i8* [ %535, %534 ], [ %404, %522 ]
  %527 = phi i64 [ %536, %534 ], [ 0, %522 ]
  %528 = bitcast i8* %526 to i64*
  %529 = load i64, i64* %528, align 8, !alias.scope !696, !noalias !697
  %530 = getelementptr inbounds i8, i8* %523, i64 %527
  %531 = bitcast i8* %530 to i64*
  %532 = load i64, i64* %531, align 8, !alias.scope !696, !noalias !697
  %533 = icmp eq i64 %529, %532
  br i1 %533, label %534, label %539, !prof !13

534:                                              ; preds = %524
  %535 = getelementptr inbounds i8, i8* %526, i64 8
  %536 = add nuw i64 %527, 8
  %537 = add nsw i64 %525, -1
  %538 = icmp eq i64 %537, 0
  br i1 %538, label %544, label %524, !prof !13

539:                                              ; preds = %524
  %540 = xor i64 %532, %529
  %541 = tail call i64 @llvm.cttz.i64(i64 %540, i1 true) #4, !range !14
  %542 = lshr i64 %541, 3
  %543 = or i64 %542, %527
  br label %554

544:                                              ; preds = %534, %522
  %545 = phi i64 [ 0, %522 ], [ %536, %534 ]
  %546 = phi i8* [ %404, %522 ], [ %535, %534 ]
  br i1 %493, label %554, label %547

547:                                              ; preds = %544
  %548 = getelementptr inbounds i8, i8* %523, i64 %545
  %549 = load i8, i8* %548, align 1, !alias.scope !696, !noalias !697
  %550 = load i8, i8* %546, align 1, !alias.scope !696, !noalias !697
  %551 = icmp eq i8 %549, %550
  br i1 %551, label %552, label %554, !prof !15

552:                                              ; preds = %547
  %553 = add i64 %545, 1
  br i1 %494, label %554, label %1266

554:                                              ; preds = %1306, %552, %547, %1266, %1272, %1274, %1280, %1282, %1288, %1290, %1296, %1298, %1304, %544, %539
  %555 = phi i64 [ %543, %539 ], [ %545, %544 ], [ %553, %552 ], [ %545, %547 ], [ %553, %1266 ], [ %1273, %1272 ], [ %1273, %1274 ], [ %1281, %1280 ], [ %1281, %1282 ], [ %1289, %1288 ], [ %1289, %1290 ], [ %1297, %1296 ], [ %1297, %1298 ], [ %1305, %1304 ], [ %1313, %1306 ]
  %556 = icmp ugt i64 %555, 3
  br i1 %556, label %557, label %572

557:                                              ; preds = %554
  %558 = mul i64 %555, 135
  %559 = trunc i64 %512 to i32
  %560 = tail call i32 @llvm.ctlz.i32(i32 %559, i1 true) #4, !range !18
  %561 = xor i32 %560, 31
  %562 = mul nsw i32 %561, -30
  %563 = add nsw i32 %562, 1920
  %564 = zext i32 %563 to i64
  %565 = add i64 %558, %564
  %566 = icmp ult i64 %507, %565
  br i1 %566, label %567, label %572

567:                                              ; preds = %557
  %568 = add i64 %555, %399
  %569 = getelementptr inbounds i8, i8* %2, i64 %568
  %570 = load i8, i8* %569, align 1, !alias.scope !696, !noalias !697
  %571 = zext i8 %570 to i32
  br label %572

572:                                              ; preds = %567, %557, %554, %500
  %573 = phi i64 [ %565, %567 ], [ %501, %557 ], [ %501, %554 ], [ %501, %500 ]
  %574 = phi i64 [ %512, %567 ], [ %502, %557 ], [ %502, %554 ], [ %502, %500 ]
  %575 = phi i64 [ %555, %567 ], [ %503, %557 ], [ %503, %554 ], [ %503, %500 ]
  %576 = phi i32 [ %571, %567 ], [ %508, %557 ], [ %508, %554 ], [ %508, %500 ]
  %577 = phi i64 [ %565, %567 ], [ %507, %557 ], [ %507, %554 ], [ %507, %500 ]
  %578 = phi i64 [ %555, %567 ], [ %506, %557 ], [ %506, %554 ], [ %506, %500 ]
  %579 = add nuw nsw i64 %505, 1
  %580 = icmp eq i64 %579, 4
  br i1 %580, label %584, label %581

581:                                              ; preds = %572
  %582 = getelementptr inbounds [4 x i64], [4 x i64]* %12, i64 0, i64 %579
  %583 = load i64, i64* %582, align 8, !noalias !700
  br label %500

584:                                              ; preds = %572
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #4, !noalias !700
  %585 = trunc i64 %395 to i32
  %586 = getelementptr inbounds i32, i32* %398, i64 %489
  store i32 %585, i32* %586, align 4, !noalias !700
  %587 = and i64 %395, 3
  %588 = icmp ne i64 %587, 0
  %589 = icmp ult i64 %386, 32
  %590 = or i1 %589, %588
  br i1 %590, label %709, label %591

591:                                              ; preds = %584
  %592 = load i64, i64* %41, align 8, !alias.scope !701, !noalias !704
  %593 = icmp ugt i64 %592, %395
  br i1 %593, label %704, label %594

594:                                              ; preds = %591
  %595 = load i32, i32* %43, align 8, !alias.scope !701, !noalias !704
  %596 = load i32, i32* %45, align 4, !alias.scope !701, !noalias !704
  %597 = load i32, i32* %47, align 8, !alias.scope !701, !noalias !704
  %598 = icmp eq i64 %492, 1
  %599 = icmp eq i64 %492, 2
  %600 = icmp eq i64 %492, 3
  %601 = icmp eq i64 %492, 4
  %602 = icmp eq i64 %492, 5
  %603 = icmp eq i64 %492, 6
  br label %604

604:                                              ; preds = %695, %594
  %605 = phi i64 [ %573, %594 ], [ %696, %695 ]
  %606 = phi i64 [ %574, %594 ], [ %697, %695 ]
  %607 = phi i64 [ %575, %594 ], [ %698, %695 ]
  %608 = phi i64 [ %577, %594 ], [ %699, %695 ]
  %609 = phi i64 [ %578, %594 ], [ %700, %695 ]
  %610 = phi i32 [ %595, %594 ], [ %627, %695 ]
  %611 = phi i64 [ %592, %594 ], [ %701, %695 ]
  %612 = and i32 %610, 1073741823
  %613 = and i64 %611, %3
  %614 = getelementptr inbounds i8, i8* %2, i64 %613
  %615 = load i8, i8* %614, align 1, !alias.scope !707, !noalias !708
  %616 = add i64 %611, 32
  %617 = and i64 %616, %3
  %618 = getelementptr inbounds i8, i8* %2, i64 %617
  %619 = load i8, i8* %618, align 1, !alias.scope !707, !noalias !708
  %620 = mul i32 %610, %596
  %621 = zext i8 %619 to i32
  %622 = zext i8 %615 to i32
  %623 = add nuw nsw i32 %622, 1
  %624 = mul i32 %623, %597
  %625 = add i32 %620, 1
  %626 = add i32 %625, %621
  %627 = sub i32 %626, %624
  %628 = icmp ult i32 %612, 16777216
  br i1 %628, label %629, label %695

629:                                              ; preds = %604
  %630 = load i32*, i32** %49, align 8, !alias.scope !701, !noalias !704
  %631 = zext i32 %612 to i64
  %632 = getelementptr inbounds i32, i32* %630, i64 %631
  %633 = load i32, i32* %632, align 4, !noalias !709
  %634 = zext i32 %633 to i64
  %635 = trunc i64 %611 to i32
  store i32 %635, i32* %632, align 4, !noalias !709
  %636 = icmp eq i64 %611, %395
  %637 = icmp ne i32 %633, -1
  %638 = and i1 %636, %637
  br i1 %638, label %639, label %695

639:                                              ; preds = %629
  %640 = sub i32 %585, %633
  %641 = zext i32 %640 to i64
  %642 = icmp ult i64 %397, %641
  br i1 %642, label %695, label %643

643:                                              ; preds = %639
  %644 = and i64 %634, %3
  %645 = getelementptr inbounds i8, i8* %2, i64 %644
  br i1 %491, label %666, label %646, !prof !13

646:                                              ; preds = %643, %656
  %647 = phi i64 [ %659, %656 ], [ %490, %643 ]
  %648 = phi i8* [ %657, %656 ], [ %404, %643 ]
  %649 = phi i64 [ %658, %656 ], [ 0, %643 ]
  %650 = bitcast i8* %648 to i64*
  %651 = load i64, i64* %650, align 8, !alias.scope !707, !noalias !708
  %652 = getelementptr inbounds i8, i8* %645, i64 %649
  %653 = bitcast i8* %652 to i64*
  %654 = load i64, i64* %653, align 8, !alias.scope !707, !noalias !708
  %655 = icmp eq i64 %651, %654
  br i1 %655, label %656, label %661, !prof !13

656:                                              ; preds = %646
  %657 = getelementptr inbounds i8, i8* %648, i64 8
  %658 = add nuw i64 %649, 8
  %659 = add nsw i64 %647, -1
  %660 = icmp eq i64 %659, 0
  br i1 %660, label %666, label %646, !prof !13

661:                                              ; preds = %646
  %662 = xor i64 %654, %651
  %663 = tail call i64 @llvm.cttz.i64(i64 %662, i1 true) #4, !range !14
  %664 = lshr i64 %663, 3
  %665 = or i64 %664, %649
  br label %676

666:                                              ; preds = %656, %643
  %667 = phi i64 [ 0, %643 ], [ %658, %656 ]
  %668 = phi i8* [ %404, %643 ], [ %657, %656 ]
  br i1 %493, label %676, label %669

669:                                              ; preds = %666
  %670 = getelementptr inbounds i8, i8* %645, i64 %667
  %671 = load i8, i8* %670, align 1, !alias.scope !707, !noalias !708
  %672 = load i8, i8* %668, align 1, !alias.scope !707, !noalias !708
  %673 = icmp eq i8 %671, %672
  br i1 %673, label %674, label %676, !prof !15

674:                                              ; preds = %669
  %675 = add i64 %667, 1
  br i1 %598, label %676, label %1314

676:                                              ; preds = %1354, %674, %669, %1314, %1320, %1322, %1328, %1330, %1336, %1338, %1344, %1346, %1352, %666, %661
  %677 = phi i64 [ %665, %661 ], [ %667, %666 ], [ %675, %674 ], [ %667, %669 ], [ %675, %1314 ], [ %1321, %1320 ], [ %1321, %1322 ], [ %1329, %1328 ], [ %1329, %1330 ], [ %1337, %1336 ], [ %1337, %1338 ], [ %1345, %1344 ], [ %1345, %1346 ], [ %1353, %1352 ], [ %1361, %1354 ]
  %678 = icmp ugt i64 %677, 3
  %679 = icmp ugt i64 %677, %609
  %680 = and i1 %678, %679
  br i1 %680, label %681, label %695

681:                                              ; preds = %676
  %682 = mul i64 %677, 135
  %683 = tail call i32 @llvm.ctlz.i32(i32 %640, i1 true) #4, !range !18
  %684 = xor i32 %683, 31
  %685 = mul nsw i32 %684, -30
  %686 = add nsw i32 %685, 1920
  %687 = zext i32 %686 to i64
  %688 = add i64 %682, %687
  %689 = icmp ugt i64 %688, %608
  %690 = select i1 %689, i64 %688, i64 %605
  %691 = select i1 %689, i64 %641, i64 %606
  %692 = select i1 %689, i64 %677, i64 %607
  %693 = select i1 %689, i64 %688, i64 %608
  %694 = select i1 %689, i64 %677, i64 %609
  br label %695

695:                                              ; preds = %681, %676, %639, %629, %604
  %696 = phi i64 [ %605, %639 ], [ %605, %676 ], [ %605, %629 ], [ %605, %604 ], [ %690, %681 ]
  %697 = phi i64 [ %606, %639 ], [ %606, %676 ], [ %606, %629 ], [ %606, %604 ], [ %691, %681 ]
  %698 = phi i64 [ %607, %639 ], [ %607, %676 ], [ %607, %629 ], [ %607, %604 ], [ %692, %681 ]
  %699 = phi i64 [ %608, %639 ], [ %608, %676 ], [ %608, %629 ], [ %608, %604 ], [ %693, %681 ]
  %700 = phi i64 [ %609, %639 ], [ %609, %676 ], [ %609, %629 ], [ %609, %604 ], [ %694, %681 ]
  %701 = add i64 %611, 4
  %702 = icmp ugt i64 %701, %395
  br i1 %702, label %703, label %604

703:                                              ; preds = %695
  store i32 %627, i32* %43, align 8, !alias.scope !701, !noalias !704
  br label %704

704:                                              ; preds = %703, %591
  %705 = phi i64 [ %573, %591 ], [ %696, %703 ]
  %706 = phi i64 [ %574, %591 ], [ %697, %703 ]
  %707 = phi i64 [ %575, %591 ], [ %698, %703 ]
  %708 = add i64 %385, 5
  store i64 %708, i64* %41, align 8, !alias.scope !701, !noalias !704
  br label %709

709:                                              ; preds = %584, %704
  %710 = phi i64 [ %573, %584 ], [ %705, %704 ]
  %711 = phi i64 [ %574, %584 ], [ %706, %704 ]
  %712 = phi i64 [ %575, %584 ], [ %707, %704 ]
  %713 = add i64 %379, 175
  %714 = icmp ult i64 %710, %713
  br i1 %714, label %722, label %715

715:                                              ; preds = %709
  %716 = add i64 %382, 1
  %717 = add nuw nsw i32 %384, 1
  %718 = icmp ult i32 %717, 4
  %719 = add i64 %385, 9
  %720 = icmp ult i64 %719, %21
  %721 = and i1 %718, %720
  br i1 %721, label %378, label %722

722:                                              ; preds = %715, %709
  %723 = phi i64 [ %380, %709 ], [ %711, %715 ]
  %724 = phi i64 [ %381, %709 ], [ %712, %715 ]
  %725 = phi i64 [ %382, %709 ], [ %716, %715 ]
  %726 = phi i64 [ %385, %709 ], [ %395, %715 ]
  %727 = shl i64 %724, 1
  %728 = add i64 %727, %28
  %729 = add i64 %728, %726
  %730 = add i64 %726, %19
  %731 = icmp ult i64 %730, %17
  %732 = select i1 %731, i64 %730, i64 %17
  %733 = icmp ugt i64 %723, %732
  br i1 %733, label %769, label %734

734:                                              ; preds = %722
  %735 = add i64 %723, 3
  %736 = load i32, i32* %6, align 4
  %737 = sext i32 %736 to i64
  %738 = sub i64 %735, %737
  %739 = load i32, i32* %51, align 4
  %740 = sext i32 %739 to i64
  %741 = sub i64 %735, %740
  %742 = icmp eq i64 %723, %737
  br i1 %742, label %781, label %743

743:                                              ; preds = %734
  %744 = icmp eq i64 %723, %740
  br i1 %744, label %771, label %745

745:                                              ; preds = %743
  %746 = icmp ult i64 %738, 7
  br i1 %746, label %747, label %753

747:                                              ; preds = %745
  %748 = trunc i64 %738 to i32
  %749 = shl i32 %748, 2
  %750 = lshr i32 158663784, %749
  %751 = and i32 %750, 15
  %752 = zext i32 %751 to i64
  br label %771

753:                                              ; preds = %745
  %754 = icmp ult i64 %741, 7
  br i1 %754, label %755, label %761

755:                                              ; preds = %753
  %756 = trunc i64 %741 to i32
  %757 = shl i32 %756, 2
  %758 = lshr i32 266017486, %757
  %759 = and i32 %758, 15
  %760 = zext i32 %759 to i64
  br label %771

761:                                              ; preds = %753
  %762 = load i32, i32* %52, align 4
  %763 = sext i32 %762 to i64
  %764 = icmp eq i64 %723, %763
  br i1 %764, label %771, label %765

765:                                              ; preds = %761
  %766 = load i32, i32* %53, align 4
  %767 = sext i32 %766 to i64
  %768 = icmp eq i64 %723, %767
  br i1 %768, label %771, label %769

769:                                              ; preds = %765, %722
  %770 = add i64 %723, 15
  br label %771

771:                                              ; preds = %743, %747, %755, %761, %765, %769
  %772 = phi i64 [ %770, %769 ], [ 3, %765 ], [ 2, %761 ], [ 1, %743 ], [ %760, %755 ], [ %752, %747 ]
  %773 = icmp ule i64 %723, %732
  %774 = icmp ne i64 %772, 0
  %775 = and i1 %773, %774
  br i1 %775, label %776, label %781

776:                                              ; preds = %771
  %777 = load i32, i32* %52, align 4
  store i32 %777, i32* %53, align 4
  %778 = load i32, i32* %51, align 4
  store i32 %778, i32* %52, align 4
  %779 = load i32, i32* %6, align 4
  store i32 %779, i32* %51, align 4
  %780 = trunc i64 %723 to i32
  store i32 %780, i32* %6, align 4
  br label %781

781:                                              ; preds = %734, %776, %771
  %782 = phi i64 [ %772, %776 ], [ %772, %771 ], [ 0, %734 ]
  %783 = getelementptr inbounds %struct.Command, %struct.Command* %61, i64 1
  %784 = trunc i64 %725 to i32
  %785 = getelementptr inbounds %struct.Command, %struct.Command* %61, i64 0, i32 0
  store i32 %784, i32* %785, align 4
  %786 = trunc i64 %724 to i32
  %787 = getelementptr inbounds %struct.Command, %struct.Command* %61, i64 0, i32 1
  store i32 %786, i32* %787, align 4
  %788 = load i32, i32* %54, align 4
  %789 = zext i32 %788 to i64
  %790 = load i32, i32* %55, align 8
  %791 = zext i32 %790 to i64
  %792 = getelementptr inbounds %struct.Command, %struct.Command* %61, i64 0, i32 4
  %793 = getelementptr inbounds %struct.Command, %struct.Command* %61, i64 0, i32 2
  %794 = add nuw nsw i64 %789, 16
  %795 = icmp ugt i64 %794, %782
  br i1 %795, label %796, label %798

796:                                              ; preds = %781
  %797 = trunc i64 %782 to i16
  store i16 %797, i16* %792, align 2
  br label %828

798:                                              ; preds = %781
  %799 = shl i64 4, %791
  %800 = add i64 %782, -16
  %801 = sub i64 %800, %789
  %802 = add i64 %801, %799
  %803 = trunc i64 %802 to i32
  %804 = tail call i32 @llvm.ctlz.i32(i32 %803, i1 true) #4, !range !18
  %805 = sub nsw i32 30, %804
  %806 = zext i32 %805 to i64
  %807 = shl nsw i32 -1, %790
  %808 = xor i32 %807, 65535
  %809 = zext i32 %808 to i64
  %810 = and i64 %802, %809
  %811 = lshr i64 %802, %806
  %812 = and i64 %811, 1
  %813 = or i64 %812, 2
  %814 = shl i64 %813, %806
  %815 = sub nsw i64 %806, %791
  %816 = shl nsw i64 %815, 10
  %817 = shl nsw i64 %815, 1
  %818 = add nsw i64 %817, -2
  %819 = or i64 %818, %812
  %820 = shl i64 %819, %791
  %821 = add nuw nsw i64 %810, %794
  %822 = add i64 %821, %820
  %823 = or i64 %822, %816
  %824 = trunc i64 %823 to i16
  store i16 %824, i16* %792, align 2
  %825 = sub i64 %802, %814
  %826 = lshr i64 %825, %791
  %827 = trunc i64 %826 to i32
  br label %828

828:                                              ; preds = %798, %796
  %829 = phi i16 [ %824, %798 ], [ %797, %796 ]
  %830 = phi i32 [ %827, %798 ], [ 0, %796 ]
  store i32 %830, i32* %793, align 4
  %831 = shl i64 %724, 32
  %832 = ashr exact i64 %831, 32
  %833 = and i16 %829, 1023
  %834 = icmp eq i16 %833, 0
  %835 = getelementptr inbounds %struct.Command, %struct.Command* %61, i64 0, i32 3
  %836 = icmp ult i64 %725, 6
  br i1 %836, label %837, label %839

837:                                              ; preds = %828
  %838 = trunc i64 %725 to i16
  br label %865

839:                                              ; preds = %828
  %840 = icmp ult i64 %725, 130
  br i1 %840, label %841, label %853

841:                                              ; preds = %839
  %842 = add nsw i64 %725, -2
  %843 = trunc i64 %842 to i32
  %844 = tail call i32 @llvm.ctlz.i32(i32 %843, i1 true) #4, !range !18
  %845 = sub nsw i32 30, %844
  %846 = shl nsw i32 %845, 1
  %847 = zext i32 %846 to i64
  %848 = zext i32 %845 to i64
  %849 = lshr i64 %842, %848
  %850 = add nuw nsw i64 %849, %847
  %851 = trunc i64 %850 to i16
  %852 = add i16 %851, 2
  br label %865

853:                                              ; preds = %839
  %854 = icmp ult i64 %725, 2114
  br i1 %854, label %855, label %860

855:                                              ; preds = %853
  %856 = add nsw i32 %784, -66
  %857 = tail call i32 @llvm.ctlz.i32(i32 %856, i1 true) #4, !range !18
  %858 = trunc i32 %857 to i16
  %859 = sub nuw nsw i16 41, %858
  br label %865

860:                                              ; preds = %853
  %861 = icmp ult i64 %725, 6210
  br i1 %861, label %865, label %862

862:                                              ; preds = %860
  %863 = icmp ult i64 %725, 22594
  %864 = select i1 %863, i16 22, i16 23
  br label %865

865:                                              ; preds = %862, %860, %855, %841, %837
  %866 = phi i16 [ %838, %837 ], [ %852, %841 ], [ %859, %855 ], [ 21, %860 ], [ %864, %862 ]
  %867 = icmp ult i32 %786, 10
  br i1 %867, label %868, label %871

868:                                              ; preds = %865
  %869 = trunc i64 %724 to i16
  %870 = add nsw i16 %869, -2
  br label %892

871:                                              ; preds = %865
  %872 = icmp ult i32 %786, 134
  br i1 %872, label %873, label %885

873:                                              ; preds = %871
  %874 = add nsw i64 %832, -6
  %875 = trunc i64 %874 to i32
  %876 = tail call i32 @llvm.ctlz.i32(i32 %875, i1 true) #4, !range !18
  %877 = sub nsw i32 30, %876
  %878 = shl nsw i32 %877, 1
  %879 = zext i32 %878 to i64
  %880 = zext i32 %877 to i64
  %881 = lshr i64 %874, %880
  %882 = add nuw nsw i64 %881, %879
  %883 = trunc i64 %882 to i16
  %884 = add i16 %883, 4
  br label %892

885:                                              ; preds = %871
  %886 = icmp ult i32 %786, 2118
  br i1 %886, label %887, label %892

887:                                              ; preds = %885
  %888 = add nsw i32 %786, -70
  %889 = tail call i32 @llvm.ctlz.i32(i32 %888, i1 true) #4, !range !18
  %890 = trunc i32 %889 to i16
  %891 = sub nuw nsw i16 43, %890
  br label %892

892:                                              ; preds = %887, %885, %873, %868
  %893 = phi i16 [ %870, %868 ], [ %884, %873 ], [ %891, %887 ], [ 23, %885 ]
  %894 = and i16 %893, 7
  %895 = shl i16 %866, 3
  %896 = and i16 %895, 56
  %897 = or i16 %894, %896
  %898 = icmp ult i16 %866, 8
  %899 = and i1 %834, %898
  %900 = icmp ult i16 %893, 16
  %901 = and i1 %899, %900
  br i1 %901, label %902, label %906

902:                                              ; preds = %892
  %903 = icmp ult i16 %893, 8
  %904 = or i16 %897, 64
  %905 = select i1 %903, i16 %897, i16 %904
  br label %921

906:                                              ; preds = %892
  %907 = lshr i16 %893, 3
  %908 = lshr i16 %866, 3
  %909 = mul nuw nsw i16 %908, 3
  %910 = add nuw nsw i16 %907, %909
  %911 = zext i16 %910 to i32
  %912 = shl nuw i16 %910, 1
  %913 = zext i16 %912 to i32
  %914 = shl nuw nsw i32 %911, 6
  %915 = add nuw nsw i32 %914, 64
  %916 = lshr i32 5377344, %913
  %917 = and i32 %916, 192
  %918 = add nuw nsw i32 %915, %917
  %919 = trunc i32 %918 to i16
  %920 = or i16 %897, %919
  br label %921

921:                                              ; preds = %902, %906
  %922 = phi i16 [ %905, %902 ], [ %920, %906 ]
  store i16 %922, i16* %835, align 2
  %923 = load i64, i64* %10, align 8
  %924 = add i64 %923, %725
  store i64 %924, i64* %10, align 8
  %925 = add i64 %726, 2
  %926 = add i64 %726, %724
  %927 = icmp ult i64 %926, %24
  %928 = select i1 %927, i64 %926, i64 %24
  %929 = lshr i64 %724, 2
  %930 = icmp ult i64 %723, %929
  br i1 %930, label %931, label %938

931:                                              ; preds = %921
  %932 = shl i64 %723, 2
  %933 = sub i64 %926, %932
  %934 = icmp ugt i64 %925, %933
  %935 = select i1 %934, i64 %925, i64 %933
  %936 = icmp ult i64 %928, %935
  %937 = select i1 %936, i64 %928, i64 %935
  br label %938

938:                                              ; preds = %931, %921
  %939 = phi i64 [ %937, %931 ], [ %925, %921 ]
  %940 = icmp ugt i64 %928, %939
  br i1 %940, label %941, label %1045

941:                                              ; preds = %938
  %942 = load i32*, i32** %34, align 8, !alias.scope !710, !noalias !717
  %943 = sub i64 %928, %939
  %944 = and i64 %943, 1
  %945 = icmp eq i64 %944, 0
  br i1 %945, label %959, label %946

946:                                              ; preds = %941
  %947 = and i64 %939, %3
  %948 = getelementptr inbounds i8, i8* %2, i64 %947
  %949 = bitcast i8* %948 to i64*
  %950 = load i64, i64* %949, align 8, !alias.scope !717, !noalias !710
  %951 = mul i64 %950, 3866266742567714048
  %952 = lshr i64 %951, 44
  %953 = trunc i64 %939 to i32
  %954 = and i64 %939, 24
  %955 = add nuw nsw i64 %952, %954
  %956 = and i64 %955, 1048575
  %957 = getelementptr inbounds i32, i32* %942, i64 %956
  store i32 %953, i32* %957, align 4, !noalias !721
  %958 = add nuw i64 %939, 1
  br label %959

959:                                              ; preds = %946, %941
  %960 = phi i64 [ %958, %946 ], [ %939, %941 ]
  %961 = add i64 %939, 1
  %962 = icmp eq i64 %928, %961
  br i1 %962, label %1045, label %963

963:                                              ; preds = %959, %963
  %964 = phi i64 [ %988, %963 ], [ %960, %959 ]
  %965 = and i64 %964, %3
  %966 = getelementptr inbounds i8, i8* %2, i64 %965
  %967 = bitcast i8* %966 to i64*
  %968 = load i64, i64* %967, align 8, !alias.scope !717, !noalias !710
  %969 = mul i64 %968, 3866266742567714048
  %970 = lshr i64 %969, 44
  %971 = trunc i64 %964 to i32
  %972 = and i64 %964, 24
  %973 = add nuw nsw i64 %970, %972
  %974 = and i64 %973, 1048575
  %975 = getelementptr inbounds i32, i32* %942, i64 %974
  store i32 %971, i32* %975, align 4, !noalias !721
  %976 = add nuw i64 %964, 1
  %977 = and i64 %976, %3
  %978 = getelementptr inbounds i8, i8* %2, i64 %977
  %979 = bitcast i8* %978 to i64*
  %980 = load i64, i64* %979, align 8, !alias.scope !717, !noalias !710
  %981 = mul i64 %980, 3866266742567714048
  %982 = lshr i64 %981, 44
  %983 = trunc i64 %976 to i32
  %984 = and i64 %976, 24
  %985 = add nuw nsw i64 %982, %984
  %986 = and i64 %985, 1048575
  %987 = getelementptr inbounds i32, i32* %942, i64 %986
  store i32 %983, i32* %987, align 4, !noalias !721
  %988 = add nuw i64 %964, 2
  %989 = icmp eq i64 %988, %928
  br i1 %989, label %1045, label %963

990:                                              ; preds = %373
  %991 = add i64 %63, 1
  %992 = add i64 %60, 1
  %993 = icmp ugt i64 %992, %62
  br i1 %993, label %994, label %1045

994:                                              ; preds = %990
  %995 = add i64 %62, %50
  %996 = icmp ugt i64 %992, %995
  br i1 %996, label %997, label %1021

997:                                              ; preds = %994
  %998 = add i64 %60, 17
  %999 = icmp ult i64 %998, %23
  %1000 = select i1 %999, i64 %998, i64 %23
  %1001 = icmp ult i64 %992, %1000
  br i1 %1001, label %1002, label %1045

1002:                                             ; preds = %997
  %1003 = load i32*, i32** %34, align 8, !alias.scope !722, !noalias !727
  br label %1004

1004:                                             ; preds = %1002, %1004
  %1005 = phi i64 [ %992, %1002 ], [ %1019, %1004 ]
  %1006 = phi i64 [ %991, %1002 ], [ %1018, %1004 ]
  %1007 = and i64 %1005, %3
  %1008 = getelementptr inbounds i8, i8* %2, i64 %1007
  %1009 = bitcast i8* %1008 to i64*
  %1010 = load i64, i64* %1009, align 8, !alias.scope !727, !noalias !722
  %1011 = mul i64 %1010, 3866266742567714048
  %1012 = lshr i64 %1011, 44
  %1013 = trunc i64 %1005 to i32
  %1014 = and i64 %1005, 24
  %1015 = add nuw nsw i64 %1012, %1014
  %1016 = and i64 %1015, 1048575
  %1017 = getelementptr inbounds i32, i32* %1003, i64 %1016
  store i32 %1013, i32* %1017, align 4, !noalias !730
  %1018 = add i64 %1006, 4
  %1019 = add i64 %1005, 4
  %1020 = icmp ult i64 %1019, %1000
  br i1 %1020, label %1004, label %1045

1021:                                             ; preds = %994
  %1022 = add i64 %60, 9
  %1023 = icmp ult i64 %1022, %23
  %1024 = select i1 %1023, i64 %1022, i64 %23
  %1025 = icmp ult i64 %992, %1024
  br i1 %1025, label %1026, label %1045

1026:                                             ; preds = %1021
  %1027 = load i32*, i32** %34, align 8, !alias.scope !731, !noalias !736
  br label %1028

1028:                                             ; preds = %1026, %1028
  %1029 = phi i64 [ %992, %1026 ], [ %1043, %1028 ]
  %1030 = phi i64 [ %991, %1026 ], [ %1042, %1028 ]
  %1031 = and i64 %1029, %3
  %1032 = getelementptr inbounds i8, i8* %2, i64 %1031
  %1033 = bitcast i8* %1032 to i64*
  %1034 = load i64, i64* %1033, align 8, !alias.scope !736, !noalias !731
  %1035 = mul i64 %1034, 3866266742567714048
  %1036 = lshr i64 %1035, 44
  %1037 = trunc i64 %1029 to i32
  %1038 = and i64 %1029, 24
  %1039 = add nuw nsw i64 %1036, %1038
  %1040 = and i64 %1039, 1048575
  %1041 = getelementptr inbounds i32, i32* %1027, i64 %1040
  store i32 %1037, i32* %1041, align 4, !noalias !739
  %1042 = add i64 %1030, 2
  %1043 = add i64 %1029, 2
  %1044 = icmp ult i64 %1043, %1024
  br i1 %1044, label %1028, label %1045

1045:                                             ; preds = %1028, %1004, %959, %963, %1021, %997, %938, %990
  %1046 = phi i64 [ %991, %990 ], [ 0, %938 ], [ %991, %997 ], [ %991, %1021 ], [ 0, %963 ], [ 0, %959 ], [ %1018, %1004 ], [ %1042, %1028 ]
  %1047 = phi i64 [ %62, %990 ], [ %729, %938 ], [ %62, %997 ], [ %62, %1021 ], [ %729, %963 ], [ %729, %959 ], [ %62, %1004 ], [ %62, %1028 ]
  %1048 = phi %struct.Command* [ %61, %990 ], [ %783, %938 ], [ %61, %997 ], [ %61, %1021 ], [ %783, %963 ], [ %783, %959 ], [ %61, %1004 ], [ %61, %1028 ]
  %1049 = phi i64 [ %992, %990 ], [ %926, %938 ], [ %992, %997 ], [ %992, %1021 ], [ %926, %963 ], [ %926, %959 ], [ %1019, %1004 ], [ %1043, %1028 ]
  %1050 = add i64 %1049, 8
  %1051 = icmp ult i64 %1050, %21
  %1052 = sub i64 %21, %1049
  br i1 %1051, label %58, label %1053

1053:                                             ; preds = %1045, %11
  %1054 = phi i64 [ %20, %11 ], [ %1046, %1045 ]
  %1055 = phi %struct.Command* [ %8, %11 ], [ %1048, %1045 ]
  %1056 = phi i64 [ %0, %11 ], [ %1052, %1045 ]
  %1057 = add i64 %1056, %1054
  store i64 %1057, i64* %7, align 8
  %1058 = ptrtoint %struct.Command* %1055 to i64
  %1059 = ptrtoint %struct.Command* %8 to i64
  %1060 = sub i64 %1058, %1059
  %1061 = ashr exact i64 %1060, 4
  %1062 = load i64, i64* %9, align 8
  %1063 = add i64 %1062, %1061
  store i64 %1063, i64* %9, align 8
  ret void

1064:                                             ; preds = %124
  %1065 = getelementptr inbounds i8, i8* %116, i64 1
  %1066 = getelementptr inbounds i8, i8* %81, i64 %125
  %1067 = load i8, i8* %1066, align 1, !alias.scope !670, !noalias !671
  %1068 = load i8, i8* %1065, align 1, !alias.scope !670, !noalias !671
  %1069 = icmp eq i8 %1067, %1068
  br i1 %1069, label %1070, label %127, !prof !15

1070:                                             ; preds = %1064
  %1071 = add i64 %115, 2
  %1072 = icmp eq i64 %117, 2
  br i1 %1072, label %127, label %1073

1073:                                             ; preds = %1070
  %1074 = getelementptr inbounds i8, i8* %116, i64 2
  %1075 = getelementptr inbounds i8, i8* %81, i64 %1071
  %1076 = load i8, i8* %1075, align 1, !alias.scope !670, !noalias !671
  %1077 = load i8, i8* %1074, align 1, !alias.scope !670, !noalias !671
  %1078 = icmp eq i8 %1076, %1077
  br i1 %1078, label %1079, label %127, !prof !15

1079:                                             ; preds = %1073
  %1080 = add i64 %115, 3
  %1081 = icmp eq i64 %117, 3
  br i1 %1081, label %127, label %1082

1082:                                             ; preds = %1079
  %1083 = getelementptr inbounds i8, i8* %116, i64 3
  %1084 = getelementptr inbounds i8, i8* %81, i64 %1080
  %1085 = load i8, i8* %1084, align 1, !alias.scope !670, !noalias !671
  %1086 = load i8, i8* %1083, align 1, !alias.scope !670, !noalias !671
  %1087 = icmp eq i8 %1085, %1086
  br i1 %1087, label %1088, label %127, !prof !15

1088:                                             ; preds = %1082
  %1089 = add i64 %115, 4
  %1090 = icmp eq i64 %117, 4
  br i1 %1090, label %127, label %1091

1091:                                             ; preds = %1088
  %1092 = getelementptr inbounds i8, i8* %116, i64 4
  %1093 = getelementptr inbounds i8, i8* %81, i64 %1089
  %1094 = load i8, i8* %1093, align 1, !alias.scope !670, !noalias !671
  %1095 = load i8, i8* %1092, align 1, !alias.scope !670, !noalias !671
  %1096 = icmp eq i8 %1094, %1095
  br i1 %1096, label %1097, label %127, !prof !15

1097:                                             ; preds = %1091
  %1098 = add i64 %115, 5
  %1099 = icmp eq i64 %117, 5
  br i1 %1099, label %127, label %1100

1100:                                             ; preds = %1097
  %1101 = getelementptr inbounds i8, i8* %116, i64 5
  %1102 = getelementptr inbounds i8, i8* %81, i64 %1098
  %1103 = load i8, i8* %1102, align 1, !alias.scope !670, !noalias !671
  %1104 = load i8, i8* %1101, align 1, !alias.scope !670, !noalias !671
  %1105 = icmp eq i8 %1103, %1104
  br i1 %1105, label %1106, label %127, !prof !15

1106:                                             ; preds = %1100
  %1107 = add i64 %115, 6
  %1108 = icmp eq i64 %117, 6
  br i1 %1108, label %127, label %1109

1109:                                             ; preds = %1106
  %1110 = getelementptr inbounds i8, i8* %116, i64 6
  %1111 = getelementptr inbounds i8, i8* %81, i64 %1107
  %1112 = load i8, i8* %1111, align 1, !alias.scope !670, !noalias !671
  %1113 = load i8, i8* %1110, align 1, !alias.scope !670, !noalias !671
  %1114 = icmp eq i8 %1112, %1113
  %1115 = add i64 %115, 7
  %1116 = select i1 %1114, i64 %1115, i64 %1107, !prof !15
  br label %127

1117:                                             ; preds = %216
  %1118 = getelementptr inbounds i8, i8* %210, i64 1
  %1119 = getelementptr inbounds i8, i8* %187, i64 %217
  %1120 = load i8, i8* %1119, align 1, !alias.scope !670, !noalias !671
  %1121 = load i8, i8* %1118, align 1, !alias.scope !670, !noalias !671
  %1122 = icmp eq i8 %1120, %1121
  br i1 %1122, label %1123, label %218, !prof !15

1123:                                             ; preds = %1117
  %1124 = add i64 %209, 2
  br i1 %159, label %218, label %1125

1125:                                             ; preds = %1123
  %1126 = getelementptr inbounds i8, i8* %210, i64 2
  %1127 = getelementptr inbounds i8, i8* %187, i64 %1124
  %1128 = load i8, i8* %1127, align 1, !alias.scope !670, !noalias !671
  %1129 = load i8, i8* %1126, align 1, !alias.scope !670, !noalias !671
  %1130 = icmp eq i8 %1128, %1129
  br i1 %1130, label %1131, label %218, !prof !15

1131:                                             ; preds = %1125
  %1132 = add i64 %209, 3
  br i1 %160, label %218, label %1133

1133:                                             ; preds = %1131
  %1134 = getelementptr inbounds i8, i8* %210, i64 3
  %1135 = getelementptr inbounds i8, i8* %187, i64 %1132
  %1136 = load i8, i8* %1135, align 1, !alias.scope !670, !noalias !671
  %1137 = load i8, i8* %1134, align 1, !alias.scope !670, !noalias !671
  %1138 = icmp eq i8 %1136, %1137
  br i1 %1138, label %1139, label %218, !prof !15

1139:                                             ; preds = %1133
  %1140 = add i64 %209, 4
  br i1 %161, label %218, label %1141

1141:                                             ; preds = %1139
  %1142 = getelementptr inbounds i8, i8* %210, i64 4
  %1143 = getelementptr inbounds i8, i8* %187, i64 %1140
  %1144 = load i8, i8* %1143, align 1, !alias.scope !670, !noalias !671
  %1145 = load i8, i8* %1142, align 1, !alias.scope !670, !noalias !671
  %1146 = icmp eq i8 %1144, %1145
  br i1 %1146, label %1147, label %218, !prof !15

1147:                                             ; preds = %1141
  %1148 = add i64 %209, 5
  br i1 %162, label %218, label %1149

1149:                                             ; preds = %1147
  %1150 = getelementptr inbounds i8, i8* %210, i64 5
  %1151 = getelementptr inbounds i8, i8* %187, i64 %1148
  %1152 = load i8, i8* %1151, align 1, !alias.scope !670, !noalias !671
  %1153 = load i8, i8* %1150, align 1, !alias.scope !670, !noalias !671
  %1154 = icmp eq i8 %1152, %1153
  br i1 %1154, label %1155, label %218, !prof !15

1155:                                             ; preds = %1149
  %1156 = add i64 %209, 6
  br i1 %163, label %218, label %1157

1157:                                             ; preds = %1155
  %1158 = getelementptr inbounds i8, i8* %210, i64 6
  %1159 = getelementptr inbounds i8, i8* %187, i64 %1156
  %1160 = load i8, i8* %1159, align 1, !alias.scope !670, !noalias !671
  %1161 = load i8, i8* %1158, align 1, !alias.scope !670, !noalias !671
  %1162 = icmp eq i8 %1160, %1161
  %1163 = add i64 %209, 7
  %1164 = select i1 %1162, i64 %1163, i64 %1156, !prof !15
  br label %218

1165:                                             ; preds = %338
  %1166 = getelementptr inbounds i8, i8* %332, i64 1
  %1167 = getelementptr inbounds i8, i8* %309, i64 %339
  %1168 = load i8, i8* %1167, align 1, !alias.scope !681, !noalias !682
  %1169 = load i8, i8* %1166, align 1, !alias.scope !681, !noalias !682
  %1170 = icmp eq i8 %1168, %1169
  br i1 %1170, label %1171, label %340, !prof !15

1171:                                             ; preds = %1165
  %1172 = add i64 %331, 2
  br i1 %263, label %340, label %1173

1173:                                             ; preds = %1171
  %1174 = getelementptr inbounds i8, i8* %332, i64 2
  %1175 = getelementptr inbounds i8, i8* %309, i64 %1172
  %1176 = load i8, i8* %1175, align 1, !alias.scope !681, !noalias !682
  %1177 = load i8, i8* %1174, align 1, !alias.scope !681, !noalias !682
  %1178 = icmp eq i8 %1176, %1177
  br i1 %1178, label %1179, label %340, !prof !15

1179:                                             ; preds = %1173
  %1180 = add i64 %331, 3
  br i1 %264, label %340, label %1181

1181:                                             ; preds = %1179
  %1182 = getelementptr inbounds i8, i8* %332, i64 3
  %1183 = getelementptr inbounds i8, i8* %309, i64 %1180
  %1184 = load i8, i8* %1183, align 1, !alias.scope !681, !noalias !682
  %1185 = load i8, i8* %1182, align 1, !alias.scope !681, !noalias !682
  %1186 = icmp eq i8 %1184, %1185
  br i1 %1186, label %1187, label %340, !prof !15

1187:                                             ; preds = %1181
  %1188 = add i64 %331, 4
  br i1 %265, label %340, label %1189

1189:                                             ; preds = %1187
  %1190 = getelementptr inbounds i8, i8* %332, i64 4
  %1191 = getelementptr inbounds i8, i8* %309, i64 %1188
  %1192 = load i8, i8* %1191, align 1, !alias.scope !681, !noalias !682
  %1193 = load i8, i8* %1190, align 1, !alias.scope !681, !noalias !682
  %1194 = icmp eq i8 %1192, %1193
  br i1 %1194, label %1195, label %340, !prof !15

1195:                                             ; preds = %1189
  %1196 = add i64 %331, 5
  br i1 %266, label %340, label %1197

1197:                                             ; preds = %1195
  %1198 = getelementptr inbounds i8, i8* %332, i64 5
  %1199 = getelementptr inbounds i8, i8* %309, i64 %1196
  %1200 = load i8, i8* %1199, align 1, !alias.scope !681, !noalias !682
  %1201 = load i8, i8* %1198, align 1, !alias.scope !681, !noalias !682
  %1202 = icmp eq i8 %1200, %1201
  br i1 %1202, label %1203, label %340, !prof !15

1203:                                             ; preds = %1197
  %1204 = add i64 %331, 6
  br i1 %267, label %340, label %1205

1205:                                             ; preds = %1203
  %1206 = getelementptr inbounds i8, i8* %332, i64 6
  %1207 = getelementptr inbounds i8, i8* %309, i64 %1204
  %1208 = load i8, i8* %1207, align 1, !alias.scope !681, !noalias !682
  %1209 = load i8, i8* %1206, align 1, !alias.scope !681, !noalias !682
  %1210 = icmp eq i8 %1208, %1209
  %1211 = add i64 %331, 7
  %1212 = select i1 %1210, i64 %1211, i64 %1204, !prof !15
  br label %340

1213:                                             ; preds = %460
  %1214 = getelementptr inbounds i8, i8* %452, i64 1
  %1215 = getelementptr inbounds i8, i8* %420, i64 %461
  %1216 = load i8, i8* %1215, align 1, !alias.scope !696, !noalias !697
  %1217 = load i8, i8* %1214, align 1, !alias.scope !696, !noalias !697
  %1218 = icmp eq i8 %1216, %1217
  br i1 %1218, label %1219, label %463, !prof !15

1219:                                             ; preds = %1213
  %1220 = add i64 %451, 2
  %1221 = icmp eq i64 %453, 2
  br i1 %1221, label %463, label %1222

1222:                                             ; preds = %1219
  %1223 = getelementptr inbounds i8, i8* %452, i64 2
  %1224 = getelementptr inbounds i8, i8* %420, i64 %1220
  %1225 = load i8, i8* %1224, align 1, !alias.scope !696, !noalias !697
  %1226 = load i8, i8* %1223, align 1, !alias.scope !696, !noalias !697
  %1227 = icmp eq i8 %1225, %1226
  br i1 %1227, label %1228, label %463, !prof !15

1228:                                             ; preds = %1222
  %1229 = add i64 %451, 3
  %1230 = icmp eq i64 %453, 3
  br i1 %1230, label %463, label %1231

1231:                                             ; preds = %1228
  %1232 = getelementptr inbounds i8, i8* %452, i64 3
  %1233 = getelementptr inbounds i8, i8* %420, i64 %1229
  %1234 = load i8, i8* %1233, align 1, !alias.scope !696, !noalias !697
  %1235 = load i8, i8* %1232, align 1, !alias.scope !696, !noalias !697
  %1236 = icmp eq i8 %1234, %1235
  br i1 %1236, label %1237, label %463, !prof !15

1237:                                             ; preds = %1231
  %1238 = add i64 %451, 4
  %1239 = icmp eq i64 %453, 4
  br i1 %1239, label %463, label %1240

1240:                                             ; preds = %1237
  %1241 = getelementptr inbounds i8, i8* %452, i64 4
  %1242 = getelementptr inbounds i8, i8* %420, i64 %1238
  %1243 = load i8, i8* %1242, align 1, !alias.scope !696, !noalias !697
  %1244 = load i8, i8* %1241, align 1, !alias.scope !696, !noalias !697
  %1245 = icmp eq i8 %1243, %1244
  br i1 %1245, label %1246, label %463, !prof !15

1246:                                             ; preds = %1240
  %1247 = add i64 %451, 5
  %1248 = icmp eq i64 %453, 5
  br i1 %1248, label %463, label %1249

1249:                                             ; preds = %1246
  %1250 = getelementptr inbounds i8, i8* %452, i64 5
  %1251 = getelementptr inbounds i8, i8* %420, i64 %1247
  %1252 = load i8, i8* %1251, align 1, !alias.scope !696, !noalias !697
  %1253 = load i8, i8* %1250, align 1, !alias.scope !696, !noalias !697
  %1254 = icmp eq i8 %1252, %1253
  br i1 %1254, label %1255, label %463, !prof !15

1255:                                             ; preds = %1249
  %1256 = add i64 %451, 6
  %1257 = icmp eq i64 %453, 6
  br i1 %1257, label %463, label %1258

1258:                                             ; preds = %1255
  %1259 = getelementptr inbounds i8, i8* %452, i64 6
  %1260 = getelementptr inbounds i8, i8* %420, i64 %1256
  %1261 = load i8, i8* %1260, align 1, !alias.scope !696, !noalias !697
  %1262 = load i8, i8* %1259, align 1, !alias.scope !696, !noalias !697
  %1263 = icmp eq i8 %1261, %1262
  %1264 = add i64 %451, 7
  %1265 = select i1 %1263, i64 %1264, i64 %1256, !prof !15
  br label %463

1266:                                             ; preds = %552
  %1267 = getelementptr inbounds i8, i8* %546, i64 1
  %1268 = getelementptr inbounds i8, i8* %523, i64 %553
  %1269 = load i8, i8* %1268, align 1, !alias.scope !696, !noalias !697
  %1270 = load i8, i8* %1267, align 1, !alias.scope !696, !noalias !697
  %1271 = icmp eq i8 %1269, %1270
  br i1 %1271, label %1272, label %554, !prof !15

1272:                                             ; preds = %1266
  %1273 = add i64 %545, 2
  br i1 %495, label %554, label %1274

1274:                                             ; preds = %1272
  %1275 = getelementptr inbounds i8, i8* %546, i64 2
  %1276 = getelementptr inbounds i8, i8* %523, i64 %1273
  %1277 = load i8, i8* %1276, align 1, !alias.scope !696, !noalias !697
  %1278 = load i8, i8* %1275, align 1, !alias.scope !696, !noalias !697
  %1279 = icmp eq i8 %1277, %1278
  br i1 %1279, label %1280, label %554, !prof !15

1280:                                             ; preds = %1274
  %1281 = add i64 %545, 3
  br i1 %496, label %554, label %1282

1282:                                             ; preds = %1280
  %1283 = getelementptr inbounds i8, i8* %546, i64 3
  %1284 = getelementptr inbounds i8, i8* %523, i64 %1281
  %1285 = load i8, i8* %1284, align 1, !alias.scope !696, !noalias !697
  %1286 = load i8, i8* %1283, align 1, !alias.scope !696, !noalias !697
  %1287 = icmp eq i8 %1285, %1286
  br i1 %1287, label %1288, label %554, !prof !15

1288:                                             ; preds = %1282
  %1289 = add i64 %545, 4
  br i1 %497, label %554, label %1290

1290:                                             ; preds = %1288
  %1291 = getelementptr inbounds i8, i8* %546, i64 4
  %1292 = getelementptr inbounds i8, i8* %523, i64 %1289
  %1293 = load i8, i8* %1292, align 1, !alias.scope !696, !noalias !697
  %1294 = load i8, i8* %1291, align 1, !alias.scope !696, !noalias !697
  %1295 = icmp eq i8 %1293, %1294
  br i1 %1295, label %1296, label %554, !prof !15

1296:                                             ; preds = %1290
  %1297 = add i64 %545, 5
  br i1 %498, label %554, label %1298

1298:                                             ; preds = %1296
  %1299 = getelementptr inbounds i8, i8* %546, i64 5
  %1300 = getelementptr inbounds i8, i8* %523, i64 %1297
  %1301 = load i8, i8* %1300, align 1, !alias.scope !696, !noalias !697
  %1302 = load i8, i8* %1299, align 1, !alias.scope !696, !noalias !697
  %1303 = icmp eq i8 %1301, %1302
  br i1 %1303, label %1304, label %554, !prof !15

1304:                                             ; preds = %1298
  %1305 = add i64 %545, 6
  br i1 %499, label %554, label %1306

1306:                                             ; preds = %1304
  %1307 = getelementptr inbounds i8, i8* %546, i64 6
  %1308 = getelementptr inbounds i8, i8* %523, i64 %1305
  %1309 = load i8, i8* %1308, align 1, !alias.scope !696, !noalias !697
  %1310 = load i8, i8* %1307, align 1, !alias.scope !696, !noalias !697
  %1311 = icmp eq i8 %1309, %1310
  %1312 = add i64 %545, 7
  %1313 = select i1 %1311, i64 %1312, i64 %1305, !prof !15
  br label %554

1314:                                             ; preds = %674
  %1315 = getelementptr inbounds i8, i8* %668, i64 1
  %1316 = getelementptr inbounds i8, i8* %645, i64 %675
  %1317 = load i8, i8* %1316, align 1, !alias.scope !707, !noalias !708
  %1318 = load i8, i8* %1315, align 1, !alias.scope !707, !noalias !708
  %1319 = icmp eq i8 %1317, %1318
  br i1 %1319, label %1320, label %676, !prof !15

1320:                                             ; preds = %1314
  %1321 = add i64 %667, 2
  br i1 %599, label %676, label %1322

1322:                                             ; preds = %1320
  %1323 = getelementptr inbounds i8, i8* %668, i64 2
  %1324 = getelementptr inbounds i8, i8* %645, i64 %1321
  %1325 = load i8, i8* %1324, align 1, !alias.scope !707, !noalias !708
  %1326 = load i8, i8* %1323, align 1, !alias.scope !707, !noalias !708
  %1327 = icmp eq i8 %1325, %1326
  br i1 %1327, label %1328, label %676, !prof !15

1328:                                             ; preds = %1322
  %1329 = add i64 %667, 3
  br i1 %600, label %676, label %1330

1330:                                             ; preds = %1328
  %1331 = getelementptr inbounds i8, i8* %668, i64 3
  %1332 = getelementptr inbounds i8, i8* %645, i64 %1329
  %1333 = load i8, i8* %1332, align 1, !alias.scope !707, !noalias !708
  %1334 = load i8, i8* %1331, align 1, !alias.scope !707, !noalias !708
  %1335 = icmp eq i8 %1333, %1334
  br i1 %1335, label %1336, label %676, !prof !15

1336:                                             ; preds = %1330
  %1337 = add i64 %667, 4
  br i1 %601, label %676, label %1338

1338:                                             ; preds = %1336
  %1339 = getelementptr inbounds i8, i8* %668, i64 4
  %1340 = getelementptr inbounds i8, i8* %645, i64 %1337
  %1341 = load i8, i8* %1340, align 1, !alias.scope !707, !noalias !708
  %1342 = load i8, i8* %1339, align 1, !alias.scope !707, !noalias !708
  %1343 = icmp eq i8 %1341, %1342
  br i1 %1343, label %1344, label %676, !prof !15

1344:                                             ; preds = %1338
  %1345 = add i64 %667, 5
  br i1 %602, label %676, label %1346

1346:                                             ; preds = %1344
  %1347 = getelementptr inbounds i8, i8* %668, i64 5
  %1348 = getelementptr inbounds i8, i8* %645, i64 %1345
  %1349 = load i8, i8* %1348, align 1, !alias.scope !707, !noalias !708
  %1350 = load i8, i8* %1347, align 1, !alias.scope !707, !noalias !708
  %1351 = icmp eq i8 %1349, %1350
  br i1 %1351, label %1352, label %676, !prof !15

1352:                                             ; preds = %1346
  %1353 = add i64 %667, 6
  br i1 %603, label %676, label %1354

1354:                                             ; preds = %1352
  %1355 = getelementptr inbounds i8, i8* %668, i64 6
  %1356 = getelementptr inbounds i8, i8* %645, i64 %1353
  %1357 = load i8, i8* %1356, align 1, !alias.scope !707, !noalias !708
  %1358 = load i8, i8* %1355, align 1, !alias.scope !707, !noalias !708
  %1359 = icmp eq i8 %1357, %1358
  %1360 = add i64 %667, 7
  %1361 = select i1 %1359, i64 %1360, i64 %1353, !prof !15
  br label %676
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc void @CreateBackwardReferencesNH65(i64, i64, i8* readonly, i64, %struct.BrotliEncoderParams* nocapture readonly, %struct.Hasher*, i32*, i64* nocapture, %struct.Command*, i64* nocapture, i64* nocapture) unnamed_addr #1 {
  %12 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = add i64 %15, -16
  %17 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* %7, align 8
  %20 = add i64 %1, %0
  %21 = icmp ugt i64 %0, 7
  %22 = add i64 %20, -7
  %23 = select i1 %21, i64 %22, i64 %1
  %24 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 9
  %27 = select i1 %26, i64 64, i64 512
  %28 = add i64 %27, %1
  %29 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 20
  %30 = bitcast i16* %29 to i32*
  %31 = load i32, i32* %30, align 8, !alias.scope !740, !noalias !745
  %32 = icmp sgt i32 %31, 4
  br i1 %32, label %33, label %57

33:                                               ; preds = %11
  %34 = load i32, i32* %6, align 4, !alias.scope !748, !noalias !740
  %35 = getelementptr inbounds i32, i32* %6, i64 4
  %36 = insertelement <4 x i32> undef, i32 %34, i32 0
  %37 = shufflevector <4 x i32> %36, <4 x i32> undef, <4 x i32> zeroinitializer
  %38 = add nsw <4 x i32> %37, <i32 -1, i32 1, i32 -2, i32 2>
  %39 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> %38, <4 x i32>* %39, align 4, !alias.scope !748, !noalias !740
  %40 = add nsw i32 %34, -3
  %41 = getelementptr inbounds i32, i32* %6, i64 8
  store i32 %40, i32* %41, align 4, !alias.scope !748, !noalias !740
  %42 = add nsw i32 %34, 3
  %43 = getelementptr inbounds i32, i32* %6, i64 9
  store i32 %42, i32* %43, align 4, !alias.scope !748, !noalias !740
  %44 = icmp sgt i32 %31, 10
  br i1 %44, label %45, label %57

45:                                               ; preds = %33
  %46 = getelementptr inbounds i32, i32* %6, i64 1
  %47 = load i32, i32* %46, align 4, !alias.scope !748, !noalias !740
  %48 = getelementptr inbounds i32, i32* %6, i64 10
  %49 = insertelement <4 x i32> undef, i32 %47, i32 0
  %50 = shufflevector <4 x i32> %49, <4 x i32> undef, <4 x i32> zeroinitializer
  %51 = add nsw <4 x i32> %50, <i32 -1, i32 1, i32 -2, i32 2>
  %52 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %52, align 4, !alias.scope !748, !noalias !740
  %53 = add nsw i32 %47, -3
  %54 = getelementptr inbounds i32, i32* %6, i64 14
  store i32 %53, i32* %54, align 4, !alias.scope !748, !noalias !740
  %55 = add nsw i32 %47, 3
  %56 = getelementptr inbounds i32, i32* %6, i64 15
  store i32 %55, i32* %56, align 4, !alias.scope !748, !noalias !740
  br label %57

57:                                               ; preds = %11, %33, %45
  %58 = add i64 %1, 8
  %59 = icmp ult i64 %58, %20
  br i1 %59, label %60, label %1584

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 4
  %62 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 28
  %63 = bitcast i16* %62 to i16**
  %64 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 32
  %65 = bitcast i16* %64 to i32**
  %66 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 12
  %67 = bitcast i16* %66 to i64*
  %68 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 8
  %69 = bitcast i16* %68 to i32*
  %70 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 18
  %71 = bitcast i16* %70 to i32*
  %72 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 4
  %73 = bitcast i16* %72 to i64*
  %74 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 16
  %75 = bitcast i16* %74 to i32*
  %76 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 24
  %77 = bitcast i16* %76 to %struct.HasherCommon**
  %78 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 5
  %79 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 4
  %80 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 0
  %81 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 2
  %82 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 10, i32 3
  %83 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 44
  %84 = bitcast i16* %83 to i64*
  %85 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 36
  %86 = bitcast i16* %85 to i32*
  %87 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 50
  %88 = bitcast i16* %87 to i32*
  %89 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 52
  %90 = bitcast i16* %89 to i32*
  %91 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %5, i64 0, i32 1, i32 0, i32 0, i64 40
  %92 = bitcast i16* %91 to i32**
  %93 = shl nuw nsw i64 %27, 2
  %94 = getelementptr inbounds i32, i32* %6, i64 1
  %95 = getelementptr inbounds i32, i32* %6, i64 2
  %96 = getelementptr inbounds i32, i32* %6, i64 3
  %97 = getelementptr inbounds i32, i32* %6, i64 4
  %98 = getelementptr inbounds i32, i32* %6, i64 8
  %99 = getelementptr inbounds i32, i32* %6, i64 9
  %100 = getelementptr inbounds i32, i32* %6, i64 10
  %101 = getelementptr inbounds i32, i32* %6, i64 14
  %102 = getelementptr inbounds i32, i32* %6, i64 15
  %103 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 1
  %104 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %4, i64 0, i32 9, i32 0
  %105 = bitcast i32* %97 to <4 x i32>*
  %106 = bitcast i32* %100 to <4 x i32>*
  br label %107

107:                                              ; preds = %60, %1576
  %108 = phi i64 [ %0, %60 ], [ %1583, %1576 ]
  %109 = phi i64 [ %1, %60 ], [ %1580, %1576 ]
  %110 = phi %struct.Command* [ %8, %60 ], [ %1579, %1576 ]
  %111 = phi i64 [ %28, %60 ], [ %1578, %1576 ]
  %112 = phi i64 [ %19, %60 ], [ %1577, %1576 ]
  %113 = icmp ult i64 %109, %16
  %114 = select i1 %113, i64 %109, i64 %16
  %115 = add i64 %109, %18
  %116 = icmp ult i64 %115, %16
  %117 = select i1 %116, i64 %115, i64 %16
  %118 = load i64, i64* %61, align 8
  %119 = load i16*, i16** %63, align 8, !alias.scope !751, !noalias !756
  %120 = load i32*, i32** %65, align 8, !alias.scope !751, !noalias !756
  %121 = and i64 %109, %3
  %122 = load i32, i32* %30, align 8, !alias.scope !751, !noalias !756
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %236, label %124

124:                                              ; preds = %107
  %125 = getelementptr inbounds i8, i8* %2, i64 %121
  %126 = lshr i64 %108, 3
  %127 = icmp eq i64 %126, 0
  %128 = and i64 %108, 7
  %129 = icmp eq i64 %128, 0
  %130 = sext i32 %122 to i64
  %131 = icmp eq i64 %128, 1
  %132 = icmp eq i64 %128, 2
  %133 = icmp eq i64 %128, 3
  %134 = icmp eq i64 %128, 4
  %135 = icmp eq i64 %128, 5
  %136 = icmp eq i64 %128, 6
  br label %137

137:                                              ; preds = %227, %124
  %138 = phi i64 [ 2020, %124 ], [ %228, %227 ]
  %139 = phi i64 [ 0, %124 ], [ %229, %227 ]
  %140 = phi i64 [ 0, %124 ], [ %230, %227 ]
  %141 = phi i64 [ 0, %124 ], [ %231, %227 ]
  %142 = phi i64 [ 0, %124 ], [ %234, %227 ]
  %143 = phi i64 [ 0, %124 ], [ %233, %227 ]
  %144 = phi i64 [ 2020, %124 ], [ %232, %227 ]
  %145 = getelementptr inbounds i32, i32* %6, i64 %142
  %146 = load i32, i32* %145, align 4, !alias.scope !763, !noalias !764
  %147 = sext i32 %146 to i64
  %148 = sub i64 %109, %147
  %149 = icmp uge i64 %148, %109
  %150 = icmp ult i64 %114, %147
  %151 = or i1 %150, %149
  br i1 %151, label %227, label %152, !prof !159

152:                                              ; preds = %137
  %153 = and i64 %148, %3
  %154 = add i64 %143, %121
  %155 = icmp ugt i64 %154, %3
  br i1 %155, label %227, label %156

156:                                              ; preds = %152
  %157 = add i64 %153, %143
  %158 = icmp ugt i64 %157, %3
  br i1 %158, label %227, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds i8, i8* %2, i64 %154
  %161 = load i8, i8* %160, align 1, !alias.scope !765, !noalias !766
  %162 = getelementptr inbounds i8, i8* %2, i64 %157
  %163 = load i8, i8* %162, align 1, !alias.scope !765, !noalias !766
  %164 = icmp eq i8 %161, %163
  br i1 %164, label %165, label %227

165:                                              ; preds = %159
  %166 = getelementptr inbounds i8, i8* %2, i64 %153
  br i1 %127, label %187, label %167, !prof !13

167:                                              ; preds = %165, %177
  %168 = phi i64 [ %180, %177 ], [ %126, %165 ]
  %169 = phi i8* [ %178, %177 ], [ %125, %165 ]
  %170 = phi i64 [ %179, %177 ], [ 0, %165 ]
  %171 = bitcast i8* %169 to i64*
  %172 = load i64, i64* %171, align 8, !alias.scope !765, !noalias !766
  %173 = getelementptr inbounds i8, i8* %166, i64 %170
  %174 = bitcast i8* %173 to i64*
  %175 = load i64, i64* %174, align 8, !alias.scope !765, !noalias !766
  %176 = icmp eq i64 %172, %175
  br i1 %176, label %177, label %182, !prof !13

177:                                              ; preds = %167
  %178 = getelementptr inbounds i8, i8* %169, i64 8
  %179 = add nuw i64 %170, 8
  %180 = add nsw i64 %168, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %187, label %167, !prof !13

182:                                              ; preds = %167
  %183 = xor i64 %175, %172
  %184 = tail call i64 @llvm.cttz.i64(i64 %183, i1 true) #4, !range !14
  %185 = lshr i64 %184, 3
  %186 = or i64 %185, %170
  br label %197

187:                                              ; preds = %177, %165
  %188 = phi i64 [ 0, %165 ], [ %179, %177 ]
  %189 = phi i8* [ %125, %165 ], [ %178, %177 ]
  br i1 %129, label %197, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds i8, i8* %166, i64 %188
  %192 = load i8, i8* %191, align 1, !alias.scope !765, !noalias !766
  %193 = load i8, i8* %189, align 1, !alias.scope !765, !noalias !766
  %194 = icmp eq i8 %192, %193
  br i1 %194, label %195, label %197, !prof !15

195:                                              ; preds = %190
  %196 = add i64 %188, 1
  br i1 %131, label %197, label %1595

197:                                              ; preds = %1635, %195, %190, %1595, %1601, %1603, %1609, %1611, %1617, %1619, %1625, %1627, %1633, %187, %182
  %198 = phi i64 [ %186, %182 ], [ %188, %187 ], [ %196, %195 ], [ %188, %190 ], [ %196, %1595 ], [ %1602, %1601 ], [ %1602, %1603 ], [ %1610, %1609 ], [ %1610, %1611 ], [ %1618, %1617 ], [ %1618, %1619 ], [ %1626, %1625 ], [ %1626, %1627 ], [ %1634, %1633 ], [ %1642, %1635 ]
  %199 = icmp ugt i64 %198, 2
  br i1 %199, label %204, label %200

200:                                              ; preds = %197
  %201 = icmp eq i64 %198, 2
  %202 = icmp ult i64 %142, 2
  %203 = and i1 %202, %201
  br i1 %203, label %204, label %227

204:                                              ; preds = %200, %197
  %205 = mul i64 %198, 135
  %206 = add i64 %205, 1935
  %207 = icmp ult i64 %144, %206
  br i1 %207, label %208, label %227

208:                                              ; preds = %204
  %209 = icmp eq i64 %142, 0
  br i1 %209, label %218, label %210

210:                                              ; preds = %208
  %211 = trunc i64 %142 to i32
  %212 = and i32 %211, 14
  %213 = lshr i32 117264, %212
  %214 = and i32 %213, 14
  %215 = add nuw nsw i32 %214, 39
  %216 = zext i32 %215 to i64
  %217 = sub i64 %206, %216
  br label %218

218:                                              ; preds = %210, %208
  %219 = phi i64 [ %217, %210 ], [ %206, %208 ]
  %220 = icmp ult i64 %144, %219
  %221 = select i1 %220, i64 %219, i64 %138
  %222 = select i1 %220, i64 %147, i64 %139
  %223 = select i1 %220, i64 %198, i64 %140
  %224 = select i1 %220, i64 %198, i64 %141
  %225 = select i1 %220, i64 %219, i64 %144
  %226 = select i1 %220, i64 %198, i64 %143
  br label %227

227:                                              ; preds = %218, %204, %200, %159, %156, %152, %137
  %228 = phi i64 [ %138, %137 ], [ %138, %152 ], [ %138, %156 ], [ %138, %204 ], [ %138, %200 ], [ %138, %159 ], [ %221, %218 ]
  %229 = phi i64 [ %139, %137 ], [ %139, %152 ], [ %139, %156 ], [ %139, %204 ], [ %139, %200 ], [ %139, %159 ], [ %222, %218 ]
  %230 = phi i64 [ %140, %137 ], [ %140, %152 ], [ %140, %156 ], [ %140, %204 ], [ %140, %200 ], [ %140, %159 ], [ %223, %218 ]
  %231 = phi i64 [ %141, %137 ], [ %141, %152 ], [ %141, %156 ], [ %141, %204 ], [ %141, %200 ], [ %141, %159 ], [ %224, %218 ]
  %232 = phi i64 [ %144, %137 ], [ %144, %152 ], [ %144, %156 ], [ %144, %204 ], [ %144, %200 ], [ %144, %159 ], [ %225, %218 ]
  %233 = phi i64 [ %143, %137 ], [ %143, %152 ], [ %143, %156 ], [ %143, %204 ], [ %143, %200 ], [ %143, %159 ], [ %226, %218 ]
  %234 = add nuw i64 %142, 1
  %235 = icmp ult i64 %234, %130
  br i1 %235, label %137, label %236

236:                                              ; preds = %227, %107
  %237 = phi i64 [ 2020, %107 ], [ %228, %227 ]
  %238 = phi i64 [ 0, %107 ], [ %229, %227 ]
  %239 = phi i64 [ 0, %107 ], [ %230, %227 ]
  %240 = phi i64 [ 0, %107 ], [ %231, %227 ]
  %241 = phi i64 [ 2020, %107 ], [ %232, %227 ]
  %242 = phi i64 [ 0, %107 ], [ %233, %227 ]
  %243 = getelementptr inbounds i8, i8* %2, i64 %121
  %244 = load i64, i64* %67, align 8, !alias.scope !751, !noalias !756
  %245 = load i32, i32* %69, align 8, !alias.scope !751, !noalias !756
  %246 = bitcast i8* %243 to i64*
  %247 = load i64, i64* %246, align 8, !alias.scope !767, !noalias !766
  %248 = and i64 %247, %244
  %249 = mul i64 %248, 2297779722762296275
  %250 = zext i32 %245 to i64
  %251 = lshr i64 %249, %250
  %252 = trunc i64 %251 to i32
  %253 = load i32, i32* %71, align 4, !alias.scope !751, !noalias !756
  %254 = shl i32 %252, %253
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds i32, i32* %120, i64 %255
  %257 = and i64 %251, 4294967295
  %258 = getelementptr inbounds i16, i16* %119, i64 %257
  %259 = load i16, i16* %258, align 2, !noalias !770
  %260 = zext i16 %259 to i64
  %261 = load i64, i64* %73, align 8, !alias.scope !751, !noalias !756
  %262 = tail call i64 @llvm.usub.sat.i64(i64 %260, i64 %261) #4
  %263 = icmp ult i64 %262, %260
  br i1 %263, label %266, label %264

264:                                              ; preds = %236
  %265 = load i32, i32* %75, align 8, !alias.scope !751, !noalias !756
  br label %366

266:                                              ; preds = %236
  %267 = lshr i64 %108, 3
  %268 = icmp eq i64 %267, 0
  %269 = and i64 %108, 7
  %270 = icmp eq i64 %269, 0
  %271 = load i32, i32* %75, align 8, !alias.scope !751, !noalias !756
  %272 = zext i32 %271 to i64
  %273 = icmp eq i64 %269, 1
  %274 = icmp eq i64 %269, 2
  %275 = icmp eq i64 %269, 3
  %276 = icmp eq i64 %269, 4
  %277 = icmp eq i64 %269, 5
  %278 = icmp eq i64 %269, 6
  br label %279

279:                                              ; preds = %358, %266
  %280 = phi i64 [ %237, %266 ], [ %359, %358 ]
  %281 = phi i64 [ %238, %266 ], [ %360, %358 ]
  %282 = phi i64 [ %239, %266 ], [ %361, %358 ]
  %283 = phi i64 [ %240, %266 ], [ %362, %358 ]
  %284 = phi i64 [ %260, %266 ], [ %287, %358 ]
  %285 = phi i64 [ %242, %266 ], [ %364, %358 ]
  %286 = phi i64 [ %241, %266 ], [ %363, %358 ]
  %287 = add i64 %284, -1
  %288 = and i64 %287, %272
  %289 = getelementptr inbounds i32, i32* %256, i64 %288
  %290 = load i32, i32* %289, align 4, !noalias !770
  %291 = zext i32 %290 to i64
  %292 = sub i64 %109, %291
  %293 = icmp ugt i64 %292, %114
  br i1 %293, label %366, label %294, !prof !13

294:                                              ; preds = %279
  %295 = and i64 %291, %3
  %296 = add i64 %285, %121
  %297 = icmp ugt i64 %296, %3
  br i1 %297, label %358, label %298

298:                                              ; preds = %294
  %299 = add i64 %295, %285
  %300 = icmp ugt i64 %299, %3
  br i1 %300, label %358, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds i8, i8* %2, i64 %296
  %303 = load i8, i8* %302, align 1, !alias.scope !765, !noalias !766
  %304 = getelementptr inbounds i8, i8* %2, i64 %299
  %305 = load i8, i8* %304, align 1, !alias.scope !765, !noalias !766
  %306 = icmp eq i8 %303, %305
  br i1 %306, label %307, label %358

307:                                              ; preds = %301
  %308 = getelementptr inbounds i8, i8* %2, i64 %295
  br i1 %268, label %329, label %309, !prof !13

309:                                              ; preds = %307, %319
  %310 = phi i64 [ %322, %319 ], [ %267, %307 ]
  %311 = phi i8* [ %320, %319 ], [ %243, %307 ]
  %312 = phi i64 [ %321, %319 ], [ 0, %307 ]
  %313 = bitcast i8* %311 to i64*
  %314 = load i64, i64* %313, align 8, !alias.scope !765, !noalias !766
  %315 = getelementptr inbounds i8, i8* %308, i64 %312
  %316 = bitcast i8* %315 to i64*
  %317 = load i64, i64* %316, align 8, !alias.scope !765, !noalias !766
  %318 = icmp eq i64 %314, %317
  br i1 %318, label %319, label %324, !prof !13

319:                                              ; preds = %309
  %320 = getelementptr inbounds i8, i8* %311, i64 8
  %321 = add nuw i64 %312, 8
  %322 = add nsw i64 %310, -1
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %329, label %309, !prof !13

324:                                              ; preds = %309
  %325 = xor i64 %317, %314
  %326 = tail call i64 @llvm.cttz.i64(i64 %325, i1 true) #4, !range !14
  %327 = lshr i64 %326, 3
  %328 = or i64 %327, %312
  br label %339

329:                                              ; preds = %319, %307
  %330 = phi i64 [ 0, %307 ], [ %321, %319 ]
  %331 = phi i8* [ %243, %307 ], [ %320, %319 ]
  br i1 %270, label %339, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds i8, i8* %308, i64 %330
  %334 = load i8, i8* %333, align 1, !alias.scope !765, !noalias !766
  %335 = load i8, i8* %331, align 1, !alias.scope !765, !noalias !766
  %336 = icmp eq i8 %334, %335
  br i1 %336, label %337, label %339, !prof !15

337:                                              ; preds = %332
  %338 = add i64 %330, 1
  br i1 %273, label %339, label %1643

339:                                              ; preds = %1683, %337, %332, %1643, %1649, %1651, %1657, %1659, %1665, %1667, %1673, %1675, %1681, %329, %324
  %340 = phi i64 [ %328, %324 ], [ %330, %329 ], [ %338, %337 ], [ %330, %332 ], [ %338, %1643 ], [ %1650, %1649 ], [ %1650, %1651 ], [ %1658, %1657 ], [ %1658, %1659 ], [ %1666, %1665 ], [ %1666, %1667 ], [ %1674, %1673 ], [ %1674, %1675 ], [ %1682, %1681 ], [ %1690, %1683 ]
  %341 = icmp ugt i64 %340, 3
  br i1 %341, label %342, label %358

342:                                              ; preds = %339
  %343 = mul i64 %340, 135
  %344 = trunc i64 %292 to i32
  %345 = tail call i32 @llvm.ctlz.i32(i32 %344, i1 true) #4, !range !18
  %346 = xor i32 %345, 31
  %347 = mul nsw i32 %346, -30
  %348 = add nsw i32 %347, 1920
  %349 = zext i32 %348 to i64
  %350 = add i64 %343, %349
  %351 = icmp ult i64 %286, %350
  %352 = select i1 %351, i64 %350, i64 %280
  %353 = select i1 %351, i64 %292, i64 %281
  %354 = select i1 %351, i64 %340, i64 %282
  %355 = select i1 %351, i64 %340, i64 %283
  %356 = select i1 %351, i64 %350, i64 %286
  %357 = select i1 %351, i64 %340, i64 %285
  br label %358

358:                                              ; preds = %342, %339, %301, %298, %294
  %359 = phi i64 [ %280, %294 ], [ %280, %298 ], [ %280, %339 ], [ %280, %301 ], [ %352, %342 ]
  %360 = phi i64 [ %281, %294 ], [ %281, %298 ], [ %281, %339 ], [ %281, %301 ], [ %353, %342 ]
  %361 = phi i64 [ %282, %294 ], [ %282, %298 ], [ %282, %339 ], [ %282, %301 ], [ %354, %342 ]
  %362 = phi i64 [ %283, %294 ], [ %283, %298 ], [ %283, %339 ], [ %283, %301 ], [ %355, %342 ]
  %363 = phi i64 [ %286, %294 ], [ %286, %298 ], [ %286, %339 ], [ %286, %301 ], [ %356, %342 ]
  %364 = phi i64 [ %285, %294 ], [ %285, %298 ], [ %285, %339 ], [ %285, %301 ], [ %357, %342 ]
  %365 = icmp ugt i64 %287, %262
  br i1 %365, label %279, label %366

366:                                              ; preds = %358, %279, %264
  %367 = phi i64 [ %237, %264 ], [ %359, %358 ], [ %280, %279 ]
  %368 = phi i64 [ %238, %264 ], [ %360, %358 ], [ %281, %279 ]
  %369 = phi i64 [ %239, %264 ], [ %361, %358 ], [ %282, %279 ]
  %370 = phi i64 [ %240, %264 ], [ %362, %358 ], [ %283, %279 ]
  %371 = phi i64 [ %241, %264 ], [ %363, %358 ], [ %286, %279 ]
  %372 = phi i32 [ %265, %264 ], [ %271, %279 ], [ %271, %358 ]
  %373 = trunc i64 %109 to i32
  %374 = zext i16 %259 to i32
  %375 = and i32 %372, %374
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds i32, i32* %256, i64 %376
  store i32 %373, i32* %377, align 4, !noalias !770
  %378 = load i16, i16* %258, align 2, !noalias !770
  %379 = add i16 %378, 1
  store i16 %379, i16* %258, align 2, !noalias !770
  %380 = icmp eq i64 %371, 2020
  br i1 %380, label %381, label %513

381:                                              ; preds = %366
  %382 = load %struct.HasherCommon*, %struct.HasherCommon** %77, align 8, !alias.scope !751, !noalias !756
  %383 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %382, i64 0, i32 2
  %384 = load i64, i64* %383, align 8, !noalias !770
  %385 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %382, i64 0, i32 1
  %386 = load i64, i64* %385, align 8, !noalias !770
  %387 = lshr i64 %386, 7
  %388 = icmp ult i64 %384, %387
  br i1 %388, label %513, label %389

389:                                              ; preds = %381
  %390 = mul i64 %247, 506832829
  %391 = lshr i64 %390, 17
  %392 = and i64 %391, 32766
  %393 = add i64 %117, 1
  br label %394

394:                                              ; preds = %501, %389
  %395 = phi i32 [ 0, %389 ], [ %502, %501 ]
  %396 = phi i64 [ %367, %389 ], [ %503, %501 ]
  %397 = phi i64 [ %368, %389 ], [ %504, %501 ]
  %398 = phi i64 [ %369, %389 ], [ %505, %501 ]
  %399 = phi i64 [ 2020, %389 ], [ %506, %501 ]
  %400 = phi i64 [ %370, %389 ], [ %507, %501 ]
  %401 = phi i64 [ %384, %389 ], [ %508, %501 ]
  %402 = phi i64 [ 2020, %389 ], [ %509, %501 ]
  %403 = phi i64 [ %386, %389 ], [ %406, %501 ]
  %404 = phi i64 [ %392, %389 ], [ %511, %501 ]
  %405 = phi i64 [ 0, %389 ], [ %510, %501 ]
  %406 = add i64 %403, 1
  store i64 %406, i64* %385, align 8, !noalias !770
  %407 = load i8*, i8** %78, align 8, !noalias !770
  %408 = getelementptr inbounds i8, i8* %407, i64 %404
  %409 = load i8, i8* %408, align 1, !noalias !770
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %501, label %411

411:                                              ; preds = %394
  %412 = zext i8 %409 to i64
  %413 = load i16*, i16** %79, align 8, !noalias !770
  %414 = getelementptr inbounds i16, i16* %413, i64 %404
  %415 = load i16, i16* %414, align 2, !noalias !770
  %416 = zext i16 %415 to i64
  %417 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %80, align 8, !noalias !770
  %418 = icmp ult i64 %108, %412
  br i1 %418, label %501, label %419

419:                                              ; preds = %411
  %420 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %417, i64 0, i32 1, i64 %412
  %421 = load i32, i32* %420, align 4, !noalias !770
  %422 = zext i32 %421 to i64
  %423 = mul nuw nsw i64 %416, %412
  %424 = add nuw nsw i64 %423, %422
  %425 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %417, i64 0, i32 3
  %426 = load i8*, i8** %425, align 8, !noalias !770
  %427 = getelementptr inbounds i8, i8* %426, i64 %424
  %428 = lshr i64 %412, 3
  %429 = icmp eq i64 %428, 0
  br i1 %429, label %450, label %430, !prof !13

430:                                              ; preds = %419, %440
  %431 = phi i64 [ %443, %440 ], [ %428, %419 ]
  %432 = phi i8* [ %441, %440 ], [ %427, %419 ]
  %433 = phi i64 [ %442, %440 ], [ 0, %419 ]
  %434 = bitcast i8* %432 to i64*
  %435 = load i64, i64* %434, align 8, !noalias !770
  %436 = getelementptr inbounds i8, i8* %243, i64 %433
  %437 = bitcast i8* %436 to i64*
  %438 = load i64, i64* %437, align 8, !alias.scope !765, !noalias !766
  %439 = icmp eq i64 %435, %438
  br i1 %439, label %440, label %445, !prof !13

440:                                              ; preds = %430
  %441 = getelementptr inbounds i8, i8* %432, i64 8
  %442 = add nuw nsw i64 %433, 8
  %443 = add nsw i64 %431, -1
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %450, label %430, !prof !13

445:                                              ; preds = %430
  %446 = xor i64 %438, %435
  %447 = tail call i64 @llvm.cttz.i64(i64 %446, i1 true) #4, !range !14
  %448 = lshr i64 %447, 3
  %449 = or i64 %448, %433
  br label %463

450:                                              ; preds = %440, %419
  %451 = phi i64 [ 0, %419 ], [ %442, %440 ]
  %452 = phi i8* [ %427, %419 ], [ %441, %440 ]
  %453 = and i64 %412, 7
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %463, label %455

455:                                              ; preds = %450
  %456 = getelementptr inbounds i8, i8* %243, i64 %451
  %457 = load i8, i8* %456, align 1, !alias.scope !765, !noalias !766
  %458 = load i8, i8* %452, align 1, !noalias !770
  %459 = icmp eq i8 %457, %458
  br i1 %459, label %460, label %463, !prof !15

460:                                              ; preds = %455
  %461 = add nuw nsw i64 %451, 1
  %462 = icmp eq i64 %453, 1
  br i1 %462, label %463, label %1691

463:                                              ; preds = %1736, %460, %455, %1691, %1697, %1700, %1706, %1709, %1715, %1718, %1724, %1727, %1733, %450, %445
  %464 = phi i64 [ %449, %445 ], [ %451, %450 ], [ %461, %460 ], [ %451, %455 ], [ %461, %1691 ], [ %1698, %1697 ], [ %1698, %1700 ], [ %1707, %1706 ], [ %1707, %1709 ], [ %1716, %1715 ], [ %1716, %1718 ], [ %1725, %1724 ], [ %1725, %1727 ], [ %1734, %1733 ], [ %1743, %1736 ]
  %465 = load i32, i32* %81, align 4, !noalias !770
  %466 = zext i32 %465 to i64
  %467 = add i64 %464, %466
  %468 = icmp ule i64 %467, %412
  %469 = icmp eq i64 %464, 0
  %470 = or i1 %469, %468
  br i1 %470, label %501, label %471

471:                                              ; preds = %463
  %472 = sub i64 %412, %464
  %473 = shl i64 %472, 2
  %474 = load i64, i64* %82, align 8, !noalias !770
  %475 = mul i64 %472, 6
  %476 = lshr i64 %474, %475
  %477 = and i64 %476, 63
  %478 = add i64 %477, %473
  %479 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %417, i64 0, i32 0, i64 %412
  %480 = load i8, i8* %479, align 1, !noalias !770
  %481 = zext i8 %480 to i64
  %482 = shl i64 %478, %481
  %483 = add i64 %393, %416
  %484 = add i64 %483, %482
  %485 = icmp ugt i64 %484, %118
  br i1 %485, label %501, label %486

486:                                              ; preds = %471
  %487 = mul i64 %464, 135
  %488 = add i64 %487, 1920
  %489 = trunc i64 %484 to i32
  %490 = tail call i32 @llvm.ctlz.i32(i32 %489, i1 true) #4, !range !18
  %491 = xor i32 %490, 31
  %492 = mul nuw nsw i32 %491, 30
  %493 = zext i32 %492 to i64
  %494 = sub i64 %488, %493
  %495 = icmp ult i64 %494, %402
  br i1 %495, label %501, label %496

496:                                              ; preds = %486
  %497 = zext i8 %409 to i32
  %498 = trunc i64 %464 to i32
  %499 = sub nsw i32 %497, %498
  %500 = add i64 %401, 1
  store i64 %500, i64* %383, align 8, !noalias !770
  br label %501

501:                                              ; preds = %496, %486, %471, %463, %411, %394
  %502 = phi i32 [ %395, %394 ], [ %395, %411 ], [ %395, %463 ], [ %395, %471 ], [ %395, %486 ], [ %499, %496 ]
  %503 = phi i64 [ %396, %394 ], [ %396, %411 ], [ %396, %463 ], [ %396, %471 ], [ %396, %486 ], [ %494, %496 ]
  %504 = phi i64 [ %397, %394 ], [ %397, %411 ], [ %397, %463 ], [ %397, %471 ], [ %397, %486 ], [ %484, %496 ]
  %505 = phi i64 [ %398, %394 ], [ %398, %411 ], [ %398, %463 ], [ %398, %471 ], [ %398, %486 ], [ %464, %496 ]
  %506 = phi i64 [ %399, %394 ], [ %399, %411 ], [ %399, %463 ], [ %399, %471 ], [ %399, %486 ], [ %494, %496 ]
  %507 = phi i64 [ %400, %394 ], [ %400, %411 ], [ %400, %463 ], [ %400, %471 ], [ %400, %486 ], [ %464, %496 ]
  %508 = phi i64 [ %401, %394 ], [ %401, %411 ], [ %401, %463 ], [ %401, %471 ], [ %401, %486 ], [ %500, %496 ]
  %509 = phi i64 [ %402, %394 ], [ %402, %411 ], [ %402, %463 ], [ %402, %471 ], [ %402, %486 ], [ %494, %496 ]
  %510 = add nuw nsw i64 %405, 1
  %511 = add nuw nsw i64 %404, 1
  %512 = icmp eq i64 %510, 2
  br i1 %512, label %513, label %394

513:                                              ; preds = %501, %381, %366
  %514 = phi i32 [ 0, %381 ], [ 0, %366 ], [ %502, %501 ]
  %515 = phi i64 [ %367, %381 ], [ %367, %366 ], [ %503, %501 ]
  %516 = phi i64 [ %368, %381 ], [ %368, %366 ], [ %504, %501 ]
  %517 = phi i64 [ %369, %381 ], [ %369, %366 ], [ %505, %501 ]
  %518 = phi i64 [ 2020, %381 ], [ %371, %366 ], [ %506, %501 ]
  %519 = phi i64 [ %370, %381 ], [ %370, %366 ], [ %507, %501 ]
  %520 = icmp ult i64 %108, 32
  br i1 %520, label %647, label %521

521:                                              ; preds = %513
  %522 = load i64, i64* %84, align 8, !alias.scope !771, !noalias !774
  %523 = icmp ugt i64 %522, %109
  br i1 %523, label %641, label %524

524:                                              ; preds = %521
  %525 = lshr i64 %108, 3
  %526 = icmp eq i64 %525, 0
  %527 = and i64 %108, 7
  %528 = icmp eq i64 %527, 0
  %529 = load i32, i32* %86, align 8, !alias.scope !771, !noalias !774
  %530 = load i32, i32* %88, align 4, !alias.scope !771, !noalias !774
  %531 = load i32, i32* %90, align 8, !alias.scope !771, !noalias !774
  %532 = icmp eq i64 %527, 1
  %533 = icmp eq i64 %527, 2
  %534 = icmp eq i64 %527, 3
  %535 = icmp eq i64 %527, 4
  %536 = icmp eq i64 %527, 5
  %537 = icmp eq i64 %527, 6
  br label %538

538:                                              ; preds = %631, %524
  %539 = phi i32 [ %514, %524 ], [ %632, %631 ]
  %540 = phi i64 [ %515, %524 ], [ %633, %631 ]
  %541 = phi i64 [ %516, %524 ], [ %634, %631 ]
  %542 = phi i64 [ %517, %524 ], [ %635, %631 ]
  %543 = phi i64 [ %518, %524 ], [ %636, %631 ]
  %544 = phi i64 [ %519, %524 ], [ %637, %631 ]
  %545 = phi i32 [ %529, %524 ], [ %562, %631 ]
  %546 = phi i64 [ %522, %524 ], [ %638, %631 ]
  %547 = and i32 %545, 1073741823
  %548 = and i64 %546, %3
  %549 = getelementptr inbounds i8, i8* %2, i64 %548
  %550 = load i8, i8* %549, align 1, !alias.scope !777, !noalias !778
  %551 = add i64 %546, 32
  %552 = and i64 %551, %3
  %553 = getelementptr inbounds i8, i8* %2, i64 %552
  %554 = load i8, i8* %553, align 1, !alias.scope !777, !noalias !778
  %555 = mul i32 %545, %530
  %556 = zext i8 %554 to i32
  %557 = zext i8 %550 to i32
  %558 = add nuw nsw i32 %557, 1
  %559 = mul i32 %558, %531
  %560 = add i32 %555, 1
  %561 = add i32 %560, %556
  %562 = sub i32 %561, %559
  %563 = icmp ult i32 %547, 16777216
  br i1 %563, label %564, label %631

564:                                              ; preds = %538
  %565 = load i32*, i32** %92, align 8, !alias.scope !771, !noalias !774
  %566 = zext i32 %547 to i64
  %567 = getelementptr inbounds i32, i32* %565, i64 %566
  %568 = load i32, i32* %567, align 4, !noalias !779
  %569 = zext i32 %568 to i64
  %570 = trunc i64 %546 to i32
  store i32 %570, i32* %567, align 4, !noalias !779
  %571 = icmp eq i64 %546, %109
  %572 = icmp ne i32 %568, -1
  %573 = and i1 %571, %572
  br i1 %573, label %574, label %631

574:                                              ; preds = %564
  %575 = sub i32 %373, %568
  %576 = zext i32 %575 to i64
  %577 = icmp ult i64 %114, %576
  br i1 %577, label %631, label %578

578:                                              ; preds = %574
  %579 = and i64 %569, %3
  %580 = getelementptr inbounds i8, i8* %2, i64 %579
  br i1 %526, label %601, label %581, !prof !13

581:                                              ; preds = %578, %591
  %582 = phi i64 [ %594, %591 ], [ %525, %578 ]
  %583 = phi i8* [ %592, %591 ], [ %243, %578 ]
  %584 = phi i64 [ %593, %591 ], [ 0, %578 ]
  %585 = bitcast i8* %583 to i64*
  %586 = load i64, i64* %585, align 8, !alias.scope !777, !noalias !778
  %587 = getelementptr inbounds i8, i8* %580, i64 %584
  %588 = bitcast i8* %587 to i64*
  %589 = load i64, i64* %588, align 8, !alias.scope !777, !noalias !778
  %590 = icmp eq i64 %586, %589
  br i1 %590, label %591, label %596, !prof !13

591:                                              ; preds = %581
  %592 = getelementptr inbounds i8, i8* %583, i64 8
  %593 = add nuw i64 %584, 8
  %594 = add nsw i64 %582, -1
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %601, label %581, !prof !13

596:                                              ; preds = %581
  %597 = xor i64 %589, %586
  %598 = tail call i64 @llvm.cttz.i64(i64 %597, i1 true) #4, !range !14
  %599 = lshr i64 %598, 3
  %600 = or i64 %599, %584
  br label %611

601:                                              ; preds = %591, %578
  %602 = phi i64 [ 0, %578 ], [ %593, %591 ]
  %603 = phi i8* [ %243, %578 ], [ %592, %591 ]
  br i1 %528, label %611, label %604

604:                                              ; preds = %601
  %605 = getelementptr inbounds i8, i8* %580, i64 %602
  %606 = load i8, i8* %605, align 1, !alias.scope !777, !noalias !778
  %607 = load i8, i8* %603, align 1, !alias.scope !777, !noalias !778
  %608 = icmp eq i8 %606, %607
  br i1 %608, label %609, label %611, !prof !15

609:                                              ; preds = %604
  %610 = add i64 %602, 1
  br i1 %532, label %611, label %1744

611:                                              ; preds = %1784, %609, %604, %1744, %1750, %1752, %1758, %1760, %1766, %1768, %1774, %1776, %1782, %601, %596
  %612 = phi i64 [ %600, %596 ], [ %602, %601 ], [ %610, %609 ], [ %602, %604 ], [ %610, %1744 ], [ %1751, %1750 ], [ %1751, %1752 ], [ %1759, %1758 ], [ %1759, %1760 ], [ %1767, %1766 ], [ %1767, %1768 ], [ %1775, %1774 ], [ %1775, %1776 ], [ %1783, %1782 ], [ %1791, %1784 ]
  %613 = icmp ugt i64 %612, 3
  %614 = icmp ugt i64 %612, %544
  %615 = and i1 %613, %614
  br i1 %615, label %616, label %631

616:                                              ; preds = %611
  %617 = mul i64 %612, 135
  %618 = tail call i32 @llvm.ctlz.i32(i32 %575, i1 true) #4, !range !18
  %619 = xor i32 %618, 31
  %620 = mul nsw i32 %619, -30
  %621 = add nsw i32 %620, 1920
  %622 = zext i32 %621 to i64
  %623 = add i64 %617, %622
  %624 = icmp ugt i64 %623, %543
  %625 = select i1 %624, i32 0, i32 %539
  %626 = select i1 %624, i64 %623, i64 %540
  %627 = select i1 %624, i64 %576, i64 %541
  %628 = select i1 %624, i64 %612, i64 %542
  %629 = select i1 %624, i64 %623, i64 %543
  %630 = select i1 %624, i64 %612, i64 %544
  br label %631

631:                                              ; preds = %616, %611, %574, %564, %538
  %632 = phi i32 [ %539, %574 ], [ %539, %611 ], [ %539, %564 ], [ %539, %538 ], [ %625, %616 ]
  %633 = phi i64 [ %540, %574 ], [ %540, %611 ], [ %540, %564 ], [ %540, %538 ], [ %626, %616 ]
  %634 = phi i64 [ %541, %574 ], [ %541, %611 ], [ %541, %564 ], [ %541, %538 ], [ %627, %616 ]
  %635 = phi i64 [ %542, %574 ], [ %542, %611 ], [ %542, %564 ], [ %542, %538 ], [ %628, %616 ]
  %636 = phi i64 [ %543, %574 ], [ %543, %611 ], [ %543, %564 ], [ %543, %538 ], [ %629, %616 ]
  %637 = phi i64 [ %544, %574 ], [ %544, %611 ], [ %544, %564 ], [ %544, %538 ], [ %630, %616 ]
  %638 = add i64 %546, 1
  %639 = icmp ugt i64 %638, %109
  br i1 %639, label %640, label %538

640:                                              ; preds = %631
  store i32 %562, i32* %86, align 8, !alias.scope !771, !noalias !774
  br label %641

641:                                              ; preds = %640, %521
  %642 = phi i32 [ %514, %521 ], [ %632, %640 ]
  %643 = phi i64 [ %515, %521 ], [ %633, %640 ]
  %644 = phi i64 [ %516, %521 ], [ %634, %640 ]
  %645 = phi i64 [ %517, %521 ], [ %635, %640 ]
  %646 = add nuw i64 %109, 1
  store i64 %646, i64* %84, align 8, !alias.scope !771, !noalias !774
  br label %647

647:                                              ; preds = %513, %641
  %648 = phi i32 [ %514, %513 ], [ %642, %641 ]
  %649 = phi i64 [ %515, %513 ], [ %643, %641 ]
  %650 = phi i64 [ %516, %513 ], [ %644, %641 ]
  %651 = phi i64 [ %517, %513 ], [ %645, %641 ]
  %652 = icmp ugt i64 %649, 2020
  br i1 %652, label %653, label %1491

653:                                              ; preds = %647, %1215
  %654 = phi i32 [ %1207, %1215 ], [ %648, %647 ]
  %655 = phi i64 [ %1208, %1215 ], [ %649, %647 ]
  %656 = phi i64 [ %1209, %1215 ], [ %650, %647 ]
  %657 = phi i64 [ %1210, %1215 ], [ %651, %647 ]
  %658 = phi i64 [ %1216, %1215 ], [ %112, %647 ]
  %659 = phi i64 [ %662, %1215 ], [ %108, %647 ]
  %660 = phi i32 [ %1217, %1215 ], [ 0, %647 ]
  %661 = phi i64 [ %671, %1215 ], [ %109, %647 ]
  %662 = add i64 %659, -1
  %663 = load i32, i32* %24, align 4
  %664 = icmp slt i32 %663, 5
  br i1 %664, label %665, label %669

665:                                              ; preds = %653
  %666 = add i64 %657, -1
  %667 = icmp ult i64 %666, %662
  %668 = select i1 %667, i64 %666, i64 %662
  br label %669

669:                                              ; preds = %653, %665
  %670 = phi i64 [ %668, %665 ], [ 0, %653 ]
  %671 = add i64 %661, 1
  %672 = icmp ult i64 %671, %16
  %673 = select i1 %672, i64 %671, i64 %16
  %674 = add i64 %671, %18
  %675 = icmp ult i64 %674, %16
  %676 = select i1 %675, i64 %674, i64 %16
  %677 = load i64, i64* %61, align 8
  %678 = load i16*, i16** %63, align 8, !alias.scope !780, !noalias !785
  %679 = load i32*, i32** %65, align 8, !alias.scope !780, !noalias !785
  %680 = and i64 %671, %3
  %681 = load i32, i32* %30, align 8, !alias.scope !780, !noalias !785
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %795, label %683

683:                                              ; preds = %669
  %684 = getelementptr inbounds i8, i8* %2, i64 %680
  %685 = lshr i64 %662, 3
  %686 = icmp eq i64 %685, 0
  %687 = and i64 %662, 7
  %688 = icmp eq i64 %687, 0
  %689 = sext i32 %681 to i64
  %690 = icmp eq i64 %687, 1
  %691 = icmp eq i64 %687, 2
  %692 = icmp eq i64 %687, 3
  %693 = icmp eq i64 %687, 4
  %694 = icmp eq i64 %687, 5
  %695 = icmp eq i64 %687, 6
  br label %696

696:                                              ; preds = %786, %683
  %697 = phi i64 [ 2020, %683 ], [ %787, %786 ]
  %698 = phi i64 [ 0, %683 ], [ %788, %786 ]
  %699 = phi i64 [ 0, %683 ], [ %789, %786 ]
  %700 = phi i64 [ 0, %683 ], [ %790, %786 ]
  %701 = phi i64 [ 0, %683 ], [ %793, %786 ]
  %702 = phi i64 [ %670, %683 ], [ %792, %786 ]
  %703 = phi i64 [ 2020, %683 ], [ %791, %786 ]
  %704 = getelementptr inbounds i32, i32* %6, i64 %701
  %705 = load i32, i32* %704, align 4, !alias.scope !792, !noalias !793
  %706 = sext i32 %705 to i64
  %707 = sub i64 %671, %706
  %708 = icmp uge i64 %707, %671
  %709 = icmp ult i64 %673, %706
  %710 = or i1 %709, %708
  br i1 %710, label %786, label %711, !prof !159

711:                                              ; preds = %696
  %712 = and i64 %707, %3
  %713 = add i64 %702, %680
  %714 = icmp ugt i64 %713, %3
  br i1 %714, label %786, label %715

715:                                              ; preds = %711
  %716 = add i64 %712, %702
  %717 = icmp ugt i64 %716, %3
  br i1 %717, label %786, label %718

718:                                              ; preds = %715
  %719 = getelementptr inbounds i8, i8* %2, i64 %713
  %720 = load i8, i8* %719, align 1, !alias.scope !794, !noalias !795
  %721 = getelementptr inbounds i8, i8* %2, i64 %716
  %722 = load i8, i8* %721, align 1, !alias.scope !794, !noalias !795
  %723 = icmp eq i8 %720, %722
  br i1 %723, label %724, label %786

724:                                              ; preds = %718
  %725 = getelementptr inbounds i8, i8* %2, i64 %712
  br i1 %686, label %746, label %726, !prof !13

726:                                              ; preds = %724, %736
  %727 = phi i64 [ %739, %736 ], [ %685, %724 ]
  %728 = phi i8* [ %737, %736 ], [ %684, %724 ]
  %729 = phi i64 [ %738, %736 ], [ 0, %724 ]
  %730 = bitcast i8* %728 to i64*
  %731 = load i64, i64* %730, align 8, !alias.scope !794, !noalias !795
  %732 = getelementptr inbounds i8, i8* %725, i64 %729
  %733 = bitcast i8* %732 to i64*
  %734 = load i64, i64* %733, align 8, !alias.scope !794, !noalias !795
  %735 = icmp eq i64 %731, %734
  br i1 %735, label %736, label %741, !prof !13

736:                                              ; preds = %726
  %737 = getelementptr inbounds i8, i8* %728, i64 8
  %738 = add nuw i64 %729, 8
  %739 = add nsw i64 %727, -1
  %740 = icmp eq i64 %739, 0
  br i1 %740, label %746, label %726, !prof !13

741:                                              ; preds = %726
  %742 = xor i64 %734, %731
  %743 = tail call i64 @llvm.cttz.i64(i64 %742, i1 true) #4, !range !14
  %744 = lshr i64 %743, 3
  %745 = or i64 %744, %729
  br label %756

746:                                              ; preds = %736, %724
  %747 = phi i64 [ 0, %724 ], [ %738, %736 ]
  %748 = phi i8* [ %684, %724 ], [ %737, %736 ]
  br i1 %688, label %756, label %749

749:                                              ; preds = %746
  %750 = getelementptr inbounds i8, i8* %725, i64 %747
  %751 = load i8, i8* %750, align 1, !alias.scope !794, !noalias !795
  %752 = load i8, i8* %748, align 1, !alias.scope !794, !noalias !795
  %753 = icmp eq i8 %751, %752
  br i1 %753, label %754, label %756, !prof !15

754:                                              ; preds = %749
  %755 = add i64 %747, 1
  br i1 %690, label %756, label %1792

756:                                              ; preds = %1832, %754, %749, %1792, %1798, %1800, %1806, %1808, %1814, %1816, %1822, %1824, %1830, %746, %741
  %757 = phi i64 [ %745, %741 ], [ %747, %746 ], [ %755, %754 ], [ %747, %749 ], [ %755, %1792 ], [ %1799, %1798 ], [ %1799, %1800 ], [ %1807, %1806 ], [ %1807, %1808 ], [ %1815, %1814 ], [ %1815, %1816 ], [ %1823, %1822 ], [ %1823, %1824 ], [ %1831, %1830 ], [ %1839, %1832 ]
  %758 = icmp ugt i64 %757, 2
  br i1 %758, label %763, label %759

759:                                              ; preds = %756
  %760 = icmp eq i64 %757, 2
  %761 = icmp ult i64 %701, 2
  %762 = and i1 %761, %760
  br i1 %762, label %763, label %786

763:                                              ; preds = %759, %756
  %764 = mul i64 %757, 135
  %765 = add i64 %764, 1935
  %766 = icmp ult i64 %703, %765
  br i1 %766, label %767, label %786

767:                                              ; preds = %763
  %768 = icmp eq i64 %701, 0
  br i1 %768, label %777, label %769

769:                                              ; preds = %767
  %770 = trunc i64 %701 to i32
  %771 = and i32 %770, 14
  %772 = lshr i32 117264, %771
  %773 = and i32 %772, 14
  %774 = add nuw nsw i32 %773, 39
  %775 = zext i32 %774 to i64
  %776 = sub i64 %765, %775
  br label %777

777:                                              ; preds = %769, %767
  %778 = phi i64 [ %776, %769 ], [ %765, %767 ]
  %779 = icmp ult i64 %703, %778
  %780 = select i1 %779, i64 %778, i64 %697
  %781 = select i1 %779, i64 %706, i64 %698
  %782 = select i1 %779, i64 %757, i64 %699
  %783 = select i1 %779, i64 %757, i64 %700
  %784 = select i1 %779, i64 %778, i64 %703
  %785 = select i1 %779, i64 %757, i64 %702
  br label %786

786:                                              ; preds = %777, %763, %759, %718, %715, %711, %696
  %787 = phi i64 [ %697, %696 ], [ %697, %711 ], [ %697, %715 ], [ %697, %763 ], [ %697, %759 ], [ %697, %718 ], [ %780, %777 ]
  %788 = phi i64 [ %698, %696 ], [ %698, %711 ], [ %698, %715 ], [ %698, %763 ], [ %698, %759 ], [ %698, %718 ], [ %781, %777 ]
  %789 = phi i64 [ %699, %696 ], [ %699, %711 ], [ %699, %715 ], [ %699, %763 ], [ %699, %759 ], [ %699, %718 ], [ %782, %777 ]
  %790 = phi i64 [ %700, %696 ], [ %700, %711 ], [ %700, %715 ], [ %700, %763 ], [ %700, %759 ], [ %700, %718 ], [ %783, %777 ]
  %791 = phi i64 [ %703, %696 ], [ %703, %711 ], [ %703, %715 ], [ %703, %763 ], [ %703, %759 ], [ %703, %718 ], [ %784, %777 ]
  %792 = phi i64 [ %702, %696 ], [ %702, %711 ], [ %702, %715 ], [ %702, %763 ], [ %702, %759 ], [ %702, %718 ], [ %785, %777 ]
  %793 = add nuw i64 %701, 1
  %794 = icmp ult i64 %793, %689
  br i1 %794, label %696, label %795

795:                                              ; preds = %786, %669
  %796 = phi i64 [ 2020, %669 ], [ %787, %786 ]
  %797 = phi i64 [ 0, %669 ], [ %788, %786 ]
  %798 = phi i64 [ 0, %669 ], [ %789, %786 ]
  %799 = phi i64 [ 0, %669 ], [ %790, %786 ]
  %800 = phi i64 [ 2020, %669 ], [ %791, %786 ]
  %801 = phi i64 [ %670, %669 ], [ %792, %786 ]
  %802 = getelementptr inbounds i8, i8* %2, i64 %680
  %803 = load i64, i64* %67, align 8, !alias.scope !780, !noalias !785
  %804 = load i32, i32* %69, align 8, !alias.scope !780, !noalias !785
  %805 = bitcast i8* %802 to i64*
  %806 = load i64, i64* %805, align 8, !alias.scope !796, !noalias !795
  %807 = and i64 %806, %803
  %808 = mul i64 %807, 2297779722762296275
  %809 = zext i32 %804 to i64
  %810 = lshr i64 %808, %809
  %811 = trunc i64 %810 to i32
  %812 = load i32, i32* %71, align 4, !alias.scope !780, !noalias !785
  %813 = shl i32 %811, %812
  %814 = zext i32 %813 to i64
  %815 = getelementptr inbounds i32, i32* %679, i64 %814
  %816 = and i64 %810, 4294967295
  %817 = getelementptr inbounds i16, i16* %678, i64 %816
  %818 = load i16, i16* %817, align 2, !noalias !799
  %819 = zext i16 %818 to i64
  %820 = load i64, i64* %73, align 8, !alias.scope !780, !noalias !785
  %821 = tail call i64 @llvm.usub.sat.i64(i64 %819, i64 %820) #4
  %822 = icmp ult i64 %821, %819
  br i1 %822, label %825, label %823

823:                                              ; preds = %795
  %824 = load i32, i32* %75, align 8, !alias.scope !780, !noalias !785
  br label %925

825:                                              ; preds = %795
  %826 = lshr i64 %662, 3
  %827 = icmp eq i64 %826, 0
  %828 = and i64 %662, 7
  %829 = icmp eq i64 %828, 0
  %830 = load i32, i32* %75, align 8, !alias.scope !780, !noalias !785
  %831 = zext i32 %830 to i64
  %832 = icmp eq i64 %828, 1
  %833 = icmp eq i64 %828, 2
  %834 = icmp eq i64 %828, 3
  %835 = icmp eq i64 %828, 4
  %836 = icmp eq i64 %828, 5
  %837 = icmp eq i64 %828, 6
  br label %838

838:                                              ; preds = %917, %825
  %839 = phi i64 [ %796, %825 ], [ %918, %917 ]
  %840 = phi i64 [ %797, %825 ], [ %919, %917 ]
  %841 = phi i64 [ %798, %825 ], [ %920, %917 ]
  %842 = phi i64 [ %799, %825 ], [ %921, %917 ]
  %843 = phi i64 [ %819, %825 ], [ %846, %917 ]
  %844 = phi i64 [ %801, %825 ], [ %923, %917 ]
  %845 = phi i64 [ %800, %825 ], [ %922, %917 ]
  %846 = add i64 %843, -1
  %847 = and i64 %846, %831
  %848 = getelementptr inbounds i32, i32* %815, i64 %847
  %849 = load i32, i32* %848, align 4, !noalias !799
  %850 = zext i32 %849 to i64
  %851 = sub i64 %671, %850
  %852 = icmp ugt i64 %851, %673
  br i1 %852, label %925, label %853, !prof !13

853:                                              ; preds = %838
  %854 = and i64 %850, %3
  %855 = add i64 %844, %680
  %856 = icmp ugt i64 %855, %3
  br i1 %856, label %917, label %857

857:                                              ; preds = %853
  %858 = add i64 %854, %844
  %859 = icmp ugt i64 %858, %3
  br i1 %859, label %917, label %860

860:                                              ; preds = %857
  %861 = getelementptr inbounds i8, i8* %2, i64 %855
  %862 = load i8, i8* %861, align 1, !alias.scope !794, !noalias !795
  %863 = getelementptr inbounds i8, i8* %2, i64 %858
  %864 = load i8, i8* %863, align 1, !alias.scope !794, !noalias !795
  %865 = icmp eq i8 %862, %864
  br i1 %865, label %866, label %917

866:                                              ; preds = %860
  %867 = getelementptr inbounds i8, i8* %2, i64 %854
  br i1 %827, label %888, label %868, !prof !13

868:                                              ; preds = %866, %878
  %869 = phi i64 [ %881, %878 ], [ %826, %866 ]
  %870 = phi i8* [ %879, %878 ], [ %802, %866 ]
  %871 = phi i64 [ %880, %878 ], [ 0, %866 ]
  %872 = bitcast i8* %870 to i64*
  %873 = load i64, i64* %872, align 8, !alias.scope !794, !noalias !795
  %874 = getelementptr inbounds i8, i8* %867, i64 %871
  %875 = bitcast i8* %874 to i64*
  %876 = load i64, i64* %875, align 8, !alias.scope !794, !noalias !795
  %877 = icmp eq i64 %873, %876
  br i1 %877, label %878, label %883, !prof !13

878:                                              ; preds = %868
  %879 = getelementptr inbounds i8, i8* %870, i64 8
  %880 = add nuw i64 %871, 8
  %881 = add nsw i64 %869, -1
  %882 = icmp eq i64 %881, 0
  br i1 %882, label %888, label %868, !prof !13

883:                                              ; preds = %868
  %884 = xor i64 %876, %873
  %885 = tail call i64 @llvm.cttz.i64(i64 %884, i1 true) #4, !range !14
  %886 = lshr i64 %885, 3
  %887 = or i64 %886, %871
  br label %898

888:                                              ; preds = %878, %866
  %889 = phi i64 [ 0, %866 ], [ %880, %878 ]
  %890 = phi i8* [ %802, %866 ], [ %879, %878 ]
  br i1 %829, label %898, label %891

891:                                              ; preds = %888
  %892 = getelementptr inbounds i8, i8* %867, i64 %889
  %893 = load i8, i8* %892, align 1, !alias.scope !794, !noalias !795
  %894 = load i8, i8* %890, align 1, !alias.scope !794, !noalias !795
  %895 = icmp eq i8 %893, %894
  br i1 %895, label %896, label %898, !prof !15

896:                                              ; preds = %891
  %897 = add i64 %889, 1
  br i1 %832, label %898, label %1840

898:                                              ; preds = %1880, %896, %891, %1840, %1846, %1848, %1854, %1856, %1862, %1864, %1870, %1872, %1878, %888, %883
  %899 = phi i64 [ %887, %883 ], [ %889, %888 ], [ %897, %896 ], [ %889, %891 ], [ %897, %1840 ], [ %1847, %1846 ], [ %1847, %1848 ], [ %1855, %1854 ], [ %1855, %1856 ], [ %1863, %1862 ], [ %1863, %1864 ], [ %1871, %1870 ], [ %1871, %1872 ], [ %1879, %1878 ], [ %1887, %1880 ]
  %900 = icmp ugt i64 %899, 3
  br i1 %900, label %901, label %917

901:                                              ; preds = %898
  %902 = mul i64 %899, 135
  %903 = trunc i64 %851 to i32
  %904 = tail call i32 @llvm.ctlz.i32(i32 %903, i1 true) #4, !range !18
  %905 = xor i32 %904, 31
  %906 = mul nsw i32 %905, -30
  %907 = add nsw i32 %906, 1920
  %908 = zext i32 %907 to i64
  %909 = add i64 %902, %908
  %910 = icmp ult i64 %845, %909
  %911 = select i1 %910, i64 %909, i64 %839
  %912 = select i1 %910, i64 %851, i64 %840
  %913 = select i1 %910, i64 %899, i64 %841
  %914 = select i1 %910, i64 %899, i64 %842
  %915 = select i1 %910, i64 %909, i64 %845
  %916 = select i1 %910, i64 %899, i64 %844
  br label %917

917:                                              ; preds = %901, %898, %860, %857, %853
  %918 = phi i64 [ %839, %853 ], [ %839, %857 ], [ %839, %898 ], [ %839, %860 ], [ %911, %901 ]
  %919 = phi i64 [ %840, %853 ], [ %840, %857 ], [ %840, %898 ], [ %840, %860 ], [ %912, %901 ]
  %920 = phi i64 [ %841, %853 ], [ %841, %857 ], [ %841, %898 ], [ %841, %860 ], [ %913, %901 ]
  %921 = phi i64 [ %842, %853 ], [ %842, %857 ], [ %842, %898 ], [ %842, %860 ], [ %914, %901 ]
  %922 = phi i64 [ %845, %853 ], [ %845, %857 ], [ %845, %898 ], [ %845, %860 ], [ %915, %901 ]
  %923 = phi i64 [ %844, %853 ], [ %844, %857 ], [ %844, %898 ], [ %844, %860 ], [ %916, %901 ]
  %924 = icmp ugt i64 %846, %821
  br i1 %924, label %838, label %925

925:                                              ; preds = %917, %838, %823
  %926 = phi i64 [ %796, %823 ], [ %918, %917 ], [ %839, %838 ]
  %927 = phi i64 [ %797, %823 ], [ %919, %917 ], [ %840, %838 ]
  %928 = phi i64 [ %798, %823 ], [ %920, %917 ], [ %841, %838 ]
  %929 = phi i64 [ %799, %823 ], [ %921, %917 ], [ %842, %838 ]
  %930 = phi i64 [ %800, %823 ], [ %922, %917 ], [ %845, %838 ]
  %931 = phi i32 [ %824, %823 ], [ %830, %838 ], [ %830, %917 ]
  %932 = trunc i64 %671 to i32
  %933 = zext i16 %818 to i32
  %934 = and i32 %931, %933
  %935 = zext i32 %934 to i64
  %936 = getelementptr inbounds i32, i32* %815, i64 %935
  store i32 %932, i32* %936, align 4, !noalias !799
  %937 = load i16, i16* %817, align 2, !noalias !799
  %938 = add i16 %937, 1
  store i16 %938, i16* %817, align 2, !noalias !799
  %939 = icmp eq i64 %930, 2020
  br i1 %939, label %940, label %1072

940:                                              ; preds = %925
  %941 = load %struct.HasherCommon*, %struct.HasherCommon** %77, align 8, !alias.scope !780, !noalias !785
  %942 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %941, i64 0, i32 2
  %943 = load i64, i64* %942, align 8, !noalias !799
  %944 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %941, i64 0, i32 1
  %945 = load i64, i64* %944, align 8, !noalias !799
  %946 = lshr i64 %945, 7
  %947 = icmp ult i64 %943, %946
  br i1 %947, label %1072, label %948

948:                                              ; preds = %940
  %949 = mul i64 %806, 506832829
  %950 = lshr i64 %949, 17
  %951 = and i64 %950, 32766
  %952 = add i64 %676, 1
  br label %953

953:                                              ; preds = %1060, %948
  %954 = phi i32 [ 0, %948 ], [ %1061, %1060 ]
  %955 = phi i64 [ %926, %948 ], [ %1062, %1060 ]
  %956 = phi i64 [ %927, %948 ], [ %1063, %1060 ]
  %957 = phi i64 [ %928, %948 ], [ %1064, %1060 ]
  %958 = phi i64 [ 2020, %948 ], [ %1065, %1060 ]
  %959 = phi i64 [ %929, %948 ], [ %1066, %1060 ]
  %960 = phi i64 [ %943, %948 ], [ %1067, %1060 ]
  %961 = phi i64 [ 2020, %948 ], [ %1068, %1060 ]
  %962 = phi i64 [ %945, %948 ], [ %965, %1060 ]
  %963 = phi i64 [ %951, %948 ], [ %1070, %1060 ]
  %964 = phi i64 [ 0, %948 ], [ %1069, %1060 ]
  %965 = add i64 %962, 1
  store i64 %965, i64* %944, align 8, !noalias !799
  %966 = load i8*, i8** %78, align 8, !noalias !799
  %967 = getelementptr inbounds i8, i8* %966, i64 %963
  %968 = load i8, i8* %967, align 1, !noalias !799
  %969 = icmp eq i8 %968, 0
  br i1 %969, label %1060, label %970

970:                                              ; preds = %953
  %971 = zext i8 %968 to i64
  %972 = load i16*, i16** %79, align 8, !noalias !799
  %973 = getelementptr inbounds i16, i16* %972, i64 %963
  %974 = load i16, i16* %973, align 2, !noalias !799
  %975 = zext i16 %974 to i64
  %976 = load %struct.BrotliDictionary*, %struct.BrotliDictionary** %80, align 8, !noalias !799
  %977 = icmp ult i64 %662, %971
  br i1 %977, label %1060, label %978

978:                                              ; preds = %970
  %979 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %976, i64 0, i32 1, i64 %971
  %980 = load i32, i32* %979, align 4, !noalias !799
  %981 = zext i32 %980 to i64
  %982 = mul nuw nsw i64 %975, %971
  %983 = add nuw nsw i64 %982, %981
  %984 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %976, i64 0, i32 3
  %985 = load i8*, i8** %984, align 8, !noalias !799
  %986 = getelementptr inbounds i8, i8* %985, i64 %983
  %987 = lshr i64 %971, 3
  %988 = icmp eq i64 %987, 0
  br i1 %988, label %1009, label %989, !prof !13

989:                                              ; preds = %978, %999
  %990 = phi i64 [ %1002, %999 ], [ %987, %978 ]
  %991 = phi i8* [ %1000, %999 ], [ %986, %978 ]
  %992 = phi i64 [ %1001, %999 ], [ 0, %978 ]
  %993 = bitcast i8* %991 to i64*
  %994 = load i64, i64* %993, align 8, !noalias !799
  %995 = getelementptr inbounds i8, i8* %802, i64 %992
  %996 = bitcast i8* %995 to i64*
  %997 = load i64, i64* %996, align 8, !alias.scope !794, !noalias !795
  %998 = icmp eq i64 %994, %997
  br i1 %998, label %999, label %1004, !prof !13

999:                                              ; preds = %989
  %1000 = getelementptr inbounds i8, i8* %991, i64 8
  %1001 = add nuw nsw i64 %992, 8
  %1002 = add nsw i64 %990, -1
  %1003 = icmp eq i64 %1002, 0
  br i1 %1003, label %1009, label %989, !prof !13

1004:                                             ; preds = %989
  %1005 = xor i64 %997, %994
  %1006 = tail call i64 @llvm.cttz.i64(i64 %1005, i1 true) #4, !range !14
  %1007 = lshr i64 %1006, 3
  %1008 = or i64 %1007, %992
  br label %1022

1009:                                             ; preds = %999, %978
  %1010 = phi i64 [ 0, %978 ], [ %1001, %999 ]
  %1011 = phi i8* [ %986, %978 ], [ %1000, %999 ]
  %1012 = and i64 %971, 7
  %1013 = icmp eq i64 %1012, 0
  br i1 %1013, label %1022, label %1014

1014:                                             ; preds = %1009
  %1015 = getelementptr inbounds i8, i8* %802, i64 %1010
  %1016 = load i8, i8* %1015, align 1, !alias.scope !794, !noalias !795
  %1017 = load i8, i8* %1011, align 1, !noalias !799
  %1018 = icmp eq i8 %1016, %1017
  br i1 %1018, label %1019, label %1022, !prof !15

1019:                                             ; preds = %1014
  %1020 = add nuw nsw i64 %1010, 1
  %1021 = icmp eq i64 %1012, 1
  br i1 %1021, label %1022, label %1888

1022:                                             ; preds = %1933, %1019, %1014, %1888, %1894, %1897, %1903, %1906, %1912, %1915, %1921, %1924, %1930, %1009, %1004
  %1023 = phi i64 [ %1008, %1004 ], [ %1010, %1009 ], [ %1020, %1019 ], [ %1010, %1014 ], [ %1020, %1888 ], [ %1895, %1894 ], [ %1895, %1897 ], [ %1904, %1903 ], [ %1904, %1906 ], [ %1913, %1912 ], [ %1913, %1915 ], [ %1922, %1921 ], [ %1922, %1924 ], [ %1931, %1930 ], [ %1940, %1933 ]
  %1024 = load i32, i32* %81, align 4, !noalias !799
  %1025 = zext i32 %1024 to i64
  %1026 = add i64 %1023, %1025
  %1027 = icmp ule i64 %1026, %971
  %1028 = icmp eq i64 %1023, 0
  %1029 = or i1 %1028, %1027
  br i1 %1029, label %1060, label %1030

1030:                                             ; preds = %1022
  %1031 = sub i64 %971, %1023
  %1032 = shl i64 %1031, 2
  %1033 = load i64, i64* %82, align 8, !noalias !799
  %1034 = mul i64 %1031, 6
  %1035 = lshr i64 %1033, %1034
  %1036 = and i64 %1035, 63
  %1037 = add i64 %1036, %1032
  %1038 = getelementptr inbounds %struct.BrotliDictionary, %struct.BrotliDictionary* %976, i64 0, i32 0, i64 %971
  %1039 = load i8, i8* %1038, align 1, !noalias !799
  %1040 = zext i8 %1039 to i64
  %1041 = shl i64 %1037, %1040
  %1042 = add i64 %952, %975
  %1043 = add i64 %1042, %1041
  %1044 = icmp ugt i64 %1043, %677
  br i1 %1044, label %1060, label %1045

1045:                                             ; preds = %1030
  %1046 = mul i64 %1023, 135
  %1047 = add i64 %1046, 1920
  %1048 = trunc i64 %1043 to i32
  %1049 = tail call i32 @llvm.ctlz.i32(i32 %1048, i1 true) #4, !range !18
  %1050 = xor i32 %1049, 31
  %1051 = mul nuw nsw i32 %1050, 30
  %1052 = zext i32 %1051 to i64
  %1053 = sub i64 %1047, %1052
  %1054 = icmp ult i64 %1053, %961
  br i1 %1054, label %1060, label %1055

1055:                                             ; preds = %1045
  %1056 = zext i8 %968 to i32
  %1057 = trunc i64 %1023 to i32
  %1058 = sub nsw i32 %1056, %1057
  %1059 = add i64 %960, 1
  store i64 %1059, i64* %942, align 8, !noalias !799
  br label %1060

1060:                                             ; preds = %1055, %1045, %1030, %1022, %970, %953
  %1061 = phi i32 [ %954, %953 ], [ %954, %970 ], [ %954, %1022 ], [ %954, %1030 ], [ %954, %1045 ], [ %1058, %1055 ]
  %1062 = phi i64 [ %955, %953 ], [ %955, %970 ], [ %955, %1022 ], [ %955, %1030 ], [ %955, %1045 ], [ %1053, %1055 ]
  %1063 = phi i64 [ %956, %953 ], [ %956, %970 ], [ %956, %1022 ], [ %956, %1030 ], [ %956, %1045 ], [ %1043, %1055 ]
  %1064 = phi i64 [ %957, %953 ], [ %957, %970 ], [ %957, %1022 ], [ %957, %1030 ], [ %957, %1045 ], [ %1023, %1055 ]
  %1065 = phi i64 [ %958, %953 ], [ %958, %970 ], [ %958, %1022 ], [ %958, %1030 ], [ %958, %1045 ], [ %1053, %1055 ]
  %1066 = phi i64 [ %959, %953 ], [ %959, %970 ], [ %959, %1022 ], [ %959, %1030 ], [ %959, %1045 ], [ %1023, %1055 ]
  %1067 = phi i64 [ %960, %953 ], [ %960, %970 ], [ %960, %1022 ], [ %960, %1030 ], [ %960, %1045 ], [ %1059, %1055 ]
  %1068 = phi i64 [ %961, %953 ], [ %961, %970 ], [ %961, %1022 ], [ %961, %1030 ], [ %961, %1045 ], [ %1053, %1055 ]
  %1069 = add nuw nsw i64 %964, 1
  %1070 = add nuw nsw i64 %963, 1
  %1071 = icmp eq i64 %1069, 2
  br i1 %1071, label %1072, label %953

1072:                                             ; preds = %1060, %940, %925
  %1073 = phi i32 [ 0, %940 ], [ 0, %925 ], [ %1061, %1060 ]
  %1074 = phi i64 [ %926, %940 ], [ %926, %925 ], [ %1062, %1060 ]
  %1075 = phi i64 [ %927, %940 ], [ %927, %925 ], [ %1063, %1060 ]
  %1076 = phi i64 [ %928, %940 ], [ %928, %925 ], [ %1064, %1060 ]
  %1077 = phi i64 [ 2020, %940 ], [ %930, %925 ], [ %1065, %1060 ]
  %1078 = phi i64 [ %929, %940 ], [ %929, %925 ], [ %1066, %1060 ]
  %1079 = icmp ult i64 %662, 32
  br i1 %1079, label %1206, label %1080

1080:                                             ; preds = %1072
  %1081 = load i64, i64* %84, align 8, !alias.scope !800, !noalias !803
  %1082 = icmp ugt i64 %1081, %671
  br i1 %1082, label %1200, label %1083

1083:                                             ; preds = %1080
  %1084 = lshr i64 %662, 3
  %1085 = icmp eq i64 %1084, 0
  %1086 = and i64 %662, 7
  %1087 = icmp eq i64 %1086, 0
  %1088 = load i32, i32* %86, align 8, !alias.scope !800, !noalias !803
  %1089 = load i32, i32* %88, align 4, !alias.scope !800, !noalias !803
  %1090 = load i32, i32* %90, align 8, !alias.scope !800, !noalias !803
  %1091 = icmp eq i64 %1086, 1
  %1092 = icmp eq i64 %1086, 2
  %1093 = icmp eq i64 %1086, 3
  %1094 = icmp eq i64 %1086, 4
  %1095 = icmp eq i64 %1086, 5
  %1096 = icmp eq i64 %1086, 6
  br label %1097

1097:                                             ; preds = %1190, %1083
  %1098 = phi i32 [ %1073, %1083 ], [ %1191, %1190 ]
  %1099 = phi i64 [ %1074, %1083 ], [ %1192, %1190 ]
  %1100 = phi i64 [ %1075, %1083 ], [ %1193, %1190 ]
  %1101 = phi i64 [ %1076, %1083 ], [ %1194, %1190 ]
  %1102 = phi i64 [ %1077, %1083 ], [ %1195, %1190 ]
  %1103 = phi i64 [ %1078, %1083 ], [ %1196, %1190 ]
  %1104 = phi i32 [ %1088, %1083 ], [ %1121, %1190 ]
  %1105 = phi i64 [ %1081, %1083 ], [ %1197, %1190 ]
  %1106 = and i32 %1104, 1073741823
  %1107 = and i64 %1105, %3
  %1108 = getelementptr inbounds i8, i8* %2, i64 %1107
  %1109 = load i8, i8* %1108, align 1, !alias.scope !806, !noalias !807
  %1110 = add i64 %1105, 32
  %1111 = and i64 %1110, %3
  %1112 = getelementptr inbounds i8, i8* %2, i64 %1111
  %1113 = load i8, i8* %1112, align 1, !alias.scope !806, !noalias !807
  %1114 = mul i32 %1104, %1089
  %1115 = zext i8 %1113 to i32
  %1116 = zext i8 %1109 to i32
  %1117 = add nuw nsw i32 %1116, 1
  %1118 = mul i32 %1117, %1090
  %1119 = add i32 %1114, 1
  %1120 = add i32 %1119, %1115
  %1121 = sub i32 %1120, %1118
  %1122 = icmp ult i32 %1106, 16777216
  br i1 %1122, label %1123, label %1190

1123:                                             ; preds = %1097
  %1124 = load i32*, i32** %92, align 8, !alias.scope !800, !noalias !803
  %1125 = zext i32 %1106 to i64
  %1126 = getelementptr inbounds i32, i32* %1124, i64 %1125
  %1127 = load i32, i32* %1126, align 4, !noalias !808
  %1128 = zext i32 %1127 to i64
  %1129 = trunc i64 %1105 to i32
  store i32 %1129, i32* %1126, align 4, !noalias !808
  %1130 = icmp eq i64 %1105, %671
  %1131 = icmp ne i32 %1127, -1
  %1132 = and i1 %1130, %1131
  br i1 %1132, label %1133, label %1190

1133:                                             ; preds = %1123
  %1134 = sub i32 %932, %1127
  %1135 = zext i32 %1134 to i64
  %1136 = icmp ult i64 %673, %1135
  br i1 %1136, label %1190, label %1137

1137:                                             ; preds = %1133
  %1138 = and i64 %1128, %3
  %1139 = getelementptr inbounds i8, i8* %2, i64 %1138
  br i1 %1085, label %1160, label %1140, !prof !13

1140:                                             ; preds = %1137, %1150
  %1141 = phi i64 [ %1153, %1150 ], [ %1084, %1137 ]
  %1142 = phi i8* [ %1151, %1150 ], [ %802, %1137 ]
  %1143 = phi i64 [ %1152, %1150 ], [ 0, %1137 ]
  %1144 = bitcast i8* %1142 to i64*
  %1145 = load i64, i64* %1144, align 8, !alias.scope !806, !noalias !807
  %1146 = getelementptr inbounds i8, i8* %1139, i64 %1143
  %1147 = bitcast i8* %1146 to i64*
  %1148 = load i64, i64* %1147, align 8, !alias.scope !806, !noalias !807
  %1149 = icmp eq i64 %1145, %1148
  br i1 %1149, label %1150, label %1155, !prof !13

1150:                                             ; preds = %1140
  %1151 = getelementptr inbounds i8, i8* %1142, i64 8
  %1152 = add nuw i64 %1143, 8
  %1153 = add nsw i64 %1141, -1
  %1154 = icmp eq i64 %1153, 0
  br i1 %1154, label %1160, label %1140, !prof !13

1155:                                             ; preds = %1140
  %1156 = xor i64 %1148, %1145
  %1157 = tail call i64 @llvm.cttz.i64(i64 %1156, i1 true) #4, !range !14
  %1158 = lshr i64 %1157, 3
  %1159 = or i64 %1158, %1143
  br label %1170

1160:                                             ; preds = %1150, %1137
  %1161 = phi i64 [ 0, %1137 ], [ %1152, %1150 ]
  %1162 = phi i8* [ %802, %1137 ], [ %1151, %1150 ]
  br i1 %1087, label %1170, label %1163

1163:                                             ; preds = %1160
  %1164 = getelementptr inbounds i8, i8* %1139, i64 %1161
  %1165 = load i8, i8* %1164, align 1, !alias.scope !806, !noalias !807
  %1166 = load i8, i8* %1162, align 1, !alias.scope !806, !noalias !807
  %1167 = icmp eq i8 %1165, %1166
  br i1 %1167, label %1168, label %1170, !prof !15

1168:                                             ; preds = %1163
  %1169 = add i64 %1161, 1
  br i1 %1091, label %1170, label %1941

1170:                                             ; preds = %1981, %1168, %1163, %1941, %1947, %1949, %1955, %1957, %1963, %1965, %1971, %1973, %1979, %1160, %1155
  %1171 = phi i64 [ %1159, %1155 ], [ %1161, %1160 ], [ %1169, %1168 ], [ %1161, %1163 ], [ %1169, %1941 ], [ %1948, %1947 ], [ %1948, %1949 ], [ %1956, %1955 ], [ %1956, %1957 ], [ %1964, %1963 ], [ %1964, %1965 ], [ %1972, %1971 ], [ %1972, %1973 ], [ %1980, %1979 ], [ %1988, %1981 ]
  %1172 = icmp ugt i64 %1171, 3
  %1173 = icmp ugt i64 %1171, %1103
  %1174 = and i1 %1172, %1173
  br i1 %1174, label %1175, label %1190

1175:                                             ; preds = %1170
  %1176 = mul i64 %1171, 135
  %1177 = tail call i32 @llvm.ctlz.i32(i32 %1134, i1 true) #4, !range !18
  %1178 = xor i32 %1177, 31
  %1179 = mul nsw i32 %1178, -30
  %1180 = add nsw i32 %1179, 1920
  %1181 = zext i32 %1180 to i64
  %1182 = add i64 %1176, %1181
  %1183 = icmp ugt i64 %1182, %1102
  %1184 = select i1 %1183, i32 0, i32 %1098
  %1185 = select i1 %1183, i64 %1182, i64 %1099
  %1186 = select i1 %1183, i64 %1135, i64 %1100
  %1187 = select i1 %1183, i64 %1171, i64 %1101
  %1188 = select i1 %1183, i64 %1182, i64 %1102
  %1189 = select i1 %1183, i64 %1171, i64 %1103
  br label %1190

1190:                                             ; preds = %1175, %1170, %1133, %1123, %1097
  %1191 = phi i32 [ %1098, %1133 ], [ %1098, %1170 ], [ %1098, %1123 ], [ %1098, %1097 ], [ %1184, %1175 ]
  %1192 = phi i64 [ %1099, %1133 ], [ %1099, %1170 ], [ %1099, %1123 ], [ %1099, %1097 ], [ %1185, %1175 ]
  %1193 = phi i64 [ %1100, %1133 ], [ %1100, %1170 ], [ %1100, %1123 ], [ %1100, %1097 ], [ %1186, %1175 ]
  %1194 = phi i64 [ %1101, %1133 ], [ %1101, %1170 ], [ %1101, %1123 ], [ %1101, %1097 ], [ %1187, %1175 ]
  %1195 = phi i64 [ %1102, %1133 ], [ %1102, %1170 ], [ %1102, %1123 ], [ %1102, %1097 ], [ %1188, %1175 ]
  %1196 = phi i64 [ %1103, %1133 ], [ %1103, %1170 ], [ %1103, %1123 ], [ %1103, %1097 ], [ %1189, %1175 ]
  %1197 = add i64 %1105, 1
  %1198 = icmp ugt i64 %1197, %671
  br i1 %1198, label %1199, label %1097

1199:                                             ; preds = %1190
  store i32 %1121, i32* %86, align 8, !alias.scope !800, !noalias !803
  br label %1200

1200:                                             ; preds = %1199, %1080
  %1201 = phi i32 [ %1073, %1080 ], [ %1191, %1199 ]
  %1202 = phi i64 [ %1074, %1080 ], [ %1192, %1199 ]
  %1203 = phi i64 [ %1075, %1080 ], [ %1193, %1199 ]
  %1204 = phi i64 [ %1076, %1080 ], [ %1194, %1199 ]
  %1205 = add i64 %661, 2
  store i64 %1205, i64* %84, align 8, !alias.scope !800, !noalias !803
  br label %1206

1206:                                             ; preds = %1072, %1200
  %1207 = phi i32 [ %1073, %1072 ], [ %1201, %1200 ]
  %1208 = phi i64 [ %1074, %1072 ], [ %1202, %1200 ]
  %1209 = phi i64 [ %1075, %1072 ], [ %1203, %1200 ]
  %1210 = phi i64 [ %1076, %1072 ], [ %1204, %1200 ]
  %1211 = add i64 %655, 175
  %1212 = icmp ult i64 %1208, %1211
  br i1 %1212, label %1213, label %1215

1213:                                             ; preds = %1206
  %1214 = add i64 %661, %18
  br label %1222

1215:                                             ; preds = %1206
  %1216 = add i64 %658, 1
  %1217 = add nuw nsw i32 %660, 1
  %1218 = icmp ult i32 %1217, 4
  %1219 = add i64 %661, 9
  %1220 = icmp ult i64 %1219, %20
  %1221 = and i1 %1218, %1220
  br i1 %1221, label %653, label %1222

1222:                                             ; preds = %1215, %1213
  %1223 = phi i64 [ %1214, %1213 ], [ %674, %1215 ]
  %1224 = phi i32 [ %654, %1213 ], [ %1207, %1215 ]
  %1225 = phi i64 [ %656, %1213 ], [ %1209, %1215 ]
  %1226 = phi i64 [ %657, %1213 ], [ %1210, %1215 ]
  %1227 = phi i64 [ %658, %1213 ], [ %1216, %1215 ]
  %1228 = phi i64 [ %661, %1213 ], [ %671, %1215 ]
  %1229 = shl i64 %1226, 1
  %1230 = add i64 %1229, %27
  %1231 = add i64 %1230, %1228
  %1232 = icmp ult i64 %1223, %16
  %1233 = select i1 %1232, i64 %1223, i64 %16
  %1234 = icmp ugt i64 %1225, %1233
  br i1 %1234, label %1270, label %1235

1235:                                             ; preds = %1222
  %1236 = add i64 %1225, 3
  %1237 = load i32, i32* %6, align 4
  %1238 = sext i32 %1237 to i64
  %1239 = sub i64 %1236, %1238
  %1240 = load i32, i32* %94, align 4
  %1241 = sext i32 %1240 to i64
  %1242 = sub i64 %1236, %1241
  %1243 = icmp eq i64 %1225, %1238
  br i1 %1243, label %1297, label %1244

1244:                                             ; preds = %1235
  %1245 = icmp eq i64 %1225, %1241
  br i1 %1245, label %1272, label %1246

1246:                                             ; preds = %1244
  %1247 = icmp ult i64 %1239, 7
  br i1 %1247, label %1248, label %1254

1248:                                             ; preds = %1246
  %1249 = trunc i64 %1239 to i32
  %1250 = shl i32 %1249, 2
  %1251 = lshr i32 158663784, %1250
  %1252 = and i32 %1251, 15
  %1253 = zext i32 %1252 to i64
  br label %1272

1254:                                             ; preds = %1246
  %1255 = icmp ult i64 %1242, 7
  br i1 %1255, label %1256, label %1262

1256:                                             ; preds = %1254
  %1257 = trunc i64 %1242 to i32
  %1258 = shl i32 %1257, 2
  %1259 = lshr i32 266017486, %1258
  %1260 = and i32 %1259, 15
  %1261 = zext i32 %1260 to i64
  br label %1272

1262:                                             ; preds = %1254
  %1263 = load i32, i32* %95, align 4
  %1264 = sext i32 %1263 to i64
  %1265 = icmp eq i64 %1225, %1264
  br i1 %1265, label %1272, label %1266

1266:                                             ; preds = %1262
  %1267 = load i32, i32* %96, align 4
  %1268 = sext i32 %1267 to i64
  %1269 = icmp eq i64 %1225, %1268
  br i1 %1269, label %1272, label %1270

1270:                                             ; preds = %1266, %1222
  %1271 = add i64 %1225, 15
  br label %1272

1272:                                             ; preds = %1244, %1248, %1256, %1262, %1266, %1270
  %1273 = phi i64 [ %1271, %1270 ], [ 3, %1266 ], [ 2, %1262 ], [ 1, %1244 ], [ %1261, %1256 ], [ %1253, %1248 ]
  %1274 = icmp ule i64 %1225, %1233
  %1275 = icmp ne i64 %1273, 0
  %1276 = and i1 %1274, %1275
  br i1 %1276, label %1277, label %1297

1277:                                             ; preds = %1272
  %1278 = load i32, i32* %95, align 4
  store i32 %1278, i32* %96, align 4
  %1279 = load i32, i32* %94, align 4
  store i32 %1279, i32* %95, align 4
  %1280 = load i32, i32* %6, align 4
  store i32 %1280, i32* %94, align 4
  %1281 = trunc i64 %1225 to i32
  store i32 %1281, i32* %6, align 4
  %1282 = load i32, i32* %30, align 8, !alias.scope !809, !noalias !814
  %1283 = icmp sgt i32 %1282, 4
  br i1 %1283, label %1284, label %1297

1284:                                             ; preds = %1277
  %1285 = insertelement <4 x i32> undef, i32 %1281, i32 0
  %1286 = shufflevector <4 x i32> %1285, <4 x i32> undef, <4 x i32> zeroinitializer
  %1287 = add nsw <4 x i32> %1286, <i32 -1, i32 1, i32 -2, i32 2>
  store <4 x i32> %1287, <4 x i32>* %105, align 4, !alias.scope !817, !noalias !809
  %1288 = add nsw i32 %1281, -3
  store i32 %1288, i32* %98, align 4, !alias.scope !817, !noalias !809
  %1289 = add nsw i32 %1281, 3
  store i32 %1289, i32* %99, align 4, !alias.scope !817, !noalias !809
  %1290 = icmp sgt i32 %1282, 10
  br i1 %1290, label %1291, label %1297

1291:                                             ; preds = %1284
  %1292 = insertelement <4 x i32> undef, i32 %1280, i32 0
  %1293 = shufflevector <4 x i32> %1292, <4 x i32> undef, <4 x i32> zeroinitializer
  %1294 = add nsw <4 x i32> %1293, <i32 -1, i32 1, i32 -2, i32 2>
  store <4 x i32> %1294, <4 x i32>* %106, align 4, !alias.scope !817, !noalias !809
  %1295 = add nsw i32 %1280, -3
  store i32 %1295, i32* %101, align 4, !alias.scope !817, !noalias !809
  %1296 = add nsw i32 %1280, 3
  store i32 %1296, i32* %102, align 4, !alias.scope !817, !noalias !809
  br label %1297

1297:                                             ; preds = %1235, %1291, %1284, %1277, %1272
  %1298 = phi i64 [ %1273, %1272 ], [ %1273, %1277 ], [ %1273, %1284 ], [ %1273, %1291 ], [ 0, %1235 ]
  %1299 = getelementptr inbounds %struct.Command, %struct.Command* %110, i64 1
  %1300 = trunc i64 %1227 to i32
  %1301 = getelementptr inbounds %struct.Command, %struct.Command* %110, i64 0, i32 0
  store i32 %1300, i32* %1301, align 4
  %1302 = shl i32 %1224, 25
  %1303 = trunc i64 %1226 to i32
  %1304 = or i32 %1302, %1303
  %1305 = getelementptr inbounds %struct.Command, %struct.Command* %110, i64 0, i32 1
  store i32 %1304, i32* %1305, align 4
  %1306 = load i32, i32* %103, align 4
  %1307 = zext i32 %1306 to i64
  %1308 = load i32, i32* %104, align 8
  %1309 = zext i32 %1308 to i64
  %1310 = getelementptr inbounds %struct.Command, %struct.Command* %110, i64 0, i32 4
  %1311 = getelementptr inbounds %struct.Command, %struct.Command* %110, i64 0, i32 2
  %1312 = add nuw nsw i64 %1307, 16
  %1313 = icmp ugt i64 %1312, %1298
  br i1 %1313, label %1314, label %1316

1314:                                             ; preds = %1297
  %1315 = trunc i64 %1298 to i16
  store i16 %1315, i16* %1310, align 2
  br label %1346

1316:                                             ; preds = %1297
  %1317 = shl i64 4, %1309
  %1318 = add i64 %1298, -16
  %1319 = sub i64 %1318, %1307
  %1320 = add i64 %1319, %1317
  %1321 = trunc i64 %1320 to i32
  %1322 = tail call i32 @llvm.ctlz.i32(i32 %1321, i1 true) #4, !range !18
  %1323 = sub nsw i32 30, %1322
  %1324 = zext i32 %1323 to i64
  %1325 = shl nsw i32 -1, %1308
  %1326 = xor i32 %1325, 65535
  %1327 = zext i32 %1326 to i64
  %1328 = and i64 %1320, %1327
  %1329 = lshr i64 %1320, %1324
  %1330 = and i64 %1329, 1
  %1331 = or i64 %1330, 2
  %1332 = shl i64 %1331, %1324
  %1333 = sub nsw i64 %1324, %1309
  %1334 = shl nsw i64 %1333, 10
  %1335 = shl nsw i64 %1333, 1
  %1336 = add nsw i64 %1335, -2
  %1337 = or i64 %1336, %1330
  %1338 = shl i64 %1337, %1309
  %1339 = add nuw nsw i64 %1328, %1312
  %1340 = add i64 %1339, %1338
  %1341 = or i64 %1340, %1334
  %1342 = trunc i64 %1341 to i16
  store i16 %1342, i16* %1310, align 2
  %1343 = sub i64 %1320, %1332
  %1344 = lshr i64 %1343, %1309
  %1345 = trunc i64 %1344 to i32
  br label %1346

1346:                                             ; preds = %1316, %1314
  %1347 = phi i16 [ %1342, %1316 ], [ %1315, %1314 ]
  %1348 = phi i32 [ %1345, %1316 ], [ 0, %1314 ]
  store i32 %1348, i32* %1311, align 4
  %1349 = add nsw i32 %1224, %1303
  %1350 = sext i32 %1349 to i64
  %1351 = and i16 %1347, 1023
  %1352 = icmp eq i16 %1351, 0
  %1353 = getelementptr inbounds %struct.Command, %struct.Command* %110, i64 0, i32 3
  %1354 = icmp ult i64 %1227, 6
  br i1 %1354, label %1355, label %1357

1355:                                             ; preds = %1346
  %1356 = trunc i64 %1227 to i16
  br label %1383

1357:                                             ; preds = %1346
  %1358 = icmp ult i64 %1227, 130
  br i1 %1358, label %1359, label %1371

1359:                                             ; preds = %1357
  %1360 = add nsw i64 %1227, -2
  %1361 = trunc i64 %1360 to i32
  %1362 = tail call i32 @llvm.ctlz.i32(i32 %1361, i1 true) #4, !range !18
  %1363 = sub nsw i32 30, %1362
  %1364 = shl nsw i32 %1363, 1
  %1365 = zext i32 %1364 to i64
  %1366 = zext i32 %1363 to i64
  %1367 = lshr i64 %1360, %1366
  %1368 = add nuw nsw i64 %1367, %1365
  %1369 = trunc i64 %1368 to i16
  %1370 = add i16 %1369, 2
  br label %1383

1371:                                             ; preds = %1357
  %1372 = icmp ult i64 %1227, 2114
  br i1 %1372, label %1373, label %1378

1373:                                             ; preds = %1371
  %1374 = add nsw i32 %1300, -66
  %1375 = tail call i32 @llvm.ctlz.i32(i32 %1374, i1 true) #4, !range !18
  %1376 = trunc i32 %1375 to i16
  %1377 = sub nuw nsw i16 41, %1376
  br label %1383

1378:                                             ; preds = %1371
  %1379 = icmp ult i64 %1227, 6210
  br i1 %1379, label %1383, label %1380

1380:                                             ; preds = %1378
  %1381 = icmp ult i64 %1227, 22594
  %1382 = select i1 %1381, i16 22, i16 23
  br label %1383

1383:                                             ; preds = %1380, %1378, %1373, %1359, %1355
  %1384 = phi i16 [ %1356, %1355 ], [ %1370, %1359 ], [ %1377, %1373 ], [ 21, %1378 ], [ %1382, %1380 ]
  %1385 = icmp ult i32 %1349, 10
  br i1 %1385, label %1386, label %1389

1386:                                             ; preds = %1383
  %1387 = trunc i32 %1349 to i16
  %1388 = add nsw i16 %1387, -2
  br label %1410

1389:                                             ; preds = %1383
  %1390 = icmp ult i32 %1349, 134
  br i1 %1390, label %1391, label %1403

1391:                                             ; preds = %1389
  %1392 = add nsw i64 %1350, -6
  %1393 = trunc i64 %1392 to i32
  %1394 = tail call i32 @llvm.ctlz.i32(i32 %1393, i1 true) #4, !range !18
  %1395 = sub nsw i32 30, %1394
  %1396 = shl nsw i32 %1395, 1
  %1397 = zext i32 %1396 to i64
  %1398 = zext i32 %1395 to i64
  %1399 = lshr i64 %1392, %1398
  %1400 = add nuw nsw i64 %1399, %1397
  %1401 = trunc i64 %1400 to i16
  %1402 = add i16 %1401, 4
  br label %1410

1403:                                             ; preds = %1389
  %1404 = icmp ult i32 %1349, 2118
  br i1 %1404, label %1405, label %1410

1405:                                             ; preds = %1403
  %1406 = add nsw i32 %1349, -70
  %1407 = tail call i32 @llvm.ctlz.i32(i32 %1406, i1 true) #4, !range !18
  %1408 = trunc i32 %1407 to i16
  %1409 = sub nuw nsw i16 43, %1408
  br label %1410

1410:                                             ; preds = %1405, %1403, %1391, %1386
  %1411 = phi i16 [ %1388, %1386 ], [ %1402, %1391 ], [ %1409, %1405 ], [ 23, %1403 ]
  %1412 = and i16 %1411, 7
  %1413 = shl i16 %1384, 3
  %1414 = and i16 %1413, 56
  %1415 = or i16 %1412, %1414
  %1416 = icmp ult i16 %1384, 8
  %1417 = and i1 %1352, %1416
  %1418 = icmp ult i16 %1411, 16
  %1419 = and i1 %1417, %1418
  br i1 %1419, label %1420, label %1424

1420:                                             ; preds = %1410
  %1421 = icmp ult i16 %1411, 8
  %1422 = or i16 %1415, 64
  %1423 = select i1 %1421, i16 %1415, i16 %1422
  br label %1439

1424:                                             ; preds = %1410
  %1425 = lshr i16 %1411, 3
  %1426 = lshr i16 %1384, 3
  %1427 = mul nuw nsw i16 %1426, 3
  %1428 = add nuw nsw i16 %1425, %1427
  %1429 = zext i16 %1428 to i32
  %1430 = shl nuw i16 %1428, 1
  %1431 = zext i16 %1430 to i32
  %1432 = shl nuw nsw i32 %1429, 6
  %1433 = add nuw nsw i32 %1432, 64
  %1434 = lshr i32 5377344, %1431
  %1435 = and i32 %1434, 192
  %1436 = add nuw nsw i32 %1433, %1435
  %1437 = trunc i32 %1436 to i16
  %1438 = or i16 %1415, %1437
  br label %1439

1439:                                             ; preds = %1420, %1424
  %1440 = phi i16 [ %1423, %1420 ], [ %1438, %1424 ]
  store i16 %1440, i16* %1353, align 2
  %1441 = load i64, i64* %10, align 8
  %1442 = add i64 %1441, %1227
  store i64 %1442, i64* %10, align 8
  %1443 = add i64 %1228, 2
  %1444 = add i64 %1228, %1226
  %1445 = icmp ult i64 %1444, %23
  %1446 = select i1 %1445, i64 %1444, i64 %23
  %1447 = lshr i64 %1226, 2
  %1448 = icmp ult i64 %1225, %1447
  br i1 %1448, label %1449, label %1456

1449:                                             ; preds = %1439
  %1450 = shl i64 %1225, 2
  %1451 = sub i64 %1444, %1450
  %1452 = icmp ugt i64 %1443, %1451
  %1453 = select i1 %1452, i64 %1443, i64 %1451
  %1454 = icmp ult i64 %1446, %1453
  %1455 = select i1 %1454, i64 %1446, i64 %1453
  br label %1456

1456:                                             ; preds = %1449, %1439
  %1457 = phi i64 [ %1455, %1449 ], [ %1443, %1439 ]
  %1458 = icmp ult i64 %1457, %1446
  br i1 %1458, label %1459, label %1576

1459:                                             ; preds = %1456
  %1460 = load i16*, i16** %63, align 8, !alias.scope !820, !noalias !827
  %1461 = load i32*, i32** %65, align 8, !alias.scope !820, !noalias !827
  %1462 = load i64, i64* %67, align 8, !alias.scope !820, !noalias !827
  %1463 = load i32, i32* %69, align 8, !alias.scope !820, !noalias !827
  %1464 = zext i32 %1463 to i64
  %1465 = load i32, i32* %75, align 8, !alias.scope !820, !noalias !827
  %1466 = load i32, i32* %71, align 4, !alias.scope !820, !noalias !827
  br label %1467

1467:                                             ; preds = %1467, %1459
  %1468 = phi i64 [ %1457, %1459 ], [ %1489, %1467 ]
  %1469 = and i64 %1468, %3
  %1470 = getelementptr inbounds i8, i8* %2, i64 %1469
  %1471 = bitcast i8* %1470 to i64*
  %1472 = load i64, i64* %1471, align 8, !alias.scope !831, !noalias !820
  %1473 = and i64 %1472, %1462
  %1474 = mul i64 %1473, 2297779722762296275
  %1475 = lshr i64 %1474, %1464
  %1476 = trunc i64 %1475 to i32
  %1477 = and i64 %1475, 4294967295
  %1478 = getelementptr inbounds i16, i16* %1460, i64 %1477
  %1479 = load i16, i16* %1478, align 2, !noalias !834
  %1480 = zext i16 %1479 to i32
  %1481 = and i32 %1465, %1480
  %1482 = zext i32 %1481 to i64
  %1483 = shl i32 %1476, %1466
  %1484 = zext i32 %1483 to i64
  %1485 = add nuw nsw i64 %1484, %1482
  %1486 = add i16 %1479, 1
  store i16 %1486, i16* %1478, align 2, !noalias !834
  %1487 = trunc i64 %1468 to i32
  %1488 = getelementptr inbounds i32, i32* %1461, i64 %1485
  store i32 %1487, i32* %1488, align 4, !noalias !834
  %1489 = add nuw i64 %1468, 1
  %1490 = icmp eq i64 %1489, %1446
  br i1 %1490, label %1576, label %1467

1491:                                             ; preds = %647
  %1492 = add i64 %112, 1
  %1493 = add i64 %109, 1
  %1494 = icmp ugt i64 %1493, %111
  br i1 %1494, label %1495, label %1576

1495:                                             ; preds = %1491
  %1496 = add i64 %111, %93
  %1497 = icmp ugt i64 %1493, %1496
  br i1 %1497, label %1498, label %1537

1498:                                             ; preds = %1495
  %1499 = add i64 %109, 17
  %1500 = icmp ult i64 %1499, %22
  %1501 = select i1 %1500, i64 %1499, i64 %22
  %1502 = icmp ult i64 %1493, %1501
  br i1 %1502, label %1503, label %1576

1503:                                             ; preds = %1498
  %1504 = load i16*, i16** %63, align 8, !alias.scope !835, !noalias !840
  %1505 = load i32*, i32** %65, align 8, !alias.scope !835, !noalias !840
  %1506 = load i64, i64* %67, align 8, !alias.scope !835, !noalias !840
  %1507 = load i32, i32* %69, align 8, !alias.scope !835, !noalias !840
  %1508 = zext i32 %1507 to i64
  %1509 = load i32, i32* %75, align 8, !alias.scope !835, !noalias !840
  %1510 = load i32, i32* %71, align 4, !alias.scope !835, !noalias !840
  br label %1511

1511:                                             ; preds = %1503, %1511
  %1512 = phi i64 [ %1493, %1503 ], [ %1535, %1511 ]
  %1513 = phi i64 [ %1492, %1503 ], [ %1534, %1511 ]
  %1514 = and i64 %1512, %3
  %1515 = getelementptr inbounds i8, i8* %2, i64 %1514
  %1516 = bitcast i8* %1515 to i64*
  %1517 = load i64, i64* %1516, align 8, !alias.scope !843, !noalias !835
  %1518 = and i64 %1517, %1506
  %1519 = mul i64 %1518, 2297779722762296275
  %1520 = lshr i64 %1519, %1508
  %1521 = trunc i64 %1520 to i32
  %1522 = and i64 %1520, 4294967295
  %1523 = getelementptr inbounds i16, i16* %1504, i64 %1522
  %1524 = load i16, i16* %1523, align 2, !noalias !846
  %1525 = zext i16 %1524 to i32
  %1526 = and i32 %1509, %1525
  %1527 = zext i32 %1526 to i64
  %1528 = shl i32 %1521, %1510
  %1529 = zext i32 %1528 to i64
  %1530 = add nuw nsw i64 %1529, %1527
  %1531 = add i16 %1524, 1
  store i16 %1531, i16* %1523, align 2, !noalias !846
  %1532 = trunc i64 %1512 to i32
  %1533 = getelementptr inbounds i32, i32* %1505, i64 %1530
  store i32 %1532, i32* %1533, align 4, !noalias !846
  %1534 = add i64 %1513, 4
  %1535 = add i64 %1512, 4
  %1536 = icmp ult i64 %1535, %1501
  br i1 %1536, label %1511, label %1576

1537:                                             ; preds = %1495
  %1538 = add i64 %109, 9
  %1539 = icmp ult i64 %1538, %22
  %1540 = select i1 %1539, i64 %1538, i64 %22
  %1541 = icmp ult i64 %1493, %1540
  br i1 %1541, label %1542, label %1576

1542:                                             ; preds = %1537
  %1543 = load i16*, i16** %63, align 8, !alias.scope !847, !noalias !852
  %1544 = load i32*, i32** %65, align 8, !alias.scope !847, !noalias !852
  %1545 = load i64, i64* %67, align 8, !alias.scope !847, !noalias !852
  %1546 = load i32, i32* %69, align 8, !alias.scope !847, !noalias !852
  %1547 = zext i32 %1546 to i64
  %1548 = load i32, i32* %75, align 8, !alias.scope !847, !noalias !852
  %1549 = load i32, i32* %71, align 4, !alias.scope !847, !noalias !852
  br label %1550

1550:                                             ; preds = %1542, %1550
  %1551 = phi i64 [ %1493, %1542 ], [ %1574, %1550 ]
  %1552 = phi i64 [ %1492, %1542 ], [ %1573, %1550 ]
  %1553 = and i64 %1551, %3
  %1554 = getelementptr inbounds i8, i8* %2, i64 %1553
  %1555 = bitcast i8* %1554 to i64*
  %1556 = load i64, i64* %1555, align 8, !alias.scope !855, !noalias !847
  %1557 = and i64 %1556, %1545
  %1558 = mul i64 %1557, 2297779722762296275
  %1559 = lshr i64 %1558, %1547
  %1560 = trunc i64 %1559 to i32
  %1561 = and i64 %1559, 4294967295
  %1562 = getelementptr inbounds i16, i16* %1543, i64 %1561
  %1563 = load i16, i16* %1562, align 2, !noalias !858
  %1564 = zext i16 %1563 to i32
  %1565 = and i32 %1548, %1564
  %1566 = zext i32 %1565 to i64
  %1567 = shl i32 %1560, %1549
  %1568 = zext i32 %1567 to i64
  %1569 = add nuw nsw i64 %1568, %1566
  %1570 = add i16 %1563, 1
  store i16 %1570, i16* %1562, align 2, !noalias !858
  %1571 = trunc i64 %1551 to i32
  %1572 = getelementptr inbounds i32, i32* %1544, i64 %1569
  store i32 %1571, i32* %1572, align 4, !noalias !858
  %1573 = add i64 %1552, 2
  %1574 = add i64 %1551, 2
  %1575 = icmp ult i64 %1574, %1540
  br i1 %1575, label %1550, label %1576

1576:                                             ; preds = %1550, %1511, %1467, %1537, %1498, %1456, %1491
  %1577 = phi i64 [ %1492, %1491 ], [ 0, %1456 ], [ %1492, %1498 ], [ %1492, %1537 ], [ 0, %1467 ], [ %1534, %1511 ], [ %1573, %1550 ]
  %1578 = phi i64 [ %111, %1491 ], [ %1231, %1456 ], [ %111, %1498 ], [ %111, %1537 ], [ %1231, %1467 ], [ %111, %1511 ], [ %111, %1550 ]
  %1579 = phi %struct.Command* [ %110, %1491 ], [ %1299, %1456 ], [ %110, %1498 ], [ %110, %1537 ], [ %1299, %1467 ], [ %110, %1511 ], [ %110, %1550 ]
  %1580 = phi i64 [ %1493, %1491 ], [ %1444, %1456 ], [ %1493, %1498 ], [ %1493, %1537 ], [ %1444, %1467 ], [ %1535, %1511 ], [ %1574, %1550 ]
  %1581 = add i64 %1580, 8
  %1582 = icmp ult i64 %1581, %20
  %1583 = sub i64 %20, %1580
  br i1 %1582, label %107, label %1584

1584:                                             ; preds = %1576, %57
  %1585 = phi i64 [ %19, %57 ], [ %1577, %1576 ]
  %1586 = phi %struct.Command* [ %8, %57 ], [ %1579, %1576 ]
  %1587 = phi i64 [ %0, %57 ], [ %1583, %1576 ]
  %1588 = add i64 %1587, %1585
  store i64 %1588, i64* %7, align 8
  %1589 = ptrtoint %struct.Command* %1586 to i64
  %1590 = ptrtoint %struct.Command* %8 to i64
  %1591 = sub i64 %1589, %1590
  %1592 = ashr exact i64 %1591, 4
  %1593 = load i64, i64* %9, align 8
  %1594 = add i64 %1593, %1592
  store i64 %1594, i64* %9, align 8
  ret void

1595:                                             ; preds = %195
  %1596 = getelementptr inbounds i8, i8* %189, i64 1
  %1597 = getelementptr inbounds i8, i8* %166, i64 %196
  %1598 = load i8, i8* %1597, align 1, !alias.scope !765, !noalias !766
  %1599 = load i8, i8* %1596, align 1, !alias.scope !765, !noalias !766
  %1600 = icmp eq i8 %1598, %1599
  br i1 %1600, label %1601, label %197, !prof !15

1601:                                             ; preds = %1595
  %1602 = add i64 %188, 2
  br i1 %132, label %197, label %1603

1603:                                             ; preds = %1601
  %1604 = getelementptr inbounds i8, i8* %189, i64 2
  %1605 = getelementptr inbounds i8, i8* %166, i64 %1602
  %1606 = load i8, i8* %1605, align 1, !alias.scope !765, !noalias !766
  %1607 = load i8, i8* %1604, align 1, !alias.scope !765, !noalias !766
  %1608 = icmp eq i8 %1606, %1607
  br i1 %1608, label %1609, label %197, !prof !15

1609:                                             ; preds = %1603
  %1610 = add i64 %188, 3
  br i1 %133, label %197, label %1611

1611:                                             ; preds = %1609
  %1612 = getelementptr inbounds i8, i8* %189, i64 3
  %1613 = getelementptr inbounds i8, i8* %166, i64 %1610
  %1614 = load i8, i8* %1613, align 1, !alias.scope !765, !noalias !766
  %1615 = load i8, i8* %1612, align 1, !alias.scope !765, !noalias !766
  %1616 = icmp eq i8 %1614, %1615
  br i1 %1616, label %1617, label %197, !prof !15

1617:                                             ; preds = %1611
  %1618 = add i64 %188, 4
  br i1 %134, label %197, label %1619

1619:                                             ; preds = %1617
  %1620 = getelementptr inbounds i8, i8* %189, i64 4
  %1621 = getelementptr inbounds i8, i8* %166, i64 %1618
  %1622 = load i8, i8* %1621, align 1, !alias.scope !765, !noalias !766
  %1623 = load i8, i8* %1620, align 1, !alias.scope !765, !noalias !766
  %1624 = icmp eq i8 %1622, %1623
  br i1 %1624, label %1625, label %197, !prof !15

1625:                                             ; preds = %1619
  %1626 = add i64 %188, 5
  br i1 %135, label %197, label %1627

1627:                                             ; preds = %1625
  %1628 = getelementptr inbounds i8, i8* %189, i64 5
  %1629 = getelementptr inbounds i8, i8* %166, i64 %1626
  %1630 = load i8, i8* %1629, align 1, !alias.scope !765, !noalias !766
  %1631 = load i8, i8* %1628, align 1, !alias.scope !765, !noalias !766
  %1632 = icmp eq i8 %1630, %1631
  br i1 %1632, label %1633, label %197, !prof !15

1633:                                             ; preds = %1627
  %1634 = add i64 %188, 6
  br i1 %136, label %197, label %1635

1635:                                             ; preds = %1633
  %1636 = getelementptr inbounds i8, i8* %189, i64 6
  %1637 = getelementptr inbounds i8, i8* %166, i64 %1634
  %1638 = load i8, i8* %1637, align 1, !alias.scope !765, !noalias !766
  %1639 = load i8, i8* %1636, align 1, !alias.scope !765, !noalias !766
  %1640 = icmp eq i8 %1638, %1639
  %1641 = add i64 %188, 7
  %1642 = select i1 %1640, i64 %1641, i64 %1634, !prof !15
  br label %197

1643:                                             ; preds = %337
  %1644 = getelementptr inbounds i8, i8* %331, i64 1
  %1645 = getelementptr inbounds i8, i8* %308, i64 %338
  %1646 = load i8, i8* %1645, align 1, !alias.scope !765, !noalias !766
  %1647 = load i8, i8* %1644, align 1, !alias.scope !765, !noalias !766
  %1648 = icmp eq i8 %1646, %1647
  br i1 %1648, label %1649, label %339, !prof !15

1649:                                             ; preds = %1643
  %1650 = add i64 %330, 2
  br i1 %274, label %339, label %1651

1651:                                             ; preds = %1649
  %1652 = getelementptr inbounds i8, i8* %331, i64 2
  %1653 = getelementptr inbounds i8, i8* %308, i64 %1650
  %1654 = load i8, i8* %1653, align 1, !alias.scope !765, !noalias !766
  %1655 = load i8, i8* %1652, align 1, !alias.scope !765, !noalias !766
  %1656 = icmp eq i8 %1654, %1655
  br i1 %1656, label %1657, label %339, !prof !15

1657:                                             ; preds = %1651
  %1658 = add i64 %330, 3
  br i1 %275, label %339, label %1659

1659:                                             ; preds = %1657
  %1660 = getelementptr inbounds i8, i8* %331, i64 3
  %1661 = getelementptr inbounds i8, i8* %308, i64 %1658
  %1662 = load i8, i8* %1661, align 1, !alias.scope !765, !noalias !766
  %1663 = load i8, i8* %1660, align 1, !alias.scope !765, !noalias !766
  %1664 = icmp eq i8 %1662, %1663
  br i1 %1664, label %1665, label %339, !prof !15

1665:                                             ; preds = %1659
  %1666 = add i64 %330, 4
  br i1 %276, label %339, label %1667

1667:                                             ; preds = %1665
  %1668 = getelementptr inbounds i8, i8* %331, i64 4
  %1669 = getelementptr inbounds i8, i8* %308, i64 %1666
  %1670 = load i8, i8* %1669, align 1, !alias.scope !765, !noalias !766
  %1671 = load i8, i8* %1668, align 1, !alias.scope !765, !noalias !766
  %1672 = icmp eq i8 %1670, %1671
  br i1 %1672, label %1673, label %339, !prof !15

1673:                                             ; preds = %1667
  %1674 = add i64 %330, 5
  br i1 %277, label %339, label %1675

1675:                                             ; preds = %1673
  %1676 = getelementptr inbounds i8, i8* %331, i64 5
  %1677 = getelementptr inbounds i8, i8* %308, i64 %1674
  %1678 = load i8, i8* %1677, align 1, !alias.scope !765, !noalias !766
  %1679 = load i8, i8* %1676, align 1, !alias.scope !765, !noalias !766
  %1680 = icmp eq i8 %1678, %1679
  br i1 %1680, label %1681, label %339, !prof !15

1681:                                             ; preds = %1675
  %1682 = add i64 %330, 6
  br i1 %278, label %339, label %1683

1683:                                             ; preds = %1681
  %1684 = getelementptr inbounds i8, i8* %331, i64 6
  %1685 = getelementptr inbounds i8, i8* %308, i64 %1682
  %1686 = load i8, i8* %1685, align 1, !alias.scope !765, !noalias !766
  %1687 = load i8, i8* %1684, align 1, !alias.scope !765, !noalias !766
  %1688 = icmp eq i8 %1686, %1687
  %1689 = add i64 %330, 7
  %1690 = select i1 %1688, i64 %1689, i64 %1682, !prof !15
  br label %339

1691:                                             ; preds = %460
  %1692 = getelementptr inbounds i8, i8* %452, i64 1
  %1693 = getelementptr inbounds i8, i8* %243, i64 %461
  %1694 = load i8, i8* %1693, align 1, !alias.scope !765, !noalias !766
  %1695 = load i8, i8* %1692, align 1, !noalias !770
  %1696 = icmp eq i8 %1694, %1695
  br i1 %1696, label %1697, label %463, !prof !15

1697:                                             ; preds = %1691
  %1698 = add nuw nsw i64 %451, 2
  %1699 = icmp eq i64 %453, 2
  br i1 %1699, label %463, label %1700

1700:                                             ; preds = %1697
  %1701 = getelementptr inbounds i8, i8* %452, i64 2
  %1702 = getelementptr inbounds i8, i8* %243, i64 %1698
  %1703 = load i8, i8* %1702, align 1, !alias.scope !765, !noalias !766
  %1704 = load i8, i8* %1701, align 1, !noalias !770
  %1705 = icmp eq i8 %1703, %1704
  br i1 %1705, label %1706, label %463, !prof !15

1706:                                             ; preds = %1700
  %1707 = add nuw nsw i64 %451, 3
  %1708 = icmp eq i64 %453, 3
  br i1 %1708, label %463, label %1709

1709:                                             ; preds = %1706
  %1710 = getelementptr inbounds i8, i8* %452, i64 3
  %1711 = getelementptr inbounds i8, i8* %243, i64 %1707
  %1712 = load i8, i8* %1711, align 1, !alias.scope !765, !noalias !766
  %1713 = load i8, i8* %1710, align 1, !noalias !770
  %1714 = icmp eq i8 %1712, %1713
  br i1 %1714, label %1715, label %463, !prof !15

1715:                                             ; preds = %1709
  %1716 = add nuw nsw i64 %451, 4
  %1717 = icmp eq i64 %453, 4
  br i1 %1717, label %463, label %1718

1718:                                             ; preds = %1715
  %1719 = getelementptr inbounds i8, i8* %452, i64 4
  %1720 = getelementptr inbounds i8, i8* %243, i64 %1716
  %1721 = load i8, i8* %1720, align 1, !alias.scope !765, !noalias !766
  %1722 = load i8, i8* %1719, align 1, !noalias !770
  %1723 = icmp eq i8 %1721, %1722
  br i1 %1723, label %1724, label %463, !prof !15

1724:                                             ; preds = %1718
  %1725 = add nuw nsw i64 %451, 5
  %1726 = icmp eq i64 %453, 5
  br i1 %1726, label %463, label %1727

1727:                                             ; preds = %1724
  %1728 = getelementptr inbounds i8, i8* %452, i64 5
  %1729 = getelementptr inbounds i8, i8* %243, i64 %1725
  %1730 = load i8, i8* %1729, align 1, !alias.scope !765, !noalias !766
  %1731 = load i8, i8* %1728, align 1, !noalias !770
  %1732 = icmp eq i8 %1730, %1731
  br i1 %1732, label %1733, label %463, !prof !15

1733:                                             ; preds = %1727
  %1734 = add nuw nsw i64 %451, 6
  %1735 = icmp eq i64 %453, 6
  br i1 %1735, label %463, label %1736

1736:                                             ; preds = %1733
  %1737 = getelementptr inbounds i8, i8* %452, i64 6
  %1738 = getelementptr inbounds i8, i8* %243, i64 %1734
  %1739 = load i8, i8* %1738, align 1, !alias.scope !765, !noalias !766
  %1740 = load i8, i8* %1737, align 1, !noalias !770
  %1741 = icmp eq i8 %1739, %1740
  %1742 = add nuw nsw i64 %451, 7
  %1743 = select i1 %1741, i64 %1742, i64 %1734, !prof !15
  br label %463

1744:                                             ; preds = %609
  %1745 = getelementptr inbounds i8, i8* %603, i64 1
  %1746 = getelementptr inbounds i8, i8* %580, i64 %610
  %1747 = load i8, i8* %1746, align 1, !alias.scope !777, !noalias !778
  %1748 = load i8, i8* %1745, align 1, !alias.scope !777, !noalias !778
  %1749 = icmp eq i8 %1747, %1748
  br i1 %1749, label %1750, label %611, !prof !15

1750:                                             ; preds = %1744
  %1751 = add i64 %602, 2
  br i1 %533, label %611, label %1752

1752:                                             ; preds = %1750
  %1753 = getelementptr inbounds i8, i8* %603, i64 2
  %1754 = getelementptr inbounds i8, i8* %580, i64 %1751
  %1755 = load i8, i8* %1754, align 1, !alias.scope !777, !noalias !778
  %1756 = load i8, i8* %1753, align 1, !alias.scope !777, !noalias !778
  %1757 = icmp eq i8 %1755, %1756
  br i1 %1757, label %1758, label %611, !prof !15

1758:                                             ; preds = %1752
  %1759 = add i64 %602, 3
  br i1 %534, label %611, label %1760

1760:                                             ; preds = %1758
  %1761 = getelementptr inbounds i8, i8* %603, i64 3
  %1762 = getelementptr inbounds i8, i8* %580, i64 %1759
  %1763 = load i8, i8* %1762, align 1, !alias.scope !777, !noalias !778
  %1764 = load i8, i8* %1761, align 1, !alias.scope !777, !noalias !778
  %1765 = icmp eq i8 %1763, %1764
  br i1 %1765, label %1766, label %611, !prof !15

1766:                                             ; preds = %1760
  %1767 = add i64 %602, 4
  br i1 %535, label %611, label %1768

1768:                                             ; preds = %1766
  %1769 = getelementptr inbounds i8, i8* %603, i64 4
  %1770 = getelementptr inbounds i8, i8* %580, i64 %1767
  %1771 = load i8, i8* %1770, align 1, !alias.scope !777, !noalias !778
  %1772 = load i8, i8* %1769, align 1, !alias.scope !777, !noalias !778
  %1773 = icmp eq i8 %1771, %1772
  br i1 %1773, label %1774, label %611, !prof !15

1774:                                             ; preds = %1768
  %1775 = add i64 %602, 5
  br i1 %536, label %611, label %1776

1776:                                             ; preds = %1774
  %1777 = getelementptr inbounds i8, i8* %603, i64 5
  %1778 = getelementptr inbounds i8, i8* %580, i64 %1775
  %1779 = load i8, i8* %1778, align 1, !alias.scope !777, !noalias !778
  %1780 = load i8, i8* %1777, align 1, !alias.scope !777, !noalias !778
  %1781 = icmp eq i8 %1779, %1780
  br i1 %1781, label %1782, label %611, !prof !15

1782:                                             ; preds = %1776
  %1783 = add i64 %602, 6
  br i1 %537, label %611, label %1784

1784:                                             ; preds = %1782
  %1785 = getelementptr inbounds i8, i8* %603, i64 6
  %1786 = getelementptr inbounds i8, i8* %580, i64 %1783
  %1787 = load i8, i8* %1786, align 1, !alias.scope !777, !noalias !778
  %1788 = load i8, i8* %1785, align 1, !alias.scope !777, !noalias !778
  %1789 = icmp eq i8 %1787, %1788
  %1790 = add i64 %602, 7
  %1791 = select i1 %1789, i64 %1790, i64 %1783, !prof !15
  br label %611

1792:                                             ; preds = %754
  %1793 = getelementptr inbounds i8, i8* %748, i64 1
  %1794 = getelementptr inbounds i8, i8* %725, i64 %755
  %1795 = load i8, i8* %1794, align 1, !alias.scope !794, !noalias !795
  %1796 = load i8, i8* %1793, align 1, !alias.scope !794, !noalias !795
  %1797 = icmp eq i8 %1795, %1796
  br i1 %1797, label %1798, label %756, !prof !15

1798:                                             ; preds = %1792
  %1799 = add i64 %747, 2
  br i1 %691, label %756, label %1800

1800:                                             ; preds = %1798
  %1801 = getelementptr inbounds i8, i8* %748, i64 2
  %1802 = getelementptr inbounds i8, i8* %725, i64 %1799
  %1803 = load i8, i8* %1802, align 1, !alias.scope !794, !noalias !795
  %1804 = load i8, i8* %1801, align 1, !alias.scope !794, !noalias !795
  %1805 = icmp eq i8 %1803, %1804
  br i1 %1805, label %1806, label %756, !prof !15

1806:                                             ; preds = %1800
  %1807 = add i64 %747, 3
  br i1 %692, label %756, label %1808

1808:                                             ; preds = %1806
  %1809 = getelementptr inbounds i8, i8* %748, i64 3
  %1810 = getelementptr inbounds i8, i8* %725, i64 %1807
  %1811 = load i8, i8* %1810, align 1, !alias.scope !794, !noalias !795
  %1812 = load i8, i8* %1809, align 1, !alias.scope !794, !noalias !795
  %1813 = icmp eq i8 %1811, %1812
  br i1 %1813, label %1814, label %756, !prof !15

1814:                                             ; preds = %1808
  %1815 = add i64 %747, 4
  br i1 %693, label %756, label %1816

1816:                                             ; preds = %1814
  %1817 = getelementptr inbounds i8, i8* %748, i64 4
  %1818 = getelementptr inbounds i8, i8* %725, i64 %1815
  %1819 = load i8, i8* %1818, align 1, !alias.scope !794, !noalias !795
  %1820 = load i8, i8* %1817, align 1, !alias.scope !794, !noalias !795
  %1821 = icmp eq i8 %1819, %1820
  br i1 %1821, label %1822, label %756, !prof !15

1822:                                             ; preds = %1816
  %1823 = add i64 %747, 5
  br i1 %694, label %756, label %1824

1824:                                             ; preds = %1822
  %1825 = getelementptr inbounds i8, i8* %748, i64 5
  %1826 = getelementptr inbounds i8, i8* %725, i64 %1823
  %1827 = load i8, i8* %1826, align 1, !alias.scope !794, !noalias !795
  %1828 = load i8, i8* %1825, align 1, !alias.scope !794, !noalias !795
  %1829 = icmp eq i8 %1827, %1828
  br i1 %1829, label %1830, label %756, !prof !15

1830:                                             ; preds = %1824
  %1831 = add i64 %747, 6
  br i1 %695, label %756, label %1832

1832:                                             ; preds = %1830
  %1833 = getelementptr inbounds i8, i8* %748, i64 6
  %1834 = getelementptr inbounds i8, i8* %725, i64 %1831
  %1835 = load i8, i8* %1834, align 1, !alias.scope !794, !noalias !795
  %1836 = load i8, i8* %1833, align 1, !alias.scope !794, !noalias !795
  %1837 = icmp eq i8 %1835, %1836
  %1838 = add i64 %747, 7
  %1839 = select i1 %1837, i64 %1838, i64 %1831, !prof !15
  br label %756

1840:                                             ; preds = %896
  %1841 = getelementptr inbounds i8, i8* %890, i64 1
  %1842 = getelementptr inbounds i8, i8* %867, i64 %897
  %1843 = load i8, i8* %1842, align 1, !alias.scope !794, !noalias !795
  %1844 = load i8, i8* %1841, align 1, !alias.scope !794, !noalias !795
  %1845 = icmp eq i8 %1843, %1844
  br i1 %1845, label %1846, label %898, !prof !15

1846:                                             ; preds = %1840
  %1847 = add i64 %889, 2
  br i1 %833, label %898, label %1848

1848:                                             ; preds = %1846
  %1849 = getelementptr inbounds i8, i8* %890, i64 2
  %1850 = getelementptr inbounds i8, i8* %867, i64 %1847
  %1851 = load i8, i8* %1850, align 1, !alias.scope !794, !noalias !795
  %1852 = load i8, i8* %1849, align 1, !alias.scope !794, !noalias !795
  %1853 = icmp eq i8 %1851, %1852
  br i1 %1853, label %1854, label %898, !prof !15

1854:                                             ; preds = %1848
  %1855 = add i64 %889, 3
  br i1 %834, label %898, label %1856

1856:                                             ; preds = %1854
  %1857 = getelementptr inbounds i8, i8* %890, i64 3
  %1858 = getelementptr inbounds i8, i8* %867, i64 %1855
  %1859 = load i8, i8* %1858, align 1, !alias.scope !794, !noalias !795
  %1860 = load i8, i8* %1857, align 1, !alias.scope !794, !noalias !795
  %1861 = icmp eq i8 %1859, %1860
  br i1 %1861, label %1862, label %898, !prof !15

1862:                                             ; preds = %1856
  %1863 = add i64 %889, 4
  br i1 %835, label %898, label %1864

1864:                                             ; preds = %1862
  %1865 = getelementptr inbounds i8, i8* %890, i64 4
  %1866 = getelementptr inbounds i8, i8* %867, i64 %1863
  %1867 = load i8, i8* %1866, align 1, !alias.scope !794, !noalias !795
  %1868 = load i8, i8* %1865, align 1, !alias.scope !794, !noalias !795
  %1869 = icmp eq i8 %1867, %1868
  br i1 %1869, label %1870, label %898, !prof !15

1870:                                             ; preds = %1864
  %1871 = add i64 %889, 5
  br i1 %836, label %898, label %1872

1872:                                             ; preds = %1870
  %1873 = getelementptr inbounds i8, i8* %890, i64 5
  %1874 = getelementptr inbounds i8, i8* %867, i64 %1871
  %1875 = load i8, i8* %1874, align 1, !alias.scope !794, !noalias !795
  %1876 = load i8, i8* %1873, align 1, !alias.scope !794, !noalias !795
  %1877 = icmp eq i8 %1875, %1876
  br i1 %1877, label %1878, label %898, !prof !15

1878:                                             ; preds = %1872
  %1879 = add i64 %889, 6
  br i1 %837, label %898, label %1880

1880:                                             ; preds = %1878
  %1881 = getelementptr inbounds i8, i8* %890, i64 6
  %1882 = getelementptr inbounds i8, i8* %867, i64 %1879
  %1883 = load i8, i8* %1882, align 1, !alias.scope !794, !noalias !795
  %1884 = load i8, i8* %1881, align 1, !alias.scope !794, !noalias !795
  %1885 = icmp eq i8 %1883, %1884
  %1886 = add i64 %889, 7
  %1887 = select i1 %1885, i64 %1886, i64 %1879, !prof !15
  br label %898

1888:                                             ; preds = %1019
  %1889 = getelementptr inbounds i8, i8* %1011, i64 1
  %1890 = getelementptr inbounds i8, i8* %802, i64 %1020
  %1891 = load i8, i8* %1890, align 1, !alias.scope !794, !noalias !795
  %1892 = load i8, i8* %1889, align 1, !noalias !799
  %1893 = icmp eq i8 %1891, %1892
  br i1 %1893, label %1894, label %1022, !prof !15

1894:                                             ; preds = %1888
  %1895 = add nuw nsw i64 %1010, 2
  %1896 = icmp eq i64 %1012, 2
  br i1 %1896, label %1022, label %1897

1897:                                             ; preds = %1894
  %1898 = getelementptr inbounds i8, i8* %1011, i64 2
  %1899 = getelementptr inbounds i8, i8* %802, i64 %1895
  %1900 = load i8, i8* %1899, align 1, !alias.scope !794, !noalias !795
  %1901 = load i8, i8* %1898, align 1, !noalias !799
  %1902 = icmp eq i8 %1900, %1901
  br i1 %1902, label %1903, label %1022, !prof !15

1903:                                             ; preds = %1897
  %1904 = add nuw nsw i64 %1010, 3
  %1905 = icmp eq i64 %1012, 3
  br i1 %1905, label %1022, label %1906

1906:                                             ; preds = %1903
  %1907 = getelementptr inbounds i8, i8* %1011, i64 3
  %1908 = getelementptr inbounds i8, i8* %802, i64 %1904
  %1909 = load i8, i8* %1908, align 1, !alias.scope !794, !noalias !795
  %1910 = load i8, i8* %1907, align 1, !noalias !799
  %1911 = icmp eq i8 %1909, %1910
  br i1 %1911, label %1912, label %1022, !prof !15

1912:                                             ; preds = %1906
  %1913 = add nuw nsw i64 %1010, 4
  %1914 = icmp eq i64 %1012, 4
  br i1 %1914, label %1022, label %1915

1915:                                             ; preds = %1912
  %1916 = getelementptr inbounds i8, i8* %1011, i64 4
  %1917 = getelementptr inbounds i8, i8* %802, i64 %1913
  %1918 = load i8, i8* %1917, align 1, !alias.scope !794, !noalias !795
  %1919 = load i8, i8* %1916, align 1, !noalias !799
  %1920 = icmp eq i8 %1918, %1919
  br i1 %1920, label %1921, label %1022, !prof !15

1921:                                             ; preds = %1915
  %1922 = add nuw nsw i64 %1010, 5
  %1923 = icmp eq i64 %1012, 5
  br i1 %1923, label %1022, label %1924

1924:                                             ; preds = %1921
  %1925 = getelementptr inbounds i8, i8* %1011, i64 5
  %1926 = getelementptr inbounds i8, i8* %802, i64 %1922
  %1927 = load i8, i8* %1926, align 1, !alias.scope !794, !noalias !795
  %1928 = load i8, i8* %1925, align 1, !noalias !799
  %1929 = icmp eq i8 %1927, %1928
  br i1 %1929, label %1930, label %1022, !prof !15

1930:                                             ; preds = %1924
  %1931 = add nuw nsw i64 %1010, 6
  %1932 = icmp eq i64 %1012, 6
  br i1 %1932, label %1022, label %1933

1933:                                             ; preds = %1930
  %1934 = getelementptr inbounds i8, i8* %1011, i64 6
  %1935 = getelementptr inbounds i8, i8* %802, i64 %1931
  %1936 = load i8, i8* %1935, align 1, !alias.scope !794, !noalias !795
  %1937 = load i8, i8* %1934, align 1, !noalias !799
  %1938 = icmp eq i8 %1936, %1937
  %1939 = add nuw nsw i64 %1010, 7
  %1940 = select i1 %1938, i64 %1939, i64 %1931, !prof !15
  br label %1022

1941:                                             ; preds = %1168
  %1942 = getelementptr inbounds i8, i8* %1162, i64 1
  %1943 = getelementptr inbounds i8, i8* %1139, i64 %1169
  %1944 = load i8, i8* %1943, align 1, !alias.scope !806, !noalias !807
  %1945 = load i8, i8* %1942, align 1, !alias.scope !806, !noalias !807
  %1946 = icmp eq i8 %1944, %1945
  br i1 %1946, label %1947, label %1170, !prof !15

1947:                                             ; preds = %1941
  %1948 = add i64 %1161, 2
  br i1 %1092, label %1170, label %1949

1949:                                             ; preds = %1947
  %1950 = getelementptr inbounds i8, i8* %1162, i64 2
  %1951 = getelementptr inbounds i8, i8* %1139, i64 %1948
  %1952 = load i8, i8* %1951, align 1, !alias.scope !806, !noalias !807
  %1953 = load i8, i8* %1950, align 1, !alias.scope !806, !noalias !807
  %1954 = icmp eq i8 %1952, %1953
  br i1 %1954, label %1955, label %1170, !prof !15

1955:                                             ; preds = %1949
  %1956 = add i64 %1161, 3
  br i1 %1093, label %1170, label %1957

1957:                                             ; preds = %1955
  %1958 = getelementptr inbounds i8, i8* %1162, i64 3
  %1959 = getelementptr inbounds i8, i8* %1139, i64 %1956
  %1960 = load i8, i8* %1959, align 1, !alias.scope !806, !noalias !807
  %1961 = load i8, i8* %1958, align 1, !alias.scope !806, !noalias !807
  %1962 = icmp eq i8 %1960, %1961
  br i1 %1962, label %1963, label %1170, !prof !15

1963:                                             ; preds = %1957
  %1964 = add i64 %1161, 4
  br i1 %1094, label %1170, label %1965

1965:                                             ; preds = %1963
  %1966 = getelementptr inbounds i8, i8* %1162, i64 4
  %1967 = getelementptr inbounds i8, i8* %1139, i64 %1964
  %1968 = load i8, i8* %1967, align 1, !alias.scope !806, !noalias !807
  %1969 = load i8, i8* %1966, align 1, !alias.scope !806, !noalias !807
  %1970 = icmp eq i8 %1968, %1969
  br i1 %1970, label %1971, label %1170, !prof !15

1971:                                             ; preds = %1965
  %1972 = add i64 %1161, 5
  br i1 %1095, label %1170, label %1973

1973:                                             ; preds = %1971
  %1974 = getelementptr inbounds i8, i8* %1162, i64 5
  %1975 = getelementptr inbounds i8, i8* %1139, i64 %1972
  %1976 = load i8, i8* %1975, align 1, !alias.scope !806, !noalias !807
  %1977 = load i8, i8* %1974, align 1, !alias.scope !806, !noalias !807
  %1978 = icmp eq i8 %1976, %1977
  br i1 %1978, label %1979, label %1170, !prof !15

1979:                                             ; preds = %1973
  %1980 = add i64 %1161, 6
  br i1 %1096, label %1170, label %1981

1981:                                             ; preds = %1979
  %1982 = getelementptr inbounds i8, i8* %1162, i64 6
  %1983 = getelementptr inbounds i8, i8* %1139, i64 %1980
  %1984 = load i8, i8* %1983, align 1, !alias.scope !806, !noalias !807
  %1985 = load i8, i8* %1982, align 1, !alias.scope !806, !noalias !807
  %1986 = icmp eq i8 %1984, %1985
  %1987 = add i64 %1161, 7
  %1988 = select i1 %1986, i64 %1987, i64 %1980, !prof !15
  br label %1170
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"FindLongestMatchH2: argument 0"}
!4 = distinct !{!4, !"FindLongestMatchH2"}
!5 = !{!6, !7, !8}
!6 = distinct !{!6, !4, !"FindLongestMatchH2: argument 1"}
!7 = distinct !{!7, !4, !"FindLongestMatchH2: argument 2"}
!8 = distinct !{!8, !4, !"FindLongestMatchH2: argument 3"}
!9 = !{!6}
!10 = !{!3, !7, !8}
!11 = !{!7}
!12 = !{!3, !6, !8}
!13 = !{!"branch_weights", i32 1, i32 2000}
!14 = !{i64 0, i64 65}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!3, !6, !7, !8}
!17 = !{!"branch_weights", i32 2000, i32 2002}
!18 = !{i32 0, i32 33}
!19 = !{!20}
!20 = distinct !{!20, !21, !"FindLongestMatchH2: argument 0"}
!21 = distinct !{!21, !"FindLongestMatchH2"}
!22 = !{!23, !24, !25}
!23 = distinct !{!23, !21, !"FindLongestMatchH2: argument 1"}
!24 = distinct !{!24, !21, !"FindLongestMatchH2: argument 2"}
!25 = distinct !{!25, !21, !"FindLongestMatchH2: argument 3"}
!26 = !{!23}
!27 = !{!20, !24, !25}
!28 = !{!24}
!29 = !{!20, !23, !25}
!30 = !{!20, !23, !24, !25}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"StoreH2: argument 0"}
!33 = distinct !{!33, !"StoreH2"}
!34 = distinct !{!34, !35, !"StoreRangeH2: argument 0"}
!35 = distinct !{!35, !"StoreRangeH2"}
!36 = !{!37, !38}
!37 = distinct !{!37, !33, !"StoreH2: argument 1"}
!38 = distinct !{!38, !35, !"StoreRangeH2: argument 1"}
!39 = !{!32, !37, !34, !38}
!40 = !{!41}
!41 = distinct !{!41, !42, !"StoreH2: argument 0"}
!42 = distinct !{!42, !"StoreH2"}
!43 = !{!44}
!44 = distinct !{!44, !42, !"StoreH2: argument 1"}
!45 = !{!41, !44}
!46 = !{!47}
!47 = distinct !{!47, !48, !"StoreH2: argument 0"}
!48 = distinct !{!48, !"StoreH2"}
!49 = !{!50}
!50 = distinct !{!50, !48, !"StoreH2: argument 1"}
!51 = !{!47, !50}
!52 = !{!53}
!53 = distinct !{!53, !54, !"FindLongestMatchH3: argument 0"}
!54 = distinct !{!54, !"FindLongestMatchH3"}
!55 = !{!56, !57, !58}
!56 = distinct !{!56, !54, !"FindLongestMatchH3: argument 1"}
!57 = distinct !{!57, !54, !"FindLongestMatchH3: argument 2"}
!58 = distinct !{!58, !54, !"FindLongestMatchH3: argument 3"}
!59 = !{!56}
!60 = !{!53, !57, !58}
!61 = !{!57}
!62 = !{!53, !56, !58}
!63 = !{!53, !56, !57, !58}
!64 = !{!65}
!65 = distinct !{!65, !66, !"FindLongestMatchH3: argument 0"}
!66 = distinct !{!66, !"FindLongestMatchH3"}
!67 = !{!68, !69, !70}
!68 = distinct !{!68, !66, !"FindLongestMatchH3: argument 1"}
!69 = distinct !{!69, !66, !"FindLongestMatchH3: argument 2"}
!70 = distinct !{!70, !66, !"FindLongestMatchH3: argument 3"}
!71 = !{!68}
!72 = !{!65, !69, !70}
!73 = !{!69}
!74 = !{!65, !68, !70}
!75 = !{!65, !68, !69, !70}
!76 = !{!77, !79}
!77 = distinct !{!77, !78, !"StoreH3: argument 0"}
!78 = distinct !{!78, !"StoreH3"}
!79 = distinct !{!79, !80, !"StoreRangeH3: argument 0"}
!80 = distinct !{!80, !"StoreRangeH3"}
!81 = !{!82, !83}
!82 = distinct !{!82, !78, !"StoreH3: argument 1"}
!83 = distinct !{!83, !80, !"StoreRangeH3: argument 1"}
!84 = !{!77, !82, !79, !83}
!85 = !{!86}
!86 = distinct !{!86, !87, !"StoreH3: argument 0"}
!87 = distinct !{!87, !"StoreH3"}
!88 = !{!89}
!89 = distinct !{!89, !87, !"StoreH3: argument 1"}
!90 = !{!86, !89}
!91 = !{!92}
!92 = distinct !{!92, !93, !"StoreH3: argument 0"}
!93 = distinct !{!93, !"StoreH3"}
!94 = !{!95}
!95 = distinct !{!95, !93, !"StoreH3: argument 1"}
!96 = !{!92, !95}
!97 = !{!98}
!98 = distinct !{!98, !99, !"FindLongestMatchH4: argument 0"}
!99 = distinct !{!99, !"FindLongestMatchH4"}
!100 = !{!101, !102, !103}
!101 = distinct !{!101, !99, !"FindLongestMatchH4: argument 1"}
!102 = distinct !{!102, !99, !"FindLongestMatchH4: argument 2"}
!103 = distinct !{!103, !99, !"FindLongestMatchH4: argument 3"}
!104 = !{!101}
!105 = !{!98, !102, !103}
!106 = !{!102}
!107 = !{!98, !101, !103}
!108 = !{!98, !101, !102, !103}
!109 = !{!110}
!110 = distinct !{!110, !111, !"FindLongestMatchH4: argument 0"}
!111 = distinct !{!111, !"FindLongestMatchH4"}
!112 = !{!113, !114, !115}
!113 = distinct !{!113, !111, !"FindLongestMatchH4: argument 1"}
!114 = distinct !{!114, !111, !"FindLongestMatchH4: argument 2"}
!115 = distinct !{!115, !111, !"FindLongestMatchH4: argument 3"}
!116 = !{!113}
!117 = !{!110, !114, !115}
!118 = !{!114}
!119 = !{!110, !113, !115}
!120 = !{!110, !113, !114, !115}
!121 = !{!122, !124}
!122 = distinct !{!122, !123, !"StoreH4: argument 0"}
!123 = distinct !{!123, !"StoreH4"}
!124 = distinct !{!124, !125, !"StoreRangeH4: argument 0"}
!125 = distinct !{!125, !"StoreRangeH4"}
!126 = !{!127, !128}
!127 = distinct !{!127, !123, !"StoreH4: argument 1"}
!128 = distinct !{!128, !125, !"StoreRangeH4: argument 1"}
!129 = !{!122, !127, !124, !128}
!130 = !{!131}
!131 = distinct !{!131, !132, !"StoreH4: argument 0"}
!132 = distinct !{!132, !"StoreH4"}
!133 = !{!134}
!134 = distinct !{!134, !132, !"StoreH4: argument 1"}
!135 = !{!131, !134}
!136 = !{!137}
!137 = distinct !{!137, !138, !"StoreH4: argument 0"}
!138 = distinct !{!138, !"StoreH4"}
!139 = !{!140}
!140 = distinct !{!140, !138, !"StoreH4: argument 1"}
!141 = !{!137, !140}
!142 = !{!143}
!143 = distinct !{!143, !144, !"PrepareDistanceCacheH5: argument 0"}
!144 = distinct !{!144, !"PrepareDistanceCacheH5"}
!145 = !{!146}
!146 = distinct !{!146, !144, !"PrepareDistanceCacheH5: argument 1"}
!147 = !{!148, !146}
!148 = distinct !{!148, !149, !"PrepareDistanceCache: argument 0"}
!149 = distinct !{!149, !"PrepareDistanceCache"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"FindLongestMatchH5: argument 0"}
!152 = distinct !{!152, !"FindLongestMatchH5"}
!153 = !{!154, !155, !156}
!154 = distinct !{!154, !152, !"FindLongestMatchH5: argument 1"}
!155 = distinct !{!155, !152, !"FindLongestMatchH5: argument 2"}
!156 = distinct !{!156, !152, !"FindLongestMatchH5: argument 3"}
!157 = !{!155}
!158 = !{!151, !154, !156}
!159 = !{!"branch_weights", i32 2002, i32 2000}
!160 = !{!154}
!161 = !{!151, !155, !156}
!162 = !{!163, !154}
!163 = distinct !{!163, !164, !"HashBytesH5: argument 0"}
!164 = distinct !{!164, !"HashBytesH5"}
!165 = !{!151, !154, !155, !156}
!166 = !{!167}
!167 = distinct !{!167, !168, !"FindLongestMatchH5: argument 0"}
!168 = distinct !{!168, !"FindLongestMatchH5"}
!169 = !{!170, !171, !172}
!170 = distinct !{!170, !168, !"FindLongestMatchH5: argument 1"}
!171 = distinct !{!171, !168, !"FindLongestMatchH5: argument 2"}
!172 = distinct !{!172, !168, !"FindLongestMatchH5: argument 3"}
!173 = !{!171}
!174 = !{!167, !170, !172}
!175 = !{!170}
!176 = !{!167, !171, !172}
!177 = !{!178, !170}
!178 = distinct !{!178, !179, !"HashBytesH5: argument 0"}
!179 = distinct !{!179, !"HashBytesH5"}
!180 = !{!167, !170, !171, !172}
!181 = !{!182}
!182 = distinct !{!182, !183, !"PrepareDistanceCacheH5: argument 0"}
!183 = distinct !{!183, !"PrepareDistanceCacheH5"}
!184 = !{!185}
!185 = distinct !{!185, !183, !"PrepareDistanceCacheH5: argument 1"}
!186 = !{!187, !185}
!187 = distinct !{!187, !188, !"PrepareDistanceCache: argument 0"}
!188 = distinct !{!188, !"PrepareDistanceCache"}
!189 = !{!190, !192}
!190 = distinct !{!190, !191, !"StoreH5: argument 0"}
!191 = distinct !{!191, !"StoreH5"}
!192 = distinct !{!192, !193, !"StoreRangeH5: argument 0"}
!193 = distinct !{!193, !"StoreRangeH5"}
!194 = !{!195, !196}
!195 = distinct !{!195, !191, !"StoreH5: argument 1"}
!196 = distinct !{!196, !193, !"StoreRangeH5: argument 1"}
!197 = !{!198, !195, !196}
!198 = distinct !{!198, !199, !"HashBytesH5: argument 0"}
!199 = distinct !{!199, !"HashBytesH5"}
!200 = !{!190, !195, !192, !196}
!201 = !{!202}
!202 = distinct !{!202, !203, !"StoreH5: argument 0"}
!203 = distinct !{!203, !"StoreH5"}
!204 = !{!205}
!205 = distinct !{!205, !203, !"StoreH5: argument 1"}
!206 = !{!207, !205}
!207 = distinct !{!207, !208, !"HashBytesH5: argument 0"}
!208 = distinct !{!208, !"HashBytesH5"}
!209 = !{!202, !205}
!210 = !{!211}
!211 = distinct !{!211, !212, !"StoreH5: argument 0"}
!212 = distinct !{!212, !"StoreH5"}
!213 = !{!214}
!214 = distinct !{!214, !212, !"StoreH5: argument 1"}
!215 = !{!216, !214}
!216 = distinct !{!216, !217, !"HashBytesH5: argument 0"}
!217 = distinct !{!217, !"HashBytesH5"}
!218 = !{!211, !214}
!219 = !{!220}
!220 = distinct !{!220, !221, !"PrepareDistanceCacheH6: argument 0"}
!221 = distinct !{!221, !"PrepareDistanceCacheH6"}
!222 = !{!223}
!223 = distinct !{!223, !221, !"PrepareDistanceCacheH6: argument 1"}
!224 = !{!225, !223}
!225 = distinct !{!225, !226, !"PrepareDistanceCache: argument 0"}
!226 = distinct !{!226, !"PrepareDistanceCache"}
!227 = !{!228}
!228 = distinct !{!228, !229, !"FindLongestMatchH6: argument 0"}
!229 = distinct !{!229, !"FindLongestMatchH6"}
!230 = !{!231, !232, !233}
!231 = distinct !{!231, !229, !"FindLongestMatchH6: argument 1"}
!232 = distinct !{!232, !229, !"FindLongestMatchH6: argument 2"}
!233 = distinct !{!233, !229, !"FindLongestMatchH6: argument 3"}
!234 = !{!232}
!235 = !{!228, !231, !233}
!236 = !{!231}
!237 = !{!228, !232, !233}
!238 = !{!239, !231}
!239 = distinct !{!239, !240, !"HashBytesH6: argument 0"}
!240 = distinct !{!240, !"HashBytesH6"}
!241 = !{!228, !231, !232, !233}
!242 = !{!243}
!243 = distinct !{!243, !244, !"FindLongestMatchH6: argument 0"}
!244 = distinct !{!244, !"FindLongestMatchH6"}
!245 = !{!246, !247, !248}
!246 = distinct !{!246, !244, !"FindLongestMatchH6: argument 1"}
!247 = distinct !{!247, !244, !"FindLongestMatchH6: argument 2"}
!248 = distinct !{!248, !244, !"FindLongestMatchH6: argument 3"}
!249 = !{!247}
!250 = !{!243, !246, !248}
!251 = !{!246}
!252 = !{!243, !247, !248}
!253 = !{!254, !246}
!254 = distinct !{!254, !255, !"HashBytesH6: argument 0"}
!255 = distinct !{!255, !"HashBytesH6"}
!256 = !{!243, !246, !247, !248}
!257 = !{!258}
!258 = distinct !{!258, !259, !"PrepareDistanceCacheH6: argument 0"}
!259 = distinct !{!259, !"PrepareDistanceCacheH6"}
!260 = !{!261}
!261 = distinct !{!261, !259, !"PrepareDistanceCacheH6: argument 1"}
!262 = !{!263, !261}
!263 = distinct !{!263, !264, !"PrepareDistanceCache: argument 0"}
!264 = distinct !{!264, !"PrepareDistanceCache"}
!265 = !{!266, !268}
!266 = distinct !{!266, !267, !"StoreH6: argument 0"}
!267 = distinct !{!267, !"StoreH6"}
!268 = distinct !{!268, !269, !"StoreRangeH6: argument 0"}
!269 = distinct !{!269, !"StoreRangeH6"}
!270 = !{!271, !272}
!271 = distinct !{!271, !267, !"StoreH6: argument 1"}
!272 = distinct !{!272, !269, !"StoreRangeH6: argument 1"}
!273 = !{!274, !271, !272}
!274 = distinct !{!274, !275, !"HashBytesH6: argument 0"}
!275 = distinct !{!275, !"HashBytesH6"}
!276 = !{!266, !271, !268, !272}
!277 = !{!278}
!278 = distinct !{!278, !279, !"StoreH6: argument 0"}
!279 = distinct !{!279, !"StoreH6"}
!280 = !{!281}
!281 = distinct !{!281, !279, !"StoreH6: argument 1"}
!282 = !{!283, !281}
!283 = distinct !{!283, !284, !"HashBytesH6: argument 0"}
!284 = distinct !{!284, !"HashBytesH6"}
!285 = !{!278, !281}
!286 = !{!287}
!287 = distinct !{!287, !288, !"StoreH6: argument 0"}
!288 = distinct !{!288, !"StoreH6"}
!289 = !{!290}
!290 = distinct !{!290, !288, !"StoreH6: argument 1"}
!291 = !{!292, !290}
!292 = distinct !{!292, !293, !"HashBytesH6: argument 0"}
!293 = distinct !{!293, !"HashBytesH6"}
!294 = !{!287, !290}
!295 = !{!296}
!296 = distinct !{!296, !297, !"FindLongestMatchH40: argument 0"}
!297 = distinct !{!297, !"FindLongestMatchH40"}
!298 = !{!299, !300, !301}
!299 = distinct !{!299, !297, !"FindLongestMatchH40: argument 1"}
!300 = distinct !{!300, !297, !"FindLongestMatchH40: argument 2"}
!301 = distinct !{!301, !297, !"FindLongestMatchH40: argument 3"}
!302 = !{!303, !299}
!303 = distinct !{!303, !304, !"HashBytesH40: argument 0"}
!304 = distinct !{!304, !"HashBytesH40"}
!305 = !{!296, !300, !301}
!306 = !{!300}
!307 = !{!296, !299, !301}
!308 = !{!296, !299, !300, !301}
!309 = !{!299}
!310 = !{!311, !296}
!311 = distinct !{!311, !312, !"StoreH40: argument 0"}
!312 = distinct !{!312, !"StoreH40"}
!313 = !{!314, !299, !300, !301}
!314 = distinct !{!314, !312, !"StoreH40: argument 1"}
!315 = !{!311, !314, !296, !299, !300, !301}
!316 = !{!317}
!317 = distinct !{!317, !318, !"FindLongestMatchH40: argument 0"}
!318 = distinct !{!318, !"FindLongestMatchH40"}
!319 = !{!320, !321, !322}
!320 = distinct !{!320, !318, !"FindLongestMatchH40: argument 1"}
!321 = distinct !{!321, !318, !"FindLongestMatchH40: argument 2"}
!322 = distinct !{!322, !318, !"FindLongestMatchH40: argument 3"}
!323 = !{!324, !320}
!324 = distinct !{!324, !325, !"HashBytesH40: argument 0"}
!325 = distinct !{!325, !"HashBytesH40"}
!326 = !{!317, !321, !322}
!327 = !{!321}
!328 = !{!317, !320, !322}
!329 = !{!317, !320, !321, !322}
!330 = !{!320}
!331 = !{!332, !317}
!332 = distinct !{!332, !333, !"StoreH40: argument 0"}
!333 = distinct !{!333, !"StoreH40"}
!334 = !{!335, !320, !321, !322}
!335 = distinct !{!335, !333, !"StoreH40: argument 1"}
!336 = !{!332, !335, !317, !320, !321, !322}
!337 = !{!338, !340}
!338 = distinct !{!338, !339, !"StoreH40: argument 0"}
!339 = distinct !{!339, !"StoreH40"}
!340 = distinct !{!340, !341, !"StoreRangeH40: argument 0"}
!341 = distinct !{!341, !"StoreRangeH40"}
!342 = !{!343, !344}
!343 = distinct !{!343, !339, !"StoreH40: argument 1"}
!344 = distinct !{!344, !341, !"StoreRangeH40: argument 1"}
!345 = !{!346, !343, !344}
!346 = distinct !{!346, !347, !"HashBytesH40: argument 0"}
!347 = distinct !{!347, !"HashBytesH40"}
!348 = !{!338, !343, !340, !344}
!349 = !{!350}
!350 = distinct !{!350, !351, !"StoreH40: argument 0"}
!351 = distinct !{!351, !"StoreH40"}
!352 = !{!353}
!353 = distinct !{!353, !351, !"StoreH40: argument 1"}
!354 = !{!355, !353}
!355 = distinct !{!355, !356, !"HashBytesH40: argument 0"}
!356 = distinct !{!356, !"HashBytesH40"}
!357 = !{!350, !353}
!358 = !{!359}
!359 = distinct !{!359, !360, !"StoreH40: argument 0"}
!360 = distinct !{!360, !"StoreH40"}
!361 = !{!362}
!362 = distinct !{!362, !360, !"StoreH40: argument 1"}
!363 = !{!364, !362}
!364 = distinct !{!364, !365, !"HashBytesH40: argument 0"}
!365 = distinct !{!365, !"HashBytesH40"}
!366 = !{!359, !362}
!367 = !{!368, !370}
!368 = distinct !{!368, !369, !"PrepareDistanceCache: argument 0"}
!369 = distinct !{!369, !"PrepareDistanceCache"}
!370 = distinct !{!370, !371, !"PrepareDistanceCacheH41: argument 0"}
!371 = distinct !{!371, !"PrepareDistanceCacheH41"}
!372 = !{!373}
!373 = distinct !{!373, !374, !"FindLongestMatchH41: argument 0"}
!374 = distinct !{!374, !"FindLongestMatchH41"}
!375 = !{!376, !377, !378}
!376 = distinct !{!376, !374, !"FindLongestMatchH41: argument 1"}
!377 = distinct !{!377, !374, !"FindLongestMatchH41: argument 2"}
!378 = distinct !{!378, !374, !"FindLongestMatchH41: argument 3"}
!379 = !{!380, !376}
!380 = distinct !{!380, !381, !"HashBytesH41: argument 0"}
!381 = distinct !{!381, !"HashBytesH41"}
!382 = !{!373, !377, !378}
!383 = !{!377}
!384 = !{!373, !376, !378}
!385 = !{!373, !376, !377, !378}
!386 = !{!376}
!387 = !{!388, !373}
!388 = distinct !{!388, !389, !"StoreH41: argument 0"}
!389 = distinct !{!389, !"StoreH41"}
!390 = !{!391, !376, !377, !378}
!391 = distinct !{!391, !389, !"StoreH41: argument 1"}
!392 = !{!388, !391, !373, !376, !377, !378}
!393 = !{!394}
!394 = distinct !{!394, !395, !"FindLongestMatchH41: argument 0"}
!395 = distinct !{!395, !"FindLongestMatchH41"}
!396 = !{!397, !398, !399}
!397 = distinct !{!397, !395, !"FindLongestMatchH41: argument 1"}
!398 = distinct !{!398, !395, !"FindLongestMatchH41: argument 2"}
!399 = distinct !{!399, !395, !"FindLongestMatchH41: argument 3"}
!400 = !{!401, !397}
!401 = distinct !{!401, !402, !"HashBytesH41: argument 0"}
!402 = distinct !{!402, !"HashBytesH41"}
!403 = !{!394, !398, !399}
!404 = !{!398}
!405 = !{!394, !397, !399}
!406 = !{!394, !397, !398, !399}
!407 = !{!397}
!408 = !{!409, !394}
!409 = distinct !{!409, !410, !"StoreH41: argument 0"}
!410 = distinct !{!410, !"StoreH41"}
!411 = !{!412, !397, !398, !399}
!412 = distinct !{!412, !410, !"StoreH41: argument 1"}
!413 = !{!409, !412, !394, !397, !398, !399}
!414 = !{!415, !417}
!415 = distinct !{!415, !416, !"PrepareDistanceCache: argument 0"}
!416 = distinct !{!416, !"PrepareDistanceCache"}
!417 = distinct !{!417, !418, !"PrepareDistanceCacheH41: argument 0"}
!418 = distinct !{!418, !"PrepareDistanceCacheH41"}
!419 = !{!420, !422}
!420 = distinct !{!420, !421, !"StoreH41: argument 0"}
!421 = distinct !{!421, !"StoreH41"}
!422 = distinct !{!422, !423, !"StoreRangeH41: argument 0"}
!423 = distinct !{!423, !"StoreRangeH41"}
!424 = !{!425, !426}
!425 = distinct !{!425, !421, !"StoreH41: argument 1"}
!426 = distinct !{!426, !423, !"StoreRangeH41: argument 1"}
!427 = !{!428, !425, !426}
!428 = distinct !{!428, !429, !"HashBytesH41: argument 0"}
!429 = distinct !{!429, !"HashBytesH41"}
!430 = !{!420, !425, !422, !426}
!431 = !{!432}
!432 = distinct !{!432, !433, !"StoreH41: argument 0"}
!433 = distinct !{!433, !"StoreH41"}
!434 = !{!435}
!435 = distinct !{!435, !433, !"StoreH41: argument 1"}
!436 = !{!437, !435}
!437 = distinct !{!437, !438, !"HashBytesH41: argument 0"}
!438 = distinct !{!438, !"HashBytesH41"}
!439 = !{!432, !435}
!440 = !{!441}
!441 = distinct !{!441, !442, !"StoreH41: argument 0"}
!442 = distinct !{!442, !"StoreH41"}
!443 = !{!444}
!444 = distinct !{!444, !442, !"StoreH41: argument 1"}
!445 = !{!446, !444}
!446 = distinct !{!446, !447, !"HashBytesH41: argument 0"}
!447 = distinct !{!447, !"HashBytesH41"}
!448 = !{!441, !444}
!449 = !{!450, !452}
!450 = distinct !{!450, !451, !"PrepareDistanceCache: argument 0"}
!451 = distinct !{!451, !"PrepareDistanceCache"}
!452 = distinct !{!452, !453, !"PrepareDistanceCacheH42: argument 0"}
!453 = distinct !{!453, !"PrepareDistanceCacheH42"}
!454 = !{!455}
!455 = distinct !{!455, !456, !"FindLongestMatchH42: argument 0"}
!456 = distinct !{!456, !"FindLongestMatchH42"}
!457 = !{!458, !459, !460}
!458 = distinct !{!458, !456, !"FindLongestMatchH42: argument 1"}
!459 = distinct !{!459, !456, !"FindLongestMatchH42: argument 2"}
!460 = distinct !{!460, !456, !"FindLongestMatchH42: argument 3"}
!461 = !{!462, !458}
!462 = distinct !{!462, !463, !"HashBytesH42: argument 0"}
!463 = distinct !{!463, !"HashBytesH42"}
!464 = !{!455, !459, !460}
!465 = !{!459}
!466 = !{!455, !458, !460}
!467 = !{!455, !458, !459, !460}
!468 = !{!458}
!469 = !{!470, !455}
!470 = distinct !{!470, !471, !"StoreH42: argument 0"}
!471 = distinct !{!471, !"StoreH42"}
!472 = !{!473, !458, !459, !460}
!473 = distinct !{!473, !471, !"StoreH42: argument 1"}
!474 = !{!470, !473, !455, !458, !459, !460}
!475 = !{!476}
!476 = distinct !{!476, !477, !"FindLongestMatchH42: argument 0"}
!477 = distinct !{!477, !"FindLongestMatchH42"}
!478 = !{!479, !480, !481}
!479 = distinct !{!479, !477, !"FindLongestMatchH42: argument 1"}
!480 = distinct !{!480, !477, !"FindLongestMatchH42: argument 2"}
!481 = distinct !{!481, !477, !"FindLongestMatchH42: argument 3"}
!482 = !{!483, !479}
!483 = distinct !{!483, !484, !"HashBytesH42: argument 0"}
!484 = distinct !{!484, !"HashBytesH42"}
!485 = !{!476, !480, !481}
!486 = !{!480}
!487 = !{!476, !479, !481}
!488 = !{!476, !479, !480, !481}
!489 = !{!479}
!490 = !{!491, !476}
!491 = distinct !{!491, !492, !"StoreH42: argument 0"}
!492 = distinct !{!492, !"StoreH42"}
!493 = !{!494, !479, !480, !481}
!494 = distinct !{!494, !492, !"StoreH42: argument 1"}
!495 = !{!491, !494, !476, !479, !480, !481}
!496 = !{!497, !499}
!497 = distinct !{!497, !498, !"PrepareDistanceCache: argument 0"}
!498 = distinct !{!498, !"PrepareDistanceCache"}
!499 = distinct !{!499, !500, !"PrepareDistanceCacheH42: argument 0"}
!500 = distinct !{!500, !"PrepareDistanceCacheH42"}
!501 = !{!502, !504}
!502 = distinct !{!502, !503, !"StoreH42: argument 0"}
!503 = distinct !{!503, !"StoreH42"}
!504 = distinct !{!504, !505, !"StoreRangeH42: argument 0"}
!505 = distinct !{!505, !"StoreRangeH42"}
!506 = !{!507, !508}
!507 = distinct !{!507, !503, !"StoreH42: argument 1"}
!508 = distinct !{!508, !505, !"StoreRangeH42: argument 1"}
!509 = !{!510, !507, !508}
!510 = distinct !{!510, !511, !"HashBytesH42: argument 0"}
!511 = distinct !{!511, !"HashBytesH42"}
!512 = !{!502, !507, !504, !508}
!513 = !{!514}
!514 = distinct !{!514, !515, !"StoreH42: argument 0"}
!515 = distinct !{!515, !"StoreH42"}
!516 = !{!517}
!517 = distinct !{!517, !515, !"StoreH42: argument 1"}
!518 = !{!519, !517}
!519 = distinct !{!519, !520, !"HashBytesH42: argument 0"}
!520 = distinct !{!520, !"HashBytesH42"}
!521 = !{!514, !517}
!522 = !{!523}
!523 = distinct !{!523, !524, !"StoreH42: argument 0"}
!524 = distinct !{!524, !"StoreH42"}
!525 = !{!526}
!526 = distinct !{!526, !524, !"StoreH42: argument 1"}
!527 = !{!528, !526}
!528 = distinct !{!528, !529, !"HashBytesH42: argument 0"}
!529 = distinct !{!529, !"HashBytesH42"}
!530 = !{!523, !526}
!531 = !{!532}
!532 = distinct !{!532, !533, !"FindLongestMatchH54: argument 0"}
!533 = distinct !{!533, !"FindLongestMatchH54"}
!534 = !{!535, !536, !537}
!535 = distinct !{!535, !533, !"FindLongestMatchH54: argument 1"}
!536 = distinct !{!536, !533, !"FindLongestMatchH54: argument 2"}
!537 = distinct !{!537, !533, !"FindLongestMatchH54: argument 3"}
!538 = !{!535}
!539 = !{!532, !536, !537}
!540 = !{!536}
!541 = !{!532, !535, !537}
!542 = !{!532, !535, !536, !537}
!543 = !{!544}
!544 = distinct !{!544, !545, !"FindLongestMatchH54: argument 0"}
!545 = distinct !{!545, !"FindLongestMatchH54"}
!546 = !{!547, !548, !549}
!547 = distinct !{!547, !545, !"FindLongestMatchH54: argument 1"}
!548 = distinct !{!548, !545, !"FindLongestMatchH54: argument 2"}
!549 = distinct !{!549, !545, !"FindLongestMatchH54: argument 3"}
!550 = !{!547}
!551 = !{!544, !548, !549}
!552 = !{!548}
!553 = !{!544, !547, !549}
!554 = !{!544, !547, !548, !549}
!555 = !{!556, !558}
!556 = distinct !{!556, !557, !"StoreH54: argument 0"}
!557 = distinct !{!557, !"StoreH54"}
!558 = distinct !{!558, !559, !"StoreRangeH54: argument 0"}
!559 = distinct !{!559, !"StoreRangeH54"}
!560 = !{!561, !562}
!561 = distinct !{!561, !557, !"StoreH54: argument 1"}
!562 = distinct !{!562, !559, !"StoreRangeH54: argument 1"}
!563 = !{!556, !561, !558, !562}
!564 = !{!565}
!565 = distinct !{!565, !566, !"StoreH54: argument 0"}
!566 = distinct !{!566, !"StoreH54"}
!567 = !{!568}
!568 = distinct !{!568, !566, !"StoreH54: argument 1"}
!569 = !{!565, !568}
!570 = !{!571}
!571 = distinct !{!571, !572, !"StoreH54: argument 0"}
!572 = distinct !{!572, !"StoreH54"}
!573 = !{!574}
!574 = distinct !{!574, !572, !"StoreH54: argument 1"}
!575 = !{!571, !574}
!576 = !{!577, !579}
!577 = distinct !{!577, !578, !"FindLongestMatchH3: argument 0"}
!578 = distinct !{!578, !"FindLongestMatchH3"}
!579 = distinct !{!579, !580, !"FindLongestMatchH35: argument 0"}
!580 = distinct !{!580, !"FindLongestMatchH35"}
!581 = !{!582, !583, !584, !585, !586, !587}
!582 = distinct !{!582, !578, !"FindLongestMatchH3: argument 1"}
!583 = distinct !{!583, !578, !"FindLongestMatchH3: argument 2"}
!584 = distinct !{!584, !578, !"FindLongestMatchH3: argument 3"}
!585 = distinct !{!585, !580, !"FindLongestMatchH35: argument 1"}
!586 = distinct !{!586, !580, !"FindLongestMatchH35: argument 2"}
!587 = distinct !{!587, !580, !"FindLongestMatchH35: argument 3"}
!588 = !{!582, !585}
!589 = !{!577, !583, !584, !579, !586, !587}
!590 = !{!583, !586}
!591 = !{!577, !582, !584, !579, !585, !587}
!592 = !{!577, !582, !583, !584, !579, !585, !586, !587}
!593 = !{!594, !579}
!594 = distinct !{!594, !595, !"FindLongestMatchHROLLING_FAST: argument 0"}
!595 = distinct !{!595, !"FindLongestMatchHROLLING_FAST"}
!596 = !{!597, !598, !585, !586, !587}
!597 = distinct !{!597, !595, !"FindLongestMatchHROLLING_FAST: argument 1"}
!598 = distinct !{!598, !595, !"FindLongestMatchHROLLING_FAST: argument 2"}
!599 = !{!597, !585}
!600 = !{!594, !598, !579, !586, !587}
!601 = !{!594, !597, !598, !579, !585, !586, !587}
!602 = !{!603, !605}
!603 = distinct !{!603, !604, !"FindLongestMatchH3: argument 0"}
!604 = distinct !{!604, !"FindLongestMatchH3"}
!605 = distinct !{!605, !606, !"FindLongestMatchH35: argument 0"}
!606 = distinct !{!606, !"FindLongestMatchH35"}
!607 = !{!608, !609, !610, !611, !612, !613}
!608 = distinct !{!608, !604, !"FindLongestMatchH3: argument 1"}
!609 = distinct !{!609, !604, !"FindLongestMatchH3: argument 2"}
!610 = distinct !{!610, !604, !"FindLongestMatchH3: argument 3"}
!611 = distinct !{!611, !606, !"FindLongestMatchH35: argument 1"}
!612 = distinct !{!612, !606, !"FindLongestMatchH35: argument 2"}
!613 = distinct !{!613, !606, !"FindLongestMatchH35: argument 3"}
!614 = !{!608, !611}
!615 = !{!603, !609, !610, !605, !612, !613}
!616 = !{!609, !612}
!617 = !{!603, !608, !610, !605, !611, !613}
!618 = !{!603, !608, !609, !610, !605, !611, !612, !613}
!619 = !{!620, !605}
!620 = distinct !{!620, !621, !"FindLongestMatchHROLLING_FAST: argument 0"}
!621 = distinct !{!621, !"FindLongestMatchHROLLING_FAST"}
!622 = !{!623, !624, !611, !612, !613}
!623 = distinct !{!623, !621, !"FindLongestMatchHROLLING_FAST: argument 1"}
!624 = distinct !{!624, !621, !"FindLongestMatchHROLLING_FAST: argument 2"}
!625 = !{!623, !611}
!626 = !{!620, !624, !605, !612, !613}
!627 = !{!620, !623, !624, !605, !611, !612, !613}
!628 = !{!629, !631, !633}
!629 = distinct !{!629, !630, !"StoreH3: argument 0"}
!630 = distinct !{!630, !"StoreH3"}
!631 = distinct !{!631, !632, !"StoreRangeH3: argument 0"}
!632 = distinct !{!632, !"StoreRangeH3"}
!633 = distinct !{!633, !634, !"StoreRangeH35: argument 0"}
!634 = distinct !{!634, !"StoreRangeH35"}
!635 = !{!636, !637, !638}
!636 = distinct !{!636, !630, !"StoreH3: argument 1"}
!637 = distinct !{!637, !632, !"StoreRangeH3: argument 1"}
!638 = distinct !{!638, !634, !"StoreRangeH35: argument 1"}
!639 = !{!629, !636, !631, !637, !633, !638}
!640 = !{!641, !643}
!641 = distinct !{!641, !642, !"StoreH3: argument 0"}
!642 = distinct !{!642, !"StoreH3"}
!643 = distinct !{!643, !644, !"StoreH35: argument 0"}
!644 = distinct !{!644, !"StoreH35"}
!645 = !{!646, !647}
!646 = distinct !{!646, !642, !"StoreH3: argument 1"}
!647 = distinct !{!647, !644, !"StoreH35: argument 1"}
!648 = !{!641, !646, !643, !647}
!649 = !{!650, !652}
!650 = distinct !{!650, !651, !"StoreH3: argument 0"}
!651 = distinct !{!651, !"StoreH3"}
!652 = distinct !{!652, !653, !"StoreH35: argument 0"}
!653 = distinct !{!653, !"StoreH35"}
!654 = !{!655, !656}
!655 = distinct !{!655, !651, !"StoreH3: argument 1"}
!656 = distinct !{!656, !653, !"StoreH35: argument 1"}
!657 = !{!650, !655, !652, !656}
!658 = !{!659, !661}
!659 = distinct !{!659, !660, !"FindLongestMatchH54: argument 0"}
!660 = distinct !{!660, !"FindLongestMatchH54"}
!661 = distinct !{!661, !662, !"FindLongestMatchH55: argument 0"}
!662 = distinct !{!662, !"FindLongestMatchH55"}
!663 = !{!664, !665, !666, !667, !668, !669}
!664 = distinct !{!664, !660, !"FindLongestMatchH54: argument 1"}
!665 = distinct !{!665, !660, !"FindLongestMatchH54: argument 2"}
!666 = distinct !{!666, !660, !"FindLongestMatchH54: argument 3"}
!667 = distinct !{!667, !662, !"FindLongestMatchH55: argument 1"}
!668 = distinct !{!668, !662, !"FindLongestMatchH55: argument 2"}
!669 = distinct !{!669, !662, !"FindLongestMatchH55: argument 3"}
!670 = !{!664, !667}
!671 = !{!659, !665, !666, !661, !668, !669}
!672 = !{!665, !668}
!673 = !{!659, !664, !666, !661, !667, !669}
!674 = !{!659, !664, !665, !666, !661, !667, !668, !669}
!675 = !{!676, !661}
!676 = distinct !{!676, !677, !"FindLongestMatchHROLLING_FAST: argument 0"}
!677 = distinct !{!677, !"FindLongestMatchHROLLING_FAST"}
!678 = !{!679, !680, !667, !668, !669}
!679 = distinct !{!679, !677, !"FindLongestMatchHROLLING_FAST: argument 1"}
!680 = distinct !{!680, !677, !"FindLongestMatchHROLLING_FAST: argument 2"}
!681 = !{!679, !667}
!682 = !{!676, !680, !661, !668, !669}
!683 = !{!676, !679, !680, !661, !667, !668, !669}
!684 = !{!685, !687}
!685 = distinct !{!685, !686, !"FindLongestMatchH54: argument 0"}
!686 = distinct !{!686, !"FindLongestMatchH54"}
!687 = distinct !{!687, !688, !"FindLongestMatchH55: argument 0"}
!688 = distinct !{!688, !"FindLongestMatchH55"}
!689 = !{!690, !691, !692, !693, !694, !695}
!690 = distinct !{!690, !686, !"FindLongestMatchH54: argument 1"}
!691 = distinct !{!691, !686, !"FindLongestMatchH54: argument 2"}
!692 = distinct !{!692, !686, !"FindLongestMatchH54: argument 3"}
!693 = distinct !{!693, !688, !"FindLongestMatchH55: argument 1"}
!694 = distinct !{!694, !688, !"FindLongestMatchH55: argument 2"}
!695 = distinct !{!695, !688, !"FindLongestMatchH55: argument 3"}
!696 = !{!690, !693}
!697 = !{!685, !691, !692, !687, !694, !695}
!698 = !{!691, !694}
!699 = !{!685, !690, !692, !687, !693, !695}
!700 = !{!685, !690, !691, !692, !687, !693, !694, !695}
!701 = !{!702, !687}
!702 = distinct !{!702, !703, !"FindLongestMatchHROLLING_FAST: argument 0"}
!703 = distinct !{!703, !"FindLongestMatchHROLLING_FAST"}
!704 = !{!705, !706, !693, !694, !695}
!705 = distinct !{!705, !703, !"FindLongestMatchHROLLING_FAST: argument 1"}
!706 = distinct !{!706, !703, !"FindLongestMatchHROLLING_FAST: argument 2"}
!707 = !{!705, !693}
!708 = !{!702, !706, !687, !694, !695}
!709 = !{!702, !705, !706, !687, !693, !694, !695}
!710 = !{!711, !713, !715}
!711 = distinct !{!711, !712, !"StoreH54: argument 0"}
!712 = distinct !{!712, !"StoreH54"}
!713 = distinct !{!713, !714, !"StoreRangeH54: argument 0"}
!714 = distinct !{!714, !"StoreRangeH54"}
!715 = distinct !{!715, !716, !"StoreRangeH55: argument 0"}
!716 = distinct !{!716, !"StoreRangeH55"}
!717 = !{!718, !719, !720}
!718 = distinct !{!718, !712, !"StoreH54: argument 1"}
!719 = distinct !{!719, !714, !"StoreRangeH54: argument 1"}
!720 = distinct !{!720, !716, !"StoreRangeH55: argument 1"}
!721 = !{!711, !718, !713, !719, !715, !720}
!722 = !{!723, !725}
!723 = distinct !{!723, !724, !"StoreH54: argument 0"}
!724 = distinct !{!724, !"StoreH54"}
!725 = distinct !{!725, !726, !"StoreH55: argument 0"}
!726 = distinct !{!726, !"StoreH55"}
!727 = !{!728, !729}
!728 = distinct !{!728, !724, !"StoreH54: argument 1"}
!729 = distinct !{!729, !726, !"StoreH55: argument 1"}
!730 = !{!723, !728, !725, !729}
!731 = !{!732, !734}
!732 = distinct !{!732, !733, !"StoreH54: argument 0"}
!733 = distinct !{!733, !"StoreH54"}
!734 = distinct !{!734, !735, !"StoreH55: argument 0"}
!735 = distinct !{!735, !"StoreH55"}
!736 = !{!737, !738}
!737 = distinct !{!737, !733, !"StoreH54: argument 1"}
!738 = distinct !{!738, !735, !"StoreH55: argument 1"}
!739 = !{!732, !737, !734, !738}
!740 = !{!741, !743}
!741 = distinct !{!741, !742, !"PrepareDistanceCacheH6: argument 0"}
!742 = distinct !{!742, !"PrepareDistanceCacheH6"}
!743 = distinct !{!743, !744, !"PrepareDistanceCacheH65: argument 0"}
!744 = distinct !{!744, !"PrepareDistanceCacheH65"}
!745 = !{!746, !747}
!746 = distinct !{!746, !742, !"PrepareDistanceCacheH6: argument 1"}
!747 = distinct !{!747, !744, !"PrepareDistanceCacheH65: argument 1"}
!748 = !{!749, !746, !747}
!749 = distinct !{!749, !750, !"PrepareDistanceCache: argument 0"}
!750 = distinct !{!750, !"PrepareDistanceCache"}
!751 = !{!752, !754}
!752 = distinct !{!752, !753, !"FindLongestMatchH6: argument 0"}
!753 = distinct !{!753, !"FindLongestMatchH6"}
!754 = distinct !{!754, !755, !"FindLongestMatchH65: argument 0"}
!755 = distinct !{!755, !"FindLongestMatchH65"}
!756 = !{!757, !758, !759, !760, !761, !762}
!757 = distinct !{!757, !753, !"FindLongestMatchH6: argument 1"}
!758 = distinct !{!758, !753, !"FindLongestMatchH6: argument 2"}
!759 = distinct !{!759, !753, !"FindLongestMatchH6: argument 3"}
!760 = distinct !{!760, !755, !"FindLongestMatchH65: argument 1"}
!761 = distinct !{!761, !755, !"FindLongestMatchH65: argument 2"}
!762 = distinct !{!762, !755, !"FindLongestMatchH65: argument 3"}
!763 = !{!758, !761}
!764 = !{!752, !757, !759, !754, !760, !762}
!765 = !{!757, !760}
!766 = !{!752, !758, !759, !754, !761, !762}
!767 = !{!768, !757, !760}
!768 = distinct !{!768, !769, !"HashBytesH6: argument 0"}
!769 = distinct !{!769, !"HashBytesH6"}
!770 = !{!752, !757, !758, !759, !754, !760, !761, !762}
!771 = !{!772, !754}
!772 = distinct !{!772, !773, !"FindLongestMatchHROLLING: argument 0"}
!773 = distinct !{!773, !"FindLongestMatchHROLLING"}
!774 = !{!775, !776, !760, !761, !762}
!775 = distinct !{!775, !773, !"FindLongestMatchHROLLING: argument 1"}
!776 = distinct !{!776, !773, !"FindLongestMatchHROLLING: argument 2"}
!777 = !{!775, !760}
!778 = !{!772, !776, !754, !761, !762}
!779 = !{!772, !775, !776, !754, !760, !761, !762}
!780 = !{!781, !783}
!781 = distinct !{!781, !782, !"FindLongestMatchH6: argument 0"}
!782 = distinct !{!782, !"FindLongestMatchH6"}
!783 = distinct !{!783, !784, !"FindLongestMatchH65: argument 0"}
!784 = distinct !{!784, !"FindLongestMatchH65"}
!785 = !{!786, !787, !788, !789, !790, !791}
!786 = distinct !{!786, !782, !"FindLongestMatchH6: argument 1"}
!787 = distinct !{!787, !782, !"FindLongestMatchH6: argument 2"}
!788 = distinct !{!788, !782, !"FindLongestMatchH6: argument 3"}
!789 = distinct !{!789, !784, !"FindLongestMatchH65: argument 1"}
!790 = distinct !{!790, !784, !"FindLongestMatchH65: argument 2"}
!791 = distinct !{!791, !784, !"FindLongestMatchH65: argument 3"}
!792 = !{!787, !790}
!793 = !{!781, !786, !788, !783, !789, !791}
!794 = !{!786, !789}
!795 = !{!781, !787, !788, !783, !790, !791}
!796 = !{!797, !786, !789}
!797 = distinct !{!797, !798, !"HashBytesH6: argument 0"}
!798 = distinct !{!798, !"HashBytesH6"}
!799 = !{!781, !786, !787, !788, !783, !789, !790, !791}
!800 = !{!801, !783}
!801 = distinct !{!801, !802, !"FindLongestMatchHROLLING: argument 0"}
!802 = distinct !{!802, !"FindLongestMatchHROLLING"}
!803 = !{!804, !805, !789, !790, !791}
!804 = distinct !{!804, !802, !"FindLongestMatchHROLLING: argument 1"}
!805 = distinct !{!805, !802, !"FindLongestMatchHROLLING: argument 2"}
!806 = !{!804, !789}
!807 = !{!801, !805, !783, !790, !791}
!808 = !{!801, !804, !805, !783, !789, !790, !791}
!809 = !{!810, !812}
!810 = distinct !{!810, !811, !"PrepareDistanceCacheH6: argument 0"}
!811 = distinct !{!811, !"PrepareDistanceCacheH6"}
!812 = distinct !{!812, !813, !"PrepareDistanceCacheH65: argument 0"}
!813 = distinct !{!813, !"PrepareDistanceCacheH65"}
!814 = !{!815, !816}
!815 = distinct !{!815, !811, !"PrepareDistanceCacheH6: argument 1"}
!816 = distinct !{!816, !813, !"PrepareDistanceCacheH65: argument 1"}
!817 = !{!818, !815, !816}
!818 = distinct !{!818, !819, !"PrepareDistanceCache: argument 0"}
!819 = distinct !{!819, !"PrepareDistanceCache"}
!820 = !{!821, !823, !825}
!821 = distinct !{!821, !822, !"StoreH6: argument 0"}
!822 = distinct !{!822, !"StoreH6"}
!823 = distinct !{!823, !824, !"StoreRangeH6: argument 0"}
!824 = distinct !{!824, !"StoreRangeH6"}
!825 = distinct !{!825, !826, !"StoreRangeH65: argument 0"}
!826 = distinct !{!826, !"StoreRangeH65"}
!827 = !{!828, !829, !830}
!828 = distinct !{!828, !822, !"StoreH6: argument 1"}
!829 = distinct !{!829, !824, !"StoreRangeH6: argument 1"}
!830 = distinct !{!830, !826, !"StoreRangeH65: argument 1"}
!831 = !{!832, !828, !829, !830}
!832 = distinct !{!832, !833, !"HashBytesH6: argument 0"}
!833 = distinct !{!833, !"HashBytesH6"}
!834 = !{!821, !828, !823, !829, !825, !830}
!835 = !{!836, !838}
!836 = distinct !{!836, !837, !"StoreH6: argument 0"}
!837 = distinct !{!837, !"StoreH6"}
!838 = distinct !{!838, !839, !"StoreH65: argument 0"}
!839 = distinct !{!839, !"StoreH65"}
!840 = !{!841, !842}
!841 = distinct !{!841, !837, !"StoreH6: argument 1"}
!842 = distinct !{!842, !839, !"StoreH65: argument 1"}
!843 = !{!844, !841, !842}
!844 = distinct !{!844, !845, !"HashBytesH6: argument 0"}
!845 = distinct !{!845, !"HashBytesH6"}
!846 = !{!836, !841, !838, !842}
!847 = !{!848, !850}
!848 = distinct !{!848, !849, !"StoreH6: argument 0"}
!849 = distinct !{!849, !"StoreH6"}
!850 = distinct !{!850, !851, !"StoreH65: argument 0"}
!851 = distinct !{!851, !"StoreH65"}
!852 = !{!853, !854}
!853 = distinct !{!853, !849, !"StoreH6: argument 1"}
!854 = distinct !{!854, !851, !"StoreH65: argument 1"}
!855 = !{!856, !853, !854}
!856 = distinct !{!856, !857, !"HashBytesH6: argument 0"}
!857 = distinct !{!857, !"HashBytesH6"}
!858 = !{!848, !853, !850, !854}
