; ModuleID = '../../third_party/dawn/src/common/DynamicLib.cpp'
source_filename = "../../third_party/dawn/src/common/DynamicLib.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.DynamicLib = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10DynamicLibD1Ev = hidden unnamed_addr alias void (%class.DynamicLib*), void (%class.DynamicLib*)* @_ZN10DynamicLibD2Ev
@_ZN10DynamicLibC1EOS_ = hidden unnamed_addr alias void (%class.DynamicLib*, %class.DynamicLib*), void (%class.DynamicLib*, %class.DynamicLib*)* @_ZN10DynamicLibC2EOS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10DynamicLibD2Ev(%class.DynamicLib* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.DynamicLib, %class.DynamicLib* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @dlclose(i8* nonnull %3) #8
  store i8* null, i8** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10DynamicLib5CloseEv(%class.DynamicLib* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.DynamicLib, %class.DynamicLib* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @dlclose(i8* nonnull %3) #8
  store i8* null, i8** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10DynamicLibC2EOS_(%class.DynamicLib* nocapture, %class.DynamicLib* nocapture dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.DynamicLib, %class.DynamicLib* %0, i64 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = bitcast %class.DynamicLib* %0 to i64*
  %5 = bitcast %class.DynamicLib* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(8) %class.DynamicLib* @_ZN10DynamicLibaSEOS_(%class.DynamicLib* returned, %class.DynamicLib* nocapture dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %class.DynamicLib* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %class.DynamicLib* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  store i64 %4, i64* %5, align 8
  ret %class.DynamicLib* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10DynamicLib5ValidEv(%class.DynamicLib* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.DynamicLib, %class.DynamicLib* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10DynamicLib4OpenERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%class.DynamicLib* nocapture, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = tail call i8* @dlopen(i8* %11, i32 2) #8
  %13 = getelementptr inbounds %class.DynamicLib, %class.DynamicLib* %0, i64 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = icmp eq i8* %12, null
  %15 = icmp ne %"class.std::__1::basic_string"* %2, null
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %46

17:                                               ; preds = %3
  %18 = tail call i8* @dlerror() #8
  %19 = load i8, i8* %18, align 1
  %20 = tail call i1 @llvm.is.constant.i8(i8 %19) #8
  br i1 %20, label %21, label %44

21:                                               ; preds = %17
  %22 = tail call i64 @strlen(i8* %18) #8
  %23 = icmp ult i64 %22, 23
  br i1 %23, label %24, label %42

24:                                               ; preds = %21
  %25 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  br label %36

33:                                               ; preds = %24
  %34 = trunc i64 %22 to i8
  store i8 %34, i8* %26, align 1
  %35 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %36

36:                                               ; preds = %33, %29
  %37 = phi i8* [ %32, %29 ], [ %35, %33 ]
  %38 = icmp eq i64 %22, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %18, i64 %22, i1 false) #8
  br label %40

40:                                               ; preds = %39, %36
  %41 = getelementptr inbounds i8, i8* %37, i64 %22
  store i8 0, i8* %41, align 1
  br label %46

42:                                               ; preds = %21
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %18, i64 %22) #8
  br label %46

44:                                               ; preds = %17
  %45 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* %18) #8
  br label %46

46:                                               ; preds = %44, %42, %40, %3
  %47 = load i8*, i8** %13, align 8
  %48 = icmp ne i8* %47, null
  ret i1 %48
}

; Function Attrs: nounwind
declare i8* @dlopen(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @dlerror() local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @dlclose(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK10DynamicLib7GetProcERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%class.DynamicLib* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.DynamicLib, %class.DynamicLib* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = select i1 %9, i8* %11, i8* %12
  %14 = tail call i8* @dlsym(i8* %5, i8* %13) #8
  %15 = icmp eq i8* %14, null
  %16 = icmp ne %"class.std::__1::basic_string"* %2, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %47

18:                                               ; preds = %3
  %19 = tail call i8* @dlerror() #8
  %20 = load i8, i8* %19, align 1
  %21 = tail call i1 @llvm.is.constant.i8(i8 %20) #8
  br i1 %21, label %22, label %45

22:                                               ; preds = %18
  %23 = tail call i64 @strlen(i8* %19) #8
  %24 = icmp ult i64 %23, 23
  br i1 %24, label %25, label %43

25:                                               ; preds = %22
  %26 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %23, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  br label %37

34:                                               ; preds = %25
  %35 = trunc i64 %23 to i8
  store i8 %35, i8* %27, align 1
  %36 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i8* [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i64 %23, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %19, i64 %23, i1 false) #8
  br label %41

41:                                               ; preds = %40, %37
  %42 = getelementptr inbounds i8, i8* %38, i64 %23
  store i8 0, i8* %42, align 1
  br label %47

43:                                               ; preds = %22
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %19, i64 %23) #8
  br label %47

45:                                               ; preds = %18
  %46 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %2, i8* %19) #8
  br label %47

47:                                               ; preds = %45, %43, %41, %3
  ret i8* %14
}

; Function Attrs: nounwind
declare i8* @dlsym(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
