; ModuleID = '../../chrome/browser/extensions/api/tabs/app_base_window.cc'
source_filename = "../../chrome/browser/extensions/api/tabs/app_base_window.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::AppBaseWindow" = type { %"class.ui::BaseWindow", %"class.extensions::AppWindow"* }
%"class.ui::BaseWindow" = type { i32 (...)** }
%"class.extensions::AppWindow" = type { %"class.content::WebContentsDelegate", %"class.content::WebContentsObserver", %"class.web_modal::WebContentsModalDialogManagerDelegate", %"class.extensions::ExtensionFunctionDispatcher::Delegate", %"class.extensions::ExtensionRegistryObserver", %"class.content::BrowserContext"*, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.SessionID, i32, %"class.gfx::Image", %class.GURL, %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %class.GURL, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector", i8, %"class.base::WeakPtrFactory" }
%"class.content::WebContentsDelegate" = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.content::WebContentsObserver" = type { %"class.IPC::Listener", %"class.content::WebContents"* }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.web_modal::WebContentsModalDialogManagerDelegate" = type { i32 (...)** }
%"class.extensions::ExtensionFunctionDispatcher::Delegate" = type { i32 (...)** }
%"class.extensions::ExtensionRegistryObserver" = type { i32 (...)** }
%"class.content::BrowserContext" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SessionID = type { i32 }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.extensions::NativeAppWindow"* }
%"class.extensions::NativeAppWindow" = type { %"class.ui::BaseWindow", %"class.web_modal::WebContentsModalDialogHost" }
%"class.web_modal::WebContentsModalDialogHost" = type { %"class.web_modal::ModalDialogHost" }
%"class.web_modal::ModalDialogHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.extensions::AppWindowContents"* }
%"class.extensions::AppWindowContents" = type { i32 (...)** }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.extensions::AppDelegate"* }
%"class.extensions::AppDelegate" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.extensions::AppWebContentsHelper"* }
%"class.extensions::AppWebContentsHelper" = type opaque
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.45" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.base::OnceCallback"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i8 }
%"class.aura::Window" = type opaque
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.extensions::SizeConstraints" = type { %"class.gfx::Size", %"class.gfx::Size" }

@_ZTVN10extensions13AppBaseWindowE = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow8IsActiveEv to i8*), i8* bitcast (i1 (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow11IsMaximizedEv to i8*), i8* bitcast (i1 (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow11IsMinimizedEv to i8*), i8* bitcast (i1 (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow12IsFullscreenEv to i8*), i8* bitcast (%"class.aura::Window"* (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow15GetNativeWindowEv to i8*), i8* bitcast ({ i64, i64 } (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow17GetRestoredBoundsEv to i8*), i8* bitcast (i32 (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow16GetRestoredStateEv to i8*), i8* bitcast ({ i64, i64 } (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow9GetBoundsEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindow4ShowEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindow4HideEv to i8*), i8* bitcast (i1 (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow9IsVisibleEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindow12ShowInactiveEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindow5CloseEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindow8ActivateEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindow10DeactivateEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindow8MaximizeEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindow8MinimizeEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindow7RestoreEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*, %"class.gfx::Rect"*)* @_ZN10extensions13AppBaseWindow9SetBoundsERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*, i1)* @_ZN10extensions13AppBaseWindow10FlashFrameEb to i8*), i8* bitcast (i32 (%"class.extensions::AppBaseWindow"*)* @_ZNK10extensions13AppBaseWindow14GetZOrderLevelEv to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*, i32)* @_ZN10extensions13AppBaseWindow14SetZOrderLevelEN2ui11ZOrderLevelE to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindowD2Ev to i8*), i8* bitcast (void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindowD0Ev to i8*)] }, align 8

@_ZN10extensions13AppBaseWindowC1EPNS_9AppWindowE = hidden unnamed_addr alias void (%"class.extensions::AppBaseWindow"*, %"class.extensions::AppWindow"*), void (%"class.extensions::AppBaseWindow"*, %"class.extensions::AppWindow"*)* @_ZN10extensions13AppBaseWindowC2EPNS_9AppWindowE
@_ZN10extensions13AppBaseWindowD1Ev = hidden unnamed_addr alias void (%"class.extensions::AppBaseWindow"*), void (%"class.extensions::AppBaseWindow"*)* @_ZN10extensions13AppBaseWindowD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions13AppBaseWindowC2EPNS_9AppWindowE(%"class.extensions::AppBaseWindow"* nocapture, %"class.extensions::AppWindow"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN10extensions13AppBaseWindowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  store %"class.extensions::AppWindow"* %1, %"class.extensions::AppWindow"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindowD2Ev(%"class.extensions::AppBaseWindow"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindowD0Ev(%"class.extensions::AppBaseWindow"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.extensions::AppBaseWindow"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13AppBaseWindow8IsActiveEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to i1 (%"class.ui::BaseWindow"*)***
  %7 = load i1 (%"class.ui::BaseWindow"*)**, i1 (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = load i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.ui::BaseWindow"* %5) #8
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::NativeAppWindow"* @_ZNK10extensions13AppBaseWindow13GetBaseWindowEv(%"class.extensions::AppBaseWindow"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  ret %"class.extensions::NativeAppWindow"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13AppBaseWindow11IsMaximizedEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to i1 (%"class.ui::BaseWindow"*)***
  %7 = load i1 (%"class.ui::BaseWindow"*)**, i1 (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %7, i64 1
  %9 = load i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.ui::BaseWindow"* %5) #8
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13AppBaseWindow11IsMinimizedEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to i1 (%"class.ui::BaseWindow"*)***
  %7 = load i1 (%"class.ui::BaseWindow"*)**, i1 (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %7, i64 2
  %9 = load i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.ui::BaseWindow"* %5) #8
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13AppBaseWindow12IsFullscreenEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to i1 (%"class.ui::BaseWindow"*)***
  %7 = load i1 (%"class.ui::BaseWindow"*)**, i1 (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %7, i64 3
  %9 = load i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.ui::BaseWindow"* %5) #8
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZNK10extensions13AppBaseWindow15GetNativeWindowEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to %"class.aura::Window"* (%"class.ui::BaseWindow"*)***
  %7 = load %"class.aura::Window"* (%"class.ui::BaseWindow"*)**, %"class.aura::Window"* (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.aura::Window"* (%"class.ui::BaseWindow"*)*, %"class.aura::Window"* (%"class.ui::BaseWindow"*)** %7, i64 4
  %9 = load %"class.aura::Window"* (%"class.ui::BaseWindow"*)*, %"class.aura::Window"* (%"class.ui::BaseWindow"*)** %8, align 8
  %10 = tail call %"class.aura::Window"* %9(%"class.ui::BaseWindow"* %5) #8
  ret %"class.aura::Window"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK10extensions13AppBaseWindow17GetRestoredBoundsEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to { i64, i64 } (%"class.ui::BaseWindow"*)***
  %7 = load { i64, i64 } (%"class.ui::BaseWindow"*)**, { i64, i64 } (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%"class.ui::BaseWindow"*)*, { i64, i64 } (%"class.ui::BaseWindow"*)** %7, i64 5
  %9 = load { i64, i64 } (%"class.ui::BaseWindow"*)*, { i64, i64 } (%"class.ui::BaseWindow"*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%"class.ui::BaseWindow"* %5) #8
  ret { i64, i64 } %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10extensions13AppBaseWindow16GetRestoredStateEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to i32 (%"class.ui::BaseWindow"*)***
  %7 = load i32 (%"class.ui::BaseWindow"*)**, i32 (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.ui::BaseWindow"*)*, i32 (%"class.ui::BaseWindow"*)** %7, i64 6
  %9 = load i32 (%"class.ui::BaseWindow"*)*, i32 (%"class.ui::BaseWindow"*)** %8, align 8
  %10 = tail call i32 %9(%"class.ui::BaseWindow"* %5) #8
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK10extensions13AppBaseWindow9GetBoundsEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to { i64, i64 } (%"class.ui::BaseWindow"*)***
  %7 = load { i64, i64 } (%"class.ui::BaseWindow"*)**, { i64, i64 } (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%"class.ui::BaseWindow"*)*, { i64, i64 } (%"class.ui::BaseWindow"*)** %7, i64 7
  %9 = load { i64, i64 } (%"class.ui::BaseWindow"*)*, { i64, i64 } (%"class.ui::BaseWindow"*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%"class.ui::BaseWindow"* %5) #8
  ret { i64, i64 } %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow4ShowEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to void (%"class.ui::BaseWindow"*)***
  %7 = load void (%"class.ui::BaseWindow"*)**, void (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %7, i64 8
  %9 = load void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %8, align 8
  tail call void %9(%"class.ui::BaseWindow"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow4HideEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to void (%"class.ui::BaseWindow"*)***
  %7 = load void (%"class.ui::BaseWindow"*)**, void (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %7, i64 9
  %9 = load void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %8, align 8
  tail call void %9(%"class.ui::BaseWindow"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13AppBaseWindow9IsVisibleEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to i1 (%"class.ui::BaseWindow"*)***
  %7 = load i1 (%"class.ui::BaseWindow"*)**, i1 (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %7, i64 10
  %9 = load i1 (%"class.ui::BaseWindow"*)*, i1 (%"class.ui::BaseWindow"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.ui::BaseWindow"* %5) #8
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow12ShowInactiveEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to void (%"class.ui::BaseWindow"*)***
  %7 = load void (%"class.ui::BaseWindow"*)**, void (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %7, i64 11
  %9 = load void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %8, align 8
  tail call void %9(%"class.ui::BaseWindow"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow5CloseEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to void (%"class.ui::BaseWindow"*)***
  %7 = load void (%"class.ui::BaseWindow"*)**, void (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %7, i64 12
  %9 = load void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %8, align 8
  tail call void %9(%"class.ui::BaseWindow"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow8ActivateEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to void (%"class.ui::BaseWindow"*)***
  %7 = load void (%"class.ui::BaseWindow"*)**, void (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %7, i64 13
  %9 = load void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %8, align 8
  tail call void %9(%"class.ui::BaseWindow"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow10DeactivateEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to void (%"class.ui::BaseWindow"*)***
  %7 = load void (%"class.ui::BaseWindow"*)**, void (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %7, i64 14
  %9 = load void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %8, align 8
  tail call void %9(%"class.ui::BaseWindow"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow8MaximizeEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to void (%"class.ui::BaseWindow"*)***
  %7 = load void (%"class.ui::BaseWindow"*)**, void (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %7, i64 15
  %9 = load void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %8, align 8
  tail call void %9(%"class.ui::BaseWindow"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow8MinimizeEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to void (%"class.ui::BaseWindow"*)***
  %7 = load void (%"class.ui::BaseWindow"*)**, void (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %7, i64 16
  %9 = load void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %8, align 8
  tail call void %9(%"class.ui::BaseWindow"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow7RestoreEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to void (%"class.ui::BaseWindow"*)***
  %7 = load void (%"class.ui::BaseWindow"*)**, void (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %7, i64 17
  %9 = load void (%"class.ui::BaseWindow"*)*, void (%"class.ui::BaseWindow"*)** %8, align 8
  tail call void %9(%"class.ui::BaseWindow"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow9SetBoundsERKN3gfx4RectE(%"class.extensions::AppBaseWindow"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Insets"*
  %5 = alloca %"class.extensions::SizeConstraints", align 4
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Size"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.gfx::Size"*
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.gfx::Size"*
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.gfx::Size"*
  %14 = alloca %"class.gfx::Rect", align 8
  %15 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %18 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %17, align 8
  %20 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %19) #8
  %21 = bitcast %"class.extensions::NativeAppWindow"* %20 to { i64, i64 } (%"class.extensions::NativeAppWindow"*)***
  %22 = load { i64, i64 } (%"class.extensions::NativeAppWindow"*)**, { i64, i64 } (%"class.extensions::NativeAppWindow"*)*** %21, align 8
  %23 = getelementptr inbounds { i64, i64 } (%"class.extensions::NativeAppWindow"*)*, { i64, i64 } (%"class.extensions::NativeAppWindow"*)** %22, i64 34
  %24 = load { i64, i64 } (%"class.extensions::NativeAppWindow"*)*, { i64, i64 } (%"class.extensions::NativeAppWindow"*)** %23, align 8
  %25 = tail call { i64, i64 } %24(%"class.extensions::NativeAppWindow"* %20) #8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %27 = extractvalue { i64, i64 } %25, 0
  store i64 %27, i64* %26, align 8
  %28 = extractvalue { i64, i64 } %25, 1
  store i64 %28, i64* %16, align 8
  %29 = bitcast %"class.extensions::SizeConstraints"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #8
  %30 = bitcast i64* %6 to i8*
  %31 = bitcast %"class.extensions::SizeConstraints"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %32 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %17, align 8
  %34 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %33) #8
  %35 = bitcast %"class.extensions::NativeAppWindow"* %34 to i64 (%"class.extensions::NativeAppWindow"*)***
  %36 = load i64 (%"class.extensions::NativeAppWindow"*)**, i64 (%"class.extensions::NativeAppWindow"*)*** %35, align 8
  %37 = getelementptr inbounds i64 (%"class.extensions::NativeAppWindow"*)*, i64 (%"class.extensions::NativeAppWindow"*)** %36, i64 35
  %38 = load i64 (%"class.extensions::NativeAppWindow"*)*, i64 (%"class.extensions::NativeAppWindow"*)** %37, align 8
  %39 = tail call i64 %38(%"class.extensions::NativeAppWindow"* %34) #8
  store i64 %39, i64* %8, align 8
  %40 = call i64 @_ZN10extensions15SizeConstraints21AddFrameToConstraintsERKN3gfx4SizeERKNS1_6InsetsE(%"class.gfx::Size"* nonnull dereferenceable(8) %9, %"class.gfx::Insets"* nonnull dereferenceable(16) %4) #8
  store i64 %40, i64* %6, align 8
  %41 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  %42 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8
  %43 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %17, align 8
  %44 = call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %43) #8
  %45 = bitcast %"class.extensions::NativeAppWindow"* %44 to i64 (%"class.extensions::NativeAppWindow"*)***
  %46 = load i64 (%"class.extensions::NativeAppWindow"*)**, i64 (%"class.extensions::NativeAppWindow"*)*** %45, align 8
  %47 = getelementptr inbounds i64 (%"class.extensions::NativeAppWindow"*)*, i64 (%"class.extensions::NativeAppWindow"*)** %46, i64 36
  %48 = load i64 (%"class.extensions::NativeAppWindow"*)*, i64 (%"class.extensions::NativeAppWindow"*)** %47, align 8
  %49 = call i64 %48(%"class.extensions::NativeAppWindow"* %44) #8
  store i64 %49, i64* %12, align 8
  %50 = call i64 @_ZN10extensions15SizeConstraints21AddFrameToConstraintsERKN3gfx4SizeERKNS1_6InsetsE(%"class.gfx::Size"* nonnull dereferenceable(8) %13, %"class.gfx::Insets"* nonnull dereferenceable(16) %4) #8
  store i64 %50, i64* %10, align 8
  call void @_ZN10extensions15SizeConstraintsC1ERKN3gfx4SizeES4_(%"class.extensions::SizeConstraints"* nonnull %5, %"class.gfx::Size"* nonnull dereferenceable(8) %7, %"class.gfx::Size"* nonnull dereferenceable(8) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %51 = bitcast %"class.gfx::Rect"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8
  %52 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 0, i32 1, i32 1
  %56 = bitcast %"class.gfx::Rect"* %1 to i64*
  %57 = bitcast %"class.gfx::Rect"* %14 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1
  %60 = bitcast %"class.gfx::Size"* %59 to i64*
  %61 = load i64, i64* %60, align 4
  %62 = call i64 @_ZNK10extensions15SizeConstraints9ClampSizeEN3gfx4SizeE(%"class.extensions::SizeConstraints"* nonnull %5, i64 %61) #8
  %63 = trunc i64 %62 to i32
  %64 = lshr i64 %62, 32
  %65 = trunc i64 %64 to i32
  %66 = load i32, i32* %52, align 8
  %67 = icmp sgt i32 %66, 0
  %68 = icmp sgt i32 %63, 0
  %69 = and i1 %68, %67
  %70 = sub nuw nsw i32 2147483647, %66
  %71 = icmp ult i32 %70, %63
  %72 = and i1 %71, %69
  %73 = select i1 %72, i32 %70, i32 %63
  %74 = icmp sgt i32 %73, 0
  %75 = select i1 %74, i32 %73, i32 0
  store i32 %75, i32* %54, align 8
  %76 = load i32, i32* %53, align 4
  %77 = icmp sgt i32 %76, 0
  %78 = icmp sgt i32 %65, 0
  %79 = and i1 %78, %77
  %80 = sub nuw nsw i32 2147483647, %76
  %81 = icmp ult i32 %80, %65
  %82 = and i1 %81, %79
  %83 = select i1 %82, i32 %80, i32 %65
  %84 = icmp sgt i32 %83, 0
  %85 = select i1 %84, i32 %83, i32 0
  store i32 %85, i32* %55, align 4
  %86 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %17, align 8
  %87 = call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %86) #8
  %88 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %87, i64 0, i32 0
  %89 = bitcast %"class.extensions::NativeAppWindow"* %87 to void (%"class.ui::BaseWindow"*, %"class.gfx::Rect"*)***
  %90 = load void (%"class.ui::BaseWindow"*, %"class.gfx::Rect"*)**, void (%"class.ui::BaseWindow"*, %"class.gfx::Rect"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.ui::BaseWindow"*, %"class.gfx::Rect"*)*, void (%"class.ui::BaseWindow"*, %"class.gfx::Rect"*)** %90, i64 18
  %92 = load void (%"class.ui::BaseWindow"*, %"class.gfx::Rect"*)*, void (%"class.ui::BaseWindow"*, %"class.gfx::Rect"*)** %91, align 8
  call void %92(%"class.ui::BaseWindow"* %88, %"class.gfx::Rect"* nonnull dereferenceable(16) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8
  call void @_ZN10extensions15SizeConstraintsD1Ev(%"class.extensions::SizeConstraints"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i64 @_ZN10extensions15SizeConstraints21AddFrameToConstraintsERKN3gfx4SizeERKNS1_6InsetsE(%"class.gfx::Size"* dereferenceable(8), %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN10extensions15SizeConstraintsC1ERKN3gfx4SizeES4_(%"class.extensions::SizeConstraints"*, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i64 @_ZNK10extensions15SizeConstraints9ClampSizeEN3gfx4SizeE(%"class.extensions::SizeConstraints"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10extensions15SizeConstraintsD1Ev(%"class.extensions::SizeConstraints"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow10FlashFrameEb(%"class.extensions::AppBaseWindow"* nocapture readonly, i1 zeroext) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %4 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %3, align 8
  %5 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %4) #8
  %6 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %5, i64 0, i32 0
  %7 = bitcast %"class.extensions::NativeAppWindow"* %5 to void (%"class.ui::BaseWindow"*, i1)***
  %8 = load void (%"class.ui::BaseWindow"*, i1)**, void (%"class.ui::BaseWindow"*, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::BaseWindow"*, i1)*, void (%"class.ui::BaseWindow"*, i1)** %8, i64 19
  %10 = load void (%"class.ui::BaseWindow"*, i1)*, void (%"class.ui::BaseWindow"*, i1)** %9, align 8
  tail call void %10(%"class.ui::BaseWindow"* %6, i1 zeroext %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10extensions13AppBaseWindow14GetZOrderLevelEv(%"class.extensions::AppBaseWindow"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %3 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %2, align 8
  %4 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %3) #8
  %5 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %4, i64 0, i32 0
  %6 = bitcast %"class.extensions::NativeAppWindow"* %4 to i32 (%"class.ui::BaseWindow"*)***
  %7 = load i32 (%"class.ui::BaseWindow"*)**, i32 (%"class.ui::BaseWindow"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.ui::BaseWindow"*)*, i32 (%"class.ui::BaseWindow"*)** %7, i64 20
  %9 = load i32 (%"class.ui::BaseWindow"*)*, i32 (%"class.ui::BaseWindow"*)** %8, align 8
  %10 = tail call i32 %9(%"class.ui::BaseWindow"* %5) #8
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13AppBaseWindow14SetZOrderLevelEN2ui11ZOrderLevelE(%"class.extensions::AppBaseWindow"* nocapture readonly, i32) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.extensions::AppBaseWindow", %"class.extensions::AppBaseWindow"* %0, i64 0, i32 1
  %4 = load %"class.extensions::AppWindow"*, %"class.extensions::AppWindow"** %3, align 8
  %5 = tail call %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"* %4) #8
  %6 = getelementptr inbounds %"class.extensions::NativeAppWindow", %"class.extensions::NativeAppWindow"* %5, i64 0, i32 0
  %7 = bitcast %"class.extensions::NativeAppWindow"* %5 to void (%"class.ui::BaseWindow"*, i32)***
  %8 = load void (%"class.ui::BaseWindow"*, i32)**, void (%"class.ui::BaseWindow"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.ui::BaseWindow"*, i32)*, void (%"class.ui::BaseWindow"*, i32)** %8, i64 21
  %10 = load void (%"class.ui::BaseWindow"*, i32)*, void (%"class.ui::BaseWindow"*, i32)** %9, align 8
  tail call void %10(%"class.ui::BaseWindow"* %6, i32 %1) #8
  ret void
}

declare %"class.extensions::NativeAppWindow"* @_ZN10extensions9AppWindow13GetBaseWindowEv(%"class.extensions::AppWindow"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
