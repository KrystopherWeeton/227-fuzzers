; ModuleID = '../../third_party/blink/renderer/modules/webaudio/offline_audio_context.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/offline_audio_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.34" }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.106" }
%"class.WTF::HashTable.106" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.108", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.110", i32, [4 x i8], %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.246", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.263", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.281", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.288", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.226", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.146" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__atomic_base.148" }
%"struct.std::__1::__atomic_base.148" = type { %"struct.std::__1::__cxx_atomic_impl.149" }
%"struct.std::__1::__cxx_atomic_impl.149" = type { %"struct.std::__1::__cxx_atomic_base_impl.150" }
%"struct.std::__1::__cxx_atomic_base_impl.150" = type { i64 }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::Worklist.157"* }
%"class.blink::Worklist.157" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.146" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::Worklist.164"* }
%"class.blink::Worklist.164" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.146" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::Worklist.171"* }
%"class.blink::Worklist.171" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.146" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::Worklist.178"* }
%"class.blink::Worklist.178" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.146" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::Worklist.185"* }
%"class.blink::Worklist.185" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.146" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::Worklist.192"* }
%"class.blink::Worklist.192" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.146" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.146" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.206", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.220", [4 x i8] }>
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208", %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { i64 }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { float }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.229", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.238" }
%"class.WTF::Vector.238" = type { %"class.WTF::VectorBuffer.239" }
%"class.WTF::VectorBuffer.239" = type { %"class.WTF::VectorBufferBase.240" }
%"class.WTF::VectorBufferBase.240" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"struct.std::__1::pair.256"*, i32, i32 }
%"struct.std::__1::pair.256" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.269" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.157"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.164"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.171"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.178"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.185"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.395" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.287 }
%class.scoped_refptr.287 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.288" = type { %"struct.std::__1::__atomic_base.289" }
%"struct.std::__1::__atomic_base.289" = type { %"struct.std::__1::__cxx_atomic_impl.290" }
%"struct.std::__1::__cxx_atomic_impl.290" = type { %"struct.std::__1::__cxx_atomic_base_impl.291" }
%"struct.std::__1::__cxx_atomic_base_impl.291" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::OfflineAudioContext" = type { %"class.blink::BaseAudioContext", %"class.blink::HeapHashMap.383", %"class.blink::Member.92", i8, i32 }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.28", %"class.blink::HeapVector.86", i8, %class.scoped_refptr.68, i8, %"class.blink::Member.305", i8, %class.scoped_refptr.33, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.373", %"class.blink::Member.379", %"class.blink::Member.379", %"class.blink::Member.379", %"class.blink::Member.379", %class.scoped_refptr.336, %"class.blink::Member.381", %"class.blink::WorkerThread"* }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.12"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.12" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.13", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.19", %"class.blink::HeapHashSet.21" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.415", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.417", %"class.blink::Member.421", %"class.blink::Member.423", %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::HeapObserverSet.435", %"class.blink::Member.443", %"class.blink::Member.445", %"class.blink::Member.447", %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.494", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.508", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.402" }
%"class.blink::HeapHashMap.402" = type { %"class.WTF::HashMap.405" }
%"class.WTF::HashMap.405" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"struct.WTF::KeyValuePair.408"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.408" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.409" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.17", %"class.blink::Member.516", %"class.blink::Member.518", i8, i32, i8, i32, %"class.blink::Member.699", %"class.blink::Member.520", %"class.blink::FrameLifecycle", %"class.blink::Member.415", %"class.blink::Member.415", %"class.blink::Member.415", %"class.blink::Member.415", %"class.blink::Member.415", %"class.blink::Member.415", %"class.blink::Member.701", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.711", i8, %"class.base::UnguessableToken", %"class.absl::optional.713", %"class.absl::optional.718", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.415", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.415", %"class.blink::Member.520", %"class.blink::Member.522", %"class.blink::Member.524", i8, %"class.WTF::Vector.526" }
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.526" = type { %"class.WTF::VectorBuffer.527" }
%"class.WTF::VectorBuffer.527" = type { %"class.WTF::VectorBufferBase.528" }
%"class.WTF::VectorBufferBase.528" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.529", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.529" = type { %"class.base::StrongAlias.530" }
%"class.base::StrongAlias.530" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.691" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.531, %"class.std::__1::unique_ptr.646", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.533, i32 }>
%class.scoped_refptr.531 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.533, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.612", %"class.absl::optional.617", %"class.absl::optional.573", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.637", i8, [7 x i8], %class.scoped_refptr.533, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.532" }>
%"class.base::RefCountedThreadSafe.532" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.34" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.536 }
%union.anon.536 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.540", %"class.std::__1::unique_ptr.546", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.40", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.533, %"class.std::__1::unique_ptr.554", %"class.absl::optional.563", %"struct.std::__1::atomic.288", i8, i8, i8, i8, i32, i32, %"class.absl::optional.573", %"class.std::__1::unique_ptr.578", i8, i64, %class.scoped_refptr.608, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.610", %"class.base::WeakPtrFactory.611" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.552 }
%class.scoped_refptr.552 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.553", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.553" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.533, i8, %"class.mojo::ScopedHandleBase.557", %class.scoped_refptr.558, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.559" }
%"class.mojo::ScopedHandleBase.557" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.558 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.559" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.563" = type { %"class.absl::optional_internal::optional_data.564" }
%"class.absl::optional_internal::optional_data.564" = type { %"class.absl::optional_internal::optional_data_base.565" }
%"class.absl::optional_internal::optional_data_base.565" = type { %"class.absl::optional_internal::optional_data_dtor_base.566" }
%"class.absl::optional_internal::optional_data_dtor_base.566" = type { i8, %union.anon.567 }
%union.anon.567 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.568", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.568" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.581", i8, i64, %class.scoped_refptr.582, %class.scoped_refptr.604 }
%"class.base::RepeatingCallback.581" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.582 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.583", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.593", i8, [7 x i8] }>
%"class.base::RefCounted.583" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.584 }
%class.scoped_refptr.584 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.585", %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.std::__1::map.593" = type { %"class.std::__1::__tree.594" }
%"class.std::__1::__tree.594" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%class.scoped_refptr.604 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.608 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.609 }
%class.scoped_refptr.609 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1854", [4 x i8], %"class.base::RepeatingCallback.649", %class.scoped_refptr.533, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1854" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.649" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.610" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.501 }
%class.scoped_refptr.501 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.611" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.612" = type { %"class.absl::optional_internal::optional_data.613" }
%"class.absl::optional_internal::optional_data.613" = type { %"class.absl::optional_internal::optional_data_base.614" }
%"class.absl::optional_internal::optional_data_base.614" = type { %"class.absl::optional_internal::optional_data_dtor_base.615" }
%"class.absl::optional_internal::optional_data_dtor_base.615" = type { i8, %union.anon.616 }
%union.anon.616 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.617" = type { %"class.absl::optional_internal::optional_data.618" }
%"class.absl::optional_internal::optional_data.618" = type { %"class.absl::optional_internal::optional_data_base.619" }
%"class.absl::optional_internal::optional_data_base.619" = type { %"class.absl::optional_internal::optional_data_dtor_base.620" }
%"class.absl::optional_internal::optional_data_dtor_base.620" = type { i8, [7 x i8], %union.anon.621 }
%union.anon.621 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.573" = type { %"class.absl::optional_internal::optional_data.574" }
%"class.absl::optional_internal::optional_data.574" = type { %"class.absl::optional_internal::optional_data_base.575" }
%"class.absl::optional_internal::optional_data_base.575" = type { %"class.absl::optional_internal::optional_data_dtor_base.576" }
%"class.absl::optional_internal::optional_data_dtor_base.576" = type { i8, %union.anon.577 }
%union.anon.577 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.622 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.622 = type { %"class.std::__1::map.625" }
%"class.std::__1::map.625" = type { %"class.std::__1::__tree.626" }
%"class.std::__1::__tree.626" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.627", %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.636"*, i64 }
%"class.std::__1::unique_ptr.636" = type opaque
%"class.std::__1::map.637" = type { %"class.std::__1::__tree.638" }
%"class.std::__1::__tree.638" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.639", %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.649", %"class.base::OnceCallback.650", %"class.absl::optional.483", %"class.absl::optional.651", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.658", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.666", %"class.std::__1::map.677", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.686", i8, %class.scoped_refptr.533, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.687" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.650" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.483" = type { %"class.absl::optional_internal::optional_data.484" }
%"class.absl::optional_internal::optional_data.484" = type { %"class.absl::optional_internal::optional_data_base.485" }
%"class.absl::optional_internal::optional_data_base.485" = type { %"class.absl::optional_internal::optional_data_dtor_base.486" }
%"class.absl::optional_internal::optional_data_dtor_base.486" = type { i8, %union.anon.487 }
%union.anon.487 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.651" = type { %"class.absl::optional_internal::optional_data.652" }
%"class.absl::optional_internal::optional_data.652" = type { %"class.absl::optional_internal::optional_data_base.653" }
%"class.absl::optional_internal::optional_data_base.653" = type { %"class.absl::optional_internal::optional_data_dtor_base.654" }
%"class.absl::optional_internal::optional_data_dtor_base.654" = type { i8, %union.anon.655 }
%union.anon.655 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.533, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.656" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.656" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.657 }
%class.scoped_refptr.657 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.661", %class.scoped_refptr.662 }
%"class.base::RepeatingCallback.661" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.662 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.532", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.666" = type { %"class.std::__1::__tree.667" }
%"class.std::__1::__tree.667" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.668", %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.std::__1::map.677" = type { %"class.std::__1::__tree.678" }
%"class.std::__1::__tree.678" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.679", %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.base::OnceCallback.686" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.687" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.533 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.69" }>
%"class.base::RefCountedThreadSafe.69" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.699" = type { %"class.blink::MemberBase.700" }
%"class.blink::MemberBase.700" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.730", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.738", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.752", %"class.blink::FrameLoader", %"class.blink::Member.779", %"class.blink::Member.781", %"class.blink::Member.810", %"class.blink::Member.812", %"class.blink::Member.814", %"class.blink::Member.816", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.818", %class.scoped_refptr.820, %"class.blink::Member.821", %"class.blink::Member.823", %"class.blink::Member.825", %"class.blink::Member.827", %"class.blink::Member.829", %"class.blink::Member.831", %"class.blink::Member.833", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.837", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.858", %"class.std::__1::unique_ptr.859", %"class.absl::optional.718", i32, [4 x i8], %"class.std::__1::unique_ptr.865", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.873", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.878", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.883", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.886", %"class.blink::Member.888", %"class.blink::Member.890", %"class.blink::Member.892", %"class.mojo::StructPtr.895", %"class.blink::Member.903", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.905", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.730" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.731" }
%"class.blink::HeapHashMap.731" = type { %"class.WTF::HashMap.734" }
%"class.WTF::HashMap.734" = type { %"class.WTF::HashTable.735" }
%"class.WTF::HashTable.735" = type <{ %"struct.WTF::KeyValuePair.737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.737" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.741", %"class.base::WeakPtrFactory.746" }
%"class.WTF::HashMap.741" = type { %"class.WTF::HashTable.742" }
%"class.WTF::HashTable.742" = type <{ %"struct.WTF::KeyValuePair.745"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.745" = type opaque
%"class.base::WeakPtrFactory.746" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.750" }
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.649", %"class.base::RepeatingCallback.1913", i64, %"class.std::__1::map.1914", i8*, i64, %"class.base::WeakPtrFactory.1923" }
%"class.base::RepeatingCallback.1913" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1914" = type { %"class.std::__1::__tree.1915" }
%"class.std::__1::__tree.1915" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1916", %"class.std::__1::__compressed_pair.1920" }
%"class.std::__1::__compressed_pair.1916" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"class.std::__1::__compressed_pair.1920" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.base::WeakPtrFactory.1923" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.752" = type { %"class.WTF::HashSet.755" }
%"class.WTF::HashSet.755" = type { %"class.WTF::HashTable.756" }
%"class.WTF::HashTable.756" = type <{ %"class.blink::WeakMember.758"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.758" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.701", %"class.blink::Member.759", %"class.blink::Member.761", %"class.std::__1::unique_ptr.763", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.775" }
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.766" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.blink::KURL"* }
%"class.WTF::HashSet.775" = type { %"class.WTF::HashTable.776" }
%"class.WTF::HashTable.776" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1569", %"class.blink::Member.701", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1574", i8, i32, %"class.blink::Color", %"class.absl::optional.1576", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1581", %"class.blink::Member.1583", %"class.blink::Member.1583", %"class.std::__1::unique_ptr.1586", i32, [4 x i8], %"class.WTF::HashSet.1589", %"class.blink::Member.1596", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1598", %"class.blink::HeapHashSet.1605", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1613", i8, %"class.blink::Member.1619", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1631", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1645", i8, %"class.std::__1::unique_ptr.1651", %"class.std::__1::unique_ptr.1768", %"class.WTF::Vector.1774", i32, %class.scoped_refptr.1779, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1780", %"class.blink::Member.1782", %"class.blink::Member.1784", %"class.blink::HeapHashSet.1786", %"class.blink::HeapHashSet.1793", %"class.std::__1::unique_ptr.1800", %"class.std::__1::unique_ptr.1807", %"class.WTF::Vector.998" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1569" = type { %"class.WTF::HashTable.1570" }
%"class.WTF::HashTable.1570" = type <{ %class.scoped_refptr.1573*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1573 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1574" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1575", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.68, %"class.base::WeakPtrFactory.1343" }
%"class.base::WeakPtrFactory.1343" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1575" = type { %"class.blink::MemberBase.780" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1576" = type { %"class.absl::optional_internal::optional_data.1577" }
%"class.absl::optional_internal::optional_data.1577" = type { %"class.absl::optional_internal::optional_data_base.1578" }
%"class.absl::optional_internal::optional_data_base.1578" = type { %"class.absl::optional_internal::optional_data_dtor_base.1579" }
%"class.absl::optional_internal::optional_data_dtor_base.1579" = type { i8, %union.anon.1580 }
%union.anon.1580 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::HeapHashSet.1585"* }
%"class.blink::HeapHashSet.1585" = type opaque
%"class.std::__1::unique_ptr.1586" = type { %"class.std::__1::__compressed_pair.1587" }
%"class.std::__1::__compressed_pair.1587" = type { %"struct.std::__1::__compressed_pair_elem.1588" }
%"struct.std::__1::__compressed_pair_elem.1588" = type { %"class.WTF::HashSet.1589"* }
%"class.WTF::HashSet.1589" = type { %"class.WTF::HashTable.1590" }
%"class.WTF::HashTable.1590" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1598" = type { %"class.WTF::HashSet.1601" }
%"class.WTF::HashSet.1601" = type { %"class.WTF::HashTable.1602" }
%"class.WTF::HashTable.1602" = type <{ %"class.blink::Member.1604"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1604" = type opaque
%"class.blink::HeapHashSet.1605" = type { %"class.WTF::HashSet.1608" }
%"class.WTF::HashSet.1608" = type { %"class.WTF::HashTable.1609" }
%"class.WTF::HashTable.1609" = type <{ %"class.blink::Member.1611"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1611" = type { %"class.blink::MemberBase.1612" }
%"class.blink::MemberBase.1612" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1841", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1852", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.781" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1841" = type { %"class.blink::MemberBase.1842" }
%"class.blink::MemberBase.1842" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1843", %"class.blink::Member.1844", %"class.blink::Member.1846", %"class.blink::Member.1848", %"class.blink::Member.1850", %"class.WTF::Vector.998", i16, %class.scoped_refptr.68 }
%"class.blink::ThreadState::PrefinalizerRegistration.1843" = type { i8 }
%"class.blink::Member.1844" = type { %"class.blink::MemberBase.1845" }
%"class.blink::MemberBase.1845" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1852" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1853", { i64, i64 } }
%"class.blink::WeakMember.1853" = type { %"class.blink::MemberBase.1612" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1613" = type { %"class.std::__1::__compressed_pair.1614" }
%"class.std::__1::__compressed_pair.1614" = type { %"struct.std::__1::__compressed_pair_elem.1615" }
%"struct.std::__1::__compressed_pair_elem.1615" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1619" = type { %"class.blink::MemberBase.1620" }
%"class.blink::MemberBase.1620" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1623", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1623" = type { %"class.WTF::HashTable.1624" }
%"class.WTF::HashTable.1624" = type <{ %"struct.WTF::KeyValuePair.1626"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1626" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1627", i32, i32 }
%"class.WTF::Vector.1627" = type { %"class.WTF::VectorBuffer.1628" }
%"class.WTF::VectorBuffer.1628" = type { %"class.WTF::VectorBufferBase.1629" }
%"class.WTF::VectorBufferBase.1629" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1631" = type { %"class.WTF::LinkedHashSet.1634" }
%"class.WTF::LinkedHashSet.1634" = type { %"class.WTF::HashMap.1635", %"class.WTF::VectorBackedLinkedList.1639" }
%"class.WTF::HashMap.1635" = type { %"class.WTF::HashTable.1636" }
%"class.WTF::HashTable.1636" = type <{ %"struct.WTF::KeyValuePair.1638"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1638" = type opaque
%"class.WTF::VectorBackedLinkedList.1639" = type { %"class.WTF::Vector.1640", i32, i32 }
%"class.WTF::Vector.1640" = type { %"class.WTF::VectorBuffer.1641" }
%"class.WTF::VectorBuffer.1641" = type { %"class.WTF::VectorBufferBase.1642" }
%"class.WTF::VectorBufferBase.1642" = type { %"class.WTF::VectorBackedLinkedListNode.1643"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1643" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1645" = type { %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1651" = type { %"class.std::__1::__compressed_pair.1652" }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.1653" }
%"struct.std::__1::__compressed_pair_elem.1653" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1654, %class.scoped_refptr.1654, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1745", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1750", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1654 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1655", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1662" }
%"class.WTF::RefCounted.1655" = type { %"class.base::RefCounted.1656" }
%"class.base::RefCounted.1656" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1657", i32, [4 x i8] }>
%"class.WTF::Vector.1657" = type { %"class.WTF::VectorBuffer.1658" }
%"class.WTF::VectorBuffer.1658" = type { %"class.WTF::VectorBufferBase.1659" }
%"class.WTF::VectorBufferBase.1659" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1662" = type { %"class.WTF::VectorBuffer.1663" }
%"class.WTF::VectorBuffer.1663" = type { %"class.WTF::VectorBufferBase.1664" }
%"class.WTF::VectorBufferBase.1664" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1668", %"class.std::__1::unique_ptr.1717", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1665, %class.scoped_refptr.1666, %class.scoped_refptr.1667 }
%class.scoped_refptr.1665 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1681", i8, i8, %class.scoped_refptr.1665, i32, i32 }
%"class.WTF::RefCounted.1681" = type { %"class.base::RefCounted.1682" }
%"class.base::RefCounted.1682" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1666 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1836" }
%"class.blink::PaintPropertyNode.1836" = type { %"class.WTF::RefCounted.1837", i8, i8, %class.scoped_refptr.1666, i32, i32 }
%"class.WTF::RefCounted.1837" = type { %"class.base::RefCounted.1838" }
%"class.base::RefCounted.1838" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1667 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1833" }
%"class.blink::PaintPropertyNode.1833" = type { %"class.WTF::RefCounted.1834", i8, i8, %class.scoped_refptr.1667, i32, i32 }
%"class.WTF::RefCounted.1834" = type { %"class.base::RefCounted.1835" }
%"class.base::RefCounted.1835" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1668" = type { %"class.std::__1::__compressed_pair.1669" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1671", %"class.WTF::Vector.1676", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1671" = type { %"class.WTF::VectorBuffer.1672" }
%"class.WTF::VectorBuffer.1672" = type { %"class.WTF::VectorBufferBase.1673" }
%"class.WTF::VectorBufferBase.1673" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678" }
%"class.WTF::VectorBufferBase.1678" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1696" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1689, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1690", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1683" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1683" = type { %"class.std::__1::__compressed_pair.1684" }
%"class.std::__1::__compressed_pair.1684" = type { %"struct.std::__1::__compressed_pair_elem.1685" }
%"struct.std::__1::__compressed_pair_elem.1685" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1689 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1818", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1818" = type { %"class.WTF::RefCounted.1819", i8, i8, %class.scoped_refptr.1689, i32, i32 }
%"class.WTF::RefCounted.1819" = type { %"class.base::RefCounted.1820" }
%"class.base::RefCounted.1820" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1821" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1821" = type { %"class.absl::optional_internal::optional_data.1822" }
%"class.absl::optional_internal::optional_data.1822" = type { %"class.absl::optional_internal::optional_data_base.1823" }
%"class.absl::optional_internal::optional_data_base.1823" = type { %"class.absl::optional_internal::optional_data_dtor_base.1824" }
%"class.absl::optional_internal::optional_data_dtor_base.1824" = type { i8, %union.anon.1825 }
%union.anon.1825 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1826", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1826" = type { %"class.std::__1::__vector_base.1827" }
%"class.std::__1::__vector_base.1827" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1828" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1699", %"class.std::__1::unique_ptr.1705", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1699" = type { %"class.std::__1::__compressed_pair.1700" }
%"class.std::__1::__compressed_pair.1700" = type { %"struct.std::__1::__compressed_pair_elem.1701" }
%"struct.std::__1::__compressed_pair_elem.1701" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1705" = type { %"class.std::__1::__compressed_pair.1706" }
%"class.std::__1::__compressed_pair.1706" = type { %"struct.std::__1::__compressed_pair_elem.1707" }
%"struct.std::__1::__compressed_pair_elem.1707" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1717" = type { %"class.std::__1::__compressed_pair.1718" }
%"class.std::__1::__compressed_pair.1718" = type { %"struct.std::__1::__compressed_pair_elem.1719" }
%"struct.std::__1::__compressed_pair_elem.1719" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1720", %"class.absl::optional.1720" }
%"class.absl::optional.1720" = type { %"class.absl::optional_internal::optional_data.1721" }
%"class.absl::optional_internal::optional_data.1721" = type { %"class.absl::optional_internal::optional_data_base.1722" }
%"class.absl::optional_internal::optional_data_base.1722" = type { %"class.absl::optional_internal::optional_data_dtor_base.1723" }
%"class.absl::optional_internal::optional_data_dtor_base.1723" = type { i8, [3 x i8], %union.anon.1724 }
%union.anon.1724 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1662"*, %"class.absl::optional.1730", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1730" = type { %"class.absl::optional_internal::optional_data.1731" }
%"class.absl::optional_internal::optional_data.1731" = type { %"class.absl::optional_internal::optional_data_base.1732" }
%"class.absl::optional_internal::optional_data_base.1732" = type { %"class.absl::optional_internal::optional_data_dtor_base.1733" }
%"class.absl::optional_internal::optional_data_dtor_base.1733" = type { i8, %union.anon.1734 }
%union.anon.1734 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1735", %"class.WTF::Vector.1740" }
%"class.WTF::Vector.1735" = type { %"class.WTF::VectorBuffer.1736" }
%"class.WTF::VectorBuffer.1736" = type { %"class.WTF::VectorBufferBase.1737", [128 x i8] }
%"class.WTF::VectorBufferBase.1737" = type { i32*, i32, i32 }
%"class.WTF::Vector.1740" = type { %"class.WTF::VectorBuffer.1741" }
%"class.WTF::VectorBuffer.1741" = type { %"class.WTF::VectorBufferBase.1742", [128 x i8] }
%"class.WTF::VectorBufferBase.1742" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1745" = type { %"class.WTF::VectorBuffer.1746" }
%"class.WTF::VectorBuffer.1746" = type { %"class.WTF::VectorBufferBase.1747" }
%"class.WTF::VectorBufferBase.1747" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1750" = type { %"class.WTF::HashTable.1751" }
%"class.WTF::HashTable.1751" = type <{ %"struct.WTF::KeyValuePair.1754"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1754" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1755", %"class.WTF::Vector.1760" }
%"class.WTF::HashMap.1755" = type { %"class.WTF::HashTable.1756" }
%"class.WTF::HashTable.1756" = type <{ %"struct.WTF::KeyValuePair.1759"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1759" = type opaque
%"class.WTF::Vector.1760" = type { %"class.WTF::VectorBuffer.1761" }
%"class.WTF::VectorBuffer.1761" = type { %"class.WTF::VectorBufferBase.1762" }
%"class.WTF::VectorBufferBase.1762" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1768" = type { %"class.std::__1::__compressed_pair.1769" }
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1774" = type { %"class.WTF::VectorBuffer.1775" }
%"class.WTF::VectorBuffer.1775" = type { %"class.WTF::VectorBufferBase.1776" }
%"class.WTF::VectorBufferBase.1776" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1779 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1780" = type { %"class.blink::MemberBase.1781" }
%"class.blink::MemberBase.1781" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1782" = type { %"class.blink::MemberBase.1783" }
%"class.blink::MemberBase.1783" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1784" = type { %"class.blink::MemberBase.1785" }
%"class.blink::MemberBase.1785" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1786" = type { %"class.WTF::HashSet.1789" }
%"class.WTF::HashSet.1789" = type { %"class.WTF::HashTable.1790" }
%"class.WTF::HashTable.1790" = type <{ %"class.blink::WeakMember.1792"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1792" = type opaque
%"class.blink::HeapHashSet.1793" = type { %"class.WTF::HashSet.1796" }
%"class.WTF::HashSet.1796" = type { %"class.WTF::HashTable.1797" }
%"class.WTF::HashTable.1797" = type <{ %"class.blink::WeakMember.1799"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1799" = type opaque
%"class.std::__1::unique_ptr.1800" = type { %"class.std::__1::__compressed_pair.1801" }
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1802" }
%"struct.std::__1::__compressed_pair_elem.1802" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1803" }
%"class.base::time_internal::TimeBase.1803" = type { i64 }
%"class.std::__1::unique_ptr.1807" = type { %"class.std::__1::__compressed_pair.1808" }
%"class.std::__1::__compressed_pair.1808" = type { %"struct.std::__1::__compressed_pair_elem.1809" }
%"struct.std::__1::__compressed_pair_elem.1809" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1810", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1810" = type { %"class.absl::optional_internal::optional_data.1811" }
%"class.absl::optional_internal::optional_data.1811" = type { %"class.absl::optional_internal::optional_data_base.1812" }
%"class.absl::optional_internal::optional_data_base.1812" = type { %"class.absl::optional_internal::optional_data_dtor_base.1813" }
%"class.absl::optional_internal::optional_data_dtor_base.1813" = type { i8, %union.anon.1814 }
%union.anon.1814 = type { %"class.base::Time" }
%"class.WTF::Vector.998" = type { %"class.WTF::VectorBuffer.999" }
%"class.WTF::VectorBuffer.999" = type { %"class.WTF::VectorBufferBase.1000" }
%"class.WTF::VectorBufferBase.1000" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.794" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.783", %"class.blink::Member.783" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.783", %"class.blink::Member.785", %"class.blink::Member.783", %"class.blink::Member.783", %"class.blink::Member.787" }
%"class.blink::Member.785" = type { %"class.blink::MemberBase.786" }
%"class.blink::MemberBase.786" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.910", %"class.blink::Member.912", %"class.blink::Member.785", %"class.blink::Member.914", %"class.blink::Member.914", %"class.blink::Member.936", %"class.blink::Member.938", %"class.blink::Member.940", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.945", %"class.blink::HeapVector.947" }
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::Document"* }
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.918" }
%"class.blink::HeapHashMap.918" = type { %"class.WTF::HashMap.921" }
%"class.WTF::HashMap.921" = type { %"class.WTF::HashTable.922" }
%"class.WTF::HashTable.922" = type <{ %"struct.WTF::KeyValuePair.924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.924" = type { %"class.WTF::AtomicString", %"class.blink::Member.925" }
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.781", i32, %"class.blink::HeapVector.929" }
%"class.blink::HeapVector.929" = type { %"class.WTF::Vector.932" }
%"class.WTF::Vector.932" = type { %"class.WTF::VectorBuffer.933" }
%"class.WTF::VectorBuffer.933" = type { %"class.WTF::VectorBufferBase.934" }
%"class.WTF::VectorBufferBase.934" = type { %"class.blink::Member.781"*, i32, i32 }
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.942" }
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::HeapHashMap.944"* }
%"class.blink::HeapHashMap.944" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.947" = type { %"class.WTF::Vector.950" }
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.951" }
%"class.WTF::VectorBuffer.951" = type { %"class.WTF::VectorBufferBase.952" }
%"class.WTF::VectorBufferBase.952" = type { %"class.blink::Member.953"*, i32, i32 }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.955", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.957, %"class.WTF::Vector.958", %"class.WTF::Vector.958", %"class.blink::Member.783", %"class.blink::Member.963", %"class.blink::HeapHashSet.967", %"class.blink::Member.912", %"class.WTF::HashSet.974", %"class.WTF::TextPosition", %"class.blink::Member.978", %"class.blink::HeapVector.980", %"class.blink::Member.987" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.957 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.958" = type { %"class.WTF::VectorBuffer.959" }
%"class.WTF::VectorBuffer.959" = type { %"class.WTF::VectorBufferBase.960" }
%"class.WTF::VectorBufferBase.960" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.965" }
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.967" = type { %"class.WTF::HashSet.970" }
%"class.WTF::HashSet.970" = type { %"class.WTF::HashTable.971" }
%"class.WTF::HashTable.971" = type <{ %"class.blink::WeakMember.973"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.973" = type { %"class.blink::MemberBase.786" }
%"class.WTF::HashSet.974" = type { %"class.WTF::HashTable.975" }
%"class.WTF::HashTable.975" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.980" = type { %"class.WTF::Vector.983" }
%"class.WTF::Vector.983" = type { %"class.WTF::VectorBuffer.984" }
%"class.WTF::VectorBuffer.984" = type { %"class.WTF::VectorBufferBase.985" }
%"class.WTF::VectorBufferBase.985" = type { %"class.blink::Member.963"*, i32, i32 }
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.791 }
%class.scoped_refptr.791 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.792", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.792" = type { %"class.base::RefCounted.793" }
%"class.base::RefCounted.793" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.798", %"class.blink::Member.800", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.798" = type { %"class.WTF::SingleThreadedBitField.799" }
%"class.WTF::SingleThreadedBitField.799" = type { i32 }
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.802 }
%class.scoped_refptr.802 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.803", %"class.WTF::AtomicString", %"class.WTF::Vector.805" }
%"class.WTF::RefCounted.803" = type { %"class.base::RefCounted.804" }
%"class.base::RefCounted.804" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.805" = type { %"class.WTF::VectorBuffer.806" }
%"class.WTF::VectorBuffer.806" = type { %"class.WTF::VectorBufferBase.807", [32 x i8] }
%"class.WTF::VectorBufferBase.807" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.820 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.835" }
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1926" }
%"class.mojo::Remote.1926" = type { %"class.mojo::internal::InterfacePtrState.1927" }
%"class.mojo::internal::InterfacePtrState.1927" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1928" }
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.840, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.840 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.841", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.841" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.844" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.849, i8, [7 x i8] }>
%class.scoped_refptr.849 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.850", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.850" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.851" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.858" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.871" }
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1936" }
%"class.mojo::AssociatedRemote.1936" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1937" }
%"class.mojo::internal::AssociatedInterfacePtrState.1937" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1938" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.646", i32 }>
%"class.std::__1::unique_ptr.1938" = type { %"class.std::__1::__compressed_pair.1939" }
%"class.std::__1::__compressed_pair.1939" = type { %"struct.std::__1::__compressed_pair_elem.1940" }
%"struct.std::__1::__compressed_pair_elem.1940" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.873" = type { %"class.blink::Member.874" }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1946" }
%"class.mojo::AssociatedRemote.1946" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1947" }
%"class.mojo::internal::AssociatedInterfacePtrState.1947" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1948" }
%"class.std::__1::unique_ptr.1948" = type { %"class.std::__1::__compressed_pair.1949" }
%"class.std::__1::__compressed_pair.1949" = type { %"struct.std::__1::__compressed_pair_elem.1950" }
%"struct.std::__1::__compressed_pair_elem.1950" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.876" }
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1956", %"class.blink::Member.701", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1956" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1957" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.646" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1957" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.878" = type { %"class.blink::Member.879" }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1960", %"class.blink::Member.701", %"class.mojo::AssociatedReceiver.1961" }
%"class.blink::ThreadState::PrefinalizerRegistration.1960" = type { i8 }
%"class.mojo::AssociatedReceiver.1961" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1962" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1962" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.881" }
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1965", %"class.blink::Member.701", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1965" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.531, %"class.std::__1::unique_ptr.646", %"class.base::WeakPtrFactory.1966" }
%"class.base::WeakPtrFactory.1966" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.883" = type { %"class.blink::Member.884" }
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1969", %"class.blink::Member.701", %"class.mojo::AssociatedReceiver.1970" }
%"class.blink::ThreadState::PrefinalizerRegistration.1969" = type { i8 }
%"class.mojo::AssociatedReceiver.1970" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1971" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1971" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::HeapHashMap.894"* }
%"class.blink::HeapHashMap.894" = type opaque
%"class.mojo::StructPtr.895" = type { %"class.std::__1::unique_ptr.896" }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.899" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.899" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.905" = type { %"class.absl::optional_internal::optional_data.906" }
%"class.absl::optional_internal::optional_data.906" = type { %"class.absl::optional_internal::optional_data_base.907" }
%"class.absl::optional_internal::optional_data_base.907" = type { %"class.absl::optional_internal::optional_data_dtor_base.908" }
%"class.absl::optional_internal::optional_data_dtor_base.908" = type { i8, %union.anon.909 }
%union.anon.909 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.415", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.703" }
%"class.std::__1::vector.703" = type { %"class.std::__1::__vector_base.704" }
%"class.std::__1::__vector_base.704" = type { %"struct.std::__1::pair.705"*, %"struct.std::__1::pair.705"*, %"class.std::__1::__compressed_pair.706" }
%"struct.std::__1::pair.705" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"struct.std::__1::pair.705"* }
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.713" = type { %"class.absl::optional_internal::optional_data.714" }
%"class.absl::optional_internal::optional_data.714" = type { %"class.absl::optional_internal::optional_data_base.715" }
%"class.absl::optional_internal::optional_data_base.715" = type { %"class.absl::optional_internal::optional_data_dtor_base.716" }
%"class.absl::optional_internal::optional_data_dtor_base.716" = type { i8, %union.anon.717 }
%union.anon.717 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.718" = type { %"class.absl::optional_internal::optional_data.719" }
%"class.absl::optional_internal::optional_data.719" = type { %"class.absl::optional_internal::optional_data_base.720" }
%"class.absl::optional_internal::optional_data_base.720" = type { %"class.absl::optional_internal::optional_data_dtor_base.721" }
%"class.absl::optional_internal::optional_data_dtor_base.721" = type { i8, %union.anon.722 }
%union.anon.722 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.296 }
%class.scoped_refptr.296 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.723" }
%"class.blink::HeapHashSet.723" = type { %"class.WTF::HashSet.726" }
%"class.WTF::HashSet.726" = type { %"class.WTF::HashTable.727" }
%"class.WTF::HashTable.727" = type <{ %"class.blink::WeakMember.729"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.729" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.17", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.435" = type { i32, [4 x i8], %"class.blink::HeapHashSet.436" }
%"class.blink::HeapHashSet.436" = type { %"class.WTF::HashSet.439" }
%"class.WTF::HashSet.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"class.blink::WeakMember.442"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.442" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.465" }
%"class.WTF::Deque.465" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"class.std::__1::unique_ptr.470"*, i32, i32 }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.476", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.476" = type { %"class.std::__1::__bitset.477" }
%"class.std::__1::__bitset.477" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.478", i64, %"class.absl::optional.483", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.478" = type { %"class.absl::optional_internal::optional_data.479" }
%"class.absl::optional_internal::optional_data.479" = type { %"class.absl::optional_internal::optional_data_base.480" }
%"class.absl::optional_internal::optional_data_base.480" = type { %"class.absl::optional_internal::optional_data_dtor_base.481" }
%"class.absl::optional_internal::optional_data_dtor_base.481" = type { i8, %union.anon.482 }
%union.anon.482 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.488" }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.494" = type { %"class.WTF::HashSet.497" }
%"class.WTF::HashSet.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"class.blink::WeakMember.500"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.500" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet.21" = type { %"class.WTF::HashSet.24" }
%"class.WTF::HashSet.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"class.blink::WeakMember.27"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.27" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.30", %"class.blink::Member.31", %class.scoped_refptr.33, %class.scoped_refptr.50, %"class.blink::HeapVector.70", %"class.blink::HeapVector.78" }
%"class.blink::ThreadState::PrefinalizerRegistration.30" = type { i8 }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.50 = type { %"class.blink::AudioHandler"* }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.337", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.33, %"class.WTF::Vector.342", %"class.WTF::Vector.348", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.337" = type { %"class.base::RefCountedThreadSafe.338" }
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.339" }
%"class.blink::PersistentBase.339" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.340" }
%"class.blink::PersistentNodePtr.340" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::BaseAudioContext"* }
%"class.WTF::Vector.342" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase.344" }
%"class.WTF::VectorBufferBase.344" = type { %"class.std::__1::unique_ptr.345"*, i32, i32 }
%"class.std::__1::unique_ptr.345" = type opaque
%"class.WTF::Vector.348" = type { %"class.WTF::VectorBuffer.349" }
%"class.WTF::VectorBuffer.349" = type { %"class.WTF::VectorBufferBase.350" }
%"class.WTF::VectorBufferBase.350" = type { %"class.std::__1::unique_ptr.351"*, i32, i32 }
%"class.std::__1::unique_ptr.351" = type opaque
%"class.blink::HeapVector.70" = type { %"class.WTF::Vector.73" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.blink::Member.76"*, i32, i32 }
%"class.blink::Member.76" = type opaque
%"class.blink::HeapVector.78" = type { %"class.WTF::Vector.81" }
%"class.WTF::Vector.81" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83" }
%"class.WTF::VectorBufferBase.83" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.blink::Member.84" = type opaque
%"class.blink::HeapVector.86" = type { %"class.WTF::Vector.89" }
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.blink::Member.92"*, i32, i32 }
%class.scoped_refptr.68 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type { %"class.blink::ScriptWrappable", %"class.blink::InspectorHelperMixin", %"class.blink::Member.307", %"class.blink::Member.307", %"class.blink::Member.307", %"class.blink::Member.307", %"class.blink::Member.307", %"class.blink::Member.307", %"class.blink::Member.307", %"class.blink::Member.307", %"class.blink::Member.307", %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D", %"class.blink::FloatPoint3D", double, i8, [7 x i8], %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.WTF::Mutex", %"class.WTF::HashSet.368", %class.scoped_refptr.372 }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::AudioParam"* }
%"class.blink::AudioParam" = type { %"class.blink::ScriptWrappable", %"class.blink::InspectorHelperMixin", %class.scoped_refptr.309, %"class.blink::Member.31", %class.scoped_refptr.33 }
%class.scoped_refptr.309 = type { %"class.blink::AudioParamHandler"* }
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.310", i32, %"class.WTF::String", %"struct.std::__1::atomic.317", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.336, %class.scoped_refptr.354 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.33, %"class.WTF::HashSet.64", %"class.WTF::Vector.312", i8 }>
%"class.WTF::HashSet.64" = type { %"class.WTF::HashTable.65" }
%"class.WTF::HashTable.65" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeOutput" = type opaque
%"class.WTF::Vector.312" = type { %"class.WTF::VectorBuffer.313" }
%"class.WTF::VectorBuffer.313" = type { %"class.WTF::VectorBufferBase.314" }
%"class.WTF::VectorBufferBase.314" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.WTF::ThreadSafeRefCounted.310" = type { %"class.base::RefCountedThreadSafe.311" }
%"class.base::RefCountedThreadSafe.311" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__cxx_atomic_impl.319" }
%"struct.std::__1::__cxx_atomic_impl.319" = type { %"struct.std::__1::__cxx_atomic_base_impl.320" }
%"struct.std::__1::__cxx_atomic_base_impl.320" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.321", %"class.WTF::HashSet.332", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.321" = type { %"class.WTF::VectorBuffer.322" }
%"class.WTF::VectorBuffer.322" = type { %"class.WTF::VectorBufferBase.323" }
%"class.WTF::VectorBufferBase.323" = type { %"class.std::__1::unique_ptr.324"*, i32, i32 }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.390", double, float, [4 x i8], %"class.std::__1::unique_ptr.324", i8, [7 x i8] }>
%"class.WTF::Vector.390" = type { %"class.WTF::VectorBuffer.391" }
%"class.WTF::VectorBuffer.391" = type { %"class.WTF::VectorBufferBase.392" }
%"class.WTF::VectorBufferBase.392" = type { float*, i32, i32 }
%"class.WTF::HashSet.332" = type { %"class.WTF::HashTable.333" }
%"class.WTF::HashTable.333" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.354 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.355", i32, %"class.WTF::Vector.357", i32, float }
%"class.WTF::ThreadSafeRefCounted.355" = type { %"class.base::RefCountedThreadSafe.356" }
%"class.base::RefCountedThreadSafe.356" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.357" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359", [64 x i8] }
%"class.WTF::VectorBufferBase.359" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.360", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::AudioArray"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.WTF::HashSet.368" = type { %"class.WTF::HashTable.369" }
%"class.WTF::HashTable.369" = type <{ %"class.blink::PannerHandler"**, i32, i32, i32, [4 x i8] }>
%"class.blink::PannerHandler" = type opaque
%class.scoped_refptr.372 = type { %"class.blink::HRTFDatabaseLoader"* }
%"class.blink::HRTFDatabaseLoader" = type opaque
%class.scoped_refptr.33 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.46", %"class.WTF::Vector.51", i8, [3 x i8], i32, %"class.WTF::HashSet.56", %"class.WTF::HashSet.56", %"class.WTF::HashSet.60", %"class.WTF::HashSet.64", %"class.WTF::Vector.51", %"class.WTF::Vector.51", %"class.WTF::Vector.51", %"class.WTF::Vector.51", i8, [7 x i8], %"class.WTF::HashSet.46", %"class.WTF::Vector.51", %class.scoped_refptr.68, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic.34", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.WTF::HashSet.56" = type { %"class.WTF::HashTable.57" }
%"class.WTF::HashTable.57" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.60" = type { %"class.WTF::HashTable.61" }
%"class.WTF::HashTable.61" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.33, %"class.WTF::HashSet.64", %"class.WTF::Vector.312", i8, [7 x i8] }>
%"class.WTF::HashSet.46" = type { %"class.WTF::HashTable.47" }
%"class.WTF::HashTable.47" = type <{ %class.scoped_refptr.50*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %class.scoped_refptr.50*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.373" = type { %"class.WTF::HashSet.376" }
%"class.WTF::HashSet.376" = type { %"class.WTF::HashTable.377" }
%"class.WTF::HashTable.377" = type <{ %"class.blink::Member.92"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type opaque
%class.scoped_refptr.336 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.146", i8, [7 x i8] }>
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted.337", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.33, %"class.WTF::Vector.342", %"class.WTF::Vector.348", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.383" = type { %"class.WTF::HashMap.386" }
%"class.WTF::HashMap.386" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ %"struct.WTF::KeyValuePair.389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.389" = type { i64, %"class.blink::Member.92" }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.96", i32, %"class.blink::Member.97", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.297", %"class.blink::SelfKeepAlive.301" }
%"class.blink::ThreadState::PrefinalizerRegistration.96" = type { i8 }
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.101, %"class.blink::Member.292", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.101 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.294" }
%"class.blink::Persistent.294" = type { %"class.blink::PersistentBase.295" }
%"class.blink::PersistentBase.295" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.97", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.297", %class.scoped_refptr.300 }
%class.scoped_refptr.300 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.297" = type { %"class.v8::TracedReference.298" }
%"class.v8::TracedReference.298" = type { %"class.v8::BasicTracedReference.299" }
%"class.v8::BasicTracedReference.299" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.301" = type { %"class.blink::Persistent.302" }
%"class.blink::Persistent.302" = type { %"class.blink::PersistentBase.303" }
%"class.blink::PersistentBase.303" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.990", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.998", %"class.WTF::Vector.998", i8, i32, %"class.blink::Member.1003", %"class.blink::Member.1063", %"class.blink::Member.1320", %"class.blink::Member.1322", %"class.blink::Member.1324", %"class.blink::Member.1326", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1328", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1334", %"class.blink::Member.1336", %"class.blink::Member.953", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1338", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.929", %"class.blink::Member.781", %"class.blink::Member.1295", %"class.blink::Member.781", %"class.blink::Member.781", %"class.blink::Member.781", %"class.blink::UserActionElementSet", %"class.blink::Member.1352", double, double, i64, i64, %"class.blink::HeapHashSet.1354", %"class.blink::HeapHashSet.1361", i16, i8, %"class.blink::Member.1368", %"class.blink::Member.1370", %"class.blink::Member.1372", %"class.blink::Member.1374", %"class.blink::TextLinkColors", %"class.blink::Member.1376", i8, [7 x i8], %"class.blink::HeapHashMap.1378", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.781", %"class.WTF::Vector.1385", %"class.blink::Member.1390", %"class.blink::Member.1392", i8, %"class.blink::Member.781", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1394", %"class.blink::HeapVector.1396", %"class.std::__1::unique_ptr.1404", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1410", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1423", %"class.WTF::Vector.1425", i8, i8, %"class.std::__1::unique_ptr.1430", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.929", %"class.blink::HeapVector.1436", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1444", i8, i32, %"class.blink::Member.1446", %"class.blink::Member.1448", %"class.blink::Member.1450", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1452", %"class.WTF::HashMap.1454", %"class.blink::Member.1459", %"class.blink::Member.1461", %"class.blink::Member.1463", %"class.blink::Member.1465", %"class.blink::Member.912", %"class.blink::Member.912", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1467", i8, i32, %"class.blink::Member.1474", %"class.blink::Member.1476", i32, %"class.blink::Member.1478", %"class.blink::Member.1480", %"class.blink::Member.1482", %"class.std::__1::unique_ptr.1484", i64, %"class.std::__1::unique_ptr.1490", i32, i32, %"class.blink::Member.1496", %"class.blink::Member.1498", %"class.blink::Member.1500", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1502", %"class.WTF::Vector.1306", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1504", %"class.blink::Member.1511", %"class.std::__1::unique_ptr.1513", %"class.blink::Member.1519", i8, i8, %"class.WTF::String", %"class.blink::Member.1521", i8, [7 x i8], %"class.blink::HeapHashMap.1523", %"class.blink::HeapObserverSet.1530", %"class.blink::Member.1538", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1540", i32, i8, i8, %"class.blink::WeakMember.1542", %"class.blink::Member.1543" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.990" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.991" }
%"class.blink::HeapHashMap.991" = type { %"class.WTF::HashMap.994" }
%"class.WTF::HashMap.994" = type { %"class.WTF::HashTable.995" }
%"class.WTF::HashTable.995" = type <{ %"struct.WTF::KeyValuePair.997"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.997" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1155", %"class.blink::ThreadState::PrefinalizerRegistration.1163", %"class.blink::Member.1164", %"class.blink::Member.912", %"class.blink::Member.1166", i8, %"class.blink::Member.1168", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::Member.1172", %"class.blink::Member.1172", %"class.blink::Member.1172", %"class.blink::Member.1172", %"class.blink::Member.1172", %"class.blink::Member.1174", %"class.blink::Member.1176", %"class.blink::Member.1178", %"class.blink::Member.1180", %"class.blink::Member.1182", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1122", %"class.blink::Member.1184", %class.scoped_refptr.1186, %"class.blink::HeapHashSet.1249", %"class.blink::Member.1256", %"class.blink::HeapHashMap.1269", %"class.std::__1::unique_ptr.1276", %"class.blink::Member.1282", %"class.blink::Member.1299", %"class.blink::Member.1301", %"class.blink::Member.1303", %"class.WTF::Vector.1306", %"class.util::TokenType.529", %"class.WTF::HashSet.1311", %"class.WTF::Deque.1315" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.1005", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1069", i32, i8, [3 x i8], %"class.blink::HeapVector.1071", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1079", %"class.blink::Member.1081", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1090", %"class.blink::Member.1151", %"class.blink::Member.1153", i8 }>
%"class.blink::Supplementable.1005" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1006" }
%"class.blink::HeapHashMap.1006" = type { %"class.WTF::HashMap.1009" }
%"class.WTF::HashMap.1009" = type { %"class.WTF::HashTable.1010" }
%"class.WTF::HashTable.1010" = type <{ %"struct.WTF::KeyValuePair.1012"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1012" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1013" }
%"class.blink::Supplementable.1013" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1014" }
%"class.blink::HeapHashMap.1014" = type { %"class.WTF::HashMap.1017" }
%"class.WTF::HashMap.1017" = type { %"class.WTF::HashTable.1018" }
%"class.WTF::HashTable.1018" = type <{ %"struct.WTF::KeyValuePair.1020"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1020" = type { i8*, %"class.blink::Member.1900" }
%"class.blink::Member.1900" = type { %"class.blink::MemberBase.1901" }
%"class.blink::MemberBase.1901" = type { %"class.blink::Supplement.1902"* }
%"class.blink::Supplement.1902" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1903" }
%"class.blink::Member.1903" = type { %"class.blink::MemberBase.1904" }
%"class.blink::MemberBase.1904" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1021, %"class.std::__1::unique_ptr.1030", %"class.std::__1::unique_ptr.1030", %"class.std::__1::unique_ptr.1057", %"class.std::__1::unique_ptr.1057", %"class.blink::Member.1063", i32, [4 x i8], %"class.WTF::HashSet.1065", i32, i32 }
%class.scoped_refptr.1021 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1022", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1024", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1029 }
%"class.WTF::RefCounted.1022" = type { %"class.base::RefCounted.1023" }
%"class.base::RefCounted.1023" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1024" = type { %"class.absl::optional_internal::optional_data.1025" }
%"class.absl::optional_internal::optional_data.1025" = type { %"class.absl::optional_internal::optional_data_base.1026" }
%"class.absl::optional_internal::optional_data_base.1026" = type { %"class.absl::optional_internal::optional_data_dtor_base.1027" }
%"class.absl::optional_internal::optional_data_dtor_base.1027" = type { i8, %union.anon.1028 }
%union.anon.1028 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.1029 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1030" = type { %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1033", %"class.std::__1::map.1044", %"class.std::__1::map.1053"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1024" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.1033" = type { %"class.std::__1::__tree.1034" }
%"class.std::__1::__tree.1034" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.std::__1::map.1044" = type { %"class.std::__1::__tree.1045" }
%"class.std::__1::__tree.1045" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1046", %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"class.std::__1::map.1053" = type opaque
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1065" = type { %"class.WTF::HashTable.1066" }
%"class.WTF::HashTable.1066" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1071" = type { %"class.WTF::Vector.1074" }
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { %"class.blink::Member.1077"*, i32, i32 }
%"class.blink::Member.1077" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1083", i32, i32 }
%"class.blink::HeapHashMap.1083" = type { %"class.WTF::HashMap.1086" }
%"class.WTF::HashMap.1086" = type { %"class.WTF::HashTable.1087" }
%"class.WTF::HashTable.1087" = type <{ %"struct.WTF::KeyValuePair.1089"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1089" = type opaque
%"class.std::__1::unique_ptr.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1093", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1093" = type { %"class.std::__1::unique_ptr.1094" }
%"class.std::__1::unique_ptr.1094" = type { %"class.std::__1::__compressed_pair.1095" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1097" }
%"class.WTF::Vector.1097" = type { %"class.WTF::VectorBuffer.1098" }
%"class.WTF::VectorBuffer.1098" = type { %"class.WTF::VectorBufferBase.1099" }
%"class.WTF::VectorBufferBase.1099" = type { %"class.mojo::StructPtr.1100"*, i32, i32 }
%"class.mojo::StructPtr.1100" = type { %"class.std::__1::unique_ptr.1101" }
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1104", %"class.WTF::HashMap.1111", %"class.WTF::HashMap.1116", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1121", i8, %"class.WTF::Vector.1122", i32, %"class.mojo::StructPtr.1127", %"class.WTF::Vector.1122" }
%"class.mojo::StructPtr.1104" = type { %"class.std::__1::unique_ptr.1105" }
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1111" = type { %"class.WTF::HashTable.1112" }
%"class.WTF::HashTable.1112" = type <{ %"struct.WTF::KeyValuePair.1115"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1115" = type opaque
%"class.WTF::HashMap.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ %"struct.WTF::KeyValuePair.1120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1120" = type opaque
%"class.mojo::InlinedStructPtr.1121" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1127" = type { %"class.std::__1::unique_ptr.1128" }
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1122", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1142" }
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Supplementable.1155" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1156" }
%"class.blink::HeapHashMap.1156" = type { %"class.WTF::HashMap.1159" }
%"class.WTF::HashMap.1159" = type { %"class.WTF::HashTable.1160" }
%"class.WTF::HashTable.1160" = type <{ %"struct.WTF::KeyValuePair.1162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1162" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1163" = type { i8 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.1122" = type { %"class.WTF::VectorBuffer.1123" }
%"class.WTF::VectorBuffer.1123" = type { %"class.WTF::VectorBufferBase.1124" }
%"class.WTF::VectorBufferBase.1124" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.1186 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1187", [4 x i8], %"class.std::__1::unique_ptr.1189", i64, %"class.WTF::Vector.1193", %"class.WTF::Vector.1198", %"class.WTF::Vector.1204", %"class.WTF::Vector.1222", %class.scoped_refptr.1021, %"class.WTF::HashMap.1228", %"class.WTF::Vector.1233", %"class.WTF::Vector.1193", %"class.WTF::Vector.1239", %"class.WTF::HashMap.1244", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1187" = type { %"class.base::RefCountedThreadSafe.1188" }
%"class.base::RefCountedThreadSafe.1188" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1189" = type { %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { i8* }
%"class.WTF::Vector.1198" = type { %"class.WTF::VectorBuffer.1199" }
%"class.WTF::VectorBuffer.1199" = type { %"class.WTF::VectorBufferBase.1200", [8 x i8] }
%"class.WTF::VectorBufferBase.1200" = type { %class.scoped_refptr.1201*, i32, i32 }
%class.scoped_refptr.1201 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1204" = type { %"class.WTF::VectorBuffer.1205" }
%"class.WTF::VectorBuffer.1205" = type { %"class.WTF::VectorBufferBase.1206" }
%"class.WTF::VectorBufferBase.1206" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1208", %"class.std::__1::unique_ptr.1214" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1207 }
%class.scoped_refptr.1207 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1208" = type { %"class.std::__1::__compressed_pair.1209" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1222" = type { %"class.WTF::VectorBuffer.1223" }
%"class.WTF::VectorBuffer.1223" = type { %"class.WTF::VectorBufferBase.1224" }
%"class.WTF::VectorBufferBase.1224" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1225", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1225" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1228" = type { %"class.WTF::HashTable.1229" }
%"class.WTF::HashTable.1229" = type <{ %"struct.WTF::KeyValuePair.1232"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1232" = type opaque
%"class.WTF::Vector.1233" = type { %"class.WTF::VectorBuffer.1234" }
%"class.WTF::VectorBuffer.1234" = type { %"class.WTF::VectorBufferBase.1235" }
%"class.WTF::VectorBufferBase.1235" = type { %"class.mojo::ScopedHandleBase.1236"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1236" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1193" = type { %"class.WTF::VectorBuffer.1194" }
%"class.WTF::VectorBuffer.1194" = type { %"class.WTF::VectorBufferBase.1195", [16 x i8] }
%"class.WTF::VectorBufferBase.1195" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1239" = type { %"class.WTF::VectorBuffer.1240" }
%"class.WTF::VectorBuffer.1240" = type { %"class.WTF::VectorBufferBase.1241" }
%"class.WTF::VectorBufferBase.1241" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1244" = type { %"class.WTF::HashTable.1245" }
%"class.WTF::HashTable.1245" = type <{ %"struct.WTF::KeyValuePair.1248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1248" = type { i8**, %"class.std::__1::unique_ptr.1905" }
%"class.std::__1::unique_ptr.1905" = type { %"class.std::__1::__compressed_pair.1906" }
%"class.std::__1::__compressed_pair.1906" = type { %"struct.std::__1::__compressed_pair_elem.1907" }
%"struct.std::__1::__compressed_pair_elem.1907" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1249" = type { %"class.WTF::HashSet.1252" }
%"class.WTF::HashSet.1252" = type { %"class.WTF::HashTable.1253" }
%"class.WTF::HashTable.1253" = type <{ %"class.blink::WeakMember.1255"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1255" = type opaque
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1263", %"class.blink::Member.1263", %"class.blink::Member.1265", %"class.blink::Member.1267", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1258" }
%"class.absl::optional.1258" = type { %"class.absl::optional_internal::optional_data.1259" }
%"class.absl::optional_internal::optional_data.1259" = type { %"class.absl::optional_internal::optional_data_base.1260" }
%"class.absl::optional_internal::optional_data_base.1260" = type { %"class.absl::optional_internal::optional_data_dtor_base.1261" }
%"class.absl::optional_internal::optional_data_dtor_base.1261" = type { i8, %union.anon.1262 }
%union.anon.1262 = type { i64 }
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::Event"* }
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1269" = type { %"class.WTF::HashMap.1272" }
%"class.WTF::HashMap.1272" = type { %"class.WTF::HashTable.1273" }
%"class.WTF::HashTable.1273" = type <{ %"struct.WTF::KeyValuePair.1275"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1275" = type opaque
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1282" = type { %"class.blink::MemberBase.1283" }
%"class.blink::MemberBase.1283" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.701", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1295", %"class.blink::Member.1297", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1286", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1288", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1288" = type { %"class.WTF::HashMap.1291" }
%"class.WTF::HashMap.1291" = type { %"class.WTF::HashTable.1292" }
%"class.WTF::HashTable.1292" = type <{ %"struct.WTF::KeyValuePair.1294"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1294" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.783", i32, i32 }
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1003", %"class.blink::Member.1563", %"class.blink::Member.1565" }
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1003", %"class.blink::HeapMojoRemote.1558" }
%"class.blink::HeapMojoRemote.1558" = type { %"class.blink::Member.1559" }
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1303" = type { %"class.blink::MemberBase.1304" }
%"class.blink::MemberBase.1304" = type { %"class.blink::HeapHashMap.1305"* }
%"class.blink::HeapHashMap.1305" = type opaque
%"class.WTF::HashSet.1311" = type { %"class.WTF::HashTable.1312" }
%"class.WTF::HashTable.1312" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1315" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1318" }
%"class.WTF::VectorBuffer.1318" = type { %"class.WTF::VectorBufferBase.1319" }
%"class.WTF::VectorBufferBase.1319" = type { i64*, i32, i32 }
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1005", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1069", i32, i8, [3 x i8], %"class.blink::HeapVector.1071", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1079", %"class.blink::Member.1081", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1090", %"class.blink::Member.1151", %"class.blink::Member.1153", i8, [7 x i8] }>
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1338" = type { %"class.WTF::VectorBuffer.1339" }
%"class.WTF::VectorBuffer.1339" = type { %"class.WTF::VectorBufferBase.1340" }
%"class.WTF::VectorBufferBase.1340" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.300 }
%"class.blink::Member.1295" = type { %"class.blink::MemberBase.1296" }
%"class.blink::MemberBase.1296" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.912", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.783", %"class.blink::Member.783", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1345" }
%"class.blink::HeapHashMap.1345" = type { %"class.WTF::HashMap.1348" }
%"class.WTF::HashMap.1348" = type { %"class.WTF::HashTable.1349" }
%"class.WTF::HashTable.1349" = type <{ %"struct.WTF::KeyValuePair.1351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1351" = type opaque
%"class.blink::Member.1352" = type { %"class.blink::MemberBase.1353" }
%"class.blink::MemberBase.1353" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1354" = type { %"class.WTF::HashSet.1357" }
%"class.WTF::HashSet.1357" = type { %"class.WTF::HashTable.1358" }
%"class.WTF::HashTable.1358" = type <{ %"class.blink::WeakMember.1360"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1360" = type opaque
%"class.blink::HeapHashSet.1361" = type { %"class.WTF::HashSet.1364" }
%"class.WTF::HashSet.1364" = type { %"class.WTF::HashTable.1365" }
%"class.WTF::HashTable.1365" = type <{ %"class.blink::WeakMember.1367"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1367" = type opaque
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.785", %"class.blink::HeapVector.947" }
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1376" = type { %"class.blink::MemberBase.1377" }
%"class.blink::MemberBase.1377" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1378" = type { %"class.WTF::HashMap.1381" }
%"class.WTF::HashMap.1381" = type { %"class.WTF::HashTable.1382" }
%"class.WTF::HashTable.1382" = type <{ %"struct.WTF::KeyValuePair.1384"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1384" = type opaque
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1396" = type { %"class.WTF::Vector.1399" }
%"class.WTF::Vector.1399" = type { %"class.WTF::VectorBuffer.1400" }
%"class.WTF::VectorBuffer.1400" = type { %"class.WTF::VectorBufferBase.1401" }
%"class.WTF::VectorBufferBase.1401" = type { %"class.blink::Member.1402"*, i32, i32 }
%"class.blink::Member.1402" = type opaque
%"class.std::__1::unique_ptr.1404" = type { %"class.std::__1::__compressed_pair.1405" }
%"class.std::__1::__compressed_pair.1405" = type { %"struct.std::__1::__compressed_pair_elem.1406" }
%"struct.std::__1::__compressed_pair_elem.1406" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1410" = type { %"class.WTF::HashSet.1413" }
%"class.WTF::HashSet.1413" = type { %"class.WTF::HashTable.1414" }
%"class.WTF::HashTable.1414" = type <{ %"class.blink::WeakMember.1416"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1416" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1417", i32, [4 x i8] }>
%"class.WTF::Vector.1417" = type { %"class.WTF::VectorBuffer.1418" }
%"class.WTF::VectorBuffer.1418" = type { %"class.WTF::VectorBufferBase.1419" }
%"class.WTF::VectorBufferBase.1419" = type { %"struct.std::__1::pair.1420"*, i32, i32 }
%"struct.std::__1::pair.1420" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1425" = type { %"class.WTF::VectorBuffer.1426" }
%"class.WTF::VectorBuffer.1426" = type { %"class.WTF::VectorBufferBase.1427" }
%"class.WTF::VectorBufferBase.1427" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1436" = type { %"class.WTF::Vector.1439" }
%"class.WTF::Vector.1439" = type { %"class.WTF::VectorBuffer.1440" }
%"class.WTF::VectorBuffer.1440" = type { %"class.WTF::VectorBufferBase.1441" }
%"class.WTF::VectorBufferBase.1441" = type { %"class.blink::Member.1442"*, i32, i32 }
%"class.blink::Member.1442" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.912" }
%"class.blink::Member.1444" = type { %"class.blink::MemberBase.1445" }
%"class.blink::MemberBase.1445" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1446" = type { %"class.blink::MemberBase.1447" }
%"class.blink::MemberBase.1447" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1448" = type { %"class.blink::MemberBase.1449" }
%"class.blink::MemberBase.1449" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1450" = type { %"class.blink::MemberBase.1451" }
%"class.blink::MemberBase.1451" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1452" = type { %"class.blink::MemberBase.1453" }
%"class.blink::MemberBase.1453" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1454" = type { %"class.WTF::HashTable.1455" }
%"class.WTF::HashTable.1455" = type <{ %"struct.WTF::KeyValuePair.1458"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1458" = type opaque
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1344", { i64, i64 } }
%"class.blink::WeakMember.1344" = type { %"class.blink::MemberBase.913" }
%"class.blink::HeapHashSet.1467" = type { %"class.WTF::HashSet.1470" }
%"class.WTF::HashSet.1470" = type { %"class.WTF::HashTable.1471" }
%"class.WTF::HashTable.1471" = type <{ %"class.blink::Member.1473"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1473" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1484" = type { %"class.std::__1::__compressed_pair.1485" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1490" = type { %"class.std::__1::__compressed_pair.1491" }
%"class.std::__1::__compressed_pair.1491" = type { %"struct.std::__1::__compressed_pair_elem.1492" }
%"struct.std::__1::__compressed_pair_elem.1492" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1306" = type { %"class.WTF::VectorBuffer.1307" }
%"class.WTF::VectorBuffer.1307" = type { %"class.WTF::VectorBufferBase.1308" }
%"class.WTF::VectorBufferBase.1308" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1504" = type { %"class.WTF::HashMap.1507" }
%"class.WTF::HashMap.1507" = type { %"class.WTF::HashTable.1508" }
%"class.WTF::HashTable.1508" = type <{ %"struct.WTF::KeyValuePair.1510"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1510" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1513" = type { %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.912", %"class.blink::HeapHashSet.1547", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1554", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1547" = type { %"class.WTF::HashSet.1550" }
%"class.WTF::HashSet.1550" = type { %"class.WTF::HashTable.1551" }
%"class.WTF::HashTable.1551" = type <{ %"class.blink::Member.1553"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1553" = type opaque
%"class.blink::HeapTaskRunnerTimer.1554" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1555", { i64, i64 } }
%"class.blink::WeakMember.1555" = type { %"class.blink::MemberBase.1541" }
%"class.blink::WeakMember.1542" = type { %"class.blink::MemberBase.784" }
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.297" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::OfflineAudioDestinationNode" = type { %"class.blink::AudioDestinationNode", %"class.blink::Member.1857" }
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::AudioBuffer"* }
%"class.blink::AudioBuffer" = type { %"class.blink::ScriptWrappable", float, i32, %"class.blink::HeapVector.1859" }
%"class.blink::HeapVector.1859" = type { %"class.WTF::Vector.1862" }
%"class.WTF::Vector.1862" = type { %"class.WTF::VectorBuffer.1863" }
%"class.WTF::VectorBuffer.1863" = type { %"class.WTF::VectorBufferBase.1864" }
%"class.WTF::VectorBufferBase.1864" = type { %"class.blink::Member.1865"*, i32, i32 }
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.1973" }
%"class.blink::Member.1973" = type { %"class.blink::MemberBase.1974" }
%"class.blink::MemberBase.1974" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8] }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1987, i32, i8, i8, [2 x i8] }>
%union.anon.1987 = type { %"class.WTF::Vector.1988" }
%"class.WTF::Vector.1988" = type { %"class.WTF::VectorBuffer.1989" }
%"class.WTF::VectorBuffer.1989" = type { %"class.WTF::VectorBufferBase.1990", [16 x i8] }
%"class.WTF::VectorBufferBase.1990" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::OfflineAudioContextOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i32, i32, float }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.97", %"class.blink::ScriptValue" }
%"class.WTF::StringAppend.1887" = type { %"class.WTF::StringAppend.1888", %"class.WTF::String" }
%"class.WTF::StringAppend.1888" = type { %"class.WTF::StringAppend", i8* }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend.1884" = type { %"class.WTF::StringAppend.1885", i8* }
%"class.WTF::StringAppend.1885" = type { %"class.WTF::StringAppend.1886", %"class.WTF::String" }
%"class.WTF::StringAppend.1886" = type { %"class.WTF::StringAppend.1887", i8* }
%"class.blink::OfflineAudioDestinationHandler" = type { %"class.blink::AudioDestinationHandler.base", %"class.std::__1::unique_ptr.1867", %class.scoped_refptr.354, i64, i32, i8, i32, float, %"class.std::__1::unique_ptr.1877", %class.scoped_refptr.68, %class.scoped_refptr.68, %"class.base::WeakPtrFactory.1883" }
%"class.blink::AudioDestinationHandler.base" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.146", i8 }>
%"class.std::__1::unique_ptr.1867" = type { %"class.std::__1::__compressed_pair.1868" }
%"class.std::__1::__compressed_pair.1868" = type { %"struct.std::__1::__compressed_pair_elem.1869" }
%"struct.std::__1::__compressed_pair_elem.1869" = type { %"class.blink::SharedAudioBuffer"* }
%"class.blink::SharedAudioBuffer" = type { float, i32, %"class.WTF::Vector.1870" }
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1195" }
%"class.std::__1::unique_ptr.1877" = type { %"class.std::__1::__compressed_pair.1878" }
%"class.std::__1::__compressed_pair.1878" = type { %"struct.std::__1::__compressed_pair_elem.1879" }
%"struct.std::__1::__compressed_pair_elem.1879" = type { %"class.blink::Thread"* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1883" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2037" = type { %"class.WTF::StringTypeAdapter.2038" }
%"class.WTF::StringTypeAdapter.2038" = type { %"class.WTF::StringView" }
%"class.WTF::IntegerToStringConverter.2047" = type <{ [24 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.1890" = type { %"class.WTF::StringAppend.1891", %"class.WTF::String" }
%"class.WTF::StringAppend.1891" = type { %"class.WTF::StringAppend.1892", i8* }
%"class.WTF::StringAppend.1892" = type { %"class.WTF::StringAppend.1893", %"class.WTF::String" }
%"class.WTF::StringAppend.1893" = type { %"class.WTF::StringAppend.1886", i8* }
%"class.WTF::StringAppend.1889" = type { %"class.WTF::StringAppend.1890", i8* }
%"class.blink::DeferredTaskHandler::GraphAutoLocker" = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::OfflineAudioCompletionEvent" = type { %"class.blink::Event", %"class.blink::Member.1857" }
%"struct.blink::AudioIOPosition" = type { double, double }
%"struct.blink::AudioCallbackMetric" = type { i64, double, double, double, double }
%"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker" = type { %"class.blink::DeferredTaskHandler"* }
%"class.v8::Value" = type { i8 }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1898", i8, [7 x i8] }>
%"class.blink::Member.1898" = type { %"class.blink::MemberBase.1899" }
%"class.blink::MemberBase.1899" = type { %"class.blink::EventListener"* }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.1894" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local.1894" = type { %"class.v8::Context"* }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.WTF::Vector.1993" = type { %"class.WTF::VectorBuffer.1994" }
%"class.WTF::VectorBuffer.1994" = type { %"class.WTF::VectorBufferBase.1995", [16 x i8] }
%"class.WTF::VectorBufferBase.1995" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.2052" = type { %"class.WTF::StringAppend.1893"* }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIjEEN3WTF6StringEPKcT_S6_ = comdat any

$_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_ = comdat any

$_ZN5blink17ExceptionMessages17IndexOutsideRangeIfEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_ = comdat any

$_ZNK5blink16BaseAudioContext15IsContextClosedEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSB_SC_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_ = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSD_SE_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSC_SD_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSB_SC_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_ED2Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink19OfflineAudioContext18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZN5blink19OfflineAudioContext21HasRealtimeConstraintEv = comdat any

$_ZN5blink19OfflineAudioContext21NotifySourceNodeStartEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_16BaseAudioContextEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_16BaseAudioContextEE26DispatchHasPendingActivityEv = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EC2ES8_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA34_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_IPKcNS5_6StringEEES8_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_INS6_INS6_INS6_INS6_IPKcNS5_6StringEEES8_EES9_EES8_EES9_EES8_EEEEEPS1_DpOT_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EC2ES7_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EC2ES8_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EC2ES9_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EC2ESA_S3_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_INS6_INS6_INS6_INS6_INS6_INS6_INS6_IPKcNS5_6StringEEES8_EES9_EES8_EES8_EES9_EES8_EES9_EES8_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF17StringTypeAdapterINS_12StringAppendINS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EEE6Is8BitEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E7WriteToEPDs = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_INS6_INS6_IPKcNS5_6StringEEES8_EES9_EES8_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_S9_SG_EERmRPS4_EENS_18HashTableAddResultISH_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6RehashEjPS6_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSI_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIN5blink6MemberINS7_21ScriptPromiseResolverEEEEEEENS7_13HeapAllocatorENS_12KeyValuePairImSA_EEEEvRT1_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableImNS1_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_29UnsignedWithZeroKeyHashTraitsImEENS1_10HashTraitsIS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA54_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA39_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_11AudioBufferEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA37_KcEEEPS1_DpOT_ = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE4findERKm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA28_KcEEEPS1_DpOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [27 x i8] c"Workers are not supported.\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"Cannot create OfflineAudioContext on a detached context.\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"number of frames\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"number of channels\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"sampleRate\00", align 1
@_ZTVN5blink19OfflineAudioContextE = hidden unnamed_addr constant { [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] } { [42 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*)* @_ZN5blink19OfflineAudioContextD2Ev to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*)* @_ZN5blink19OfflineAudioContextD0Ev to i8*), i8* bitcast (i1 (%"class.blink::OfflineAudioContext"*)* @_ZNK5blink19OfflineAudioContext18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*, %"class.blink::Visitor"*)* @_ZNK5blink19OfflineAudioContext5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::OfflineAudioContext"*)* @_ZNK5blink19OfflineAudioContext18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::BaseAudioContext"*)* @_ZNK5blink16BaseAudioContext13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::BaseAudioContext"*)* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*, i32)* @_ZN5blink16BaseAudioContext28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*)* @_ZN5blink16BaseAudioContext16ContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::OfflineAudioContext"*)* @_ZNK5blink19OfflineAudioContext19IsPullingAudioGraphEv to i8*), i8* bitcast (i1 (%"class.blink::OfflineAudioContext"*)* @_ZN5blink19OfflineAudioContext21HasRealtimeConstraintEv to i8*), i8* bitcast (i1 (%"class.blink::OfflineAudioContext"*, %"struct.blink::AudioIOPosition"*, %"struct.blink::AudioCallbackMetric"*)* @_ZN5blink19OfflineAudioContext20HandlePreRenderTasksEPKNS_15AudioIOPositionEPKNS_19AudioCallbackMetricE to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*)* @_ZN5blink19OfflineAudioContext21HandlePostRenderTasksEv to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*)* @_ZN5blink16BaseAudioContext14StartRenderingEv to i8*), i8* bitcast (i1 (%"class.blink::BaseAudioContext"*)* @_ZNK5blink16BaseAudioContext15IsContextClosedEv to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*)* @_ZN5blink19OfflineAudioContext21NotifySourceNodeStartEv to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*)* @_ZN5blink16BaseAudioContext15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*)* @_ZN5blink16BaseAudioContext21ReportWillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*)* @_ZN5blink16BaseAudioContext12UninitializeEv to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*)* @_ZN5blink19OfflineAudioContext22RejectPendingResolversEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::OfflineAudioContext"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink19OfflineAudioContext5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*)* @_ZThn72_N5blink19OfflineAudioContextD1Ev to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*)* @_ZThn72_N5blink19OfflineAudioContextD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_16BaseAudioContextEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_16BaseAudioContextEE26DispatchHasPendingActivityEv to i8*)], [9 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::OfflineAudioContext"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink19OfflineAudioContext5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*)* @_ZThn80_N5blink19OfflineAudioContextD1Ev to i8*), i8* bitcast (void (%"class.blink::OfflineAudioContext"*)* @_ZThn80_N5blink19OfflineAudioContextD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*)* @_ZThn80_N5blink16BaseAudioContext16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleStateObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink38ExecutionContextLifecycleStateObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*, i32)* @_ZThn80_N5blink16BaseAudioContext28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE to i8*)], [5 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::OfflineAudioContext"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink19OfflineAudioContext5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*)* @_ZThn104_N5blink16BaseAudioContext15ReportDidCreateEv to i8*), i8* bitcast (void (%"class.blink::BaseAudioContext"*)* @_ZThn104_N5blink16BaseAudioContext21ReportWillBeDestroyedEv to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [73 x i8] c"cannot call startRendering on an OfflineAudioContext in a stopped state.\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"cannot startRendering when an OfflineAudioContext is \00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"cannot call startRendering more than once\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"startRendering failed to create AudioBuffer(\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"the rendering is already finished\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"negative suspend time (\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c") is not allowed\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"cannot schedule a suspend at \00", align 1
@.str.15 = private unnamed_addr constant [78 x i8] c" seconds because it is greater than or equal to the total render duration of \00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c" frames (\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c" seconds)\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"suspend(\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c") failed to suspend at frame \00", align 1
@.str.20 = private unnamed_addr constant [41 x i8] c" because it is earlier than the current \00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"frame of \00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.23 = private unnamed_addr constant [48 x i8] c"cannot schedule more than one suspend at frame \00", align 1
@.str.24 = private unnamed_addr constant [54 x i8] c"cannot resume an offline context that has not started\00", align 1
@.str.25 = private unnamed_addr constant [39 x i8] c"cannot resume a closed offline context\00", align 1
@.str.26 = private unnamed_addr constant [37 x i8] c"the execution context does not exist\00", align 1
@.str.27 = private unnamed_addr constant [28 x i8] c"Audio context is going away\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink19OfflineAudioContext18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.28 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.29 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@.str.30 = private unnamed_addr constant [5 x i8] c"The \00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c" provided (\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c") is less than \00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"or equal to \00", align 1
@.str.34 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.35 = private unnamed_addr constant [20 x i8] c"the minimum bound (\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c").\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.38 = private unnamed_addr constant [24 x i8] c") is outside the range \00", align 1
@.str.39 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.40 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.41 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.42 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.43 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.44 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.45 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.46 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.47 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.48 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptPromiseResolver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.49 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.50 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.52 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.54 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.56 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableImNS_12KeyValuePairImNS1_6MemberINS1_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [460 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<unsigned long, WTF::KeyValuePair<unsigned long, blink::Member<blink::ScriptPromiseResolver> >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<unsigned long>, WTF::HashMapValueTraits<WTF::UnsignedWithZeroKeyHashTraits<unsigned long>, WTF::HashTraits<blink::Member<blink::ScriptPromiseResolver> > >, WTF::UnsignedWithZeroKeyHashTraits<unsigned long>, blink::HeapAllocator> >]\00", align 1

@_ZN5blink19OfflineAudioContextC1EPNS_8DocumentEjjfRNS_14ExceptionStateE = hidden unnamed_addr alias void (%"class.blink::OfflineAudioContext"*, %"class.blink::Document"*, i32, i32, float, %"class.blink::ExceptionState"*), void (%"class.blink::OfflineAudioContext"*, %"class.blink::Document"*, i32, i32, float, %"class.blink::ExceptionState"*)* @_ZN5blink19OfflineAudioContextC2EPNS_8DocumentEjjfRNS_14ExceptionStateE
@_ZN5blink19OfflineAudioContextD1Ev = hidden unnamed_addr alias void (%"class.blink::OfflineAudioContext"*), void (%"class.blink::OfflineAudioContext"*)* @_ZN5blink19OfflineAudioContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::OfflineAudioContext"* @_ZN5blink19OfflineAudioContext6CreateEPNS_16ExecutionContextEjjfRNS_14ExceptionStateE(%"class.blink::ExecutionContext"*, i32, i32, float, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %12 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %12, i64 1
  %14 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::ExecutionContext"* nonnull %0) #8
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %18 = bitcast i32* %17 to %"class.blink::LocalDOMWindow"*
  %19 = icmp eq i32* %17, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %5, %10, %16
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0)) #8
  br label %137

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 13
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 9, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %137

26:                                               ; preds = %21
  %27 = icmp eq i32 %2, 0
  br i1 %27, label %28, label %51

28:                                               ; preds = %26
  %29 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIjEEN3WTF6StringEPKcT_S6_(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 1)
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %31, align 8
  %32 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %33 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %32, align 8
  %34 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %33, align 8
  call void %34(%"class.blink::ExceptionState"* %4, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %6) #8
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %50

50:                                               ; preds = %28, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %137

51:                                               ; preds = %26
  %52 = add i32 %1, -1
  %53 = icmp ugt i32 %52, 31
  br i1 %53, label %54, label %77

54:                                               ; preds = %51
  %55 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  %56 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 %1, i32 1, i32 0, i32 32, i32 0)
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  %58 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %59 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %58, align 8
  %60 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %59, align 8
  call void %60(%"class.blink::ExceptionState"* %4, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %7) #8
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #8
  br label %76

76:                                               ; preds = %54, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  br label %137

77:                                               ; preds = %51
  %78 = tail call zeroext i1 @_ZN5blink15audio_utilities28IsValidAudioBufferSampleRateEf(float %3) #8
  br i1 %78, label %104, label %79

79:                                               ; preds = %77
  %80 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #8
  %81 = tail call float @_ZN5blink15audio_utilities24MinAudioBufferSampleRateEv() #8
  %82 = tail call float @_ZN5blink15audio_utilities24MaxAudioBufferSampleRateEv() #8
  %83 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIfEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), float %3, float %81, i32 0, float %82, i32 0)
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %84, align 8
  %85 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %86 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %85, align 8
  %87 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %86, align 8
  call void %87(%"class.blink::ExceptionState"* %4, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %8) #8
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %79
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #8
  br label %103

103:                                              ; preds = %79, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #8
  br label %137

104:                                              ; preds = %77
  %105 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %18) #8
  %106 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 344) #8
  %107 = bitcast i8* %106 to %"class.blink::OfflineAudioContext"*
  %108 = bitcast i8* %106 to %"class.blink::BaseAudioContext"*
  tail call void @_ZN5blink16BaseAudioContextC2EPNS_8DocumentENS0_11ContextTypeE(%"class.blink::BaseAudioContext"* %108, %"class.blink::Document"* %105, i32 1) #8
  %109 = bitcast i8* %106 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }, { [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }* @_ZTVN5blink19OfflineAudioContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds i8, i8* %106, i64 72
  %111 = getelementptr inbounds i8, i8* %106, i64 80
  %112 = bitcast i8* %110 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }, { [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }* @_ZTVN5blink19OfflineAudioContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }, { [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }* @_ZTVN5blink19OfflineAudioContextE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %112, align 8
  %113 = getelementptr inbounds i8, i8* %106, i64 104
  %114 = bitcast i8* %113 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }, { [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }* @_ZTVN5blink19OfflineAudioContextE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %115 = getelementptr inbounds i8, i8* %106, i64 304
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 20, i1 false) #8
  %116 = getelementptr inbounds i8, i8* %106, i64 328
  %117 = bitcast i8* %116 to %"class.blink::ScriptPromiseResolver"**
  store %"class.blink::ScriptPromiseResolver"* null, %"class.blink::ScriptPromiseResolver"** %117, align 8
  %118 = getelementptr inbounds i8, i8* %106, i64 336
  store i8 0, i8* %118, align 8
  %119 = getelementptr inbounds i8, i8* %106, i64 340
  %120 = bitcast i8* %119 to i32*
  store i32 %2, i32* %120, align 4
  %121 = tail call %"class.blink::OfflineAudioDestinationNode"* @_ZN5blink27OfflineAudioDestinationNode6CreateEPNS_16BaseAudioContextEjjf(%"class.blink::BaseAudioContext"* %108, i32 %1, i32 %2, float %3) #8
  %122 = getelementptr inbounds i8, i8* %106, i64 144
  %123 = ptrtoint %"class.blink::OfflineAudioDestinationNode"* %121 to i64
  %124 = bitcast i8* %122 to i64*
  store atomic i64 %123, i64* %124 monotonic, align 8
  %125 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %104
  %128 = bitcast %"class.blink::OfflineAudioDestinationNode"* %121 to i8*
  %129 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %128) #8
  br label %130

130:                                              ; preds = %104, %127
  tail call void @_ZN5blink16BaseAudioContext10InitializeEv(%"class.blink::BaseAudioContext"* %108) #8
  %131 = getelementptr inbounds i8, i8* %106, i64 -4
  %132 = bitcast i8* %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = or i16 %133, 1
  store atomic i16 %134, i16* %132 release, align 2
  %135 = bitcast i8* %110 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %135) #8
  %136 = bitcast i8* %111 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserver19UpdateStateIfNeededEv(%"class.blink::ExecutionContextLifecycleStateObserver"* %136) #8
  br label %137

137:                                              ; preds = %130, %103, %76, %50, %25, %20
  %138 = phi %"class.blink::OfflineAudioContext"* [ null, %25 ], [ null, %76 ], [ %107, %130 ], [ null, %103 ], [ null, %50 ], [ null, %20 ]
  ret %"class.blink::OfflineAudioContext"* %138
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIjEEN3WTF6StringEPKcT_S6_(i8*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = icmp eq i32 %1, %2
  %17 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %20 = bitcast %union.anon.1987* %19 to i8*
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %23, align 1
  %24 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  %29 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  %30 = icmp eq i8* %0, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %3
  %32 = call i64 @strlen(i8* nonnull %0) #11
  %33 = icmp ult i64 %32, 4294967296
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %31
  call void @llvm.trap() #8
  unreachable

35:                                               ; preds = %31
  %36 = trunc i64 %32 to i32
  br label %37

37:                                               ; preds = %3, %35
  %38 = phi i32 [ %36, %35 ], [ 0, %3 ]
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %0, i8** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %38, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  %43 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 11, i32* %47, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8
  %48 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #8
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 32, i1 false) #8
  store i8* %50, i8** %51, align 8
  %54 = urem i32 %1, 10
  %55 = udiv i32 %1, 10
  %56 = trunc i32 %54 to i8
  %57 = or i8 %56, 48
  store i8 %57, i8* %50, align 1
  %58 = icmp ugt i32 %1, 9
  br i1 %58, label %59, label %92

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %60, i8** %51, align 8
  %61 = urem i32 %55, 10
  %62 = trunc i32 %61 to i8
  %63 = or i8 %62, 48
  store i8 %63, i8* %60, align 2
  %64 = icmp ugt i32 %1, 99
  br i1 %64, label %65, label %90

65:                                               ; preds = %59
  %66 = udiv i32 %1, 100
  %67 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %67, i8** %51, align 8
  %68 = urem i32 %66, 10
  %69 = trunc i32 %68 to i8
  %70 = or i8 %69, 48
  store i8 %70, i8* %67, align 1
  %71 = icmp ugt i32 %1, 999
  br i1 %71, label %72, label %88

72:                                               ; preds = %65
  %73 = udiv i32 %1, 1000
  %74 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 8
  store i8* %74, i8** %51, align 8
  %75 = urem i32 %73, 10
  %76 = trunc i32 %75 to i8
  %77 = or i8 %76, 48
  store i8 %77, i8* %74, align 8
  %78 = icmp ugt i32 %1, 9999
  br i1 %78, label %79, label %86

79:                                               ; preds = %72
  %80 = udiv i32 %1, 10000
  %81 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 7
  store i8* %81, i8** %51, align 8
  %82 = urem i32 %80, 10
  %83 = trunc i32 %82 to i8
  %84 = or i8 %83, 48
  store i8 %84, i8* %81, align 1
  %85 = icmp ugt i32 %1, 99999
  br i1 %85, label %94, label %103

86:                                               ; preds = %72
  %87 = ptrtoint i8* %74 to i64
  br label %106

88:                                               ; preds = %65
  %89 = ptrtoint i8* %67 to i64
  br label %106

90:                                               ; preds = %59
  %91 = ptrtoint i8* %60 to i64
  br label %106

92:                                               ; preds = %37
  %93 = ptrtoint i8* %50 to i64
  br label %106

94:                                               ; preds = %79, %94
  %95 = phi i32 [ %97, %94 ], [ %80, %79 ]
  %96 = load i8*, i8** %51, align 8
  %97 = udiv i32 %95, 10
  %98 = getelementptr inbounds i8, i8* %96, i64 -1
  store i8* %98, i8** %51, align 8
  %99 = urem i32 %97, 10
  %100 = trunc i32 %99 to i8
  %101 = or i8 %100, 48
  store i8 %101, i8* %98, align 1
  %102 = icmp ugt i32 %95, 99
  br i1 %102, label %94, label %103

103:                                              ; preds = %94, %79
  %104 = bitcast i8** %51 to i64*
  %105 = load i64, i64* %104, align 8
  br label %106

106:                                              ; preds = %103, %86, %88, %90, %92
  %107 = phi i64 [ %93, %92 ], [ %91, %90 ], [ %89, %88 ], [ %105, %103 ], [ %87, %86 ]
  %108 = ptrtoint i8* %53 to i64
  %109 = sub i64 %108, %107
  %110 = trunc i64 %109 to i32
  store i32 %110, i32* %52, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %111, i32 %110) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %114, label %119

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %115, align 8
  %116 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %117 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 0, i32* %118, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  br label %139

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 1
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %125 = bitcast i8** %124 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %122, i32* %126, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %119
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %119
  %136 = phi i32 [ %134, %133 ], [ %132, %119 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #8
  br label %139

139:                                              ; preds = %114, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8
  %140 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #8
  %141 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %142 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), i8** %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 15, i32* %144, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #8
  %145 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #8
  %146 = select i1 %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i64 0, i64 0)
  %147 = select i1 %16, i32 12, i32 0
  %148 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %149 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %146, i8** %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %147, i32* %151, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #8
  %152 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #8
  %153 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %154 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i64 0, i64 0), i8** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 19, i32* %156, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #8
  %157 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #8
  %158 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %158) #8
  %159 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %160 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %162 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 32, i1 false) #8
  store i8* %159, i8** %160, align 8
  %163 = urem i32 %2, 10
  %164 = udiv i32 %2, 10
  %165 = trunc i32 %163 to i8
  %166 = or i8 %165, 48
  store i8 %166, i8* %159, align 1
  %167 = icmp ugt i32 %2, 9
  br i1 %167, label %168, label %201

168:                                              ; preds = %139
  %169 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %169, i8** %160, align 8
  %170 = urem i32 %164, 10
  %171 = trunc i32 %170 to i8
  %172 = or i8 %171, 48
  store i8 %172, i8* %169, align 2
  %173 = icmp ugt i32 %2, 99
  br i1 %173, label %174, label %199

174:                                              ; preds = %168
  %175 = udiv i32 %2, 100
  %176 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %176, i8** %160, align 8
  %177 = urem i32 %175, 10
  %178 = trunc i32 %177 to i8
  %179 = or i8 %178, 48
  store i8 %179, i8* %176, align 1
  %180 = icmp ugt i32 %2, 999
  br i1 %180, label %181, label %197

181:                                              ; preds = %174
  %182 = udiv i32 %2, 1000
  %183 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 8
  store i8* %183, i8** %160, align 8
  %184 = urem i32 %182, 10
  %185 = trunc i32 %184 to i8
  %186 = or i8 %185, 48
  store i8 %186, i8* %183, align 8
  %187 = icmp ugt i32 %2, 9999
  br i1 %187, label %188, label %195

188:                                              ; preds = %181
  %189 = udiv i32 %2, 10000
  %190 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 7
  store i8* %190, i8** %160, align 8
  %191 = urem i32 %189, 10
  %192 = trunc i32 %191 to i8
  %193 = or i8 %192, 48
  store i8 %193, i8* %190, align 1
  %194 = icmp ugt i32 %2, 99999
  br i1 %194, label %203, label %212

195:                                              ; preds = %181
  %196 = ptrtoint i8* %183 to i64
  br label %215

197:                                              ; preds = %174
  %198 = ptrtoint i8* %176 to i64
  br label %215

199:                                              ; preds = %168
  %200 = ptrtoint i8* %169 to i64
  br label %215

201:                                              ; preds = %139
  %202 = ptrtoint i8* %159 to i64
  br label %215

203:                                              ; preds = %188, %203
  %204 = phi i32 [ %206, %203 ], [ %189, %188 ]
  %205 = load i8*, i8** %160, align 8
  %206 = udiv i32 %204, 10
  %207 = getelementptr inbounds i8, i8* %205, i64 -1
  store i8* %207, i8** %160, align 8
  %208 = urem i32 %206, 10
  %209 = trunc i32 %208 to i8
  %210 = or i8 %209, 48
  store i8 %210, i8* %207, align 1
  %211 = icmp ugt i32 %204, 99
  br i1 %211, label %203, label %212

212:                                              ; preds = %203, %188
  %213 = bitcast i8** %160 to i64*
  %214 = load i64, i64* %213, align 8
  br label %215

215:                                              ; preds = %212, %195, %197, %199, %201
  %216 = phi i64 [ %202, %201 ], [ %200, %199 ], [ %198, %197 ], [ %214, %212 ], [ %196, %195 ]
  %217 = ptrtoint i8* %162 to i64
  %218 = sub i64 %217, %216
  %219 = trunc i64 %218 to i32
  store i32 %219, i32* %161, align 8
  %220 = inttoptr i64 %216 to i8*
  %221 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %220, i32 %219) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %158) #8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %223, label %228

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %224, align 8
  %225 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %226 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %227, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %248

228:                                              ; preds = %215
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %221, %"class.WTF::StringImpl"** %229, align 8
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 1
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %234 = bitcast i8** %233 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %234, align 8
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %231, i32* %235, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %228
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %228
  %245 = phi i32 [ %243, %242 ], [ %241, %228 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #8
  br label %248

248:                                              ; preds = %223, %244, %247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #8
  %249 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %249) #8
  %250 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %251 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0), i8** %252, align 8
  %253 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 2, i32* %253, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %249) #8
  %254 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #8
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %248
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #8
  br label %270

270:                                              ; preds = %248, %266, %269
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #8
  ret %"class.WTF::StringImpl"* %254
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIjEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::StringBuilder", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = bitcast %"class.WTF::StringBuilder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 1
  %22 = bitcast %union.anon.1987* %21 to i8*
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 2
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 3
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 4
  store i8 0, i8* %25, align 1
  %26 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %30, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  %31 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = icmp eq i8* %0, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %6
  %34 = call i64 @strlen(i8* nonnull %0) #11
  %35 = icmp ult i64 %34, 4294967296
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %33
  call void @llvm.trap() #8
  unreachable

37:                                               ; preds = %33
  %38 = trunc i64 %34 to i32
  br label %39

39:                                               ; preds = %6, %37
  %40 = phi i32 [ %38, %37 ], [ 0, %6 ]
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %0, i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %40, i32* %44, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  %45 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 11, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  %50 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #8
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #8
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %54 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %55 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 32, i1 false) #8
  store i8* %52, i8** %53, align 8
  %56 = urem i32 %1, 10
  %57 = udiv i32 %1, 10
  %58 = trunc i32 %56 to i8
  %59 = or i8 %58, 48
  store i8 %59, i8* %52, align 1
  %60 = icmp ugt i32 %1, 9
  br i1 %60, label %61, label %94

61:                                               ; preds = %39
  %62 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %62, i8** %53, align 8
  %63 = urem i32 %57, 10
  %64 = trunc i32 %63 to i8
  %65 = or i8 %64, 48
  store i8 %65, i8* %62, align 2
  %66 = icmp ugt i32 %1, 99
  br i1 %66, label %67, label %92

67:                                               ; preds = %61
  %68 = udiv i32 %1, 100
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8* %69, i8** %53, align 8
  %70 = urem i32 %68, 10
  %71 = trunc i32 %70 to i8
  %72 = or i8 %71, 48
  store i8 %72, i8* %69, align 1
  %73 = icmp ugt i32 %1, 999
  br i1 %73, label %74, label %90

74:                                               ; preds = %67
  %75 = udiv i32 %1, 1000
  %76 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 8
  store i8* %76, i8** %53, align 8
  %77 = urem i32 %75, 10
  %78 = trunc i32 %77 to i8
  %79 = or i8 %78, 48
  store i8 %79, i8* %76, align 8
  %80 = icmp ugt i32 %1, 9999
  br i1 %80, label %81, label %88

81:                                               ; preds = %74
  %82 = udiv i32 %1, 10000
  %83 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 7
  store i8* %83, i8** %53, align 8
  %84 = urem i32 %82, 10
  %85 = trunc i32 %84 to i8
  %86 = or i8 %85, 48
  store i8 %86, i8* %83, align 1
  %87 = icmp ugt i32 %1, 99999
  br i1 %87, label %96, label %105

88:                                               ; preds = %74
  %89 = ptrtoint i8* %76 to i64
  br label %108

90:                                               ; preds = %67
  %91 = ptrtoint i8* %69 to i64
  br label %108

92:                                               ; preds = %61
  %93 = ptrtoint i8* %62 to i64
  br label %108

94:                                               ; preds = %39
  %95 = ptrtoint i8* %52 to i64
  br label %108

96:                                               ; preds = %81, %96
  %97 = phi i32 [ %99, %96 ], [ %82, %81 ]
  %98 = load i8*, i8** %53, align 8
  %99 = udiv i32 %97, 10
  %100 = getelementptr inbounds i8, i8* %98, i64 -1
  store i8* %100, i8** %53, align 8
  %101 = urem i32 %99, 10
  %102 = trunc i32 %101 to i8
  %103 = or i8 %102, 48
  store i8 %103, i8* %100, align 1
  %104 = icmp ugt i32 %97, 99
  br i1 %104, label %96, label %105

105:                                              ; preds = %96, %81
  %106 = bitcast i8** %53 to i64*
  %107 = load i64, i64* %106, align 8
  br label %108

108:                                              ; preds = %105, %88, %90, %92, %94
  %109 = phi i64 [ %95, %94 ], [ %93, %92 ], [ %91, %90 ], [ %107, %105 ], [ %89, %88 ]
  %110 = ptrtoint i8* %55 to i64
  %111 = sub i64 %110, %109
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %54, align 8
  %113 = inttoptr i64 %109 to i8*
  %114 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %113, i32 %112) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %116, label %121

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %117, align 8
  %118 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %119 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %120, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %141

121:                                              ; preds = %108
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 1
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %127 = bitcast i8** %126 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %124, i32* %128, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %121
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %121
  %138 = phi i32 [ %136, %135 ], [ %134, %121 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #8
  br label %141

141:                                              ; preds = %116, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #8
  %142 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #8
  %143 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %144 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i64 0, i64 0), i8** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 23, i32* %146, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #8
  %147 = icmp eq i32 %3, 1
  %148 = select i1 %147, i8 40, i8 91
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext %148) #8
  %149 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #8
  %150 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #8
  %151 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %152 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %153 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  %154 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 32, i1 false) #8
  store i8* %151, i8** %152, align 8
  %155 = urem i32 %2, 10
  %156 = udiv i32 %2, 10
  %157 = trunc i32 %155 to i8
  %158 = or i8 %157, 48
  store i8 %158, i8* %151, align 1
  %159 = icmp ugt i32 %2, 9
  br i1 %159, label %160, label %193

160:                                              ; preds = %141
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %161, i8** %152, align 8
  %162 = urem i32 %156, 10
  %163 = trunc i32 %162 to i8
  %164 = or i8 %163, 48
  store i8 %164, i8* %161, align 2
  %165 = icmp ugt i32 %2, 99
  br i1 %165, label %166, label %191

166:                                              ; preds = %160
  %167 = udiv i32 %2, 100
  %168 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %168, i8** %152, align 8
  %169 = urem i32 %167, 10
  %170 = trunc i32 %169 to i8
  %171 = or i8 %170, 48
  store i8 %171, i8* %168, align 1
  %172 = icmp ugt i32 %2, 999
  br i1 %172, label %173, label %189

173:                                              ; preds = %166
  %174 = udiv i32 %2, 1000
  %175 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 8
  store i8* %175, i8** %152, align 8
  %176 = urem i32 %174, 10
  %177 = trunc i32 %176 to i8
  %178 = or i8 %177, 48
  store i8 %178, i8* %175, align 8
  %179 = icmp ugt i32 %2, 9999
  br i1 %179, label %180, label %187

180:                                              ; preds = %173
  %181 = udiv i32 %2, 10000
  %182 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 7
  store i8* %182, i8** %152, align 8
  %183 = urem i32 %181, 10
  %184 = trunc i32 %183 to i8
  %185 = or i8 %184, 48
  store i8 %185, i8* %182, align 1
  %186 = icmp ugt i32 %2, 99999
  br i1 %186, label %195, label %204

187:                                              ; preds = %173
  %188 = ptrtoint i8* %175 to i64
  br label %207

189:                                              ; preds = %166
  %190 = ptrtoint i8* %168 to i64
  br label %207

191:                                              ; preds = %160
  %192 = ptrtoint i8* %161 to i64
  br label %207

193:                                              ; preds = %141
  %194 = ptrtoint i8* %151 to i64
  br label %207

195:                                              ; preds = %180, %195
  %196 = phi i32 [ %198, %195 ], [ %181, %180 ]
  %197 = load i8*, i8** %152, align 8
  %198 = udiv i32 %196, 10
  %199 = getelementptr inbounds i8, i8* %197, i64 -1
  store i8* %199, i8** %152, align 8
  %200 = urem i32 %198, 10
  %201 = trunc i32 %200 to i8
  %202 = or i8 %201, 48
  store i8 %202, i8* %199, align 1
  %203 = icmp ugt i32 %196, 99
  br i1 %203, label %195, label %204

204:                                              ; preds = %195, %180
  %205 = bitcast i8** %152 to i64*
  %206 = load i64, i64* %205, align 8
  br label %207

207:                                              ; preds = %204, %187, %189, %191, %193
  %208 = phi i64 [ %194, %193 ], [ %192, %191 ], [ %190, %189 ], [ %206, %204 ], [ %188, %187 ]
  %209 = ptrtoint i8* %154 to i64
  %210 = sub i64 %209, %208
  %211 = trunc i64 %210 to i32
  store i32 %211, i32* %153, align 8
  %212 = inttoptr i64 %208 to i8*
  %213 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %212, i32 %211) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %215, label %220

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %216, align 8
  %217 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %218 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 0, i32* %219, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  br label %240

220:                                              ; preds = %207
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %221, align 8
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 1
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %226 = bitcast i8** %225 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %224, %"class.WTF::StringImpl"** %226, align 8
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %223, i32* %227, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %220
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %220
  %237 = phi i32 [ %235, %234 ], [ %233, %220 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #8
  br label %240

240:                                              ; preds = %215, %236, %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #8
  %241 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #8
  %242 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %243 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8** %244, align 8
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 2, i32* %245, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #8
  %246 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #8
  %247 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %247) #8
  %248 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %249 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %250 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %251 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %247, i8 -86, i64 32, i1 false) #8
  store i8* %248, i8** %249, align 8
  %252 = urem i32 %4, 10
  %253 = udiv i32 %4, 10
  %254 = trunc i32 %252 to i8
  %255 = or i8 %254, 48
  store i8 %255, i8* %248, align 1
  %256 = icmp ugt i32 %4, 9
  br i1 %256, label %257, label %290

257:                                              ; preds = %240
  %258 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %258, i8** %249, align 8
  %259 = urem i32 %253, 10
  %260 = trunc i32 %259 to i8
  %261 = or i8 %260, 48
  store i8 %261, i8* %258, align 2
  %262 = icmp ugt i32 %4, 99
  br i1 %262, label %263, label %288

263:                                              ; preds = %257
  %264 = udiv i32 %4, 100
  %265 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %265, i8** %249, align 8
  %266 = urem i32 %264, 10
  %267 = trunc i32 %266 to i8
  %268 = or i8 %267, 48
  store i8 %268, i8* %265, align 1
  %269 = icmp ugt i32 %4, 999
  br i1 %269, label %270, label %286

270:                                              ; preds = %263
  %271 = udiv i32 %4, 1000
  %272 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 8
  store i8* %272, i8** %249, align 8
  %273 = urem i32 %271, 10
  %274 = trunc i32 %273 to i8
  %275 = or i8 %274, 48
  store i8 %275, i8* %272, align 8
  %276 = icmp ugt i32 %4, 9999
  br i1 %276, label %277, label %284

277:                                              ; preds = %270
  %278 = udiv i32 %4, 10000
  %279 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 7
  store i8* %279, i8** %249, align 8
  %280 = urem i32 %278, 10
  %281 = trunc i32 %280 to i8
  %282 = or i8 %281, 48
  store i8 %282, i8* %279, align 1
  %283 = icmp ugt i32 %4, 99999
  br i1 %283, label %292, label %301

284:                                              ; preds = %270
  %285 = ptrtoint i8* %272 to i64
  br label %304

286:                                              ; preds = %263
  %287 = ptrtoint i8* %265 to i64
  br label %304

288:                                              ; preds = %257
  %289 = ptrtoint i8* %258 to i64
  br label %304

290:                                              ; preds = %240
  %291 = ptrtoint i8* %248 to i64
  br label %304

292:                                              ; preds = %277, %292
  %293 = phi i32 [ %295, %292 ], [ %278, %277 ]
  %294 = load i8*, i8** %249, align 8
  %295 = udiv i32 %293, 10
  %296 = getelementptr inbounds i8, i8* %294, i64 -1
  store i8* %296, i8** %249, align 8
  %297 = urem i32 %295, 10
  %298 = trunc i32 %297 to i8
  %299 = or i8 %298, 48
  store i8 %299, i8* %296, align 1
  %300 = icmp ugt i32 %293, 99
  br i1 %300, label %292, label %301

301:                                              ; preds = %292, %277
  %302 = bitcast i8** %249 to i64*
  %303 = load i64, i64* %302, align 8
  br label %304

304:                                              ; preds = %301, %284, %286, %288, %290
  %305 = phi i64 [ %291, %290 ], [ %289, %288 ], [ %287, %286 ], [ %303, %301 ], [ %285, %284 ]
  %306 = ptrtoint i8* %251 to i64
  %307 = sub i64 %306, %305
  %308 = trunc i64 %307 to i32
  store i32 %308, i32* %250, align 8
  %309 = inttoptr i64 %305 to i8*
  %310 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %309, i32 %308) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %247) #8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %312, label %317

312:                                              ; preds = %304
  %313 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %313, align 8
  %314 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %315 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 0, i32* %316, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  br label %337

317:                                              ; preds = %304
  %318 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %310, %"class.WTF::StringImpl"** %318, align 8
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 1
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %323 = bitcast i8** %322 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %321, %"class.WTF::StringImpl"** %323, align 8
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %320, i32* %324, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  br i1 %328, label %331, label %333

331:                                              ; preds = %317
  %332 = add i32 %330, -1
  store i32 %332, i32* %329, align 4
  br label %333

333:                                              ; preds = %331, %317
  %334 = phi i32 [ %332, %331 ], [ %330, %317 ]
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #8
  br label %337

337:                                              ; preds = %312, %333, %336
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #8
  %338 = icmp eq i32 %5, 1
  %339 = select i1 %338, i8 41, i8 93
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext %339) #8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %10, i8 zeroext 46) #8
  %340 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %10) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %10) #8
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %356, label %343

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  br i1 %347, label %350, label %352

350:                                              ; preds = %343
  %351 = add i32 %349, -1
  store i32 %351, i32* %348, align 4
  br label %352

352:                                              ; preds = %350, %343
  %353 = phi i32 [ %351, %350 ], [ %349, %343 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #8
  br label %356

356:                                              ; preds = %337, %352, %355
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #8
  ret %"class.WTF::StringImpl"* %340
}

declare zeroext i1 @_ZN5blink15audio_utilities28IsValidAudioBufferSampleRateEf(float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17IndexOutsideRangeIfEEN3WTF6StringEPKcT_S6_NS0_9BoundTypeES6_S7_(i8*, float, float, i32, float, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.WTF::StringBuilder", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = bitcast %"class.WTF::StringBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 48, i1 false)
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 1
  %19 = bitcast %union.anon.1987* %18 to i8*
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 3
  store i8 1, i8* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 4
  store i8 0, i8* %22, align 1
  %23 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 4, i32* %27, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8
  %28 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8
  %29 = icmp eq i8* %0, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %6
  %31 = call i64 @strlen(i8* nonnull %0) #11
  %32 = icmp ult i64 %31, 4294967296
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %30
  call void @llvm.trap() #8
  unreachable

34:                                               ; preds = %30
  %35 = trunc i64 %31 to i32
  br label %36

36:                                               ; preds = %6, %34
  %37 = phi i32 [ %35, %34 ], [ 0, %6 ]
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* %0, i8** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %37, i32* %41, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8
  %42 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 11, i32* %46, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #8
  %47 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #8
  %48 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages12FormatNumberIfEEN3WTF6StringET_(float %1) #8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %50, label %55

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %51, align 8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %53 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 0, i32* %54, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  br label %75

55:                                               ; preds = %36
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %61 = bitcast i8** %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %58, i32* %62, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %55
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %55
  %72 = phi i32 [ %70, %69 ], [ %68, %55 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %75

75:                                               ; preds = %50, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #8
  %76 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %78 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i64 0, i64 0), i8** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 23, i32* %80, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #8
  %81 = icmp eq i32 %3, 1
  %82 = select i1 %81, i8 40, i8 91
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %7, i8 zeroext %82) #8
  %83 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #8
  %84 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages12FormatNumberIfEEN3WTF6StringET_(float %2) #8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %86, label %91

86:                                               ; preds = %75
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %87, align 8
  %88 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %89 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 0, i32* %90, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  br label %111

91:                                               ; preds = %75
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 1
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %97 = bitcast i8** %96 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %95, %"class.WTF::StringImpl"** %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %94, i32* %98, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %91
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %91
  %108 = phi i32 [ %106, %105 ], [ %104, %91 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #8
  br label %111

111:                                              ; preds = %86, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #8
  %112 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #8
  %113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %114 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8** %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 2, i32* %116, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #8
  %117 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #8
  %118 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages12FormatNumberIfEEN3WTF6StringET_(float %4) #8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %120, label %125

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %121, align 8
  %122 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %123 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 0, i32* %124, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  br label %145

125:                                              ; preds = %111
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %131 = bitcast i8** %130 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %128, i32* %132, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %125
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %125
  %142 = phi i32 [ %140, %139 ], [ %138, %125 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #8
  br label %145

145:                                              ; preds = %120, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #8
  %146 = icmp eq i32 %5, 1
  %147 = select i1 %146, i8 41, i8 93
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %7, i8 zeroext %147) #8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %7, i8 zeroext 46) #8
  %148 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %7) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %7) #8
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #8
  br label %164

164:                                              ; preds = %145, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #8
  ret %"class.WTF::StringImpl"* %148
}

declare float @_ZN5blink15audio_utilities24MinAudioBufferSampleRateEv() local_unnamed_addr #2

declare float @_ZN5blink15audio_utilities24MaxAudioBufferSampleRateEv() local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

declare void @_ZN5blink38ExecutionContextLifecycleStateObserver19UpdateStateIfNeededEv(%"class.blink::ExecutionContextLifecycleStateObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::OfflineAudioContext"* @_ZN5blink19OfflineAudioContext6CreateEPNS_16ExecutionContextEPKNS_26OfflineAudioContextOptionsERNS_14ExceptionStateE(%"class.blink::ExecutionContext"*, %"class.blink::OfflineAudioContextOptions"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::OfflineAudioContextOptions", %"class.blink::OfflineAudioContextOptions"* %1, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::OfflineAudioContextOptions", %"class.blink::OfflineAudioContextOptions"* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::OfflineAudioContextOptions", %"class.blink::OfflineAudioContextOptions"* %1, i64 0, i32 6
  %9 = load float, float* %8, align 4
  %10 = tail call %"class.blink::OfflineAudioContext"* @_ZN5blink19OfflineAudioContext6CreateEPNS_16ExecutionContextEjjfRNS_14ExceptionStateE(%"class.blink::ExecutionContext"* %0, i32 %5, i32 %7, float %9, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::OfflineAudioContext"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContextC2EPNS_8DocumentEjjfRNS_14ExceptionStateE(%"class.blink::OfflineAudioContext"*, %"class.blink::Document"*, i32, i32, float, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0
  tail call void @_ZN5blink16BaseAudioContextC2EPNS_8DocumentENS0_11ContextTypeE(%"class.blink::BaseAudioContext"* %7, %"class.blink::Document"* %1, i32 1) #8
  %8 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }, { [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }* @_ZTVN5blink19OfflineAudioContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast i32 (...)*** %9 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }, { [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }* @_ZTVN5blink19OfflineAudioContextE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }, { [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }* @_ZTVN5blink19OfflineAudioContextE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  %11 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }, { [42 x i8*], [7 x i8*], [9 x i8*], [5 x i8*] }* @_ZTVN5blink19OfflineAudioContextE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1
  %13 = bitcast %"class.blink::HeapHashMap.383"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #8
  %14 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ScriptPromiseResolver"* null, %"class.blink::ScriptPromiseResolver"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 3
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 4
  store i32 %3, i32* %16, align 4
  %17 = tail call %"class.blink::OfflineAudioDestinationNode"* @_ZN5blink27OfflineAudioDestinationNode6CreateEPNS_16BaseAudioContextEjjf(%"class.blink::BaseAudioContext"* %7, i32 %2, i32 %3, float %4) #8
  %18 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 5
  %19 = ptrtoint %"class.blink::OfflineAudioDestinationNode"* %17 to i64
  %20 = bitcast %"class.blink::Member.28"* %18 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %6
  %24 = bitcast %"class.blink::OfflineAudioDestinationNode"* %17 to i8*
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #8
  br label %26

26:                                               ; preds = %6, %23
  tail call void @_ZN5blink16BaseAudioContext10InitializeEv(%"class.blink::BaseAudioContext"* %7) #8
  ret void
}

declare void @_ZN5blink16BaseAudioContextC2EPNS_8DocumentENS0_11ContextTypeE(%"class.blink::BaseAudioContext"*, %"class.blink::Document"*, i32) unnamed_addr #2

declare %"class.blink::OfflineAudioDestinationNode"* @_ZN5blink27OfflineAudioDestinationNode6CreateEPNS_16BaseAudioContextEjjf(%"class.blink::BaseAudioContext"*, i32, i32, float) local_unnamed_addr #2

declare void @_ZN5blink16BaseAudioContext10InitializeEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink16BaseAudioContextD2Ev(%"class.blink::BaseAudioContext"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContextD2Ev(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0
  tail call void @_ZN5blink16BaseAudioContextD2Ev(%"class.blink::BaseAudioContext"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink19OfflineAudioContextD1Ev(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 -1, i32 0, i32 20
  %3 = bitcast %"class.blink::Member.379"* %2 to %"class.blink::BaseAudioContext"*
  tail call void @_ZN5blink16BaseAudioContextD2Ev(%"class.blink::BaseAudioContext"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink19OfflineAudioContextD1Ev(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 -1, i32 0, i32 19
  %3 = bitcast %"class.blink::Member.379"* %2 to %"class.blink::BaseAudioContext"*
  tail call void @_ZN5blink16BaseAudioContextD2Ev(%"class.blink::BaseAudioContext"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContextD0Ev(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0
  tail call void @_ZN5blink16BaseAudioContextD2Ev(%"class.blink::BaseAudioContext"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink19OfflineAudioContextD0Ev(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 -1, i32 0, i32 20
  %3 = bitcast %"class.blink::Member.379"* %2 to %"class.blink::BaseAudioContext"*
  tail call void @_ZN5blink16BaseAudioContextD2Ev(%"class.blink::BaseAudioContext"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink19OfflineAudioContextD0Ev(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 -1, i32 0, i32 19
  %3 = bitcast %"class.blink::Member.379"* %2 to %"class.blink::BaseAudioContext"*
  tail call void @_ZN5blink16BaseAudioContextD2Ev(%"class.blink::BaseAudioContext"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19OfflineAudioContext5TraceEPNS_7VisitorE(%"class.blink::OfflineAudioContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.92"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::HeapHashMap.383"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = bitcast %"class.blink::HeapHashMap.383"* %14 to i8**
  %18 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %1, i8** %17) #8
  %22 = icmp eq i64 %16, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0
  tail call void @_ZNK5blink16BaseAudioContext5TraceEPNS_7VisitorE(%"class.blink::BaseAudioContext"* %30, %"class.blink::Visitor"* %1) #8
  ret void
}

declare void @_ZNK5blink16BaseAudioContext5TraceEPNS_7VisitorE(%"class.blink::BaseAudioContext"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink19OfflineAudioContext5TraceEPNS_7VisitorE(%"class.blink::OfflineAudioContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 -1, i32 0, i32 20
  %4 = getelementptr inbounds %"class.blink::Member.379", %"class.blink::Member.379"* %3, i64 41
  %5 = bitcast %"class.blink::Member.379"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::Member.379", %"class.blink::Member.379"* %3, i64 38
  %16 = bitcast %"class.blink::Member.379"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = bitcast %"class.blink::Member.379"* %15 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #8
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %14
  %25 = inttoptr i64 %17 to i8*
  %26 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, i64 5
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %1, i8* nonnull %25, i8* nonnull %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %30

30:                                               ; preds = %14, %24
  %31 = bitcast %"class.blink::Member.379"* %3 to %"class.blink::BaseAudioContext"*
  tail call void @_ZNK5blink16BaseAudioContext5TraceEPNS_7VisitorE(%"class.blink::BaseAudioContext"* %31, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink19OfflineAudioContext5TraceEPNS_7VisitorE(%"class.blink::OfflineAudioContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 -1, i32 0, i32 19
  %4 = getelementptr inbounds %"class.blink::Member.379", %"class.blink::Member.379"* %3, i64 41
  %5 = bitcast %"class.blink::Member.379"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::Member.379", %"class.blink::Member.379"* %3, i64 38
  %16 = bitcast %"class.blink::Member.379"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = bitcast %"class.blink::Member.379"* %15 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #8
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %14
  %25 = inttoptr i64 %17 to i8*
  %26 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, i64 5
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %1, i8* nonnull %25, i8* nonnull %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %30

30:                                               ; preds = %14, %24
  %31 = bitcast %"class.blink::Member.379"* %3 to %"class.blink::BaseAudioContext"*
  tail call void @_ZNK5blink16BaseAudioContext5TraceEPNS_7VisitorE(%"class.blink::BaseAudioContext"* %31, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink19OfflineAudioContext5TraceEPNS_7VisitorE(%"class.blink::OfflineAudioContext"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 -1, i32 0, i32 16, i32 0, i32 0, i32 3
  %4 = getelementptr inbounds i32, i32* %3, i64 82
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds i32, i32* %3, i64 76
  %16 = bitcast i32* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = bitcast i32* %15 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #8
  %23 = icmp eq i64 %17, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %14
  %25 = inttoptr i64 %17 to i8*
  %26 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, i64 5
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %1, i8* nonnull %25, i8* nonnull %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %30

30:                                               ; preds = %14, %24
  %31 = bitcast i32* %3 to %"class.blink::BaseAudioContext"*
  tail call void @_ZNK5blink16BaseAudioContext5TraceEPNS_7VisitorE(%"class.blink::BaseAudioContext"* %31, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContext21startOfflineRenderingEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::OfflineAudioContext"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringAppend.1887", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend.1884", align 8
  %12 = alloca %"class.WTF::StringAppend.1885", align 8
  %13 = alloca %"class.WTF::StringAppend.1886", align 8
  %14 = alloca %"class.WTF::StringAppend.1887", align 8
  %15 = alloca %"class.WTF::StringAppend.1888", align 8
  %16 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0, i32 9
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.5, i64 0, i64 0)) #8
  %21 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false)
  br label %664

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0, i32 13
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %129, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8
  %29 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16BaseAudioContext5stateEv(%"class.blink::BaseAudioContext"* %16) #8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %74, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %48

38:                                               ; preds = %31
  %39 = zext i32 %37 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #8
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !4

45:                                               ; preds = %38
  tail call void @llvm.trap() #8
  unreachable

46:                                               ; preds = %38
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %36, align 4
  br label %48

48:                                               ; preds = %46, %31
  %49 = phi i32 [ %47, %46 ], [ %37, %31 ]
  %50 = load atomic i32, i32* %32 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = zext i32 %49 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #8
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !4

60:                                               ; preds = %53
  tail call void @llvm.trap() #8
  unreachable

61:                                               ; preds = %53
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %36, align 4
  br label %63

63:                                               ; preds = %61, %48
  %64 = phi i32 [ %62, %61 ], [ %49, %48 ]
  %65 = load atomic i32, i32* %32 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = add i32 %64, -1
  store i32 %69, i32* %36, align 4
  br label %70

70:                                               ; preds = %68, %63
  %71 = phi i32 [ %69, %68 ], [ %64, %63 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %74

74:                                               ; preds = %26, %70, %73
  %75 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0), i8** %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %76, align 8
  %77 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  %79 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %80 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %79, align 8
  %81 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %80, align 8
  call void %81(%"class.blink::ExceptionState"* %3, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %8) #8
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #8
  br label %97

97:                                               ; preds = %74, %93, %96
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #8
  br label %113

113:                                              ; preds = %97, %109, %112
  br i1 %30, label %127, label %114

114:                                              ; preds = %113
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %127

127:                                              ; preds = %113, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %128 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 32, i1 false)
  br label %664

129:                                              ; preds = %22
  %130 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 3
  %131 = load i8, i8* %130, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0)) #8
  %134 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 32, i1 false)
  br label %664

135:                                              ; preds = %129
  %136 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #8
  %137 = bitcast i8* %136 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %137, %"class.blink::ScriptState"* %2) #8
  %138 = getelementptr inbounds i8, i8* %136, i64 -4
  %139 = bitcast i8* %138 to i16*
  %140 = load atomic i16, i16* %139 monotonic, align 2
  %141 = or i16 %140, 1
  store atomic i16 %141, i16* %139 release, align 2
  %142 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 2
  %143 = ptrtoint i8* %136 to i64
  %144 = bitcast %"class.blink::Member.92"* %142 to i64*
  store atomic i64 %143, i64* %144 monotonic, align 8
  %145 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %149, label %147

147:                                              ; preds = %135
  %148 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %136) #8
  br label %149

149:                                              ; preds = %135, %147
  %150 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %16) #8
  %151 = tail call dereferenceable(152) %"class.blink::AudioDestinationHandler"* @_ZNK5blink20AudioDestinationNode26GetAudioDestinationHandlerEv(%"class.blink::AudioDestinationNode"* %150) #8
  %152 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %151, i64 1, i32 0, i32 7
  %153 = bitcast i32* %152 to float*
  %154 = load float, float* %153, align 4
  %155 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %16) #8
  %156 = tail call dereferenceable(152) %"class.blink::AudioDestinationHandler"* @_ZNK5blink20AudioDestinationNode26GetAudioDestinationHandlerEv(%"class.blink::AudioDestinationNode"* %155) #8
  %157 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %156, i64 1, i32 0, i32 5
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 8
  %160 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 4
  %161 = load i32, i32* %160, align 4
  %162 = tail call %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer19CreateUninitializedEjjf(i32 %159, i32 %161, float %154) #8
  %163 = icmp eq %"class.blink::AudioBuffer"* %162, null
  br i1 %163, label %164, label %644

164:                                              ; preds = %149
  %165 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #8
  %166 = bitcast %"class.WTF::StringAppend.1884"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %166) #8
  %167 = bitcast %"class.WTF::StringAppend.1885"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %167) #8
  %168 = bitcast %"class.WTF::StringAppend.1886"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %168) #8
  %169 = bitcast %"class.WTF::StringAppend.1887"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169) #8
  %170 = bitcast %"class.WTF::StringAppend.1888"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #8
  %171 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %171) #8
  %172 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %173 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %174 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %175 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 32, i1 false) #8
  store i8* %172, i8** %173, align 8
  %176 = urem i32 %159, 10
  %177 = udiv i32 %159, 10
  %178 = trunc i32 %176 to i8
  %179 = or i8 %178, 48
  store i8 %179, i8* %172, align 1
  %180 = icmp ugt i32 %159, 9
  br i1 %180, label %181, label %196

181:                                              ; preds = %164
  %182 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %182, i8** %173, align 8
  %183 = urem i32 %177, 10
  %184 = trunc i32 %183 to i8
  %185 = or i8 %184, 48
  store i8 %185, i8* %182, align 2
  %186 = icmp ugt i32 %159, 99
  br i1 %186, label %187, label %194

187:                                              ; preds = %181
  %188 = udiv i32 %159, 100
  %189 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %189, i8** %173, align 8
  %190 = urem i32 %188, 10
  %191 = trunc i32 %190 to i8
  %192 = or i8 %191, 48
  store i8 %192, i8* %189, align 1
  %193 = icmp ugt i32 %159, 999
  br i1 %193, label %198, label %207

194:                                              ; preds = %181
  %195 = ptrtoint i8* %182 to i64
  br label %210

196:                                              ; preds = %164
  %197 = ptrtoint i8* %172 to i64
  br label %210

198:                                              ; preds = %187, %198
  %199 = phi i32 [ %201, %198 ], [ %188, %187 ]
  %200 = load i8*, i8** %173, align 8
  %201 = udiv i32 %199, 10
  %202 = getelementptr inbounds i8, i8* %200, i64 -1
  store i8* %202, i8** %173, align 8
  %203 = urem i32 %201, 10
  %204 = trunc i32 %203 to i8
  %205 = or i8 %204, 48
  store i8 %205, i8* %202, align 1
  %206 = icmp ugt i32 %199, 99
  br i1 %206, label %198, label %207

207:                                              ; preds = %198, %187
  %208 = bitcast i8** %173 to i64*
  %209 = load i64, i64* %208, align 8
  br label %210

210:                                              ; preds = %207, %194, %196
  %211 = phi i64 [ %197, %196 ], [ %209, %207 ], [ %195, %194 ]
  %212 = ptrtoint i8* %175 to i64
  %213 = sub i64 %212, %211
  %214 = trunc i64 %213 to i32
  store i32 %214, i32* %174, align 8
  %215 = inttoptr i64 %211 to i8*
  %216 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %215, i32 %214) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %171) #8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %293, label %218

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %235

225:                                              ; preds = %218
  %226 = zext i32 %224 to i33
  %227 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #8
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !4

232:                                              ; preds = %225
  call void @llvm.trap() #8
  unreachable

233:                                              ; preds = %225
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %223, align 4
  br label %235

235:                                              ; preds = %233, %218
  %236 = phi i32 [ %234, %233 ], [ %224, %218 ]
  %237 = load atomic i32, i32* %219 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %250

240:                                              ; preds = %235
  %241 = zext i32 %236 to i33
  %242 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %241, i33 1) #8
  %243 = extractvalue { i33, i1 } %242, 1
  %244 = extractvalue { i33, i1 } %242, 0
  %245 = icmp slt i33 %244, 0
  %246 = or i1 %243, %245
  br i1 %246, label %247, label %248, !prof !4

247:                                              ; preds = %240
  call void @llvm.trap() #8
  unreachable

248:                                              ; preds = %240
  %249 = trunc i33 %244 to i32
  store i32 %249, i32* %223, align 4
  br label %250

250:                                              ; preds = %248, %235
  %251 = phi i32 [ %249, %248 ], [ %236, %235 ]
  %252 = load atomic i32, i32* %219 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %257

255:                                              ; preds = %250
  %256 = add i32 %251, -1
  store i32 %256, i32* %223, align 4
  br label %257

257:                                              ; preds = %255, %250
  %258 = phi i32 [ %256, %255 ], [ %251, %250 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #8
  br label %261

261:                                              ; preds = %257, %260
  %262 = load atomic i32, i32* %219 monotonic, align 4, !noalias !5
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = load i32, i32* %223, align 4
  br i1 %264, label %266, label %276

266:                                              ; preds = %261
  %267 = zext i32 %265 to i33
  %268 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %267, i33 1) #8
  %269 = extractvalue { i33, i1 } %268, 1
  %270 = extractvalue { i33, i1 } %268, 0
  %271 = icmp slt i33 %270, 0
  %272 = or i1 %269, %271
  br i1 %272, label %273, label %274, !prof !4

273:                                              ; preds = %266
  call void @llvm.trap() #8, !noalias !5
  unreachable

274:                                              ; preds = %266
  %275 = trunc i33 %270 to i32
  store i32 %275, i32* %223, align 4, !noalias !5
  br label %276

276:                                              ; preds = %261, %274
  %277 = phi i32 [ %275, %274 ], [ %265, %261 ]
  %278 = bitcast %"class.WTF::StringAppend.1888"* %15 to i64*
  store i64 ptrtoint ([45 x i8]* @.str.8 to i64), i64* %278, align 8, !alias.scope !5
  %279 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %216, %"class.WTF::StringImpl"** %279, align 8, !alias.scope !5
  %280 = load atomic i32, i32* %219 monotonic, align 4, !noalias !5
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %297

283:                                              ; preds = %276
  %284 = zext i32 %277 to i33
  %285 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %284, i33 1) #8
  %286 = extractvalue { i33, i1 } %285, 1
  %287 = extractvalue { i33, i1 } %285, 0
  %288 = icmp slt i33 %287, 0
  %289 = or i1 %286, %288
  br i1 %289, label %290, label %291, !prof !4

290:                                              ; preds = %283
  call void @llvm.trap() #8, !noalias !5
  unreachable

291:                                              ; preds = %283
  %292 = trunc i33 %287 to i32
  store i32 %292, i32* %223, align 4, !noalias !5
  br label %297

293:                                              ; preds = %210
  %294 = bitcast %"class.WTF::StringAppend.1888"* %15 to i64*
  store i64 ptrtoint ([45 x i8]* @.str.8 to i64), i64* %294, align 8, !alias.scope !5
  %295 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %295, align 8, !alias.scope !5
  %296 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8** %296, align 8, !alias.scope !5
  br label %309

297:                                              ; preds = %291, %276
  %298 = phi i32 [ %292, %291 ], [ %277, %276 ]
  %299 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8** %299, align 8, !alias.scope !5
  %300 = load atomic i32, i32* %219 monotonic, align 4, !noalias !5
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %297
  %304 = add i32 %298, -1
  store i32 %304, i32* %223, align 4, !noalias !5
  br label %305

305:                                              ; preds = %303, %297
  %306 = phi i32 [ %304, %303 ], [ %298, %297 ]
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %309

308:                                              ; preds = %305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #8, !noalias !5
  br label %309

309:                                              ; preds = %293, %305, %308
  %310 = load i32, i32* %160, align 4
  %311 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %311) #8
  %312 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %313 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %314 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %315 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %311, i8 -86, i64 32, i1 false) #8
  store i8* %312, i8** %313, align 8
  %316 = urem i32 %310, 10
  %317 = udiv i32 %310, 10
  %318 = trunc i32 %316 to i8
  %319 = or i8 %318, 48
  store i8 %319, i8* %312, align 1
  %320 = icmp ugt i32 %310, 9
  br i1 %320, label %321, label %336

321:                                              ; preds = %309
  %322 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %322, i8** %313, align 8
  %323 = urem i32 %317, 10
  %324 = trunc i32 %323 to i8
  %325 = or i8 %324, 48
  store i8 %325, i8* %322, align 2
  %326 = icmp ugt i32 %310, 99
  br i1 %326, label %327, label %334

327:                                              ; preds = %321
  %328 = udiv i32 %310, 100
  %329 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %329, i8** %313, align 8
  %330 = urem i32 %328, 10
  %331 = trunc i32 %330 to i8
  %332 = or i8 %331, 48
  store i8 %332, i8* %329, align 1
  %333 = icmp ugt i32 %310, 999
  br i1 %333, label %338, label %347

334:                                              ; preds = %321
  %335 = ptrtoint i8* %322 to i64
  br label %350

336:                                              ; preds = %309
  %337 = ptrtoint i8* %312 to i64
  br label %350

338:                                              ; preds = %327, %338
  %339 = phi i32 [ %341, %338 ], [ %328, %327 ]
  %340 = load i8*, i8** %313, align 8
  %341 = udiv i32 %339, 10
  %342 = getelementptr inbounds i8, i8* %340, i64 -1
  store i8* %342, i8** %313, align 8
  %343 = urem i32 %341, 10
  %344 = trunc i32 %343 to i8
  %345 = or i8 %344, 48
  store i8 %345, i8* %342, align 1
  %346 = icmp ugt i32 %339, 99
  br i1 %346, label %338, label %347

347:                                              ; preds = %338, %327
  %348 = bitcast i8** %313 to i64*
  %349 = load i64, i64* %348, align 8
  br label %350

350:                                              ; preds = %347, %334, %336
  %351 = phi i64 [ %337, %336 ], [ %349, %347 ], [ %335, %334 ]
  %352 = ptrtoint i8* %315 to i64
  %353 = sub i64 %352, %351
  %354 = trunc i64 %353 to i32
  store i32 %354, i32* %314, align 8
  %355 = inttoptr i64 %351 to i8*
  %356 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %355, i32 %354) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %311) #8
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1887"* nonnull sret %14, %"class.WTF::StringAppend.1888"* nonnull dereferenceable(24) %15, %"class.WTF::StringImpl"* %356)
  %357 = bitcast %"class.WTF::StringAppend.1887"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %357)
  %358 = bitcast %"class.WTF::StringAppend.1887"* %14 to i64*
  %359 = load i64, i64* %358, align 8, !noalias !8
  %360 = bitcast %"class.WTF::StringAppend.1887"* %5 to i64*
  store i64 %359, i64* %360, align 8, !noalias !8
  %361 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %361, align 8, !noalias !8
  %363 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %362, %"class.WTF::StringImpl"** %363, align 8, !noalias !8
  %364 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %364, label %382, label %365

365:                                              ; preds = %350
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %382

370:                                              ; preds = %365
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = zext i32 %372 to i33
  %374 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %373, i33 1) #8
  %375 = extractvalue { i33, i1 } %374, 1
  %376 = extractvalue { i33, i1 } %374, 0
  %377 = icmp slt i33 %376, 0
  %378 = or i1 %375, %377
  br i1 %378, label %379, label %380, !prof !4

379:                                              ; preds = %370
  call void @llvm.trap() #8
  unreachable

380:                                              ; preds = %370
  %381 = trunc i33 %376 to i32
  store i32 %381, i32* %371, align 4
  br label %382

382:                                              ; preds = %380, %365, %350
  %383 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %5, i64 0, i32 0, i32 1
  %384 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %14, i64 0, i32 0, i32 1
  %385 = bitcast i8** %384 to i64*
  %386 = load i64, i64* %385, align 8, !noalias !8
  %387 = bitcast i8** %383 to i64*
  store i64 %386, i64* %387, align 8, !noalias !8
  %388 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %14, i64 0, i32 1, i32 0, i32 0
  %389 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8, !noalias !8
  %390 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %389, %"class.WTF::StringImpl"** %390, align 8, !noalias !8
  %391 = icmp eq %"class.WTF::StringImpl"* %389, null
  br i1 %391, label %409, label %392

392:                                              ; preds = %382
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load atomic i32, i32* %393 monotonic, align 4
  %395 = and i32 %394, 2
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %409

397:                                              ; preds = %392
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 0
  %399 = load i32, i32* %398, align 4
  %400 = zext i32 %399 to i33
  %401 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %400, i33 1) #8
  %402 = extractvalue { i33, i1 } %401, 1
  %403 = extractvalue { i33, i1 } %401, 0
  %404 = icmp slt i33 %403, 0
  %405 = or i1 %402, %404
  br i1 %405, label %406, label %407, !prof !4

406:                                              ; preds = %397
  call void @llvm.trap() #8
  unreachable

407:                                              ; preds = %397
  %408 = trunc i33 %403 to i32
  store i32 %408, i32* %398, align 4
  br label %409

409:                                              ; preds = %382, %392, %407
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1886"* nonnull %13, %"class.WTF::StringAppend.1887"* nonnull byval(%"class.WTF::StringAppend.1887") align 8 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %357)
  %410 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %154) #8
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1885"* nonnull sret %12, %"class.WTF::StringAppend.1886"* nonnull dereferenceable(40) %13, %"class.WTF::StringImpl"* %410)
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSB_SC_(%"class.WTF::StringAppend.1884"* nonnull sret %11, %"class.WTF::StringAppend.1885"* nonnull dereferenceable(48) %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  %411 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1884"* nonnull %11)
  %412 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %411, %"class.WTF::StringImpl"** %412, align 8
  %413 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %414 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %413, align 8
  %415 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %414, align 8
  call void %415(%"class.blink::ExceptionState"* %3, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #8
  %416 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %412, align 8
  %417 = icmp eq %"class.WTF::StringImpl"* %416, null
  br i1 %417, label %431, label %418

418:                                              ; preds = %409
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %420 = load atomic i32, i32* %419 monotonic, align 4
  %421 = and i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 0
  %424 = load i32, i32* %423, align 4
  br i1 %422, label %425, label %427

425:                                              ; preds = %418
  %426 = add i32 %424, -1
  store i32 %426, i32* %423, align 4
  br label %427

427:                                              ; preds = %425, %418
  %428 = phi i32 [ %426, %425 ], [ %424, %418 ]
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %431

430:                                              ; preds = %427
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %416) #8
  br label %431

431:                                              ; preds = %409, %427, %430
  %432 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %433 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %432, align 8
  %434 = icmp eq %"class.WTF::StringImpl"* %433, null
  br i1 %434, label %448, label %435

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %444

442:                                              ; preds = %435
  %443 = add i32 %441, -1
  store i32 %443, i32* %440, align 4
  br label %444

444:                                              ; preds = %442, %435
  %445 = phi i32 [ %443, %442 ], [ %441, %435 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #8
  br label %448

448:                                              ; preds = %447, %444, %431
  %449 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %449, align 8
  %451 = icmp eq %"class.WTF::StringImpl"* %450, null
  br i1 %451, label %465, label %452

452:                                              ; preds = %448
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = load atomic i32, i32* %453 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %458 = load i32, i32* %457, align 4
  br i1 %456, label %459, label %461

459:                                              ; preds = %452
  %460 = add i32 %458, -1
  store i32 %460, i32* %457, align 4
  br label %461

461:                                              ; preds = %459, %452
  %462 = phi i32 [ %460, %459 ], [ %458, %452 ]
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %465

464:                                              ; preds = %461
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %450) #8
  br label %465

465:                                              ; preds = %464, %461, %448
  %466 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %466, align 8
  %468 = icmp eq %"class.WTF::StringImpl"* %467, null
  br i1 %468, label %482, label %469

469:                                              ; preds = %465
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = load atomic i32, i32* %470 monotonic, align 4
  %472 = and i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %467, i64 0, i32 0
  %475 = load i32, i32* %474, align 4
  br i1 %473, label %476, label %478

476:                                              ; preds = %469
  %477 = add i32 %475, -1
  store i32 %477, i32* %474, align 4
  br label %478

478:                                              ; preds = %476, %469
  %479 = phi i32 [ %477, %476 ], [ %475, %469 ]
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %482

481:                                              ; preds = %478
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %467) #8
  br label %482

482:                                              ; preds = %465, %478, %481
  %483 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %12, i64 0, i32 1, i32 0, i32 0
  %484 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %483, align 8
  %485 = icmp eq %"class.WTF::StringImpl"* %484, null
  br i1 %485, label %499, label %486

486:                                              ; preds = %482
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = load atomic i32, i32* %487 monotonic, align 4
  %489 = and i32 %488, 2
  %490 = icmp eq i32 %489, 0
  %491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %484, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  br i1 %490, label %493, label %495

493:                                              ; preds = %486
  %494 = add i32 %492, -1
  store i32 %494, i32* %491, align 4
  br label %495

495:                                              ; preds = %493, %486
  %496 = phi i32 [ %494, %493 ], [ %492, %486 ]
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %499

498:                                              ; preds = %495
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %484) #8
  br label %499

499:                                              ; preds = %498, %495, %482
  %500 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %501, null
  br i1 %502, label %516, label %503

503:                                              ; preds = %499
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load atomic i32, i32* %504 monotonic, align 4
  %506 = and i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  br i1 %507, label %510, label %512

510:                                              ; preds = %503
  %511 = add i32 %509, -1
  store i32 %511, i32* %508, align 4
  br label %512

512:                                              ; preds = %510, %503
  %513 = phi i32 [ %511, %510 ], [ %509, %503 ]
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %516

515:                                              ; preds = %512
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %501) #8
  br label %516

516:                                              ; preds = %515, %512, %499
  %517 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %518 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %517, align 8
  %519 = icmp eq %"class.WTF::StringImpl"* %518, null
  br i1 %519, label %533, label %520

520:                                              ; preds = %516
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load atomic i32, i32* %521 monotonic, align 4
  %523 = and i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  br i1 %524, label %527, label %529

527:                                              ; preds = %520
  %528 = add i32 %526, -1
  store i32 %528, i32* %525, align 4
  br label %529

529:                                              ; preds = %527, %520
  %530 = phi i32 [ %528, %527 ], [ %526, %520 ]
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %533

532:                                              ; preds = %529
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %518) #8
  br label %533

533:                                              ; preds = %516, %529, %532
  %534 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %534, align 8
  %536 = icmp eq %"class.WTF::StringImpl"* %535, null
  br i1 %536, label %550, label %537

537:                                              ; preds = %533
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 0
  %543 = load i32, i32* %542, align 4
  br i1 %541, label %544, label %546

544:                                              ; preds = %537
  %545 = add i32 %543, -1
  store i32 %545, i32* %542, align 4
  br label %546

546:                                              ; preds = %544, %537
  %547 = phi i32 [ %545, %544 ], [ %543, %537 ]
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %550

549:                                              ; preds = %546
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %535) #8
  br label %550

550:                                              ; preds = %549, %546, %533
  %551 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %552, null
  br i1 %553, label %567, label %554

554:                                              ; preds = %550
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = load atomic i32, i32* %555 monotonic, align 4
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 0
  %560 = load i32, i32* %559, align 4
  br i1 %558, label %561, label %563

561:                                              ; preds = %554
  %562 = add i32 %560, -1
  store i32 %562, i32* %559, align 4
  br label %563

563:                                              ; preds = %561, %554
  %564 = phi i32 [ %562, %561 ], [ %560, %554 ]
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %567

566:                                              ; preds = %563
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %552) #8
  br label %567

567:                                              ; preds = %550, %563, %566
  %568 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %569 = icmp eq %"class.WTF::StringImpl"* %568, null
  br i1 %569, label %583, label %570

570:                                              ; preds = %567
  %571 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %568, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %572 = load atomic i32, i32* %571 monotonic, align 4
  %573 = and i32 %572, 2
  %574 = icmp eq i32 %573, 0
  %575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %568, i64 0, i32 0
  %576 = load i32, i32* %575, align 4
  br i1 %574, label %577, label %579

577:                                              ; preds = %570
  %578 = add i32 %576, -1
  store i32 %578, i32* %575, align 4
  br label %579

579:                                              ; preds = %577, %570
  %580 = phi i32 [ %578, %577 ], [ %576, %570 ]
  %581 = icmp eq i32 %580, 0
  br i1 %581, label %582, label %583

582:                                              ; preds = %579
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %568) #8
  br label %583

583:                                              ; preds = %582, %579, %567
  %584 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %361, align 8
  %585 = icmp eq %"class.WTF::StringImpl"* %584, null
  br i1 %585, label %599, label %586

586:                                              ; preds = %583
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %588 = load atomic i32, i32* %587 monotonic, align 4
  %589 = and i32 %588, 2
  %590 = icmp eq i32 %589, 0
  %591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 0
  %592 = load i32, i32* %591, align 4
  br i1 %590, label %593, label %595

593:                                              ; preds = %586
  %594 = add i32 %592, -1
  store i32 %594, i32* %591, align 4
  br label %595

595:                                              ; preds = %593, %586
  %596 = phi i32 [ %594, %593 ], [ %592, %586 ]
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %598, label %599

598:                                              ; preds = %595
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %584) #8
  br label %599

599:                                              ; preds = %583, %595, %598
  %600 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %600, align 8
  %602 = icmp eq %"class.WTF::StringImpl"* %601, null
  br i1 %602, label %616, label %603

603:                                              ; preds = %599
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 0
  %609 = load i32, i32* %608, align 4
  br i1 %607, label %610, label %612

610:                                              ; preds = %603
  %611 = add i32 %609, -1
  store i32 %611, i32* %608, align 4
  br label %612

612:                                              ; preds = %610, %603
  %613 = phi i32 [ %611, %610 ], [ %609, %603 ]
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %616

615:                                              ; preds = %612
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %601) #8
  br label %616

616:                                              ; preds = %599, %612, %615
  br i1 %217, label %642, label %617

617:                                              ; preds = %616
  %618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  br i1 %621, label %624, label %626

624:                                              ; preds = %617
  %625 = add i32 %623, -1
  store i32 %625, i32* %622, align 4
  br label %626

626:                                              ; preds = %624, %617
  %627 = phi i32 [ %625, %624 ], [ %623, %617 ]
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %631

629:                                              ; preds = %626
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #8
  %630 = load i32, i32* %622, align 4
  br label %631

631:                                              ; preds = %626, %629
  %632 = phi i32 [ %627, %626 ], [ %630, %629 ]
  %633 = load atomic i32, i32* %618 monotonic, align 4
  %634 = and i32 %633, 2
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %636, label %638

636:                                              ; preds = %631
  %637 = add i32 %632, -1
  store i32 %637, i32* %622, align 4
  br label %638

638:                                              ; preds = %636, %631
  %639 = phi i32 [ %637, %636 ], [ %632, %631 ]
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %641, label %642

641:                                              ; preds = %638
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #8
  br label %642

642:                                              ; preds = %616, %638, %641
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %168) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %167) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %166) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #8
  %643 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %643, i8 0, i64 32, i1 false)
  br label %664

644:                                              ; preds = %149
  store i8 1, i8* %130, align 8
  tail call void @_ZN5blink16BaseAudioContext15SetContextStateENS0_17AudioContextStateE(%"class.blink::BaseAudioContext"* %16, i32 1) #8
  %645 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %16) #8
  %646 = getelementptr inbounds %"class.blink::AudioDestinationNode", %"class.blink::AudioDestinationNode"* %645, i64 1
  %647 = ptrtoint %"class.blink::AudioBuffer"* %162 to i64
  %648 = bitcast %"class.blink::AudioDestinationNode"* %646 to i64*
  store atomic i64 %647, i64* %648 monotonic, align 8
  %649 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %650 = icmp eq i32 %649, 0
  br i1 %650, label %654, label %651

651:                                              ; preds = %644
  %652 = bitcast %"class.blink::AudioBuffer"* %162 to i8*
  %653 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %652) #8
  br label %654

654:                                              ; preds = %644, %651
  %655 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %16) #8
  %656 = tail call dereferenceable(152) %"class.blink::AudioDestinationHandler"* @_ZNK5blink20AudioDestinationNode26GetAudioDestinationHandlerEv(%"class.blink::AudioDestinationNode"* %655) #8
  %657 = bitcast %"class.blink::AudioDestinationHandler"* %656 to %"class.blink::OfflineAudioDestinationHandler"*
  tail call void @_ZN5blink30OfflineAudioDestinationHandler29InitializeOfflineRenderThreadEPNS_11AudioBufferE(%"class.blink::OfflineAudioDestinationHandler"* %657, %"class.blink::AudioBuffer"* nonnull %162) #8
  %658 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %16) #8
  %659 = tail call dereferenceable(152) %"class.blink::AudioDestinationHandler"* @_ZNK5blink20AudioDestinationNode26GetAudioDestinationHandlerEv(%"class.blink::AudioDestinationNode"* %658) #8
  %660 = bitcast %"class.blink::AudioDestinationHandler"* %659 to %"class.blink::OfflineAudioDestinationHandler"*
  tail call void @_ZN5blink30OfflineAudioDestinationHandler14StartRenderingEv(%"class.blink::OfflineAudioDestinationHandler"* %660) #8
  %661 = getelementptr inbounds %"class.blink::Member.92", %"class.blink::Member.92"* %142, i64 0, i32 0, i32 0
  %662 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %661, align 8
  %663 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %662, i64 0, i32 5
  tail call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %663) #8
  br label %664

664:                                              ; preds = %642, %654, %133, %127, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink16BaseAudioContext15IsContextClosedEv(%"class.blink::BaseAudioContext"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BaseAudioContext", %"class.blink::BaseAudioContext"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.WTF::StringImpl"* @_ZNK5blink16BaseAudioContext5stateEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #8
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #8
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #8
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #8
  %29 = bitcast %"class.WTF::StringTypeAdapter.2037"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #8
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.2037"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #8
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2038"* nonnull %47, i8* %50) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #8
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !4

66:                                               ; preds = %59
  call void @llvm.trap() #8
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #8
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #8
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #8
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #8
  %90 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #8
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #8
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #8
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2038"* nonnull %108, i16* %111) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #8
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #8
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !4

127:                                              ; preds = %120
  call void @llvm.trap() #8
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #8
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #8
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(232) %"class.blink::OfflineAudioDestinationHandler"* @_ZN5blink19OfflineAudioContext18DestinationHandlerEv(%"class.blink::OfflineAudioContext"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %2) #8
  %4 = tail call dereferenceable(152) %"class.blink::AudioDestinationHandler"* @_ZNK5blink20AudioDestinationNode26GetAudioDestinationHandlerEv(%"class.blink::AudioDestinationNode"* %3) #8
  %5 = bitcast %"class.blink::AudioDestinationHandler"* %4 to %"class.blink::OfflineAudioDestinationHandler"*
  ret %"class.blink::OfflineAudioDestinationHandler"* %5
}

declare %"class.blink::AudioBuffer"* @_ZN5blink11AudioBuffer19CreateUninitializedEjjf(i32, i32, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSB_SC_(%"class.WTF::StringAppend.1884"* noalias sret, %"class.WTF::StringAppend.1885"* dereferenceable(48), i8*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1885", align 8
  %5 = bitcast %"class.WTF::StringAppend.1885"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1885"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #8
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !4

53:                                               ; preds = %44
  tail call void @llvm.trap() #8
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %29
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %4, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #8
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !4

80:                                               ; preds = %71
  tail call void @llvm.trap() #8
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %56, %66, %81
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EC2ES8_S2_(%"class.WTF::StringAppend.1884"* %0, %"class.WTF::StringAppend.1885"* nonnull byval(%"class.WTF::StringAppend.1885") align 8 %4, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1885"* noalias sret, %"class.WTF::StringAppend.1886"* dereferenceable(40), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1886", align 8
  %5 = bitcast %"class.WTF::StringAppend.1886"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1886"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %4, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #8
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !4

53:                                               ; preds = %44
  tail call void @llvm.trap() #8
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %29, %39, %54
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %4, i64 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #8
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %68
  tail call void @llvm.trap() #8
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %81

80:                                               ; preds = %56
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.1885"* %0, %"class.WTF::StringAppend.1886"* nonnull byval(%"class.WTF::StringAppend.1886") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %93

81:                                               ; preds = %63, %78
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.1885"* %0, %"class.WTF::StringAppend.1886"* nonnull byval(%"class.WTF::StringAppend.1886") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %81
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %81
  %90 = phi i32 [ %88, %87 ], [ %86, %81 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %93

93:                                               ; preds = %80, %89, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1887"* noalias sret, %"class.WTF::StringAppend.1888"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1888", align 8
  %5 = bitcast %"class.WTF::StringAppend.1888"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1888"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !4

50:                                               ; preds = %41
  tail call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1887"* %0, %"class.WTF::StringAppend.1888"* nonnull byval(%"class.WTF::StringAppend.1888") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1887"* %0, %"class.WTF::StringAppend.1888"* nonnull byval(%"class.WTF::StringAppend.1888") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1884"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #8
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %14 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #8
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %16) #8
  %17 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %20 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #8
  %22 = load i8*, i8** %21, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %22) #8
  %23 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8
  %24 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #8
  %25 = load i8*, i8** %24, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %25) #8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %30 = select i1 %28, %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"* %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  br i1 %34, label %35, label %36

35:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %43

36:                                               ; preds = %1
  %37 = icmp eq %"class.WTF::StringImpl"* %18, null
  %38 = select i1 %37, %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %18
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br i1 %42, label %43, label %44

43:                                               ; preds = %36, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  br label %87

44:                                               ; preds = %36
  %45 = icmp eq %"class.WTF::StringImpl"* %12, null
  %46 = select i1 %45, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %12
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  br i1 %50, label %87, label %51

51:                                               ; preds = %44
  %52 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %53 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1884"* %0)
  %54 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %53, i8** nonnull dereferenceable(8) %6) #8
  %55 = load i8*, i8** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1884"* %0, i8* %55)
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %123, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %74

64:                                               ; preds = %57
  %65 = zext i32 %63 to i33
  %66 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #8
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !4

71:                                               ; preds = %64
  call void @llvm.trap() #8
  unreachable

72:                                               ; preds = %64
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %62, align 4
  br label %74

74:                                               ; preds = %57, %72
  %75 = phi i32 [ %73, %72 ], [ %63, %57 ]
  %76 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %77 = load atomic i32, i32* %58 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %82 = add i32 %75, -1
  store i32 %82, i32* %81, align 4
  br label %83

83:                                               ; preds = %80, %74
  %84 = phi i32 [ %82, %80 ], [ %75, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %123

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #8
  br label %123

87:                                               ; preds = %44, %43
  %88 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %89 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1884"* %0)
  %90 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %89, i16** nonnull dereferenceable(8) %7) #8
  %91 = load i16*, i16** %7, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1884"* %0, i16* %91)
  %92 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %92, label %123, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %110

100:                                              ; preds = %93
  %101 = zext i32 %99 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #8
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !4

107:                                              ; preds = %100
  call void @llvm.trap() #8
  unreachable

108:                                              ; preds = %100
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %98, align 4
  br label %110

110:                                              ; preds = %93, %108
  %111 = phi i32 [ %109, %108 ], [ %99, %93 ]
  %112 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %113 = load atomic i32, i32* %94 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %118 = add i32 %111, -1
  store i32 %118, i32* %117, align 4
  br label %119

119:                                              ; preds = %116, %110
  %120 = phi i32 [ %118, %116 ], [ %111, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #8
  br label %123

123:                                              ; preds = %122, %119, %87, %86, %83, %51
  %124 = phi i8* [ %52, %51 ], [ %52, %83 ], [ %52, %86 ], [ %88, %87 ], [ %88, %119 ], [ %88, %122 ]
  %125 = phi i64 [ 0, %51 ], [ %76, %83 ], [ %76, %86 ], [ 0, %87 ], [ %112, %119 ], [ %112, %122 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #8
  %126 = inttoptr i64 %125 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %126
}

declare void @_ZN5blink16BaseAudioContext15SetContextStateENS0_17AudioContextStateE(%"class.blink::BaseAudioContext"*, i32) local_unnamed_addr #2

declare %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #2

declare void @_ZN5blink30OfflineAudioDestinationHandler29InitializeOfflineRenderThreadEPNS_11AudioBufferE(%"class.blink::OfflineAudioDestinationHandler"*, %"class.blink::AudioBuffer"*) local_unnamed_addr #2

declare void @_ZN5blink30OfflineAudioDestinationHandler14StartRenderingEv(%"class.blink::OfflineAudioDestinationHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContext14suspendContextEPNS_11ScriptStateEd(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::OfflineAudioContext"*, %"class.blink::ScriptState"*, double) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringAppend.1887", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter.2047", align 8
  %7 = alloca %"class.WTF::StringAppend.1890", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter.2047", align 8
  %9 = alloca %"class.WTF::StringAppend.1886", align 8
  %10 = alloca %"class.WTF::StringAppend.1887", align 8
  %11 = alloca %"class.WTF::IntegerToStringConverter.2047", align 8
  %12 = alloca %"class.WTF::StringAppend.1887", align 8
  %13 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %14 = alloca %"class.blink::ScriptPromiseResolver"*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"class.WTF::StringAppend.1888", align 8
  %18 = alloca i32, align 4
  %19 = alloca %"class.WTF::StringAppend.1884", align 8
  %20 = alloca %"class.WTF::StringAppend.1885", align 8
  %21 = alloca %"class.WTF::StringAppend.1886", align 8
  %22 = alloca %"class.WTF::StringAppend.1887", align 8
  %23 = alloca %"class.WTF::StringAppend.1888", align 8
  %24 = alloca i64, align 8
  %25 = alloca i32, align 4
  %26 = alloca %"class.WTF::StringAppend.1889", align 8
  %27 = alloca %"class.WTF::StringAppend.1890", align 8
  %28 = alloca %"class.WTF::StringAppend.1891", align 8
  %29 = alloca %"class.WTF::StringAppend.1892", align 8
  %30 = alloca %"class.WTF::StringAppend.1893", align 8
  %31 = alloca %"class.WTF::StringAppend.1886", align 8
  %32 = alloca %"class.WTF::StringAppend.1887", align 8
  %33 = alloca %"class.WTF::StringAppend.1888", align 8
  %34 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %35 = alloca i32, align 4
  %36 = alloca %"class.WTF::StringAppend.1886", align 8
  %37 = alloca %"class.WTF::StringAppend.1887", align 8
  %38 = alloca %"class.WTF::StringAppend.1888", align 8
  %39 = bitcast %"class.blink::ScriptPromiseResolver"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  store %"class.blink::ScriptPromiseResolver"* inttoptr (i64 -6148914691236517206 to %"class.blink::ScriptPromiseResolver"*), %"class.blink::ScriptPromiseResolver"** %14, align 8
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #8
  %41 = bitcast i8* %40 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %41, %"class.blink::ScriptState"* %2) #8
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = bitcast %"class.blink::ScriptPromiseResolver"** %14 to i8**
  store i8* %40, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %40, i64 48
  %48 = bitcast i8* %47 to %"class.blink::ScriptPromise::InternalResolver"*
  %49 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 -86, i64 32, i1 false)
  tail call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %48) #8
  %50 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0
  %51 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0, i32 13
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 2
  br i1 %53, label %54, label %57

54:                                               ; preds = %4
  %55 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #8
  store i32 11, i32* %15, align 4
  %56 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA34_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %15, [34 x i8]* nonnull dereferenceable(34) @.str.11) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %41, %"class.blink::DOMException"* %56, i32 2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #8
  br label %1831

57:                                               ; preds = %4
  %58 = fcmp olt double %3, 0.000000e+00
  br i1 %58, label %59, label %200

59:                                               ; preds = %57
  %60 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #8
  store i32 11, i32* %16, align 4
  %61 = bitcast %"class.WTF::StringAppend.1888"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #8
  %62 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %3, i32 6) #8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %139, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %81

71:                                               ; preds = %64
  %72 = zext i32 %70 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #8
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !4

78:                                               ; preds = %71
  tail call void @llvm.trap() #8
  unreachable

79:                                               ; preds = %71
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %69, align 4
  br label %81

81:                                               ; preds = %79, %64
  %82 = phi i32 [ %80, %79 ], [ %70, %64 ]
  %83 = load atomic i32, i32* %65 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %96

86:                                               ; preds = %81
  %87 = zext i32 %82 to i33
  %88 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #8
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !4

93:                                               ; preds = %86
  tail call void @llvm.trap() #8
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %69, align 4
  br label %96

96:                                               ; preds = %94, %81
  %97 = phi i32 [ %95, %94 ], [ %82, %81 ]
  %98 = load atomic i32, i32* %65 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  %102 = add i32 %97, -1
  store i32 %102, i32* %69, align 4
  br label %103

103:                                              ; preds = %101, %96
  %104 = phi i32 [ %102, %101 ], [ %97, %96 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %107

107:                                              ; preds = %103, %106
  %108 = load atomic i32, i32* %65 monotonic, align 4, !noalias !11
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = load i32, i32* %69, align 4
  br i1 %110, label %112, label %122

112:                                              ; preds = %107
  %113 = zext i32 %111 to i33
  %114 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %113, i33 1) #8
  %115 = extractvalue { i33, i1 } %114, 1
  %116 = extractvalue { i33, i1 } %114, 0
  %117 = icmp slt i33 %116, 0
  %118 = or i1 %115, %117
  br i1 %118, label %119, label %120, !prof !4

119:                                              ; preds = %112
  tail call void @llvm.trap() #8, !noalias !11
  unreachable

120:                                              ; preds = %112
  %121 = trunc i33 %116 to i32
  store i32 %121, i32* %69, align 4, !noalias !11
  br label %122

122:                                              ; preds = %107, %120
  %123 = phi i32 [ %121, %120 ], [ %111, %107 ]
  %124 = bitcast %"class.WTF::StringAppend.1888"* %17 to i64*
  store i64 ptrtoint ([24 x i8]* @.str.12 to i64), i64* %124, align 8, !alias.scope !11
  %125 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %125, align 8, !alias.scope !11
  %126 = load atomic i32, i32* %65 monotonic, align 4, !noalias !11
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %143

129:                                              ; preds = %122
  %130 = zext i32 %123 to i33
  %131 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #8
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !4

136:                                              ; preds = %129
  tail call void @llvm.trap() #8, !noalias !11
  unreachable

137:                                              ; preds = %129
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %69, align 4, !noalias !11
  br label %143

139:                                              ; preds = %59
  %140 = bitcast %"class.WTF::StringAppend.1888"* %17 to i64*
  store i64 ptrtoint ([24 x i8]* @.str.12 to i64), i64* %140, align 8, !alias.scope !11
  %141 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %141, align 8, !alias.scope !11
  %142 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8** %142, align 8, !alias.scope !11
  br label %155

143:                                              ; preds = %137, %122
  %144 = phi i32 [ %138, %137 ], [ %123, %122 ]
  %145 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8** %145, align 8, !alias.scope !11
  %146 = load atomic i32, i32* %65 monotonic, align 4, !noalias !11
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %143
  %150 = add i32 %144, -1
  store i32 %150, i32* %69, align 4, !noalias !11
  br label %151

151:                                              ; preds = %149, %143
  %152 = phi i32 [ %150, %149 ], [ %144, %143 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8, !noalias !11
  br label %155

155:                                              ; preds = %139, %151, %154
  %156 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_IPKcNS5_6StringEEES8_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %16, %"class.WTF::StringAppend.1888"* nonnull dereferenceable(24) %17) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %41, %"class.blink::DOMException"* %156, i32 2) #8
  %157 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #8
  br label %173

173:                                              ; preds = %155, %169, %172
  br i1 %63, label %199, label %174

174:                                              ; preds = %173
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  %187 = load i32, i32* %179, align 4
  br label %188

188:                                              ; preds = %183, %186
  %189 = phi i32 [ %184, %183 ], [ %187, %186 ]
  %190 = load atomic i32, i32* %175 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %195

193:                                              ; preds = %188
  %194 = add i32 %189, -1
  store i32 %194, i32* %179, align 4
  br label %195

195:                                              ; preds = %193, %188
  %196 = phi i32 [ %194, %193 ], [ %189, %188 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %199

199:                                              ; preds = %173, %195, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #8
  br label %1831

200:                                              ; preds = %57
  %201 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 4
  %202 = load i32, i32* %201, align 4
  %203 = uitofp i32 %202 to float
  %204 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0, i32 21, i32 0
  %205 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %204, align 8
  %206 = bitcast %"class.blink::AudioDestinationHandler"* %205 to double (%"class.blink::AudioDestinationHandler"*)***
  %207 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %206, align 8
  %208 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %207, i64 25
  %209 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %208, align 8
  %210 = tail call double %209(%"class.blink::AudioDestinationHandler"* %205) #8
  %211 = fptrunc double %210 to float
  %212 = fdiv float %203, %211
  %213 = fpext float %212 to double
  %214 = fcmp ugt double %213, %3
  br i1 %214, label %629, label %215

215:                                              ; preds = %200
  %216 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %216) #8
  store i32 11, i32* %18, align 4
  %217 = bitcast %"class.WTF::StringAppend.1884"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %217) #8
  %218 = bitcast %"class.WTF::StringAppend.1885"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %218) #8
  %219 = bitcast %"class.WTF::StringAppend.1886"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %219) #8
  %220 = bitcast %"class.WTF::StringAppend.1887"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %220) #8
  %221 = bitcast %"class.WTF::StringAppend.1888"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #8
  %222 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %3) #8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %299, label %224

224:                                              ; preds = %215
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  br i1 %228, label %231, label %241

231:                                              ; preds = %224
  %232 = zext i32 %230 to i33
  %233 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %232, i33 1) #8
  %234 = extractvalue { i33, i1 } %233, 1
  %235 = extractvalue { i33, i1 } %233, 0
  %236 = icmp slt i33 %235, 0
  %237 = or i1 %234, %236
  br i1 %237, label %238, label %239, !prof !4

238:                                              ; preds = %231
  tail call void @llvm.trap() #8
  unreachable

239:                                              ; preds = %231
  %240 = trunc i33 %235 to i32
  store i32 %240, i32* %229, align 4
  br label %241

241:                                              ; preds = %239, %224
  %242 = phi i32 [ %240, %239 ], [ %230, %224 ]
  %243 = load atomic i32, i32* %225 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %256

246:                                              ; preds = %241
  %247 = zext i32 %242 to i33
  %248 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %247, i33 1) #8
  %249 = extractvalue { i33, i1 } %248, 1
  %250 = extractvalue { i33, i1 } %248, 0
  %251 = icmp slt i33 %250, 0
  %252 = or i1 %249, %251
  br i1 %252, label %253, label %254, !prof !4

253:                                              ; preds = %246
  tail call void @llvm.trap() #8
  unreachable

254:                                              ; preds = %246
  %255 = trunc i33 %250 to i32
  store i32 %255, i32* %229, align 4
  br label %256

256:                                              ; preds = %254, %241
  %257 = phi i32 [ %255, %254 ], [ %242, %241 ]
  %258 = load atomic i32, i32* %225 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %263

261:                                              ; preds = %256
  %262 = add i32 %257, -1
  store i32 %262, i32* %229, align 4
  br label %263

263:                                              ; preds = %261, %256
  %264 = phi i32 [ %262, %261 ], [ %257, %256 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %263
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #8
  br label %267

267:                                              ; preds = %263, %266
  %268 = load atomic i32, i32* %225 monotonic, align 4, !noalias !14
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = load i32, i32* %229, align 4
  br i1 %270, label %272, label %282

272:                                              ; preds = %267
  %273 = zext i32 %271 to i33
  %274 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %273, i33 1) #8
  %275 = extractvalue { i33, i1 } %274, 1
  %276 = extractvalue { i33, i1 } %274, 0
  %277 = icmp slt i33 %276, 0
  %278 = or i1 %275, %277
  br i1 %278, label %279, label %280, !prof !4

279:                                              ; preds = %272
  tail call void @llvm.trap() #8, !noalias !14
  unreachable

280:                                              ; preds = %272
  %281 = trunc i33 %276 to i32
  store i32 %281, i32* %229, align 4, !noalias !14
  br label %282

282:                                              ; preds = %267, %280
  %283 = phi i32 [ %281, %280 ], [ %271, %267 ]
  %284 = bitcast %"class.WTF::StringAppend.1888"* %23 to i64*
  store i64 ptrtoint ([30 x i8]* @.str.14 to i64), i64* %284, align 8, !alias.scope !14
  %285 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %285, align 8, !alias.scope !14
  %286 = load atomic i32, i32* %225 monotonic, align 4, !noalias !14
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %303

289:                                              ; preds = %282
  %290 = zext i32 %283 to i33
  %291 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %290, i33 1) #8
  %292 = extractvalue { i33, i1 } %291, 1
  %293 = extractvalue { i33, i1 } %291, 0
  %294 = icmp slt i33 %293, 0
  %295 = or i1 %292, %294
  br i1 %295, label %296, label %297, !prof !4

296:                                              ; preds = %289
  tail call void @llvm.trap() #8, !noalias !14
  unreachable

297:                                              ; preds = %289
  %298 = trunc i33 %293 to i32
  store i32 %298, i32* %229, align 4, !noalias !14
  br label %303

299:                                              ; preds = %215
  %300 = bitcast %"class.WTF::StringAppend.1888"* %23 to i64*
  store i64 ptrtoint ([30 x i8]* @.str.14 to i64), i64* %300, align 8, !alias.scope !14
  %301 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %301, align 8, !alias.scope !14
  %302 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i8** %302, align 8, !alias.scope !14
  br label %315

303:                                              ; preds = %297, %282
  %304 = phi i32 [ %298, %297 ], [ %283, %282 ]
  %305 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i8** %305, align 8, !alias.scope !14
  %306 = load atomic i32, i32* %225 monotonic, align 4, !noalias !14
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %303
  %310 = add i32 %304, -1
  store i32 %310, i32* %229, align 4, !noalias !14
  br label %311

311:                                              ; preds = %309, %303
  %312 = phi i32 [ %310, %309 ], [ %304, %303 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #8, !noalias !14
  br label %315

315:                                              ; preds = %299, %311, %314
  %316 = load i32, i32* %201, align 4
  %317 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %317) #8
  %318 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 11
  %319 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 2
  %320 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 3
  %321 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %317, i8 -86, i64 32, i1 false) #8
  store i8* %318, i8** %319, align 8
  %322 = urem i32 %316, 10
  %323 = udiv i32 %316, 10
  %324 = trunc i32 %322 to i8
  %325 = or i8 %324, 48
  store i8 %325, i8* %318, align 1
  %326 = icmp ugt i32 %316, 9
  br i1 %326, label %327, label %342

327:                                              ; preds = %315
  %328 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 10
  store i8* %328, i8** %319, align 8
  %329 = urem i32 %323, 10
  %330 = trunc i32 %329 to i8
  %331 = or i8 %330, 48
  store i8 %331, i8* %328, align 2
  %332 = icmp ugt i32 %316, 99
  br i1 %332, label %333, label %340

333:                                              ; preds = %327
  %334 = udiv i32 %316, 100
  %335 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 9
  store i8* %335, i8** %319, align 8
  %336 = urem i32 %334, 10
  %337 = trunc i32 %336 to i8
  %338 = or i8 %337, 48
  store i8 %338, i8* %335, align 1
  %339 = icmp ugt i32 %316, 999
  br i1 %339, label %344, label %353

340:                                              ; preds = %327
  %341 = ptrtoint i8* %328 to i64
  br label %356

342:                                              ; preds = %315
  %343 = ptrtoint i8* %318 to i64
  br label %356

344:                                              ; preds = %333, %344
  %345 = phi i32 [ %347, %344 ], [ %334, %333 ]
  %346 = load i8*, i8** %319, align 8
  %347 = udiv i32 %345, 10
  %348 = getelementptr inbounds i8, i8* %346, i64 -1
  store i8* %348, i8** %319, align 8
  %349 = urem i32 %347, 10
  %350 = trunc i32 %349 to i8
  %351 = or i8 %350, 48
  store i8 %351, i8* %348, align 1
  %352 = icmp ugt i32 %345, 99
  br i1 %352, label %344, label %353

353:                                              ; preds = %344, %333
  %354 = bitcast i8** %319 to i64*
  %355 = load i64, i64* %354, align 8
  br label %356

356:                                              ; preds = %353, %340, %342
  %357 = phi i64 [ %343, %342 ], [ %355, %353 ], [ %341, %340 ]
  %358 = ptrtoint i8* %321 to i64
  %359 = sub i64 %358, %357
  %360 = trunc i64 %359 to i32
  store i32 %360, i32* %320, align 8
  %361 = inttoptr i64 %357 to i8*
  %362 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %361, i32 %360) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %317) #8
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1887"* nonnull sret %22, %"class.WTF::StringAppend.1888"* nonnull dereferenceable(24) %23, %"class.WTF::StringImpl"* %362)
  %363 = bitcast %"class.WTF::StringAppend.1887"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %363)
  %364 = bitcast %"class.WTF::StringAppend.1887"* %22 to i64*
  %365 = load i64, i64* %364, align 8, !noalias !17
  %366 = bitcast %"class.WTF::StringAppend.1887"* %12 to i64*
  store i64 %365, i64* %366, align 8, !noalias !17
  %367 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %367, align 8, !noalias !17
  %369 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %368, %"class.WTF::StringImpl"** %369, align 8, !noalias !17
  %370 = icmp eq %"class.WTF::StringImpl"* %368, null
  br i1 %370, label %388, label %371

371:                                              ; preds = %356
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %388

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 0
  %378 = load i32, i32* %377, align 4
  %379 = zext i32 %378 to i33
  %380 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %379, i33 1) #8
  %381 = extractvalue { i33, i1 } %380, 1
  %382 = extractvalue { i33, i1 } %380, 0
  %383 = icmp slt i33 %382, 0
  %384 = or i1 %381, %383
  br i1 %384, label %385, label %386, !prof !4

385:                                              ; preds = %376
  call void @llvm.trap() #8
  unreachable

386:                                              ; preds = %376
  %387 = trunc i33 %382 to i32
  store i32 %387, i32* %377, align 4
  br label %388

388:                                              ; preds = %386, %371, %356
  %389 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %12, i64 0, i32 0, i32 1
  %390 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %22, i64 0, i32 0, i32 1
  %391 = bitcast i8** %390 to i64*
  %392 = load i64, i64* %391, align 8, !noalias !17
  %393 = bitcast i8** %389 to i64*
  store i64 %392, i64* %393, align 8, !noalias !17
  %394 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %22, i64 0, i32 1, i32 0, i32 0
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8, !noalias !17
  %396 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %12, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %395, %"class.WTF::StringImpl"** %396, align 8, !noalias !17
  %397 = icmp eq %"class.WTF::StringImpl"* %395, null
  br i1 %397, label %415, label %398

398:                                              ; preds = %388
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %415

403:                                              ; preds = %398
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = zext i32 %405 to i33
  %407 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %406, i33 1) #8
  %408 = extractvalue { i33, i1 } %407, 1
  %409 = extractvalue { i33, i1 } %407, 0
  %410 = icmp slt i33 %409, 0
  %411 = or i1 %408, %410
  br i1 %411, label %412, label %413, !prof !4

412:                                              ; preds = %403
  call void @llvm.trap() #8
  unreachable

413:                                              ; preds = %403
  %414 = trunc i33 %409 to i32
  store i32 %414, i32* %404, align 4
  br label %415

415:                                              ; preds = %388, %398, %413
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1886"* nonnull %21, %"class.WTF::StringAppend.1887"* nonnull byval(%"class.WTF::StringAppend.1887") align 8 %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %363)
  %416 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %213) #8
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.1885"* nonnull sret %20, %"class.WTF::StringAppend.1886"* nonnull dereferenceable(40) %21, %"class.WTF::StringImpl"* %416)
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSB_SC_(%"class.WTF::StringAppend.1884"* nonnull sret %19, %"class.WTF::StringAppend.1885"* nonnull dereferenceable(48) %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0))
  %417 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_INS6_INS6_INS6_INS6_IPKcNS5_6StringEEES8_EES9_EES8_EES9_EES8_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %18, %"class.WTF::StringAppend.1884"* nonnull dereferenceable(56) %19) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %41, %"class.blink::DOMException"* %417, i32 2) #8
  %418 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %434, label %421

421:                                              ; preds = %415
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  br i1 %425, label %428, label %430

428:                                              ; preds = %421
  %429 = add i32 %427, -1
  store i32 %429, i32* %426, align 4
  br label %430

430:                                              ; preds = %428, %421
  %431 = phi i32 [ %429, %428 ], [ %427, %421 ]
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %419) #8
  br label %434

434:                                              ; preds = %433, %430, %415
  %435 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %435, align 8
  %437 = icmp eq %"class.WTF::StringImpl"* %436, null
  br i1 %437, label %451, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  br i1 %442, label %445, label %447

445:                                              ; preds = %438
  %446 = add i32 %444, -1
  store i32 %446, i32* %443, align 4
  br label %447

447:                                              ; preds = %445, %438
  %448 = phi i32 [ %446, %445 ], [ %444, %438 ]
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %436) #8
  br label %451

451:                                              ; preds = %450, %447, %434
  %452 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %453 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %452, align 8
  %454 = icmp eq %"class.WTF::StringImpl"* %453, null
  br i1 %454, label %468, label %455

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = load atomic i32, i32* %456 monotonic, align 4
  %458 = and i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 0
  %461 = load i32, i32* %460, align 4
  br i1 %459, label %462, label %464

462:                                              ; preds = %455
  %463 = add i32 %461, -1
  store i32 %463, i32* %460, align 4
  br label %464

464:                                              ; preds = %462, %455
  %465 = phi i32 [ %463, %462 ], [ %461, %455 ]
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %468

467:                                              ; preds = %464
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %453) #8
  br label %468

468:                                              ; preds = %451, %464, %467
  %469 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %20, i64 0, i32 1, i32 0, i32 0
  %470 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  %471 = icmp eq %"class.WTF::StringImpl"* %470, null
  br i1 %471, label %485, label %472

472:                                              ; preds = %468
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load atomic i32, i32* %473 monotonic, align 4
  %475 = and i32 %474, 2
  %476 = icmp eq i32 %475, 0
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %470, i64 0, i32 0
  %478 = load i32, i32* %477, align 4
  br i1 %476, label %479, label %481

479:                                              ; preds = %472
  %480 = add i32 %478, -1
  store i32 %480, i32* %477, align 4
  br label %481

481:                                              ; preds = %479, %472
  %482 = phi i32 [ %480, %479 ], [ %478, %472 ]
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %485

484:                                              ; preds = %481
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %470) #8
  br label %485

485:                                              ; preds = %484, %481, %468
  %486 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %485
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #8
  br label %502

502:                                              ; preds = %501, %498, %485
  %503 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %504 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %503, align 8
  %505 = icmp eq %"class.WTF::StringImpl"* %504, null
  br i1 %505, label %519, label %506

506:                                              ; preds = %502
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %508 = load atomic i32, i32* %507 monotonic, align 4
  %509 = and i32 %508, 2
  %510 = icmp eq i32 %509, 0
  %511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 0
  %512 = load i32, i32* %511, align 4
  br i1 %510, label %513, label %515

513:                                              ; preds = %506
  %514 = add i32 %512, -1
  store i32 %514, i32* %511, align 4
  br label %515

515:                                              ; preds = %513, %506
  %516 = phi i32 [ %514, %513 ], [ %512, %506 ]
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %519

518:                                              ; preds = %515
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %504) #8
  br label %519

519:                                              ; preds = %502, %515, %518
  %520 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %520, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %521, null
  br i1 %522, label %536, label %523

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = load atomic i32, i32* %524 monotonic, align 4
  %526 = and i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 0
  %529 = load i32, i32* %528, align 4
  br i1 %527, label %530, label %532

530:                                              ; preds = %523
  %531 = add i32 %529, -1
  store i32 %531, i32* %528, align 4
  br label %532

532:                                              ; preds = %530, %523
  %533 = phi i32 [ %531, %530 ], [ %529, %523 ]
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %536

535:                                              ; preds = %532
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %521) #8
  br label %536

536:                                              ; preds = %535, %532, %519
  %537 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %537, align 8
  %539 = icmp eq %"class.WTF::StringImpl"* %538, null
  br i1 %539, label %553, label %540

540:                                              ; preds = %536
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load atomic i32, i32* %541 monotonic, align 4
  %543 = and i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 0
  %546 = load i32, i32* %545, align 4
  br i1 %544, label %547, label %549

547:                                              ; preds = %540
  %548 = add i32 %546, -1
  store i32 %548, i32* %545, align 4
  br label %549

549:                                              ; preds = %547, %540
  %550 = phi i32 [ %548, %547 ], [ %546, %540 ]
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %553

552:                                              ; preds = %549
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %538) #8
  br label %553

553:                                              ; preds = %536, %549, %552
  %554 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  %555 = icmp eq %"class.WTF::StringImpl"* %554, null
  br i1 %555, label %569, label %556

556:                                              ; preds = %553
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 0
  %562 = load i32, i32* %561, align 4
  br i1 %560, label %563, label %565

563:                                              ; preds = %556
  %564 = add i32 %562, -1
  store i32 %564, i32* %561, align 4
  br label %565

565:                                              ; preds = %563, %556
  %566 = phi i32 [ %564, %563 ], [ %562, %556 ]
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %554) #8
  br label %569

569:                                              ; preds = %568, %565, %553
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %367, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %570, null
  br i1 %571, label %585, label %572

572:                                              ; preds = %569
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = and i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 0
  %578 = load i32, i32* %577, align 4
  br i1 %576, label %579, label %581

579:                                              ; preds = %572
  %580 = add i32 %578, -1
  store i32 %580, i32* %577, align 4
  br label %581

581:                                              ; preds = %579, %572
  %582 = phi i32 [ %580, %579 ], [ %578, %572 ]
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %585

584:                                              ; preds = %581
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %570) #8
  br label %585

585:                                              ; preds = %569, %581, %584
  %586 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %587 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %586, align 8
  %588 = icmp eq %"class.WTF::StringImpl"* %587, null
  br i1 %588, label %602, label %589

589:                                              ; preds = %585
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %587, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %591 = load atomic i32, i32* %590 monotonic, align 4
  %592 = and i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %587, i64 0, i32 0
  %595 = load i32, i32* %594, align 4
  br i1 %593, label %596, label %598

596:                                              ; preds = %589
  %597 = add i32 %595, -1
  store i32 %597, i32* %594, align 4
  br label %598

598:                                              ; preds = %596, %589
  %599 = phi i32 [ %597, %596 ], [ %595, %589 ]
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %602

601:                                              ; preds = %598
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %587) #8
  br label %602

602:                                              ; preds = %585, %598, %601
  br i1 %223, label %628, label %603

603:                                              ; preds = %602
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %609 = load i32, i32* %608, align 4
  br i1 %607, label %610, label %612

610:                                              ; preds = %603
  %611 = add i32 %609, -1
  store i32 %611, i32* %608, align 4
  br label %612

612:                                              ; preds = %610, %603
  %613 = phi i32 [ %611, %610 ], [ %609, %603 ]
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %617

615:                                              ; preds = %612
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #8
  %616 = load i32, i32* %608, align 4
  br label %617

617:                                              ; preds = %612, %615
  %618 = phi i32 [ %613, %612 ], [ %616, %615 ]
  %619 = load atomic i32, i32* %604 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %624

622:                                              ; preds = %617
  %623 = add i32 %618, -1
  store i32 %623, i32* %608, align 4
  br label %624

624:                                              ; preds = %622, %617
  %625 = phi i32 [ %623, %622 ], [ %618, %617 ]
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %628

627:                                              ; preds = %624
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #8
  br label %628

628:                                              ; preds = %602, %624, %627
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %220) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %219) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %218) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %217) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %216) #8
  br label %1831

629:                                              ; preds = %200
  %630 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %630) #8
  store i64 -6148914691236517206, i64* %24, align 8
  %631 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %204, align 8
  %632 = bitcast %"class.blink::AudioDestinationHandler"* %631 to double (%"class.blink::AudioDestinationHandler"*)***
  %633 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %632, align 8
  %634 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %633, i64 25
  %635 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %634, align 8
  %636 = tail call double %635(%"class.blink::AudioDestinationHandler"* %631) #8
  %637 = fptrunc double %636 to float
  %638 = fpext float %637 to double
  %639 = fmul double %638, %3
  %640 = fptoui double %639 to i64
  %641 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0, i32 12, i32 0
  %642 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %641, align 8
  %643 = getelementptr inbounds %"class.blink::DeferredTaskHandler", %"class.blink::DeferredTaskHandler"* %642, i64 0, i32 7
  %644 = load i32, i32* %643, align 4
  %645 = zext i32 %644 to i64
  %646 = add nsw i64 %645, -1
  %647 = add i64 %646, %640
  %648 = urem i64 %647, %645
  %649 = sub i64 %647, %648
  store i64 %649, i64* %24, align 8
  %650 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %204, align 8
  %651 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %650, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %652 = load atomic i64, i64* %651 acquire, align 8
  %653 = icmp ult i64 %649, %652
  br i1 %653, label %654, label %1447

654:                                              ; preds = %629
  %655 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %204, align 8
  %656 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %655, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %657 = load atomic i64, i64* %656 acquire, align 8
  %658 = load i32, i32* %201, align 4
  %659 = zext i32 %658 to i64
  %660 = icmp ugt i64 %657, %659
  %661 = select i1 %660, i64 %659, i64 %657
  %662 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %204, align 8
  %663 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %662, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %664 = load atomic i64, i64* %663 acquire, align 8
  %665 = uitofp i64 %664 to double
  %666 = bitcast %"class.blink::AudioDestinationHandler"* %662 to double (%"class.blink::AudioDestinationHandler"*)***
  %667 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %666, align 8
  %668 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %667, i64 25
  %669 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %668, align 8
  %670 = tail call double %669(%"class.blink::AudioDestinationHandler"* %662) #8
  %671 = load i32, i32* %201, align 4
  %672 = uitofp i32 %671 to double
  %673 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %204, align 8
  %674 = bitcast %"class.blink::AudioDestinationHandler"* %673 to double (%"class.blink::AudioDestinationHandler"*)***
  %675 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %674, align 8
  %676 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %675, i64 25
  %677 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %676, align 8
  %678 = tail call double %677(%"class.blink::AudioDestinationHandler"* %673) #8
  %679 = fptrunc double %678 to float
  %680 = fpext float %679 to double
  %681 = insertelement <2 x double> undef, double %672, i32 0
  %682 = insertelement <2 x double> %681, double %665, i32 1
  %683 = insertelement <2 x double> undef, double %680, i32 0
  %684 = insertelement <2 x double> %683, double %670, i32 1
  %685 = fdiv <2 x double> %682, %684
  %686 = extractelement <2 x double> %685, i32 0
  %687 = extractelement <2 x double> %685, i32 1
  %688 = fcmp olt double %686, %687
  %689 = select i1 %688, double %686, double %687
  %690 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %14, align 8
  %691 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %691) #8
  store i32 11, i32* %25, align 4
  %692 = bitcast %"class.WTF::StringAppend.1889"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %692) #8
  %693 = bitcast %"class.WTF::StringAppend.1890"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %693) #8
  %694 = bitcast %"class.WTF::StringAppend.1891"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %694) #8
  %695 = bitcast %"class.WTF::StringAppend.1892"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %695) #8
  %696 = bitcast %"class.WTF::StringAppend.1893"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %696) #8
  %697 = bitcast %"class.WTF::StringAppend.1886"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %697) #8
  %698 = bitcast %"class.WTF::StringAppend.1887"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %698) #8
  %699 = bitcast %"class.WTF::StringAppend.1888"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %699) #8
  %700 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %3, i32 6) #8
  %701 = icmp eq %"class.WTF::StringImpl"* %700, null
  br i1 %701, label %777, label %702

702:                                              ; preds = %654
  %703 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %700, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %704 = load atomic i32, i32* %703 monotonic, align 4
  %705 = and i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %700, i64 0, i32 0
  %708 = load i32, i32* %707, align 4
  br i1 %706, label %709, label %719

709:                                              ; preds = %702
  %710 = zext i32 %708 to i33
  %711 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %710, i33 1) #8
  %712 = extractvalue { i33, i1 } %711, 1
  %713 = extractvalue { i33, i1 } %711, 0
  %714 = icmp slt i33 %713, 0
  %715 = or i1 %712, %714
  br i1 %715, label %716, label %717, !prof !4

716:                                              ; preds = %709
  tail call void @llvm.trap() #8
  unreachable

717:                                              ; preds = %709
  %718 = trunc i33 %713 to i32
  store i32 %718, i32* %707, align 4
  br label %719

719:                                              ; preds = %717, %702
  %720 = phi i32 [ %718, %717 ], [ %708, %702 ]
  %721 = load atomic i32, i32* %703 monotonic, align 4
  %722 = and i32 %721, 2
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %724, label %734

724:                                              ; preds = %719
  %725 = zext i32 %720 to i33
  %726 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %725, i33 1) #8
  %727 = extractvalue { i33, i1 } %726, 1
  %728 = extractvalue { i33, i1 } %726, 0
  %729 = icmp slt i33 %728, 0
  %730 = or i1 %727, %729
  br i1 %730, label %731, label %732, !prof !4

731:                                              ; preds = %724
  tail call void @llvm.trap() #8
  unreachable

732:                                              ; preds = %724
  %733 = trunc i33 %728 to i32
  store i32 %733, i32* %707, align 4
  br label %734

734:                                              ; preds = %732, %719
  %735 = phi i32 [ %733, %732 ], [ %720, %719 ]
  %736 = load atomic i32, i32* %703 monotonic, align 4
  %737 = and i32 %736, 2
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %739, label %741

739:                                              ; preds = %734
  %740 = add i32 %735, -1
  store i32 %740, i32* %707, align 4
  br label %741

741:                                              ; preds = %739, %734
  %742 = phi i32 [ %740, %739 ], [ %735, %734 ]
  %743 = icmp eq i32 %742, 0
  br i1 %743, label %744, label %745

744:                                              ; preds = %741
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %700) #8
  br label %745

745:                                              ; preds = %741, %744
  %746 = load atomic i32, i32* %703 monotonic, align 4, !noalias !20
  %747 = and i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = load i32, i32* %707, align 4
  br i1 %748, label %750, label %760

750:                                              ; preds = %745
  %751 = zext i32 %749 to i33
  %752 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %751, i33 1) #8
  %753 = extractvalue { i33, i1 } %752, 1
  %754 = extractvalue { i33, i1 } %752, 0
  %755 = icmp slt i33 %754, 0
  %756 = or i1 %753, %755
  br i1 %756, label %757, label %758, !prof !4

757:                                              ; preds = %750
  tail call void @llvm.trap() #8, !noalias !20
  unreachable

758:                                              ; preds = %750
  %759 = trunc i33 %754 to i32
  store i32 %759, i32* %707, align 4, !noalias !20
  br label %760

760:                                              ; preds = %745, %758
  %761 = phi i32 [ %759, %758 ], [ %749, %745 ]
  %762 = bitcast %"class.WTF::StringAppend.1888"* %33 to i64*
  store i64 ptrtoint ([9 x i8]* @.str.18 to i64), i64* %762, align 8, !alias.scope !20
  %763 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %33, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %700, %"class.WTF::StringImpl"** %763, align 8, !alias.scope !20
  %764 = load atomic i32, i32* %703 monotonic, align 4, !noalias !20
  %765 = and i32 %764, 2
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %781

767:                                              ; preds = %760
  %768 = zext i32 %761 to i33
  %769 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %768, i33 1) #8
  %770 = extractvalue { i33, i1 } %769, 1
  %771 = extractvalue { i33, i1 } %769, 0
  %772 = icmp slt i33 %771, 0
  %773 = or i1 %770, %772
  br i1 %773, label %774, label %775, !prof !4

774:                                              ; preds = %767
  tail call void @llvm.trap() #8, !noalias !20
  unreachable

775:                                              ; preds = %767
  %776 = trunc i33 %771 to i32
  store i32 %776, i32* %707, align 4, !noalias !20
  br label %781

777:                                              ; preds = %654
  %778 = bitcast %"class.WTF::StringAppend.1888"* %33 to i64*
  store i64 ptrtoint ([9 x i8]* @.str.18 to i64), i64* %778, align 8, !alias.scope !20
  %779 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %33, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %779, align 8, !alias.scope !20
  %780 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %33, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0), i8** %780, align 8, !alias.scope !20
  br label %793

781:                                              ; preds = %775, %760
  %782 = phi i32 [ %776, %775 ], [ %761, %760 ]
  %783 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %33, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0), i8** %783, align 8, !alias.scope !20
  %784 = load atomic i32, i32* %703 monotonic, align 4, !noalias !20
  %785 = and i32 %784, 2
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %787, label %789

787:                                              ; preds = %781
  %788 = add i32 %782, -1
  store i32 %788, i32* %707, align 4, !noalias !20
  br label %789

789:                                              ; preds = %787, %781
  %790 = phi i32 [ %788, %787 ], [ %782, %781 ]
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %792, label %793

792:                                              ; preds = %789
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %700) #8, !noalias !20
  br label %793

793:                                              ; preds = %777, %789, %792
  %794 = load i64, i64* %24, align 8
  %795 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %795) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %795, i8 -86, i64 40, i1 false) #8
  %796 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %11, i64 0, i32 0, i64 24
  %797 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %11, i64 0, i32 1
  %798 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %11, i64 0, i32 0, i64 23
  store i8* %798, i8** %797, align 8
  %799 = urem i64 %794, 10
  %800 = udiv i64 %794, 10
  %801 = trunc i64 %799 to i8
  %802 = or i8 %801, 48
  store i8 %802, i8* %798, align 1
  %803 = icmp ugt i64 %794, 9
  br i1 %803, label %804, label %819

804:                                              ; preds = %793
  %805 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %11, i64 0, i32 0, i64 22
  store i8* %805, i8** %797, align 8
  %806 = urem i64 %800, 10
  %807 = trunc i64 %806 to i8
  %808 = or i8 %807, 48
  store i8 %808, i8* %805, align 2
  %809 = icmp ugt i64 %794, 99
  br i1 %809, label %810, label %817

810:                                              ; preds = %804
  %811 = udiv i64 %794, 100
  %812 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %11, i64 0, i32 0, i64 21
  store i8* %812, i8** %797, align 8
  %813 = urem i64 %811, 10
  %814 = trunc i64 %813 to i8
  %815 = or i8 %814, 48
  store i8 %815, i8* %812, align 1
  %816 = icmp ugt i64 %794, 999
  br i1 %816, label %821, label %830

817:                                              ; preds = %804
  %818 = ptrtoint i8* %805 to i64
  br label %833

819:                                              ; preds = %793
  %820 = ptrtoint i8* %798 to i64
  br label %833

821:                                              ; preds = %810, %821
  %822 = phi i64 [ %824, %821 ], [ %811, %810 ]
  %823 = load i8*, i8** %797, align 8
  %824 = udiv i64 %822, 10
  %825 = getelementptr inbounds i8, i8* %823, i64 -1
  store i8* %825, i8** %797, align 8
  %826 = urem i64 %824, 10
  %827 = trunc i64 %826 to i8
  %828 = or i8 %827, 48
  store i8 %828, i8* %825, align 1
  %829 = icmp ugt i64 %822, 99
  br i1 %829, label %821, label %830

830:                                              ; preds = %821, %810
  %831 = bitcast i8** %797 to i64*
  %832 = load i64, i64* %831, align 8
  br label %833

833:                                              ; preds = %830, %817, %819
  %834 = phi i64 [ %820, %819 ], [ %832, %830 ], [ %818, %817 ]
  %835 = ptrtoint i8* %796 to i64
  %836 = sub i64 %835, %834
  %837 = trunc i64 %836 to i32
  %838 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %11, i64 0, i32 2
  store i32 %837, i32* %838, align 8
  %839 = inttoptr i64 %834 to i8*
  %840 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %839, i32 %837) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %795) #8
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1887"* nonnull sret %32, %"class.WTF::StringAppend.1888"* nonnull dereferenceable(24) %33, %"class.WTF::StringImpl"* %840)
  %841 = bitcast %"class.WTF::StringAppend.1887"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %841)
  %842 = bitcast %"class.WTF::StringAppend.1887"* %32 to i64*
  %843 = load i64, i64* %842, align 8, !noalias !23
  %844 = bitcast %"class.WTF::StringAppend.1887"* %10 to i64*
  store i64 %843, i64* %844, align 8, !noalias !23
  %845 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %846 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %845, align 8, !noalias !23
  %847 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %846, %"class.WTF::StringImpl"** %847, align 8, !noalias !23
  %848 = icmp eq %"class.WTF::StringImpl"* %846, null
  br i1 %848, label %866, label %849

849:                                              ; preds = %833
  %850 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %846, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %851 = load atomic i32, i32* %850 monotonic, align 4
  %852 = and i32 %851, 2
  %853 = icmp eq i32 %852, 0
  br i1 %853, label %854, label %866

854:                                              ; preds = %849
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %846, i64 0, i32 0
  %856 = load i32, i32* %855, align 4
  %857 = zext i32 %856 to i33
  %858 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %857, i33 1) #8
  %859 = extractvalue { i33, i1 } %858, 1
  %860 = extractvalue { i33, i1 } %858, 0
  %861 = icmp slt i33 %860, 0
  %862 = or i1 %859, %861
  br i1 %862, label %863, label %864, !prof !4

863:                                              ; preds = %854
  call void @llvm.trap() #8
  unreachable

864:                                              ; preds = %854
  %865 = trunc i33 %860 to i32
  store i32 %865, i32* %855, align 4
  br label %866

866:                                              ; preds = %864, %849, %833
  %867 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %10, i64 0, i32 0, i32 1
  %868 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %32, i64 0, i32 0, i32 1
  %869 = bitcast i8** %868 to i64*
  %870 = load i64, i64* %869, align 8, !noalias !23
  %871 = bitcast i8** %867 to i64*
  store i64 %870, i64* %871, align 8, !noalias !23
  %872 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %32, i64 0, i32 1, i32 0, i32 0
  %873 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %872, align 8, !noalias !23
  %874 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %10, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %873, %"class.WTF::StringImpl"** %874, align 8, !noalias !23
  %875 = icmp eq %"class.WTF::StringImpl"* %873, null
  br i1 %875, label %893, label %876

876:                                              ; preds = %866
  %877 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %878 = load atomic i32, i32* %877 monotonic, align 4
  %879 = and i32 %878, 2
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %893

881:                                              ; preds = %876
  %882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %873, i64 0, i32 0
  %883 = load i32, i32* %882, align 4
  %884 = zext i32 %883 to i33
  %885 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %884, i33 1) #8
  %886 = extractvalue { i33, i1 } %885, 1
  %887 = extractvalue { i33, i1 } %885, 0
  %888 = icmp slt i33 %887, 0
  %889 = or i1 %886, %888
  br i1 %889, label %890, label %891, !prof !4

890:                                              ; preds = %881
  call void @llvm.trap() #8
  unreachable

891:                                              ; preds = %881
  %892 = trunc i33 %887 to i32
  store i32 %892, i32* %882, align 4
  br label %893

893:                                              ; preds = %866, %876, %891
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1886"* nonnull %31, %"class.WTF::StringAppend.1887"* nonnull byval(%"class.WTF::StringAppend.1887") align 8 %10, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %841)
  %894 = bitcast %"class.WTF::StringAppend.1886"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %894)
  %895 = bitcast %"class.WTF::StringAppend.1886"* %31 to i64*
  %896 = load i64, i64* %895, align 8, !noalias !26
  %897 = bitcast %"class.WTF::StringAppend.1886"* %9 to i64*
  store i64 %896, i64* %897, align 8, !noalias !26
  %898 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %899 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %898, align 8, !noalias !26
  %900 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %899, %"class.WTF::StringImpl"** %900, align 8, !noalias !26
  %901 = icmp eq %"class.WTF::StringImpl"* %899, null
  br i1 %901, label %919, label %902

902:                                              ; preds = %893
  %903 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %899, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %904 = load atomic i32, i32* %903 monotonic, align 4
  %905 = and i32 %904, 2
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %907, label %919

907:                                              ; preds = %902
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %899, i64 0, i32 0
  %909 = load i32, i32* %908, align 4
  %910 = zext i32 %909 to i33
  %911 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %910, i33 1) #8
  %912 = extractvalue { i33, i1 } %911, 1
  %913 = extractvalue { i33, i1 } %911, 0
  %914 = icmp slt i33 %913, 0
  %915 = or i1 %912, %914
  br i1 %915, label %916, label %917, !prof !4

916:                                              ; preds = %907
  call void @llvm.trap() #8
  unreachable

917:                                              ; preds = %907
  %918 = trunc i33 %913 to i32
  store i32 %918, i32* %908, align 4
  br label %919

919:                                              ; preds = %917, %902, %893
  %920 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %9, i64 0, i32 0, i32 0, i32 1
  %921 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %31, i64 0, i32 0, i32 0, i32 1
  %922 = bitcast i8** %921 to i64*
  %923 = load i64, i64* %922, align 8, !noalias !26
  %924 = bitcast i8** %920 to i64*
  store i64 %923, i64* %924, align 8, !noalias !26
  %925 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  %926 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %925, align 8, !noalias !26
  %927 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %926, %"class.WTF::StringImpl"** %927, align 8, !noalias !26
  %928 = icmp eq %"class.WTF::StringImpl"* %926, null
  br i1 %928, label %946, label %929

929:                                              ; preds = %919
  %930 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %926, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %931 = load atomic i32, i32* %930 monotonic, align 4
  %932 = and i32 %931, 2
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %934, label %946

934:                                              ; preds = %929
  %935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %926, i64 0, i32 0
  %936 = load i32, i32* %935, align 4
  %937 = zext i32 %936 to i33
  %938 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %937, i33 1) #8
  %939 = extractvalue { i33, i1 } %938, 1
  %940 = extractvalue { i33, i1 } %938, 0
  %941 = icmp slt i33 %940, 0
  %942 = or i1 %939, %941
  br i1 %942, label %943, label %944, !prof !4

943:                                              ; preds = %934
  call void @llvm.trap() #8
  unreachable

944:                                              ; preds = %934
  %945 = trunc i33 %940 to i32
  store i32 %945, i32* %935, align 4
  br label %946

946:                                              ; preds = %919, %929, %944
  %947 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %9, i64 0, i32 1
  %948 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %31, i64 0, i32 1
  %949 = bitcast i8** %948 to i64*
  %950 = load i64, i64* %949, align 8, !noalias !26
  %951 = bitcast i8** %947 to i64*
  store i64 %950, i64* %951, align 8, !noalias !26
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EC2ES7_S2_(%"class.WTF::StringAppend.1893"* nonnull %30, %"class.WTF::StringAppend.1886"* nonnull byval(%"class.WTF::StringAppend.1886") align 8 %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %894)
  %952 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %952) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %952, i8 -86, i64 40, i1 false) #8
  %953 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %8, i64 0, i32 0, i64 24
  %954 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %8, i64 0, i32 1
  %955 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %8, i64 0, i32 0, i64 23
  store i8* %955, i8** %954, align 8
  %956 = urem i64 %661, 10
  %957 = udiv i64 %661, 10
  %958 = trunc i64 %956 to i8
  %959 = or i8 %958, 48
  store i8 %959, i8* %955, align 1
  %960 = icmp ugt i64 %661, 9
  br i1 %960, label %961, label %976

961:                                              ; preds = %946
  %962 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %8, i64 0, i32 0, i64 22
  store i8* %962, i8** %954, align 8
  %963 = urem i64 %957, 10
  %964 = trunc i64 %963 to i8
  %965 = or i8 %964, 48
  store i8 %965, i8* %962, align 2
  %966 = icmp ugt i64 %661, 99
  br i1 %966, label %967, label %974

967:                                              ; preds = %961
  %968 = udiv i64 %661, 100
  %969 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %8, i64 0, i32 0, i64 21
  store i8* %969, i8** %954, align 8
  %970 = urem i64 %968, 10
  %971 = trunc i64 %970 to i8
  %972 = or i8 %971, 48
  store i8 %972, i8* %969, align 1
  %973 = icmp ugt i64 %661, 999
  br i1 %973, label %978, label %987

974:                                              ; preds = %961
  %975 = ptrtoint i8* %962 to i64
  br label %990

976:                                              ; preds = %946
  %977 = ptrtoint i8* %955 to i64
  br label %990

978:                                              ; preds = %967, %978
  %979 = phi i64 [ %981, %978 ], [ %968, %967 ]
  %980 = load i8*, i8** %954, align 8
  %981 = udiv i64 %979, 10
  %982 = getelementptr inbounds i8, i8* %980, i64 -1
  store i8* %982, i8** %954, align 8
  %983 = urem i64 %981, 10
  %984 = trunc i64 %983 to i8
  %985 = or i8 %984, 48
  store i8 %985, i8* %982, align 1
  %986 = icmp ugt i64 %979, 99
  br i1 %986, label %978, label %987

987:                                              ; preds = %978, %967
  %988 = bitcast i8** %954 to i64*
  %989 = load i64, i64* %988, align 8
  br label %990

990:                                              ; preds = %987, %974, %976
  %991 = phi i64 [ %977, %976 ], [ %989, %987 ], [ %975, %974 ]
  %992 = ptrtoint i8* %953 to i64
  %993 = sub i64 %992, %991
  %994 = trunc i64 %993 to i32
  %995 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %8, i64 0, i32 2
  store i32 %994, i32* %995, align 8
  %996 = inttoptr i64 %991 to i8*
  %997 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %996, i32 %994) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %952) #8
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSB_SC_(%"class.WTF::StringAppend.1892"* nonnull sret %29, %"class.WTF::StringAppend.1893"* nonnull dereferenceable(48) %30, %"class.WTF::StringImpl"* %997)
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSC_SD_(%"class.WTF::StringAppend.1891"* nonnull sret %28, %"class.WTF::StringAppend.1892"* nonnull dereferenceable(56) %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0))
  %998 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %689, i32 6) #8
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSD_SE_(%"class.WTF::StringAppend.1890"* nonnull sret %27, %"class.WTF::StringAppend.1891"* nonnull dereferenceable(64) %28, %"class.WTF::StringImpl"* %998)
  %999 = bitcast %"class.WTF::StringAppend.1890"* %27 to i64*
  %1000 = load i64, i64* %999, align 8
  %1001 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1002 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1001, align 8
  %1003 = icmp eq %"class.WTF::StringImpl"* %1002, null
  br i1 %1003, label %1021, label %1004

1004:                                             ; preds = %990
  %1005 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1002, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1006 = load atomic i32, i32* %1005 monotonic, align 4
  %1007 = and i32 %1006, 2
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1009, label %1021

1009:                                             ; preds = %1004
  %1010 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1002, i64 0, i32 0
  %1011 = load i32, i32* %1010, align 4
  %1012 = zext i32 %1011 to i33
  %1013 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1012, i33 1) #8
  %1014 = extractvalue { i33, i1 } %1013, 1
  %1015 = extractvalue { i33, i1 } %1013, 0
  %1016 = icmp slt i33 %1015, 0
  %1017 = or i1 %1014, %1016
  br i1 %1017, label %1018, label %1019, !prof !4

1018:                                             ; preds = %1009
  call void @llvm.trap() #8
  unreachable

1019:                                             ; preds = %1009
  %1020 = trunc i33 %1015 to i32
  store i32 %1020, i32* %1010, align 4
  br label %1021

1021:                                             ; preds = %1019, %1004, %990
  %1022 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1023 = bitcast i8** %1022 to i64*
  %1024 = load i64, i64* %1023, align 8
  %1025 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1026 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1025, align 8
  %1027 = icmp eq %"class.WTF::StringImpl"* %1026, null
  br i1 %1027, label %1045, label %1028

1028:                                             ; preds = %1021
  %1029 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1026, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1030 = load atomic i32, i32* %1029 monotonic, align 4
  %1031 = and i32 %1030, 2
  %1032 = icmp eq i32 %1031, 0
  br i1 %1032, label %1033, label %1045

1033:                                             ; preds = %1028
  %1034 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1026, i64 0, i32 0
  %1035 = load i32, i32* %1034, align 4
  %1036 = zext i32 %1035 to i33
  %1037 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1036, i33 1) #8
  %1038 = extractvalue { i33, i1 } %1037, 1
  %1039 = extractvalue { i33, i1 } %1037, 0
  %1040 = icmp slt i33 %1039, 0
  %1041 = or i1 %1038, %1040
  br i1 %1041, label %1042, label %1043, !prof !4

1042:                                             ; preds = %1033
  call void @llvm.trap() #8
  unreachable

1043:                                             ; preds = %1033
  %1044 = trunc i33 %1039 to i32
  store i32 %1044, i32* %1034, align 4
  br label %1045

1045:                                             ; preds = %1043, %1028, %1021
  %1046 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1047 = bitcast i8** %1046 to <2 x i64>*
  %1048 = load <2 x i64>, <2 x i64>* %1047, align 8
  %1049 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1050 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1049, align 8
  %1051 = icmp eq %"class.WTF::StringImpl"* %1050, null
  br i1 %1051, label %1069, label %1052

1052:                                             ; preds = %1045
  %1053 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1050, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1054 = load atomic i32, i32* %1053 monotonic, align 4
  %1055 = and i32 %1054, 2
  %1056 = icmp eq i32 %1055, 0
  br i1 %1056, label %1057, label %1069

1057:                                             ; preds = %1052
  %1058 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1050, i64 0, i32 0
  %1059 = load i32, i32* %1058, align 4
  %1060 = zext i32 %1059 to i33
  %1061 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1060, i33 1) #8
  %1062 = extractvalue { i33, i1 } %1061, 1
  %1063 = extractvalue { i33, i1 } %1061, 0
  %1064 = icmp slt i33 %1063, 0
  %1065 = or i1 %1062, %1064
  br i1 %1065, label %1066, label %1067, !prof !4

1066:                                             ; preds = %1057
  call void @llvm.trap() #8
  unreachable

1067:                                             ; preds = %1057
  %1068 = trunc i33 %1063 to i32
  store i32 %1068, i32* %1058, align 4
  br label %1069

1069:                                             ; preds = %1067, %1052, %1045
  %1070 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %27, i64 0, i32 0, i32 1
  %1071 = bitcast i8** %1070 to i64*
  %1072 = load i64, i64* %1071, align 8
  %1073 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %27, i64 0, i32 1, i32 0, i32 0
  %1074 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1073, align 8
  %1075 = icmp eq %"class.WTF::StringImpl"* %1074, null
  br i1 %1075, label %1093, label %1076

1076:                                             ; preds = %1069
  %1077 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1074, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1078 = load atomic i32, i32* %1077 monotonic, align 4
  %1079 = and i32 %1078, 2
  %1080 = icmp eq i32 %1079, 0
  br i1 %1080, label %1081, label %1093

1081:                                             ; preds = %1076
  %1082 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1074, i64 0, i32 0
  %1083 = load i32, i32* %1082, align 4
  %1084 = zext i32 %1083 to i33
  %1085 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1084, i33 1) #8
  %1086 = extractvalue { i33, i1 } %1085, 1
  %1087 = extractvalue { i33, i1 } %1085, 0
  %1088 = icmp slt i33 %1087, 0
  %1089 = or i1 %1086, %1088
  br i1 %1089, label %1090, label %1091, !prof !4

1090:                                             ; preds = %1081
  call void @llvm.trap() #8
  unreachable

1091:                                             ; preds = %1081
  %1092 = trunc i33 %1087 to i32
  store i32 %1092, i32* %1082, align 4
  br label %1093

1093:                                             ; preds = %1069, %1076, %1091
  %1094 = bitcast %"class.WTF::StringAppend.1890"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1094) #8, !noalias !29
  %1095 = bitcast %"class.WTF::StringAppend.1890"* %7 to i64*
  store i64 %1000, i64* %1095, align 8, !noalias !29
  %1096 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1002, %"class.WTF::StringImpl"** %1096, align 8, !noalias !29
  %1097 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1098 = bitcast i8** %1097 to i64*
  store i64 %1024, i64* %1098, align 8, !noalias !29
  %1099 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1026, %"class.WTF::StringImpl"** %1099, align 8, !noalias !29
  %1100 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1101 = bitcast i8** %1100 to <2 x i64>*
  store <2 x i64> %1048, <2 x i64>* %1101, align 8, !noalias !29
  %1102 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1050, %"class.WTF::StringImpl"** %1102, align 8, !noalias !29
  %1103 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %7, i64 0, i32 0, i32 1
  %1104 = bitcast i8** %1103 to i64*
  store i64 %1072, i64* %1104, align 8, !noalias !29
  %1105 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1074, %"class.WTF::StringImpl"** %1105, align 8, !noalias !29
  %1106 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %26, i64 0, i32 0
  %1107 = bitcast %"class.WTF::StringAppend.1889"* %26 to i64*
  store i64 %1000, i64* %1107, align 8
  %1108 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1002, %"class.WTF::StringImpl"** %1108, align 8
  br i1 %1003, label %1128, label %1109

1109:                                             ; preds = %1093
  %1110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1002, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1111 = load atomic i32, i32* %1110 monotonic, align 4
  %1112 = and i32 %1111, 2
  %1113 = icmp eq i32 %1112, 0
  br i1 %1113, label %1114, label %1128

1114:                                             ; preds = %1109
  %1115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1002, i64 0, i32 0
  %1116 = load i32, i32* %1115, align 4
  %1117 = zext i32 %1116 to i33
  %1118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1117, i33 1) #8
  %1119 = extractvalue { i33, i1 } %1118, 1
  %1120 = extractvalue { i33, i1 } %1118, 0
  %1121 = icmp slt i33 %1120, 0
  %1122 = or i1 %1119, %1121
  br i1 %1122, label %1123, label %1124, !prof !4

1123:                                             ; preds = %1114
  call void @llvm.trap() #8
  unreachable

1124:                                             ; preds = %1114
  %1125 = trunc i33 %1120 to i32
  store i32 %1125, i32* %1115, align 4
  %1126 = load i64, i64* %1098, align 8
  %1127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1099, align 8
  br label %1128

1128:                                             ; preds = %1124, %1109, %1093
  %1129 = phi %"class.WTF::StringImpl"* [ %1127, %1124 ], [ %1026, %1109 ], [ %1026, %1093 ]
  %1130 = phi i64 [ %1126, %1124 ], [ %1024, %1109 ], [ %1024, %1093 ]
  %1131 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1132 = bitcast i8** %1131 to i64*
  store i64 %1130, i64* %1132, align 8
  %1133 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1129, %"class.WTF::StringImpl"** %1133, align 8
  %1134 = icmp eq %"class.WTF::StringImpl"* %1129, null
  br i1 %1134, label %1152, label %1135

1135:                                             ; preds = %1128
  %1136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1137 = load atomic i32, i32* %1136 monotonic, align 4
  %1138 = and i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1140, label %1152

1140:                                             ; preds = %1135
  %1141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1129, i64 0, i32 0
  %1142 = load i32, i32* %1141, align 4
  %1143 = zext i32 %1142 to i33
  %1144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1143, i33 1) #8
  %1145 = extractvalue { i33, i1 } %1144, 1
  %1146 = extractvalue { i33, i1 } %1144, 0
  %1147 = icmp slt i33 %1146, 0
  %1148 = or i1 %1145, %1147
  br i1 %1148, label %1149, label %1150, !prof !4

1149:                                             ; preds = %1140
  call void @llvm.trap() #8
  unreachable

1150:                                             ; preds = %1140
  %1151 = trunc i33 %1146 to i32
  store i32 %1151, i32* %1141, align 4
  br label %1152

1152:                                             ; preds = %1150, %1135, %1128
  %1153 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1154 = bitcast i8** %1100 to <2 x i64>*
  %1155 = load <2 x i64>, <2 x i64>* %1154, align 8
  %1156 = bitcast i8** %1153 to <2 x i64>*
  store <2 x i64> %1155, <2 x i64>* %1156, align 8
  %1157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1102, align 8
  %1158 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1157, %"class.WTF::StringImpl"** %1158, align 8
  %1159 = icmp eq %"class.WTF::StringImpl"* %1157, null
  br i1 %1159, label %1177, label %1160

1160:                                             ; preds = %1152
  %1161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1162 = load atomic i32, i32* %1161 monotonic, align 4
  %1163 = and i32 %1162, 2
  %1164 = icmp eq i32 %1163, 0
  br i1 %1164, label %1165, label %1177

1165:                                             ; preds = %1160
  %1166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1157, i64 0, i32 0
  %1167 = load i32, i32* %1166, align 4
  %1168 = zext i32 %1167 to i33
  %1169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1168, i33 1) #8
  %1170 = extractvalue { i33, i1 } %1169, 1
  %1171 = extractvalue { i33, i1 } %1169, 0
  %1172 = icmp slt i33 %1171, 0
  %1173 = or i1 %1170, %1172
  br i1 %1173, label %1174, label %1175, !prof !4

1174:                                             ; preds = %1165
  call void @llvm.trap() #8
  unreachable

1175:                                             ; preds = %1165
  %1176 = trunc i33 %1171 to i32
  store i32 %1176, i32* %1166, align 4
  br label %1177

1177:                                             ; preds = %1175, %1160, %1152
  %1178 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %26, i64 0, i32 0, i32 0, i32 1
  %1179 = load i64, i64* %1104, align 8
  %1180 = bitcast i8** %1178 to i64*
  store i64 %1179, i64* %1180, align 8
  %1181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1105, align 8
  %1182 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1181, %"class.WTF::StringImpl"** %1182, align 8
  %1183 = icmp eq %"class.WTF::StringImpl"* %1181, null
  br i1 %1183, label %1201, label %1184

1184:                                             ; preds = %1177
  %1185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1186 = load atomic i32, i32* %1185 monotonic, align 4
  %1187 = and i32 %1186, 2
  %1188 = icmp eq i32 %1187, 0
  br i1 %1188, label %1189, label %1201

1189:                                             ; preds = %1184
  %1190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1181, i64 0, i32 0
  %1191 = load i32, i32* %1190, align 4
  %1192 = zext i32 %1191 to i33
  %1193 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1192, i33 1) #8
  %1194 = extractvalue { i33, i1 } %1193, 1
  %1195 = extractvalue { i33, i1 } %1193, 0
  %1196 = icmp slt i33 %1195, 0
  %1197 = or i1 %1194, %1196
  br i1 %1197, label %1198, label %1199, !prof !4

1198:                                             ; preds = %1189
  call void @llvm.trap() #8
  unreachable

1199:                                             ; preds = %1189
  %1200 = trunc i33 %1195 to i32
  store i32 %1200, i32* %1190, align 4
  br label %1201

1201:                                             ; preds = %1177, %1184, %1199
  %1202 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i8** %1202, align 8, !alias.scope !29
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_ED2Ev(%"class.WTF::StringAppend.1890"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1094) #8, !noalias !29
  %1203 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_INS6_INS6_INS6_INS6_INS6_INS6_INS6_IPKcNS5_6StringEEES8_EES9_EES8_EES8_EES9_EES8_EES9_EES8_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %25, %"class.WTF::StringAppend.1889"* nonnull dereferenceable(80) %26) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %690, %"class.blink::DOMException"* %1203, i32 2) #8
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_ED2Ev(%"class.WTF::StringAppend.1890"* nonnull %1106) #8
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_ED2Ev(%"class.WTF::StringAppend.1890"* nonnull %27) #8
  %1204 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  %1205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1204, align 8
  %1206 = icmp eq %"class.WTF::StringImpl"* %1205, null
  br i1 %1206, label %1220, label %1207

1207:                                             ; preds = %1201
  %1208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1209 = load atomic i32, i32* %1208 monotonic, align 4
  %1210 = and i32 %1209, 2
  %1211 = icmp eq i32 %1210, 0
  %1212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1205, i64 0, i32 0
  %1213 = load i32, i32* %1212, align 4
  br i1 %1211, label %1214, label %1216

1214:                                             ; preds = %1207
  %1215 = add i32 %1213, -1
  store i32 %1215, i32* %1212, align 4
  br label %1216

1216:                                             ; preds = %1214, %1207
  %1217 = phi i32 [ %1215, %1214 ], [ %1213, %1207 ]
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1219, label %1220

1219:                                             ; preds = %1216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1205) #8
  br label %1220

1220:                                             ; preds = %1219, %1216, %1201
  %1221 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1221, align 8
  %1223 = icmp eq %"class.WTF::StringImpl"* %1222, null
  br i1 %1223, label %1237, label %1224

1224:                                             ; preds = %1220
  %1225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1226 = load atomic i32, i32* %1225 monotonic, align 4
  %1227 = and i32 %1226, 2
  %1228 = icmp eq i32 %1227, 0
  %1229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1222, i64 0, i32 0
  %1230 = load i32, i32* %1229, align 4
  br i1 %1228, label %1231, label %1233

1231:                                             ; preds = %1224
  %1232 = add i32 %1230, -1
  store i32 %1232, i32* %1229, align 4
  br label %1233

1233:                                             ; preds = %1231, %1224
  %1234 = phi i32 [ %1232, %1231 ], [ %1230, %1224 ]
  %1235 = icmp eq i32 %1234, 0
  br i1 %1235, label %1236, label %1237

1236:                                             ; preds = %1233
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1222) #8
  br label %1237

1237:                                             ; preds = %1236, %1233, %1220
  %1238 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1238, align 8
  %1240 = icmp eq %"class.WTF::StringImpl"* %1239, null
  br i1 %1240, label %1254, label %1241

1241:                                             ; preds = %1237
  %1242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1243 = load atomic i32, i32* %1242 monotonic, align 4
  %1244 = and i32 %1243, 2
  %1245 = icmp eq i32 %1244, 0
  %1246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1239, i64 0, i32 0
  %1247 = load i32, i32* %1246, align 4
  br i1 %1245, label %1248, label %1250

1248:                                             ; preds = %1241
  %1249 = add i32 %1247, -1
  store i32 %1249, i32* %1246, align 4
  br label %1250

1250:                                             ; preds = %1248, %1241
  %1251 = phi i32 [ %1249, %1248 ], [ %1247, %1241 ]
  %1252 = icmp eq i32 %1251, 0
  br i1 %1252, label %1253, label %1254

1253:                                             ; preds = %1250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1239) #8
  br label %1254

1254:                                             ; preds = %1237, %1250, %1253
  %1255 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %29, i64 0, i32 1, i32 0, i32 0
  %1256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1255, align 8
  %1257 = icmp eq %"class.WTF::StringImpl"* %1256, null
  br i1 %1257, label %1271, label %1258

1258:                                             ; preds = %1254
  %1259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1260 = load atomic i32, i32* %1259 monotonic, align 4
  %1261 = and i32 %1260, 2
  %1262 = icmp eq i32 %1261, 0
  %1263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1256, i64 0, i32 0
  %1264 = load i32, i32* %1263, align 4
  br i1 %1262, label %1265, label %1267

1265:                                             ; preds = %1258
  %1266 = add i32 %1264, -1
  store i32 %1266, i32* %1263, align 4
  br label %1267

1267:                                             ; preds = %1265, %1258
  %1268 = phi i32 [ %1266, %1265 ], [ %1264, %1258 ]
  %1269 = icmp eq i32 %1268, 0
  br i1 %1269, label %1270, label %1271

1270:                                             ; preds = %1267
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1256) #8
  br label %1271

1271:                                             ; preds = %1270, %1267, %1254
  %1272 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1272, align 8
  %1274 = icmp eq %"class.WTF::StringImpl"* %1273, null
  br i1 %1274, label %1288, label %1275

1275:                                             ; preds = %1271
  %1276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1277 = load atomic i32, i32* %1276 monotonic, align 4
  %1278 = and i32 %1277, 2
  %1279 = icmp eq i32 %1278, 0
  %1280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1273, i64 0, i32 0
  %1281 = load i32, i32* %1280, align 4
  br i1 %1279, label %1282, label %1284

1282:                                             ; preds = %1275
  %1283 = add i32 %1281, -1
  store i32 %1283, i32* %1280, align 4
  br label %1284

1284:                                             ; preds = %1282, %1275
  %1285 = phi i32 [ %1283, %1282 ], [ %1281, %1275 ]
  %1286 = icmp eq i32 %1285, 0
  br i1 %1286, label %1287, label %1288

1287:                                             ; preds = %1284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1273) #8
  br label %1288

1288:                                             ; preds = %1287, %1284, %1271
  %1289 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1289, align 8
  %1291 = icmp eq %"class.WTF::StringImpl"* %1290, null
  br i1 %1291, label %1305, label %1292

1292:                                             ; preds = %1288
  %1293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1294 = load atomic i32, i32* %1293 monotonic, align 4
  %1295 = and i32 %1294, 2
  %1296 = icmp eq i32 %1295, 0
  %1297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1290, i64 0, i32 0
  %1298 = load i32, i32* %1297, align 4
  br i1 %1296, label %1299, label %1301

1299:                                             ; preds = %1292
  %1300 = add i32 %1298, -1
  store i32 %1300, i32* %1297, align 4
  br label %1301

1301:                                             ; preds = %1299, %1292
  %1302 = phi i32 [ %1300, %1299 ], [ %1298, %1292 ]
  %1303 = icmp eq i32 %1302, 0
  br i1 %1303, label %1304, label %1305

1304:                                             ; preds = %1301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1290) #8
  br label %1305

1305:                                             ; preds = %1288, %1301, %1304
  %1306 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1306, align 8
  %1308 = icmp eq %"class.WTF::StringImpl"* %1307, null
  br i1 %1308, label %1322, label %1309

1309:                                             ; preds = %1305
  %1310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1311 = load atomic i32, i32* %1310 monotonic, align 4
  %1312 = and i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  %1314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1307, i64 0, i32 0
  %1315 = load i32, i32* %1314, align 4
  br i1 %1313, label %1316, label %1318

1316:                                             ; preds = %1309
  %1317 = add i32 %1315, -1
  store i32 %1317, i32* %1314, align 4
  br label %1318

1318:                                             ; preds = %1316, %1309
  %1319 = phi i32 [ %1317, %1316 ], [ %1315, %1309 ]
  %1320 = icmp eq i32 %1319, 0
  br i1 %1320, label %1321, label %1322

1321:                                             ; preds = %1318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1307) #8
  br label %1322

1322:                                             ; preds = %1321, %1318, %1305
  %1323 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1324 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1323, align 8
  %1325 = icmp eq %"class.WTF::StringImpl"* %1324, null
  br i1 %1325, label %1339, label %1326

1326:                                             ; preds = %1322
  %1327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1324, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1328 = load atomic i32, i32* %1327 monotonic, align 4
  %1329 = and i32 %1328, 2
  %1330 = icmp eq i32 %1329, 0
  %1331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1324, i64 0, i32 0
  %1332 = load i32, i32* %1331, align 4
  br i1 %1330, label %1333, label %1335

1333:                                             ; preds = %1326
  %1334 = add i32 %1332, -1
  store i32 %1334, i32* %1331, align 4
  br label %1335

1335:                                             ; preds = %1333, %1326
  %1336 = phi i32 [ %1334, %1333 ], [ %1332, %1326 ]
  %1337 = icmp eq i32 %1336, 0
  br i1 %1337, label %1338, label %1339

1338:                                             ; preds = %1335
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1324) #8
  br label %1339

1339:                                             ; preds = %1322, %1335, %1338
  %1340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %925, align 8
  %1341 = icmp eq %"class.WTF::StringImpl"* %1340, null
  br i1 %1341, label %1355, label %1342

1342:                                             ; preds = %1339
  %1343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1344 = load atomic i32, i32* %1343 monotonic, align 4
  %1345 = and i32 %1344, 2
  %1346 = icmp eq i32 %1345, 0
  %1347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1340, i64 0, i32 0
  %1348 = load i32, i32* %1347, align 4
  br i1 %1346, label %1349, label %1351

1349:                                             ; preds = %1342
  %1350 = add i32 %1348, -1
  store i32 %1350, i32* %1347, align 4
  br label %1351

1351:                                             ; preds = %1349, %1342
  %1352 = phi i32 [ %1350, %1349 ], [ %1348, %1342 ]
  %1353 = icmp eq i32 %1352, 0
  br i1 %1353, label %1354, label %1355

1354:                                             ; preds = %1351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1340) #8
  br label %1355

1355:                                             ; preds = %1354, %1351, %1339
  %1356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %898, align 8
  %1357 = icmp eq %"class.WTF::StringImpl"* %1356, null
  br i1 %1357, label %1371, label %1358

1358:                                             ; preds = %1355
  %1359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1360 = load atomic i32, i32* %1359 monotonic, align 4
  %1361 = and i32 %1360, 2
  %1362 = icmp eq i32 %1361, 0
  %1363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1356, i64 0, i32 0
  %1364 = load i32, i32* %1363, align 4
  br i1 %1362, label %1365, label %1367

1365:                                             ; preds = %1358
  %1366 = add i32 %1364, -1
  store i32 %1366, i32* %1363, align 4
  br label %1367

1367:                                             ; preds = %1365, %1358
  %1368 = phi i32 [ %1366, %1365 ], [ %1364, %1358 ]
  %1369 = icmp eq i32 %1368, 0
  br i1 %1369, label %1370, label %1371

1370:                                             ; preds = %1367
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1356) #8
  br label %1371

1371:                                             ; preds = %1355, %1367, %1370
  %1372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %872, align 8
  %1373 = icmp eq %"class.WTF::StringImpl"* %1372, null
  br i1 %1373, label %1387, label %1374

1374:                                             ; preds = %1371
  %1375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1372, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1376 = load atomic i32, i32* %1375 monotonic, align 4
  %1377 = and i32 %1376, 2
  %1378 = icmp eq i32 %1377, 0
  %1379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1372, i64 0, i32 0
  %1380 = load i32, i32* %1379, align 4
  br i1 %1378, label %1381, label %1383

1381:                                             ; preds = %1374
  %1382 = add i32 %1380, -1
  store i32 %1382, i32* %1379, align 4
  br label %1383

1383:                                             ; preds = %1381, %1374
  %1384 = phi i32 [ %1382, %1381 ], [ %1380, %1374 ]
  %1385 = icmp eq i32 %1384, 0
  br i1 %1385, label %1386, label %1387

1386:                                             ; preds = %1383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1372) #8
  br label %1387

1387:                                             ; preds = %1386, %1383, %1371
  %1388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %845, align 8
  %1389 = icmp eq %"class.WTF::StringImpl"* %1388, null
  br i1 %1389, label %1403, label %1390

1390:                                             ; preds = %1387
  %1391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1392 = load atomic i32, i32* %1391 monotonic, align 4
  %1393 = and i32 %1392, 2
  %1394 = icmp eq i32 %1393, 0
  %1395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1388, i64 0, i32 0
  %1396 = load i32, i32* %1395, align 4
  br i1 %1394, label %1397, label %1399

1397:                                             ; preds = %1390
  %1398 = add i32 %1396, -1
  store i32 %1398, i32* %1395, align 4
  br label %1399

1399:                                             ; preds = %1397, %1390
  %1400 = phi i32 [ %1398, %1397 ], [ %1396, %1390 ]
  %1401 = icmp eq i32 %1400, 0
  br i1 %1401, label %1402, label %1403

1402:                                             ; preds = %1399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1388) #8
  br label %1403

1403:                                             ; preds = %1387, %1399, %1402
  %1404 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %33, i64 0, i32 0, i32 1, i32 0, i32 0
  %1405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1404, align 8
  %1406 = icmp eq %"class.WTF::StringImpl"* %1405, null
  br i1 %1406, label %1420, label %1407

1407:                                             ; preds = %1403
  %1408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1409 = load atomic i32, i32* %1408 monotonic, align 4
  %1410 = and i32 %1409, 2
  %1411 = icmp eq i32 %1410, 0
  %1412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1405, i64 0, i32 0
  %1413 = load i32, i32* %1412, align 4
  br i1 %1411, label %1414, label %1416

1414:                                             ; preds = %1407
  %1415 = add i32 %1413, -1
  store i32 %1415, i32* %1412, align 4
  br label %1416

1416:                                             ; preds = %1414, %1407
  %1417 = phi i32 [ %1415, %1414 ], [ %1413, %1407 ]
  %1418 = icmp eq i32 %1417, 0
  br i1 %1418, label %1419, label %1420

1419:                                             ; preds = %1416
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1405) #8
  br label %1420

1420:                                             ; preds = %1403, %1416, %1419
  br i1 %701, label %1446, label %1421

1421:                                             ; preds = %1420
  %1422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %700, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1423 = load atomic i32, i32* %1422 monotonic, align 4
  %1424 = and i32 %1423, 2
  %1425 = icmp eq i32 %1424, 0
  %1426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %700, i64 0, i32 0
  %1427 = load i32, i32* %1426, align 4
  br i1 %1425, label %1428, label %1430

1428:                                             ; preds = %1421
  %1429 = add i32 %1427, -1
  store i32 %1429, i32* %1426, align 4
  br label %1430

1430:                                             ; preds = %1428, %1421
  %1431 = phi i32 [ %1429, %1428 ], [ %1427, %1421 ]
  %1432 = icmp eq i32 %1431, 0
  br i1 %1432, label %1433, label %1435

1433:                                             ; preds = %1430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %700) #8
  %1434 = load i32, i32* %1426, align 4
  br label %1435

1435:                                             ; preds = %1430, %1433
  %1436 = phi i32 [ %1431, %1430 ], [ %1434, %1433 ]
  %1437 = load atomic i32, i32* %1422 monotonic, align 4
  %1438 = and i32 %1437, 2
  %1439 = icmp eq i32 %1438, 0
  br i1 %1439, label %1440, label %1442

1440:                                             ; preds = %1435
  %1441 = add i32 %1436, -1
  store i32 %1441, i32* %1426, align 4
  br label %1442

1442:                                             ; preds = %1440, %1435
  %1443 = phi i32 [ %1441, %1440 ], [ %1436, %1435 ]
  %1444 = icmp eq i32 %1443, 0
  br i1 %1444, label %1445, label %1446

1445:                                             ; preds = %1442
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %700) #8
  br label %1446

1446:                                             ; preds = %1420, %1442, %1445
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %699) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %698) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %697) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %696) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %695) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %694) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %693) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %692) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %691) #8
  br label %1830

1447:                                             ; preds = %629
  %1448 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1448) #8
  %1449 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %34, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %1449, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %34, %"class.blink::BaseAudioContext"* %50) #8
  %1450 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 1, i32 0
  %1451 = getelementptr inbounds %"class.WTF::HashMap.386", %"class.WTF::HashMap.386"* %1450, i64 0, i32 0, i32 0
  %1452 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %1451, align 8
  %1453 = icmp eq %"struct.WTF::KeyValuePair.389"* %1452, null
  br i1 %1453, label %1825, label %1454

1454:                                             ; preds = %1447
  %1455 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %1456 = load i32, i32* %1455, align 8
  %1457 = add i32 %1456, -1
  %1458 = zext i32 %1457 to i64
  %1459 = load i64, i64* %24, align 8
  %1460 = shl i64 %1459, 32
  %1461 = xor i64 %1460, -1
  %1462 = add i64 %1459, %1461
  %1463 = lshr i64 %1462, 22
  %1464 = xor i64 %1463, %1462
  %1465 = shl i64 %1464, 13
  %1466 = xor i64 %1465, -1
  %1467 = add i64 %1464, %1466
  %1468 = lshr i64 %1467, 8
  %1469 = xor i64 %1468, %1467
  %1470 = mul i64 %1469, 9
  %1471 = lshr i64 %1470, 15
  %1472 = xor i64 %1471, %1470
  %1473 = shl i64 %1472, 27
  %1474 = xor i64 %1473, -1
  %1475 = add i64 %1472, %1474
  %1476 = lshr i64 %1475, 31
  %1477 = xor i64 %1476, %1475
  %1478 = trunc i64 %1477 to i32
  %1479 = and i32 %1457, %1478
  %1480 = zext i32 %1479 to i64
  %1481 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %1452, i64 %1480
  %1482 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %1481, i64 0, i32 0
  %1483 = load i64, i64* %1482, align 8
  %1484 = icmp eq i64 %1483, %1459
  br i1 %1484, label %1513, label %1485

1485:                                             ; preds = %1454
  %1486 = xor i32 %1478, -1
  %1487 = lshr i32 %1478, 23
  %1488 = add i32 %1487, %1486
  %1489 = shl i32 %1488, 12
  %1490 = xor i32 %1489, %1488
  %1491 = lshr i32 %1490, 7
  %1492 = xor i32 %1491, %1490
  %1493 = shl i32 %1492, 2
  %1494 = xor i32 %1493, %1492
  %1495 = lshr i32 %1494, 20
  %1496 = xor i32 %1495, %1494
  %1497 = or i32 %1496, 1
  %1498 = zext i32 %1497 to i64
  br label %1499

1499:                                             ; preds = %1504, %1485
  %1500 = phi i64 [ %1483, %1485 ], [ %1511, %1504 ]
  %1501 = phi i64 [ %1480, %1485 ], [ %1508, %1504 ]
  %1502 = phi i64 [ 0, %1485 ], [ %1506, %1504 ]
  %1503 = icmp eq i64 %1500, -1
  br i1 %1503, label %1825, label %1504

1504:                                             ; preds = %1499
  %1505 = icmp eq i64 %1502, 0
  %1506 = select i1 %1505, i64 %1498, i64 %1502
  %1507 = add i64 %1506, %1501
  %1508 = and i64 %1507, %1458
  %1509 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %1452, i64 %1508
  %1510 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %1509, i64 0, i32 0
  %1511 = load i64, i64* %1510, align 8
  %1512 = icmp eq i64 %1511, %1459
  br i1 %1512, label %1513, label %1499

1513:                                             ; preds = %1504, %1454
  %1514 = phi %"struct.WTF::KeyValuePair.389"* [ %1481, %1454 ], [ %1509, %1504 ]
  %1515 = icmp eq %"struct.WTF::KeyValuePair.389"* %1514, null
  br i1 %1515, label %1825, label %1516

1516:                                             ; preds = %1513
  %1517 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %14, align 8
  %1518 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1518) #8
  store i32 11, i32* %35, align 4
  %1519 = bitcast %"class.WTF::StringAppend.1886"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1519) #8
  %1520 = bitcast %"class.WTF::StringAppend.1887"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1520) #8
  %1521 = bitcast %"class.WTF::StringAppend.1888"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1521) #8
  %1522 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1522) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1522, i8 -86, i64 40, i1 false) #8
  %1523 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %6, i64 0, i32 0, i64 24
  %1524 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %6, i64 0, i32 1
  %1525 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %6, i64 0, i32 0, i64 23
  store i8* %1525, i8** %1524, align 8
  %1526 = urem i64 %1459, 10
  %1527 = udiv i64 %1459, 10
  %1528 = trunc i64 %1526 to i8
  %1529 = or i8 %1528, 48
  store i8 %1529, i8* %1525, align 1
  %1530 = icmp ugt i64 %1459, 9
  br i1 %1530, label %1531, label %1546

1531:                                             ; preds = %1516
  %1532 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %6, i64 0, i32 0, i64 22
  store i8* %1532, i8** %1524, align 8
  %1533 = urem i64 %1527, 10
  %1534 = trunc i64 %1533 to i8
  %1535 = or i8 %1534, 48
  store i8 %1535, i8* %1532, align 2
  %1536 = icmp ugt i64 %1459, 99
  br i1 %1536, label %1537, label %1544

1537:                                             ; preds = %1531
  %1538 = udiv i64 %1459, 100
  %1539 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %6, i64 0, i32 0, i64 21
  store i8* %1539, i8** %1524, align 8
  %1540 = urem i64 %1538, 10
  %1541 = trunc i64 %1540 to i8
  %1542 = or i8 %1541, 48
  store i8 %1542, i8* %1539, align 1
  %1543 = icmp ugt i64 %1459, 999
  br i1 %1543, label %1548, label %1557

1544:                                             ; preds = %1531
  %1545 = ptrtoint i8* %1532 to i64
  br label %1560

1546:                                             ; preds = %1516
  %1547 = ptrtoint i8* %1525 to i64
  br label %1560

1548:                                             ; preds = %1537, %1548
  %1549 = phi i64 [ %1551, %1548 ], [ %1538, %1537 ]
  %1550 = load i8*, i8** %1524, align 8
  %1551 = udiv i64 %1549, 10
  %1552 = getelementptr inbounds i8, i8* %1550, i64 -1
  store i8* %1552, i8** %1524, align 8
  %1553 = urem i64 %1551, 10
  %1554 = trunc i64 %1553 to i8
  %1555 = or i8 %1554, 48
  store i8 %1555, i8* %1552, align 1
  %1556 = icmp ugt i64 %1549, 99
  br i1 %1556, label %1548, label %1557

1557:                                             ; preds = %1548, %1537
  %1558 = bitcast i8** %1524 to i64*
  %1559 = load i64, i64* %1558, align 8
  br label %1560

1560:                                             ; preds = %1557, %1544, %1546
  %1561 = phi i64 [ %1547, %1546 ], [ %1559, %1557 ], [ %1545, %1544 ]
  %1562 = ptrtoint i8* %1523 to i64
  %1563 = sub i64 %1562, %1561
  %1564 = trunc i64 %1563 to i32
  %1565 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.2047", %"class.WTF::IntegerToStringConverter.2047"* %6, i64 0, i32 2
  store i32 %1564, i32* %1565, align 8
  %1566 = inttoptr i64 %1561 to i8*
  %1567 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %1566, i32 %1564) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1522) #8
  %1568 = icmp eq %"class.WTF::StringImpl"* %1567, null
  br i1 %1568, label %1644, label %1569

1569:                                             ; preds = %1560
  %1570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1567, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1571 = load atomic i32, i32* %1570 monotonic, align 4
  %1572 = and i32 %1571, 2
  %1573 = icmp eq i32 %1572, 0
  %1574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1567, i64 0, i32 0
  %1575 = load i32, i32* %1574, align 4
  br i1 %1573, label %1576, label %1586

1576:                                             ; preds = %1569
  %1577 = zext i32 %1575 to i33
  %1578 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1577, i33 1) #8
  %1579 = extractvalue { i33, i1 } %1578, 1
  %1580 = extractvalue { i33, i1 } %1578, 0
  %1581 = icmp slt i33 %1580, 0
  %1582 = or i1 %1579, %1581
  br i1 %1582, label %1583, label %1584, !prof !4

1583:                                             ; preds = %1576
  call void @llvm.trap() #8
  unreachable

1584:                                             ; preds = %1576
  %1585 = trunc i33 %1580 to i32
  store i32 %1585, i32* %1574, align 4
  br label %1586

1586:                                             ; preds = %1584, %1569
  %1587 = phi i32 [ %1585, %1584 ], [ %1575, %1569 ]
  %1588 = load atomic i32, i32* %1570 monotonic, align 4
  %1589 = and i32 %1588, 2
  %1590 = icmp eq i32 %1589, 0
  br i1 %1590, label %1591, label %1601

1591:                                             ; preds = %1586
  %1592 = zext i32 %1587 to i33
  %1593 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1592, i33 1) #8
  %1594 = extractvalue { i33, i1 } %1593, 1
  %1595 = extractvalue { i33, i1 } %1593, 0
  %1596 = icmp slt i33 %1595, 0
  %1597 = or i1 %1594, %1596
  br i1 %1597, label %1598, label %1599, !prof !4

1598:                                             ; preds = %1591
  call void @llvm.trap() #8
  unreachable

1599:                                             ; preds = %1591
  %1600 = trunc i33 %1595 to i32
  store i32 %1600, i32* %1574, align 4
  br label %1601

1601:                                             ; preds = %1599, %1586
  %1602 = phi i32 [ %1600, %1599 ], [ %1587, %1586 ]
  %1603 = load atomic i32, i32* %1570 monotonic, align 4
  %1604 = and i32 %1603, 2
  %1605 = icmp eq i32 %1604, 0
  br i1 %1605, label %1606, label %1608

1606:                                             ; preds = %1601
  %1607 = add i32 %1602, -1
  store i32 %1607, i32* %1574, align 4
  br label %1608

1608:                                             ; preds = %1606, %1601
  %1609 = phi i32 [ %1607, %1606 ], [ %1602, %1601 ]
  %1610 = icmp eq i32 %1609, 0
  br i1 %1610, label %1611, label %1612

1611:                                             ; preds = %1608
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1567) #8
  br label %1612

1612:                                             ; preds = %1608, %1611
  %1613 = load atomic i32, i32* %1570 monotonic, align 4, !noalias !32
  %1614 = and i32 %1613, 2
  %1615 = icmp eq i32 %1614, 0
  %1616 = load i32, i32* %1574, align 4
  br i1 %1615, label %1617, label %1627

1617:                                             ; preds = %1612
  %1618 = zext i32 %1616 to i33
  %1619 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1618, i33 1) #8
  %1620 = extractvalue { i33, i1 } %1619, 1
  %1621 = extractvalue { i33, i1 } %1619, 0
  %1622 = icmp slt i33 %1621, 0
  %1623 = or i1 %1620, %1622
  br i1 %1623, label %1624, label %1625, !prof !4

1624:                                             ; preds = %1617
  call void @llvm.trap() #8, !noalias !32
  unreachable

1625:                                             ; preds = %1617
  %1626 = trunc i33 %1621 to i32
  store i32 %1626, i32* %1574, align 4, !noalias !32
  br label %1627

1627:                                             ; preds = %1612, %1625
  %1628 = phi i32 [ %1626, %1625 ], [ %1616, %1612 ]
  %1629 = bitcast %"class.WTF::StringAppend.1888"* %38 to i64*
  store i64 ptrtoint ([48 x i8]* @.str.23 to i64), i64* %1629, align 8, !alias.scope !32
  %1630 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1567, %"class.WTF::StringImpl"** %1630, align 8, !alias.scope !32
  %1631 = load atomic i32, i32* %1570 monotonic, align 4, !noalias !32
  %1632 = and i32 %1631, 2
  %1633 = icmp eq i32 %1632, 0
  br i1 %1633, label %1634, label %1648

1634:                                             ; preds = %1627
  %1635 = zext i32 %1628 to i33
  %1636 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1635, i33 1) #8
  %1637 = extractvalue { i33, i1 } %1636, 1
  %1638 = extractvalue { i33, i1 } %1636, 0
  %1639 = icmp slt i33 %1638, 0
  %1640 = or i1 %1637, %1639
  br i1 %1640, label %1641, label %1642, !prof !4

1641:                                             ; preds = %1634
  call void @llvm.trap() #8, !noalias !32
  unreachable

1642:                                             ; preds = %1634
  %1643 = trunc i33 %1638 to i32
  store i32 %1643, i32* %1574, align 4, !noalias !32
  br label %1648

1644:                                             ; preds = %1560
  %1645 = bitcast %"class.WTF::StringAppend.1888"* %38 to i64*
  store i64 ptrtoint ([48 x i8]* @.str.23 to i64), i64* %1645, align 8, !alias.scope !32
  %1646 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1646, align 8, !alias.scope !32
  %1647 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8** %1647, align 8, !alias.scope !32
  br label %1660

1648:                                             ; preds = %1642, %1627
  %1649 = phi i32 [ %1643, %1642 ], [ %1628, %1627 ]
  %1650 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %38, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8** %1650, align 8, !alias.scope !32
  %1651 = load atomic i32, i32* %1570 monotonic, align 4, !noalias !32
  %1652 = and i32 %1651, 2
  %1653 = icmp eq i32 %1652, 0
  br i1 %1653, label %1654, label %1656

1654:                                             ; preds = %1648
  %1655 = add i32 %1649, -1
  store i32 %1655, i32* %1574, align 4, !noalias !32
  br label %1656

1656:                                             ; preds = %1654, %1648
  %1657 = phi i32 [ %1655, %1654 ], [ %1649, %1648 ]
  %1658 = icmp eq i32 %1657, 0
  br i1 %1658, label %1659, label %1660

1659:                                             ; preds = %1656
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1567) #8, !noalias !32
  br label %1660

1660:                                             ; preds = %1644, %1656, %1659
  %1661 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %3, i32 6) #8
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1887"* nonnull sret %37, %"class.WTF::StringAppend.1888"* nonnull dereferenceable(24) %38, %"class.WTF::StringImpl"* %1661)
  %1662 = bitcast %"class.WTF::StringAppend.1887"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1662)
  %1663 = bitcast %"class.WTF::StringAppend.1887"* %37 to i64*
  %1664 = load i64, i64* %1663, align 8, !noalias !35
  %1665 = bitcast %"class.WTF::StringAppend.1887"* %5 to i64*
  store i64 %1664, i64* %1665, align 8, !noalias !35
  %1666 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %37, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1667 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1666, align 8, !noalias !35
  %1668 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1667, %"class.WTF::StringImpl"** %1668, align 8, !noalias !35
  %1669 = icmp eq %"class.WTF::StringImpl"* %1667, null
  br i1 %1669, label %1687, label %1670

1670:                                             ; preds = %1660
  %1671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1667, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1672 = load atomic i32, i32* %1671 monotonic, align 4
  %1673 = and i32 %1672, 2
  %1674 = icmp eq i32 %1673, 0
  br i1 %1674, label %1675, label %1687

1675:                                             ; preds = %1670
  %1676 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1667, i64 0, i32 0
  %1677 = load i32, i32* %1676, align 4
  %1678 = zext i32 %1677 to i33
  %1679 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1678, i33 1) #8
  %1680 = extractvalue { i33, i1 } %1679, 1
  %1681 = extractvalue { i33, i1 } %1679, 0
  %1682 = icmp slt i33 %1681, 0
  %1683 = or i1 %1680, %1682
  br i1 %1683, label %1684, label %1685, !prof !4

1684:                                             ; preds = %1675
  call void @llvm.trap() #8
  unreachable

1685:                                             ; preds = %1675
  %1686 = trunc i33 %1681 to i32
  store i32 %1686, i32* %1676, align 4
  br label %1687

1687:                                             ; preds = %1685, %1670, %1660
  %1688 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %5, i64 0, i32 0, i32 1
  %1689 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %37, i64 0, i32 0, i32 1
  %1690 = bitcast i8** %1689 to i64*
  %1691 = load i64, i64* %1690, align 8, !noalias !35
  %1692 = bitcast i8** %1688 to i64*
  store i64 %1691, i64* %1692, align 8, !noalias !35
  %1693 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %37, i64 0, i32 1, i32 0, i32 0
  %1694 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1693, align 8, !noalias !35
  %1695 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1694, %"class.WTF::StringImpl"** %1695, align 8, !noalias !35
  %1696 = icmp eq %"class.WTF::StringImpl"* %1694, null
  br i1 %1696, label %1714, label %1697

1697:                                             ; preds = %1687
  %1698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1694, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1699 = load atomic i32, i32* %1698 monotonic, align 4
  %1700 = and i32 %1699, 2
  %1701 = icmp eq i32 %1700, 0
  br i1 %1701, label %1702, label %1714

1702:                                             ; preds = %1697
  %1703 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1694, i64 0, i32 0
  %1704 = load i32, i32* %1703, align 4
  %1705 = zext i32 %1704 to i33
  %1706 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1705, i33 1) #8
  %1707 = extractvalue { i33, i1 } %1706, 1
  %1708 = extractvalue { i33, i1 } %1706, 0
  %1709 = icmp slt i33 %1708, 0
  %1710 = or i1 %1707, %1709
  br i1 %1710, label %1711, label %1712, !prof !4

1711:                                             ; preds = %1702
  call void @llvm.trap() #8
  unreachable

1712:                                             ; preds = %1702
  %1713 = trunc i33 %1708 to i32
  store i32 %1713, i32* %1703, align 4
  br label %1714

1714:                                             ; preds = %1687, %1697, %1712
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1886"* nonnull %36, %"class.WTF::StringAppend.1887"* nonnull byval(%"class.WTF::StringAppend.1887") align 8 %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1662)
  %1715 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_INS6_INS6_IPKcNS5_6StringEEES8_EES9_EES8_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %35, %"class.WTF::StringAppend.1886"* nonnull dereferenceable(40) %36) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %1517, %"class.blink::DOMException"* %1715, i32 2) #8
  %1716 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %36, i64 0, i32 0, i32 1, i32 0, i32 0
  %1717 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1716, align 8
  %1718 = icmp eq %"class.WTF::StringImpl"* %1717, null
  br i1 %1718, label %1732, label %1719

1719:                                             ; preds = %1714
  %1720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1717, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1721 = load atomic i32, i32* %1720 monotonic, align 4
  %1722 = and i32 %1721, 2
  %1723 = icmp eq i32 %1722, 0
  %1724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1717, i64 0, i32 0
  %1725 = load i32, i32* %1724, align 4
  br i1 %1723, label %1726, label %1728

1726:                                             ; preds = %1719
  %1727 = add i32 %1725, -1
  store i32 %1727, i32* %1724, align 4
  br label %1728

1728:                                             ; preds = %1726, %1719
  %1729 = phi i32 [ %1727, %1726 ], [ %1725, %1719 ]
  %1730 = icmp eq i32 %1729, 0
  br i1 %1730, label %1731, label %1732

1731:                                             ; preds = %1728
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1717) #8
  br label %1732

1732:                                             ; preds = %1731, %1728, %1714
  %1733 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1734 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1733, align 8
  %1735 = icmp eq %"class.WTF::StringImpl"* %1734, null
  br i1 %1735, label %1749, label %1736

1736:                                             ; preds = %1732
  %1737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1734, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1738 = load atomic i32, i32* %1737 monotonic, align 4
  %1739 = and i32 %1738, 2
  %1740 = icmp eq i32 %1739, 0
  %1741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1734, i64 0, i32 0
  %1742 = load i32, i32* %1741, align 4
  br i1 %1740, label %1743, label %1745

1743:                                             ; preds = %1736
  %1744 = add i32 %1742, -1
  store i32 %1744, i32* %1741, align 4
  br label %1745

1745:                                             ; preds = %1743, %1736
  %1746 = phi i32 [ %1744, %1743 ], [ %1742, %1736 ]
  %1747 = icmp eq i32 %1746, 0
  br i1 %1747, label %1748, label %1749

1748:                                             ; preds = %1745
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1734) #8
  br label %1749

1749:                                             ; preds = %1732, %1745, %1748
  %1750 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1693, align 8
  %1751 = icmp eq %"class.WTF::StringImpl"* %1750, null
  br i1 %1751, label %1765, label %1752

1752:                                             ; preds = %1749
  %1753 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1754 = load atomic i32, i32* %1753 monotonic, align 4
  %1755 = and i32 %1754, 2
  %1756 = icmp eq i32 %1755, 0
  %1757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 0
  %1758 = load i32, i32* %1757, align 4
  br i1 %1756, label %1759, label %1761

1759:                                             ; preds = %1752
  %1760 = add i32 %1758, -1
  store i32 %1760, i32* %1757, align 4
  br label %1761

1761:                                             ; preds = %1759, %1752
  %1762 = phi i32 [ %1760, %1759 ], [ %1758, %1752 ]
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1764, label %1765

1764:                                             ; preds = %1761
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1750) #8
  br label %1765

1765:                                             ; preds = %1764, %1761, %1749
  %1766 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1666, align 8
  %1767 = icmp eq %"class.WTF::StringImpl"* %1766, null
  br i1 %1767, label %1781, label %1768

1768:                                             ; preds = %1765
  %1769 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1766, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1770 = load atomic i32, i32* %1769 monotonic, align 4
  %1771 = and i32 %1770, 2
  %1772 = icmp eq i32 %1771, 0
  %1773 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1766, i64 0, i32 0
  %1774 = load i32, i32* %1773, align 4
  br i1 %1772, label %1775, label %1777

1775:                                             ; preds = %1768
  %1776 = add i32 %1774, -1
  store i32 %1776, i32* %1773, align 4
  br label %1777

1777:                                             ; preds = %1775, %1768
  %1778 = phi i32 [ %1776, %1775 ], [ %1774, %1768 ]
  %1779 = icmp eq i32 %1778, 0
  br i1 %1779, label %1780, label %1781

1780:                                             ; preds = %1777
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1766) #8
  br label %1781

1781:                                             ; preds = %1765, %1777, %1780
  %1782 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  %1783 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1782, align 8
  %1784 = icmp eq %"class.WTF::StringImpl"* %1783, null
  br i1 %1784, label %1798, label %1785

1785:                                             ; preds = %1781
  %1786 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1783, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1787 = load atomic i32, i32* %1786 monotonic, align 4
  %1788 = and i32 %1787, 2
  %1789 = icmp eq i32 %1788, 0
  %1790 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1783, i64 0, i32 0
  %1791 = load i32, i32* %1790, align 4
  br i1 %1789, label %1792, label %1794

1792:                                             ; preds = %1785
  %1793 = add i32 %1791, -1
  store i32 %1793, i32* %1790, align 4
  br label %1794

1794:                                             ; preds = %1792, %1785
  %1795 = phi i32 [ %1793, %1792 ], [ %1791, %1785 ]
  %1796 = icmp eq i32 %1795, 0
  br i1 %1796, label %1797, label %1798

1797:                                             ; preds = %1794
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1783) #8
  br label %1798

1798:                                             ; preds = %1781, %1794, %1797
  br i1 %1568, label %1824, label %1799

1799:                                             ; preds = %1798
  %1800 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1567, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1801 = load atomic i32, i32* %1800 monotonic, align 4
  %1802 = and i32 %1801, 2
  %1803 = icmp eq i32 %1802, 0
  %1804 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1567, i64 0, i32 0
  %1805 = load i32, i32* %1804, align 4
  br i1 %1803, label %1806, label %1808

1806:                                             ; preds = %1799
  %1807 = add i32 %1805, -1
  store i32 %1807, i32* %1804, align 4
  br label %1808

1808:                                             ; preds = %1806, %1799
  %1809 = phi i32 [ %1807, %1806 ], [ %1805, %1799 ]
  %1810 = icmp eq i32 %1809, 0
  br i1 %1810, label %1811, label %1813

1811:                                             ; preds = %1808
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1567) #8
  %1812 = load i32, i32* %1804, align 4
  br label %1813

1813:                                             ; preds = %1808, %1811
  %1814 = phi i32 [ %1809, %1808 ], [ %1812, %1811 ]
  %1815 = load atomic i32, i32* %1800 monotonic, align 4
  %1816 = and i32 %1815, 2
  %1817 = icmp eq i32 %1816, 0
  br i1 %1817, label %1818, label %1820

1818:                                             ; preds = %1813
  %1819 = add i32 %1814, -1
  store i32 %1819, i32* %1804, align 4
  br label %1820

1820:                                             ; preds = %1818, %1813
  %1821 = phi i32 [ %1819, %1818 ], [ %1814, %1813 ]
  %1822 = icmp eq i32 %1821, 0
  br i1 %1822, label %1823, label %1824

1823:                                             ; preds = %1820
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1567) #8
  br label %1824

1824:                                             ; preds = %1798, %1820, %1823
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1521) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1520) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1519) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1518) #8
  br label %1828

1825:                                             ; preds = %1499, %1513, %1447
  %1826 = getelementptr inbounds %"class.WTF::HashMap.386", %"class.WTF::HashMap.386"* %1450, i64 0, i32 0
  %1827 = call { %"struct.WTF::KeyValuePair.389"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_S9_SG_EERmRPS4_EENS_18HashTableAddResultISH_S6_EEOT0_OT1_(%"class.WTF::HashTable.387"* %1826, i64* nonnull dereferenceable(8) %24, %"class.blink::ScriptPromiseResolver"** nonnull dereferenceable(8) %14) #8
  br label %1828

1828:                                             ; preds = %1825, %1824
  %1829 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %1449, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %1829) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1448) #8
  br label %1830

1830:                                             ; preds = %1828, %1446
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %630) #8
  br label %1831

1831:                                             ; preds = %54, %199, %1830, %628
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSD_SE_(%"class.WTF::StringAppend.1890"* noalias sret, %"class.WTF::StringAppend.1891"* dereferenceable(64), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1891", align 8
  %5 = bitcast %"class.WTF::StringAppend.1891"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1891"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #8
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !4

53:                                               ; preds = %44
  tail call void @llvm.trap() #8
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %29
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %59 = bitcast i8** %58 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = bitcast i8** %57 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #8
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !4

80:                                               ; preds = %71
  tail call void @llvm.trap() #8
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %56, %66, %81
  %84 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %4, i64 0, i32 1
  %85 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 1
  %86 = bitcast i8** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast i8** %84 to i64*
  store i64 %87, i64* %88, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %89, label %107, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %108

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i33
  %99 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #8
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !4

104:                                              ; preds = %95
  tail call void @llvm.trap() #8
  unreachable

105:                                              ; preds = %95
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %96, align 4
  br label %108

107:                                              ; preds = %83
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EC2ESA_S3_(%"class.WTF::StringAppend.1890"* %0, %"class.WTF::StringAppend.1891"* nonnull byval(%"class.WTF::StringAppend.1891") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %120

108:                                              ; preds = %90, %105
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EC2ESA_S3_(%"class.WTF::StringAppend.1890"* %0, %"class.WTF::StringAppend.1891"* nonnull byval(%"class.WTF::StringAppend.1891") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %109 = load atomic i32, i32* %91 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %108
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %108
  %117 = phi i32 [ %115, %114 ], [ %113, %108 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %120

120:                                              ; preds = %107, %116, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSC_SD_(%"class.WTF::StringAppend.1891"* noalias sret, %"class.WTF::StringAppend.1892"* dereferenceable(56), i8*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1892", align 8
  %5 = bitcast %"class.WTF::StringAppend.1892"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1892"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #8
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !4

53:                                               ; preds = %44
  tail call void @llvm.trap() #8
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %29
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %4, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 0, i32 0, i32 1
  %59 = bitcast i8** %58 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = bitcast i8** %57 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #8
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !4

80:                                               ; preds = %71
  tail call void @llvm.trap() #8
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %56, %66, %81
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EC2ES9_S2_(%"class.WTF::StringAppend.1891"* %0, %"class.WTF::StringAppend.1892"* nonnull byval(%"class.WTF::StringAppend.1892") align 8 %4, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSB_SC_(%"class.WTF::StringAppend.1892"* noalias sret, %"class.WTF::StringAppend.1893"* dereferenceable(48), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1893", align 8
  %5 = bitcast %"class.WTF::StringAppend.1893"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1893"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #8
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !4

53:                                               ; preds = %44
  tail call void @llvm.trap() #8
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %29, %39, %54
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %4, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %1, i64 0, i32 0, i32 1
  %59 = bitcast i8** %58 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = bitcast i8** %57 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #8
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %68
  tail call void @llvm.trap() #8
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %81

80:                                               ; preds = %56
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EC2ES8_S3_(%"class.WTF::StringAppend.1892"* %0, %"class.WTF::StringAppend.1893"* nonnull byval(%"class.WTF::StringAppend.1893") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %93

81:                                               ; preds = %63, %78
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EC2ES8_S3_(%"class.WTF::StringAppend.1892"* %0, %"class.WTF::StringAppend.1893"* nonnull byval(%"class.WTF::StringAppend.1893") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %81
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %81
  %90 = phi i32 [ %88, %87 ], [ %86, %81 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %93

93:                                               ; preds = %80, %89, %92
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_ED2Ev(%"class.WTF::StringAppend.1890"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #8
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #8
  br label %35

35:                                               ; preds = %34, %31, %18
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #8
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #8
  br label %69

69:                                               ; preds = %52, %65, %68
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"*, %"class.blink::BaseAudioContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContext13resumeContextEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::OfflineAudioContext"*, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #8
  %7 = bitcast i8* %6 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %7, %"class.blink::ScriptState"* %2) #8
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = getelementptr inbounds i8, i8* %6, i64 48
  %13 = bitcast i8* %12 to %"class.blink::ScriptPromise::InternalResolver"*
  %14 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -86, i64 32, i1 false)
  tail call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %13) #8
  %15 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 3
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %3
  %19 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #8
  store i32 11, i32* %4, align 4
  %20 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA54_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, [54 x i8]* nonnull dereferenceable(54) @.str.24) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %7, %"class.blink::DOMException"* %20, i32 2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #8
  br label %38

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0, i32 9
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #8
  store i32 11, i32* %5, align 4
  %28 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA39_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %5, [39 x i8]* nonnull dereferenceable(39) @.str.25) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %7, %"class.blink::DOMException"* %28, i32 2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #8
  br label %38

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %1, i64 0, i32 0, i32 13
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %7, i32 1) #8
  br label %38

34:                                               ; preds = %29
  tail call void @_ZN5blink16BaseAudioContext15SetContextStateENS0_17AudioContextStateE(%"class.blink::BaseAudioContext"* %22, i32 1) #8
  %35 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %22) #8
  %36 = tail call dereferenceable(152) %"class.blink::AudioDestinationHandler"* @_ZNK5blink20AudioDestinationNode26GetAudioDestinationHandlerEv(%"class.blink::AudioDestinationNode"* %35) #8
  %37 = bitcast %"class.blink::AudioDestinationHandler"* %36 to %"class.blink::OfflineAudioDestinationHandler"*
  tail call void @_ZN5blink30OfflineAudioDestinationHandler14StartRenderingEv(%"class.blink::OfflineAudioDestinationHandler"* %37) #8
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %7, i32 1) #8
  br label %38

38:                                               ; preds = %18, %26, %33, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContext19FireCompletionEventEv(%"class.blink::OfflineAudioContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 12, i32 0
  %5 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %4, align 8
  tail call void @_ZN5blink19DeferredTaskHandler20FinishTailProcessingEv(%"class.blink::DeferredTaskHandler"* %5) #8
  tail call void @_ZN5blink16BaseAudioContext15SetContextStateENS0_17AudioContextStateE(%"class.blink::BaseAudioContext"* %3, i32 2) #8
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %3) #8
  %7 = icmp eq %"class.blink::ExecutionContext"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.blink::AudioDestinationNode"* @_ZNK5blink16BaseAudioContext11destinationEv(%"class.blink::BaseAudioContext"* %3) #8
  %10 = getelementptr inbounds %"class.blink::AudioDestinationNode", %"class.blink::AudioDestinationNode"* %9, i64 1
  %11 = bitcast %"class.blink::AudioDestinationNode"* %10 to %"class.blink::AudioBuffer"**
  %12 = load %"class.blink::AudioBuffer"*, %"class.blink::AudioBuffer"** %11, align 8
  %13 = icmp eq %"class.blink::AudioBuffer"* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = tail call %"class.blink::OfflineAudioCompletionEvent"* @_ZN5blink27OfflineAudioCompletionEvent6CreateEPNS_11AudioBufferE(%"class.blink::AudioBuffer"* nonnull %12) #8
  %17 = getelementptr inbounds %"class.blink::OfflineAudioCompletionEvent", %"class.blink::OfflineAudioCompletionEvent"* %16, i64 0, i32 0
  %18 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %15, %"class.blink::Event"* dereferenceable(104) %17) #8
  %19 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %19, align 8
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_11AudioBufferEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %20, %"class.blink::AudioBuffer"* nonnull %12, i32 1) #8
  br label %26

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %22, align 8
  %24 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #8
  store i32 11, i32* %2, align 4
  %25 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA37_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %2, [37 x i8]* nonnull dereferenceable(37) @.str.26) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %23, %"class.blink::DOMException"* %25, i32 2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  br label %26

26:                                               ; preds = %14, %21
  %27 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 3
  store i8 0, i8* %27, align 8
  call void @_ZN5blink16BaseAudioContext26PerformCleanupOnMainThreadEv(%"class.blink::BaseAudioContext"* %3) #8
  br label %28

28:                                               ; preds = %8, %26
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler20FinishTailProcessingEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"*) unnamed_addr #2

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

declare %"class.blink::OfflineAudioCompletionEvent"* @_ZN5blink27OfflineAudioCompletionEvent6CreateEPNS_11AudioBufferE(%"class.blink::AudioBuffer"*) local_unnamed_addr #2

declare void @_ZN5blink16BaseAudioContext26PerformCleanupOnMainThreadEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19OfflineAudioContext20HandlePreRenderTasksEPKNS_15AudioIOPositionEPKNS_19AudioCallbackMetricE(%"class.blink::OfflineAudioContext"*, %"struct.blink::AudioIOPosition"* nocapture readnone, %"struct.blink::AudioCallbackMetric"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker", align 8
  %5 = bitcast %"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker", %"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker"* %4, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %6, align 8
  call void @_ZN5blink19DeferredTaskHandler22OfflineGraphAutoLockerC1EPNS_19OfflineAudioContextE(%"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker"* nonnull %4, %"class.blink::OfflineAudioContext"* %0) #8
  %7 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 10, i32 0, i32 0
  %9 = load %"class.blink::AudioListener"*, %"class.blink::AudioListener"** %8, align 8
  call void @_ZN5blink13AudioListener11UpdateStateEv(%"class.blink::AudioListener"* %9) #8
  %10 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 12, i32 0
  %11 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %10, align 8
  call void @_ZN5blink19DeferredTaskHandler19HandleDeferredTasksEv(%"class.blink::DeferredTaskHandler"* %11) #8
  call void @_ZN5blink16BaseAudioContext26HandleStoppableSourceNodesEv(%"class.blink::BaseAudioContext"* %7) #8
  %12 = call zeroext i1 @_ZN5blink19OfflineAudioContext13ShouldSuspendEv(%"class.blink::OfflineAudioContext"* %0)
  %13 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %6, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret i1 %12
}

declare void @_ZN5blink19DeferredTaskHandler22OfflineGraphAutoLockerC1EPNS_19OfflineAudioContextE(%"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker"*, %"class.blink::OfflineAudioContext"*) unnamed_addr #2

declare void @_ZN5blink13AudioListener11UpdateStateEv(%"class.blink::AudioListener"*) local_unnamed_addr #2

declare void @_ZN5blink19DeferredTaskHandler19HandleDeferredTasksEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #2

declare void @_ZN5blink16BaseAudioContext26HandleStoppableSourceNodesEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19OfflineAudioContext13ShouldSuspendEv(%"class.blink::OfflineAudioContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 21, i32 0
  %3 = load %"class.blink::AudioDestinationHandler"*, %"class.blink::AudioDestinationHandler"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.389"* %7, null
  br i1 %8, label %67, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  %14 = shl i64 %5, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %5, %15
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %7, i64 %34
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %35, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %5
  br i1 %38, label %67, label %39

39:                                               ; preds = %9
  %40 = xor i32 %32, -1
  %41 = lshr i32 %32, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi i64 [ %37, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %34, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq i64 %54, -1
  br i1 %57, label %67, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %13
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %7, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %63, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %5
  br i1 %66, label %67, label %53

67:                                               ; preds = %53, %58, %1, %9
  %68 = phi %"struct.WTF::KeyValuePair.389"* [ null, %1 ], [ %35, %9 ], [ %63, %58 ], [ null, %53 ]
  %69 = icmp ne %"struct.WTF::KeyValuePair.389"* %68, null
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContext21HandlePostRenderTasksEv(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker", align 8
  %3 = bitcast %"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker", %"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker"* %2, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %4, align 8
  call void @_ZN5blink19DeferredTaskHandler22OfflineGraphAutoLockerC1EPNS_19OfflineAudioContextE(%"class.blink::DeferredTaskHandler::OfflineGraphAutoLocker"* nonnull %2, %"class.blink::OfflineAudioContext"* %0) #8
  %5 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 12, i32 0
  %6 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %5, align 8
  call void @_ZN5blink19DeferredTaskHandler16BreakConnectionsEv(%"class.blink::DeferredTaskHandler"* %6) #8
  %7 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %5, align 8
  call void @_ZN5blink19DeferredTaskHandler19HandleDeferredTasksEv(%"class.blink::DeferredTaskHandler"* %7) #8
  %8 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %5, align 8
  call void @_ZN5blink19DeferredTaskHandler35RequestToDeleteHandlersOnMainThreadEv(%"class.blink::DeferredTaskHandler"* %8) #8
  %9 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %4, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  ret void
}

declare void @_ZN5blink19DeferredTaskHandler16BreakConnectionsEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #2

declare void @_ZN5blink19DeferredTaskHandler35RequestToDeleteHandlersOnMainThreadEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #2

declare dereferenceable(152) %"class.blink::AudioDestinationHandler"* @_ZNK5blink20AudioDestinationNode26GetAudioDestinationHandlerEv(%"class.blink::AudioDestinationNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContext26ResolveSuspendOnMainThreadEm(%"class.blink::OfflineAudioContext"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  store i64 %1, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0
  tail call void @_ZN5blink16BaseAudioContext15SetContextStateENS0_17AudioContextStateE(%"class.blink::BaseAudioContext"* %5, i32 0) #8
  %6 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %4, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %7, align 8
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %4, %"class.blink::BaseAudioContext"* %5) #8
  %8 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %68, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::HashMap.386", %"class.WTF::HashMap.386"* %8, i64 0, i32 0
  %14 = call { %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.387"* %13, i64* nonnull dereferenceable(8) %3) #8
  %15 = extractvalue { %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"* } %14, 0
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %16, align 8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %17, i32 1) #8
  %18 = getelementptr inbounds %"class.WTF::HashMap.386", %"class.WTF::HashMap.386"* %8, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair.389"* %23, %15
  br i1 %24, label %68, label %25

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %15, i64 0, i32 0
  store i64 -2, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %15, i64 0, i32 1
  %28 = bitcast %"class.blink::Member.92"* %27 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  %32 = and i32 %31, 2147483647
  %33 = and i32 %30, -2147483648
  %34 = or i32 %32, %33
  store i32 %34, i32* %29, align 8
  %35 = load i32, i32* %9, align 4
  %36 = add i32 %35, -1
  store i32 %36, i32* %9, align 4
  %37 = mul i32 %36, 6
  %38 = load i32, i32* %20, align 8
  %39 = icmp ult i32 %37, %38
  %40 = icmp ugt i32 %38, 8
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %68

42:                                               ; preds = %25
  %43 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %44 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %43, i64 0, i32 1
  %45 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %44) #8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49, !prof !4

47:                                               ; preds = %42
  %48 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %44, i8* %48) #8
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %48, %47 ], [ %45, %42 ]
  %51 = bitcast i8* %50 to %"class.blink::ThreadState"**
  %52 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 6
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 16
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %68, label %60

60:                                               ; preds = %56, %49
  %61 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 13
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = load i32, i32* %20, align 8
  %66 = lshr i32 %65, 1
  %67 = call %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.387"* %13, i32 %66, %"struct.WTF::KeyValuePair.389"* null) #8
  br label %68

68:                                               ; preds = %64, %60, %56, %25, %12, %2
  %69 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %7, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %69) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OfflineAudioContext22RejectPendingResolversEv(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DeferredTaskHandler::GraphAutoLocker", align 8
  %3 = alloca i32, align 4
  %4 = bitcast %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::DeferredTaskHandler::GraphAutoLocker", %"class.blink::DeferredTaskHandler::GraphAutoLocker"* %2, i64 0, i32 0
  store %"class.blink::DeferredTaskHandler"* inttoptr (i64 -6148914691236517206 to %"class.blink::DeferredTaskHandler"*), %"class.blink::DeferredTaskHandler"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0
  call void @_ZN5blink19DeferredTaskHandler15GraphAutoLockerC1EPKNS_16BaseAudioContextE(%"class.blink::DeferredTaskHandler::GraphAutoLocker"* nonnull %2, %"class.blink::BaseAudioContext"* %6) #8
  %7 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::HashMap.386", %"class.WTF::HashMap.386"* %7, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %12, i64 %15
  br i1 %10, label %34, label %17

17:                                               ; preds = %1
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %17, %24
  %20 = phi %"struct.WTF::KeyValuePair.389"* [ %25, %24 ], [ %12, %17 ]
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, -3
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %20, i64 1
  %26 = icmp eq %"struct.WTF::KeyValuePair.389"* %25, %16
  br i1 %26, label %34, label %19

27:                                               ; preds = %19, %17
  %28 = phi %"struct.WTF::KeyValuePair.389"* [ %12, %17 ], [ %20, %19 ]
  %29 = icmp eq %"struct.WTF::KeyValuePair.389"* %28, %16
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = bitcast i32* %3 to i8*
  br label %42

32:                                               ; preds = %42, %57, %54
  %33 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %11, align 8
  br label %34

34:                                               ; preds = %24, %1, %32, %27
  %35 = phi %"struct.WTF::KeyValuePair.389"* [ %33, %32 ], [ %12, %27 ], [ %12, %1 ], [ %12, %24 ]
  %36 = icmp eq %"struct.WTF::KeyValuePair.389"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = bitcast %"struct.WTF::KeyValuePair.389"* %35 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %38) #8
  %39 = bitcast %"class.WTF::HashMap.386"* %7 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %13, align 8
  store i32 0, i32* %8, align 4
  br label %40

40:                                               ; preds = %34, %37
  call void @_ZN5blink16BaseAudioContext37RejectPendingDecodeAudioDataResolversEv(%"class.blink::BaseAudioContext"* %6) #8
  %41 = load %"class.blink::DeferredTaskHandler"*, %"class.blink::DeferredTaskHandler"** %5, align 8
  call void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"* %41) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void

42:                                               ; preds = %30, %57
  %43 = phi %"struct.WTF::KeyValuePair.389"* [ %28, %30 ], [ %50, %57 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %43, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #8
  store i32 11, i32* %3, align 4
  %46 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA28_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %3, [28 x i8]* nonnull dereferenceable(28) @.str.27) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %45, %"class.blink::DOMException"* %46, i32 2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %43, i64 1
  %48 = icmp eq %"struct.WTF::KeyValuePair.389"* %47, %16
  br i1 %48, label %32, label %49

49:                                               ; preds = %42, %54
  %50 = phi %"struct.WTF::KeyValuePair.389"* [ %55, %54 ], [ %47, %42 ]
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %50, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp ugt i64 %52, -3
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %50, i64 1
  %56 = icmp eq %"struct.WTF::KeyValuePair.389"* %55, %16
  br i1 %56, label %32, label %49

57:                                               ; preds = %49
  %58 = icmp eq %"struct.WTF::KeyValuePair.389"* %50, %16
  br i1 %58, label %32, label %42
}

declare void @_ZN5blink16BaseAudioContext37RejectPendingDecodeAudioDataResolversEv(%"class.blink::BaseAudioContext"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19OfflineAudioContext19IsPullingAudioGraphEv(%"class.blink::OfflineAudioContext"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 0, i32 13
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19OfflineAudioContext18HasPendingActivityEv(%"class.blink::OfflineAudioContext"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::OfflineAudioContext", %"class.blink::OfflineAudioContext"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #8
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink19OfflineAudioContext18GetWrapperTypeInfoEv(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink19OfflineAudioContext18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16BaseAudioContext13InterfaceNameEv(%"class.blink::BaseAudioContext"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.29, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.29, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

declare void @_ZN5blink16BaseAudioContext28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE(%"class.blink::BaseAudioContext"*, i32) unnamed_addr #2

declare void @_ZN5blink16BaseAudioContext16ContextDestroyedEv(%"class.blink::BaseAudioContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink19OfflineAudioContext21HasRealtimeConstraintEv(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink16BaseAudioContext14StartRenderingEv(%"class.blink::BaseAudioContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19OfflineAudioContext21NotifySourceNodeStartEv(%"class.blink::OfflineAudioContext"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink16BaseAudioContext15ReportDidCreateEv(%"class.blink::BaseAudioContext"*) unnamed_addr #2

declare void @_ZN5blink16BaseAudioContext21ReportWillBeDestroyedEv(%"class.blink::BaseAudioContext"*) unnamed_addr #2

declare void @_ZN5blink16BaseAudioContext12UninitializeEv(%"class.blink::BaseAudioContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_16BaseAudioContextEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::BaseAudioContext"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16BaseAudioContext19GetExecutionContextEv(%"class.blink::BaseAudioContext"* %3) #8
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #8
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_16BaseAudioContextEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::BaseAudioContext"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to i1 (%"class.blink::BaseAudioContext"*)***
  %5 = load i1 (%"class.blink::BaseAudioContext"*)**, i1 (%"class.blink::BaseAudioContext"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %5, i64 3
  %7 = load i1 (%"class.blink::BaseAudioContext"*)*, i1 (%"class.blink::BaseAudioContext"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::BaseAudioContext"* %3) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn80_N5blink16BaseAudioContext16ContextDestroyedEv(%"class.blink::BaseAudioContext"*) unnamed_addr #0 align 2

declare void @_ZN5blink38ExecutionContextLifecycleStateObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn80_N5blink16BaseAudioContext28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE(%"class.blink::BaseAudioContext"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink16BaseAudioContext15ReportDidCreateEv(%"class.blink::BaseAudioContext"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink16BaseAudioContext21ReportWillBeDestroyedEv(%"class.blink::BaseAudioContext"*) unnamed_addr #0 align 2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptPromise::InternalResolver"*) local_unnamed_addr #2

declare void @_ZN5blink19DeferredTaskHandler6unlockEv(%"class.blink::DeferredTaskHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = alloca %"class.v8::MicrotasksScope", align 8
  %6 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %111

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %111, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %16, align 8
  %18 = icmp eq %"class.blink::V8PerContextData"* %17, null
  br i1 %18, label %111, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %21 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #8
  %22 = icmp eq %"class.blink::ExecutionContext"* %21, null
  br i1 %22, label %111, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #8
  %25 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %24, i64 0, i32 13
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %111

28:                                               ; preds = %23
  store i32 %1, i32* %6, align 8
  %29 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %31 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %33 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %32, i64 0, i32 0
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %33, %"class.v8::Isolate"* %35) #8
  %36 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.v8::Context"*, %"class.v8::Context"** %36, align 8
  %38 = icmp eq %"class.v8::Context"* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %28
  %40 = bitcast %"class.blink::ScriptState"* %32 to %"class.v8::internal::Isolate"**
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, align 8
  %42 = bitcast %"class.v8::Context"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::Context"*
  br label %46

46:                                               ; preds = %28, %39
  %47 = phi %"class.v8::Context"* [ %45, %39 ], [ null, %28 ]
  store %"class.v8::Context"* %47, %"class.v8::Context"** %30, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %47) #8
  %48 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  %49 = load i32, i32* %48, align 4
  store i32 0, i32* %48, align 4
  %50 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %51 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %50, i64 0, i32 0
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %51, align 8
  %53 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #8
  %54 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %5, %"class.v8::Isolate"* %52, i32 1) #8
  %55 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %56 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %57 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %56, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.v8::Context"*, %"class.v8::Context"** %57, align 8
  %59 = icmp eq %"class.v8::Context"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %46
  %61 = bitcast %"class.blink::ScriptState"* %56 to %"class.v8::internal::Isolate"**
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %63 = bitcast %"class.v8::Context"* %58 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %62, i64 %64) #8
  %66 = bitcast i64* %65 to %"class.v8::Context"*
  br label %67

67:                                               ; preds = %46, %60
  %68 = phi %"class.v8::Context"* [ %66, %60 ], [ null, %46 ]
  %69 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %68) #8
  %70 = bitcast %"class.blink::ScriptState"** %10 to i64**
  %71 = load i64*, i64** %70, align 8
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.297", %"class.blink::TraceWrapperV8Reference.297"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %75) #8
  %78 = bitcast %"class.blink::TraceWrapperV8Reference.297"* %55 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %77, %67
  %80 = icmp eq i64 %73, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %73 to i64*
  %83 = bitcast %"class.v8::Isolate"* %52 to %"class.v8::internal::Isolate"*
  %84 = bitcast %"class.blink::TraceWrapperV8Reference.297"* %55 to i64*
  %85 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %83, i64* nonnull %82, i64* %84, i1 zeroext false) #8
  %86 = ptrtoint i64* %85 to i64
  store atomic i64 %86, i64* %84 monotonic, align 8
  br label %87

87:                                               ; preds = %79, %81
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.297"* dereferenceable(8) %55) #8
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #8
  %88 = icmp eq i32* %48, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %87
  store i32 %49, i32* %48, align 4
  br label %90

90:                                               ; preds = %87, %89
  %91 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #8
  %92 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %91) #8
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %109

94:                                               ; preds = %90
  %95 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #8
  %96 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %97 = ptrtoint i64* %3 to i64
  %98 = sub i64 %96, %97
  %99 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %100 = icmp ult i64 %98, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #8
  br i1 %100, label %103, label %101, !prof !3

101:                                              ; preds = %94
  %102 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  br label %103

103:                                              ; preds = %94, %101
  %104 = phi i32* [ %102, %101 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %94 ]
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %103
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %109

108:                                              ; preds = %103
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %109

109:                                              ; preds = %108, %107, %93
  %110 = load %"class.v8::Context"*, %"class.v8::Context"** %30, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %110) #8
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #8
  br label %111

111:                                              ; preds = %23, %15, %9, %19, %2, %109
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #2

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.297"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #8
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #8
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #8
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !4

22:                                               ; preds = %15
  %23 = bitcast %union.anon.1987* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.1987* %16 to %"class.WTF::Vector.1993"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1993"* %30, i16* nonnull dereferenceable(2) %3) #8
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !4

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1988"* %41, i8* nonnull dereferenceable(1) %4) #8
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1993"*, i16* dereferenceable(2)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1993"* %0, i32 %5) #8
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1993"* %0, i32 %5) #8
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1993"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.40, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1993"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1993"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1993"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1993"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1993"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1993"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1994"* %19, i16* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #8
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1994"* %53, i16* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1993"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1993", %"class.WTF::Vector.1993"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.43, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1994"*, i16*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1988"*, i8* dereferenceable(1)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1988"* %0, i32 %5) #8
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1988"* %0, i32 %5) #8
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1988"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.40, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1988"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.1988"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1988"* %0, i32 %27) #8
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1988"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.1988"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.1988"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !4

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #8
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1989"* %18, i8* nonnull %6) #8
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #8
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1989"* %46, i8* %42) #8
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.1988"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.1988", %"class.WTF::Vector.1988"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.43, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #8
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1989"*, i8*) local_unnamed_addr #10 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages12FormatNumberIfEEN3WTF6StringET_(float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.45, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptPromiseResolver"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %91, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.389"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !4

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %52 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %52, i64 3
  %54 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::Visitor"* %0) #8
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %91, label %57

57:                                               ; preds = %47
  %58 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %59

59:                                               ; preds = %88, %57
  %60 = phi i64 [ 0, %57 ], [ %89, %88 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %30, i64 %60, i32 0
  br i1 %55, label %62, label %75

62:                                               ; preds = %59
  %63 = load atomic i64, i64* %61 monotonic, align 8
  %64 = icmp ugt i64 %63, -3
  br i1 %64, label %88, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %30, i64 %60, i32 1
  %67 = bitcast %"class.blink::Member.92"* %66 to i64*
  %68 = load atomic i64, i64* %67 monotonic, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %88, label %70

70:                                               ; preds = %65
  %71 = inttoptr i64 %68 to i8*
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %0, i8* nonnull %71, i8* nonnull %71, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #8
  br label %88

75:                                               ; preds = %59
  %76 = load i64, i64* %61, align 8
  %77 = icmp ugt i64 %76, -3
  br i1 %77, label %88, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %30, i64 %60, i32 1
  %80 = bitcast %"class.blink::Member.92"* %79 to i64*
  %81 = load atomic i64, i64* %80 monotonic, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %88, label %83

83:                                               ; preds = %78
  %84 = inttoptr i64 %81 to i8*
  %85 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %86 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %85, i64 5
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %86, align 8
  tail call void %87(%"class.blink::Visitor"* %0, i8* nonnull %84, i8* nonnull %84, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #8
  br label %88

88:                                               ; preds = %83, %78, %75, %70, %65, %62
  %89 = add nuw nsw i64 %60, 1
  %90 = icmp eq i64 %89, %50
  br i1 %90, label %91, label %59

91:                                               ; preds = %88, %47, %22
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %30, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %45, i8* %46) #8
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2038"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2038"*, i16*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptPromiseResolver"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptPromiseResolver"*)***
  %4 = load void (%"class.blink::ScriptPromiseResolver"*)**, void (%"class.blink::ScriptPromiseResolver"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), i8 1 }
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1887"*, %"class.WTF::StringAppend.1888"* byval(%"class.WTF::StringAppend.1888") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1888"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1887"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !4

50:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.1886"*, %"class.WTF::StringAppend.1887"* byval(%"class.WTF::StringAppend.1887") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1887"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1886"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.1885"*, %"class.WTF::StringAppend.1886"* byval(%"class.WTF::StringAppend.1886") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1886"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1885"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %28, %38, %53
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %0, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %92, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #8
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %70
  tail call void @llvm.trap() #8
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %87 = add i32 %81, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i32 [ %87, %85 ], [ %81, %80 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %92

92:                                               ; preds = %55, %88, %91
  br i1 %37, label %106, label %93

93:                                               ; preds = %92
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %106

106:                                              ; preds = %105, %102, %92
  br i1 %10, label %120, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %120

120:                                              ; preds = %106, %116, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EC2ES8_S2_(%"class.WTF::StringAppend.1884"*, %"class.WTF::StringAppend.1885"* byval(%"class.WTF::StringAppend.1885") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1885"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1884"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %1, i64 0, i32 1, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %84

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #8
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !4

79:                                               ; preds = %70
  tail call void @llvm.trap() #8
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %84

82:                                               ; preds = %55
  %83 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 1
  store i8* %2, i8** %83, align 8
  br label %97

84:                                               ; preds = %65, %80
  %85 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 1
  store i8* %2, i8** %85, align 8
  %86 = load atomic i32, i32* %66 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %97

97:                                               ; preds = %82, %96, %93
  br i1 %37, label %111, label %98

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %111

111:                                              ; preds = %110, %107, %97
  br i1 %10, label %125, label %112

112:                                              ; preds = %111
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %125

125:                                              ; preds = %111, %121, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1884"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1885"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1885"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1884"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1886"* %10, i8* %1) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %10) #8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2038"* nonnull %30, i8* %33) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1885"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1884"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1884", %"class.WTF::StringAppend.1884"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1886"* %10, i16* %1) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %10) #8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2038"* nonnull %30, i16* %33) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1885"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %4, i16* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1885"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1885", %"class.WTF::StringAppend.1885"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1887"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1887"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1887"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1887", %"class.WTF::StringAppend.1887"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1888"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1888"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1888"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1886"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1888"* %10, i8* %1) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1888"* %10) #8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2038"* nonnull %30, i8* %33) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1887"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1888"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2038"* nonnull %34, i8* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1886"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2037"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1888"* %10, i16* %1) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1888"* %10) #8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2038"* nonnull %30, i16* %33) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1887"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %4, i16* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1888"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %3, i16* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2038"* nonnull %34, i16* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %5, i16* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA34_KcEEEPS1_DpOT_(i32* dereferenceable(4), [34 x i8]* dereferenceable(34)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds [34 x i8], [34 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [34 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #11
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::DOMException"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %134

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %134, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %134, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %134, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %134

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #8
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #8
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #8
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #8
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #8
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::DOMException", %"class.blink::DOMException"* %1, i64 0, i32 0
  %58 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.blink::ScriptState"* %58 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::Context"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %66) #8
  %68 = bitcast i64* %67 to %"class.v8::Context"*
  br label %69

69:                                               ; preds = %47, %62
  %70 = phi %"class.v8::Context"* [ %68, %62 ], [ null, %47 ]
  %71 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %70) #8
  %72 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %73 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %72, i64 0, i32 0
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = icmp eq %"class.blink::DOMException"* %1, null
  br i1 %75, label %76, label %79, !prof !4

76:                                               ; preds = %69
  %77 = ptrtoint %"class.v8::Isolate"* %74 to i64
  %78 = add i64 %77, 176
  br label %95

79:                                               ; preds = %69
  %80 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %57, %"class.v8::Isolate"* %74) #8
  %81 = ptrtoint %"class.v8::Object"* %80 to i64
  %82 = icmp eq %"class.v8::Object"* %80, null
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %71) #8
  %85 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %84) #8
  %86 = bitcast %"class.blink::DOMException"* %1 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %87 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %87, i64 7
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %88, align 8
  %90 = call %"class.v8::Value"* %89(%"class.blink::ScriptWrappable"* nonnull %57, %"class.blink::ScriptState"* %85) #8
  %91 = icmp eq %"class.v8::Value"* %90, null
  br i1 %91, label %92, label %93, !prof !4

92:                                               ; preds = %83
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %93

93:                                               ; preds = %92, %83
  %94 = ptrtoint %"class.v8::Value"* %90 to i64
  br label %95

95:                                               ; preds = %76, %79, %93
  %96 = phi i64 [ %78, %76 ], [ %94, %93 ], [ %81, %79 ]
  %97 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.297", %"class.blink::TraceWrapperV8Reference.297"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %98) #8
  %101 = bitcast %"class.blink::TraceWrapperV8Reference.297"* %56 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = icmp eq i64 %96, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %96 to i64*
  %106 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %107 = bitcast %"class.blink::TraceWrapperV8Reference.297"* %56 to i64*
  %108 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %106, i64* nonnull %105, i64* %107, i1 zeroext false) #8
  %109 = ptrtoint i64* %108 to i64
  store atomic i64 %109, i64* %107 monotonic, align 8
  br label %110

110:                                              ; preds = %102, %104
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.297"* dereferenceable(8) %56) #8
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #8
  %111 = icmp eq i32* %49, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %110
  store i32 %50, i32* %49, align 4
  br label %113

113:                                              ; preds = %110, %112
  %114 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %115 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %114) #8
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %132

117:                                              ; preds = %113
  %118 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #8
  %119 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %120 = ptrtoint i64* %4 to i64
  %121 = sub i64 %119, %120
  %122 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %123 = icmp ult i64 %121, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #8
  br i1 %123, label %126, label %124, !prof !3

124:                                              ; preds = %117
  %125 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  br label %126

126:                                              ; preds = %117, %124
  %127 = phi i32* [ %125, %124 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %117 ]
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %132

131:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %132

132:                                              ; preds = %131, %130, %116
  %133 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %133) #8
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  br label %134

134:                                              ; preds = %24, %16, %10, %20, %3, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #8
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #8
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #8
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.106"* %47, %"class.blink::ScriptWrappable"* %0) #8
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #8
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.50, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0)) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.50, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.52, i64 0, i64 0)) #8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.106"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.106", %"class.WTF::HashTable.106"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.106", %"class.WTF::HashTable.106"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_IPKcNS5_6StringEEES8_EEEEEPS1_DpOT_(i32* dereferenceable(4), %"class.WTF::StringAppend.1888"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.1888"* %1)
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #8
  br label %28

28:                                               ; preds = %2, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %45 = getelementptr inbounds i8, i8* %5, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::DOMException"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.1888"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #8
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %8) #8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #8
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1888", %"class.WTF::StringAppend.1888"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1888"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #8
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1888"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #8
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !4

41:                                               ; preds = %34
  call void @llvm.trap() #8
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1888"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #8
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1888"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #8
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %70
  call void @llvm.trap() #8
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #8
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #8
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_INS6_INS6_INS6_INS6_IPKcNS5_6StringEEES8_EES9_EES8_EES9_EES8_EEEEEPS1_DpOT_(i32* dereferenceable(4), %"class.WTF::StringAppend.1884"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1884"* %1)
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #8
  br label %28

28:                                               ; preds = %2, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %45 = getelementptr inbounds i8, i8* %5, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::DOMException"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EC2ES7_S2_(%"class.WTF::StringAppend.1893"*, %"class.WTF::StringAppend.1886"* byval(%"class.WTF::StringAppend.1886") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1886"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1893"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %62

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %62

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %0, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %0, i64 0, i32 1
  store i8* %2, i8** %61, align 8
  br label %80

62:                                               ; preds = %38, %53
  %63 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %0, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %1, i64 0, i32 1
  %65 = bitcast i8** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast i8** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %0, i64 0, i32 1
  store i8* %2, i8** %68, align 8
  %69 = load atomic i32, i32* %39 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %62
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %62
  %77 = phi i32 [ %75, %74 ], [ %73, %62 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %80

80:                                               ; preds = %55, %79, %76
  br i1 %10, label %94, label %81

81:                                               ; preds = %80
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %94

94:                                               ; preds = %80, %90, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EC2ES8_S3_(%"class.WTF::StringAppend.1892"*, %"class.WTF::StringAppend.1893"* byval(%"class.WTF::StringAppend.1893") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1893"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1892"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %28, %38, %53
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %1, i64 0, i32 0, i32 1
  %58 = bitcast i8** %57 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast i8** %56 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %92, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #8
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %70
  tail call void @llvm.trap() #8
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %87 = add i32 %81, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i32 [ %87, %85 ], [ %81, %80 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %92

92:                                               ; preds = %55, %88, %91
  br i1 %37, label %106, label %93

93:                                               ; preds = %92
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %106

106:                                              ; preds = %105, %102, %92
  br i1 %10, label %120, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %120

120:                                              ; preds = %106, %116, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EC2ES9_S2_(%"class.WTF::StringAppend.1891"*, %"class.WTF::StringAppend.1892"* byval(%"class.WTF::StringAppend.1892") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1892"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1891"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 0, i32 0, i32 1
  %58 = bitcast i8** %57 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast i8** %56 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %1, i64 0, i32 1, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %84

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #8
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !4

79:                                               ; preds = %70
  tail call void @llvm.trap() #8
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %84

82:                                               ; preds = %55
  %83 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %0, i64 0, i32 1
  store i8* %2, i8** %83, align 8
  br label %97

84:                                               ; preds = %65, %80
  %85 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %0, i64 0, i32 1
  store i8* %2, i8** %85, align 8
  %86 = load atomic i32, i32* %66 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %97

97:                                               ; preds = %82, %96, %93
  br i1 %37, label %111, label %98

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %111

111:                                              ; preds = %110, %107, %97
  br i1 %10, label %125, label %112

112:                                              ; preds = %111
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %125

125:                                              ; preds = %111, %121, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EC2ESA_S3_(%"class.WTF::StringAppend.1890"*, %"class.WTF::StringAppend.1891"* byval(%"class.WTF::StringAppend.1891") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1891"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1890"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast i8** %57 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast i8** %56 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #8
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !4

79:                                               ; preds = %70
  tail call void @llvm.trap() #8
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %55, %65, %80
  %83 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 1
  %84 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %1, i64 0, i32 1
  %85 = bitcast i8** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast i8** %83 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %88, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %89, label %119, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %107

97:                                               ; preds = %90
  %98 = zext i32 %96 to i33
  %99 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #8
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !4

104:                                              ; preds = %97
  tail call void @llvm.trap() #8
  unreachable

105:                                              ; preds = %97
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %95, align 4
  br label %107

107:                                              ; preds = %90, %105
  %108 = phi i32 [ %106, %105 ], [ %96, %90 ]
  %109 = load atomic i32, i32* %91 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %114 = add i32 %108, -1
  store i32 %114, i32* %113, align 4
  br label %115

115:                                              ; preds = %112, %107
  %116 = phi i32 [ %114, %112 ], [ %108, %107 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %119

119:                                              ; preds = %82, %115, %118
  br i1 %64, label %133, label %120

120:                                              ; preds = %119
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %133

133:                                              ; preds = %132, %129, %119
  br i1 %37, label %147, label %134

134:                                              ; preds = %133
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #8
  br label %147

147:                                              ; preds = %146, %143, %133
  br i1 %10, label %161, label %148

148:                                              ; preds = %147
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %161

161:                                              ; preds = %147, %157, %160
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_INS6_INS6_INS6_INS6_INS6_INS6_INS6_IPKcNS5_6StringEEES8_EES9_EES8_EES8_EES9_EES8_EES9_EES8_EEEEEPS1_DpOT_(i32* dereferenceable(4), %"class.WTF::StringAppend.1889"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1889"* %1)
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #8
  br label %28

28:                                               ; preds = %2, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %45 = getelementptr inbounds i8, i8* %5, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::DOMException"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1889"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2052", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #8
  %12 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %12) #8
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %17 = select i1 %15, %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"* %14
  %18 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #8
  %20 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %20) #8
  %21 = bitcast %"class.WTF::StringTypeAdapter.2052"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2052", %"class.WTF::StringTypeAdapter.2052"* %2, i64 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringAppend.1893"* %23, %"class.WTF::StringAppend.1893"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %27 = call zeroext i1 @_ZNK3WTF17StringTypeAdapterINS_12StringAppendINS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EEE6Is8BitEv(%"class.WTF::StringTypeAdapter.2052"* nonnull %2) #8
  br i1 %27, label %29, label %28

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  br label %36

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %25, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  br i1 %35, label %36, label %37

36:                                               ; preds = %29, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  br label %83

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  br i1 %41, label %83, label %42

42:                                               ; preds = %37
  %43 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %44 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1889"* %0)
  %45 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %44, i8** nonnull dereferenceable(8) %7) #8
  %46 = load i8*, i8** %7, align 8
  %47 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false) #8
  %48 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %48) #8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E7WriteToEPh(%"class.WTF::StringAppend.1890"* %9, i8* %46) #8
  %49 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1890"* %9) #8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %46, i64 %50
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %51) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #8
  %52 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %52, label %124, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %70

60:                                               ; preds = %53
  %61 = zext i32 %59 to i33
  %62 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #8
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !4

67:                                               ; preds = %60
  call void @llvm.trap() #8
  unreachable

68:                                               ; preds = %60
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %58, align 4
  br label %70

70:                                               ; preds = %53, %68
  %71 = phi i32 [ %69, %68 ], [ %59, %53 ]
  %72 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %73 = load atomic i32, i32* %54 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %78 = add i32 %71, -1
  store i32 %78, i32* %77, align 4
  br label %79

79:                                               ; preds = %76, %70
  %80 = phi i32 [ %78, %76 ], [ %71, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %124

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #8
  br label %124

83:                                               ; preds = %37, %36
  %84 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %85 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1889"* %0)
  %86 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %85, i16** nonnull dereferenceable(8) %8) #8
  %87 = load i16*, i16** %8, align 8
  %88 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 16, i1 false) #8
  %89 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %89) #8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E7WriteToEPDs(%"class.WTF::StringAppend.1890"* %9, i16* %87) #8
  %90 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1890"* %9) #8
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i16, i16* %87, i64 %91
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %4, i16* %92) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #8
  %93 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %93, label %124, label %94

94:                                               ; preds = %83
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %111

101:                                              ; preds = %94
  %102 = zext i32 %100 to i33
  %103 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #8
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !4

108:                                              ; preds = %101
  call void @llvm.trap() #8
  unreachable

109:                                              ; preds = %101
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %99, align 4
  br label %111

111:                                              ; preds = %94, %109
  %112 = phi i32 [ %110, %109 ], [ %100, %94 ]
  %113 = ptrtoint %"class.WTF::StringImpl"* %86 to i64
  %114 = load atomic i32, i32* %95 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %119 = add i32 %112, -1
  store i32 %119, i32* %118, align 4
  br label %120

120:                                              ; preds = %117, %111
  %121 = phi i32 [ %119, %117 ], [ %112, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #8
  br label %124

124:                                              ; preds = %123, %120, %83, %82, %79, %42
  %125 = phi i8* [ %43, %42 ], [ %43, %79 ], [ %43, %82 ], [ %84, %83 ], [ %84, %120 ], [ %84, %123 ]
  %126 = phi i64 [ 0, %42 ], [ %72, %79 ], [ %72, %82 ], [ 0, %83 ], [ %113, %120 ], [ %113, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #8
  %127 = inttoptr i64 %126 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %127
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1889"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1889", %"class.WTF::StringAppend.1889"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1890"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1890"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF17StringTypeAdapterINS_12StringAppendINS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EEE6Is8BitEv(%"class.WTF::StringTypeAdapter.2052"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2052", %"class.WTF::StringTypeAdapter.2052"* %0, i64 0, i32 0
  %7 = load %"class.WTF::StringAppend.1893"*, %"class.WTF::StringAppend.1893"** %6, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #8
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %17 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false) #8
  %19 = load i8*, i8** %18, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %19) #8
  %20 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #8
  %22 = load i8*, i8** %21, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %22) #8
  %23 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %27 = select i1 %25, %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8
  br i1 %31, label %39, label %32

32:                                               ; preds = %1
  %33 = icmp eq %"class.WTF::StringImpl"* %15, null
  %34 = select i1 %33, %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"* %15
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 1
  %38 = icmp ne i32 %37, 0
  br label %39

39:                                               ; preds = %1, %32
  %40 = phi i1 [ false, %1 ], [ %38, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1890"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1891"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1891"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1891"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1891", %"class.WTF::StringAppend.1891"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1892"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1892"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1892"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1893"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1893"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1893"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1893", %"class.WTF::StringAppend.1893"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.47, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E7WriteToEPh(%"class.WTF::StringAppend.1890"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #8
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %29) #8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E7WriteToEPh(%"class.WTF::StringAppend.1892"* %26, i8* %1) #8
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1892"* %26) #8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1891"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2038"* nonnull %33, i8* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E7WriteToEPh(%"class.WTF::StringAppend.1892"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #8
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %29) #8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1886"* %26, i8* %1) #8
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %26) #8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1893"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2038"* nonnull %33, i8* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_EES3_E7WriteToEPDs(%"class.WTF::StringAppend.1890"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1890", %"class.WTF::StringAppend.1890"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #8
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %29) #8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E7WriteToEPDs(%"class.WTF::StringAppend.1892"* %26, i16* %1) #8
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1892"* %26) #8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %3, i16* %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1891"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2038"* nonnull %33, i16* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EES3_E7WriteToEPDs(%"class.WTF::StringAppend.1892"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2037", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %21

15:                                               ; preds = %2
  %16 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ null, %13 ], [ %20, %15 ]
  %23 = phi i64 [ %14, %13 ], [ %16, %15 ]
  %24 = phi i32 [ 0, %13 ], [ %18, %15 ]
  %25 = bitcast %"class.WTF::StringTypeAdapter.2037"* %4 to i64*
  store i64 %23, i64* %25, align 8
  store i8* %22, i8** %7, align 8
  store i32 %24, i32* %8, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.1892", %"class.WTF::StringAppend.1892"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false) #8
  %29 = load i8*, i8** %28, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %29) #8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1886"* %26, i16* %1) #8
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %26) #8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %1, i64 %31
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %3, i16* %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #8
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2037", %"class.WTF::StringTypeAdapter.2037"* %4, i64 0, i32 0
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.1893"* %5) #8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2038"* nonnull %33, i16* %36) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeEN3WTF12StringAppendINS6_INS6_INS6_IPKcNS5_6StringEEES8_EES9_EES8_EEEEEPS1_DpOT_(i32* dereferenceable(4), %"class.WTF::StringAppend.1886"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1886"* %1)
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #8
  br label %28

28:                                               ; preds = %2, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %45 = getelementptr inbounds i8, i8* %5, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::DOMException"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.1886"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #8
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #8
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %15) #8
  %16 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #8
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %18) #8
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1886", %"class.WTF::StringAppend.1886"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #8
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.1886"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #8
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !4

56:                                               ; preds = %49
  call void @llvm.trap() #8
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #8
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.1886"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #8
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.1886"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #8
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !4

92:                                               ; preds = %85
  call void @llvm.trap() #8
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #8
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #8
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.389"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_S9_SG_EERmRPS4_EENS_18HashTableAddResultISH_S6_EEOT0_OT1_(%"class.WTF::HashTable.387"*, i64* dereferenceable(8), %"class.blink::ScriptPromiseResolver"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.389"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.387"* %0, %"struct.WTF::KeyValuePair.389"* null)
  %9 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.389"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, -1
  br i1 %41, label %84, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair.389"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair.389"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %145, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -2
  %65 = select i1 %64, %"struct.WTF::KeyValuePair.389"* %58, %"struct.WTF::KeyValuePair.389"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, -1
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair.389"* %65, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %74
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIN5blink6MemberINS7_21ScriptPromiseResolverEEEEEEENS7_13HeapAllocatorENS_12KeyValuePairImSA_EEEEvRT1_(%"struct.WTF::KeyValuePair.389"* nonnull dereferenceable(16) %65) #8
  %77 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  %83 = load i64, i64* %1, align 8
  br label %84

84:                                               ; preds = %10, %74, %76
  %85 = phi i64 [ %83, %76 ], [ %16, %74 ], [ %16, %10 ]
  %86 = phi %"struct.WTF::KeyValuePair.389"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %86, i64 0, i32 0
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %86, i64 0, i32 1
  %89 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %2, align 8
  %90 = ptrtoint %"class.blink::ScriptPromiseResolver"* %89 to i64
  %91 = bitcast %"class.blink::Member.92"* %88 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %84
  %95 = bitcast %"class.blink::ScriptPromiseResolver"* %89 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #8
  br label %97

97:                                               ; preds = %84, %94
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %133, label %100

100:                                              ; preds = %97
  %101 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %102 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %101, i64 0, i32 1
  %103 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %102) #8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %105, label %107, !prof !4

105:                                              ; preds = %100
  %106 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %102, i8* %106) #8
  br label %107

107:                                              ; preds = %105, %100
  %108 = phi i8* [ %106, %105 ], [ %103, %100 ]
  %109 = bitcast i8* %108 to %"class.blink::ThreadState"**
  %110 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %110, i64 0, i32 9
  %112 = load i8, i8* %111, align 1, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %133, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %110, i64 0, i32 13
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 1
  store i64 %117, i64* %115, align 8
  %118 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %110, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %119 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %118, align 8
  %120 = load atomic i64, i64* %91 monotonic, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %130, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %119, i64 0, i32 0, i32 0
  %124 = inttoptr i64 %120 to i8*
  %125 = bitcast %"class.blink::MarkingVisitor"* %119 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %126 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %126, i64 5
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, align 8
  tail call void %128(%"class.blink::Visitor"* %123, i8* nonnull %124, i8* nonnull %124, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #8
  %129 = load i64, i64* %115, align 8
  br label %130

130:                                              ; preds = %122, %114
  %131 = phi i64 [ %117, %114 ], [ %129, %122 ]
  %132 = add i64 %131, -1
  store i64 %132, i64* %115, align 8
  br label %133

133:                                              ; preds = %97, %107, %130
  %134 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %134, align 4
  %137 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 3
  %138 = load i32, i32* %137, align 8
  %139 = add i32 %138, %136
  %140 = shl i32 %139, 1
  %141 = load i32, i32* %12, align 8
  %142 = icmp ult i32 %140, %141
  br i1 %142, label %145, label %143

143:                                              ; preds = %133
  %144 = tail call %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.387"* %0, %"struct.WTF::KeyValuePair.389"* %86)
  br label %145

145:                                              ; preds = %56, %133, %143
  %146 = phi i8 [ 1, %133 ], [ 1, %143 ], [ 0, %56 ]
  %147 = phi %"struct.WTF::KeyValuePair.389"* [ %86, %133 ], [ %144, %143 ], [ %58, %56 ]
  %148 = insertvalue { %"struct.WTF::KeyValuePair.389"*, i8 } undef, %"struct.WTF::KeyValuePair.389"* %147, 0
  %149 = insertvalue { %"struct.WTF::KeyValuePair.389"*, i8 } %148, i8 %146, 1
  ret { %"struct.WTF::KeyValuePair.389"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.387"*, %"struct.WTF::KeyValuePair.389"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.54, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.387"* %0, i32 %32, %"struct.WTF::KeyValuePair.389"* %1)
  ret %"struct.WTF::KeyValuePair.389"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE6RehashEjPS6_(%"class.WTF::HashTable.387"*, i32, %"struct.WTF::KeyValuePair.389"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %9 = call %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.387"* %0, i32 %1, %"struct.WTF::KeyValuePair.389"* %2, i8* nonnull dereferenceable(1) %4)
  %10 = load i8, i8* %4, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %11, label %12, label %32

12:                                               ; preds = %8
  %13 = zext i32 %1 to i64
  %14 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %13) #8
  %15 = bitcast %"class.blink::HeapHashTableBacking"* %14 to %"struct.WTF::KeyValuePair.389"*
  br label %21

16:                                               ; preds = %3
  %17 = zext i32 %1 to i64
  %18 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %17) #8
  %19 = bitcast %"class.blink::HeapHashTableBacking"* %18 to %"struct.WTF::KeyValuePair.389"*
  %20 = icmp eq i32 %1, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %12, %16
  %22 = phi %"struct.WTF::KeyValuePair.389"* [ %15, %12 ], [ %19, %16 ]
  %23 = phi i64 [ %13, %12 ], [ %17, %16 ]
  br label %24

24:                                               ; preds = %21, %24
  %25 = phi i64 [ %27, %24 ], [ 0, %21 ]
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %22, i64 %25
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIN5blink6MemberINS7_21ScriptPromiseResolverEEEEEEENS7_13HeapAllocatorENS_12KeyValuePairImSA_EEEEvRT1_(%"struct.WTF::KeyValuePair.389"* dereferenceable(16) %26) #8
  %27 = add nuw nsw i64 %25, 1
  %28 = icmp eq i64 %27, %23
  br i1 %28, label %29, label %24

29:                                               ; preds = %24, %16
  %30 = phi %"struct.WTF::KeyValuePair.389"* [ %19, %16 ], [ %22, %24 ]
  %31 = call %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSI_(%"class.WTF::HashTable.387"* %0, %"struct.WTF::KeyValuePair.389"* %30, i32 %1, %"struct.WTF::KeyValuePair.389"* %2)
  br label %32

32:                                               ; preds = %8, %29
  %33 = phi %"struct.WTF::KeyValuePair.389"* [ %31, %29 ], [ %9, %8 ]
  ret %"struct.WTF::KeyValuePair.389"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.387"*, i32, %"struct.WTF::KeyValuePair.389"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.54, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i64 0, i64 0)) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.389"* %32, null
  br i1 %33, label %92, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.389"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #8
  br i1 %38, label %39, label %92

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #8
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.389"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi i64 [ %50, %47 ], [ 0, %39 ]
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %45, i64 %48
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIN5blink6MemberINS7_21ScriptPromiseResolverEEEEEEENS7_13HeapAllocatorENS_12KeyValuePairImSA_EEEEvRT1_(%"struct.WTF::KeyValuePair.389"* dereferenceable(16) %49) #8
  %50 = add nuw nsw i64 %48, 1
  %51 = icmp eq i64 %50, %43
  br i1 %51, label %52, label %47

52:                                               ; preds = %47
  br i1 %46, label %53, label %63

53:                                               ; preds = %82, %39, %52
  %54 = phi %"struct.WTF::KeyValuePair.389"* [ null, %52 ], [ null, %39 ], [ %70, %82 ]
  %55 = bitcast %"class.WTF::HashTable.387"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %55, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #8
  br label %61

61:                                               ; preds = %53, %58
  %62 = icmp eq i32 %1, 0
  br i1 %62, label %85, label %87

63:                                               ; preds = %52, %82
  %64 = phi i64 [ %83, %82 ], [ 0, %52 ]
  %65 = phi %"struct.WTF::KeyValuePair.389"* [ %70, %82 ], [ null, %52 ]
  %66 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %31, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %66, i64 %64
  %68 = icmp eq %"struct.WTF::KeyValuePair.389"* %67, %2
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %45, i64 %64
  %70 = select i1 %68, %"struct.WTF::KeyValuePair.389"* %69, %"struct.WTF::KeyValuePair.389"* %65
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %67, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp ugt i64 %72, -3
  br i1 %73, label %74, label %75

74:                                               ; preds = %63
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIN5blink6MemberINS7_21ScriptPromiseResolverEEEEEEENS7_13HeapAllocatorENS_12KeyValuePairImSA_EEEEvRT1_(%"struct.WTF::KeyValuePair.389"* dereferenceable(16) %69) #8
  br label %82

75:                                               ; preds = %63
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %69, i64 0, i32 0
  store i64 %72, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %45, i64 %64, i32 1
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %66, i64 %64, i32 1
  %79 = bitcast %"class.blink::Member.92"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::Member.92"* %77 to i64*
  store i64 %80, i64* %81, align 8
  br label %82

82:                                               ; preds = %74, %75
  %83 = add nuw nsw i64 %64, 1
  %84 = icmp eq i64 %83, %43
  br i1 %84, label %53, label %63

85:                                               ; preds = %87, %61
  %86 = call %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSI_(%"class.WTF::HashTable.387"* %0, %"struct.WTF::KeyValuePair.389"* %42, i32 %1, %"struct.WTF::KeyValuePair.389"* %54)
  br label %92

87:                                               ; preds = %61, %87
  %88 = phi i64 [ %90, %87 ], [ 0, %61 ]
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %42, i64 %88
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIN5blink6MemberINS7_21ScriptPromiseResolverEEEEEEENS7_13HeapAllocatorENS_12KeyValuePairImSA_EEEEvRT1_(%"struct.WTF::KeyValuePair.389"* dereferenceable(16) %89) #8
  %90 = add nuw nsw i64 %88, 1
  %91 = icmp eq i64 %90, %35
  br i1 %91, label %85, label %87

92:                                               ; preds = %34, %30, %85
  %93 = phi %"struct.WTF::KeyValuePair.389"* [ %86, %85 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.389"* %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.389"* @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE8RehashToEPS6_jSI_(%"class.WTF::HashTable.387"*, %"struct.WTF::KeyValuePair.389"*, i32, %"struct.WTF::KeyValuePair.389"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.387", align 8
  %6 = bitcast %"class.WTF::HashTable.387"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.387"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.389"* %1, %"struct.WTF::KeyValuePair.389"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.389"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.389"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %19, align 8
  br label %57

21:                                               ; preds = %81
  %22 = bitcast %"class.WTF::HashTable.387"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %82, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.389"* [ null, %15 ], [ %84, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.387"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #8
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.387"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.387"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #8
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #8
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair.389"* %29

57:                                               ; preds = %18, %81
  %58 = phi i32 [ %13, %18 ], [ %82, %81 ]
  %59 = phi %"struct.WTF::KeyValuePair.389"* [ %20, %18 ], [ %83, %81 ]
  %60 = phi %"struct.WTF::KeyValuePair.389"* [ null, %18 ], [ %84, %81 ]
  %61 = phi i32 [ 0, %18 ], [ %85, %81 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %59, i64 %62, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp ugt i64 %64, -3
  br i1 %65, label %81, label %66

66:                                               ; preds = %57
  %67 = call { %"struct.WTF::KeyValuePair.389"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.387"* nonnull %5, i64* dereferenceable(8) %63) #8
  %68 = extractvalue { %"struct.WTF::KeyValuePair.389"*, i8 } %67, 0
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %68, i64 0, i32 0
  %70 = load i64, i64* %63, align 8
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %68, i64 0, i32 1
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %59, i64 %62, i32 1
  %73 = bitcast %"class.blink::Member.92"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member.92"* %71 to i64*
  store i64 %74, i64* %75, align 8
  %76 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %19, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %76, i64 %62
  %78 = icmp eq %"struct.WTF::KeyValuePair.389"* %77, %3
  %79 = select i1 %78, %"struct.WTF::KeyValuePair.389"* %68, %"struct.WTF::KeyValuePair.389"* %60
  %80 = load i32, i32* %12, align 8
  br label %81

81:                                               ; preds = %57, %66
  %82 = phi i32 [ %58, %57 ], [ %80, %66 ]
  %83 = phi %"struct.WTF::KeyValuePair.389"* [ %59, %57 ], [ %76, %66 ]
  %84 = phi %"struct.WTF::KeyValuePair.389"* [ %60, %57 ], [ %79, %66 ]
  %85 = add i32 %61, 1
  %86 = icmp eq i32 %85, %82
  br i1 %86, label %21, label %57
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIN5blink6MemberINS7_21ScriptPromiseResolverEEEEEEENS7_13HeapAllocatorENS_12KeyValuePairImSA_EEEEvRT1_(%"struct.WTF::KeyValuePair.389"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::Member.92"* %2 to i64*
  %4 = bitcast %"struct.WTF::KeyValuePair.389"* %0 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %4, align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !4

12:                                               ; preds = %7
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %13) #8
  br label %14

14:                                               ; preds = %12, %7
  %15 = phi i8* [ %13, %12 ], [ %10, %7 ]
  %16 = bitcast i8* %15 to %"class.blink::ThreadState"**
  %17 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 9
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 13
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %25, align 8
  %27 = load atomic i64, i64* %3 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %26, i64 0, i32 0, i32 0
  %31 = inttoptr i64 %27 to i8*
  %32 = bitcast %"class.blink::MarkingVisitor"* %26 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %30, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #8
  %36 = load i64, i64* %22, align 8
  br label %37

37:                                               ; preds = %29, %21
  %38 = phi i64 [ %24, %21 ], [ %36, %29 ]
  %39 = add i64 %38, -1
  store i64 %39, i64* %22, align 8
  br label %40

40:                                               ; preds = %1, %14, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.56, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableImNS1_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_29UnsignedWithZeroKeyHashTraitsImEENS1_10HashTraitsIS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableImNS1_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashImEENS1_18HashMapValueTraitsINS1_29UnsignedWithZeroKeyHashTraitsImEENS1_10HashTraitsIS6_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([460 x i8], [460 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableImNS_12KeyValuePairImNS1_6MemberINS1_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS7_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableImNS2_12KeyValuePairImNS_6MemberINS_21ScriptPromiseResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashImEENS2_18HashMapValueTraitsINS2_29UnsignedWithZeroKeyHashTraitsImEENS2_10HashTraitsIS7_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.389"*, i8 } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE16LookupForWritingERKm(%"class.WTF::HashTable.387"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair.389"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, -1
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair.389"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair.389"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair.389"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair.389"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair.389"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, -2
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair.389"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, -1
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair.389"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair.389"*, i8 } undef, %"struct.WTF::KeyValuePair.389"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair.389"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair.389"*, i8 } %83
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA54_KcEEEPS1_DpOT_(i32* dereferenceable(4), [54 x i8]* dereferenceable(54)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds [54 x i8], [54 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [54 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #11
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA39_KcEEEPS1_DpOT_(i32* dereferenceable(4), [39 x i8]* dereferenceable(39)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds [39 x i8], [39 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [39 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #11
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_11AudioBufferEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::AudioBuffer"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %134

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %134, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %134, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %134, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %134

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #8
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #8
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #8
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #8
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #8
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::AudioBuffer", %"class.blink::AudioBuffer"* %1, i64 0, i32 0
  %58 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.blink::ScriptState"* %58 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::Context"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %66) #8
  %68 = bitcast i64* %67 to %"class.v8::Context"*
  br label %69

69:                                               ; preds = %47, %62
  %70 = phi %"class.v8::Context"* [ %68, %62 ], [ null, %47 ]
  %71 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %70) #8
  %72 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %73 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %72, i64 0, i32 0
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = icmp eq %"class.blink::AudioBuffer"* %1, null
  br i1 %75, label %76, label %79, !prof !4

76:                                               ; preds = %69
  %77 = ptrtoint %"class.v8::Isolate"* %74 to i64
  %78 = add i64 %77, 176
  br label %95

79:                                               ; preds = %69
  %80 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %57, %"class.v8::Isolate"* %74) #8
  %81 = ptrtoint %"class.v8::Object"* %80 to i64
  %82 = icmp eq %"class.v8::Object"* %80, null
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %71) #8
  %85 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %84) #8
  %86 = bitcast %"class.blink::AudioBuffer"* %1 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %87 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %87, i64 7
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %88, align 8
  %90 = call %"class.v8::Value"* %89(%"class.blink::ScriptWrappable"* nonnull %57, %"class.blink::ScriptState"* %85) #8
  %91 = icmp eq %"class.v8::Value"* %90, null
  br i1 %91, label %92, label %93, !prof !4

92:                                               ; preds = %83
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %93

93:                                               ; preds = %92, %83
  %94 = ptrtoint %"class.v8::Value"* %90 to i64
  br label %95

95:                                               ; preds = %76, %79, %93
  %96 = phi i64 [ %78, %76 ], [ %94, %93 ], [ %81, %79 ]
  %97 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.297", %"class.blink::TraceWrapperV8Reference.297"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %98) #8
  %101 = bitcast %"class.blink::TraceWrapperV8Reference.297"* %56 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = icmp eq i64 %96, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %96 to i64*
  %106 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %107 = bitcast %"class.blink::TraceWrapperV8Reference.297"* %56 to i64*
  %108 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %106, i64* nonnull %105, i64* %107, i1 zeroext false) #8
  %109 = ptrtoint i64* %108 to i64
  store atomic i64 %109, i64* %107 monotonic, align 8
  br label %110

110:                                              ; preds = %102, %104
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.297"* dereferenceable(8) %56) #8
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #8
  %111 = icmp eq i32* %49, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %110
  store i32 %50, i32* %49, align 4
  br label %113

113:                                              ; preds = %110, %112
  %114 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %115 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %114) #8
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %132

117:                                              ; preds = %113
  %118 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #8
  %119 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %120 = ptrtoint i64* %4 to i64
  %121 = sub i64 %119, %120
  %122 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %123 = icmp ult i64 %121, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #8
  br i1 %123, label %126, label %124, !prof !3

124:                                              ; preds = %117
  %125 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  br label %126

126:                                              ; preds = %117, %124
  %127 = phi i32* [ %125, %124 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %117 ]
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %132

131:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %132

132:                                              ; preds = %131, %130, %116
  %133 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %133) #8
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  br label %134

134:                                              ; preds = %24, %16, %10, %20, %3, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA37_KcEEEPS1_DpOT_(i32* dereferenceable(4), [37 x i8]* dereferenceable(37)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds [37 x i8], [37 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [37 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #11
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"* } @_ZN3WTF9HashTableImNS_12KeyValuePairImN5blink6MemberINS2_21ScriptPromiseResolverEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_NS2_13HeapAllocatorEE4findERKm(%"class.WTF::HashTable.387"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.389"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.387", %"class.WTF::HashTable.387"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %1, align 8
  %12 = shl i64 %11, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %11, %13
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %9, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %4, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %33, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %65, label %37

37:                                               ; preds = %8
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i64 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i64 %52, -1
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %10
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %4, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %11
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %8
  %66 = phi %"struct.WTF::KeyValuePair.389"* [ %33, %8 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair.389"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %4, i64 %69
  br label %74

71:                                               ; preds = %65
  %72 = zext i32 %7 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.389", %"struct.WTF::KeyValuePair.389"* %4, i64 %72
  br label %74

74:                                               ; preds = %68, %71
  %75 = phi %"struct.WTF::KeyValuePair.389"* [ %66, %71 ], [ %70, %68 ]
  %76 = phi %"struct.WTF::KeyValuePair.389"* [ %73, %71 ], [ %70, %68 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"* } undef, %"struct.WTF::KeyValuePair.389"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"* } %77, %"struct.WTF::KeyValuePair.389"* %76, 1
  ret { %"struct.WTF::KeyValuePair.389"*, %"struct.WTF::KeyValuePair.389"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA28_KcEEEPS1_DpOT_(i32* dereferenceable(4), [28 x i8]* dereferenceable(28)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds [28 x i8], [28 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [28 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #11
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!19 = distinct !{!19, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!22 = distinct !{!22, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKSA_SB_: argument 0"}
!28 = distinct !{!28, !"_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKSA_SB_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EES4_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSE_SF_: argument 0"}
!31 = distinct !{!31, !"_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_INS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES3_EES4_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSE_SF_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!34 = distinct !{!34, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!37 = distinct !{!37, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
