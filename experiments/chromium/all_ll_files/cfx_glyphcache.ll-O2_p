; ModuleID = '../../third_party/pdfium/core/fxge/cfx_glyphcache.cpp'
source_filename = "../../third_party/pdfium/core/fxge/cfx_glyphcache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%class.CFX_GlyphCache = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::RetainPtr", %"class.std::__1::map", %"class.std::__1::map.26" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.6", %"class.fxcrt::RetainPtr.10" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.10" = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.fxcrt::Retainable"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.17" }
%"class.std::__1::__tree.17" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__tree_node.163" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.164" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.164" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::tuple", %"class.std::__1::unique_ptr.138" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type <{ %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.134", %"class.std::__1::__tuple_leaf.135", %"class.std::__1::__tuple_leaf.136", %"class.std::__1::__tuple_leaf.137", [3 x i8] }>
%"class.std::__1::__tuple_leaf" = type { i32 }
%"class.std::__1::__tuple_leaf.134" = type { i32 }
%"class.std::__1::__tuple_leaf.135" = type { i32 }
%"class.std::__1::__tuple_leaf.136" = type { i32 }
%"class.std::__1::__tuple_leaf.137" = type { i8 }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %class.CFX_PathData* }
%class.CFX_PathData = type { %"class.std::__1::vector.127" }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.129" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.FX_PATHPOINT* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.157" }
%"struct.std::__1::pair.157" = type { %"class.fxcrt::ByteString", %"class.std::__1::map.144" }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.75" }
%"class.fxcrt::RetainPtr.75" = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::map.144" = type { %"class.std::__1::__tree.145" }
%"class.std::__1::__tree.145" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFX_GlyphBitmap = type { i32, i32, %"class.fxcrt::RetainPtr.40" }
%"class.fxcrt::RetainPtr.40" = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.40", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.50", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.54", %"class.std::__1::unique_ptr.60", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.50", %"class.std::__1::vector.84", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.54" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %struct.FT_StreamRec_* }
%"class.fxcrt::RetainPtr.66" = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.CFX_GlyphCache* }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type <{ %"class.fxcrt::ByteString", i32, i32, i32, i32, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { i8*, i8*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%class.ScopedFontTransform = type { %"class.fxcrt::RetainPtr" }
%class.CFX_GEModule = type { %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.121", i8** }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.CFX_GEModule::PlatformIface"* }
%"class.CFX_GEModule::PlatformIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %class.CFX_FontMgr* }
%class.CFX_FontMgr = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.103", %"class.std::__1::map.109", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %struct.FT_LibraryRec_* }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %class.CFX_FontMapper* }
%class.CFX_FontMapper = type opaque
%"class.std::__1::map.109" = type { %"class.std::__1::__tree.110" }
%"class.std::__1::__tree.110" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.CFX_FontCache* }
%class.CFX_FontCache = type opaque
%struct.CFX_TextRenderOptions = type opaque
%"struct.(anonymous namespace)::UniqueKeyGen" = type { i32, [128 x i8] }
%"class.std::__1::tuple.183" = type { %"struct.std::__1::__tuple_impl.184" }
%"struct.std::__1::__tuple_impl.184" = type { %"class.std::__1::__tuple_leaf.185" }
%"class.std::__1::__tuple_leaf.185" = type { %"class.fxcrt::ByteString"* }
%"class.std::__1::tuple.174" = type { i8 }
%"class.std::__1::__tree_node.193" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.194" }
%"struct.std::__1::__value_type.194" = type { %"struct.std::__1::pair.160" }
%"struct.std::__1::pair.160" = type { i32, %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.CFX_GlyphBitmap* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN5fxcrt10RetainableD2Ev = comdat any

$_ZN5fxcrt10RetainableD0Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE4findIS3_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSS_IJEEEEEENSD_INS_15__tree_iteratorISI_PNS_11__tree_nodeISI_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZTVN5fxcrt10RetainableE = comdat any

@_ZTV14CFX_GlyphCache = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_GlyphCache*)* @_ZN14CFX_GlyphCacheD2Ev to i8*), i8* bitcast (void (%class.CFX_GlyphCache*)* @_ZN14CFX_GlyphCacheD0Ev to i8*)] }, align 8
@_ZTVN5fxcrt10RetainableE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD2Ev to i8*), i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN14CFX_GlyphCacheC1EN5fxcrt9RetainPtrI8CFX_FaceEE = hidden unnamed_addr alias void (%class.CFX_GlyphCache*, %"class.fxcrt::RetainPtr"*), void (%class.CFX_GlyphCache*, %"class.fxcrt::RetainPtr"*)* @_ZN14CFX_GlyphCacheC2EN5fxcrt9RetainPtrI8CFX_FaceEE
@_ZN14CFX_GlyphCacheD1Ev = hidden unnamed_addr alias void (%class.CFX_GlyphCache*), void (%class.CFX_GlyphCache*)* @_ZN14CFX_GlyphCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GlyphCacheC2EN5fxcrt9RetainPtrI8CFX_FaceEE(%class.CFX_GlyphCache*, %"class.fxcrt::RetainPtr"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %5) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV14CFX_GlyphCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFX_Face*, %class.CFX_Face** %7, align 8
  %9 = ptrtoint %class.CFX_Face* %8 to i64
  %10 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = icmp eq %class.CFX_Face* %8, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %8, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %2, %12
  %17 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 3, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node_base"** %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"** %19, align 8
  %21 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node_base"** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %23, align 8
  ret void
}

declare void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GlyphCacheD2Ev(%class.CFX_GlyphCache*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV14CFX_GlyphCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.163"**
  %6 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.27"* %3, %"class.std::__1::__tree_node.163"* %6) #6
  %7 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE(%"class.std::__1::__tree.17"* %7, %"class.std::__1::__tree_node"* %10) #6
  %11 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %11, align 8
  %13 = icmp eq %class.CFX_Face* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %12, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, -1
  store i64 %17, i64* %15, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %12, i64 0, i32 0
  %21 = bitcast %class.CFX_Face* %12 to void (%"class.fxcrt::Retainable"*)***
  %22 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, i64 1
  %24 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, align 8
  tail call void %24(%"class.fxcrt::Retainable"* nonnull %20) #6
  br label %25

25:                                               ; preds = %1, %14, %19
  %26 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %26) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GlyphCacheD0Ev(%class.CFX_GlyphCache*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV14CFX_GlyphCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.163"**
  %6 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.27"* %3, %"class.std::__1::__tree_node.163"* %6) #6
  %7 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE(%"class.std::__1::__tree.17"* %7, %"class.std::__1::__tree_node"* %10) #6
  %11 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %11, align 8
  %13 = icmp eq %class.CFX_Face* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %12, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, -1
  store i64 %17, i64* %15, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %12, i64 0, i32 0
  %21 = bitcast %class.CFX_Face* %12 to void (%"class.fxcrt::Retainable"*)***
  %22 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, i64 1
  %24 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, align 8
  tail call void %24(%"class.fxcrt::Retainable"* nonnull %20) #6
  br label %25

25:                                               ; preds = %1, %14, %19
  %26 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %26) #6
  %27 = bitcast %class.CFX_GlyphCache* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFX_GlyphBitmap* @_ZN14CFX_GlyphCache11RenderGlyphEPK8CFX_FontjbRK10CFX_Matrixii(%class.CFX_GlyphCache* nocapture readonly, %class.CFX_Font*, i32, i1 zeroext, %class.CFX_Matrix* nocapture readonly dereferenceable(24), i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.FT_Matrix_, align 8
  %9 = alloca %class.ScopedFontTransform, align 8
  %10 = alloca %"class.fxcrt::RetainPtr", align 8
  %11 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  %13 = icmp eq %class.CFX_Face* %12, null
  br i1 %13, label %375, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %15, align 8
  %17 = icmp eq %struct.FT_FaceRec_* %16, null
  br i1 %17, label %375, label %18

18:                                               ; preds = %14
  %19 = bitcast %struct.FT_Matrix_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6
  %20 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %8, i64 0, i32 0
  %21 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %8, i64 0, i32 1
  %22 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %8, i64 0, i32 2
  %23 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %8, i64 0, i32 3
  %24 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = fmul float %25, 1.562500e-02
  %27 = fmul float %26, 6.553600e+04
  %28 = fptosi float %27 to i64
  store i64 %28, i64* %20, align 8
  %29 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 2
  %30 = load float, float* %29, align 4
  %31 = fmul float %30, 1.562500e-02
  %32 = fmul float %31, 6.553600e+04
  %33 = fptosi float %32 to i64
  store i64 %33, i64* %21, align 8
  %34 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fmul float %35, 1.562500e-02
  %37 = fmul float %36, 6.553600e+04
  %38 = fptosi float %37 to i64
  store i64 %38, i64* %22, align 8
  %39 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 3
  %40 = load float, float* %39, align 4
  %41 = fmul float %40, 1.562500e-02
  %42 = fmul float %41, 6.553600e+04
  %43 = fptosi float %42 to i64
  store i64 %43, i64* %23, align 8
  %44 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %44, align 8
  %46 = icmp ne %class.CFX_SubstFont* %45, null
  br i1 %46, label %47, label %83

47:                                               ; preds = %18
  %48 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %45, i64 0, i32 5
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp ne i8 %49, 0
  %51 = and i1 %50, %3
  br i1 %51, label %52, label %56

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %45, i64 0, i32 6
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %75, label %60

56:                                               ; preds = %47
  %57 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %45, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %75, label %60

60:                                               ; preds = %52, %56
  %61 = phi i32 [ %58, %56 ], [ -15, %52 ]
  %62 = tail call i32 @_ZN8CFX_Font16GetSkewFromAngleEi(i32 %61) #6
  %63 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 9
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = sext i32 %62 to i64
  br i1 %65, label %71, label %67

67:                                               ; preds = %60
  %68 = mul nsw i64 %43, %66
  %69 = sdiv i64 %68, 100
  %70 = add nsw i64 %69, %38
  store i64 %70, i64* %22, align 8
  br label %75

71:                                               ; preds = %60
  %72 = mul nsw i64 %28, %66
  %73 = sdiv i64 %72, 100
  %74 = sub nsw i64 %33, %73
  store i64 %74, i64* %21, align 8
  br label %75

75:                                               ; preds = %52, %67, %71, %56
  %76 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %45, i64 0, i32 7
  %77 = load i8, i8* %76, align 2, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %44, align 8
  %81 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %80, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  tail call void @_ZNK8CFX_Font14AdjustMMParamsEiii(%class.CFX_Font* %1, i32 %2, i32 %5, i32 %82) #6
  br label %83

83:                                               ; preds = %79, %75, %18
  %84 = phi i1 [ false, %18 ], [ %51, %75 ], [ %51, %79 ]
  %85 = bitcast %class.ScopedFontTransform* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #6
  %86 = getelementptr inbounds %class.ScopedFontTransform, %class.ScopedFontTransform* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_Face* inttoptr (i64 -6148914691236517206 to %class.CFX_Face*), %class.CFX_Face** %86, align 8
  %87 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8, !noalias !3
  %88 = ptrtoint %class.CFX_Face* %87 to i64
  %89 = bitcast %"class.fxcrt::RetainPtr"* %10 to i64*
  store i64 %88, i64* %89, align 8, !alias.scope !3
  %90 = icmp eq %class.CFX_Face* %87, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %87, i64 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8, !noalias !3
  %94 = add nsw i64 %93, 1
  store i64 %94, i64* %92, align 8, !noalias !3
  br label %95

95:                                               ; preds = %83, %91
  call void @_ZN19ScopedFontTransformC1EN5fxcrt9RetainPtrI8CFX_FaceEEP10FT_Matrix_(%class.ScopedFontTransform* nonnull %9, %"class.fxcrt::RetainPtr"* nonnull %10, %struct.FT_Matrix_* nonnull %8) #6
  %96 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %class.CFX_Face*, %class.CFX_Face** %96, align 8
  store %class.CFX_Face* null, %class.CFX_Face** %96, align 8
  %98 = icmp eq %class.CFX_Face* %97, null
  br i1 %98, label %110, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %97, i64 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = add nsw i64 %101, -1
  store i64 %102, i64* %100, align 8
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %99
  %105 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %97, i64 0, i32 0
  %106 = bitcast %class.CFX_Face* %97 to void (%"class.fxcrt::Retainable"*)***
  %107 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %107, i64 1
  %109 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %108, align 8
  call void %109(%"class.fxcrt::Retainable"* nonnull %105) #6
  br label %110

110:                                              ; preds = %95, %99, %104
  %111 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  %112 = icmp eq %class.CFX_Face* %111, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %111, i64 0, i32 2, i32 0, i32 0, i32 0
  %115 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %114, align 8
  %116 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %115, i64 0, i32 2
  br label %117

117:                                              ; preds = %110, %113
  %118 = phi i64* [ %116, %113 ], [ inttoptr (i64 16 to i64*), %110 ]
  %119 = phi %struct.FT_FaceRec_* [ %115, %113 ], [ null, %110 ]
  %120 = load i64, i64* %118, align 8
  %121 = and i64 %120, 8
  %122 = icmp eq i64 %121, 0
  %123 = select i1 %122, i32 138, i32 136
  %124 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %119, i32 %2, i32 %123) #6
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %139, label %126

126:                                              ; preds = %117
  %127 = and i32 %123, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %373

129:                                              ; preds = %126
  %130 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  %131 = icmp eq %class.CFX_Face* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %130, i64 0, i32 2, i32 0, i32 0, i32 0
  %134 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %133, align 8
  br label %135

135:                                              ; preds = %129, %132
  %136 = phi %struct.FT_FaceRec_* [ %134, %132 ], [ null, %129 ]
  %137 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %136, i32 %2, i32 10) #6
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %373

139:                                              ; preds = %135, %117
  br i1 %84, label %143, label %140

140:                                              ; preds = %139
  br i1 %46, label %141, label %188

141:                                              ; preds = %140
  %142 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %45, i64 0, i32 2
  br label %145

143:                                              ; preds = %139
  %144 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %45, i64 0, i32 4
  br i1 %46, label %145, label %188

145:                                              ; preds = %141, %143
  %146 = phi i32* [ %142, %141 ], [ %144, %143 ]
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %45, i64 0, i32 7
  %149 = load i8, i8* %148, align 2, !range !2
  %150 = icmp eq i8 %149, 0
  %151 = icmp sgt i32 %147, 400
  %152 = and i1 %151, %150
  br i1 %152, label %153, label %188

153:                                              ; preds = %145
  %154 = add nsw i32 %147, -400
  %155 = sdiv i32 %154, 10
  %156 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %45, i64 0, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = zext i32 %155 to i64
  %159 = call i32 @_ZN8CFX_Font14GetWeightLevelEim(i32 %157, i64 %158) #6
  %160 = icmp slt i32 %159, 0
  br i1 %160, label %373, label %161

161:                                              ; preds = %153
  %162 = sext i32 %159 to i64
  %163 = load i64, i64* %20, align 8
  %164 = trunc i64 %163 to i32
  %165 = icmp slt i32 %164, 0
  %166 = sub i64 0, %163
  %167 = select i1 %165, i64 %166, i64 %163
  %168 = load i64, i64* %21, align 8
  %169 = trunc i64 %168 to i32
  %170 = icmp slt i32 %169, 0
  %171 = sub i64 0, %168
  %172 = select i1 %170, i64 %171, i64 %168
  %173 = add i64 %172, %167
  %174 = and i64 %173, 4294967295
  %175 = mul nsw i64 %174, %162
  %176 = sdiv i64 %175, 36655
  %177 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  %178 = icmp eq %class.CFX_Face* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %161
  %180 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %177, i64 0, i32 2, i32 0, i32 0, i32 0
  %181 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %180, align 8
  br label %182

182:                                              ; preds = %161, %179
  %183 = phi %struct.FT_FaceRec_* [ %181, %179 ], [ null, %161 ]
  %184 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %183, i64 0, i32 21
  %185 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %184, align 8
  %186 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %185, i64 0, i32 13
  %187 = call i32 @FT_Outline_Embolden(%struct.FT_Outline_* %186, i64 %176) #6
  br label %188

188:                                              ; preds = %140, %182, %145, %143
  %189 = call %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() #6
  %190 = getelementptr inbounds %class.CFX_GEModule, %class.CFX_GEModule* %189, i64 0, i32 1, i32 0, i32 0, i32 0
  %191 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %190, align 8
  %192 = getelementptr inbounds %class.CFX_FontMgr, %class.CFX_FontMgr* %191, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %192, align 8
  %194 = call i32 @FT_Library_SetLcdFilter(%struct.FT_LibraryRec_* %193, i32 1) #6
  %195 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  %196 = icmp eq %class.CFX_Face* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %188
  %198 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %195, i64 0, i32 2, i32 0, i32 0, i32 0
  %199 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %198, align 8
  br label %200

200:                                              ; preds = %188, %197
  %201 = phi %struct.FT_FaceRec_* [ %199, %197 ], [ null, %188 ]
  %202 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %201, i64 0, i32 21
  %203 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %202, align 8
  %204 = call i32 @FT_Render_Glyph(%struct.FT_GlyphSlotRec_* %203, i32 %6) #6
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %373

206:                                              ; preds = %200
  %207 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  %208 = icmp eq %class.CFX_Face* %207, null
  br i1 %208, label %213, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %207, i64 0, i32 2, i32 0, i32 0, i32 0
  %211 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %210, align 8
  %212 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %211, i64 0, i32 21
  br label %213

213:                                              ; preds = %206, %209
  %214 = phi %struct.FT_GlyphSlotRec_** [ %212, %209 ], [ inttoptr (i64 152 to %struct.FT_GlyphSlotRec_**), %206 ]
  %215 = phi %struct.FT_FaceRec_* [ %211, %209 ], [ null, %206 ]
  %216 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %214, align 8
  %217 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %216, i64 0, i32 10, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %215, i64 0, i32 21
  %220 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %219, align 8
  %221 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %220, i64 0, i32 10, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = icmp sgt i32 %218, 2048
  %224 = icmp sgt i32 %222, 2048
  %225 = or i1 %223, %224
  br i1 %225, label %373, label %226

226:                                              ; preds = %213
  br i1 %208, label %231, label %227

227:                                              ; preds = %226
  %228 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %207, i64 0, i32 2, i32 0, i32 0, i32 0
  %229 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %228, align 8
  %230 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %229, i64 0, i32 21
  br label %231

231:                                              ; preds = %226, %227
  %232 = phi %struct.FT_GlyphSlotRec_** [ %230, %227 ], [ inttoptr (i64 152 to %struct.FT_GlyphSlotRec_**), %226 ]
  %233 = phi %struct.FT_FaceRec_* [ %229, %227 ], [ null, %226 ]
  %234 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %232, align 8
  %235 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %234, i64 0, i32 11
  %236 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %233, i64 0, i32 21
  %237 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %236, align 8
  %238 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %237, i64 0, i32 12
  %239 = call i8* @_Znwm(i64 16) #8
  %240 = bitcast i8* %239 to %class.CFX_GlyphBitmap*
  %241 = load i32, i32* %235, align 4
  %242 = load i32, i32* %238, align 4
  call void @_ZN15CFX_GlyphBitmapC1Eii(%class.CFX_GlyphBitmap* nonnull %240, i32 %241, i32 %242) #6
  %243 = ptrtoint i8* %239 to i64
  %244 = getelementptr inbounds i8, i8* %239, i64 8
  %245 = bitcast i8* %244 to %class.CFX_DIBitmap**
  %246 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %245, align 8
  %247 = icmp eq i32 %6, 2
  %248 = select i1 %247, i16 257, i16 264
  %249 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* %246, i32 %218, i32 %222, i16 zeroext %248) #6
  %250 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %245, align 8
  %251 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %250, i64 0, i32 0, i32 4
  %252 = load i32, i32* %251, align 4
  %253 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  %254 = icmp eq %class.CFX_Face* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %231
  %256 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %253, i64 0, i32 2, i32 0, i32 0, i32 0
  %257 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %256, align 8
  br label %258

258:                                              ; preds = %231, %255
  %259 = phi %struct.FT_FaceRec_* [ %257, %255 ], [ null, %231 ]
  %260 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %259, i64 0, i32 21
  %261 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %260, align 8
  %262 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %261, i64 0, i32 10, i32 2
  %263 = load i32, i32* %262, align 8
  %264 = bitcast %class.CFX_DIBitmap* %250 to i8* (%class.CFX_DIBitmap*)***
  %265 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %264, align 8
  %266 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %265, i64 2
  %267 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %266, align 8
  %268 = call i8* %267(%class.CFX_DIBitmap* %250) #6
  %269 = load %class.CFX_Face*, %class.CFX_Face** %11, align 8
  %270 = icmp eq %class.CFX_Face* %269, null
  br i1 %270, label %274, label %271

271:                                              ; preds = %258
  %272 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %269, i64 0, i32 2, i32 0, i32 0, i32 0
  %273 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %272, align 8
  br label %274

274:                                              ; preds = %258, %271
  %275 = phi %struct.FT_FaceRec_* [ %273, %271 ], [ null, %258 ]
  %276 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %275, i64 0, i32 21
  %277 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %276, align 8
  %278 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %277, i64 0, i32 10, i32 3
  %279 = load i8*, i8** %278, align 8
  br i1 %247, label %332, label %280

280:                                              ; preds = %274
  br i1 %270, label %284, label %281

281:                                              ; preds = %280
  %282 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %269, i64 0, i32 2, i32 0, i32 0, i32 0
  %283 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %282, align 8
  br label %284

284:                                              ; preds = %280, %281
  %285 = phi %struct.FT_FaceRec_* [ %283, %281 ], [ null, %280 ]
  %286 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %285, i64 0, i32 21
  %287 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %286, align 8
  %288 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %287, i64 0, i32 10, i32 5
  %289 = load i8, i8* %288, align 2
  %290 = icmp eq i8 %289, 1
  br i1 %290, label %291, label %332

291:                                              ; preds = %284
  %292 = icmp eq i32 %6, 3
  %293 = select i1 %292, i32 3, i32 1
  %294 = icmp sgt i32 %222, 0
  br i1 %294, label %295, label %373

295:                                              ; preds = %291
  %296 = icmp sgt i32 %218, 0
  %297 = zext i32 %293 to i64
  %298 = zext i32 %293 to i64
  %299 = zext i32 %222 to i64
  %300 = zext i32 %218 to i64
  br label %301

301:                                              ; preds = %309, %295
  %302 = phi i64 [ 0, %295 ], [ %310, %309 ]
  %303 = trunc i64 %302 to i32
  %304 = mul i32 %252, %303
  %305 = sext i32 %304 to i64
  br i1 %296, label %306, label %309

306:                                              ; preds = %301
  %307 = trunc i64 %302 to i32
  %308 = mul i32 %263, %307
  br label %312

309:                                              ; preds = %312, %301
  %310 = add nuw nsw i64 %302, 1
  %311 = icmp eq i64 %310, %299
  br i1 %311, label %373, label %301

312:                                              ; preds = %312, %306
  %313 = phi i64 [ 0, %306 ], [ %330, %312 ]
  %314 = phi i32 [ 0, %306 ], [ %329, %312 ]
  %315 = mul nuw nsw i64 %313, %297
  %316 = add nsw i64 %315, %305
  %317 = getelementptr i8, i8* %268, i64 %316
  %318 = lshr i32 %314, 3
  %319 = add nsw i32 %318, %308
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, i8* %279, i64 %320
  %322 = load i8, i8* %321, align 1
  %323 = zext i8 %322 to i32
  %324 = and i32 %314, 7
  %325 = lshr i32 128, %324
  %326 = and i32 %325, %323
  %327 = icmp ne i32 %326, 0
  %328 = sext i1 %327 to i8
  call void @llvm.memset.p0i8.i64(i8* align 1 %317, i8 %328, i64 %298, i1 false)
  %329 = add nuw nsw i32 %314, 1
  %330 = add nuw nsw i64 %313, 1
  %331 = icmp eq i64 %330, %300
  br i1 %331, label %309, label %312

332:                                              ; preds = %274, %284
  %333 = mul nsw i32 %252, %222
  %334 = sext i32 %333 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %268, i8 0, i64 %334, i1 false)
  %335 = icmp slt i32 %263, 0
  %336 = sub nsw i32 0, %263
  %337 = select i1 %335, i32 %336, i32 %263
  %338 = icmp sgt i32 %222, 0
  br i1 %338, label %339, label %373

339:                                              ; preds = %332
  %340 = icmp slt i32 %252, %337
  %341 = select i1 %340, i32 %252, i32 %337
  %342 = sext i32 %341 to i64
  %343 = sext i32 %263 to i64
  %344 = sext i32 %252 to i64
  %345 = zext i32 %222 to i64
  %346 = and i64 %345, 1
  %347 = icmp eq i32 %222, 1
  br i1 %347, label %365, label %348

348:                                              ; preds = %339
  %349 = sub nsw i64 %345, %346
  br label %350

350:                                              ; preds = %350, %348
  %351 = phi i64 [ 0, %348 ], [ %362, %350 ]
  %352 = phi i64 [ %349, %348 ], [ %363, %350 ]
  %353 = mul nsw i64 %351, %344
  %354 = getelementptr inbounds i8, i8* %268, i64 %353
  %355 = mul nsw i64 %351, %343
  %356 = getelementptr inbounds i8, i8* %279, i64 %355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %354, i8* align 1 %356, i64 %342, i1 false)
  %357 = or i64 %351, 1
  %358 = mul nsw i64 %357, %344
  %359 = getelementptr inbounds i8, i8* %268, i64 %358
  %360 = mul nsw i64 %357, %343
  %361 = getelementptr inbounds i8, i8* %279, i64 %360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %359, i8* align 1 %361, i64 %342, i1 false)
  %362 = add nuw nsw i64 %351, 2
  %363 = add i64 %352, -2
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %365, label %350

365:                                              ; preds = %350, %339
  %366 = phi i64 [ 0, %339 ], [ %362, %350 ]
  %367 = icmp eq i64 %346, 0
  br i1 %367, label %373, label %368

368:                                              ; preds = %365
  %369 = mul nsw i64 %366, %344
  %370 = getelementptr inbounds i8, i8* %268, i64 %369
  %371 = mul nsw i64 %366, %343
  %372 = getelementptr inbounds i8, i8* %279, i64 %371
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %370, i8* align 1 %372, i64 %342, i1 false)
  br label %373

373:                                              ; preds = %309, %368, %365, %291, %332, %153, %213, %200, %135, %126
  %374 = phi i64 [ 0, %126 ], [ 0, %135 ], [ 0, %200 ], [ 0, %213 ], [ 0, %153 ], [ %243, %332 ], [ %243, %291 ], [ %243, %365 ], [ %243, %368 ], [ %243, %309 ]
  call void @_ZN19ScopedFontTransformD1Ev(%class.ScopedFontTransform* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6
  br label %375

375:                                              ; preds = %7, %14, %373
  %376 = phi i64 [ %374, %373 ], [ 0, %14 ], [ 0, %7 ]
  %377 = inttoptr i64 %376 to %class.CFX_GlyphBitmap*
  ret %class.CFX_GlyphBitmap* %377
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZN8CFX_Font16GetSkewFromAngleEi(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK8CFX_Font14AdjustMMParamsEiii(%class.CFX_Font*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN19ScopedFontTransformC1EN5fxcrt9RetainPtrI8CFX_FaceEEP10FT_Matrix_(%class.ScopedFontTransform*, %"class.fxcrt::RetainPtr"*, %struct.FT_Matrix_*) unnamed_addr #1

declare i32 @FT_Load_Glyph(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i32 @_ZN8CFX_Font14GetWeightLevelEim(i32, i64) local_unnamed_addr #1

declare i32 @FT_Outline_Embolden(%struct.FT_Outline_*, i64) local_unnamed_addr #1

declare i32 @FT_Library_SetLcdFilter(%struct.FT_LibraryRec_*, i32) local_unnamed_addr #1

declare %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() local_unnamed_addr #1

declare i32 @FT_Render_Glyph(%struct.FT_GlyphSlotRec_*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN19ScopedFontTransformD1Ev(%class.ScopedFontTransform*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFX_PathData* @_ZN14CFX_GlyphCache13LoadGlyphPathEPK8CFX_Fontji(%class.CFX_GlyphCache*, %class.CFX_Font*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 4
  %6 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CFX_Face*, %class.CFX_Face** %6, align 8
  %8 = icmp eq %class.CFX_Face* %7, null
  br i1 %8, label %269, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %10, align 8
  %12 = icmp eq %struct.FT_FaceRec_* %11, null
  %13 = icmp eq i32 %2, -1
  %14 = or i1 %13, %12
  br i1 %14, label %269, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %16, align 8
  %18 = icmp eq %class.CFX_SubstFont* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %17, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %17, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 9
  %25 = load i8, i8* %24, align 1, !range !2
  br label %26

26:                                               ; preds = %15, %19
  %27 = phi i32 [ %21, %19 ], [ 0, %15 ]
  %28 = phi i32 [ %23, %19 ], [ 0, %15 ]
  %29 = phi i8 [ %25, %19 ], [ 0, %15 ]
  %30 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  %34 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  %35 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 4, i32 0
  %36 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %36, i8 -86, i64 20, i1 false)
  store i32 %2, i32* %31, align 4, !alias.scope !6
  store i32 %3, i32* %32, align 4, !alias.scope !6
  store i32 %27, i32* %33, align 4, !alias.scope !6
  store i32 %28, i32* %34, align 4, !alias.scope !6
  store i8 %29, i8* %35, align 4, !alias.scope !6
  %37 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4
  %38 = getelementptr inbounds %"class.std::__1::map.26", %"class.std::__1::map.26"* %37, i64 0, i32 0
  %39 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE4findIS3_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_(%"class.std::__1::__tree.27"* %38, %"class.std::__1::tuple"* nonnull dereferenceable(20) %5) #6
  %40 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %41 = icmp eq %"class.std::__1::__tree_end_node"* %39, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 7
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to %class.CFX_PathData**
  br label %266

45:                                               ; preds = %26
  %46 = call %class.CFX_PathData* @_ZNK8CFX_Font17LoadGlyphPathImplEji(%class.CFX_Font* %1, i32 %2, i32 %3) #6
  %47 = ptrtoint %class.CFX_PathData* %46 to i64
  %48 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node.163"**
  %49 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node.163"* %49, null
  br i1 %50, label %116, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = load i32, i32* %31, align 4
  %54 = load i8, i8* %35, align 4
  %55 = load i32, i32* %32, align 4
  %56 = load i32, i32* %33, align 4
  %57 = load i32, i32* %34, align 4
  br label %58

58:                                               ; preds = %112, %51
  %59 = phi %"class.std::__1::__tree_node.163"* [ %115, %112 ], [ %49, %51 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %114, %112 ], [ %52, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp ult i32 %53, %62
  br i1 %63, label %88, label %64

64:                                               ; preds = %58
  %65 = icmp ult i32 %62, %53
  br i1 %65, label %104, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %55, %68
  br i1 %69, label %88, label %70

70:                                               ; preds = %66
  %71 = icmp slt i32 %68, %55
  br i1 %71, label %104, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %56, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %72
  %77 = icmp slt i32 %74, %56
  br i1 %77, label %104, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %57, %80
  br i1 %81, label %88, label %82

82:                                               ; preds = %78
  %83 = icmp slt i32 %80, %57
  br i1 %83, label %94, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 4, i32 0
  %86 = load i8, i8* %85, align 1, !range !2
  %87 = icmp ult i8 %54, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %84, %78, %72, %66, %58
  %89 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %59, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %112

92:                                               ; preds = %88
  %93 = ptrtoint %"class.std::__1::__tree_node.163"* %59 to i64
  br label %119

94:                                               ; preds = %84, %82
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp slt i32 %96, %57
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = icmp slt i32 %57, %96
  br i1 %99, label %110, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 4, i32 0
  %102 = load i8, i8* %101, align 1, !range !2
  %103 = icmp ult i8 %102, %54
  br i1 %103, label %104, label %110

104:                                              ; preds = %76, %70, %100, %94, %64
  %105 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %59, i64 0, i32 0, i32 1
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = ptrtoint %"class.std::__1::__tree_node.163"* %59 to i64
  br label %119

110:                                              ; preds = %100, %98
  %111 = ptrtoint %"class.std::__1::__tree_node.163"* %59 to i64
  br label %119

112:                                              ; preds = %104, %88
  %113 = phi %"class.std::__1::__tree_node_base"* [ %90, %88 ], [ %106, %104 ]
  %114 = phi %"class.std::__1::__tree_node_base"** [ %89, %88 ], [ %105, %104 ]
  %115 = bitcast %"class.std::__1::__tree_node_base"* %113 to %"class.std::__1::__tree_node.163"*
  br label %58

116:                                              ; preds = %45
  %117 = ptrtoint %"class.std::__1::__tree_end_node"* %39 to i64
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  br label %119

119:                                              ; preds = %92, %108, %110, %116
  %120 = phi i64 [ %117, %116 ], [ %93, %92 ], [ %109, %108 ], [ %111, %110 ]
  %121 = phi %"class.std::__1::__tree_node_base"** [ %118, %116 ], [ %89, %92 ], [ %105, %108 ], [ %60, %110 ]
  %122 = bitcast %"class.std::__1::__tree_node_base"** %121 to %"class.std::__1::__tree_node.163"**
  %123 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node.163"* %123, null
  br i1 %124, label %125, label %151

125:                                              ; preds = %119
  %126 = call i8* @_Znwm(i64 64) #8, !noalias !9
  %127 = getelementptr inbounds i8, i8* %126, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 4 %30, i64 20, i1 false) #6, !noalias !9
  %128 = getelementptr inbounds i8, i8* %126, i64 56
  %129 = bitcast i8* %128 to i64*
  store i64 0, i64* %129, align 8, !noalias !9
  %130 = bitcast i8* %126 to %"class.std::__1::__tree_node.163"*
  %131 = bitcast i8* %126 to %"class.std::__1::__tree_node_base"*
  %132 = getelementptr inbounds i8, i8* %126, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 16, i1 false) #6
  %133 = bitcast i8* %132 to i64*
  store i64 %120, i64* %133, align 8
  %134 = bitcast %"class.std::__1::__tree_node_base"** %121 to i8**
  store i8* %126, i8** %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::map.26", %"class.std::__1::map.26"* %37, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %135, align 8
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %136, i64 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %125
  %141 = ptrtoint %"class.std::__1::__tree_node_base"* %138 to i64
  %142 = bitcast %"class.std::__1::map.26"* %37 to i64*
  store i64 %141, i64* %142, align 8
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %144

144:                                              ; preds = %140, %125
  %145 = phi %"class.std::__1::__tree_node_base"* [ %131, %125 ], [ %143, %140 ]
  %146 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %147, %"class.std::__1::__tree_node_base"* %145) #6
  %148 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 1
  store i64 %150, i64* %148, align 8
  br label %151

151:                                              ; preds = %119, %144
  %152 = phi %"class.std::__1::__tree_node.163"* [ %130, %144 ], [ %123, %119 ]
  %153 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %152, i64 0, i32 1, i32 0, i32 1
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = load %class.CFX_PathData*, %class.CFX_PathData** %154, align 8
  %156 = bitcast %"class.std::__1::unique_ptr.138"* %153 to i64*
  store i64 %47, i64* %156, align 8
  %157 = icmp eq %class.CFX_PathData* %155, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %151
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %155) #6
  %159 = bitcast %class.CFX_PathData* %155 to i8*
  call void @_ZdlPv(i8* %159) #8
  br label %160

160:                                              ; preds = %158, %151
  %161 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %48, align 8
  %162 = icmp eq %"class.std::__1::__tree_node.163"* %161, null
  br i1 %162, label %228, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %165 = load i32, i32* %31, align 4
  %166 = load i8, i8* %35, align 4
  %167 = load i32, i32* %32, align 4
  %168 = load i32, i32* %33, align 4
  %169 = load i32, i32* %34, align 4
  br label %170

170:                                              ; preds = %224, %163
  %171 = phi %"class.std::__1::__tree_node.163"* [ %227, %224 ], [ %161, %163 ]
  %172 = phi %"class.std::__1::__tree_node_base"** [ %226, %224 ], [ %164, %163 ]
  %173 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp ult i32 %165, %174
  br i1 %175, label %200, label %176

176:                                              ; preds = %170
  %177 = icmp ult i32 %174, %165
  br i1 %177, label %216, label %178

178:                                              ; preds = %176
  %179 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp slt i32 %167, %180
  br i1 %181, label %200, label %182

182:                                              ; preds = %178
  %183 = icmp slt i32 %180, %167
  br i1 %183, label %216, label %184

184:                                              ; preds = %182
  %185 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = icmp slt i32 %168, %186
  br i1 %187, label %200, label %188

188:                                              ; preds = %184
  %189 = icmp slt i32 %186, %168
  br i1 %189, label %216, label %190

190:                                              ; preds = %188
  %191 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = icmp slt i32 %169, %192
  br i1 %193, label %200, label %194

194:                                              ; preds = %190
  %195 = icmp slt i32 %192, %169
  br i1 %195, label %206, label %196

196:                                              ; preds = %194
  %197 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 4, i32 0
  %198 = load i8, i8* %197, align 1, !range !2
  %199 = icmp ult i8 %166, %198
  br i1 %199, label %200, label %206

200:                                              ; preds = %196, %190, %184, %178, %170
  %201 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %171, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %201, align 8
  %203 = icmp eq %"class.std::__1::__tree_node_base"* %202, null
  br i1 %203, label %204, label %224

204:                                              ; preds = %200
  %205 = ptrtoint %"class.std::__1::__tree_node.163"* %171 to i64
  br label %231

206:                                              ; preds = %196, %194
  %207 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = icmp slt i32 %208, %169
  br i1 %209, label %216, label %210

210:                                              ; preds = %206
  %211 = icmp slt i32 %169, %208
  br i1 %211, label %222, label %212

212:                                              ; preds = %210
  %213 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 4, i32 0
  %214 = load i8, i8* %213, align 1, !range !2
  %215 = icmp ult i8 %214, %166
  br i1 %215, label %216, label %222

216:                                              ; preds = %188, %182, %212, %206, %176
  %217 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %171, i64 0, i32 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = icmp eq %"class.std::__1::__tree_node_base"* %218, null
  br i1 %219, label %220, label %224

220:                                              ; preds = %216
  %221 = ptrtoint %"class.std::__1::__tree_node.163"* %171 to i64
  br label %231

222:                                              ; preds = %212, %210
  %223 = ptrtoint %"class.std::__1::__tree_node.163"* %171 to i64
  br label %231

224:                                              ; preds = %216, %200
  %225 = phi %"class.std::__1::__tree_node_base"* [ %202, %200 ], [ %218, %216 ]
  %226 = phi %"class.std::__1::__tree_node_base"** [ %201, %200 ], [ %217, %216 ]
  %227 = bitcast %"class.std::__1::__tree_node_base"* %225 to %"class.std::__1::__tree_node.163"*
  br label %170

228:                                              ; preds = %160
  %229 = ptrtoint %"class.std::__1::__tree_end_node"* %39 to i64
  %230 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  br label %231

231:                                              ; preds = %204, %220, %222, %228
  %232 = phi i64 [ %229, %228 ], [ %205, %204 ], [ %221, %220 ], [ %223, %222 ]
  %233 = phi %"class.std::__1::__tree_node_base"** [ %230, %228 ], [ %201, %204 ], [ %217, %220 ], [ %172, %222 ]
  %234 = bitcast %"class.std::__1::__tree_node_base"** %233 to %"class.std::__1::__tree_node.163"**
  %235 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %234, align 8
  %236 = icmp eq %"class.std::__1::__tree_node.163"* %235, null
  br i1 %236, label %237, label %263

237:                                              ; preds = %231
  %238 = call i8* @_Znwm(i64 64) #8, !noalias !12
  %239 = getelementptr inbounds i8, i8* %238, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* nonnull align 4 %30, i64 20, i1 false) #6, !noalias !12
  %240 = getelementptr inbounds i8, i8* %238, i64 56
  %241 = bitcast i8* %240 to i64*
  store i64 0, i64* %241, align 8, !noalias !12
  %242 = bitcast i8* %238 to %"class.std::__1::__tree_node.163"*
  %243 = bitcast i8* %238 to %"class.std::__1::__tree_node_base"*
  %244 = getelementptr inbounds i8, i8* %238, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %238, i8 0, i64 16, i1 false) #6
  %245 = bitcast i8* %244 to i64*
  store i64 %232, i64* %245, align 8
  %246 = bitcast %"class.std::__1::__tree_node_base"** %233 to i8**
  store i8* %238, i8** %246, align 8
  %247 = getelementptr inbounds %"class.std::__1::map.26", %"class.std::__1::map.26"* %37, i64 0, i32 0, i32 0
  %248 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %247, align 8
  %249 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %248, i64 0, i32 0
  %250 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %249, align 8
  %251 = icmp eq %"class.std::__1::__tree_node_base"* %250, null
  br i1 %251, label %256, label %252

252:                                              ; preds = %237
  %253 = ptrtoint %"class.std::__1::__tree_node_base"* %250 to i64
  %254 = bitcast %"class.std::__1::map.26"* %37 to i64*
  store i64 %253, i64* %254, align 8
  %255 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %233, align 8
  br label %256

256:                                              ; preds = %252, %237
  %257 = phi %"class.std::__1::__tree_node_base"* [ %243, %237 ], [ %255, %252 ]
  %258 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %259 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %258, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %259, %"class.std::__1::__tree_node_base"* %257) #6
  %260 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %261 = load i64, i64* %260, align 8
  %262 = add i64 %261, 1
  store i64 %262, i64* %260, align 8
  br label %263

263:                                              ; preds = %231, %256
  %264 = phi %"class.std::__1::__tree_node.163"* [ %242, %256 ], [ %235, %231 ]
  %265 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %264, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %266

266:                                              ; preds = %263, %42
  %267 = phi %class.CFX_PathData** [ %44, %42 ], [ %265, %263 ]
  %268 = load %class.CFX_PathData*, %class.CFX_PathData** %267, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30) #6
  br label %269

269:                                              ; preds = %4, %9, %266
  %270 = phi %class.CFX_PathData* [ %268, %266 ], [ null, %9 ], [ null, %4 ]
  ret %class.CFX_PathData* %270
}

declare %class.CFX_PathData* @_ZNK8CFX_Font17LoadGlyphPathImplEji(%class.CFX_Font*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFX_GlyphBitmap* @_ZN14CFX_GlyphCache15LoadGlyphBitmapEPK8CFX_FontjbRK10CFX_MatrixiiP21CFX_TextRenderOptions(%class.CFX_GlyphCache*, %class.CFX_Font*, i32, i1 zeroext, %class.CFX_Matrix* nocapture readonly dereferenceable(24), i32, i32, %struct.CFX_TextRenderOptions* nocapture readnone) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.(anonymous namespace)::UniqueKeyGen", align 4
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = icmp eq i32 %2, -1
  br i1 %11, label %50, label %12

12:                                               ; preds = %8
  %13 = bitcast %"struct.(anonymous namespace)::UniqueKeyGen"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 132, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 132, i1 false)
  %14 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fmul float %15, 1.000000e+04
  %17 = fptosi float %16 to i32
  %18 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = fmul float %19, 1.000000e+04
  %21 = fptosi float %20 to i32
  %22 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 2
  %23 = load float, float* %22, align 4
  %24 = fmul float %23, 1.000000e+04
  %25 = fptosi float %24 to i32
  %26 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = fmul float %27, 1.000000e+04
  %29 = fptosi float %28 to i32
  %30 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %class.CFX_SubstFont*, %class.CFX_SubstFont** %30, align 8
  %32 = icmp eq %class.CFX_SubstFont* %31, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %12
  %34 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %31, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.CFX_SubstFont, %class.CFX_SubstFont* %31, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %1, i64 0, i32 9
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = zext i8 %39 to i32
  call void (%"struct.(anonymous namespace)::UniqueKeyGen"*, i32, ...) @_ZN12_GLOBAL__N_112UniqueKeyGen8GenerateEiz(%"struct.(anonymous namespace)::UniqueKeyGen"* nonnull %9, i32 9, i32 %17, i32 %21, i32 %25, i32 %29, i32 %5, i32 %6, i32 %35, i32 %37, i32 %40) #6
  br label %42

41:                                               ; preds = %12
  call void (%"struct.(anonymous namespace)::UniqueKeyGen"*, i32, ...) @_ZN12_GLOBAL__N_112UniqueKeyGen8GenerateEiz(%"struct.(anonymous namespace)::UniqueKeyGen"* nonnull %9, i32 6, i32 %17, i32 %21, i32 %25, i32 %29, i32 %5, i32 %6) #6
  br label %42

42:                                               ; preds = %33, %41
  %43 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #6
  %44 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %44, align 8
  %45 = getelementptr inbounds %"struct.(anonymous namespace)::UniqueKeyGen", %"struct.(anonymous namespace)::UniqueKeyGen"* %9, i64 0, i32 1, i64 0
  %46 = getelementptr inbounds %"struct.(anonymous namespace)::UniqueKeyGen", %"struct.(anonymous namespace)::UniqueKeyGen"* %9, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  call void @_ZN5fxcrt10ByteStringC1EPKcm(%"class.fxcrt::ByteString"* nonnull %10, i8* %45, i64 %48) #6
  %49 = call %class.CFX_GlyphBitmap* @_ZN14CFX_GlyphCache17LookUpGlyphBitmapEPK8CFX_FontRK10CFX_MatrixRKN5fxcrt10ByteStringEjbii(%class.CFX_GlyphCache* %0, %class.CFX_Font* %1, %class.CFX_Matrix* dereferenceable(24) %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10, i32 %2, i1 zeroext %3, i32 %5, i32 %6)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #6
  call void @llvm.lifetime.end.p0i8(i64 132, i8* nonnull %13) #6
  br label %50

50:                                               ; preds = %8, %42
  %51 = phi %class.CFX_GlyphBitmap* [ %49, %42 ], [ null, %8 ]
  ret %class.CFX_GlyphBitmap* %51
}

declare void @_ZN5fxcrt10ByteStringC1EPKcm(%"class.fxcrt::ByteString"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFX_GlyphBitmap* @_ZN14CFX_GlyphCache17LookUpGlyphBitmapEPK8CFX_FontRK10CFX_MatrixRKN5fxcrt10ByteStringEjbii(%class.CFX_GlyphCache*, %class.CFX_Font*, %class.CFX_Matrix* nocapture readonly dereferenceable(24), %"class.fxcrt::ByteString"* dereferenceable(8), i32, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::tuple.183", align 8
  %10 = alloca %"class.std::__1::tuple.174", align 1
  %11 = alloca %"class.std::__1::tuple.183", align 8
  %12 = alloca %"class.std::__1::tuple.174", align 1
  %13 = alloca %"class.std::__1::map.144", align 16
  %14 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %8, %18
  %19 = phi %"class.std::__1::__tree_end_node"* [ %28, %18 ], [ %14, %8 ]
  %20 = phi %"class.std::__1::__tree_node"* [ %29, %18 ], [ %16, %8 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringltERKS0_(%"class.fxcrt::ByteString"* %21, %"class.fxcrt::ByteString"* dereferenceable(8) %3) #6
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__tree_node_base"** %23 to %"class.std::__1::__tree_node"**
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node"* %20 to %"class.std::__1::__tree_node"**
  %27 = select i1 %22, %"class.std::__1::__tree_node"** %24, %"class.std::__1::__tree_node"** %26
  %28 = select i1 %22, %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"* %25
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  %30 = icmp eq %"class.std::__1::__tree_node"* %29, null
  br i1 %30, label %31, label %18

31:                                               ; preds = %18
  %32 = icmp eq %"class.std::__1::__tree_end_node"* %28, %14
  br i1 %32, label %37, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 4
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.fxcrt::ByteString"*
  %36 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringltERKS0_(%"class.fxcrt::ByteString"* %3, %"class.fxcrt::ByteString"* dereferenceable(8) %35) #6
  br i1 %36, label %37, label %78

37:                                               ; preds = %33, %31, %8
  %38 = bitcast %"class.std::__1::map.144"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #6
  %39 = getelementptr inbounds %"class.std::__1::map.144", %"class.std::__1::map.144"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::map.144", %"class.std::__1::map.144"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::map.144", %"class.std::__1::map.144"* %13, i64 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %41, align 16
  %43 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %0, i64 0, i32 3, i32 0
  %44 = bitcast %"class.std::__1::tuple.183"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #6
  %45 = getelementptr inbounds %"class.std::__1::tuple.183", %"class.std::__1::tuple.183"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::ByteString"* %3, %"class.fxcrt::ByteString"** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::tuple.174", %"class.std::__1::tuple.174"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #6
  %47 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSS_IJEEEEEENSD_INS_15__tree_iteratorISI_PNS_11__tree_nodeISI_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.17"* %43, %"class.fxcrt::ByteString"* dereferenceable(8) %3, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.183"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.174"* nonnull dereferenceable(1) %12) #6
  %48 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #6
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"class.std::__1::__tree.145"*
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 6
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node.193"**
  %53 = load %"class.std::__1::__tree_node.193"*, %"class.std::__1::__tree_node.193"** %52, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.145"* %50, %"class.std::__1::__tree_node.193"* %53) #6
  %54 = bitcast %"class.std::__1::map.144"* %13 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 16
  %56 = bitcast %"class.std::__1::__tree_end_node"* %49 to <2 x i64>*
  store <2 x i64> %55, <2 x i64>* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::map.144", %"class.std::__1::map.144"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 7
  %59 = bitcast %"class.std::__1::__tree_end_node"* %58 to i64*
  %60 = load i64, i64* %57, align 16
  store i64 %60, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  %62 = extractelement <2 x i64> %55, i32 1
  br i1 %61, label %63, label %66

63:                                               ; preds = %37
  %64 = inttoptr i64 %62 to %"class.std::__1::__tree_node.193"*
  %65 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %65, align 8
  br label %70

66:                                               ; preds = %37
  %67 = inttoptr i64 %62 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %68, align 8
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %41, align 16
  %69 = bitcast %"class.std::__1::__tree_end_node"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #6
  br label %70

70:                                               ; preds = %63, %66
  %71 = phi %"class.std::__1::__tree_node.193"* [ %64, %63 ], [ null, %66 ]
  %72 = getelementptr inbounds %"class.std::__1::map.144", %"class.std::__1::map.144"* %13, i64 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.145"* nonnull %72, %"class.std::__1::__tree_node.193"* %71) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #6
  %73 = bitcast %"class.std::__1::tuple.183"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  %74 = getelementptr inbounds %"class.std::__1::tuple.183", %"class.std::__1::tuple.183"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::ByteString"* %3, %"class.fxcrt::ByteString"** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::tuple.174", %"class.std::__1::tuple.174"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %75) #6
  %76 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSS_IJEEEEEENSD_INS_15__tree_iteratorISI_PNS_11__tree_nodeISI_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.17"* %43, %"class.fxcrt::ByteString"* dereferenceable(8) %3, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.183"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.174"* nonnull dereferenceable(1) %10) #6
  %77 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %76, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %75) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  br label %78

78:                                               ; preds = %33, %70
  %79 = phi %"class.std::__1::__tree_end_node"* [ %77, %70 ], [ %28, %33 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 5
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 6
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node.193"**
  %83 = load %"class.std::__1::__tree_node.193"*, %"class.std::__1::__tree_node.193"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node.193"* %83, null
  br i1 %84, label %110, label %85

85:                                               ; preds = %78, %85
  %86 = phi %"class.std::__1::__tree_end_node"* [ %96, %85 ], [ %81, %78 ]
  %87 = phi %"class.std::__1::__tree_node.193"* [ %97, %85 ], [ %83, %78 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %87, i64 0, i32 1, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp ult i32 %89, %4
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.std::__1::__tree_node_base"** %91 to %"class.std::__1::__tree_node.193"**
  %93 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %87, i64 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::__tree_node.193"* %87 to %"class.std::__1::__tree_node.193"**
  %95 = select i1 %90, %"class.std::__1::__tree_node.193"** %92, %"class.std::__1::__tree_node.193"** %94
  %96 = select i1 %90, %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"* %93
  %97 = load %"class.std::__1::__tree_node.193"*, %"class.std::__1::__tree_node.193"** %95, align 8
  %98 = icmp eq %"class.std::__1::__tree_node.193"* %97, null
  br i1 %98, label %99, label %85

99:                                               ; preds = %85
  %100 = icmp eq %"class.std::__1::__tree_end_node"* %96, %81
  br i1 %100, label %110, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 4
  %103 = bitcast %"class.std::__1::__tree_end_node"* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = icmp ugt i32 %104, %4
  br i1 %105, label %110, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 5
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %class.CFX_GlyphBitmap**
  %109 = load %class.CFX_GlyphBitmap*, %class.CFX_GlyphBitmap** %108, align 8
  br label %188

110:                                              ; preds = %101, %99, %78
  %111 = call %class.CFX_GlyphBitmap* @_ZN14CFX_GlyphCache11RenderGlyphEPK8CFX_FontjbRK10CFX_Matrixii(%class.CFX_GlyphCache* %0, %class.CFX_Font* %1, i32 %4, i1 zeroext %5, %class.CFX_Matrix* dereferenceable(24) %2, i32 %6, i32 %7)
  %112 = ptrtoint %class.CFX_GlyphBitmap* %111 to i64
  %113 = load %"class.std::__1::__tree_node.193"*, %"class.std::__1::__tree_node.193"** %82, align 8
  %114 = icmp eq %"class.std::__1::__tree_node.193"* %113, null
  br i1 %114, label %143, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 6, i32 0
  br label %117

117:                                              ; preds = %139, %115
  %118 = phi %"class.std::__1::__tree_node.193"* [ %142, %139 ], [ %113, %115 ]
  %119 = phi %"class.std::__1::__tree_node_base"** [ %141, %139 ], [ %116, %115 ]
  %120 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %118, i64 0, i32 1, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp ugt i32 %121, %4
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %118, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, null
  br i1 %126, label %127, label %139

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %118, i64 0, i32 0, i32 0
  br label %145

129:                                              ; preds = %117
  %130 = icmp ult i32 %121, %4
  br i1 %130, label %131, label %137

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %118, i64 0, i32 0, i32 1
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %134, label %135, label %139

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %118, i64 0, i32 0, i32 0
  br label %145

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %118, i64 0, i32 0, i32 0
  br label %145

139:                                              ; preds = %131, %123
  %140 = phi %"class.std::__1::__tree_node_base"* [ %125, %123 ], [ %133, %131 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %124, %123 ], [ %132, %131 ]
  %142 = bitcast %"class.std::__1::__tree_node_base"* %140 to %"class.std::__1::__tree_node.193"*
  br label %117

143:                                              ; preds = %110
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  br label %145

145:                                              ; preds = %143, %137, %135, %127
  %146 = phi %"class.std::__1::__tree_end_node"* [ %81, %143 ], [ %128, %127 ], [ %136, %135 ], [ %138, %137 ]
  %147 = phi %"class.std::__1::__tree_node_base"** [ %144, %143 ], [ %124, %127 ], [ %132, %135 ], [ %119, %137 ]
  %148 = bitcast %"class.std::__1::__tree_node_base"** %147 to %"class.std::__1::__tree_node.193"**
  %149 = load %"class.std::__1::__tree_node.193"*, %"class.std::__1::__tree_node.193"** %148, align 8
  %150 = icmp eq %"class.std::__1::__tree_node.193"* %149, null
  br i1 %150, label %151, label %179

151:                                              ; preds = %145
  %152 = call i8* @_Znwm(i64 48) #8, !noalias !15
  %153 = getelementptr inbounds i8, i8* %152, i64 32
  %154 = bitcast i8* %153 to i32*
  store i32 %4, i32* %154, align 8, !noalias !15
  %155 = getelementptr inbounds i8, i8* %152, i64 40
  %156 = bitcast i8* %155 to i64*
  store i64 0, i64* %156, align 8, !noalias !15
  %157 = bitcast i8* %152 to %"class.std::__1::__tree_node.193"*
  %158 = bitcast i8* %152 to %"class.std::__1::__tree_node_base"*
  %159 = getelementptr inbounds i8, i8* %152, i64 16
  %160 = bitcast i8* %159 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %146, %"class.std::__1::__tree_end_node"** %160, align 8
  %161 = bitcast %"class.std::__1::__tree_node_base"** %147 to i8**
  store i8* %152, i8** %161, align 8
  %162 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.std::__1::__tree_end_node"**
  %163 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %162, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, null
  br i1 %166, label %171, label %167

167:                                              ; preds = %151
  %168 = ptrtoint %"class.std::__1::__tree_node_base"* %165 to i64
  %169 = bitcast %"class.std::__1::__tree_end_node"* %80 to i64*
  store i64 %168, i64* %169, align 8
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  br label %171

171:                                              ; preds = %167, %151
  %172 = phi %"class.std::__1::__tree_node_base"* [ %158, %151 ], [ %170, %167 ]
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 6, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %174, %"class.std::__1::__tree_node_base"* %172) #6
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 7
  %176 = bitcast %"class.std::__1::__tree_end_node"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = add i64 %177, 1
  store i64 %178, i64* %176, align 8
  br label %179

179:                                              ; preds = %145, %171
  %180 = phi %"class.std::__1::__tree_node.193"* [ %157, %171 ], [ %149, %145 ]
  %181 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %180, i64 0, i32 1, i32 0, i32 1
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %181, i64 0, i32 0, i32 0, i32 0
  %183 = load %class.CFX_GlyphBitmap*, %class.CFX_GlyphBitmap** %182, align 8
  %184 = bitcast %"class.std::__1::unique_ptr.37"* %181 to i64*
  store i64 %112, i64* %184, align 8
  %185 = icmp eq %class.CFX_GlyphBitmap* %183, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %179
  call void @_ZN15CFX_GlyphBitmapD1Ev(%class.CFX_GlyphBitmap* nonnull %183) #6
  %187 = bitcast %class.CFX_GlyphBitmap* %183 to i8*
  call void @_ZdlPv(i8* %187) #8
  br label %188

188:                                              ; preds = %179, %186, %106
  %189 = phi %class.CFX_GlyphBitmap* [ %109, %106 ], [ %111, %186 ], [ %111, %179 ]
  ret %class.CFX_GlyphBitmap* %189
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CFX_GlyphCache12InitPlatformEv(%class.CFX_GlyphCache* nocapture) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD2Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD0Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.fxcrt::Retainable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112UniqueKeyGen8GenerateEiz(%"struct.(anonymous namespace)::UniqueKeyGen"* nocapture, i32, ...) unnamed_addr #0 align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3
  %8 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %9 = icmp sgt i32 %1, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.(anonymous namespace)::UniqueKeyGen", %"struct.(anonymous namespace)::UniqueKeyGen"* %0, i64 0, i32 1, i64 0
  %12 = bitcast i8* %11 to i32*
  %13 = zext i32 %1 to i64
  %14 = load i32, i32* %5, align 16
  br label %18

15:                                               ; preds = %30, %2
  call void @llvm.va_end(i8* nonnull %4)
  %16 = shl i32 %1, 2
  %17 = getelementptr inbounds %"struct.(anonymous namespace)::UniqueKeyGen", %"struct.(anonymous namespace)::UniqueKeyGen"* %0, i64 0, i32 0
  store i32 %16, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6
  ret void

18:                                               ; preds = %30, %10
  %19 = phi i32 [ %14, %10 ], [ %31, %30 ]
  %20 = phi i64 [ 0, %10 ], [ %36, %30 ]
  %21 = icmp ult i32 %19, 41
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = load i8*, i8** %7, align 16
  %24 = sext i32 %19 to i64
  %25 = getelementptr i8, i8* %23, i64 %24
  %26 = add nuw nsw i32 %19, 8
  store i32 %26, i32* %5, align 16
  br label %30

27:                                               ; preds = %18
  %28 = load i8*, i8** %6, align 8
  %29 = getelementptr i8, i8* %28, i64 8
  store i8* %29, i8** %6, align 8
  br label %30

30:                                               ; preds = %27, %22
  %31 = phi i32 [ %26, %22 ], [ %19, %27 ]
  %32 = phi i8* [ %25, %22 ], [ %28, %27 ]
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds i32, i32* %12, i64 %20
  store i32 %34, i32* %35, align 4
  %36 = add nuw nsw i64 %20, 1
  %37 = icmp eq i64 %36, %13
  br i1 %37, label %15, label %18
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE(%"class.std::__1::__tree.17"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE(%"class.std::__1::__tree.17"* %0, %"class.std::__1::__tree_node"* %6) #6
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE7destroyEPNS_11__tree_nodeISI_PvEE(%"class.std::__1::__tree.17"* %0, %"class.std::__1::__tree_node"* %9) #6
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.193"**
  %13 = load %"class.std::__1::__tree_node.193"*, %"class.std::__1::__tree_node.193"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.145"* %10, %"class.std::__1::__tree_node.193"* %13) #6
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %14) #6
  %15 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %15) #8
  ret void

16:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.27"*, %"class.std::__1::__tree_node.163"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.163"* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.163"* %1 to %"class.std::__1::__tree_node.163"**
  %6 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.27"* %0, %"class.std::__1::__tree_node.163"* %6) #6
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.163"**
  %9 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.27"* %0, %"class.std::__1::__tree_node.163"* %9) #6
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.CFX_PathData*, %class.CFX_PathData** %10, align 8
  store %class.CFX_PathData* null, %class.CFX_PathData** %10, align 8
  %12 = icmp eq %class.CFX_PathData* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %11) #6
  %14 = bitcast %class.CFX_PathData* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %4, %13
  %16 = bitcast %"class.std::__1::__tree_node.163"* %1 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN15CFX_GlyphBitmapD1Ev(%class.CFX_GlyphBitmap*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN15CFX_GlyphBitmapC1Eii(%class.CFX_GlyphBitmap*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE4findIS3_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEERKT_(%"class.std::__1::__tree.27"*, %"class.std::__1::tuple"* dereferenceable(20)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.27", %"class.std::__1::__tree.27"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.163"**
  %5 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.163"* %5, null
  br i1 %6, label %98, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 4, i32 0
  %14 = load i8, i8* %13, align 1
  br label %15

15:                                               ; preds = %56, %7
  %16 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %58, %56 ]
  %17 = phi %"class.std::__1::__tree_node.163"* [ %5, %7 ], [ %59, %56 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp ult i32 %19, %9
  br i1 %20, label %44, label %21

21:                                               ; preds = %15
  %22 = icmp ult i32 %9, %19
  br i1 %22, label %53, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* %10, align 4
  %27 = icmp slt i32 %25, %26
  br i1 %27, label %44, label %28

28:                                               ; preds = %23
  %29 = icmp slt i32 %26, %25
  br i1 %29, label %53, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* %11, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = icmp slt i32 %33, %32
  br i1 %36, label %53, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %12, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = icmp slt i32 %40, %39
  br i1 %43, label %53, label %47

44:                                               ; preds = %37, %30, %23, %15
  %45 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %17, i64 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::__tree_node_base"** %45 to %"class.std::__1::__tree_node.163"**
  br label %56

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 4, i32 0
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = icmp ult i8 %49, %14
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %17, i64 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::__tree_node_base"** %51 to %"class.std::__1::__tree_node.163"**
  br i1 %50, label %56, label %53

53:                                               ; preds = %47, %42, %35, %28, %21
  %54 = bitcast %"class.std::__1::__tree_node.163"* %17 to %"class.std::__1::__tree_node.163"**
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.163", %"class.std::__1::__tree_node.163"* %17, i64 0, i32 0, i32 0
  br label %56

56:                                               ; preds = %53, %47, %44
  %57 = phi %"class.std::__1::__tree_node.163"** [ %54, %53 ], [ %46, %44 ], [ %52, %47 ]
  %58 = phi %"class.std::__1::__tree_end_node"* [ %55, %53 ], [ %16, %44 ], [ %16, %47 ]
  %59 = load %"class.std::__1::__tree_node.163"*, %"class.std::__1::__tree_node.163"** %57, align 8
  %60 = icmp eq %"class.std::__1::__tree_node.163"* %59, null
  br i1 %60, label %61, label %15

61:                                               ; preds = %56
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %58, %3
  br i1 %62, label %98, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 4
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"struct.std::__1::__value_type.164"*
  %66 = bitcast %"class.std::__1::__tree_end_node"* %64 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp ult i32 %9, %67
  br i1 %68, label %98, label %69

69:                                               ; preds = %63
  %70 = icmp ult i32 %67, %9
  br i1 %70, label %99, label %71

71:                                               ; preds = %69
  %72 = load i32, i32* %10, align 4
  %73 = getelementptr inbounds %"struct.std::__1::__value_type.164", %"struct.std::__1::__value_type.164"* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %72, %74
  br i1 %75, label %98, label %76

76:                                               ; preds = %71
  %77 = icmp slt i32 %74, %72
  br i1 %77, label %99, label %78

78:                                               ; preds = %76
  %79 = load i32, i32* %11, align 4
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 5
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %79, %82
  br i1 %83, label %98, label %84

84:                                               ; preds = %78
  %85 = icmp slt i32 %82, %79
  br i1 %85, label %99, label %86

86:                                               ; preds = %84
  %87 = load i32, i32* %12, align 4
  %88 = getelementptr inbounds %"struct.std::__1::__value_type.164", %"struct.std::__1::__value_type.164"* %65, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %87, %89
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = icmp slt i32 %89, %87
  br i1 %92, label %99, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 6
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to i8*
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = icmp ult i8 %14, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %61, %86, %78, %71, %63, %2, %93
  br label %99

99:                                               ; preds = %91, %84, %76, %69, %93, %98
  %100 = phi %"class.std::__1::__tree_end_node"* [ %3, %98 ], [ %58, %93 ], [ %58, %69 ], [ %58, %76 ], [ %58, %84 ], [ %58, %91 ]
  ret %"class.std::__1::__tree_end_node"* %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #2

declare zeroext i1 @_ZNK5fxcrt10ByteStringltERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSS_IJEEEEEENSD_INS_15__tree_iteratorISI_PNS_11__tree_nodeISI_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.17"*, %"class.fxcrt::ByteString"* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.183"* dereferenceable(8), %"class.std::__1::tuple.174"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.17", %"class.std::__1::__tree.17"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.17", %"class.std::__1::__tree.17"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringltERKS0_(%"class.fxcrt::ByteString"* %1, %"class.fxcrt::ByteString"* dereferenceable(8) %15) #6
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringltERKS0_(%"class.fxcrt::ByteString"* %15, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #6
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %75

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 64) #8, !noalias !18
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"class.std::__1::tuple.183", %"class.std::__1::tuple.183"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %48, align 8, !noalias !18
  %50 = bitcast i8* %47 to %"class.fxcrt::ByteString"*
  tail call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* %50, %"class.fxcrt::ByteString"* dereferenceable(8) %49) #6, !noalias !18
  %51 = getelementptr inbounds i8, i8* %46, i64 48
  %52 = getelementptr inbounds i8, i8* %46, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #6, !noalias !18
  %53 = bitcast i8* %52 to i8**
  store i8* %51, i8** %53, align 8, !noalias !18
  %54 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %55 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %56 = getelementptr inbounds i8, i8* %46, i64 16
  %57 = bitcast i8* %56 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %57, align 8
  %58 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree.17", %"class.std::__1::__tree.17"* %0, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %45
  %65 = ptrtoint %"class.std::__1::__tree_node_base"* %62 to i64
  %66 = bitcast %"class.std::__1::__tree.17"* %0 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.std::__1::__tree_node_base"* [ %55, %45 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree.17", %"class.std::__1::__tree.17"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %71, %"class.std::__1::__tree_node_base"* %69) #6
  %72 = getelementptr inbounds %"class.std::__1::__tree.17", %"class.std::__1::__tree.17"* %0, i64 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  br label %75

75:                                               ; preds = %68, %39
  %76 = phi i8 [ 1, %68 ], [ 0, %39 ]
  %77 = phi %"class.std::__1::__tree_node"* [ %54, %68 ], [ %43, %39 ]
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 0, i32 0
  %79 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %78, 0
  %80 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %79, i8 %76, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %80
}

declare void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.145"*, %"class.std::__1::__tree_node.193"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.193"* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.193"* %1 to %"class.std::__1::__tree_node.193"**
  %6 = load %"class.std::__1::__tree_node.193"*, %"class.std::__1::__tree_node.193"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.145"* %0, %"class.std::__1::__tree_node.193"* %6) #6
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.193"**
  %9 = load %"class.std::__1::__tree_node.193"*, %"class.std::__1::__tree_node.193"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.145"* %0, %"class.std::__1::__tree_node.193"* %9) #6
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.193", %"class.std::__1::__tree_node.193"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.CFX_GlyphBitmap*, %class.CFX_GlyphBitmap** %10, align 8
  store %class.CFX_GlyphBitmap* null, %class.CFX_GlyphBitmap** %10, align 8
  %12 = icmp eq %class.CFX_GlyphBitmap* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN15CFX_GlyphBitmapD1Ev(%class.CFX_GlyphBitmap* nonnull %11) #6
  %14 = bitcast %class.CFX_GlyphBitmap* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %4, %13
  %16 = bitcast %"class.std::__1::__tree_node.193"* %1 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %2, %15
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN14CFX_GlyphCache7GetFaceEv: argument 0"}
!5 = distinct !{!5, !"_ZN14CFX_GlyphCache7GetFaceEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__110make_tupleIJRjRiS2_S2_RbEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__110make_tupleIJRjRiS2_S2_RbEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOS6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS2_IJRKS3_EEENS2_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS2_IJRKS3_EEENS2_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS2_IJRKS3_EEENS2_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJjiiibEEENS_10unique_ptrI12CFX_PathDataNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS2_IJRKS3_EEENS2_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSJ_IJEEEEEENS2_INS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeINS_12__value_typeIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS3_EEEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSJ_IJEEEEEENS2_INS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSS_IJEEEEEENS5_INS_11__tree_nodeISI_PvEENS_22__tree_node_destructorINSC_ISZ_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeINS_12__value_typeIN5fxcrt10ByteStringENS_3mapIjNS_10unique_ptrI15CFX_GlyphBitmapNS_14default_deleteIS6_EEEENS_4lessIjEENS_9allocatorINS_4pairIKjS9_EEEEEEEENS_19__map_value_compareIS3_SI_NSA_IS3_EELb1EEENSC_ISI_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSS_IJEEEEEENS5_INS_11__tree_nodeISI_PvEENS_22__tree_node_destructorINSC_ISZ_EEEEEEDpOT_"}
